<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Programovatelný sázecí systém LuaTeX</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Programovatelný sázecí systém LuaTeX</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V&nbsp;dnešním článku se seznámíme s&nbsp;některými základními vlastnostmi sázecího systému nazvaného LuaTeX, což je (poněkud zjednodušeně řečeno) upravená a taktéž vylepšená verze TeXu podporující mj.&nbsp;OpenType fonty a umožňující tvorbu maker v&nbsp;programovacím jazyce Lua.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Programovatelný sázecí systém LuaTeX</a></p>
<p><a href="#k02">2. Z&nbsp;jakého důvodu vlastně LuaTeX vznikl?</a></p>
<p><a href="#k03">3. Původní TeX a jeho systém maker</a></p>
<p><a href="#k04">4. Skriptovací jazyk Lua a LuaTeX</a></p>
<p><a href="#k05">5. Proč zrovna Lua?</a></p>
<p><a href="#k06">6. Příkaz <strong>\directlua</strong></a></p>
<p><a href="#k07">7. První demonstrační příklad &ndash; použití příkazu <strong>\directlua</strong></a></p>
<p><a href="#k08">8. Příkazové závorky <strong>luacode</strong></a></p>
<p><a href="#k09">9. Druhý demonstrační příklad &ndash; použití příkazových závorek <strong>luacode</strong></a></p>
<p><a href="#k10">10. Chování znaku zpětného lomítka</a></p>
<p><a href="#k11">11. Třetí demonstrační příklad &ndash; chování znaku zpětného lomítka</a></p>
<p><a href="#k12">12. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Programovatelný sázecí systém LuaTeX</h2>

<p>Sázecí systém <i>TeX</i> pravděpodobně není nutné čtenářům Roota podrobně
představovat, ostatně vycházel o něm <a
href="https://www.root.cz/serialy/tex-i-pro-vasi-babicku/">samostatný a poměrně
podrobný seriál</a>. Původní Knuthův TeX je sice velmi robustní a taktéž
stabilní sázecí systém, ovšem právě jeho stabilita (de facto zmražení kódu)
způsobuje, že se do TeXu nedají jednoduše přidávat další vlastnosti či
upravovat jeho interní struktury (například způsob kódování znaků; což
v&nbsp;současnosti zabraňuje plnohodnotnému použití Unicode). Taktéž
makrosystém TeXu je pro mnoho uživatelů těžko uchopitelný. Není tedy divu, že
vzniklo hned několik projektů, jejichž snahou bylo zachovat kvality původního
TeXu a jeho algoritmů pro sazbu a na stranu druhou uspokojit nově vznikající
požadavky. Jedná se například o projekty New Typesetting System (NTS, dnes již
prakticky mrtvý), ε-TEX, pdfTEX, Ω (Omega), εχTEX a v&nbsp;neposlední řadě
právě <i>LuaTeX</i>.</p>

<p>Hlavním cílem tvůrců projektu LuaTeX bylo vytvoření takové varianty systému
TeX, v&nbsp;níž by bylo možné ovlivňovat celý průběh sazby dokumentu
s&nbsp;využitím skriptů napsaných v&nbsp;programovacím jazyce Lua. Důležité
přitom je, že ono zmíněné ovlivňování sazby se týká prakticky všech kroků, od
načítání dokumentu, hledání souborů s&nbsp;fonty či expanze TeXových maker až
po modifikování entit a příkazů vkládaných do výsledného souboru PDF. Kromě
toho došlo i k&nbsp;několika dalším podstatným úpravám, které sice LuaTeX
přibližují dnešním požadavkům, ovšem v&nbsp;některých případech mohou způsobit,
že LuaTeX není na 100% zpětně kompatibilní s&nbsp;původním Knuthovým TeXem
(jedná se například o plnohodnotnou podporu Unicode v&nbsp;průběhu celého
zpracování dokumentu, což je vlastnost, která se objevila v&nbsp;jednom
z&nbsp;předchůdců LuaTeXu &ndash; systému Omega). S&nbsp;naprostou většinou
nekompatibilit se však běžní uživatelé nesetkají a i takové rozsáhlé balíčky,
jakým je LaTeX, je možné s&nbsp;LuaTeXem použít.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Z&nbsp;jakého důvodu vlastně LuaTeX vznikl?</h2>

<p>Uživatelé TeXu či jeho pravděpodobně nejznámější nadstavby LaTeXu se nyní
možná ptají, proč vlastně LuaTeX vznikl, když už samotný TeX je programovatelný
na úrovni maker. Ostatně existence samotného LaTeXu ukazuje, do jaké míry je
TeX programovatelný a rozšiřitelný. Ve skutečnosti jsou ovšem možnosti
původního TeXu v&nbsp;této oblasti poněkud omezené, protože s&nbsp;využitím
maker je možné ovlivnit průběh vlastní sazby (makra se zpracovávají po
tokenizaci zdrojových dokumentů), ovšem například manipulaci s&nbsp;fonty či
výstupním formátem nelze jednoduše zařídit (existují pouze specializované
nástroje typu <i>PSTricks</i>, které ovšem předpokládají použití konkrétního
výstupního formátu &ndash; zde konkrétně PostScriptu). Pěkným příkladem, jak
lze využít manipulaci s&nbsp;výstupním formátem (PDF) v&nbsp;LuaTeXu, je přímo
<a href="http://www.luatex.org/svn/trunk/manual/luatex.pdf">dokumentace
k&nbsp;tomuto systému</a>. Pokud si tento dokument zobrazíte stylem
&bdquo;zobraz dvoustranu&ldquo; (<i>view dual</i>) a &bdquo;zobraz celé stránky
&ldquo; (<i>fit page</i>), je při stránkování patrné, jak se symbol Měsíce
v&nbsp;logu jazyka Lua zobrazeného na spodním okraji stránek postupně otáčí
okolo Země.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Původní TeX a jeho systém maker</h2>

<p>I vlastní systém maker TeXu není bez chyby, zejména v&nbsp;porovnání
s&nbsp;moderními skriptovacími jazyky &ndash; nabízí menší flexibilitu
(základní příkazy jsou relativně nízkoúrovňové) a při tvorbě rozsáhlejších
balíčků maker či při současném používání většího množství balíčků lze narazit
na problémy s&nbsp;oddělením jednotlivých modulů (jmenné prostory atd.). Navíc
není prakticky možné odstínit uživatele systému maker (například opět LaTeXu)
od vlastního TeXu, což znamená, že při výskytu nějaké chyby v&nbsp;dokumentu se
mnohdy vypíše interní chybová zpráva TeXu, které uživatel nemusí rozumět (o
tomto problému se <a
href="http://petr.olsak.net/ftp/olsak/bulletin/nolatex.pdf">zmiňuje i Petr
Olšák</a>).</p>

<p>Jen pro ilustraci se podívejme na příklad, jak může vypadat část zdrojového
kódu v&nbsp;TeXu. Nejedná se v&nbsp;žádném případě o zcela nečitelný zápis,
ovšem ke srozumitelnosti zápisu, jaké nabízí moderní skriptovací jazyky typu
Python či Lua, má tento zápis daleko :-):</p>

<pre>
\newcount\licount
\def\li#{\advance\licount by 1 \bgroup\aftergroup\par
  \noindent\llap{\the\licount.\enspace}\ignorespaces\let\next= }
\def\listend{\smallskip\noindent\ignorespaces}
\def\nlist#{\bgroup\licount=0\par\nobreak
  \advance\leftskip by\parindent \aftergroup\listend\let\next= }
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Skriptovací jazyk Lua a LuaTeX</h2>

<p>Namísto (možná marné) snahy o úpravy makrosystému TeXu se autoři LuaTeXu
rozhodli celý původní systém TeX (resp.&nbsp;přesněji řečeno jeho algoritmy)
přepsat takovým způsobem, aby uživatelé mohli ovlivnit sazbu vytvářeného
dokumentu <a
href="http://www.root.cz/serialy/programovaci-jazyk-lua/">v&nbsp;programovacím
jazyku Lua</a>, což je jazyk, který náleží do poměrně rozsáhlé a stále častěji
používané skupiny vysokoúrovňových skriptovacích jazyků, do níž můžeme zařadit
například populární Python, Groovy, Ruby, na síle nabývající JavaScript či dnes
již poněkud méně populární jazyky Perl a Tcl. Tyto programovací jazyky nabízí
vývojářům jednoduchou práci se strukturovanými daty (většinou je použita nějaká
forma asociativního pole &ndash; slovníku), dynamicky typované proměnné,
automatickou správu paměti (garbage collector) a mnohé další vysokoúrovňové
techniky zjednodušující a zrychlující vývoj. Jazyk Lua má navíc velmi
jednoduchou &ndash; a pro mnoho vývojářů důvěrně známou &ndash; syntaxi
inspirovanou Modulou a Pascalem, zatímco sémantika tohoto jazyka se
v&nbsp;mnohém podobá spíše moderním verzím JavaScriptu.</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Proč zrovna Lua?</h2>

<p>V&nbsp;mnoha případech se také využívá další užitečné vlastnosti jazyka Lua
&ndash; celý překladač i interpretr vygenerovaného bajtkódu je možné velmi
snadno zabudovat do jiné aplikace, přičemž se výsledná velikost spustitelného
souboru této aplikace zvětší o cca 70 až 100 kB (popř.&nbsp;lze volat
dynamickou knihovnu o řádově stejné velikosti), což není mnoho, když si
uvědomíme, že dostáváme k dispozici plnohodnotný vysokoúrovňový programovací
jazyk. V&nbsp;případě LuaTexu však pro jazyk Lua (a ne například pro
konkurenční Python) mluví ještě jedna důležitá věc, kterou si blíže osvětlíme
v&nbsp;dalším textu &ndash; zdrojové kódy napsané v&nbsp;jazyku Lua jsou platné
i ve chvíli, kdy &bdquo;zmizí&ldquo; konce řádků, což je přesně situace, která
nastává v&nbsp;LuaTeXu. Samozřejmě najdeme některé výjimky, kdy mají konce
řádku svůj význam, například jednořádkové komentáře, ovšem například
následující dva kódy jsou totožné, a to i přes absenci středníků či jakéhokoli
jiného oddělovače:</p>

<pre>
a=1
b=10
&nbsp;
print(a)
&nbsp;
for i=a,b do
    print(i)
    if i==5 then
        break
    end
end
</pre>

<pre>
a=1 b=10 print(a) for i=a,b do print(i) end
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Příkaz <strong>\directlua</strong></h2>

<p>V&nbsp;LuaTeXu se dokumenty zapisují naprosto stejným způsobem, jako je tomu
v&nbsp;TeXu (popř.&nbsp;v&nbsp;LaTeXu jakožto nadstavbě TeXu). Jedním
z&nbsp;viditelných rozdílů je přímá podpora Unicode, přičemž se předpokládá, že
vstupní soubory budou používat kódování UTF-8. Do LuaTeXu byly přidány nové
příkazy, z&nbsp;nichž důležitý je především příkaz nazvaný
<strong>\directlua</strong>, který umožňuje, aby se do dokumentu zapsal skript
či část skriptu vytvořeného v&nbsp;jazyce Lua. Příkaz
<strong>\directlua</strong> pracuje následujícím způsobem:</p>

<ol>

<li>Text je nejdříve expandován, což znamená, že se zpracují případná TeXovská
makra (skript v&nbsp;Lua tedy už &bdquo;uvidí&ldquo; jejich expandovanou
podobu, ovšem toto chování lze ovlivnit).</li>

<li>Konce řádků jsou převedeny na mezery (pozor tedy na jednořádkové
komentáře zapisované do Lua skriptu).</li>

<li>Posléze je takto zpracovaný text předán interpretru jazyka Lua.</li>

<li>Skript napsaný v&nbsp;jazyce Lua může například tisknout zprávy na
standardní výstup (uloží se do běžného logu), ovlivnit interní datové struktury
LuaTeXu (pro tento účel je však mnohem lepší použít speciální callback funkce
popsané příště) a taktéž použít funkce nazvané <strong>tex.print()</strong> a
<strong>tex.sprint()</strong></li>

<li>Výstup (řetězec) produkovaný funkcemi <strong>tex.print()</strong> a
<strong>tex.sprint()</strong> bude dále zpracován TeXem, protože tento výstup
bude vložen do vstupního bufferu. TeX vlastně nijak nerozpozná, že výstup byl
vytvořen skriptem a nikoli zapsán přímo do vstupního dokumentu.</li>

<li>Každý příkaz <strong>\directlua</strong> je skriptem vykonán samostatně,
což mj.&nbsp;znamená, že skripty mezi sebou nesdílí lokální proměnné.</li>

</ol>

<p>Poznámka: <strong>tex.sprint()</strong> se od <strong>tex.print()</strong>
odlišuje tím, že neignoruje mezery na začátku řetězce a taktéž nepřidává
automaticky příkaz <strong>\endlinechar</strong>.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. První demonstrační příklad &ndash; použití příkazu <strong>\directlua</strong></h2>

<p>Podívejme se nyní na způsob použití výše zmíněného nového příkazu
<strong>\directlua</strong>. Tento příkaz využijeme v&nbsp;jednoduchém
LaTeXovém dokumentu, do něhož je na druhém řádku importován balíček nazvaný
<strong>luacode</strong> (ten zde sice není nutný, ovšem v&nbsp;dalších
příkladech ho využijeme). První volání příkazu <strong>\directlua</strong>
způsobí výpis náhodného čísla vygenerovaného funkcí
<strong>math.random()</strong> do výsledného dokumentu (tato funkce je součástí
standardní knihovny jazyka Lua), druhé volání vypíše do dokumentu hodnotu čísla
&pi; s&nbsp;využitím konstanty <strong>math.pi</strong>, třetí volání vypíše
aktuální datum a čas a konečně čtvrté volání vypíše do výsledného dokumentu
odrážku. Toto volání je nejzajímavější neboť zde můžeme vidět, že se mezi znaky
před a za příkazem <strong>\directlua</strong> nemusí psát mezery (zde je ve
výsledném dokumentu nechceme, ekvivalentem je totiž zápis
<strong>a--b</strong>):</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Random number generator}
&nbsp;
A random number:
\directlua{tex.print(math.random())}
&nbsp;
\section*{$\pi$}
&nbsp;
$\pi = \directlua{tex.print(math.pi)}$
&nbsp;
\section*{Date}
&nbsp;
Date:
\directlua{tex.print(os.date())}
&nbsp;
\section*{Combination}
&nbsp;
a\directlua{tex.print("--")}b
&nbsp;
\end{document}
</pre>

<p>Pro překlad tohoto příkladu použijte následující příkaz (předpokládá se
samozřejmě, že je nainstalován jak LuaTeX, tak i další podpůrné balíčky):</p>

<pre>
lualatex example1.tex
</pre>

<img src="https://i.iinfo.cz/images/34/luatex1-1.png" class="image-257318" alt="&#160;" height="358" width="364" />
<p><i>Obrázek 1: Dokument vygenerovaný prvním demonstračním příkladem.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Příkazové závorky <strong>luacode</strong></h2>

<p>Pro zápis delších skriptů je možné použít i &bdquo;příkazové závorky&ldquo;
<strong>luacode</strong>, které se do zdrojových dokumentů zapisují
následujícím způsobem:</p>

<pre>
\begin{luacode}
    skript v jazyce Lua
    skript v jazyce Lua
    skript v jazyce Lua
\end{luacode}
</pre>

<p>I přesto, že by se mohlo zdát, že skripty zapsané do těchto
&bdquo;závorek&ldquo; jsou čitelnější, je pro delší kódy mnohem výhodnější
spíše zavolat externí skript:</p>

<pre>
\directlua{ dofile('jmeno_souboru.lua')}
</pre>

<p>Přednost tohoto způsobu spočívá v&nbsp;tom, že se nemusí složitě řešit
zpracování speciálních znaků typu zpětného lomítka, znaku pro procenta atd.</p>

<p>Další způsob spočívá v&nbsp;použití &bdquo;příkazových závorek&ldquo;
<strong>luacode*</strong>:</p>

<pre>
\begin{luacode*}
    skript v jazyce Lua
    skript v jazyce Lua
    skript v jazyce Lua
\end{luacode*}
</pre>

<p>Zde nedochází k&nbsp;případné expanzi TeXovských maker, čehož je možné
v&nbsp;některých případech využít (přesné rozdíly mezi <strong>luacode</strong>
a <strong>luacode*</strong> si vysvětlíme příště).</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Druhý demonstrační příklad &ndash; použití příkazových závorek <strong>luacode</strong></h2>

<p>Podívejme se nyní na způsob použití <strong>\begin{luacode}</strong> a
<strong>\end{luacode}</strong>. Je to ve skutečnosti velmi jednoduché (pokud
ovšem nedojde na makra :-), jak to ostatně ukazuje zdrojový kód tohoto
příkladu:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Random number generator}
&nbsp;
A random number:
\begin{luacode}
tex.print(math.random())
\end{luacode}
&nbsp;
\section*{Date}
&nbsp;
Date:
\begin{luacode}
tex.print(os.date())
\end{luacode}
&nbsp;
\end{document}
</pre>

<img src="https://i.iinfo.cz/images/34/luatex1-2.png" class="image-257319" alt="&#160;" height="216" width="403" />
<p><i>Obrázek 2: Dokument vygenerovaný druhým demonstračním příkladem.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Chování znaku zpětného lomítka</h2>

<p>Poměrně problematická je práce se znakem procenta a taktéž se znakem
zpětného lomítka. U zpětného lomítka je tomu ze dvou důvodů:</p>

<ol>

<li>Tento znak má speciální význam pro TeX (příkladem je makro
<strong>\TeX</strong>)</li>

<li>Současně má tento znak speciální význam i pro jazyk Lua (například
v&nbsp;řetězcích typu Hello World\n)</li>

</ol>

<p>Vzhledem k&nbsp;tomu, že nejdříve dochází k&nbsp;expanzi TeXovských maker,
může být práce se zpětnými lomítky v&nbsp;příkazu <strong>\directlua</strong>
poměrně nešikovná. Jedním z&nbsp;možných řešení je uložení řetězců do závorek
[[ a ]]. Ty ruší význam \n a neznámé sekvence \T:</p>

<pre>
\directlua{tex.sprint([[\noexpand\TeX]])}
</pre>

<p>Druhý způsob spočívá ve využití <strong>luacode*</strong> popsané výše.
Následující příkaz vytiskne logo TeXu (lomítko je zde zdvojené z&nbsp;toho
důvodu, že se v&nbsp;řetězci jedná o escape sekvenci, samotný TeX však uvidí
pouze \TeX):</p>

<pre>
\begin{luacode*}
tex.print("\\TeX")
\end{luacode*}
</pre>

<p>Samotné zpětné lomítko se vytiskne takto:</p>

<pre>
\begin{luacode*}
tex.print("\\textbackslash")
\end{luacode*}
</pre>

<p>popř.&nbsp;v&nbsp;matematickém režimu (může vypadat odlišně):</p>

<pre>
tex.print("$\\backslash$")
</pre>

<p>Pozor si dejte taktéž na příkaz pro vložení nového řádku, který
v&nbsp;nejjednodušším případě vypadá takto:</p>

<pre>
\\
</pre>

<p>V&nbsp;Lua skriptu se ovšem musí každé zpětné lomítko zdvojit, takže namísto
pouhých dvou lomítek napíšeme lomítka čtyři:</p>

<pre>
\begin{luacode*}
tex.print("\\\\")
\end{luacode*}
</pre>

<p>Ve skutečnosti, stejně jako v&nbsp;předchozím příkladu, uvidí TeX ve
výsledku pouze dvojici zpětných lomítek \\, což již dokáže správně
interpretovat (viz též <a
href="http://www.personal.ceu.hu/tex/breaking.htm">LaTeX Line and Page
Breaking</a>.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Třetí demonstrační příklad &ndash; chování znaku zpětného lomítka</h2>

<p>Některá chování zpětného lomítka v&nbsp;Lua skriptu (konkrétně
v&nbsp;řetězcích) si ukážeme ve třetím demonstračním příkladu. Povšimněte si
zakomentovaného příkazu, který nelze použít (schválně si můžete zkusit si tento
příkaz odkomentovat a spustit překlad znovu):</p>

<pre>
\directlua{--tex.sprint("\noexpand\TeX")}
</pre>

<p>Úplný zdrojový kód tohoto příkladu vypadá takto:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Backslash behaviour}
&nbsp;
\subsection*{luacode}
&nbsp;
\begin{luacode*}
tex.print("\\TeX")
tex.print("\\\\")
tex.print("\\textbackslash")
tex.print("\\\\")
tex.print("$\\backslash$")
\end{luacode*}
&nbsp;
\subsection*{directlua}
&nbsp;
\directlua{--tex.sprint("\noexpand\TeX")}
&nbsp;
\directlua{tex.sprint([[\noexpand\TeX]])}
&nbsp;
\end{document}
</pre>

<img src="https://i.iinfo.cz/images/34/luatex1-3.png" class="image-257320" alt="&#160;" height="245" width="282" />
<p><i>Obrázek 3: Dokument vygenerovaný třetím demonstračním příkladem.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Odkazy na Internetu</h2>

<ol>

<li>LuaTex<br />
<a href="http://www.luatex.org/">http://www.luatex.org/</a>
</li>

<li>LuaTex: dokumentace<br />
<a href="http://www.luatex.org/documentation.html">http://www.luatex.org/documentation.html</a>
</li>

<li>LuaTex Wiki<br />
<a href="http://wiki.luatex.org/index.php/Main_Page">http://wiki.luatex.org/index.php/Main_Page</a>
</li>

<li>LuaTeX (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/LuaTeX">https://en.wikipedia.org/wiki/LuaTeX</a>
</li>

<li>Paper o LuaTeXu<br />
<a href="https://www.tug.org/TUGboat/tb28-3/tb90hoekwater-luatex.pdf">https://www.tug.org/TUGboat/tb28-3/tb90hoekwater-luatex.pdf</a>
</li>

<li>TeX (Wikibooks)<br />
<a href="https://en.wikibooks.org/wiki/TeX">https://en.wikibooks.org/wiki/TeX</a>
</li>

<li>LaTeX (Wikibooks)<br />
<a href="https://en.wikibooks.org/wiki/LaTeX">https://en.wikibooks.org/wiki/LaTeX</a>
</li>

<li>The Latin Modern (LM) Family of Fonts<br />
<a href="http://www.gust.org.pl/projects/e-foundry/latin-modern">http://www.gust.org.pl/projects/e-foundry/latin-modern</a>
</li>

<li>Sazeci system TeX<br />
<a href="https://www.phil.muni.cz/~letty/tex/">https://www.phil.muni.cz/~letty/tex/</a>
</li>

<li>CSTeX &ndash; česká a slovenská podpora TeXu<br />
<a href="http://petr.olsak.net/cstex.html">http://petr.olsak.net/cstex.html</a>
</li>

<li>Proč nerad používám LaTeX<br />
<a href="http://petr.olsak.net/ftp/olsak/bulletin/nolatex.pdf">http://petr.olsak.net/ftp/olsak/bulletin/nolatex.pdf</a>
</li>

<li>εχTEX<br />
<a href="http://www.extex.org/index.html">http://www.extex.org/index.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2016</small></p>
</body>
</html>

