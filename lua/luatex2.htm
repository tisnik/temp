<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Programovatelný sázecí systém LuaTeX: použití základního rozhraní mezi TeXem a skripty</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Programovatelný sázecí systém LuaTeX: použití základního rozhraní mezi TeXem a skripty</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve druhé části seriálu o programovatelném sázecím systému LuaTeX si na několika demonstračních příkladech ukážeme kooperaci mezi jádrem LuaTeXu a interpretrem skriptovacího jazyka Lua. Taktéž si řekneme, jak lze volat Lua funkci s&nbsp;využitím uživatelsky definovaných příkazů.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Programovatelný sázecí systém LuaTeX: použití základního rozhraní mezi TeXem a skripty</a></p>
<p><a href="#k02">2. Vytvoření tabulky v&nbsp;dokumentu s&nbsp;využitím programové smyčky</a></p>
<p><a href="#k03">3. Zdrojový kód čtvrtého demonstračního příkladu</a></p>
<p><a href="#k04">4. Volání skriptu uloženého v&nbsp;externím souboru s&nbsp;využitím funkce <strong>dofile</strong></a></p>
<p><a href="#k05">5. Zdrojový kód pátého demonstračního příkladu</a></p>
<p><a href="#k06">6. Rozdělení deklarace tabulky na statickou a dynamickou část</a></p>
<p><a href="#k07">7. Zdrojový kód šestého demonstračního příkladu</a></p>
<p><a href="#k08">8. Načítání externích dat (vypočtených v&nbsp;jiném nástroji)</a></p>
<p><a href="#k09">9. Volání funkce deklarované v&nbsp;externím souboru</a></p>
<p><a href="#k10">10. Zdrojový kód sedmého demonstračního příkladu</a></p>
<p><a href="#k11">11. Vytvoření nového příkazu volajícího funkci deklarovanou v&nbsp;jazyku Lua</a></p>
<p><a href="#k12">12. Zdrojový kód osmého demonstračního příkladu</a></p>
<p><a href="#k13">13. Repositář s&nbsp;popsanými demonstračními příklady</a></p>
<p><a href="#k14">14. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Programovatelný sázecí systém LuaTeX: použití základního rozhraní mezi TeXem a skripty</h2>

<p><a
href="http://www.root.cz/clanky/programovatelny-sazeci-system-luatex/">V&nbsp;první
části</a> seriálu o sázecím systému LuaTeX jsme se seznámili se základními
vlastnostmi tohoto nástroje a taktéž s&nbsp;některými odlišnostmi LuaTeXu od
klasického TeXu. Posléze jsme si ukázali nově přidaný příkaz
<strong>\directlua</strong>, který slouží k&nbsp;zajištění základního rozhraní
mezi přepsaným a upraveným jádrem TeXu a interpretrem skriptovacího jazyka Lua
(tento příkaz mohou používat jak uživatelé plainTeXu, tak i LaTeXu). Taktéž
jsme se zmínili o příkazu nazvaném <strong>luacode</strong>, jenž zjednodušuje
volání skriptů. Tento příkaz se používá v&nbsp;LaTeXu resp.&nbsp;přesněji
řečeno v&nbsp;LuaLaTeXu stylem <strong>\begin\{luacode}</strong> ...
<strong>\end{luacode}</strong> (takže se vlastně jedná o nově definované
prostředí, i když s&nbsp;některými omezeními). Dnes si ukážeme některé další
možnosti obou zmíněných příkazů, popíšeme si způsob využití externích skriptů a
nakonec se seznámíme s&nbsp;tím, jak je možné vhodnou kombinací příkazů
<strong>\newcommand</strong> (popř.&nbsp;<strong>\def</strong> pro uživatele
plainTeXu) a <strong>\directlua</strong> do LuaTeXu/LuaLaTeXu přidat vlastní
příkazy, samozřejmě s&nbsp;možností předání případných parametrů těmto
příkazům.</p>

<img src="https://i.iinfo.cz/images/34/luatex1-1.png" class="image-257318" alt="&#160;" height="358" width="364" />
<p><i>Obrázek 1: Dokument vygenerovaný demonstračním příkladem, s&nbsp;nímž
jsme se seznámili minule.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Vytvoření tabulky v&nbsp;dokumentu s&nbsp;využitím programové smyčky</h2>

<p>Demonstrační příklady popsané minule byly ve skutečnosti velmi jednoduché až
primitivní, takže při pohledu na ně možná nemuselo být příliš jasné, v&nbsp;čem
vlastně spočívá výhoda kombinace TeXu a skriptovacího jazyka Lua. Podívejme se
nyní na poněkud složitější dokument, v&nbsp;němž je umístěna tabulka
s&nbsp;druhými mocninami celých čísel od 1 do 16. Celá tabulka je vygenerována
skriptem vytvořeným v&nbsp;programovacím jazyce Lua, v&nbsp;němž lze využít
funkci nazvanou <strong>pow</strong> pocházející ze standardní knihovny
<strong>math</strong> [<a
href="http://www.lua.org/manual/5.1/manual.html#5.6">1</a>].</p>

<p>Tabulka je do vstupního bufferu TeXu &bdquo;vypsána&ldquo; funkcí
<strong>tex.print()</strong> (TeX vidí a následně zpracuje už vygenerovanou
tabulku), což znamená, že jsme si museli dát pozor na problematický znak
zpětného lomítka (o této problematice jsme se taktéž <a
href="http://www.root.cz/clanky/programovatelny-sazeci-system-luatex/#k10">zmiňovali
minule</a>). TeXem se zpracuje přibližně tento kód:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Mocniny dvou}
&nbsp;
\subsection*{verze 1}
&nbsp;
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $2^n$ \\
\hline
1 &amp; 2 \\
2 &amp; 4 \\
3 &amp; 8 \\
4 &amp; 16 \\
5 &amp; 32 \\
6 &amp; 64 \\
7 &amp; 128 \\
8 &amp; 256 \\
9 &amp; 512 \\
10 &amp; 1024 \\
11 &amp; 2048 \\
12 &amp; 4096 \\
13 &amp; 8192 \\
14 &amp; 16384 \\
15 &amp; 32768 \\
16 &amp; 65536 \\
\hline
\end{tabular}
&nbsp;
\end{document}
</pre>

<p>V&nbsp;tomto demonstračním příkladu používáme upravené prostředí nazvané
<strong>luacode*</strong> a nikoli pouze <strong>luacode</strong>. Je tomu tak
především z&nbsp;toho důvodu, aby se zamezilo expanzi TeXovských maker ještě
předtím, než bude kód v&nbsp;prostředí předán interpretru jazyka Lua.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Zdrojový kód čtvrtého demonstračního příkladu</h2>

<p>Úplný zdrojový kód v&nbsp;celkovém pořadí již čtvrtého demonstračního
příkladu vypadá následovně:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Mocniny dvou}
&nbsp;
\subsection*{verze 1}
&nbsp;
\begin{luacode*}
tex.print("\\begin{tabular}{|r|r|}\\hline")
tex.print("$n$&amp;$2^n$\\\\")
tex.print("\\hline")
for n = 1,16 do
    tex.print(n .. "&amp;" .. math.pow(2, n))
    tex.print("\\\\")
end
tex.print("\\hline")
tex.print("\\end{tabular}")
\end{luacode*}
&nbsp;
\end{document}
</pre>

<p>Základ pro vytvoření obsahu tabulky tvoří čtveřice řádků:</p>

<pre>
for n = 1,16 do
    tex.print(n .. "&amp;" .. math.pow(2, n))
    tex.print("\\\\")
end
</pre>

<p>Ve skutečnosti se však do interpretru jazyka Lua předá jediný řádek,
v&nbsp;němž jsou příkazy odděleny mezerami (to je v&nbsp;jazyku Lua zcela
legitimní):</p>

<pre>
tex.print("\\begin{tabular}{|r|r|}\\hline") tex.print("$n$&amp;$2^n$\\\\") tex.print("\\hline") for n = 1,16 do tex.print(n .. "&amp;" .. math.pow(2, n)) tex.print("\\\\") end tex.print("\\hline") tex.print("\\end{tabular}")
</pre>

<img src="https://i.iinfo.cz/images/610/luatex2-1.png" class="image-258185" alt="&#160;" height="620" width="320" />
<p><i>Obrázek 2: Dokument vygenerovaný předchozím demonstračním
příkladem.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Volání skriptu uloženého v&nbsp;externím souboru s&nbsp;využitím funkce <strong>dofile</strong></h2>

<p>Ve standardní knihovně programovacího jazyka Lua existuje funkce nazvaná
<strong>dofile()</strong> [<a
href="http://www.lua.org/manual/5.1/manual.html#5.1">2</a>], která dokáže do
aktuálně běžícího skriptu načíst obsah jiného zdrojového souboru a následně ho
zpracovat (interpretovat). Tato funkce je samozřejmě, podobně jako i další
funkce ze základních knihoven, dostupná i v&nbsp;LuaTeXu, čehož můžeme využít
pro oddělení dokumentů od skriptů. Dokument bude uložen v&nbsp;jednom souboru
(v&nbsp;tomto příkladu se konkrétně bude jmenovat <strong>test5.tex</strong>),
zatímco skript bude uložen ve druhém souboru nazvaném
<strong>test5.lua</strong>. Načtení a okamžitá interpretace skriptu
s&nbsp;programovou smyčkou určenou pro výpočet a vygenerování tabulky druhých
mocnin pak v&nbsp;dokumentu zajistí jediný řádek:</p>

<pre>
\directlua{dofile("test5.lua")}
</pre>

<p>První předností tohoto způsobu oddělení skriptu od dokumentu je fakt, že
nedojde ke spojení všech řádků skriptu před jeho předáním interpretru (to může
v&nbsp;některých případech způsobit problémy, například při použití
jednořádkových komentářů). Dále je toto oddělení výhodné i z&nbsp;praktického
hlediska &ndash; programátorské textové editory nebudou mít problém ani se
zvýrazněním syntaxe dokumentů (TeX/LaTeX) ani s&nbsp;Lua skripty, zatímco při
použití jediného souboru je zvýraznění syntaxe s&nbsp;rozpoznáním rozdílných
sekcí problematické (popravdě jsem zatím neviděl editor, který by tuto
kombinaci bez problémů podporoval).</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Zdrojový kód pátého demonstračního příkladu</h2>

<p>Obsah souboru (přesněji řečeno dokumentu) <strong>test5.tex</strong> se díky
oddělení skriptu do samostatného souboru zkrátil a současně i zpřehlednil:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Mocniny dvou}
&nbsp;
\subsection*{verze 2}
&nbsp;
\directlua{dofile("test5.lua")}
&nbsp;
\end{document}
</pre>

<p>Poznámka: řádek <strong>\usepackage{luacode}</strong> je vlastně
v&nbsp;tomto demonstračním příkladu zbytečný, neboť příkaz
<strong>\directlua</strong> je přímo zabudován do LuaTeXu (<a
href="#k03">v&nbsp;předchozím příkladu</a> bylo nutné tento řádek použít).</p>

<p>Samotný skript uložený v&nbsp;souboru nazvaném <strong>test5.lua</strong>
potom vypadá následovně:</p>

<pre>
tex.print("\\begin{tabular}{|r|r|}\\hline")
tex.print("$n$&amp;$2^n$\\\\")
tex.print("\\hline")
for n = 1,16 do
    tex.print(n .. "&amp;" .. math.pow(2, n))
    tex.print("\\\\")
end
tex.print("\\hline")
tex.print("\\end{tabular}")
</pre>

<p>Zdvojení zpětných lomítek v&nbsp;tomto skriptu stále nalezneme, a to
konkrétně z&nbsp;toho důvodu, že zpětné lomítko má v&nbsp;řetězcových
literálech jazyka Lua speciální význam; viz též [<a
href="http://www.lua.org/manual/5.1/manual.html#2.1">3</a>].</p>

<img src="https://i.iinfo.cz/images/610/luatex2-2.png" class="image-258186" alt="&#160;" height="620" width="320" />
<p><i>Obrázek 3: Dokument vygenerovaný předchozím demonstračním
příkladem.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Rozdělení deklarace tabulky na statickou a dynamickou část</h2>

<p>Při pohledu na demonstrační příklad zmíněný <a href="#k05">v&nbsp;předchozí
kapitole</a> jste si pravděpodobně uvědomili, že se v&nbsp;Lua skriptu zbytečně
a k&nbsp;tomu navíc velmi pracně vytváří celá tabulka, včetně všech příkazů
určených pro definici jejího začátku s&nbsp;deklarací sloupců, prvním řádkem
s&nbsp;popisem obou sloupců apod. Celý skript je kvůli tomu dosti nepřehledný,
navíc v&nbsp;něm snadno může dojít k&nbsp;chybě, která se těžko hledá (TeX
totiž nahlásí chybu v&nbsp;kódu, který &bdquo;vidí&ldquo; v&nbsp;průběhu
tokenizace a expanze maker, tedy po zpracování interpretrem, bez přímé vazby na
vstupní dokument).</p>

<p>Ovšem kooperace mezi TeXovským dokumentem a Lua skripty je ve skutečnosti
velmi variabilní, takže je například možné dokument i k&nbsp;němu příslušející
skript upravit takovým způsobem, že se tabulka deklaruje přímo v&nbsp;TeXovském
dokumentu (jak je to obvyklé) a pouze ty řádky vytvářené tabulky, které se mají
vypočítat, budou vytvářeny skriptem naprogramovaným v&nbsp;jazyku Lua. Příkaz
<strong>\directlua{dofile("jméno_skriptu.lua")}</strong> se nám tedy posune
dovnitř definice celé tabulky a samozřejmě díky tomu dojde ke značnému
zjednodušení vlastního skriptu, z&nbsp;něhož je odstraněna většina otrocky
napsaných příkazů <strong>tex.print()</strong>. Další výhoda tohoto přístupu
spočívá v&nbsp;tom, že kód uložený ve skriptu bude možné využít na více místech
(například tehdy, pokud by se data do tabulky načítala z&nbsp;datového souboru,
což je téma, kterému se budeme věnovat o několik odstavců níže).</p>

<p>Poznámka: dejte si pozor na to, že tento způsob není možné použít ve chvíli,
kdy se kombinuje prostředí <strong>tabular</strong> s&nbsp;prostředím
<strong>luacode</strong> či <strong>luacode*</strong> (viz též <a
href="http://tex.stackexchange.com/questions/253706/is-it-possible-to-view-the-latex-code-after-lua-expansion-is-made">http://tex.stackexchange.com/questions/253706/is-it-possible-to-view-the-latex-code-after-lua-expansion-is-made</a>).</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Zdrojový kód šestého demonstračního příkladu</h2>

<p>V&nbsp;dokumentu v&nbsp;pořadí již šestého demonstračního příkladu vidíme
deklaraci běžné tabulky s&nbsp;jedním řádkem (nadpisem) a voláním příkazu
<strong>\directlua</strong>:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\begin{document}
&nbsp;
\section*{Mocniny dvou}
&nbsp;
\subsection*{verze 3}
&nbsp;
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $2^n$ \\
\hline
\directlua{dofile("test6.lua")}
\hline
\end{tabular}
&nbsp;
\end{document}
</pre>

<p>Poznámka: řádek <strong>\usepackage{luacode}</strong> je v&nbsp;tomto
demonstračním příkladu opět zbytečný a uváděn je pouze pro úplnost.</p>

<p>Skript se nám zjednoduší na pouhé čtyři řádky, které jsou již mnohem
čitelnější, než tomu bylo v&nbsp;příkladu předchozím:</p>

<pre>
for n = 1,16 do
    tex.print(n .. "&amp;" .. math.pow(2, n))
    tex.print("\\\\")
end
</pre>

<img src="https://i.iinfo.cz/images/610/luatex2-3.png" class="image-258187" alt="&#160;" height="620" width="320" />
<p><i>Obrázek 4: Dokument vygenerovaný předchozím demonstračním
příkladem.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Načítání externích dat (vypočtených v&nbsp;jiném nástroji)</h2>

<p>Samozřejmě není nutné, aby skript naprogramovaný v&nbsp;jazyku Lua prováděl
pouze nějaké výpočty. Poměrně často se totiž ocitneme v&nbsp;situaci, kdy jsou
již data vypočtena či naměřena s&nbsp;využitím jiného externího nástroje a my
&bdquo;pouze&ldquo;potřebujeme tato data vhodným způsobem vložit do dokumentu.
Jedním z&nbsp;poměrně flexibilních způsobů je právě použití skriptu
naprogramovaného v&nbsp;jazyku Lua. Předpokládejme pro jednoduchost, že máme
následující datový soubor, jehož obsah potřebujeme vložit do tabulky:</p>

<pre>
42
0
-100
NaN
6502
123456
</pre>

<p>Pomoci nám může následující skript, který data postupně načte a vloží do
tabulky s&nbsp;očíslováním jednotlivých řádků (tento úkol zajišťuje počitadlo
<strong>lineno</strong>):</p>

<pre>
local infile = io.open("test6.data")
local lineno = 1
&nbsp;
if not infile then
    print("Chyba pri otevirani souboru")
else
    for line in infile:lines() do
        print(lineno, line)
        tex.print(lineno .. "&amp;" .. line)
        tex.print("\\\\")
        lineno = lineno + 1
    end
    infile:close()
end
</pre>

<p>Poznámka: pokud není zapotřebí provádět alespoň základní detekci, zda soubor
se vstupními daty existuje a je dostupný (čitelný), lze skript ještě více
zjednodušit:</p>

<pre>
local lineno = 1
for line in io.lines("test6.data") do
    print(lineno, line)
    tex.print(lineno .. "&amp;" .. line)
    tex.print("\\\\")
    lineno = lineno + 1
end
</pre>

<p>Tento skript lze samozřejmě vylepšit a rozšířit. Jedno z&nbsp;možných
vylepšení spočívá v&nbsp;detekci speciálních znaků ve vstupním souboru. Tyto
znaky, mezi než patří zejména dvojice zpětných lomítek, znak &amp; apod., je
nutné například funkcí <strong>subs</strong> nahradit za odpovídající
ekvivalenty, které nebudou při vložení do tabulky způsobovat problémy. Možných
rozšíření je celá řada; zmiňme například načítání souborů CSV s&nbsp;detekcí,
zda na prvním řádku jsou umístěny popisy sloupců, filtrace dat na základě
skriptu, použití externího modulu pro práci se soubory JSON a XML atd.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Volání funkce deklarované v&nbsp;externím souboru</h2>

<p>V&nbsp;externích souborech s&nbsp;Lua skripty je možné deklarovat různé
datové struktury (tj.&nbsp;tabulky fungující jako záznamy, pole i asociativní
pole) a taktéž funkce. Pokud například budeme mít v&nbsp;souboru nazvaném <a
href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.lua">test7.lua</a>
uloženu deklaraci funkce pro (rekurzivní) výpočet faktoriálu, bude možné
takovou funkci nechat zpracovat interpretrem a následně je možné tuto funkci
volat:</p>

<pre>
function factorial(n)
    if n &lt;= 1 then
        return 1
    else
        return n * factorial(n-1)
    end
end
</pre>

<p>Poznámka: interpret při prvním čtení definice funkce provede základní
kontrolu a překlad funkce do bajtkódu (viz též [<a
href="http://www.root.cz/clanky/pohled-pod-kapotu-jvm-preklad-do-bajtkodu-jvm-lua-vm-a-python-vm/">4</a>]
a [<a
href="http://www.root.cz/clanky/pohled-pod-kapotu-jvm-preklad-programovych-smycek-do-bajtkodu-jvm-lua-vm-a-python-vm/#ic=serial-box&icc=text-title">5</a>]).</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Zdrojový kód sedmého demonstračního příkladu</h2>

<p>Zkusme nyní použít funkci <strong>factorial()</strong>, jejíž definice je
uložena v&nbsp;samostatném souboru nazvaném <strong>test7.lua</strong>. Tento
soubor je nejdříve nutné načíst do interpretru, což se provede jednoduše:</p>

<pre>
\directlua{dofile("test7.lua")}
</pre>

<p>Následně se již funkce může volat, například opět při vytváření tabulky:</p>

<pre>
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $n!$ \\
\hline
1   &amp; \directlua{tex.print(factorial(1))} \\
10  &amp; \directlua{tex.print(factorial(10))} \\
100 &amp; \directlua{tex.print(factorial(100))} \\
\hline
\end{tabular}
</pre>

<p>Úplný zdrojový kód dokumentu vypadá takto:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\directlua{dofile("test7.lua")}
&nbsp;
\begin{document}
&nbsp;
\section*{Faktorial}
&nbsp;
\subsection*{verze 1}
&nbsp;
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $n!$ \\
\hline
1   &amp; \directlua{tex.print(factorial(1))} \\
10  &amp; \directlua{tex.print(factorial(10))} \\
100 &amp; \directlua{tex.print(factorial(100))} \\
\hline
\end{tabular}
&nbsp;
\end{document}
</pre>

<img src="https://i.iinfo.cz/images/610/luatex2-4.png" class="image-258188" alt="&#160;" height="250" width="380" />
<p><i>Obrázek 5: Dokument vygenerovaný předchozím demonstračním
příkladem.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vytvoření nového příkazu volajícího funkci deklarovanou v&nbsp;jazyku Lua</h2>

<p>V&nbsp;praxi může být výhodnější nevolat funkci naprogramovanou
v&nbsp;jazyku Lua nepřímo:</p>

<pre>
\directlua{tex.print(factorial(42))}
</pre>

<p>ale použít namísto toho uživatelský příkaz deklarovaný na úrovni plainTeXu
či LaTeXu, tedy takto:</p>

<pre>
\factorial{1}
</pre>

<p>Podívejme se nyní, jak je možné tohoto stavu dosáhnout. Nejdříve opět musíme
předat interpretru jazyka Lua skript, v&nbsp;němž je deklarována funkce, která
se má volat:</p>

<pre>
\directlua{dofile("test8.lua")}
</pre>

<p>Následně můžeme s&nbsp;využitím příkazu <strong>\newcommand</strong> (LaTeX)
či <strong>\def</strong> (TeX) vytvořit nový uživatelský příkaz, který bude
interně volat naši funkci, samozřejmě s&nbsp;předáním všech potřebných
parametrů:</p>

<pre>
\newcommand*{\factorial}[1]{%
  \directlua{tex.print(factorial(#1))}%
}
</pre>

<p>V&nbsp;praxi se tento nový příkaz deklarovaný na úrovni (La)TeXu použije
následujícím způsobem:</p>

<pre>
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $n!$ \\
\hline
1   &amp; \factorial{1} \\
10  &amp; \factorial{10} \\
100 &amp; \factorial{100} \\
\hline
\end{tabular}
</pre>

<p>což vlastně odpovídá předchozímu kódu:</p>

<pre>
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $n!$ \\
\hline
1   &amp; \directlua{tex.print(factorial(1))} \\
10  &amp; \directlua{tex.print(factorial(10))} \\
100 &amp; \directlua{tex.print(factorial(100))} \\
\hline
\end{tabular}
</pre>

<p>První varianta je evidentně mnohem čitelnější než varianta druhá.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Zdrojový kód osmého demonstračního příkladu</h2>

<p>Nový příkaz deklarovaný na úrovni LaTeXu je použit v&nbsp;osmém
demonstračním příkladu, jehož zdrojový kód je zobrazen pod tímto odstavcem:</p>

<pre>
\documentclass{article}
\usepackage{luacode}
&nbsp;
\directlua{dofile("test8.lua")}
&nbsp;
\newcommand*{\factorial}[1]{%
  \directlua{tex.print(factorial(#1))}%
}
&nbsp;
\begin{document}
&nbsp;
\section*{Faktorial}
&nbsp;
\subsection*{verze 2}
&nbsp;
\begin{tabular}{|r|r|}
\hline
$n$ &amp; $n!$ \\
\hline
1   &amp; \factorial{1} \\
10  &amp; \factorial{10} \\
100 &amp; \factorial{100} \\
\hline
\end{tabular}
&nbsp;
\end{document}
</pre>

<p>Obsah souboru <strong>test8.lua</strong>:</p>

<pre>
function factorial(n)
    if n &lt;= 1 then
        return 1
    else
        return n * factorial(n-1)
    end
end
</pre>

<img src="https://i.iinfo.cz/images/610/luatex2-5.png" class="image-258189" alt="&#160;" height="250" width="380" />
<p><i>Obrázek 6: Dokument vygenerovaný předchozím demonstračním
příkladem.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Repositář s&nbsp;popsanými demonstračními příklady</h2>

<p>Demonstrační příklady popsané <a
href="http://www.root.cz/clanky/programovatelny-sazeci-system-luatex/">v&nbsp;předchozím</a>
i v&nbsp;dnešním článku, byly uloženy do veřejného Git repositáře, z&nbsp;něhož
si je můžete snadno stáhnout a otestovat:</p>

<table>
<tr><th> #</th><th>Soubor</th><th>Stručný popis</th><th>Odkaz</th></tr>
<tr><td> 1</td><td>test1.tex</td><td>příkaz <strong>\directlua</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test1.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test1.tex</a></td></tr>
<tr><td> 2</td><td>test1.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test1.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test1.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>test2.tex</td><td>prostředí <strong>luacode</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test2.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test2.tex</a></td></tr>
<tr><td> 4</td><td>test2.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test2.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test2.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>test3.tex</td><td>zpětné lomítko, expanze maker</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test3.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test3.tex</a></td></tr>
<tr><td> 6</td><td>test3.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test3.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test3.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>test4.tex</td><td>vygenerování tabulky</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test4.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test4.tex</a></td></tr>
<tr><td> 8</td><td>test4.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test4.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test4.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>test5.tex</td><td>použití funkce <strong>dofile()</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test5.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test5.tex</a></td></tr>
<tr><td>10</td><td>test5.lua</td><td>skript pro vygenerování tabulky</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test5.lua">https://github.com/tisnik/presentations/blob/master/luatex/slides/test5.lua</a></td></tr>
<tr><td>11</td><td>test5.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test5.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test5.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>test6.tex</td><td>tvorba tabulek v&nbsp;Lua skriptech</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test6.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test6.tex</a></td></tr>
<tr><td>13</td><td>test6.lua</td><td>zjednodušený skript vygenerování tabulky</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test6.lua">https://github.com/tisnik/presentations/blob/master/luatex/slides/test6.lua</a></td></tr>
<tr><td>14</td><td>test6.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test6.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test6.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>test7.tex</td><td>volání funkce pro výpočet faktoriálu</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.tex</a></td></tr>
<tr><td>16</td><td>test7.lua</td><td>funkce pro výpočet faktoriálu</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.lua">https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.lua</a></td></tr>
<tr><td>17</td><td>test7.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test7.pdf</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>test8.tex</td><td>vytvoření nového příkazu <strong>factorial</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test8.tex">https://github.com/tisnik/presentations/blob/master/luatex/slides/test8.tex</a></td></tr>
<tr><td>19</td><td>test8.lua</td><td>funkce pro výpočet faktoriálu</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test8.lua">https://github.com/tisnik/presentations/blob/master/luatex/slides/test8.lua</a></td></tr>
<tr><td>20</td><td>test8.pdf</td><td>dokument vysázený LuaTeXem</td><td><a href="https://github.com/tisnik/presentations/blob/master/luatex/slides/test8.pdf">https://github.com/tisnik/presentations/blob/master/luatex/slides/test8.pdf</a></td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Odkazy na Internetu</h2>

<ol>

<li>LuaTex<br />
<a href="http://www.luatex.org/">http://www.luatex.org/</a>
</li>

<li>LuaTex: dokumentace<br />
<a href="http://www.luatex.org/documentation.html">http://www.luatex.org/documentation.html</a>
</li>

<li>LuaTex Wiki<br />
<a href="http://wiki.luatex.org/index.php/Main_Page">http://wiki.luatex.org/index.php/Main_Page</a>
</li>

<li>LuaTeX (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/LuaTeX">https://en.wikipedia.org/wiki/LuaTeX</a>
</li>

<li>Paper o LuaTeXu<br />
<a href="https://www.tug.org/TUGboat/tb28-3/tb90hoekwater-luatex.pdf">https://www.tug.org/TUGboat/tb28-3/tb90hoekwater-luatex.pdf</a>
</li>

<li>TeX (Wikibooks)<br />
<a href="https://en.wikibooks.org/wiki/TeX">https://en.wikibooks.org/wiki/TeX</a>
</li>

<li>LaTeX (Wikibooks)<br />
<a href="https://en.wikibooks.org/wiki/LaTeX">https://en.wikibooks.org/wiki/LaTeX</a>
</li>

<li>The Latin Modern (LM) Family of Fonts<br />
<a href="http://www.gust.org.pl/projects/e-foundry/latin-modern">http://www.gust.org.pl/projects/e-foundry/latin-modern</a>
</li>

<li>Sázecí system TeX<br />
<a href="https://www.phil.muni.cz/~letty/tex/">https://www.phil.muni.cz/~letty/tex/</a>
</li>

<li>CSTeX &ndash; česká a slovenská podpora TeXu<br />
<a href="http://petr.olsak.net/cstex.html">http://petr.olsak.net/cstex.html</a>
</li>

<li>Proč nerad používám LaTeX<br />
<a href="http://petr.olsak.net/ftp/olsak/bulletin/nolatex.pdf">http://petr.olsak.net/ftp/olsak/bulletin/nolatex.pdf</a>
</li>

<li>εχTEX<br />
<a href="http://www.extex.org/index.html">http://www.extex.org/index.html</a>
</li>

<li>PlainTeX (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PlainTeX">https://cs.wikipedia.org/wiki/PlainTeX</a>
</li>

<li>What is the difference between \def and \newcommand? (SO)<br />
<a href="http://tex.stackexchange.com/questions/655/what-is-the-difference-between-def-and-newcommand#658">http://tex.stackexchange.com/questions/655/what-is-the-difference-between-def-and-newcommand#658</a>
</li>

<li>LaTeX/Macros<br />
<a href="https://en.wikibooks.org/wiki/LaTeX/Macros">https://en.wikibooks.org/wiki/LaTeX/Macros</a>
</li>

<li>TeX (StackExchange)<br />
<a href="http://tex.stackexchange.com/">http://tex.stackexchange.com/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2016</small></p>
</body>
</html>

