<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Plugin vim-orgmode: portace populárního orgmode do Vimu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Plugin vim-orgmode: portace populárního orgmode do Vimu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Mezi jeden z nejpopulárnějších modulů textového editoru Emacs patří plugin nabízející uživatelům tzv. org mode, neboli režim pro správu poznámek, diáře, plánovače atd. Podobný modul, i když ještě ne zcela dokončený, existuje i pro editor Vim. Jmenuje se jednoduše vim-orgmode.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Plugin vim-orgmode: portace populárního orgmode do Vimu</a></p>
<p><a href="#k02">*** 2. Princip, na němž je orgmode založen</a></p>
<p><a href="#k03">*** 3. Použití správce balíčků Pathogen</a></p>
<p><a href="#k04">*** 4. Instalace a konfigurace Pathogenu</a></p>
<p><a href="#k05">*** 5. Instalace samotného modulu <strong>vim-orgmode</strong></a></p>
<p><a href="#k06">*** 6. Instalace pomocného pluginu <strong>vim-speeddating</strong></a></p>
<p><a href="#k07">*** 7. Dokončení konfigurace v&nbsp;souboru <strong>.vimrc</strong></a></p>
<p><a href="#k08">*** 8. Základní struktura souborů s&nbsp;poznámkami a diářem</a></p>
<p><a href="#k09">*** 9. Změna náhledu na dokument</a></p>
<p><a href="#k10">*** 10. Seznamy</a></p>
<p><a href="#k11">*** 11. Zaškrtávací políčka</a></p>
<p><a href="#k12">*** 12. Značky &bdquo;Udělat&ldquo; a &bdquo;Hotovo&ldquo;</a></p>
<p><a href="#k13">*** 13. Definice značek pro specifické procesy</a></p>
<p><a href="#k14">*** 14. Vlastní štítky</a></p>
<p><a href="#k15">*** 15. Základní operace pro práci s&nbsp;daty a časovými značkami</a></p>
<p><a href="#k16">*** 16. Použití kalendáře</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Prozatím neimplementované vlastnosti modulu <strong>vim-orgmode</strong></a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Plugin vim-orgmode: portace populárního orgmode do Vimu</h2>

<p><a href="https://www.root.cz/n/emacs/">Textový editor Emacs</a> je populární zejména kvůli svému rozsáhlému ekosystému různých rozšiřovacích modulů naprogramovaných většinou přímo v&nbsp;Emacs Lispu. Připomeňme si například moduly, s&nbsp;nimiž jsme se již na stránkách Roota setkali: <a href="https://www.root.cz/clanky/graficka-nadstavba-nad-gnu-debuggerem-gdbgui-a-jeji-alternativy/#k07">podpora pro ladění aplikací</a>, režim pro <a href="https://www.root.cz/clanky/pouziti-emacsu-pro-porovnavani-a-slucovani-souboru/">zvýraznění rozdílů mezi soubory a pro jejich synchronizaci</a> (včetně porovnání tří souborů) a samozřejmě <a href="https://www.root.cz/clanky/evil-kombinace-editacnich-prikazu-vimu-a-sily-emacsu/">&bdquo;evil&ldquo; režim s&nbsp;poměrně dobrou emulací Vimu</a>. Uživatelé však mohou použít i další užitečné moduly, například integrovaný webový prohlížeč, mailový klient a zejména pak v&nbsp;žádném případě nesmíme zapomenout na modul s&nbsp;implementací tzv.&nbsp;<i>org mode</i>, tj.&nbsp;režimu správy poznámek, diáře, kalendáře, plánovače apod.</p>

<p>Pro některé uživatele je <i>org mode</i> tou hlavní motivací pro použití Emacsu (a zdaleka se nejedná jen o programátory). Je tedy vlastně pochopitelné, že podobný modul vznikl i pro textový editor Vim. Ve skutečnosti vzniklo hned několik podobně koncipovaných pluginů, ovšem dnes se seznámíme jen s&nbsp;jediným z&nbsp;nich. Jmenuje se <strong>vim-orgmode</strong> a již název tohoto pluginu napovídá, že cílem je dosažení co největší kompatibility s&nbsp;Emacsovským režimem <i>org mode</i>. Tohoto cíle sice ještě nebylo dosaženo (chybí například dotažená podpora pro export dat), ovšem již v&nbsp;současném stavu se v&nbsp;každém případě jedná o velmi dobře použitelný plugin.</p>

<p><div class="rs-tip-major">Poznámka: první třetina článku je věnována instalaci pluginu <strong>vim-orgmode</strong> i pomocného pluginu <strong>vim-speeddating</strong>. Pokud vás zajímají spíše vlastnosti a možnosti poskytovanými popisovaným pluginem, přeskočte prosím <a href="#k08">přímo na sedmou kapitolu</a>.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Princip, na němž je orgmode založen</h2>

<p>Na rozdíl od specializovaných aplikací pracuje <i>org mode</i> s&nbsp;čistě textovými soubory, v&nbsp;nichž se rozeznává několik značek, které je možné se velmi snadno naučit. Ostatně se stejným principem, tj.&nbsp;k&nbsp;použití běžných textových souborů s&nbsp;několika značkami, se pravděpodobně setkalo hodně čtenářů: jedná se o AsciiDoc, Markdown, ReStructuredText a podmnožiny těchto jazyků, které jsou použity například na GitHubu, některých wiki apod. Ostatně i samotný formát používaný <i>org modem</i> je podporován přímo na GitHubu &ndash; soubory tohoto typu jsou automaticky zformátovány před zobrazením uživateli. Všechny nové příkazy, které <i>org mode</i> nabízí, tak pracují nad čistě textovými daty, přičemž je nutné zdůraznit, že plugin nemá k&nbsp;dispozici žádné další &bdquo;skryté&ldquo; soubory. V&nbsp;praxi to znamená to, že si můžete poznámky a diář jednoduše synchronizovat mezi různými počítači (přes Git popř.&nbsp;přes starý dobrý <strong>rsync</strong>) a prakticky nikdy nedojde ke korupci dat (pokud si je samozřejmě sami nezmažete).</p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti se nemusíte učit význam všech značek, ale stačí se seznámit jen s&nbsp;těmi nejpoužívanějšími. Další typy značek (například vlastní štítky, zaškrtávací políčka apod.) je možné začít používat později. Totéž samozřejmě platí i pro nové příkazy &ndash; pokud vám nezáleží na efektivitě práce, prakticky se stačí naučit asi pět nových příkazů.</div></p>

<p><a href="https://www.root.cz/clanky/muzeme-verit-prekladacum-projekty-resici-schema-duverive-duvery/#k09"></a></p>

<pre>
* Platform specific information
** 8086
To encode assembly to hex, please reference: http://ref.x86asm.net/geek.html
WARNING encoding is an extremely slow and painful process by hand,
BE VERY VERY THANKFUL for those that came before us and made such wonderful
things as assemblers and C compilers that hide most of the horrible darkness from our eyes...
&nbsp;
*** Default memory map
| 16-bit mem map (seg:off)       | What is there                 |
|--------------------------------+-------------------------------|
| 0x0000:0x0000 -&gt; 0x0000:0x0500 | BIOS stuff                    |
| 0x0000:0x0500 -&gt; 0x0000:0x2100 | root                          |
| 0x0000:0x2100 -&gt; 0x0000:0x3300 | fat                           |
| 0x0000:0x3300 -&gt; 0x0000:0x6c00 | 14,25kb free space            |
| 0x0000:0x6c00 -&gt; 0x0000:0x7c00 | IDT and GDT (256 desc. eatch) |
| 0x0000:0x7c00 -&gt; 0x0000:0x7e00 | bootsector                    |
| 0x0000:0x7e00 &lt;/gc- 0x0000:0xffff | ~32,5kb stack for boot        |
| 0x1000:0x0000 -&gt; 0x9000:0xffff | 576kb free space              |
| 0xa000:0x0000 -&gt; ............. | VGA mem etc.                  |
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Použití správce balíčků Pathogen</h2>

<p>Většina skriptů, maker, nápovědy, barvových schémat atd. nainstalovaných společně s&nbsp;Vimem je většinou uložena do adresářové struktury umístěné v <strong>/usr/share/vim/vimfiles</strong> popř.  <strong>/usr/share/vim/vim80</strong>. Na této adresářové struktuře je poměrně dobře patrné rozdělení jednotlivých částí pluginů do různých podadresářů:</p>

<pre>
├── autoload
│   ├── dist
│   └── xml
├── colors
├── compiler
├── doc
├── ftplugin
├── indent
├── keymap
├── lang
│   ├── af
│   │   └── LC_MESSAGES
...
...
...
├── macros
│   ├── hanoi
│   ├── life
│   ├── maze
│   └── urm
├── pack
│   └── dist
│       └── opt
│           ├── dvorak
│           │   ├── dvorak
│           │   └── plugin
│           ├── editexisting
│           │   └── plugin
│           ├── justify
│           │   └── plugin
│           ├── matchit
│           │   ├── doc
│           │   └── plugin
│           ├── shellmenu
│           │   └── plugin
│           ├── swapmouse
│           │   └── plugin
│           └── termdebug
│               └── plugin
├── plugin
├── print
├── spell
├── syntax
└── tutor
</pre>

<p>Skript <i>Vim Pathogen</i> mění nastavení textového editoru Vim takovým způsobem, aby bylo možné každý plugin nainstalovat do samostatného podadresáře <strong>~/.vim/bundle/${jméno_pluginu}</strong>, což vlastně znamená, že veškerá instalace pluginu se může provést jediným příkazem <strong>cp -r ...</strong> popř.&nbsp;přímo naklonováním repositáře s&nbsp;pluginem (což je technika, kterou použijeme v&nbsp;navazujících kapitolách). Odinstalace je ještě jednodušší, protože vše zajistí příkaz <strong>rm -rf ~/.vim/bundle/${jméno_pluginu}</strong>:</p>

<pre>
.
├── autoload
├── bundle
│   ├── ctrlp.vim
│   │   ├── autoload
│   │   │   └── ctrlp
│   │   ├── doc
│   │   └── plugin
│   ├── rainbow_parentheses.vim
│   │   ├── autoload
│   │   └── plugin
│   ├── todo.txt-vim
│   │   ├── autoload
│   │   │   └── todo
│   │   ├── doc
│   │   ├── ftdetect
│   │   ├── ftplugin
│   │   └── syntax
│   │       └── python
│   │           └── dateregex
│   │               └── dateregex
│   ├── vim-fugitive
│   │   ├── doc
│   │   └── plugin
│   ├── vim-slime
│   │   ├── doc
│   │   └── plugin
│   └── vim-vertigo
│       ├── doc
│       └── plugin
├── doc
├── plugin
├── spell
└── syntax
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Instalace a konfigurace Pathogenu</h2>

<p>Instalace skriptu <i>Vim Pathogen</i> je velmi jednoduchá. Tento skript je možné nainstalovat pro všechny uživatele, kteří se k&nbsp;danému počítači připojují, nebo alternativně jen pro jednoho uživatele, což je pro běžné pracovní laptopy i desktopy pravděpodobně typičtější případ. Pokud má být <i>Vim Pathogen</i> používán všemi uživateli, bude jeho instalace probíhat do adresáře <strong>/usr/share/vim/vimfiles</strong>, <strong>/usr/share/vim/vim80</strong> atd. v&nbsp;závislosti na již zmíněné konfigurační volbě <strong>runtimepath</strong>. Jednodušší a podle mého názoru i v&nbsp;některých ohledech výhodnější je však instalace tohoto skriptu pouze pro aktivního uživatele. Tuto instalaci si nyní ve stručnosti popíšeme.</p>

<p>Předpokládejme, že adresář <strong>~/.vim</strong> má následující strukturu (jediné dva zobrazené soubory jsou používány při kontrole pravopisu, ovšem ve skutečnosti je pravděpodobné, že tento adresář již bude obsahovat pluginy nainstalované dříve):</p>

<pre>
.vim
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<p><i>Vim Pathogen</i> je tvořen skutečně pouze jedním skriptem pojmenovaným <strong>pathogen.vim</strong>. Tento skript se musí stáhnout a umístit do adresáře <strong>~/.vim/autoload</strong>. Stažení a instalace skriptu je velmi jednoduchá: zajistí ji pouhé dva příkazy vypsané pod tímto odstavcem:</p>

<pre>
mkdir -p ~/.vim/autoload
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
</pre>

<p>Výsledná adresářová struktura bude vypadat takto:</p>

<pre>
.vim
├── autoload
│   └── pathogen.vim
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<p>Aby se skript <i>Vim Pathogen</i> korektně aktivoval po každém spuštění <i>Vimu</i>, je nutné provést ještě malou úpravu konfiguračního souboru <strong>.vimrc</strong> umístěného v&nbsp;domácím adresáři. Do tohoto souboru se musí dopsat volání funkce:</p>

<pre>
execute pathogen#infect()
</pre>

<p>Pozor: volání této funkce je nutné provést až ve chvíli, kdy je nastavena volba <strong>set nocompatible</strong>, jinak inicializace neproběhne korektně! (ostatně nastavení <strong>set nocompatible</strong> by mělo být jednou z&nbsp;prvních věci prováděných při inicializaci <i>Vimu</i> :-)</p>

<p>Aby se správně zobrazovala i nápověda k&nbsp;nainstalovaným pluginům, je vhodné ihned pod výše uvedený příkaz zadat i:</p>

<pre>
call pathogen#helptags()
</pre>

<p>Od této chvíle budou všechny pluginy instalovány do adresáře <strong>~/.vim/bundle</strong>, který je nutné vytvořit, pokud již neexistuje:</p>

<pre>
mkdir -p ~/.vim/bundle 
</pre>

<p>Výsledná struktura adresáře <strong>~/.vim</strong> by měla vypadat následovně:</p>

<pre>
.vim
├── autoload
│   └── pathogen.vim
├── bundle
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<p><div class="rs-tip-major">Poznámka: samozřejmě je možné (a pro čtenáře <a href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">tohoto seriálu</a> více než pravděpodobné), že struktura vašeho adresáře <strong>~/.vim</strong> bude &bdquo;košatější&ldquo;, ale pro účely tohoto článku začneme skutečně se základní konfigurací.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Instalace samotného modulu <strong>vim-orgmode</strong></h2>

<p></p>

<pre>
cd ~/.vim/bundle
git clone https://github.com/jceb/vim-orgmode
</pre>

<pre>
.vim
├── autoload
│   └── pathogen.vim
├── bundle
│   └── vim-orgmode
│       ├── debian
│       ├── doc
│       ├── documentation
│       ├── examples
│       │   └── plugins
│       ├── ftdetect
│       ├── ftplugin
│       │   └── orgmode
│       │       ├── docs
│       │       ├── liborgmode
│       │       ├── plugins
│       │       └── py3compat
│       ├── indent
│       ├── syntax
│       └── tests
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Instalace pomocného pluginu <strong>vim-speeddating</strong></h2>

<p></p>

<pre>
cd ~/.vim/bundle
git clone https://github.com/tpope/vim-speeddating
</pre>

<pre>
.vim
├── autoload
│   └── pathogen.vim
├── bundle
│   ├── vim-orgmode
│   │   ├── debian
│   │   ├── doc
│   │   ├── documentation
│   │   ├── examples
│   │   │   └── plugins
│   │   ├── ftdetect
│   │   ├── ftplugin
│   │   │   └── orgmode
│   │   │       ├── docs
│   │   │       ├── liborgmode
│   │   │       ├── plugins
│   │   │       └── py3compat
│   │   ├── indent
│   │   ├── syntax
│   │   └── tests
│   └── vim-speeddating
│       ├── autoload
│       ├── doc
│       └── plugin
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Dokončení konfigurace v&nbsp;souboru <strong>.vimrc</strong></h2>

<pre>
set nocompatible
</pre>

<pre>
execute pathogen#infect()
</pre>

<pre>
filetype plugin indent on
</pre>

<pre>
set guioptions+=m
</pre>

*** image ***
<p><i>Obrázek XX: GVim bez zobrazeného menu.</i></p>

*** image ***
<p><i>Obrázek XX: GVim se zobrazeným menu po zadání příkazu <strong>:set guioptions+=m</strong>.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Základní struktura souborů s&nbsp;poznámkami a diářem</h2>

<p></p>

<pre>
:let maplocalleader=","
</pre>

:echo g:org_heading_shade_leading_stars


<p><a name="k09"></a></p>
<h2 id="k09">9. Změna náhledu na dokument</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Seznamy</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Zaškrtávací políčka</h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Značky &bdquo;Udělat&ldquo; a &bdquo;Hotovo&ldquo;</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Definice značek pro specifické procesy</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Vlastní štítky</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Základní operace pro práci s&nbsp;daty a časovými značkami</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Použití kalendáře</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Prozatím neimplementované vlastnosti modulu <strong>vim-orgmode</strong></h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Org-Mode home page<br />
<a href="https://orgmode.org/">https://orgmode.org/</a>
</li>

<li>The Org Manual<br />
<a href="https://orgmode.org/manual/index.html">https://orgmode.org/manual/index.html</a>
</li>

<li>Emacs Org-mode: Organizing a Scientist’s Life and Work<br />
<a href="https://vimeo.com/33725204">https://vimeo.com/33725204</a>
</li>

<li>Outlining Your Notes with Org<br />
<a href="http://sachachua.com/blog/2008/01/outlining-your-notes-with-org/">http://sachachua.com/blog/2008/01/outlining-your-notes-with-org/</a>
</li>

<li>The Plain Text Project<br />
<a href="https://plaintextproject.online/">https://plaintextproject.online/</a>
</li>

<li>Org-mode (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Org-mode">https://en.wikipedia.org/wiki/Org-mode</a>
</li>

<li>vim-orgmode na GitHubu<br />
<a href="https://github.com/jceb/vim-orgmode">https://github.com/jceb/vim-orgmode</a>
</li>

<li>vim-speeddating na GitHubu<br />
<a href="https://github.com/tpope/vim-speeddating">https://github.com/tpope/vim-speeddating</a>
</li>

<li>Org Guide<br />
<a href="https://github.com/jceb/vim-orgmode/blob/master/doc/orgguide.txt">https://github.com/jceb/vim-orgmode/blob/master/doc/orgguide.txt</a>
</li>

<li>Org Mode: which plugin to use. VimOrganizer or Vim-Orgmode?<br />
<a href="https://www.reddit.com/r/vim/comments/4ms4z0/org_mode_which_plugin_to_use_vimorganizer_or/">https://www.reddit.com/r/vim/comments/4ms4z0/org_mode_which_plugin_to_use_vimorganizer_or/</a>
</li>

<li>Writing Vim Plugins<br />
<a href="http://stevelosh.com/blog/2011/09/writing-vim-plugins/">http://stevelosh.com/blog/2011/09/writing-vim-plugins/</a>
</li>

<li>how to understand this vim script?<br />
<a href="http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script">http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script</a>
</li>

<li>Novinky ve VIM 7: Skriptovací­ jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>DirDiff.vim : A plugin to diff and merge two directories recursively.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=102">http://www.vim.org/scripts/script.php?script_id=102</a>
</li>

<li>vim-dirdiff na GitHubu<br />
<a href="https://github.com/will133/vim-dirdiff">https://github.com/will133/vim-dirdiff</a>
</li>

<li>fakeclip : pseudo clipboard register for non-GUI version of Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2098">http://www.vim.org/scripts/script.php?script_id=2098</a>
</li>

<li>vim-fakeclip na GitHubu<br />
<a href="https://github.com/kana/vim-fakeclip">https://github.com/kana/vim-fakeclip</a>
</li>

<li>vim-fakeclip: Dokumentace<br />
<a href="http://kana.github.io/config/vim/fakeclip.html">http://kana.github.io/config/vim/fakeclip.html</a>
</li>

<li>Vim Multiple Cursors na GitHubu<br />
<a href="https://github.com/terryma/vim-multiple-cursors">https://github.com/terryma/vim-multiple-cursors</a>
</li>

<li>SLIME (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/SLIME">http://en.wikipedia.org/wiki/SLIME</a>
</li>

<li>vim-slime na GitHubu<br />
<a href="https://github.com/jpalardy/vim-slime">https://github.com/jpalardy/vim-slime</a>
</li>

<li>vi Editor Commands<br />
<a href="http://www.cs.rit.edu/~cslab/vi.html#A1.4">http://www.cs.rit.edu/~cslab/vi.html#A1.4</a>
</li>

<li>vi Manual<br />
<a href="http://www.cs.fsu.edu/general/vimanual.html">http://www.cs.fsu.edu/general/vimanual.html</a>
</li>

<li>Mastering the Vi Editor<br />
<a href="http://www.susnet.uk/mastering-the-vi-editor">http://www.susnet.uk/mastering-the-vi-editor</a>
</li>

<li>Using undo branches<br />
<a href="http://vim.wikia.com/wiki/Using_undo_branches">http://vim.wikia.com/wiki/Using_undo_branches</a>
</li>

<li>Gundo<br />
<a href="http://sjl.bitbucket.org/gundo.vim/">http://sjl.bitbucket.org/gundo.vim/</a>
</li>

<li>Vim as a Python IDE, or Python IDE as Vim<br />
<a href="http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/">http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/</a>
</li>

<li>histwin na GitHubu<br />
<a href="https://github.com/chrisbra/histwin.vim">https://github.com/chrisbra/histwin.vim</a>
</li>

<li>histwin.vim : Browse the undo tree<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2932">http://www.vim.org/scripts/script.php?script_id=2932</a>
</li>

<li>undotree.vim : Display your undo history in a graph<br />
<a href="http://www.vim.org/scripts/script.php?script_id=4177">http://www.vim.org/scripts/script.php?script_id=4177</a>
</li>

<li>Surround<br />
<a href="http://www.bestofvim.com/plugin/surround/">http://www.bestofvim.com/plugin/surround/</a>
</li>

<li>SnipMate<br />
<a href="http://www.bestofvim.com/plugin/snipmate/">http://www.bestofvim.com/plugin/snipmate/</a>
</li>

<li>Getting a Clojure REPL in Vim With VimClojure, Nailgun, and Leiningen<br />
<a href="http://naleid.com/blog/2011/12/19/getting-a-clojure-repl-in-vim-with-vimclojure-nailgun-and-leiningen/">http://naleid.com/blog/2011/12/19/getting-a-clojure-repl-in-vim-with-vimclojure-nailgun-and-leiningen/</a>
</li>

<li>The NERD Commenter : A plugin that allows for easy commenting of code for many filetypes.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1218">http://www.vim.org/scripts/script.php?script_id=1218</a>
</li>

<li>NERD Commenter na GitHubu<br />
<a href="https://github.com/scrooloose/nerdcommenter">https://github.com/scrooloose/nerdcommenter</a>
</li>

<li>luarefvim : Lua reference manual<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1291">http://www.vim.org/scripts/script.php?script_id=1291</a>
</li>

<li>lua.vim : Lua file type plug-in for the Vim text editor<br />
<a href="http://www.vim.org/scripts/script.php?script_id=3625">http://www.vim.org/scripts/script.php?script_id=3625</a>
</li>

<li>vim-lua-ftplugin<br />
<a href="https://github.com/xolox/vim-lua-ftplugin">https://github.com/xolox/vim-lua-ftplugin</a>
</li>

<li>Vi Improved<br />
<a href="https://wiki.python.org/moin/Vim">https://wiki.python.org/moin/Vim</a>
</li>

<li>javacomplete : Omni Completion for JAVA<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1785">http://www.vim.org/scripts/script.php?script_id=1785</a>
</li>

<li>SearchComplete<br />
<a href="http://www.vim.org/scripts/script.php?script_id=474">http://www.vim.org/scripts/script.php?script_id=474</a>
</li>

<li>ShowMarks<br />
<a href="http://www.vim.org/scripts/script.php?script_id=152">http://www.vim.org/scripts/script.php?script_id=152</a>
</li>

<li>ctrlp.vim<br />
<a href="https://github.com/kien/ctrlp.vim">https://github.com/kien/ctrlp.vim</a>
</li>

<li>ctrlp.vim<br />
<a href="http://kien.github.io/ctrlp.vim/">http://kien.github.io/ctrlp.vim/</a>
</li>

<li>vim-signature<br />
<a href="https://github.com/kshenoy/vim-signature">https://github.com/kshenoy/vim-signature</a>
</li>

<li>Supertab<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1643">http://www.vim.org/scripts/script.php?script_id=1643</a>
</li>

<li>Supertab (GitHub)<br />
<a href="https://github.com/ervandew/supertab">https://github.com/ervandew/supertab</a>
</li>

<li>Vim Essential Plugin: NERD Tree<br />
<a href="http://code.tutsplus.com/tutorials/vim-essential-plugin-nerdtree--net-19692">http://code.tutsplus.com/tutorials/vim-essential-plugin-nerdtree--net-19692</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem <br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=1658">http://vim.sourceforge.net/scripts/script.php?script_id=1658</a>
</li>

<li>NERD Tree Guide<br />
<a href="http://usevim.com/2012/07/18/nerdtree/">http://usevim.com/2012/07/18/nerdtree/</a>
</li>

<li>vcscommand.vim : CVS/SVN/SVK/git/hg/bzr integration plugin<br />
<a href="http://www.vim.org/scripts/script.php?script_id=90">http://www.vim.org/scripts/script.php?script_id=90</a>
</li>

<li>vcscommand na GitHubu<br />
<a href="https://github.com/vim-scripts/vcscommand.vim">https://github.com/vim-scripts/vcscommand.vim</a>
</li>

<li>Popis skriptu Vim Pathogen<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2332">http://www.vim.org/scripts/script.php?script_id=2332</a>
</li>

<li>Poslední­verze skriptu Vim Pathogen<br />
<a href="https://tpo.pe/pathogen.vim">https://tpo.pe/pathogen.vim</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://vimawesome.com/">http://vimawesome.com/</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://www.vim.org/scripts/script_search_results.php?order_by=rating">http://www.vim.org/scripts/script_search_results.php?order_by=rating</a>
</li>

<li>Vim-airline na GitHubu<br />
<a href="https://github.com/bling/vim-airline">https://github.com/bling/vim-airline</a>
</li>

<li>Vim-airline na www.vim.org<br />
<a href="http://www.vim.org/scripts/download_script.php?src_id=22726">http://www.vim.org/scripts/download_script.php?src_id=22726</a>
</li>

<li>Vim-fugitive na GitHubu<br />
<a href="https://github.com/tpope/vim-fugitive">https://github.com/tpope/vim-fugitive</a>
</li>

<li>Vim-fugitive na www.vim.org<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2975">http://www.vim.org/scripts/script.php?script_id=2975</a>
</li>

<li>Textový editor Vim jako IDE (seriál)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide/</a>
</li>

<li>VIM as Python IDE<br />
<a href="http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/">http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/</a>
</li>

<li>Stack Overflow: VIM: Perl interface: passing a variable to Perl and reading a vim variable from Perl<br />
<a href="http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from">http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from</a>
</li>

<li>Stack Overflow: Getting started with vim scripting with Perl<br />
<a href="http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl">http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl</a>
</li>

<li>Python with a modular IDE (Vim)<br />
<a href="http://www.sontek.net/python-with-a-modular-ide-vim">http://www.sontek.net/python-with-a-modular-ide-vim</a>
</li>

<li>Vim as XML Editor<br />
<a href="http://www.pinkjuice.com/howto/vimxml/">http://www.pinkjuice.com/howto/vimxml/</a>
</li>

<li>xmledit: A filetype plugin to help edit XML, HTML, and SGML documents<br />
<a href="http://www.vim.org/scripts/script.php?script_id=301">http://www.vim.org/scripts/script.php?script_id=301</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

