<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p></p>

<pre>
package main

import (
        "fmt"
        "log"

        "github.com/jroimartin/gocui"
)

func layoutManager(gui *gocui.Gui) error {
        const message = "www.root.cz"

        width := len(message) + 1
        view, err := gui.SetView("mainView", 10, 5, 10+width, 7)
        if err != nil {
                if err != gocui.ErrUnknownView {
                        return err
                }
                fmt.Fprintln(view, message)
        }
        return nil
}

func quitEvent(g *gocui.Gui, v *gocui.View) error {
        return gocui.ErrQuit
}

func main() {
        gui, err := gocui.NewGui(gocui.OutputNormal)
        if err != nil {
                log.Fatal(err)
        }
        defer gui.Close()

        gui.SetManagerFunc(layoutManager)

        err = gui.SetKeybinding("", gocui.KeyCtrlC, gocui.ModNone, quitEvent)
        if err != nil {
                log.Fatal(err)
        }

        err = gui.MainLoop()
        if err != nil && err != gocui.ErrQuit {
                log.Fatal(err)
        }
}
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p></p>

<pre>
package main

import (
        "fmt"
        "log"

        "github.com/jroimartin/gocui"
)

func layoutManager(gui *gocui.Gui) error {
        const message = "www.root.cz"

        width := len(message) + 1
        view, err := gui.SetView("mainView", 10, 5, 10+width, 7)
        if err != nil {
                if err != gocui.ErrUnknownView {
                        return err
                }
                fmt.Fprintln(view, message)
        }
        return nil
}

func quitEvent(g *gocui.Gui, v *gocui.View) error {
        return gocui.ErrQuit
}

func main() {
        gui, err := gocui.NewGui(gocui.OutputNormal)
        if err != nil {
                log.Fatal(err)
        }
        defer gui.Close()

        gui.SetManagerFunc(layoutManager)
        gui.SetCurrentView("")

        err = gui.SetKeybinding("", gocui.KeyCtrlC, gocui.ModNone, quitEvent)
        if err != nil {
                log.Fatal(err)
        }

        err = gui.MainLoop()
        if err != nil && err != gocui.ErrQuit {
                log.Fatal(err)
        }
}
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>

<pre>
package main

import (
        "fmt"
        "log"

        "github.com/jroimartin/gocui"
)

func layoutManager(gui *gocui.Gui) error {
        const message = "www.root.cz"

        maxX, maxY := gui.Size()

        width := len(message) + 1
        view, err := gui.SetView("mainView", maxX/2-width/2, maxY/2-1, maxX/2+width/2, maxY/2+1)
        if err != nil {
                if err != gocui.ErrUnknownView {
                        return err
                }
                fmt.Fprintln(view, message)
        }
        return nil
}

func quitEvent(g *gocui.Gui, v *gocui.View) error {
        return gocui.ErrQuit
}

func main() {
        gui, err := gocui.NewGui(gocui.OutputNormal)
        if err != nil {
                log.Fatal(err)
        }
        defer gui.Close()

        gui.SetManagerFunc(layoutManager)
        gui.SetCurrentView("")

        err = gui.SetKeybinding("", gocui.KeyCtrlC, gocui.ModNone, quitEvent)
        if err != nil {
                log.Fatal(err)
        }

        err = gui.MainLoop()
        if err != nil && err != gocui.ErrQuit {
                log.Fatal(err)
        }
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>

<pre>
package main

import (
        "fmt"
        "log"

        "github.com/jroimartin/gocui"
)

func layoutManager(gui *gocui.Gui) error {
        view1, err := gui.SetView("view1", 10, 5, 20, 10)
        if err != nil {
                if err != gocui.ErrUnknownView {
                        return err
                }
                fmt.Fprintln(view1, "view1")
        }

        view2, err := gui.SetView("view2", 20, 15, 30, 20)
        if err != nil {
                if err != gocui.ErrUnknownView {
                        return err
                }
                fmt.Fprintln(view2, "view2")
        }

        view3, err := gui.SetView("view3", 15, 25, 30, 30)
        if err != nil {
                if err != gocui.ErrUnknownView {
                        return err
                }
                fmt.Fprintln(view3, "view3")
        }
        return nil
}

func quitEvent(g *gocui.Gui, v *gocui.View) error {
        return gocui.ErrQuit
}

func main() {
        gui, err := gocui.NewGui(gocui.OutputNormal)
        if err != nil {
                log.Fatal(err)
        }
        defer gui.Close()

        gui.SetManagerFunc(layoutManager)

        err = gui.SetKeybinding("", 'q', gocui.ModNone, quitEvent)
        if err != nil {
                log.Fatal(err)
        }

        gui.SetCurrentView("")

        err = gui.MainLoop()
        if err != nil && err != gocui.ErrQuit {
                log.Fatal(err)
        }
}
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech minule i dnes použitých demonstračních příkladů
naprogramovaných v&nbsp;jazyku Go byly uloženy do Git repositáře, který
je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář, můžete
namísto toho použít odkazy na jednotlivé demonstrační příklady, které
naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>03_simple_input.go</td><td>vstupní příkazový řádek realizovaný balíčkem <strong>go-prompt</strong></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_20/03_simple_input.go">https://github.com/tisnik/go-root/blob/master/article_20/03_simple_input.go</a></td></tr>
<tr><td> 2</td><td>04_prompt.go</td><td>vstupní příkazový řádek s&nbsp;historií</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_20/04_prompt.go">https://github.com/tisnik/go-root/blob/master/article_20/04_prompt.go</a></td></tr>
<tr><td> 3</td><td>05_basic_completer.go</td><td>nabízení slov/příkazů pro automatické doplnění</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_20/05_basic_completer.go">https://github.com/tisnik/go-root/blob/master/article_20/05_basic_completer.go</a></td></tr>
<tr><td> 4</td><td>06_prefix_completer.go</td><td>vylepšení automatického doplňování příkazů</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_20/06_prefix_completer.go">https://github.com/tisnik/go-root/blob/master/article_20/06_prefix_completer.go</a></td></tr>
<tr><td> 5</td><td>07_completion_description.go</td><td>popis jednotlivých příkazů zobrazovaný uživateli</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_20/07_completion_description.go">https://github.com/tisnik/go-root/blob/master/article_20/07_completion_description.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 6</td><td>example_1.go</td><td>kostra programu, který dokáže vypsat obarvený text na terminál a reagovat na stisk kláves</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_1.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_1.go</a></td></tr>
<tr><td> 7</td><td>example_2.go</td><td>korektní ukončení programu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_2.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_2.go</a></td></tr>
<tr><td> 8</td><td>example_3.go</td><td>vykreslení okna do plochy terminálu, reakce na změnu velikosti terminálu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_3.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_3.go</a></td></tr>
<tr><td> 9</td><td>example_4.go</td><td>kreslení na plochu terminálu s&nbsp;využitím myši</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_4.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_4.go</a></td></tr>
<tr><td>10</td><td>example_5.go</td><td>podporované styly zpráv vypisovaných na plochu terminálu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_5.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_5.go</a></td></tr>
<tr><td>11</td><td>example_6.go</td><td>standardní barvová paleta terminálů (a její nedodržování)</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_6.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_6.go</a></td></tr>
<tr><td>12</td><td>example_7.go</td><td>světlý vs.&nbsp;tmavý text na ploše terminálu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_7.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_7.go</a></td></tr>
<tr><td>13</td><td>example_8.go</td><td>specifikace 24bitové barvy popředí (textů)</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_8.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_8.go</a></td></tr>
<tr><td>14</td><td>example_9.go</td><td>specifikace 24bitové barvy pozadí</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_9.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_9.go</a></td></tr>
<tr><td>15</td><td>example_A.go</td><td>změna stylu zobrazení textového kurzoru na vybraných terminálech</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AC/example_A.go">https://github.com/tisnik/go-root/blob/master/article_AC/example_A.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>gocui01.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui01.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui01.go</a></td></tr>
<tr><td>17</td><td>gocui02.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui02.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui02.go</a></td></tr>
<tr><td>18</td><td>gocui03.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui03.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui03.go</a></td></tr>
<tr><td>19</td><td>gocui04.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui04.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui04.go</a></td></tr>
<tr><td>20</td><td>gocui05.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui05.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui05.go</a></td></tr>
<tr><td>21</td><td>gocui06.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui06.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui06.go</a></td></tr>
<tr><td>22</td><td>gocui07.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui07.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui07.go</a></td></tr>
<tr><td>23</td><td>gocui08.go</td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/gocui08.go">https://github.com/tisnik/go-root/blob/master/article_AD/gocui08.go</a></td></tr>
<tr><td>24</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AD/">https://github.com/tisnik/go-root/blob/master/article_AD/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Tvorba aplikací a her s&nbsp;textovým uživatelským rozhraním s&nbsp;využitím knihovny Blessed<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-uzivatelskym-rozhranim-s-vyuzitim-knihovny-blessed/">https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-uzivatelskym-rozhranim-s-vyuzitim-knihovny-blessed/</a>
</li>

<li>Tvorba aplikací a her s&nbsp;textovým rozhraním s&nbsp;knihovnou Blessed (dokončení)<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-rozhranim-s-knihovnou-blessed-dokonceni/">https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-rozhranim-s-knihovnou-blessed-dokonceni/</a>
</li>

<li>Text-Based User Interfaces<br />
<a href="https://appliedgo.net/tui/">https://appliedgo.net/tui/</a>
</li>

<li>PTerm: A powerful TUI framework written in Go<br />
<a href="https://pterm.sh/">https://pterm.sh/</a>
</li>

<li>termbox-go<br />
<a href="https://github.com/nsf/termbox-go">https://github.com/nsf/termbox-go</a>
</li>

<li>tcell<br />
<a href="https://github.com/gdamore/tcell">https://github.com/gdamore/tcell</a>
</li>

<li>termui<br />
<a href="https://github.com/gizak/termui">https://github.com/gizak/termui</a>
</li>

<li>GOCUI &ndash; Go Console User Interface<br />
<a href="https://github.com/jroimartin/gocui">https://github.com/jroimartin/gocui</a>
</li>

<li>Fork předešlého<br />
<a href="https://github.com/jesseduffield/gocui">https://github.com/jesseduffield/gocui</a>
</li>

<li>CLUI<br />
<a href="https://github.com/VladimirMarkelov/clui">https://github.com/VladimirMarkelov/clui</a>
</li>

<li>tview &ndash; Rich Interactive Widgets for Terminal UIs<br />
<a href="https://github.com/rivo/tview">https://github.com/rivo/tview</a>
</li>

<li>cview<br />
<a href="https://code.rocket9labs.com/tslocum/cview">https://code.rocket9labs.com/tslocum/cview</a>
</li>

<li>ANSI Escape Code &ndash; Colors<br />
<a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors">https://en.wikipedia.org/wiki/ANSI_escape_code#Colors</a>
</li>

<li>A curated list of awesome Go frameworks, libraries and software<br />
<a href="https://awesome-go.com/">https://awesome-go.com/</a>
</li>

<li>Aurora<br />
<a href="https://github.com/logrusorgru/aurora">https://github.com/logrusorgru/aurora</a>
</li>

<li>colourize<br />
<a href="https://github.com/TreyBastian/colourize">https://github.com/TreyBastian/colourize</a>
</li>

<li>go-colortext<br />
<a href="https://github.com/daviddengcn/go-colortext">https://github.com/daviddengcn/go-colortext</a>
</li>

<li>blessed na PyPi<br />
<a href="https://pypi.org/project/blessed/">https://pypi.org/project/blessed/</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/jquast/blessed">https://github.com/jquast/blessed</a>
</li>

<li>Blessed documentation!<br />
<a href="https://blessed.readthedocs.io/en/latest/">https://blessed.readthedocs.io/en/latest/</a>
</li>

<li>termbox-go na GitHubu<br />
<a href="https://github.com/nsf/termbox-go">https://github.com/nsf/termbox-go</a>
</li>

<li>termui na GitHubu<br />
<a href="https://github.com/gizak/termui">https://github.com/gizak/termui</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/chjj/blessed">https://github.com/chjj/blessed</a>
</li>

<li>blessed-contrib na GitHubu<br />
<a href="https://github.com/yaronn/blessed-contrib">https://github.com/yaronn/blessed-contrib</a>
</li>

<li>tui-rs na GitHubu<br />
<a href="https://github.com/fdehau/tui-rs">https://github.com/fdehau/tui-rs</a>
</li>

<li>asciigraph<br />
<a href="https://github.com/guptarohit/asciigraph">https://github.com/guptarohit/asciigraph</a>
</li>

<li>Standardní balíček text/tabwriter<br />
<a href="https://golang.org/pkg/text/tabwriter/">https://golang.org/pkg/text/tabwriter/</a>
</li>

<li>Elastic tabstops: A better way to indent and align code<br />
<a href="https://nickgravgaard.com/elastic-tabstops/">https://nickgravgaard.com/elastic-tabstops/</a>
</li>

<li>ASCII Table Writer<br />
<a href="https://github.com/olekukonko/tablewriter">https://github.com/olekukonko/tablewriter</a>
</li>

<li>TablePrinter<br />
<a href="https://github.com/lensesio/tableprinter">https://github.com/lensesio/tableprinter</a>
</li>

<li>go-pretty<br />
<a href="https://github.com/jedib0t/go-pretty">https://github.com/jedib0t/go-pretty</a>
</li>

<li>cfmt<br />
<a href="https://github.com/mingrammer/cfmt">https://github.com/mingrammer/cfmt</a>
</li>

<li>box-cli-maker<br />
<a href="https://github.com/Delta456/box-cli-maker">https://github.com/Delta456/box-cli-maker</a>
</li>

<li>go-prompt<br />
<a href="https://github.com/c-bata/go-prompt">https://github.com/c-bata/go-prompt</a>
</li>

<li>lazygit<br />
<a href="https://github.com/jesseduffield/lazygit">https://github.com/jesseduffield/lazygit</a>
</li>

<li>lazydocker<br />
<a href="https://github.com/jesseduffield/lazydocker">https://github.com/jesseduffield/lazydocker</a>
</li>

<li>lazynpm<br />
<a href="https://github.com/jesseduffield/lazynpm">https://github.com/jesseduffield/lazynpm</a>
</li>

<li>Awesome TUIs &ndash; list of projects that provide terminal user interfaces<br />
<a href="https://github.com/rothgar/awesome-tuis">https://github.com/rothgar/awesome-tuis</a>
</li>

<li>fjira<br />
<a href="https://github.com/mk-5/fjira">https://github.com/mk-5/fjira</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

