<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba sešitů pro tabulkové procesory v programovacím jazyku Go - formát xlsx</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba sešitů pro tabulkové procesory v programovacím jazyku Go - formát xlsx</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Na předchozí článek, v němž jsme se seznámili se základními vlastnostmi knihoven encoding/csv a tealeg/xlsx dnes navážeme. Zaměříme se totiž na popis dalších vlastností formátu Office Open XML Workbook neboli (podle používané koncovky) xlsx i toho, jak tyto vlastnosti ovlivňují tvorbu sešitů.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Tvorba sešitů pro tabulkové procesory v&nbsp;programovacím jazyku Go &ndash; formát xlsx</a></p>
<p><a href="#k02">2. Způsob uložení jednoduchého sešitu s&nbsp;jediným prázdným listem</a></p>
<p><a href="#k03">3. Interní struktura sešitu se třemi prázdnými listy</a></p>
<p><a href="#k04">4. Uložení celočíselných hodnot v&nbsp;buňce sešitu</a></p>
<p><a href="#k05">5. Uložení pravdivostních hodnot a hodnot s&nbsp;plovoucí řádovou čárkou</a></p>
<p><a href="#k06">6. Nepřímé uložení řetězců (referencí)</a></p>
<p><a href="#k07">7. Spojení buněk v&nbsp;tabulce</a></p>
<p><a href="#k08">8. List s&nbsp;horizontálně spojenými buňkami</a></p>
<p><a href="#k09">9. Spojení neexistující buňky</a></p>
<p><a href="#k10">10. Vertikální spojení buněk</a></p>
<p><a href="#k11">11. Specifikace formátu zobrazení hodnot v&nbsp;buňkách</a></p>
<p><a href="#k12">12. Popis stylů zobrazení obsahu buněk</a></p>
<p><a href="#k13">13. Formátování časových údajů a dat</a></p>
<p><a href="#k14">14. Pomocné funkce pro konverzi časových údajů</a></p>
<p><a href="#k15">15. Explicitně nastavené styly zobrazení</a></p>
<p><a href="#k16">16. Závěrem</a></p>
<p><a href="#k17">17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">18. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba sešitů pro tabulkové procesory v&nbsp;programovacím jazyku Go &ndash; formát xlsx</h2>

<p><a
href="https://www.root.cz/clanky/tvorba-sesitu-pro-tabulkove-procesory-v-programovacim-jazyku-go/">V&nbsp;předchozím
článku</a> jsme si ukázali, jakým způsobem je možné v&nbsp;aplikacích
vyvinutých v&nbsp;programovacím jazyku Go vytvářet takzvané sešity
(<i>workbook</i>), které je následně možné otevřít a dále zpracovat
v&nbsp;tabulkových procesorech (<i>spreadsheet</i>), například
v&nbsp;&bdquo;kancelářských&ldquo; aplikacích <i>Gnumeric</i>, <i>Microsoft
Excel</i>, <i>LibreOffice Calc</i> či v&nbsp;některých tabulkových procesorech
naprogramovaných a dostupných ve formě webových aplikací (<i>Google Doc</i>,
<i>Ethercalc</i>). Nejprve jsme se zaměřili na alespoň stručný popis standardní
knihovny <strong>encoding/csv</strong>, která zajišťuje čtení i zápis tabulek
(tedy vlastně jediného listu) uložených ve formátu CSV, přesněji řečeno
v&nbsp;podmnožině tohoto variabilního formátu odpovídající <a
href="https://tools.ietf.org/html/rfc4180">RFC 4180</a>. Tato de facto norma
však zdaleka nepopisuje všechny varianty CSV, s&nbsp;nimiž se můžeme
v&nbsp;praxi setkat. Navíc &ndash; což je v&nbsp;praxi ještě problémovější
záležitost &ndash; se nepopisuje sémantika zápisu informací o datu a/nebo
času.</p>

<p><a
href="https://www.root.cz/clanky/tvorba-sesitu-pro-tabulkove-procesory-v-programovacim-jazyku-go#k06">Ve
druhé polovině předchozího článku</a> jsme se pak zmínili o knihovně nazvané
<strong>tealeg/xlsx</strong>, která realizuje programové rozhraní
k&nbsp;formátu <i>Office Open XML Workbook</i> neboli (podle používané
koncovky) <i>xlsx</i>. Tento formát je součástí skupiny formátů známých též pod
zkratkou <i>OOXML</i> a &ndash; jak uvidíme v&nbsp;dalších kapitolách &ndash;
vnitřní struktura tohoto formátu je tvořena sadou zazipovaných souborů
(většinou používajících jazyk XML). Dnes se seznámíme s&nbsp;některými dalšími
vlastnostmi tohoto formátu, protože bez alespoň základní znalosti toho, jaké má
<i>xlsx</i> vlastnosti, není možné úspěšně vytvářet složitěji strukturované
sešity s&nbsp;množstvím stylů i dalších objektů (grafů atd.).</p>

<p><div class="rs-tip-major">Poznámka: na tomto místě je možné dobré upozornit
na to, že formát <i>xlsx</i> nemá prakticky nic společného s&nbsp;dřívějším
binárním formátem <i>xls</i> (což je ostatně jen dobře). Původní <i>xls</i>,
který existoval v&nbsp;několika variantách, byl serializačním formátem Excelu,
což pochopitelně způsobovalo problémy při přenosu mezi různými verzemi tohoto
tabulkového procesoru (nové verze tedy musely explicitně obsahovat kód pro
import starších variant). Navíc je zajímavé, že i když je <i>xls</i> binárním
formátem, bývala velikost souborů větší, než v&nbsp;případě stejných tabulek
uložených do <i>xlsx</i>.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Způsob uložení jednoduchého sešitu s&nbsp;jediným prázdným listem</h2>

<p>Nejprve se podíváme na interní strukturu souboru obsahujícího jednoduchý
sešit s&nbsp;jediným prázdným listem. Jedná se tedy o nejjednodušší možný sešit
vůbec, protože již minule jsme se dozvěděli, že každý sešit musí obsahovat
alespoň jeden list (což je dosti podobná vlastnost, jakou mají textové
procesory, u nichž nejjednodušší dokument taktéž obsahuje minimálně jednu
prázdnou stranu). Sešit s&nbsp;jediným prázdným listem je pochopitelně možné
vytvořit v&nbsp;prakticky jakémkoli moderním tabulkovém procesoru, ovšem my si
ukážeme programové vytvoření (to má velkou přednost v&nbsp;tom, že výsledný
<i>xlsx</i> bude &bdquo;čistý&ldquo;: nebude obsahovat mnoho nadbytečných
informací). V&nbsp;případě programové tvorby sešitu se nejedná o žádné nové
operace, protože jsme se s&nbsp;nimi seznámili již v&nbsp;předchozím článku.
Zdrojový kód programu, který takový sešit vytvoří, může vypadat následovně:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test02.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Po překladu a spuštění této aplikace by měl vzniknout soubor nazvaný
<strong>test02.xlsx</strong> o velikosti 5651 bajtů. To lze snadno ověřit:</p>

<pre>
$ <strong>ls -l test02.xlsx</strong>
&nbsp;
-rw-rw-r--. 1 ptisnovs ptisnovs 5651 Aug 25 19:21 test02.xlsx
</pre>

<p>Mohlo by se zdát, že prakticky prázdný sešit by mohl mít i menší velikost
(v&nbsp;případě CSV by se jednalo o soubor o velikosti přesně nula bajtů),
ovšem ve skutečnosti roste velikost souboru se zvětšujícími se tabulkami
poměrně rozumným způsobem. I v&nbsp;souboru s&nbsp;prázdným sešitem je totiž
nutné mít uloženy metainformace, styly atd. Jak jsme si již naznačili <a
href="#k01">v&nbsp;úvodní kapitole</a>, jsou soubory s&nbsp;koncovkou
<strong>.xlsx</strong> de facto zazipované adresářové struktury
s&nbsp;množstvím dalších souborů (jejich počet se mění se složitostí sešitu).
Můžeme si to ostatně ověřit, protože obsah zazipovaného archivu snadno získáme
nástrojem <strong>unzip</strong>:</p>

<pre>
$ <strong>unzip -l test02.xlsx</strong>
&nbsp;
Archive:  test02.xlsx
  Length      Date    Time    Name
---------  ---------- -----   ----
      798  00-00-1980 00:00   xl/worksheets/sheet1.xml
      743  00-00-1980 00:00   xl/workbook.xml
      580  00-00-1980 00:00   _rels/.rels
      308  00-00-1980 00:00   docProps/app.xml
      364  00-00-1980 00:00   docProps/core.xml
    10940  00-00-1980 00:00   xl/theme/theme1.xml
      142  00-00-1980 00:00   xl/sharedStrings.xml
      736  00-00-1980 00:00   xl/_rels/workbook.xml.rels
     1485  00-00-1980 00:00   [Content_Types].xml
     1062  00-00-1980 00:00   xl/styles.xml
---------                     -------
    17158                     10 files
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si zcela jistě špatného data
vzniku/modifikace souborů uvnitř archivu.</div></p>

<p>Z&nbsp;výše uvedených deseti souborů nás bude zajímat jen mnohem menší
podmnožina. Zejména se jedná o soubor nazvaný <strong>workbook.xml</strong>,
který obsahuje popis struktury celého sešitu. Již podle koncovky je patrné, že
se jedná o soubor s&nbsp;daty reprezentovanými v&nbsp;jazyku XML, ovšem soubor
je minifikován a není tak příliš čitelný. Z&nbsp;tohoto důvodu provedeme jeho
naformátování, a to například nástrojem <strong>xmllint</strong>:</p>

<pre>
$ <strong>xmllint --format workbook.xml</strong>
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;fileVersion appName="Go XLSX"/&gt;
  &lt;workbookPr showObjects="all" date1904="false"/&gt;
  &lt;workbookProtection/&gt;
  &lt;bookViews&gt;
    &lt;workbookView showHorizontalScroll="true" showVerticalScroll="true" showSheetTabs="true" tabRatio="204" windowHeight="8192" windowWidth="16384" xWindow="0" yWindow="0"/&gt;
  &lt;/bookViews&gt;
  &lt;sheets&gt;
    &lt;sheet <strong>name="Tabulka1"</strong> <strong>sheetId="1"</strong> r:id="rId1" state="visible"/&gt;
  &lt;/sheets&gt;
  &lt;definedNames/&gt;
  &lt;calcPr iterateCount="100" refMode="A1" iterateDelta="0.001"/&gt;
&lt;/workbook&gt;
</pre>

<p>Povšimněte si, že kromě informací o způsobu zobrazení sešitu je v&nbsp;tomto
souboru uvedena jediná další důležitá informace &ndash; název jediného listu
&bdquo;Tabulka1&ldquo; a identifikátor tohoto listu &bdquo;1&ldquo;.</p>

<p><div class="rs-tip-major">Poznámka: i když je identifikátor celým číslem,
musí být uveden v&nbsp;uvozovkách, neboť toto je požadavek platný pro všechny
atributy v&nbsp;jazyce XML.</div></p>

<p>Druhým důležitým souborem je soubor nazvaný <strong>sheet1.xml</strong>. Ten
obsahuje popis listu s&nbsp;ID=1, takže se opět podívejme, jaké informace lze
z&nbsp;tohoto souboru získat:</p>

<pre>
$ <strong>xmllint --format sheet1.xml</strong>
</pre>

<p>Výsledek by měl po naformátování vypadat následovně:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;<strong>sheetData/</strong>&gt;
&lt;/worksheet&gt;
</pre>

<p>Vzhledem k&nbsp;tomu, že je sešit prázdný, obsahuje soubor
<strong>sheet1.xml</strong> pouze informace o způsobu jeho zobrazení
(<strong>sheetViews</strong>), zatímco uzel s&nbsp;daty je prázdný
(<strong>sheetData</strong>).</p>

<p><div class="rs-tip-major">Poznámka: jak jste prozatím mohli vidět, naprostá
většina informací se týká způsobu zobrazení sešitu popř.&nbsp;jednotlivých
listů v&nbsp;tabulkovém procesoru. Tyto údaje knihovna <strong>xlsx</strong>
generuje automaticky a pouze některé z&nbsp;nich je možné explicitně
specifikovat. S&nbsp;podrobnostmi se seznámíme v&nbsp;dalším textu.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Interní struktura sešitu se třemi prázdnými listy</h2>

<p>Dále prozkoumáme interní strukturu sešitu, který obsahuje trojici prázdných
listů, přičemž jednotlivé listy jsou nazvány &bdquo;Tabulka1&ldquo;,
&bdquo;Tabulka2&ldquo; a &bdquo;Tabulka3&ldquo;. Takový sešit lze vytvořit
například následujícím programem, který již byl (podobně jako program
z&nbsp;předchozí kapitoly) prezentován minule:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test03.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání tří listů do sešitu</i>
        names := []string{"Tabulka1", "Tabulka2", "Tabulka3"}
        for _, name := range names {
                <i>// pokus o přidání nového listu</i>
                sheet, err := worksheet.AddSheet(name)
                if err != nil {
                        panic(err)
                }
&nbsp;
                fmt.Println(sheet)
        }
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err := worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Podle předpokladů bude nyní soubor s&nbsp;koncovkou <strong>.xlsx</strong>
obsahovat nikoli pouze deset souborů, ale souborů dvanáct, protože každý list
je v&nbsp;archivu reprezentován samostatným souborem (což je poměrně dobré
uspořádání):</p>

<pre>
$ <strong>unzip -l test03.xlsx</strong>
&nbsp;
Archive:  test03.xlsx
  Length      Date    Time    Name
---------  ---------- -----   ----
      798  00-00-1980 00:00   xl/worksheets/sheet1.xml
      799  00-00-1980 00:00   xl/worksheets/sheet2.xml
      799  00-00-1980 00:00   xl/worksheets/sheet3.xml
      885  00-00-1980 00:00   xl/workbook.xml
      580  00-00-1980 00:00   _rels/.rels
      308  00-00-1980 00:00   docProps/app.xml
      364  00-00-1980 00:00   docProps/core.xml
    10940  00-00-1980 00:00   xl/theme/theme1.xml
      142  00-00-1980 00:00   xl/sharedStrings.xml
     1046  00-00-1980 00:00   xl/_rels/workbook.xml.rels
     1777  00-00-1980 00:00   [Content_Types].xml
     1062  00-00-1980 00:00   xl/styles.xml
---------                     -------
    19500                     12 files
</pre>

<p>Soubor obsahující popis sešitu nyní obsahuje informaci o třech listech,
přičemž každému listu je přiřazen jednoznačný identifikátor, který se objevuje
i ve jménu souboru s&nbsp;obsahem listu. Viz též zvýrazněné atributy; první
s&nbsp;názvem listu a druhý s&nbsp;jeho identifikátorem (to však neznamená, že
názvy listů mohou být totožné!):</p>

<pre>
$ <strong>xmllint --format workbook.xml</strong>
&nbsp;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;fileVersion appName="Go XLSX"/&gt;
  &lt;workbookPr showObjects="all" date1904="false"/&gt;
  &lt;workbookProtection/&gt;
  &lt;bookViews&gt;
    &lt;workbookView showHorizontalScroll="true" showVerticalScroll="true" showSheetTabs="true" tabRatio="204" windowHeight="8192" windowWidth="16384" xWindow="0" yWindow="0"/&gt;
  &lt;/bookViews&gt;
  &lt;sheets&gt;
    &lt;sheet <strong>name="Tabulka1"</strong> <strong>sheetId="1"</strong> r:id="rId1" state="visible"/&gt;
    &lt;sheet <strong>name="Tabulka2"</strong> <strong>sheetId="2"</strong> r:id="rId2" state="visible"/&gt;
    &lt;sheet <strong>name="Tabulka3"</strong> <strong>sheetId="3"</strong> r:id="rId3" state="visible"/&gt;
  &lt;/sheets&gt;
  &lt;definedNames/&gt;
  &lt;calcPr iterateCount="100" refMode="A1" iterateDelta="0.001"/&gt;
&lt;/workbook&gt;
</pre>

<p><div class="rs-tip-major">Poznámka: obsah souborů
<strong>sheet1.xml</strong>, <strong>sheet2.xml</strong> a
<strong>sheet3.xml</strong> si nemusíme ukazovat, protože se nijak nezměnil
oproti předchozímu demonstračnímu příkladu s&nbsp;jediným listem.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Uložení celočíselných hodnot v&nbsp;buňce sešitu</h2>

<p>V&nbsp;dalším demonstračním příkladu si ukážeme, jakým způsobem jsou uloženy
celočíselné hodnoty v&nbsp;buňce sešitu. Nejprve si ukažme zdrojový kód
příkladu, po jehož spuštění se vytvoří soubor se sešitem obsahujícím jediný
list, který obsahuje jedinou buňku naplněnou celočíselnou hodnotou 42 (nikoli
tedy řetězcem &bdquo;42&ldquo;):</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test13.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání buňky na řádek</i>
        cell := row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetInt(42)
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Zajímat nás bude pouze obsah souboru <strong>sheet1.xml</strong>
s&nbsp;obsahem listu, takže si ho zobrazíme ve formátované podobě:</p>

<pre>
$ <strong>xmllint --format sheet1.xml</strong>
</pre>

<p>Vypsat by se měl následující naformátovaný obsah:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;<strong>sheetData</strong>&gt;
    &lt;<strong>row r="1"</strong>&gt;
      &lt;<strong>c r="A1"</strong>&gt;
        &lt;<strong>v&gt;42&lt;/v</strong>&gt;
      &lt;<strong>/c</strong>&gt;
    &lt;<strong>/row</strong>&gt;
  &lt;<strong>/sheetData</strong>&gt;
&lt;/worksheet&gt;
</pre>

<p>Důležité informace jsou zvýrazněny tučným písmem, takže jen ve
stručnosti:</p>

<ol>

<li>Hodnoty, které jsou na list vloženy, jsou umístěny do uzlu nazvaného
<strong>sheetData</strong>.</li>

<li>Neukládají se přímo jednotlivé buňky, ale řádky tabulky, přičemž každý
řádek je umístěn v&nbsp;samostatném uzlu nazvaném <strong>row</strong>
s&nbsp;identifikátorem (což je celé číslo vetší nebo rovno jedné &ndash; pouze
některé starší tabulkové procesory číslují řádky od nuly).</li>

<li>Samotná buňka je představována uzlem nazvaným <strong>c</strong>, který
opět obsahuje svoji adresu; v&nbsp;našem případě <strong>A1</strong>.</li>

<li>Hodnota umístěná do buňky je uložena v&nbsp;uzlu nazvaném
<strong>v</strong>. V&nbsp;případě celočíselné hodnoty je v&nbsp;uzlu přímo
tato hodnota. Zajímavé je, že u celočíselných hodnot se neuvádí typ, pouze je
v&nbsp;uzlu <strong>v</strong> umístěna hodnota 42 bez dalších doplňujících
metainformací.</li>

</ol>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že pro velmi často se
opakující uzly, tedy pro jednotlivé buňky a jejich obsah (hodnoty), se
používají pouze jednopísmenné názvy uzlů. Jedná se o snahu o zmenšení velikosti
výsledného souboru, což je poměrně rozumný přístup. Pochopitelně to nemůže
konkurovat formátům CSV nebo TSV, ovšem doména použití těchto formátů se
s&nbsp;OOXML překrývá pouze částečně.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Uložení pravdivostních hodnot a hodnot s&nbsp;plovoucí řádovou čárkou</h2>

<p>Víme již, jak jsou uloženy buňky obsahující celá čísla, takže logicky zbývá
odpovědět na otázku uložení pravdivostních hodnot popř.&nbsp;numerických hodnot
s&nbsp;řádovou čárkou (nutně se nemusí jednat o plovoucí čárku!). Sešit
s&nbsp;listem obsahujícím pravdivostní hodnotu a číslo 1/3 vytvoříme spuštěním
následujícího demonstračního příkladu:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test14.xlsx"
&nbsp;
func main() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání buňky na řádek</i>
        cell := row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetFloat(1 / 3.)
&nbsp;
        <i>// přidání buňky na řádek</i>
        cell = row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetBool(false)
&nbsp;
        <i>// přidání buňky na řádek</i>
        cell = row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetBool(true)
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Opět nás bude zajímat pouze obsah souboru <strong>sheet1.xml</strong>
s&nbsp;informacemi o jediném listu, který se v&nbsp;sešitu nachází:</p>

<pre>
$ <strong>xmllint --format sheet1.xml</strong>
</pre>

<p>Výsledky jsou nyní zajímavější, protože ukazují, že:</p>

<ol>

<li>Hodnota s&nbsp;řádovou čárkou je uložena v&nbsp;největší podporované
přesnosti, a to opět bez uvedení datového typu (rozlišení mezi celými čísly a
čísly s&nbsp;řádovou čárkou je tedy implicitní).</li>

<li>Pravdivostní hodnota je převedena na celé číslo, a to <strong>true</strong>
&rarr; 1 a <strong>false</strong> &rarr; 0 (tedy pro nás programátory typickým
způsobem).</li>

<li>U pravdivostních hodnot je uveden typ <strong>t="b"</strong>, takže
tabulkové procesory budou umět hodnoty 0 a 1 správně interpretovat.</li>

</ol>

<p>Ověřme si, že jsou tato tvrzení skutečně správná, a to pohledem do souboru
<strong>sheet1.xml</strong>:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1:B1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;<strong>sheetData</strong>&gt;
    &lt;<strong>row r="1"</strong>&gt;
      &lt;<strong>c r="A1"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;<strong>/c</strong>&gt;
      &lt;<strong>c r="B1" t="b"</strong>&gt;
        &lt;<strong>v&gt;0&lt;/v</strong>&gt;
      &lt;<strong>/c</strong>&gt;
      &lt;<strong>c r="C1" t="b"</strong>&gt;
        &lt;<strong>v&gt;1&lt;/v</strong>&gt;
      &lt;<strong>/c</strong>&gt;
    &lt;<strong>/row</strong>&gt;
  &lt;<strong>/sheetData</strong>&gt;
&lt;/worksheet&gt;
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Nepřímé uložení řetězců (referencí)</h2>

<p>Nyní zdrojový kód demonstračního příkladu, který vytváří sešit, nepatrně
upravíme, a to konkrétně takovým způsobem, aby se v&nbsp;listu sešitu nacházela
buňka s&nbsp;řetězcem (použijeme tedy metodu <strong>SetString</strong>). Jak
totiž uvidíme dále, jsou řetězce ukládány způsobem zcela odlišným od
&bdquo;primitivních&ldquo; hodnot, což může být zpočátku překvapující:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test04.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání buňky na řádek</i>
        cell := row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("Hello")
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Pohled na interní strukturu sešitu nám odhalí, jak jsou řetězce
ukládány:</p>

<pre>
$ <strong>xmllint --format sheet1.xml</strong>
</pre>

<p>Z&nbsp;výpisu je patrné, že list obsahuje jedinou buňku (konkrétně buňku
A1), která je typu &bdquo;s&ldquo; a obsahuje hodnotu 0. To je zajisté
zvláštní, protože jsme přece do listu uložili řetězec &bdquo;Hello&ldquo; a
nikoli nulovou hodnotu:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;<strong>sheetData</strong>&gt;
    &lt;<strong>row r="1"</strong>&gt;
      &lt;<strong>c r="A1" t="s"</strong>&gt;
        &lt;<strong>v&gt;0&lt;/v</strong>&gt;
      &lt;<strong>/c</strong>&gt;
    &lt;<strong>/row</strong>&gt;
  &lt;<strong>/sheetData</strong>&gt;
&lt;/worksheet&gt;
</pre>

<p>Ve skutečnosti jsou řetězce ukládány do jiného souboru nazvaného
<strong>sharedStrings.xml</strong> ve formě jednoduché tabulky:</p>

<pre>
$ <strong>xmllint --format sharedStrings.xml</strong>
&nbsp;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="1" uniqueCount="1"&gt;
  &lt;si&gt;
    &lt;t&gt;Hello&lt;/t&gt;
  &lt;/si&gt;
&lt;/sst&gt;
</pre>

<p>Tabulkový procesor z&nbsp;této tabulky přečte řetězec s&nbsp;indexem 0 a
zobrazí ho v&nbsp;buňce A1.</p>

<p><div class="rs-tip-major">Poznámka: do určité míry tento přístup připomíná
<i>string pool</i>, s&nbsp;nímž jsme se seznámili při popisu <a
href="https://www.root.cz/clanky/pohled-pod-kapotu-jvm-2-cast-podrobnejsi-analyza-obsahu-constant-poolu/">interní
struktury souborů <strong>class</strong></a>.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Spojení buněk v&nbsp;tabulce</h2>

<p>Tabulky používané v&nbsp;tabulkových procesorech nejsou čistými maticemi
buněk o stejné velikosti. Buňky, přesněji řečeno sousední buňky tvořící
obdélníkové oblasti, je totiž možné spojovat. V&nbsp;knihovně
<strong>tealeg/xlsx</strong> k&nbsp;tomuto účelu slouží metoda nazvaná
<strong>Merge</strong> aplikovaná na buňku &ndash; to nám napovídá, že spojení
je vlastností buňky a nikoli sešitu:</p>

<pre>
$ <strong>go doc tealeg/xlsx.Merge</strong>
&nbsp;
package xlsx // import "github.com/tealeg/xlsx"
&nbsp;
func (c *Cell) Merge(hcells, vcells int)
    Merge with other cells, horizontally and/or vertically.
</pre>

<p>Z&nbsp;popisu je patrné, že se této funkci předává dvojice celých čísel.
Tyto hodnoty udávají <i>s&nbsp;kolika buňkami</i> horizontálně
popř.&nbsp;vertikálně se má buňka spojit. To znamená, že číslo 1 znamená
spojení se sousední buňkou, zatímco číslo 0 znamená, že v&nbsp;daném směru ke
spojení nedochází (to je velký rozdíl například oproti atributům
<strong>rowspan</strong> a <strong>colspan</strong> v&nbsp;HTML). A dalším
rozdílem je, že spojované buňky by měly v&nbsp;listu existovat, jinak může při
importu sešitu dojít k&nbsp;chybě (to si ostatně ukážeme v&nbsp;dalších
kapitolách).</p>

<p><div class="rs-tip-major">Poznámka: tato funkcionalita není dostupná ve
formátu CSV, který sešity skutečně reprezentuje jako pravidelné matice (i když
je pravda, že jednotlivé řádky mohou mít rozdílný počet buněk).</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. List s&nbsp;horizontálně spojenými buňkami</h2>

<p>V&nbsp;následujícím demonstračním příkladu je vytvořen sešit s&nbsp;jedním
listem a tento list obsahuje trojici buněk (všechny na jednom řádku). Ovšem
druhá buňka je spojena s&nbsp;buňkou třetí, takže ve skutečnosti hodnotu třetí
buňky v&nbsp;tabulkovém procesoru neuvidíme, což je ostatně patrné i na
screenshotu:</p>

*** image ***

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"

        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<strong>// jméno generovaného souboru</strong>
const spreadsheetName = "test15.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání první buňky na řádek</i>
        cell := row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("1x1")
&nbsp;
        <i>// přidání druhé buňky na řádek</i>
        cell = row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("2x1")
&nbsp;
        <i>// a spojení s další buňkou</i>
        cell.Merge(1, 0)
&nbsp;
        <i>// přidání třetí buňky na řádek</i>
        cell = row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("1x1")
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Zajímavé bude zjistit, jak se vlastně informace o spojení buněk uloží do
souboru <strong>sheet1.xml</strong> s&nbsp;popisem obsahu listu:</p>

<pre>
$ <strong>xmllint --format sheet1.xml </strong>
&nbsp;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1:C1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;sheetData&gt;
    &lt;row r="1"&gt;
      &lt;c r="A1" t="s"&gt;
        &lt;v&gt;0&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B1" t="s"&gt;
        &lt;v&gt;1&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="C1" t="s"&gt;
        &lt;v&gt;0&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
  &lt;/sheetData&gt;
  &lt;<strong>mergeCells count="1"</strong>&gt;
    &lt;<strong>mergeCell ref="B1:C1"/</strong>&gt;
  &lt;<strong>/mergeCells</strong>&gt;
&lt;/worksheet&gt;
</pre>

<p>Můžeme vidět, že informace o spojených buňkách není součástí atributu buňky
(jak by nás k&nbsp;tomu mohla vést metoda <strong>Merge</strong>), ale
&bdquo;globální informací&ldquo; vztaženou k&nbsp;celému listu.</p>

<p><div class="rs-tip-major">Poznámka: sdílené řetězce s&nbsp;indexy 0 a 1 jsou
opět uloženy v&nbsp;souboru <strong>sharedStrings.xml</strong>, kde je patrné,
že řetězec se shodným obsahem je uložen jen jedenkrát:</div></p>

<pre>
$ <strong>xmllint --format sharedStrings.xml </strong>
&nbsp;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="2" uniqueCount="2"&gt;
  &lt;si&gt;
    &lt;t&gt;1x1&lt;/t&gt;
  &lt;/si&gt;
  &lt;si&gt;
    &lt;t&gt;2x1&lt;/t&gt;
  &lt;/si&gt;
&lt;/sst&gt;
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Spojení neexistující buňky</h2>

<p><a href="#k08">V&nbsp;předchozí kapitole</a> jsme si řekli, že pokud dochází
ke spojení buněk, musí i další spojované buňky existovat, i když se jejich
hodnota ani styl nikde nezobrazí. Pokud tomu tak není, mohou tabulkové
procesory nahlásit chybu při pokusu o import takto upraveného sešitu:</p>

*** image ***

<p>Sešit se špatným obsahem byl vytvořen tímto demonstračním příkladem (který
ovšem po svém spuštění žádnou chybu nenahlásí):</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"

        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test16.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání první buňky na řádek</i>
        cell := row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("1x1")
&nbsp;
        <i>// přidání druhé buňky na řádek</i>
        cell = row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("2x1")
&nbsp;
        <i>// a spojení s další buňkou</i>
        cell.Merge(1, 0)
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Vertikální spojení buněk</h2>

<p>V&nbsp;případě, že se buňky spojují vertikálně (tedy mezi několika řádky),
musí být všechny spojované řádky explicitně vytvořeny, což si na nejjednodušším
příkladu (spojení dvou buněk pod sebou) ukážeme v&nbsp;následujícím zdrojovém
kódu. Povšimněte si (zvýrazněný řádek), jak je možné jediným příkazem zajistit
vytvoření nového řádku, přidání buňky na tento řádek a současně i nastavení
hodnoty buňky:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test17.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání první buňky na řádek</i>
        cell := row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("1x2")
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("1x2")
&nbsp;
        <i>// a spojení s buňkou na následujícím řádku</i>
        cell.Merge(0, 1)
&nbsp;
        <i>// přidání druhé buňky na řádek</i>
        cell = row.AddCell()
&nbsp;
        <i>// naplnění buňky hodnotou</i>
        cell.SetString("1x1")
&nbsp;
        <i>// další řádek tabulky</i>
        sheet.AddRow().AddCell().SetString("foobar")
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Výsledek by mohl po otevření v&nbsp;tabulkovém procesoru vypadat
následovně:</p>

*** image ***

<p>Nyní v&nbsp;souboru <strong>sheet1.xml</strong> nalezneme mj.&nbsp;i
následující informaci o spojení buněk:</p>

<pre>
  &lt;mergeCells count="1"&gt;
    &lt;mergeCell ref="A1:A2"/&gt;
  &lt;/mergeCells&gt;
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Specifikace formátu zobrazení hodnot v&nbsp;buňkách</h2>

<p>Tabulkové procesory rozlišují mezi hodnotou buňky (což může být i vzorec) a
zobrazenou hodnotou. Po textově-grafické stránce se tyto dva údaje mohou
odlišovat a mnohdy se i odlišují, protože v&nbsp;mnoha případech například
požadujeme zobrazení pouze určitého počtu desetinných míst, určitý konkrétní
způsob zobrazení časových údajů atd. Následující demonstrační příklad již
známe, protože jsme se s&nbsp;ním seznámili minule. Ukazuje, jakým způsobem se
nastavuje formát zobrazení numerických hodnot s&nbsp;řádovou čárkou (hodnota je
ve všech buňkách stejná, ovšem zobrazí se různým způsobem):</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test07.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        <i>// přidání buňky na řádek a naplnění hodnotou</i>
        row.AddCell().SetFloatWithFormat(1/3.0, "#0")
        row.AddCell().SetFloatWithFormat(1/3.0, "#0.0")
        row.AddCell().SetFloatWithFormat(1/3.0, "#0.00")
        row.AddCell().SetFloatWithFormat(1/3.0, "#0.000")
        row.AddCell().SetFloatWithFormat(1/3.0, "#0.0000")
        row.AddCell().SetFloatWithFormat(1/3.0, "#0.00000")
        row.AddCell().SetFloatWithFormat(1/3.0, "#0.000000")
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>V&nbsp;samotném sešitu je hodnota uložena v&nbsp;plné (dostupné) přesnosti,
což je ostatně patrné i z&nbsp;pohledu na zdrojový kód sešitu. Ovšem u buněk je
navíc ještě specifikován index stylu (zvýrazněný atribut):</p>

<pre>
$ <strong>xmllint --format sheet1.xml</strong>
&nbsp;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1:G1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;sheetData&gt;
    &lt;row r="1"&gt;
      &lt;c r="A1" <strong>s="1"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
      &lt;c r="B1" <strong>s="2"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
      &lt;c r="C1" <strong>s="3"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
      &lt;c r="D1" <strong>s="4"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
      &lt;c r="E1" <strong>s="5"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
      &lt;c r="F1" <strong>s="6"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
      &lt;c r="G1" <strong>s="7"</strong>&gt;
        &lt;<strong>v&gt;0.3333333333333333&lt;/v</strong>&gt;
      &lt;/c&gt;
    &lt;/row&gt;
  &lt;/sheetData&gt;
&lt;/worksheet&gt;
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Popis stylů zobrazení obsahu buněk</h2>

<p>Styly zobrazení jsou uloženy v&nbsp;samostatném souboru nazvaném
<strong>styles.xml</strong>, jehož struktura je poměrně komplikovaná. Ovšem
můžeme zde vidět především sedm specifikací zobrazení numerických hodnot:</p>

<pre>
&lt;numFmts count="7"&gt;
  &lt;numFmt numFmtId="164" formatCode="#0"/&gt;
  &lt;numFmt numFmtId="165" formatCode="#0.0"/&gt;
  &lt;numFmt numFmtId="166" formatCode="#0.00"/&gt;
  &lt;numFmt numFmtId="167" formatCode="#0.000"/&gt;
  &lt;numFmt numFmtId="168" formatCode="#0.0000"/&gt;
  &lt;numFmt numFmtId="169" formatCode="#0.00000"/&gt;
  &lt;numFmt numFmtId="170" formatCode="#0.000000"/&gt;
&lt;/numFmts&gt;
</pre>

<p>Ty jsou referencovány ve specifikaci stylů buněk. Příkladem může být druhý
styl, který používá zobrazení numerických hodnot popsané formátovacím řetězcem
"#0":</p>

<pre>
&lt;cellXfs count="8"&gt;
  ...
  ...
  ...
  &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="164"&gt;
    &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
  &lt;/xf&gt;
  ...
  ...
  ...
  &lt;/cellXfs&gt;
</pre>

<p>Pro úplnost si ukažme úplný obsah souboru s&nbsp;popisem stylů:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main"&gt;
  &lt;numFmts count="7"&gt;
    &lt;numFmt numFmtId="164" formatCode="#0"/&gt;
    &lt;numFmt numFmtId="165" formatCode="#0.0"/&gt;
    &lt;numFmt numFmtId="166" formatCode="#0.00"/&gt;
    &lt;numFmt numFmtId="167" formatCode="#0.000"/&gt;
    &lt;numFmt numFmtId="168" formatCode="#0.0000"/&gt;
    &lt;numFmt numFmtId="169" formatCode="#0.00000"/&gt;
    &lt;numFmt numFmtId="170" formatCode="#0.000000"/&gt;
  &lt;/numFmts&gt;
  &lt;fonts count="1"&gt;
    &lt;font&gt;
      &lt;sz val="11"/&gt;
      &lt;name val="Arial"/&gt;
      &lt;family val="2"/&gt;
      &lt;color theme="1"/&gt;
      &lt;scheme val="minor"/&gt;
    &lt;/font&gt;
  &lt;/fonts&gt;
  &lt;fills count="2"&gt;
    &lt;fill&gt;
      &lt;patternFill patternType="none"/&gt;
    &lt;/fill&gt;
    &lt;fill&gt;
      &lt;patternFill patternType="gray125"/&gt;
    &lt;/fill&gt;
  &lt;/fills&gt;
  &lt;borders count="1"&gt;
    &lt;border&gt;
      &lt;left/&gt;
      &lt;right/&gt;
      &lt;top/&gt;
      &lt;bottom/&gt;
    &lt;/border&gt;
  &lt;/borders&gt;
  &lt;cellStyleXfs count="1"&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="0" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="0"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
  &lt;/cellStyleXfs&gt;
  &lt;cellXfs count="8"&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="0" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="0"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="164"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="165"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="166"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="167"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="168"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="169"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="1" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="170"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
  &lt;/cellXfs&gt;
&lt;/styleSheet&gt;
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Formátování časových údajů a dat</h2>

<p>V&nbsp;běžných tabulkách se velmi často pracuje s&nbsp;časovými údaji a
pravděpodobně ještě častěji s&nbsp;daty (resp.&nbsp;s&nbsp;kombinací
datum+čas). Tyto údaje, které jsou interně reprezentovány číslem s&nbsp;řádovou
čárkou, je možné zobrazit mnoha různými způsoby, které jsou specifikovány
formátovacím řetězcem. Ukažme si použití následujících formátů, kde
&bdquo;y&ldquo; představuje rok, &bdquo;m&ldquo; měsíc, &bdquo;d&ldquo; den
atd.:</p>

<pre>
"yyyy-mm-dd"
"m/d"
"m/d/yyyy"
"dd/mm/yyyy"
"dd/mm/yy"
"yyyy-mm-dd hh:mm:ss"
"hh:mm"
"hh:mm:ss"
"h:mm:ss"
"[h]:mm:ss"
"[mm]:ss"
</pre>

*** image ***

<p><div class="rs-tip-major">Poznámka: časové údaje ve druhém sloupci jsou
shodné, jen jsou pokaždé zobrazeny jiným způsobem.</div></p>

<p>V&nbsp;následujícím demonstračním příkladu je ukázáno, jak lze nastavit styl
zobrazení buněk s&nbsp;časovými údaji (což vlastně znamená přiřazení
formátovacího řetězce buňce):</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
        "time"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test12.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// formáty časového razítka, které si odzkoušíme</i>
        formats := []string{
                "yyyy-mm-dd",
                "m/d",
                "m/d/yyyy",
                "dd/mm/yyyy",
                "dd/mm/yy",
                "yyyy-mm-dd hh:mm:ss",
                "hh:mm",
                "hh:mm:ss",
                "h:mm:ss",
                "[h]:mm:ss",
                "[mm]:ss",
        }
&nbsp;
        <i>// aktuální datum a čas</i>
        timestamp := time.Now()
&nbsp;
        <i>// zobrazit tabulku s daty/časy naformátovanými zvoleným formátem</i>
        for _, format := range formats {
                <i>// přidání nového řádku do tabulky</i>
                row := sheet.AddRow()
&nbsp;
                <i>// popis formátu</i>
                row.AddCell().SetString(format)
&nbsp;
                <i>// naformátované časové razítko</i>
                cell := row.AddCell()
                cell.SetDateTime(timestamp)
                cell.SetFormat(format)
        }
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Z&nbsp;obsahu souboru <strong>sheet1.xml</strong> je patrné, že hodnoty ve
druhém sloupci jsou skutečně shodné, ovšem odkaz na styl je pokaždé
odlišný:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1:B11"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;sheetData&gt;
    &lt;row r="1"&gt;
      &lt;c r="A1" t="s"&gt;
        &lt;v&gt;0&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B1" <strong>s="1"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="2"&gt;
      &lt;c r="A2" t="s"&gt;
        &lt;v&gt;1&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B2" <strong>s="2"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="3"&gt;
      &lt;c r="A3" t="s"&gt;
        &lt;v&gt;2&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B3" <strong>s="3"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="4"&gt;
      &lt;c r="A4" t="s"&gt;
        &lt;v&gt;3&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B4" <strong>s="4"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="5"&gt;
      &lt;c r="A5" t="s"&gt;
        &lt;v&gt;4&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B5" <strong>s="5"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="6"&gt;
      &lt;c r="A6" t="s"&gt;
        &lt;v&gt;5&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B6" <strong>s="6"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="7"&gt;
      &lt;c r="A7" t="s"&gt;
        &lt;v&gt;6&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B7" <strong>s="7"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="8"&gt;
      &lt;c r="A8" t="s"&gt;
        &lt;v&gt;7&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B8" <strong>s="8"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="9"&gt;
      &lt;c r="A9" t="s"&gt;
        &lt;v&gt;8&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B9" <strong>s="9"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="10"&gt;
      &lt;c r="A10" t="s"&gt;
        &lt;v&gt;9&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B10" <strong>s="10"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
    &lt;row r="11"&gt;
      &lt;c r="A11" t="s"&gt;
        &lt;v&gt;10&lt;/v&gt;
      &lt;/c&gt;
      &lt;c r="B11" <strong>s="11"</strong>&gt;
        &lt;v&gt;44069.7353125&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
  &lt;/sheetData&gt;
&lt;/worksheet&gt;
</pre>

<p>Začátek obsahu souboru <strong>styles.xml</strong> se specifikací
formátovacích řetězců:</p>

<pre>
$ <strong>xmllint --format styles.xml</strong>
&nbsp;
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main"&gt;
  &lt;numFmts count="9"&gt;
    &lt;numFmt numFmtId="164" formatCode="yyyy-mm-dd"/&gt;
    &lt;numFmt numFmtId="165" formatCode="m/d"/&gt;
    &lt;numFmt numFmtId="166" formatCode="m/d/yyyy"/&gt;
    &lt;numFmt numFmtId="167" formatCode="dd/mm/yyyy"/&gt;
    &lt;numFmt numFmtId="168" formatCode="dd/mm/yy"/&gt;
    &lt;numFmt numFmtId="169" formatCode="yyyy-mm-dd hh:mm:ss"/&gt;
    &lt;numFmt numFmtId="170" formatCode="hh:mm"/&gt;
    &lt;numFmt numFmtId="171" formatCode="hh:mm:ss"/&gt;
    &lt;numFmt numFmtId="172" formatCode="[mm]:ss"/&gt;
  &lt;/numFmts&gt;
  ...
  ...
  ...
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Pomocné funkce pro konverzi časových údajů</h2>

<p>Pro snadnější práci s&nbsp;časovými údaji je dostupných několik funkcí
provádějících konverzi mezi několika formáty času (a data):</p>

<table>
<tr><th>#</th><th>Funkce</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>TimeFromExcelTime</td><td>konverze času z&nbsp;Excelovského formátu (číslo s&nbsp;plovoucí čárkou) na hodnotu typu <strong>time.Time</strong></td></tr>
<tr><td>2</td><td>TimeToExcelTime</td><td>provádí opačnou konverzi než první funkce</td></tr>
<tr><td>3</td><td>TimeToUTCTime</td><td>konverze ze standardní reprezentace času do UTC</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: aby situace nebyla tak jednoduchá, je
nutné funkcím <strong>TimeFromExcelTime</strong> a
<strong>TimeToExcelTime</strong> ve druhém parametru předat pravdivostní
hodnotu specifikující, zda se má jako začátek &bdquo;epochy&ldquo; použít rok
1900 nebo 1904. Pokud vás zajímají detaily (druhý systém byl zaveden kvůli
původním Macintoshům), naleznete je například na stránce <a
href="https://docs.microsoft.com/en-us/office/troubleshoot/excel/1900-and-1904-date-system">https://docs.microsoft.com/en-us/office/troubleshoot/excel/1900-and-1904-date-system</a>.</div></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Explicitně nastavené styly zobrazení</h2>

<p>Na závěr si ukažme, jak se do sešitu uloží explicitně nastavené styly
zobrazení. I následující příklad jsme již mohli vidět v&nbsp;předchozí části
tohoto seriálu &ndash; nastavujeme v&nbsp;něm styl jediné buňky na listu:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/tealeg/xlsx/v3"
)
&nbsp;
<i>// jméno generovaného souboru</i>
const spreadsheetName = "test10.xlsx"
&nbsp;
func <strong>main</strong>() {
        <i>// konstrukce struktury typu File</i>
        worksheet := xlsx.NewFile()
&nbsp;
        fmt.Println(worksheet)
&nbsp;
        <i>// přidání listu do sešitu</i>
        sheet, err := worksheet.AddSheet("Tabulka1")
        if err != nil {
                panic(err)
        }
        defer sheet.Close()
&nbsp;
        fmt.Println(sheet)
&nbsp;
        <i>// přidání řádku do tabulky</i>
        row := sheet.AddRow()
&nbsp;
        style := xlsx.NewStyle()
        style.Alignment.Horizontal = "right"
        style.Fill.FgColor = "FFa0FFa0"
        style.Fill.PatternType = "solid"
        style.Font.Bold = true
        style.ApplyAlignment = true
        style.ApplyFill = true
        style.ApplyFont = true
&nbsp;
        <i>// přidání buňky na řádek a naplnění hodnotou</i>
        cell := row.AddCell()
        cell.SetString("Test")
&nbsp;
        <i>// nastavení stylu buňky</i>
        cell.SetStyle(style)
&nbsp;
        <i>// pokus o uložení sešitu</i>
        err = worksheet.Save(spreadsheetName)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Obsah souboru se sešitem neobsahuje žádné doplňkové informace, kromě odkazu
na styl s&nbsp;ID=1 (zvýrazněný atribut):</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"&gt;
  &lt;sheetPr filterMode="false"&gt;
    &lt;pageSetUpPr fitToPage="false"/&gt;
  &lt;/sheetPr&gt;
  &lt;dimension ref="A1"/&gt;
  &lt;sheetViews&gt;
    &lt;sheetView windowProtection="false" showFormulas="false" showGridLines="true" showRowColHeaders="true" showZeros="true" rightToLeft="false" tabSelected="true" showOutlineSymbols="true" defaultGridColor="true" view="normal" topLeftCell="A1" colorId="64" zoomScale="100" zoomScaleNormal="100" zoomScalePageLayoutView="100" workbookViewId="0"&gt;
      &lt;selection pane="topLeft" activeCell="A1" activeCellId="0" sqref="A1"/&gt;
    &lt;/sheetView&gt;
  &lt;/sheetViews&gt;
  &lt;sheetFormatPr defaultRowHeight="12.85"/&gt;
  &lt;sheetData&gt;
    &lt;row r="1"&gt;
      &lt;c r="A1" <strong>s="1"</strong> t="s"&gt;
        &lt;v&gt;0&lt;/v&gt;
      &lt;/c&gt;
    &lt;/row&gt;
  &lt;/sheetData&gt;
&lt;/worksheet&gt;
</pre>

<p>Samotný styl je umístěn samostatně:</p>

<pre>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main"&gt;
  &lt;fonts count="2"&gt;
    &lt;font&gt;
      &lt;sz val="11"/&gt;
      &lt;name val="Arial"/&gt;
      &lt;family val="2"/&gt;
      &lt;color theme="1"/&gt;
      &lt;scheme val="minor"/&gt;
    &lt;/font&gt;
    &lt;font&gt;
      &lt;sz val="12"/&gt;
      &lt;name val="Verdana"/&gt;
      &lt;family val="0"/&gt;
      &lt;charset val="0"/&gt;
      &lt;b/&gt;
    &lt;/font&gt;
  &lt;/fonts&gt;
  &lt;fills count="4"&gt;
    &lt;fill&gt;
      &lt;patternFill patternType="none"/&gt;
    &lt;/fill&gt;
    &lt;fill&gt;
      &lt;patternFill patternType="gray125"/&gt;
    &lt;/fill&gt;
    &lt;fill&gt;
      &lt;patternFill patternType="solid"&gt;
        &lt;fgColor rgb="FFa0FFa0"/&gt;
      &lt;/patternFill&gt;
    &lt;/fill&gt;
    &lt;fill&gt;
      &lt;patternFill patternType="lightGray"/&gt;
    &lt;/fill&gt;
  &lt;/fills&gt;
  &lt;borders count="2"&gt;
    &lt;border&gt;
      &lt;left/&gt;
      &lt;right/&gt;
      &lt;top/&gt;
      &lt;bottom/&gt;
    &lt;/border&gt;
    &lt;border&gt;
      &lt;left style="none"/&gt;
      &lt;right style="none"/&gt;
      &lt;top style="none"/&gt;
      &lt;bottom style="none"/&gt;
    &lt;/border&gt;
  &lt;/borders&gt;
  &lt;cellStyleXfs count="1"&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="0" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="0"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
  &lt;/cellStyleXfs&gt;
  &lt;cellXfs count="2"&gt;
    &lt;xf applyAlignment="0" applyBorder="0" applyFont="0" applyFill="0" applyNumberFormat="0" applyProtection="0" borderId="0" fillId="0" fontId="0" numFmtId="0"&gt;
      &lt;alignment horizontal="general" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
    &lt;xf applyAlignment="1" applyBorder="0" applyFont="1" applyFill="1" applyNumberFormat="0" applyProtection="0" borderId="1" fillId="2" fontId="1" numFmtId="0"&gt;
      &lt;alignment horizontal="right" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
  &lt;/cellXfs&gt;
&lt;/styleSheet&gt;
</pre>

<p>Příkladem nepřímého použití stylů je specifikace barvy výplně buňky:</p>

<pre>
    &lt;fill&gt;
      &lt;patternFill patternType="solid"&gt;
        &lt;fgColor rgb="FFa0FFa0"/&gt;
      &lt;/patternFill&gt;
    &lt;/fill&gt;
</pre>

<p>Tento styl výplně je referencován zde (zvýrazněný atribut):</p>

<pre>
    &lt;xf applyAlignment="1" applyBorder="0" applyFont="1" applyFill="1" applyNumberFormat="0" applyProtection="0" borderId="1" <strong>fillId="2"</strong> fontId="1" numFmtId="0"&gt;
      &lt;alignment horizontal="right" indent="0" shrinkToFit="0" textRotation="0" vertical="bottom" wrapText="0"/&gt;
    &lt;/xf&gt;
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Závěrem</h2>

<p>Při pohledu na zdrojové kódy demonstračních příkladů a současně i na interní
strukturu souborů <strong>.xlsx</strong> je patrné, že samotná tvorba sešitů
vlastně není příliš komplikovaná (na rozdíl od již zmíněného původního formátu
<strong>.xls</strong>). Ovšem <i>tvorba</i> nových sešitů je pouze polovina
práce (a to ta snadnější) &ndash; většinou totiž potřebujeme sešity i načítat,
provádět v&nbsp;nich změny a ty ukládat bez toho, aby se poškodil zbylý obsah
sešitu. A právě touto problematikou se budeme věnovat v&nbsp;navazujícím
článku.</p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
přibližně stovku kilobajtů), můžete namísto toho použít odkazy na jednotlivé
demonstrační příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>spreadsheet01.go</td><td>příklad, který se pokusí vytvořit prázdný sešit ve formátu <i>Office Open XML Workbook</i></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet01.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet01.go</a></td></tr>
<tr><td> 2</td><td>spreadsheet02.go</td><td>sešit s&nbsp;jedním prázdným listem</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet02.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet02.go</a></td></tr>
<tr><td> 3</td><td>spreadsheet03.go</td><td>sešit se třemi prázdnými listy</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet03.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet03.go</a></td></tr>
<tr><td> 4</td><td>spreadsheet04.go</td><td>přidání řádků a buněk do sešitu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet04.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet04.go</a></td></tr>
<tr><td> 5</td><td>spreadsheet05.go</td><td>zjednodušené přidání buňky na řádek s&nbsp;naplněním hodnotou</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet05.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet05.go</a></td></tr>
<tr><td> 6</td><td>spreadsheet06.go</td><td>ukázka podporovaných formátů buněk</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet06.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet06.go</a></td></tr>
<tr><td> 7</td><td>spreadsheet07.go</td><td>podrobnější specifikace formátu zobrazení numerických hodnot</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet07.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet07.go</a></td></tr>
<tr><td> 8</td><td>spreadsheet08.go</td><td>přidání vzorců do sešitu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet08.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet08.go</a></td></tr>
<tr><td> 9</td><td>spreadsheet09.go</td><td>buňky obsahující hypertextové odkazy</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet09.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet09.go</a></td></tr>
<tr><td>10</td><td>spreadsheet10.go</td><td>základ práce se styly</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet10.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet10.go</a></td></tr>
<tr><td>11</td><td>spreadsheet11.go</td><td>sdílení stylů mezi buňkami</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet11.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet11.go</a></td></tr>
<tr><td>12</td><td>spreadsheet12.go</td><td>různé formáty časového razítka</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet12.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet12.go</a></td></tr>
<tr><td>13</td><td>spreadsheet13.go</td><td>sešit s&nbsp;jediným listem, který obsahuje buňku s&nbsp;celočíselnou hodnotou</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet13.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet13.go</a></td></tr>
<tr><td>14</td><td>spreadsheet14.go</td><td>sešit s&nbsp;jediným listem, který obsahuje dvě buňky s&nbsp;pravdivostní hodnotou a hodnotou 1/3</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet14.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet14.go</a></td></tr>
<tr><td>15</td><td>spreadsheet15.go</td><td>sešit obsahující horizontálně spojené buňky</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet15.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet15.go</a></td></tr>
<tr><td>16</td><td>spreadsheet16.go</td><td>sešit obsahující horizontálně spojené buňky, ovšem se špatným formátem</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet16.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet16.go</a></td></tr>
<tr><td>17</td><td>spreadsheet17.go</td><td>sešit obsahující vertikálně spojené buňky</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet17.go">https://github.com/tisnik/go-root/blob/master/article_67/spreadsheet17.go</a></td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Odkazy na Internetu</h2>

<ol>

<li>Spreadsheet<br />
<a href="https://en.wikipedia.org/wiki/Spreadsheet">https://en.wikipedia.org/wiki/Spreadsheet</a>
</li>

<li>List of spreadsheet software<br />
<a href="https://en.wikipedia.org/wiki/List_of_spreadsheet_software">https://en.wikipedia.org/wiki/List_of_spreadsheet_software</a>
</li>

<li>Processing spreadsheet data in Go<br />
<a href="https://appliedgo.net/spreadsheet/">https://appliedgo.net/spreadsheet/</a>
</li>

<li>Package encoding/csv<br />
<a href="https://golang.org/pkg/encoding/csv/#example_Writer">https://golang.org/pkg/encoding/csv/#example_Writer</a>
</li>

<li>Package sheets<br />
<a href="https://godoc.org/google.golang.org/api/sheets/v4">https://godoc.org/google.golang.org/api/sheets/v4</a>
</li>

<li>Package xlsx<br />
<a href="https://github.com/tealeg/xlsx">https://github.com/tealeg/xlsx</a>
</li>

<li>Comma-separated values<br />
<a href="https://en.wikipedia.org/wiki/Comma-separated_values">https://en.wikipedia.org/wiki/Comma-separated_values</a>
</li>

<li>Common Format and MIME Type for Comma-Separated Values (CSV) Files<br />
<a href="https://tools.ietf.org/html/rfc4180">https://tools.ietf.org/html/rfc4180</a>
</li>

<li>Tab-separated values<br />
<a href="https://en.wikipedia.org/wiki/Tab-separated_values">https://en.wikipedia.org/wiki/Tab-separated_values</a>
</li>

<li>Office Open XML (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Office_Open_XML">https://en.wikipedia.org/wiki/Office_Open_XML</a>
</li>

<li>Standard ECMA-376: Office Open XML File Formats<br />
<a href="https://www.ecma-international.org/publications/standards/Ecma-376.htm">https://www.ecma-international.org/publications/standards/Ecma-376.htm</a>
</li>

<li>Adventure for the Atari 2600 Video Game Console by Warren Robinett<br />
<a href="http://www.warrenrobinett.com/adventure/index.html">http://www.warrenrobinett.com/adventure/index.html</a>
</li>

<li>Mapa hry Adventure<br />
<a href="http://www.warrenrobinett.com/adventure/adv-map1.gif">http://www.warrenrobinett.com/adventure/adv-map1.gif</a>
</li>

<li>Integration Basics<br />
<a href="https://gafferongames.com/post/integration_basics/">https://gafferongames.com/post/integration_basics/</a>
</li>

<li>Fix Your Timestep!<br />
<a href="https://gafferongames.com/post/fix_your_timestep/">https://gafferongames.com/post/fix_your_timestep/</a>
</li>

<li>Handling variable frame rate in SDL2<br />
<a href="https://gamedev.stackexchange.com/questions/151877/handling-variable-frame-rate-in-sdl2">https://gamedev.stackexchange.com/questions/151877/handling-variable-frame-rate-in-sdl2</a>
</li>

<li>Too Fast! (SDL fórum)<br />
<a href="https://discourse.libsdl.org/t/too-fast/11128">https://discourse.libsdl.org/t/too-fast/11128</a>
</li>

<li>Performance tricks (SDL fórum)<br />
<a href="https://discourse.libsdl.org/t/performance-tricks/6685">https://discourse.libsdl.org/t/performance-tricks/6685</a>
</li>

<li>Achieving a constant frame rate in SDL<br />
<a href="https://stackoverflow.com/questions/2548541/achieving-a-constant-frame-rate-in-sdl">https://stackoverflow.com/questions/2548541/achieving-a-constant-frame-rate-in-sdl</a>
</li>

<li>Object’s speed control against different framerates<br />
<a href="https://discourse.libsdl.org/t/objects-speed-control-against-different-framerates/14497/1">https://discourse.libsdl.org/t/objects-speed-control-against-different-framerates/14497/1</a>
</li>

<li>Stránky projektu SDL<br />
<a href="http://www.libsdl.org/">http://www.libsdl.org/</a>
</li>

<li>Simple DirectMedia Layer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer">https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer</a>
</li>

<li>SDL Language Bindings<br />
<a href="http://www.libsdl.org/languages.php">http://www.libsdl.org/languages.php</a>
</li>

<li>SDL version 1.2.15<br />
<a
href="http://www.libsdl.org/download-1.2.php">http://www.libsdl.org/download-1.2.php</a>
</li>

<li>SDL version 2.0.1<br />
<a href="http://www.libsdl.org/download-2.0.php">http://www.libsdl.org/download-2.0.php</a>
</li>

<li>Rozhraní go-sdl2<br />
<a href="https://github.com/veandco/go-sdl2">https://github.com/veandco/go-sdl2</a>
</li>

<li>Dokumentace k&nbsp;rozhraní go-sdl2<br />
<a href="https://godoc.org/github.com/veandco/go-sdl2">https://godoc.org/github.com/veandco/go-sdl2</a>
</li>

<li>Dokumentace k&nbsp;balíčku sdl<br />
<a href="https://godoc.org/github.com/veandco/go-sdl2/sdl">https://godoc.org/github.com/veandco/go-sdl2/sdl</a>
</li>

<li>Dokumentace k&nbsp;balíčku gfx<br />
<a href="https://godoc.org/github.com/veandco/go-sdl2/gfx">https://godoc.org/github.com/veandco/go-sdl2/gfx</a>
</li>

<li>Cross-platform games development (part 1)<br />
<a href="http://renatoc.wait4.org/2010/02/04/cross-platform-games-development-part-1/">http://renatoc.wait4.org/2010/02/04/cross-platform-games-development-part-1/</a>
</li>

<li>Cross-platform games development (part 2)<br />
<a href="http://renatoc.wait4.org/tag/sdljava/">http://renatoc.wait4.org/tag/sdljava/</a>
</li>

<li>Go Data Structures: Binary Search Tree<br />
<a href="https://flaviocopes.com/golang-data-structure-binary-search-tree/">https://flaviocopes.com/golang-data-structure-binary-search-tree/</a>
</li>

<li>Gobs of data<br />
<a href="https://blog.golang.org/gobs-of-data">https://blog.golang.org/gobs-of-data</a>
</li>

<li>Formát BSON<br />
<a href="http://bsonspec.org/">http://bsonspec.org/</a>
</li>

<li>Golang Guide: A List of Top Golang Frameworks, IDEs &amp; Tools<br />
<a href="https://blog.intelligentbee.com/2017/08/14/golang-guide-list-top-golang-frameworks-ides-tools/">https://blog.intelligentbee.com/2017/08/14/golang-guide-list-top-golang-frameworks-ides-tools/</a>
</li>

<li>Tvorba univerzálních projevů<br />
<a href="http://www.kyblsoft.cz/projevy">http://www.kyblsoft.cz/projevy</a>
</li>

<li>Repositář projektu Gift<br />
<a href="https://github.com/disintegration/gift">https://github.com/disintegration/gift</a>
</li>

<li>Dokumentace k&nbsp;projektu Gift<br />
<a href="https://godoc.org/github.com/disintegration/gift">https://godoc.org/github.com/disintegration/gift</a>
</li>

<li>Online x86 / x64 Assembler and Disassembler<br />
<a href="https://defuse.ca/online-x86-assembler.htm#disassembly2">https://defuse.ca/online-x86-assembler.htm#disassembly2</a>
</li>

<li>The Design of the Go Assembler<br />
<a href="https://talks.golang.org/2016/asm.slide#1">https://talks.golang.org/2016/asm.slide#1</a>
</li>

<li>A Quick Guide to Go's Assembler<br />
<a href="https://golang.org/doc/asm">https://golang.org/doc/asm</a>
</li>

<li>AssemblyPolicy<br />
<a href="https://github.com/golang/go/wiki/AssemblyPolicy">https://github.com/golang/go/wiki/AssemblyPolicy</a>
</li>

<li>Geohash in Golang Assembly<br />
<a href="https://mmcloughlin.com/posts/geohash-assembly">https://mmcloughlin.com/posts/geohash-assembly</a>
</li>

<li>Command objdump<br />
<a href="https://golang.org/cmd/objdump/">https://golang.org/cmd/objdump/</a>
</li>

<li>Assembly<br />
<a href="https://goroutines.com/asm">https://goroutines.com/asm</a>
</li>

<li>Go &amp; Assembly<br />
<a href="http://www.doxsey.net/blog/go-and-assembly">http://www.doxsey.net/blog/go-and-assembly</a>
</li>

<li>A Foray Into Go Assembly Programming<br />
<a href="https://blog.sgmansfield.com/2017/04/a-foray-into-go-assembly-programming/">https://blog.sgmansfield.com/2017/04/a-foray-into-go-assembly-programming/</a>
</li>

<li>Golang Capturing log.Println And fmt.Println Output<br />
<a href="https://medium.com/@hau12a1/golang-capturing-log-println-and-fmt-println-output-770209c791b4">https://medium.com/@hau12a1/golang-capturing-log-println-and-fmt-println-output-770209c791b4</a>
</li>

<li>Stránka projektu plotly<br />
<a href="https://plot.ly/">https://plot.ly/</a>
</li>

<li>Plotly JavaScript Open Source Graphing Library<br />
<a href="https://plot.ly/javascript/">https://plot.ly/javascript/</a>
</li>

<li>Domain coloring<br />
<a href="https://en.wikipedia.org/wiki/Domain_coloring">https://en.wikipedia.org/wiki/Domain_coloring</a>
</li>

<li>Michael Fogleman's projects<br />
<a href="https://www.michaelfogleman.com/projects/tagged/graphics/">https://www.michaelfogleman.com/projects/tagged/graphics/</a>
</li>

<li>Color Graphs of Complex Functions<br />
<a href="https://web.archive.org/web/20120511021419/http://w.american.edu/cas/mathstat/lcrone/ComplexPlot.html">https://web.archive.org/web/20120511021419/http://w.american.edu/cas/mathstat/lcrone/ComplexPlot.html</a>
</li>

<li>A Gallery of Complex Functions<br />
<a href="http://wismuth.com/complex/gallery.html">http://wismuth.com/complex/gallery.html</a>
</li>

<li>package glot<br />
<a href="https://godoc.org/github.com/Arafatk/glot">https://godoc.org/github.com/Arafatk/glot</a>
</li>

<li>Gnuplotting: Output terminals<br />
<a href="http://www.gnuplotting.org/output-terminals/">http://www.gnuplotting.org/output-terminals/</a>
</li>

<li>Introducing Glot the plotting library for Golang<br />
<a href="https://medium.com/@Arafat./introducing-glot-the-plotting-library-for-golang-3133399948a1">https://medium.com/@Arafat./introducing-glot-the-plotting-library-for-golang-3133399948a1</a>
</li>

<li>Introducing Glot the plotting library for Golang<br />
<a href="https://blog.gopheracademy.com/advent-2018/introducing-glot/">https://blog.gopheracademy.com/advent-2018/introducing-glot/</a>
</li>

<li>Glot is a plotting library for Golang built on top of gnuplot<br />
<a href="https://github.com/Arafatk/glot">https://github.com/Arafatk/glot</a>
</li>

<li>Example plots (gonum/plot)<br />
<a href="https://github.com/gonum/plot/wiki/Example-plots">https://github.com/gonum/plot/wiki/Example-plots</a>
</li>

<li>A repository for plotting and visualizing data (gonum/plot)<br />
<a href="https://github.com/gonum/plot">https://github.com/gonum/plot</a>
</li>

<li>golang library to make https://chartjs.org/ plots<br />
<a href="https://github.com/brentp/go-chartjs">https://github.com/brentp/go-chartjs</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>The Gonum Numerical Computing Package<br />
<a href="https://www.gonum.org/post/introtogonum/">https://www.gonum.org/post/introtogonum/</a>
</li>

<li>Gomacro na GitHubu<br />
<a href="https://github.com/cosmos72/gomacro">https://github.com/cosmos72/gomacro</a>
</li>

<li>gophernotes - Use Go in Jupyter notebooks and nteract<br />
<a href="https://github.com/gopherdata/gophernotes">https://github.com/gopherdata/gophernotes</a>
</li>

<li>gonum<br />
<a href="https://github.com/gonum">https://github.com/gonum</a>
</li>

<li>go-gota/gota -  DataFrames and data wrangling in Go (Golang)<br />
<a href="https://porter.io/github.com/go-gota/gota">https://porter.io/github.com/go-gota/gota</a>
</li>

<li>A repository for plotting and visualizing data <br />
<a href="https://github.com/gonum/plot">https://github.com/gonum/plot</a>
</li>

<li>Gonum Numerical Packages<br />
<a href="https://www.gonum.org/">https://www.gonum.org/</a>
</li>

<li>Stránky projektu MinIO<br />
<a href="https://min.io/">https://min.io/</a>
</li>

<li>MinIO Quickstart Guide<br />
<a href="https://docs.min.io/docs/minio-quickstart-guide.html">https://docs.min.io/docs/minio-quickstart-guide.html</a>
</li>

<li>MinIO Go Client API Reference<br />
<a href="https://docs.min.io/docs/golang-client-api-reference">https://docs.min.io/docs/golang-client-api-reference</a>
</li>

<li>MinIO Python Client API Reference<br />
<a href="https://docs.min.io/docs/python-client-api-reference.html">https://docs.min.io/docs/python-client-api-reference.html</a>
</li>

<li>Performance at Scale: MinIO Pushes Past 1.4 terabits per second with 256 NVMe Drives<br />
<a href="https://blog.min.io/performance-at-scale-minio-pushes-past-1-3-terabits-per-second-with-256-nvme-drives/">https://blog.min.io/performance-at-scale-minio-pushes-past-1-3-terabits-per-second-with-256-nvme-drives/</a>
</li>

<li>Benchmarking MinIO vs. AWS S3 for Apache Spark<br />
<a href="https://blog.min.io/benchmarking-apache-spark-vs-aws-s3/">https://blog.min.io/benchmarking-apache-spark-vs-aws-s3/</a>
</li>

<li>MinIO Client Quickstart Guide<br />
<a href="https://docs.min.io/docs/minio-client-quickstart-guide.html">https://docs.min.io/docs/minio-client-quickstart-guide.html</a>
</li>

<li>Analýza kvality zdrojových kódů Minia<br />
<a href="https://goreportcard.com/report/github.com/minio/minio">https://goreportcard.com/report/github.com/minio/minio</a>
</li>

<li>This is MinIO<br />
<a href="https://www.youtube.com/watch?v=vF0lQh0XOCs">https://www.youtube.com/watch?v=vF0lQh0XOCs</a>
</li>

<li>Running MinIO Standalone<br />
<a href="https://www.youtube.com/watch?v=dIQsPCHvHoM">https://www.youtube.com/watch?v=dIQsPCHvHoM</a>
</li>

<li>"Amazon S3 Compatible Storage in Kubernetes" - Rob Girard, Principal Tech Marketing Engineer, Minio<br />
<a href="https://www.youtube.com/watch?v=wlpn8K0jJ4U">https://www.youtube.com/watch?v=wlpn8K0jJ4U</a>
</li>

<li>Ginkgo<br />
<a href="http://onsi.github.io/ginkgo/">http://onsi.github.io/ginkgo/</a>
</li>

<li>Gomega<br />
<a href="https://onsi.github.io/gomega/">https://onsi.github.io/gomega/</a>
</li>

<li>Ginkgo's Preferred Matcher Library na GitHubu<br />
<a href="https://github.com/onsi/gomega/">https://github.com/onsi/gomega/</a>
</li>

<li>Provided Matchers<br />
<a href="http://onsi.github.io/gomega/#provided-matchers">http://onsi.github.io/gomega/#provided-matchers</a>
</li>

<li>Dokumentace k&nbsp;balíčku goexpect<br />
<a href="https://godoc.org/github.com/google/goexpect">https://godoc.org/github.com/google/goexpect</a>
</li>

<li>Balíček goexpect<br />
<a href="https://github.com/google/goexpect">https://github.com/google/goexpect</a>
</li>

<li>Balíček go-expect<br />
<a href="https://github.com/Netflix/go-expect">https://github.com/Netflix/go-expect</a>
</li>

<li>Balíček gexpect<br />
<a href="https://github.com/ThomasRooney/gexpect">https://github.com/ThomasRooney/gexpect</a>
</li>

<li>Expect (originál naprogramovaný v&nbsp;TCL)<br />
<a href="https://core.tcl-lang.org/expect/index">https://core.tcl-lang.org/expect/index</a>
</li>

<li>Expect (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Expect">https://en.wikipedia.org/wiki/Expect</a>
</li>

<li>Pexpect<br />
<a href="https://pexpect.readthedocs.io/en/stable/">https://pexpect.readthedocs.io/en/stable/</a>
</li>

<li>Golang SSH Client: Multiple Commands, Crypto &amp; Goexpect Examples<br />
<a href="http://networkbit.ch/golang-ssh-client/">http://networkbit.ch/golang-ssh-client/</a>
</li>

<li>goblin na GitHubu<br />
<a href="https://github.com/franela/goblin">https://github.com/franela/goblin</a>
</li>

<li>Mocha framework<br />
<a href="https://mochajs.org/">https://mochajs.org/</a>
</li>

<li>frisby na GitHubu<br />
<a href="https://github.com/verdverm/frisby">https://github.com/verdverm/frisby</a>
</li>

<li>package frisby<br />
<a href="https://godoc.org/github.com/verdverm/frisby">https://godoc.org/github.com/verdverm/frisby</a>
</li>

<li>Frisby alternatives and similar packages (generováno)<br />
<a href="https://go.libhunt.com/frisby-alternatives">https://go.libhunt.com/frisby-alternatives</a>
</li>

<li>Cucumber for golang<br />
<a href="https://github.com/DATA-DOG/godog">https://github.com/DATA-DOG/godog</a>
</li>

<li>How to Use Godog for Behavior-driven Development in Go<br />
<a href="https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go">https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go</a>
</li>

<li>Comparative Analysis Of GoLang Testing Frameworks<br />
<a href="https://www.slideshare.net/DushyantBhalgami/comparative-analysis-of-golang-testing-frameworks">https://www.slideshare.net/DushyantBhalgami/comparative-analysis-of-golang-testing-frameworks</a>
</li>

<li>A Quick Guide to Testing in Golang<br />
<a href="https://caitiem.com/2016/08/18/a-quick-guide-to-testing-in-golang/">https://caitiem.com/2016/08/18/a-quick-guide-to-testing-in-golang/</a>
</li>

<li>Tom's Obvious, Minimal Language.<br />
<a href="https://github.com/toml-lang/toml">https://github.com/toml-lang/toml</a>
</li>

<li>xml.org<br />
<a href="http://www.xml.org/">http://www.xml.org/</a>
</li>

<li>Soubory .properties<br />
<a href="https://en.wikipedia.org/wiki/.properties">https://en.wikipedia.org/wiki/.properties</a>
</li>

<li>Soubory INI<br />
<a href="https://en.wikipedia.org/wiki/INI_file">https://en.wikipedia.org/wiki/INI_file</a>
</li>

<li>JSON to YAML<br />
<a href="https://www.json2yaml.com/">https://www.json2yaml.com/</a>
</li>

<li>Data Format Converter<br />
<a href="https://toolkit.site/format.html">https://toolkit.site/format.html</a>
</li>

<li>Viper na GitHubu<br />
<a href="https://github.com/spf13/viper">https://github.com/spf13/viper</a>
</li>

<li>GoDotEnv na GitHubu<br />
<a href="https://github.com/joho/godotenv">https://github.com/joho/godotenv</a>
</li>

<li>The fantastic ORM library for Golang<br />
<a href="http://gorm.io/">http://gorm.io/</a>
</li>

<li>Dokumentace k&nbsp;balíčku <strong>gorilla/mux</strong><br />
<a href="https://godoc.org/github.com/gorilla/mux">https://godoc.org/github.com/gorilla/mux</a>
</li>

<li>Gorilla web toolkitk<br />
<a href="http://www.gorillatoolkit.org/">http://www.gorillatoolkit.org/</a>
</li>

<li>Metric types<br />
<a href="https://prometheus.io/docs/concepts/metric_types/">https://prometheus.io/docs/concepts/metric_types/</a>
</li>

<li>Histograms with Prometheus: A Tale of Woe<br />
<a href="http://linuxczar.net/blog/2017/06/15/prometheus-histogram-2/">http://linuxczar.net/blog/2017/06/15/prometheus-histogram-2/</a>
</li>

<li>Why are Prometheus histograms cumulative?<br />
<a href="https://www.robustperception.io/why-are-prometheus-histograms-cumulative">https://www.robustperception.io/why-are-prometheus-histograms-cumulative</a>
</li>

<li>Histograms and summaries<br />
<a href="https://prometheus.io/docs/practices/histograms/">https://prometheus.io/docs/practices/histograms/</a>
</li>

<li>Instrumenting Golang server in 5 min<br />
<a href="https://medium.com/@gsisimogang/instrumenting-golang-server-in-5-min-c1c32489add3">https://medium.com/@gsisimogang/instrumenting-golang-server-in-5-min-c1c32489add3</a>
</li>

<li>Semantic Import Versioning in Go<br />
<a href="https://www.aaronzhuo.com/semantic-import-versioning-in-go/">https://www.aaronzhuo.com/semantic-import-versioning-in-go/</a>
</li>

<li>Sémantické verzování<br />
<a href="https://semver.org/">https://semver.org/</a>
</li>

<li>Getting started with Go modules<br />
<a href="https://medium.com/@fonseka.live/getting-started-with-go-modules-b3dac652066d">https://medium.com/@fonseka.live/getting-started-with-go-modules-b3dac652066d</a>
</li>

<li>Create projects independent of $GOPATH using Go Modules<br />
<a href="https://medium.com/mindorks/create-projects-independent-of-gopath-using-go-modules-802260cdfb51o">https://medium.com/mindorks/create-projects-independent-of-gopath-using-go-modules-802260cdfb51o</a>
</li>

<li>Anatomy of Modules in Go<br />
<a href="https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16">https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16</a>
</li>

<li>Modules<br />
<a href="https://github.com/golang/go/wiki/Modules">https://github.com/golang/go/wiki/Modules</a>
</li>

<li>Go Modules Tutorial<br />
<a href="https://tutorialedge.net/golang/go-modules-tutorial/">https://tutorialedge.net/golang/go-modules-tutorial/</a>
</li>

<li>Module support<br />
<a href="https://golang.org/cmd/go/#hdr-Module_support">https://golang.org/cmd/go/#hdr-Module_support</a>
</li>

<li>Go Lang: Memory Management and Garbage Collection<br />
<a href="https://vikash1976.wordpress.com/2017/03/26/go-lang-memory-management-and-garbage-collection/">https://vikash1976.wordpress.com/2017/03/26/go-lang-memory-management-and-garbage-collection/</a>
</li>

<li>Golang Internals, Part 4: Object Files and Function Metadata<br />
<a href="https://blog.altoros.com/golang-part-4-object-files-and-function-metadata.html">https://blog.altoros.com/golang-part-4-object-files-and-function-metadata.html</a>
</li>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>Read-eval-print loop (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop</a>
</li>

<li>Vim as a Go (Golang) IDE using LSP and vim-go<br />
<a href="https://octetz.com/posts/vim-as-go-ide">https://octetz.com/posts/vim-as-go-ide</a>
</li>

<li>gopls<br />
<a href="https://github.com/golang/go/wiki/gopls">https://github.com/golang/go/wiki/gopls</a>
</li>

<li>IDE Integration Guide<br />
<a href="https://github.com/stamblerre/gocode/blob/master/docs/IDE_integration.md">https://github.com/stamblerre/gocode/blob/master/docs/IDE_integration.md</a>
</li>

<li>How to instrument Go code with custom expvar metrics<br />
<a href="https://sysdig.com/blog/golang-expvar-custom-metrics/">https://sysdig.com/blog/golang-expvar-custom-metrics/</a>
</li>

<li>Golang expvar metricset (Metricbeat Reference)<br />
<a href="https://www.elastic.co/guide/en/beats/metricbeat/7.x/metricbeat-metricset-golang-expvar.html">https://www.elastic.co/guide/en/beats/metricbeat/7.x/metricbeat-metricset-golang-expvar.html</a>
</li>

<li>Package expvar<br />
<a href="https://golang.org/pkg/expvar/#NewInt">https://golang.org/pkg/expvar/#NewInt</a>
</li>

<li>Java Platform Debugger Architecture: Overview<br />
<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jpda/jpda.html">https://docs.oracle.com/en/java/javase/11/docs/specs/jpda/jpda.html</a>
</li>

<li>The JVM Tool Interface (JVM TI): How VM Agents Work<br />
<a href="https://www.oracle.com/technetwork/articles/javase/index-140680.html">https://www.oracle.com/technetwork/articles/javase/index-140680.html</a>
</li>

<li>JVM Tool Interface Version 11.0<br />
<a href="https://docs.oracle.com/en/java/javase/11/docs/specs/jvmti.html">https://docs.oracle.com/en/java/javase/11/docs/specs/jvmti.html</a>
</li>

<li>Creating a Debugging and Profiling Agent with JVMTI<br />
<a href="http://www.oracle.com/technetwork/articles/javase/jvmti-136367.html">http://www.oracle.com/technetwork/articles/javase/jvmti-136367.html</a>
</li>

<li>JVM TI (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/JVM_TI">http://en.wikipedia.org/wiki/JVM_TI</a>
</li>

<li>IBM JVMTI extensions<br />
<a href="http://publib.boulder.ibm.com/infocenter/realtime/v2r0/index.jsp?topic=%2Fcom.ibm.softrt.doc%2Fdiag%2Ftools%2Fjvmti_extensions.html">http://publib.boulder.ibm.com/infocenter/realtime/v2r0/index.jsp?topic=%2Fcom.ibm.softrt.doc%2Fdiag%2Ftools%2Fjvmti_extensions.html</a>
</li>

<li>Go &amp; cgo: integrating existing C code with Go<br />
<a href="http://akrennmair.github.io/golang-cgo-slides/#1">http://akrennmair.github.io/golang-cgo-slides/#1</a>
</li>

<li>Using cgo to call C code from within Go code<br />
<a href="https://wenzr.wordpress.com/2018/06/07/using-cgo-to-call-c-code-from-within-go-code/">https://wenzr.wordpress.com/2018/06/07/using-cgo-to-call-c-code-from-within-go-code/</a>
</li>

<li>Package trace<br />
<a href="https://golang.org/pkg/runtime/trace/">https://golang.org/pkg/runtime/trace/</a>
</li>

<li>Introducing HTTP Tracing<br />
<a href="https://blog.golang.org/http-tracing">https://blog.golang.org/http-tracing</a>
</li>

<li>Command trace<br />
<a href="https://golang.org/cmd/trace/">https://golang.org/cmd/trace/</a>
</li>

<li>A StreamLike, Immutable, Lazy Loading and smart Golang Library to deal with slices<br />
<a href="https://github.com/wesovilabs/koazee">https://github.com/wesovilabs/koazee</a>
</li>

<li>Funkce vyššího řádu v knihovně Underscore<br />
<a href="https://www.root.cz/clanky/funkce-vyssiho-radu-v-knihovne-underscore/">https://www.root.cz/clanky/funkce-vyssiho-radu-v-knihovne-underscore/</a>
</li>

<li>Delve: a debugger for the Go programming language.<br />
<a href="https://github.com/go-delve/delve">https://github.com/go-delve/delve</a>
</li>

<li>Příkazy debuggeru Delve<br />
<a href="https://github.com/go-delve/delve/tree/master/Documentation/cli">https://github.com/go-delve/delve/tree/master/Documentation/cli</a>
</li>

<li>Debuggery a jejich nadstavby v Linuxu<br />
<a href="http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu/">http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu/</a>
</li>

<li>Debuggery a jejich nadstavby v Linuxu (2. část)<br />
<a href="http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-2-cast/">http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-2-cast/</a>
</li>

<li>Debuggery a jejich nadstavby v Linuxu (3): Nemiver<br />
<a href="http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-3-nemiver/">http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-3-nemiver/</a>
</li>

<li>Debuggery a jejich nadstavby v Linuxu (4): KDbg<br />
<a href="http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-4-kdbg/">http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-4-kdbg/</a>
</li>

<li>Debuggery a jejich nadstavby v Linuxu (5): ladění aplikací v&nbsp;editorech Emacs a Vim<br />
<a href="http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-5-ladeni-aplikaci-v-editorech-emacs-a-vim/">http://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-5-ladeni-aplikaci-v-editorech-emacs-a-vim/</a>
</li>

<li>Debugging Go Code with GDB<br />
<a href="https://golang.org/doc/gdb">https://golang.org/doc/gdb</a>
</li>

<li>Debugging Go (golang) programs with gdb <br />
<a href="https://thornydev.blogspot.com/2014/01/debugging-go-golang-programs-with-gdb.html">https://thornydev.blogspot.com/2014/01/debugging-go-golang-programs-with-gdb.html</a>
</li>

<li>GDB - Dokumentace<br />
<a href="http://sourceware.org/gdb/current/onlinedocs/gdb/">http://sourceware.org/gdb/current/onlinedocs/gdb/</a>
</li>

<li>GDB - Supported Languages<br />
<a href="http://sourceware.org/gdb/current/onlinedocs/gdb/Supported-Languages.html#Supported-Languages">http://sourceware.org/gdb/current/onlinedocs/gdb/Supported-Languages.html#Supported-Languages</a>
</li>

<li>GNU Debugger (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GNU_Debugger">https://en.wikipedia.org/wiki/GNU_Debugger</a>
</li>

<li>The LLDB Debugger<br />
<a href="http://lldb.llvm.org/">http://lldb.llvm.org/</a>
</li>

<li>Debugger (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Debugger">https://en.wikipedia.org/wiki/Debugger</a>
</li>

<li>13 Linux Debuggers for C++ Reviewed<br />
<a href="http://www.drdobbs.com/testing/13-linux-debuggers-for-c-reviewed/240156817">http://www.drdobbs.com/testing/13-linux-debuggers-for-c-reviewed/240156817</a>
</li>

<li>Go is on a Trajectory to Become the Next Enterprise Programming Language<br />
<a href="https://hackernoon.com/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language-3b75d70544e">https://hackernoon.com/go-is-on-a-trajectory-to-become-the-next-enterprise-programming-language-3b75d70544e</a>
</li>

<li>Go Proverbs: Simple, Poetic, Pithy<br />
<a href="https://go-proverbs.github.io/">https://go-proverbs.github.io/</a>
</li>

<li>Handling Sparse Files on Linux<br />
<a href="https://www.systutorials.com/136652/handling-sparse-files-on-linux/">https://www.systutorials.com/136652/handling-sparse-files-on-linux/</a>
</li>

<li>Gzip (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Gzip">https://en.wikipedia.org/wiki/Gzip</a>
</li>

<li>Deflate<br />
<a href="https://en.wikipedia.org/wiki/DEFLATE">https://en.wikipedia.org/wiki/DEFLATE</a>
</li>

<li>10 tools written in Go that every developer needs to know<br />
<a href="https://gustavohenrique.net/en/2019/01/10-tools-written-in-go-that-every-dev-needs-to-know/">https://gustavohenrique.net/en/2019/01/10-tools-written-in-go-that-every-dev-needs-to-know/</a>
</li>

<li>Hexadecimální prohlížeče a editory s textovým uživatelským rozhraním<br />
<a href="https://www.root.cz/clanky/hexadecimalni-prohlizece-a-editory-s-textovym-uzivatelskym-rozhranim/">https://www.root.cz/clanky/hexadecimalni-prohlizece-a-editory-s-textovym-uzivatelskym-rozhranim/</a>
</li>

<li>Hex dump<br />
<a href="https://en.wikipedia.org/wiki/Hex_dump">https://en.wikipedia.org/wiki/Hex_dump</a>
</li>

<li>Rozhraní io.ByteReader<br />
<a href="https://golang.org/pkg/io/#ByteReader">https://golang.org/pkg/io/#ByteReader</a>
</li>

<li>Rozhraní io.RuneReader<br />
<a href="https://golang.org/pkg/io/#RuneReader">https://golang.org/pkg/io/#RuneReader</a>
</li>

<li>Rozhraní io.ByteScanner<br />
<a href="https://golang.org/pkg/io/#ByteScanner">https://golang.org/pkg/io/#ByteScanner</a>
</li>

<li>Rozhraní io.RuneScanner<br />
<a href="https://golang.org/pkg/io/#RuneScanner">https://golang.org/pkg/io/#RuneScanner</a>
</li>

<li>Rozhraní io.Closer<br />
<a href="https://golang.org/pkg/io/#Closer">https://golang.org/pkg/io/#Closer</a>
</li>

<li>Rozhraní io.Reader<br />
<a href="https://golang.org/pkg/io/#Reader">https://golang.org/pkg/io/#Reader</a>
</li>

<li>Rozhraní io.Writer<br />
<a href="https://golang.org/pkg/io/#Writer">https://golang.org/pkg/io/#Writer</a>
</li>

<li>Typ Strings.Reader<br />
<a href="https://golang.org/pkg/strings/#Reader">https://golang.org/pkg/strings/#Reader</a>
</li>

<li>VACUUM (SQL)<br />
<a href="https://www.sqlite.org/lang_vacuum.html">https://www.sqlite.org/lang_vacuum.html</a>
</li>

<li>VACUUM (Postgres)<br />
<a href="https://www.postgresql.org/docs/8.4/sql-vacuum.html">https://www.postgresql.org/docs/8.4/sql-vacuum.html</a>
</li>

<li>go-cron<br />
<a href="https://github.com/rk/go-cron">https://github.com/rk/go-cron</a>
</li>

<li>gocron<br />
<a href="https://github.com/jasonlvhit/gocron">https://github.com/jasonlvhit/gocron</a>
</li>

<li>clockwork<br />
<a href="https://github.com/whiteShtef/clockwork">https://github.com/whiteShtef/clockwork</a>
</li>

<li>clockwerk<br />
<a href="https://github.com/onatm/clockwerk">https://github.com/onatm/clockwerk</a>
</li>

<li>JobRunner<br />
<a href="https://github.com/bamzi/jobrunner">https://github.com/bamzi/jobrunner</a>
</li>

<li>Rethinking Cron<br />
<a href="https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/">https://adam.herokuapp.com/past/2010/4/13/rethinking_cron/</a>
</li>

<li>In the Beginning was the Command Line<br />
<a href="https://web.archive.org/web/20180218045352/http://www.cryptonomicon.com/beginning.html">https://web.archive.org/web/20180218045352/http://www.cryptonomicon.com/beginning.html</a>
</li>

<li>repl.it (REPL pro různé jazyky)<br />
<a href="https://repl.it/languages">https://repl.it/languages</a>
</li>

<li>GOCUI - Go Console User Interface (celé uživatelské prostředí, nejenom input box)<br />
<a href="https://github.com/jroimartin/gocui">https://github.com/jroimartin/gocui</a>
</li>

<li>Read–eval–print loop<br />
<a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop</a>
</li>

<li>go-prompt<br />
<a href="https://github.com/c-bata/go-prompt">https://github.com/c-bata/go-prompt</a>
</li>

<li>readline<br />
<a href="https://github.com/chzyer/readline">https://github.com/chzyer/readline</a>
</li>

<li>A pure golang implementation for GNU-Readline kind library<br />
<a href="https://golangexample.com/a-pure-golang-implementation-for-gnu-readline-kind-library/">https://golangexample.com/a-pure-golang-implementation-for-gnu-readline-kind-library/</a>
</li>

<li>go-readline<br />
<a href="https://github.com/fiorix/go-readline">https://github.com/fiorix/go-readline</a>
</li>

<li>4 Python libraries for building great command-line user interfaces<br />
<a href="https://opensource.com/article/17/5/4-practical-python-libraries">https://opensource.com/article/17/5/4-practical-python-libraries</a>
</li>

<li>prompt_toolkit 2.0.3 na PyPi<br />
<a href="https://pypi.org/project/prompt_toolkit/">https://pypi.org/project/prompt_toolkit/</a>
</li>

<li>python-prompt-toolkit na GitHubu<br />
<a href="https://github.com/jonathanslenders/python-prompt-toolkit">https://github.com/jonathanslenders/python-prompt-toolkit</a>
</li>

<li>The GNU Readline Library<br />
<a href="https://tiswww.case.edu/php/chet/readline/rltop.html">https://tiswww.case.edu/php/chet/readline/rltop.html</a>
</li>

<li>GNU Readline (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GNU_Readline">https://en.wikipedia.org/wiki/GNU_Readline</a>
</li>

<li>readline — GNU readline interface (Python 3.x)<br />
<a href="https://docs.python.org/3/library/readline.html">https://docs.python.org/3/library/readline.html</a>
</li>

<li>readline — GNU readline interface (Python 2.x)<br />
<a href="https://docs.python.org/2/library/readline.html">https://docs.python.org/2/library/readline.html</a>
</li>

<li>GNU Readline Library - command line editing<br />
<a href="https://tiswww.cwru.edu/php/chet/readline/readline.html">https://tiswww.cwru.edu/php/chet/readline/readline.html</a>
</li>

<li>gnureadline 6.3.8 na PyPi<br />
<a href="https://pypi.org/project/gnureadline/">https://pypi.org/project/gnureadline/</a>
</li>

<li>Editline Library (libedit)<br />
<a href="http://thrysoee.dk/editline/">http://thrysoee.dk/editline/</a>
</li>

<li>Comparing Python Command-Line Parsing Libraries – Argparse, Docopt, and Click<br />
<a href="https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/">https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/</a>
</li>

<li>libedit or editline<br />
<a href="http://www.cs.utah.edu/~bigler/code/libedit.html">http://www.cs.utah.edu/~bigler/code/libedit.html</a>
</li>

<li>WinEditLine<br />
<a href="http://mingweditline.sourceforge.net/">http://mingweditline.sourceforge.net/</a>
</li>

<li>rlcompleter — Completion function for GNU readline<br />
<a href="https://docs.python.org/3/library/rlcompleter.html">https://docs.python.org/3/library/rlcompleter.html</a>
</li>

<li>rlwrap na GitHubu<br />
<a href="https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</a>
</li>

<li>rlwrap(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/rlwrap">https://linux.die.net/man/1/rlwrap</a>
</li>

<li>readline(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/readline">https://linux.die.net/man/3/readline</a>
</li>

<li>history(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/history">https://linux.die.net/man/3/history</a>
</li>

<li>Dokumentace k&nbsp;balíčku <i>oglematchers</i><br />
<a href="https://godoc.org/github.com/jacobsa/oglematchers">https://godoc.org/github.com/jacobsa/oglematchers</a>
</li>

<li>Balíček <i>oglematchers</i><br />
<a href="https://github.com/jacobsa/oglematchers">https://github.com/jacobsa/oglematchers</a>
</li>

<li>Dokumentace k&nbsp;balíčku <i>ogletest</i><br />
<a href="https://godoc.org/github.com/jacobsa/ogletest">https://godoc.org/github.com/jacobsa/ogletest</a>
</li>

<li>Balíček <i>ogletest</i><br />
<a href="https://github.com/jacobsa/ogletest">https://github.com/jacobsa/ogletest</a>
</li>

<li>Dokumentace k&nbsp;balíčku <i>assert</i><br />
<a href="https://godoc.org/github.com/stretchr/testify/assert">https://godoc.org/github.com/stretchr/testify/assert</a>
</li>

<li>Testify - Thou Shalt Write Tests<br />
<a href="https://github.com/stretchr/testify/">https://github.com/stretchr/testify/</a>
</li>

<li>package testing<br />
<a href="https://golang.org/pkg/testing/">https://golang.org/pkg/testing/</a>
</li>

<li>Golang basics - writing unit tests<br />
<a href="https://blog.alexellis.io/golang-writing-unit-tests/">https://blog.alexellis.io/golang-writing-unit-tests/</a>
</li>

<li>An Introduction to Programming in Go / Testing<br />
<a href="https://www.golang-book.com/books/intro/12">https://www.golang-book.com/books/intro/12</a>
</li>

<li>An Introduction to Testing in Go<br />
<a href="https://tutorialedge.net/golang/intro-testing-in-go/">https://tutorialedge.net/golang/intro-testing-in-go/</a>
</li>

<li>Advanced Go Testing Tutorial<br />
<a href="https://tutorialedge.net/golang/advanced-go-testing-tutorial/">https://tutorialedge.net/golang/advanced-go-testing-tutorial/</a>
</li>

<li>GoConvey<br />
<a href="http://goconvey.co/">http://goconvey.co/</a>
</li>

<li>Testing Techniques<br />
<a href="https://talks.golang.org/2014/testing.slide">https://talks.golang.org/2014/testing.slide</a>
</li>

<li>5 simple tips and tricks for writing unit tests in #golang<br />
<a href="https://medium.com/@matryer/5-simple-tips-and-tricks-for-writing-unit-tests-in-golang-619653f90742">https://medium.com/@matryer/5-simple-tips-and-tricks-for-writing-unit-tests-in-golang-619653f90742</a>
</li>

<li>Afinní transformace<br />
<a href="https://cs.wikibooks.org/wiki/Geometrie/Afinn%C3%AD_transformace_sou%C5%99adnic">https://cs.wikibooks.org/wiki/Geometrie/Afinn%C3%AD_transformace_sou%C5%99adnic</a>
</li>

<li>package gg<br />
<a href="https://godoc.org/github.com/fogleman/gg">https://godoc.org/github.com/fogleman/gg</a>
</li>

<li>Generate an animated GIF with Golang<br />
<a href="http://tech.nitoyon.com/en/blog/2016/01/07/go-animated-gif-gen/">http://tech.nitoyon.com/en/blog/2016/01/07/go-animated-gif-gen/</a>
</li>

<li>Generate an image programmatically with Golang<br />
<a href="http://tech.nitoyon.com/en/blog/2015/12/31/go-image-gen/">http://tech.nitoyon.com/en/blog/2015/12/31/go-image-gen/</a>
</li>

<li>The Go image package<br />
<a href="https://blog.golang.org/go-image-package">https://blog.golang.org/go-image-package</a>
</li>

<li>Balíček draw2D: 2D rendering for different output (raster, pdf, svg)<br />
<a href="https://github.com/llgcode/draw2d">https://github.com/llgcode/draw2d</a>
</li>

<li>Draw a rectangle in Golang?<br />
<a href="https://stackoverflow.com/questions/28992396/draw-a-rectangle-in-golang">https://stackoverflow.com/questions/28992396/draw-a-rectangle-in-golang</a>
</li>

<li>YAML<br />
<a href="https://yaml.org/">https://yaml.org/</a>
</li>

<li>edn<br />
<a href="https://github.com/edn-format/edn">https://github.com/edn-format/edn</a>
</li>

<li>Smile<br />
<a href="https://github.com/FasterXML/smile-format-specification">https://github.com/FasterXML/smile-format-specification</a>
</li>

<li>Protocol-Buffers<br />
<a href="https://developers.google.com/protocol-buffers/">https://developers.google.com/protocol-buffers/</a>
</li>

<li>Marshalling (computer science)<br />
<a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
</li>

<li>Unmarshalling<br />
<a href="https://en.wikipedia.org/wiki/Unmarshalling">https://en.wikipedia.org/wiki/Unmarshalling</a>
</li>

<li>Introducing JSON<br />
<a href="http://json.org/">http://json.org/</a>
</li>

<li>Package json<br />
<a href="https://golang.org/pkg/encoding/json/">https://golang.org/pkg/encoding/json/</a>
</li>

<li>The Go Blog: JSON and Go<br />
<a href="https://blog.golang.org/json-and-go">https://blog.golang.org/json-and-go</a>
</li>

<li>Go by Example: JSON<br />
<a href="https://gobyexample.com/json">https://gobyexample.com/json</a>
</li>

<li>Writing Web Applications<br />
<a href="https://golang.org/doc/articles/wiki/">https://golang.org/doc/articles/wiki/</a>
</li>

<li>Golang Web Apps<br />
<a href="https://www.reinbach.com/blog/golang-webapps-1/">https://www.reinbach.com/blog/golang-webapps-1/</a>
</li>

<li>Build web application with Golang<br />
<a href="https://legacy.gitbook.com/book/astaxie/build-web-application-with-golang/details">https://legacy.gitbook.com/book/astaxie/build-web-application-with-golang/details</a>
</li>

<li>Golang Templates - Golang Web Pages<br />
<a href="https://www.youtube.com/watch?v=TkNIETmF-RU">https://www.youtube.com/watch?v=TkNIETmF-RU</a>
</li>

<li>Simple Golang HTTPS/TLS Examples<br />
<a href="https://github.com/denji/golang-tls">https://github.com/denji/golang-tls</a>
</li>

<li>Playing with images in HTTP response in golang<br />
<a href="https://www.sanarias.com/blog/1214PlayingwithimagesinHTTPresponseingolang">https://www.sanarias.com/blog/1214PlayingwithimagesinHTTPresponseingolang</a>
</li>

<li>MIME Types List<br />
<a href="https://www.freeformatter.com/mime-types-list.html">https://www.freeformatter.com/mime-types-list.html</a>
</li>

<li>Go Mutex Tutorial<br />
<a href="https://tutorialedge.net/golang/go-mutex-tutorial/">https://tutorialedge.net/golang/go-mutex-tutorial/</a>
</li>

<li>Creating A Simple Web Server With Golang<br />
<a href="https://tutorialedge.net/golang/creating-simple-web-server-with-golang/">https://tutorialedge.net/golang/creating-simple-web-server-with-golang/</a>
</li>

<li>Building a Web Server in Go<br />
<a href="https://thenewstack.io/building-a-web-server-in-go/">https://thenewstack.io/building-a-web-server-in-go/</a>
</li>

<li>How big is the pipe buffer?<br />
<a href="https://unix.stackexchange.com/questions/11946/how-big-is-the-pipe-buffer">https://unix.stackexchange.com/questions/11946/how-big-is-the-pipe-buffer</a>
</li>

<li>How to turn off buffering of stdout in C<br />
<a href="https://stackoverflow.com/questions/7876660/how-to-turn-off-buffering-of-stdout-in-c">https://stackoverflow.com/questions/7876660/how-to-turn-off-buffering-of-stdout-in-c</a>
</li>

<li>setbuf(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/setbuf">https://linux.die.net/man/3/setbuf</a>
</li>

<li>setvbuf(3) - Linux man page (stejný obsah jako předchozí stránka)<br />
<a href="https://linux.die.net/man/3/setvbuf">https://linux.die.net/man/3/setvbuf</a>
</li>

<li>Select waits on a group of channels<br />
<a href="https://yourbasic.org/golang/select-explained/">https://yourbasic.org/golang/select-explained/</a>
</li>

<li>Rob Pike: Simplicity is Complicated (video)<br />
<a href="http://www.golang.to/posts/dotgo-2015-rob-pike-simplicity-is-complicated-youtube-16893">http://www.golang.to/posts/dotgo-2015-rob-pike-simplicity-is-complicated-youtube-16893</a>
</li>

<li>Algorithms to Go<br />
<a href="https://yourbasic.org/">https://yourbasic.org/</a>
</li>

<li>Využití knihovny Pygments (nejenom) pro obarvení zdrojových kódů<br />
<a href="https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu/">https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu/</a>
</li>

<li>Využití knihovny Pygments (nejenom) pro obarvení zdrojových kódů: vlastní filtry a lexery<br />
<a href="https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu-vlastni-filtry-a-lexery/">https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu-vlastni-filtry-a-lexery/</a>
</li>

<li>Go Defer Simplified with Practical Visuals<br />
<a href="https://blog.learngoprogramming.com/golang-defer-simplified-77d3b2b817ff">https://blog.learngoprogramming.com/golang-defer-simplified-77d3b2b817ff</a>
</li>

<li>5 More Gotchas of Defer in Go — Part II<br />
<a href="https://blog.learngoprogramming.com/5-gotchas-of-defer-in-go-golang-part-ii-cc550f6ad9aa">https://blog.learngoprogramming.com/5-gotchas-of-defer-in-go-golang-part-ii-cc550f6ad9aa</a>
</li>

<li>The Go Blog: Defer, Panic, and Recover<br />
<a href="https://blog.golang.org/defer-panic-and-recover">https://blog.golang.org/defer-panic-and-recover</a>
</li>

<li>The defer keyword in Swift 2: try/finally done right<br />
<a href="https://www.hackingwithswift.com/new-syntax-swift-2-defer">https://www.hackingwithswift.com/new-syntax-swift-2-defer</a>
</li>

<li>Swift Defer Statement<br />
<a href="https://andybargh.com/swift-defer-statement/">https://andybargh.com/swift-defer-statement/</a>
</li>

<li>Modulo operation (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Modulo_operation">https://en.wikipedia.org/wiki/Modulo_operation</a>
</li>

<li>Node.js vs Golang: Battle of the Next-Gen Languages<br />
<a href="https://www.hostingadvice.com/blog/nodejs-vs-golang/">https://www.hostingadvice.com/blog/nodejs-vs-golang/</a>
</li>

<li>The Go Programming Language (home page)<br />
<a href="https://golang.org/">https://golang.org/</a>
</li>

<li>GoDoc<br />
<a href="https://godoc.org/">https://godoc.org/</a>
</li>

<li>Go (programming language), Wikipedia<br />
<a href="https://en.wikipedia.org/wiki/Go_(programming_language)">https://en.wikipedia.org/wiki/Go_(programming_language)</a>
</li>

<li>Go Books (kniha o jazyku Go)<br />
<a href="https://github.com/dariubs/GoBooks">https://github.com/dariubs/GoBooks</a>
</li>

<li>The Go Programming Language Specification<br />
<a href="https://golang.org/ref/spec">https://golang.org/ref/spec</a>
</li>

<li>Go: the Good, the Bad and the Ugly<br />
<a href="https://bluxte.net/musings/2018/04/10/go-good-bad-ugly/">https://bluxte.net/musings/2018/04/10/go-good-bad-ugly/</a>
</li>

<li>Package builtin<br />
<a href="https://golang.org/pkg/builtin/">https://golang.org/pkg/builtin/</a>
</li>

<li>Package fmt<br />
<a href="https://golang.org/pkg/fmt/">https://golang.org/pkg/fmt/</a>
</li>

<li>The Little Go Book (další kniha)<br />
<a href="https://github.com/dariubs/GoBooks">https://github.com/dariubs/GoBooks</a>
</li>

<li>The Go Programming Language by Brian W. Kernighan, Alan A. A. Donovan<br />
<a href="https://www.safaribooksonline.com/library/view/the-go-programming/9780134190570/ebook_split_010.html">https://www.safaribooksonline.com/library/view/the-go-programming/9780134190570/ebook_split_010.html</a>
</li>

<li>Learning Go<br />
<a href="https://www.miek.nl/go/">https://www.miek.nl/go/</a>
</li>

<li>Go Bootcamp<br />
<a href="http://www.golangbootcamp.com/">http://www.golangbootcamp.com/</a>
</li>

<li>Programming in Go: Creating Applications for the 21st Century (další kniha o jazyku Go)<br />
<a href="http://www.informit.com/store/programming-in-go-creating-applications-for-the-21st-9780321774637">http://www.informit.com/store/programming-in-go-creating-applications-for-the-21st-9780321774637</a>
</li>

<li>Introducing Go (Build Reliable, Scalable Programs)<br />
<a href="http://shop.oreilly.com/product/0636920046516.do">http://shop.oreilly.com/product/0636920046516.do</a>
</li>

<li>Learning Go Programming<br />
<a href="https://www.packtpub.com/application-development/learning-go-programming">https://www.packtpub.com/application-development/learning-go-programming</a>
</li>

<li>The Go Blog<br />
<a href="https://blog.golang.org/">https://blog.golang.org/</a>
</li>

<li>Getting to Go: The Journey of Go's Garbage Collector<br />
<a href="https://blog.golang.org/ismmkeynote">https://blog.golang.org/ismmkeynote</a>
</li>

<li>Go (programovací jazyk, Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Go_(programovac%C3%AD_jazyk)">https://cs.wikipedia.org/wiki/Go_(programovac%C3%AD_jazyk)</a>
</li>

<li>Rychle, rychleji až úplně nejrychleji s jazykem Go<br />
<a href="https://www.root.cz/clanky/rychle-rychleji-az-uplne-nejrychleji-s-jazykem-go/">https://www.root.cz/clanky/rychle-rychleji-az-uplne-nejrychleji-s-jazykem-go/</a>
</li>

<li>Installing Go on the Raspberry Pi<br />
<a href="https://dave.cheney.net/2012/09/25/installing-go-on-the-raspberry-pi">https://dave.cheney.net/2012/09/25/installing-go-on-the-raspberry-pi</a>
</li>

<li>How the Go runtime implements maps efficiently (without generics)<br />
<a href="https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics">https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics</a>
</li>

<li>Niečo málo o Go - Golang (slovensky)<br />
<a href="http://golangsk.logdown.com/">http://golangsk.logdown.com/</a>
</li>

<li>How Many Go Developers Are There?<br />
<a href="https://research.swtch.com/gophercount">https://research.swtch.com/gophercount</a>
</li>

<li>Most Popular Technologies (Stack Overflow Survery 2018)<br />
<a href="https://insights.stackoverflow.com/survey/2018/#most-popular-technologies">https://insights.stackoverflow.com/survey/2018/#most-popular-technologies</a>
</li>

<li>Most Popular Technologies (Stack Overflow Survery 2017)<br />
<a href="https://insights.stackoverflow.com/survey/2017#technology">https://insights.stackoverflow.com/survey/2017#technology</a>
</li>

<li>JavaScript vs. Golang for IoT: Is Gopher Winning?<br />
<a href="https://www.iotforall.com/javascript-vs-golang-iot/">https://www.iotforall.com/javascript-vs-golang-iot/</a>
</li>

<li>The Go Programming Language: Release History<br />
<a href="https://golang.org/doc/devel/release.html">https://golang.org/doc/devel/release.html</a>
</li>

<li>Go 1.11 Release Notes<br />
<a href="https://golang.org/doc/go1.11">https://golang.org/doc/go1.11</a>
</li>

<li>Go 1.10 Release Notes<br />
<a href="https://golang.org/doc/go1.10">https://golang.org/doc/go1.10</a>
</li>

<li>Go 1.9 Release Notes (tato verze je stále používána)<br />
<a href="https://golang.org/doc/go1.9">https://golang.org/doc/go1.9</a>
</li>

<li>Go 1.8 Release Notes (i tato verze je stále používána)<br />
<a href="https://golang.org/doc/go1.8">https://golang.org/doc/go1.8</a>
</li>

<li>Go on Fedora<br />
<a href="https://developer.fedoraproject.org/tech/languages/go/go-installation.html">https://developer.fedoraproject.org/tech/languages/go/go-installation.html</a>
</li>

<li>Writing Go programs<br />
<a href="https://developer.fedoraproject.org/tech/languages/go/go-programs.html">https://developer.fedoraproject.org/tech/languages/go/go-programs.html</a>
</li>

<li>The GOPATH environment variable<br />
<a href="https://tip.golang.org/doc/code.html#GOPATH">https://tip.golang.org/doc/code.html#GOPATH</a>
</li>

<li>Command gofmt<br />
<a href="https://tip.golang.org/cmd/gofmt/">https://tip.golang.org/cmd/gofmt/</a>
</li>

<li>The Go Blog: go fmt your code<br />
<a href="https://blog.golang.org/go-fmt-your-code">https://blog.golang.org/go-fmt-your-code</a>
</li>

<li>C? Go? Cgo!<br />
<a href="https://blog.golang.org/c-go-cgo">https://blog.golang.org/c-go-cgo</a>
</li>

<li>Spaces vs. Tabs: A 20-Year Debate Reignited by Google’s Golang<br />
<a href="https://thenewstack.io/spaces-vs-tabs-a-20-year-debate-and-now-this-what-the-hell-is-wrong-with-go/">https://thenewstack.io/spaces-vs-tabs-a-20-year-debate-and-now-this-what-the-hell-is-wrong-with-go/</a>
</li>

<li>400,000 GitHub repositories, 1 billion files, 14 terabytes of code: Spaces or Tabs?<br />
<a href="https://medium.com/@hoffa/400-000-github-repositories-1-billion-files-14-terabytes-of-code-spaces-or-tabs-7cfe0b5dd7fd">https://medium.com/@hoffa/400-000-github-repositories-1-billion-files-14-terabytes-of-code-spaces-or-tabs-7cfe0b5dd7fd</a>
</li>

<li>Gofmt No Longer Allows Spaces. Tabs Only<br />
<a href="https://news.ycombinator.com/item?id=7914523">https://news.ycombinator.com/item?id=7914523</a>
</li>

<li>Why does Go "go fmt" uses tabs instead of whitespaces?<br />
<a href="https://www.quora.com/Why-does-Go-go-fmt-uses-tabs-instead-of-whitespaces">https://www.quora.com/Why-does-Go-go-fmt-uses-tabs-instead-of-whitespaces</a>
</li>

<li>Interactive: The Top Programming Languages 2018<br />
<a href="https://spectrum.ieee.org/static/interactive-the-top-programming-languages-2018">https://spectrum.ieee.org/static/interactive-the-top-programming-languages-2018</a>
</li>

<li>Go vs. Python<br />
<a href="https://www.peterbe.com/plog/govspy">https://www.peterbe.com/plog/govspy</a>
</li>

<li>PackageManagementTools<br />
<a href="https://github.com/golang/go/wiki/PackageManagementTools">https://github.com/golang/go/wiki/PackageManagementTools</a>
</li>

<li>A Tour of Go: Type inference<br />
<a href="https://tour.golang.org/basics/14">https://tour.golang.org/basics/14</a>
</li>

<li>Go Slices: usage and internals<br />
<a href="https://blog.golang.org/go-slices-usage-and-internals">https://blog.golang.org/go-slices-usage-and-internals</a>
</li>

<li>Go by Example: Slices<br />
<a href="https://gobyexample.com/slices">https://gobyexample.com/slices</a>
</li>

<li>What is the point of slice type in Go?<br />
<a href="https://stackoverflow.com/questions/2098874/what-is-the-point-of-slice-type-in-go">https://stackoverflow.com/questions/2098874/what-is-the-point-of-slice-type-in-go</a>
</li>

<li>The curious case of Golang array and slices<br />
<a href="https://medium.com/@hackintoshrao/the-curious-case-of-golang-array-and-slices-2565491d4335">https://medium.com/@hackintoshrao/the-curious-case-of-golang-array-and-slices-2565491d4335</a>
</li>

<li>Introduction to Slices in Golang<br />
<a href="https://www.callicoder.com/golang-slices/">https://www.callicoder.com/golang-slices/</a>
</li>

<li>Golang: Understanding 'null' and nil<br />
<a href="https://newfivefour.com/golang-null-nil.html">https://newfivefour.com/golang-null-nil.html</a>
</li>

<li>What does nil mean in golang?<br />
<a href="https://stackoverflow.com/questions/35983118/what-does-nil-mean-in-golang">https://stackoverflow.com/questions/35983118/what-does-nil-mean-in-golang</a>
</li>

<li>nils In Go<br />
<a href="https://go101.org/article/nil.html">https://go101.org/article/nil.html</a>
</li>

<li>Go slices are not dynamic arrays<br />
<a href="https://appliedgo.net/slices/">https://appliedgo.net/slices/</a>
</li>

<li>Go-is-no-good (nelze brát doslova)<br />
<a href="https://github.com/ksimka/go-is-not-good">https://github.com/ksimka/go-is-not-good</a>
</li>

<li>Rust vs. Go<br />
<a href="https://news.ycombinator.com/item?id=13430108">https://news.ycombinator.com/item?id=13430108</a>
</li>

<li>Seriál Programovací jazyk Rust<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-rust/">https://www.root.cz/serialy/programovaci-jazyk-rust/</a>
</li>

<li>Modern garbage collection: A look at the Go GC strategy<br />
<a href="https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e">https://blog.plan99.net/modern-garbage-collection-911ef4f8bd8e</a>
</li>

<li>Go GC: Prioritizing low latency and simplicity<br />
<a href="https://blog.golang.org/go15gc">https://blog.golang.org/go15gc</a>
</li>

<li>Is Golang a good language for embedded systems?<br />
<a href="https://www.quora.com/Is-Golang-a-good-language-for-embedded-systems">https://www.quora.com/Is-Golang-a-good-language-for-embedded-systems</a>
</li>

<li>Running GoLang on an STM32 MCU. A quick tutorial.<br />
<a href="https://www.mickmake.com/post/running-golang-on-an-mcu-a-quick-tutorial">https://www.mickmake.com/post/running-golang-on-an-mcu-a-quick-tutorial</a>
</li>

<li>Go, Robot, Go! Golang Powered Robotics<br />
<a href="https://gobot.io/">https://gobot.io/</a>
</li>

<li>Emgo: Bare metal Go (language for programming embedded systems)<br />
<a href="https://github.com/ziutek/emgo">https://github.com/ziutek/emgo</a>
</li>

<li>UTF-8 history<br />
<a href="https://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt">https://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt</a>
</li>

<li>Less is exponentially more<br />
<a href="https://commandcenter.blogspot.com/2012/06/less-is-exponentially-more.html">https://commandcenter.blogspot.com/2012/06/less-is-exponentially-more.html</a>
</li>

<li>Should I Rust, or Should I Go<br />
<a href="https://codeburst.io/should-i-rust-or-should-i-go-59a298e00ea9">https://codeburst.io/should-i-rust-or-should-i-go-59a298e00ea9</a>
</li>

<li>Setting up and using gccgo<br />
<a href="https://golang.org/doc/install/gccgo">https://golang.org/doc/install/gccgo</a>
</li>

<li>Elastic Tabstops<br />
<a href="http://nickgravgaard.com/elastic-tabstops/">http://nickgravgaard.com/elastic-tabstops/</a>
</li>

<li>Strings, bytes, runes and characters in Go<br />
<a href="https://blog.golang.org/strings">https://blog.golang.org/strings</a>
</li>

<li>Datový typ<br />
<a href="https://cs.wikipedia.org/wiki/Datov%C3%BD_typ">https://cs.wikipedia.org/wiki/Datov%C3%BD_typ</a>
</li>

<li>Seriál o programovacím jazyku Rust: Základní (primitivní) datové typy<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-rust-nahrada-c-nebo-slepa-cesta/#k09">https://www.root.cz/clanky/programovaci-jazyk-rust-nahrada-c-nebo-slepa-cesta/#k09</a>
</li>

<li>Seriál o programovacím jazyku Rust: Vytvoření „řezu“ z pole<br />
<a href="https://www.root.cz/clanky/prace-s-poli-v-programovacim-jazyku-rust/#k06">https://www.root.cz/clanky/prace-s-poli-v-programovacim-jazyku-rust/#k06</a>
</li>

<li>Seriál o programovacím jazyku Rust: Řezy (slice) vektoru<br />
<a href="https://www.root.cz/clanky/prace-s-vektory-v-programovacim-jazyku-rust/#k05">https://www.root.cz/clanky/prace-s-vektory-v-programovacim-jazyku-rust/#k05</a>
</li>

<li>Printf Format Strings<br />
<a href="https://www.cprogramming.com/tutorial/printf-format-strings.html">https://www.cprogramming.com/tutorial/printf-format-strings.html</a>
</li>

<li>Java: String.format<br />
<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#format-java.lang.String-java.lang.Object...-">https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#format-java.lang.String-java.lang.Object...-</a>
</li>

<li>Java: format string syntax<br />
<a href="https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html#syntax">https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html#syntax</a>
</li>

<li>Selectors<br />
<a href="https://golang.org/ref/spec#Selectors">https://golang.org/ref/spec#Selectors</a>
</li>

<li>Calling Go code from Python code<br />
<a href="http://savorywatt.com/2015/09/18/calling-go-code-from-python-code/">http://savorywatt.com/2015/09/18/calling-go-code-from-python-code/</a>
</li>

<li>Go Data Structures: Interfaces <br />
<a href="https://research.swtch.com/interfaces">https://research.swtch.com/interfaces</a>
</li>

<li>How to use interfaces in Go<br />
<a href="http://jordanorelli.com/post/32665860244/how-to-use-interfaces-in-go">http://jordanorelli.com/post/32665860244/how-to-use-interfaces-in-go</a>
</li>

<li>Interfaces in Go (part I)<br />
<a href="https://medium.com/golangspec/interfaces-in-go-part-i-4ae53a97479c">https://medium.com/golangspec/interfaces-in-go-part-i-4ae53a97479c</a>
</li>

<li>Part 21: Goroutines<br />
<a href="https://golangbot.com/goroutines/">https://golangbot.com/goroutines/</a>
</li>

<li>Part 22: Channels<br />
<a href="https://golangbot.com/channels/">https://golangbot.com/channels/</a>
</li>

<li>[Go] Lightweight eventbus with async compatibility for Go<br />
<a href="https://github.com/asaskevich/EventBus">https://github.com/asaskevich/EventBus</a>
</li>

<li>What about Trait support in Golang?<br />
<a href="https://www.reddit.com/r/golang/comments/8mfykl/what_about_trait_support_in_golang/">https://www.reddit.com/r/golang/comments/8mfykl/what_about_trait_support_in_golang/</a>
</li>

<li>Don't Get Bitten by Pointer vs Non-Pointer Method Receivers in Golang<br />
<a href="https://nathanleclaire.com/blog/2014/08/09/dont-get-bitten-by-pointer-vs-non-pointer-method-receivers-in-golang/">https://nathanleclaire.com/blog/2014/08/09/dont-get-bitten-by-pointer-vs-non-pointer-method-receivers-in-golang/</a>
</li>

<li>Control Flow<br />
<a href="https://en.wikipedia.org/wiki/Control_flow">https://en.wikipedia.org/wiki/Control_flow</a>
</li>

<li>Structured programming<br />
<a href="https://en.wikipedia.org/wiki/Structured_programming">https://en.wikipedia.org/wiki/Structured_programming</a>
</li>

<li>Control Structures<br />
<a href="https://www.golang-book.com/books/intro/5">https://www.golang-book.com/books/intro/5</a>
</li>

<li>Control structures - Go if else statement<br />
<a href="http://golangtutorials.blogspot.com/2011/06/control-structures-if-else-statement.html">http://golangtutorials.blogspot.com/2011/06/control-structures-if-else-statement.html</a>
</li>

<li>Control structures - Go switch case statement<br />
<a href="http://golangtutorials.blogspot.com/2011/06/control-structures-go-switch-case.html">http://golangtutorials.blogspot.com/2011/06/control-structures-go-switch-case.html</a>
</li>

<li>Control structures - Go for loop, break, continue, range<br />
<a href="http://golangtutorials.blogspot.com/2011/06/control-structures-go-for-loop-break.html">http://golangtutorials.blogspot.com/2011/06/control-structures-go-for-loop-break.html</a>
</li>

<li>Goroutine IDs<br />
<a href="https://blog.sgmansfield.com/2015/12/goroutine-ids/">https://blog.sgmansfield.com/2015/12/goroutine-ids/</a>
</li>

<li>Different ways to pass channels as arguments in function in go (golang)<br />
<a href="https://stackoverflow.com/questions/24868859/different-ways-to-pass-channels-as-arguments-in-function-in-go-golang">https://stackoverflow.com/questions/24868859/different-ways-to-pass-channels-as-arguments-in-function-in-go-golang</a>
</li>

<li>justforfunc #22: using the Go execution tracer<br />
<a href="https://www.youtube.com/watch?v=ySy3sR1LFCQ">https://www.youtube.com/watch?v=ySy3sR1LFCQ</a>
</li>

<li>Single Function Exit Point<br />
<a href="http://wiki.c2.com/?SingleFunctionExitPoint">http://wiki.c2.com/?SingleFunctionExitPoint</a>
</li>

<li>Entry point<br />
<a href="https://en.wikipedia.org/wiki/Entry_point">https://en.wikipedia.org/wiki/Entry_point</a>
</li>

<li>Why does Go have a GOTO statement?!<br />
<a href="https://www.reddit.com/r/golang/comments/kag5q/why_does_go_have_a_goto_statement/">https://www.reddit.com/r/golang/comments/kag5q/why_does_go_have_a_goto_statement/</a>
</li>

<li>Effective Go<br />
<a href="https://golang.org/doc/effective_go.html">https://golang.org/doc/effective_go.html</a>
</li>

<li>GoClipse: an Eclipse IDE for the Go programming language<br />
<a href="http://goclipse.github.io/">http://goclipse.github.io/</a>
</li>

<li>GoClipse Installation<br />
<a href="https://github.com/GoClipse/goclipse/blob/latest/documentation/Installation.md#installation">https://github.com/GoClipse/goclipse/blob/latest/documentation/Installation.md#installation</a>
</li>

<li>The zero value of a slice is not nil<br />
<a href="https://stackoverflow.com/questions/30806931/the-zero-value-of-a-slice-is-not-nil">https://stackoverflow.com/questions/30806931/the-zero-value-of-a-slice-is-not-nil</a>
</li>

<li>Go-tcha: When nil != nil<br />
<a href="https://dev.to/pauljlucas/go-tcha-when-nil--nil-hic">https://dev.to/pauljlucas/go-tcha-when-nil--nil-hic</a>
</li>

<li>Nils in Go<br />
<a href="https://www.doxsey.net/blog/nils-in-go">https://www.doxsey.net/blog/nils-in-go</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

