<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Získání testovacího obrázku používaného demonstračními příklady</a></p>
<p><a href="#k03">*** 3. Kostra demonstračních příkladů</a></p>
<p><a href="#k04">*** 4. Obrazové filtry nabízené knihovnou Gift</a></p>
<p><a href="#k05">*** 5. Konverze obrázku na stupně šedi</a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<pre>
$ <strong>go get -u github.com/disintegration/gift</strong>
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Získání testovacího obrázku používaného demonstračními příklady</h2>

<p>Před popisem jednotlivých operací, které knihovna Gift podporuje, a před spuštěním demonstračních příkladů je nutné získat testovací obrázek, který bude do příkladů načítán a dále zpracováván. Vzhledem k&nbsp;tomu, že si budeme mj.&nbsp;popisovat i různé konvoluční filtry aplikované na rastrové obrázky, použijeme dnes již legendární testovací obrázek s&nbsp;fotkou Lenny (Leny), který se v&nbsp;oblasti počítačové grafiky a zpracování obrazu používá již několik desetiletí, konkrétně od roku 1973 (více viz stránka <a href="https://web.archive.org/web/20121204075055/http://www.ee.cityu.edu.hk/~lmpo/lenna/Lenna97.html">Lenna 97: A Complete Story of Lenna</a>).</p>

*** image ***
<p><i>Obrázek 1: Testovací obrázek Lenny použitý ve všech dnešních demonstračních příkladech.</i></p>

<p>Testovací obrázek, který má dnes již &bdquo;klasické&ldquo; rozlišení 512&times;512 pixelů, je možné získat například z&nbsp;Wikipedie, a to následujícím jednoduchým skriptem. Skript je vhodné spustit ve stejném adresáři, kde se nachází i demonstrační příklady získané z&nbsp;repositáře popsaného <a href="#k19">v&nbsp;devatenácté kapitole</a>:</p>

<pre>
$ <strong>original_image_address="https://upload.wikimedia.org/wikipedia/en/7/7d/Lenna_%28test_image%29.png"</strong>
&nbsp;
$ <strong>wget -v -O Lenna.png $original_image_address</strong>
</pre>

<p>Po spuštění tohoto skriptu by se měl v&nbsp;pracovním adresáři objevit nový soubor nazvaný <strong>Lenna.png</strong>. O tom se samozřejmě můžeme velmi snadno přesvědčit pomocí příkazů <strong>ls</strong> a <strong>file</strong>:</p>

<pre>
$ <strong>ls -l Lenna.png</strong>
&nbsp;
-rw-rw-r--. 1 ptisnovs ptisnovs 473831 10. kvě 17.16 Lenna.png
</pre>

<pre>
$ <strong>file Lenna.png</strong>
&nbsp;
Lenna.png: PNG image data, 512 x 512, 8-bit/color RGB, non-interlaced
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Kostra demonstračních příkladů</h2>

<pre>
package main
&nbsp;
import (
        "github.com/disintegration/gift"
        "image"
        "image/png"
        "log"
        "os"
)
&nbsp;
const SourceImageFileName = "Lenna.png"
const DestinationImageFileName = "01.png"
&nbsp;
func loadImage(filename string) (image.Image, error) {
        infile, err := os.Open(filename)
        if err != nil {
                return nil, err
        }
        defer infile.Close()
&nbsp;
        src, _, err := image.Decode(infile)
        if err != nil {
                return nil, err
        }
        return src, nil
}
&nbsp;
func saveImage(filename string, img image.Image) error {
        outfile, err := os.Create(filename)
        if err != nil {
                return err
        }
        defer outfile.Close()
&nbsp;
        png.Encode(outfile, img)
        return nil
}
&nbsp;
func main() {
        sourceImage, err := loadImage(SourceImageFileName)
        if err != nil {
                log.Fatal(err)
        }
&nbsp;
        g := gift.New()
&nbsp;
        destinationImage := image.NewRGBA(g.Bounds(sourceImage.Bounds()))
        g.Draw(destinationImage, sourceImage)
&nbsp;
        err = saveImage(DestinationImageFileName, destinationImage)
        if err != nil {
                log.Fatal(err)
        }
}
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Obrazové filtry nabízené knihovnou Gift</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. Konverze obrázku na stupně šedi</h2>

<pre>
package main

import (
        "github.com/disintegration/gift"
        "image"
        "image/png"
        "log"
        "os"
)

const SourceImageFileName = "Lenna.png"
const DestinationImageFileName = "02_grayscale.png"

func loadImage(filename string) (image.Image, error) {
        infile, err := os.Open(filename)
        if err != nil {
                return nil, err
        }
        defer infile.Close()

        src, _, err := image.Decode(infile)
        if err != nil {
                return nil, err
        }
        return src, nil
}

func saveImage(filename string, img image.Image) error {
        outfile, err := os.Create(filename)
        if err != nil {
                return err
        }
        defer outfile.Close()

        png.Encode(outfile, img)
        return nil
}

func main() {
        sourceImage, err := loadImage(SourceImageFileName)
        if err != nil {
                log.Fatal(err)
        }

        g := gift.New(
                gift.Grayscale())

        destinationImage := image.NewRGBA(g.Bounds(sourceImage.Bounds()))
        g.Draw(destinationImage, sourceImage)

        err = saveImage(DestinationImageFileName, destinationImage)
        if err != nil {
                log.Fatal(err)
        }
}
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
přibližně pět až šest megabajtů), můžete namísto toho použít odkazy na
jednotlivé příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td>1</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_55/">https://github.com/tisnik/go-root/blob/master/article_55/</a></td></tr>
<tr><td>2</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_55/">https://github.com/tisnik/go-root/blob/master/article_55/</a></td></tr>
<tr><td>3</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_55/">https://github.com/tisnik/go-root/blob/master/article_55/</a></td></tr>
<tr><td>4</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_55/">https://github.com/tisnik/go-root/blob/master/article_55/</a></td></tr>
<tr><td>5</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_55/">https://github.com/tisnik/go-root/blob/master/article_55/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>
</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

