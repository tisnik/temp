<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Technologie WebAssembly a GopherJS: předávání argumentů mezi Go a JavaScriptem (dokončení)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Technologie WebAssembly a GopherJS: předávání argumentů mezi Go a JavaScriptem (dokončení)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Technologie WebAssembly a GopherJS: předávání argumentů mezi Go a JavaScriptem (dokončení)</a></p>
<p><a href="#k02">*** 2. Předání řetězce z&nbsp;JavaScriptu do Go</a></p>
<p><a href="#k03">*** 3. Otestování předání řetězce z&nbsp;JavaScriptu do Go</a></p>
<p><a href="#k04">*** 4. Předání objektu z&nbsp;JavaScriptu do Go</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. Přístup k&nbsp;atributům JavaScriptového objektu z&nbsp;Go</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. Konverze atributů předaného objektu do nativních typů Go</a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. Předání pole, získání počtu prvků pole</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. Přístup k&nbsp;prvkům JavaScriptového pole z&nbsp;Go</a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. Součet prvků předaného pole</a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. Předání funkce naprogramované v&nbsp;JavaScriptu do Go</a></p>
<p><a href="#k17">*** 17. Zavolání JavaScriptové funkce</a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Technologie WebAssembly a GopherJS: předávání argumentů mezi Go a JavaScriptem (dokončení)</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Předání řetězce z&nbsp;JavaScriptu do Go</h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. Otestování předání řetězce z&nbsp;JavaScriptu do Go</h2>

<pre>
// Technologie WebAssembly a GopherJS
//
// - rozhraní mezi jazyky Go a JavaScript
// - kontrola počtu argumentů předaných funkci PrintMessage
// - kontrola typu argumentů předaných funkci PrintMessage
// - provedení konverze na nativní typy jazyka Go

package main

import (
        "fmt"
        "syscall/js"
)

// funkce, která se bude volat z HTML stránky, jakoby
// se jednalo o JavaScriptovou funkci
func PrintMessage(this js.Value, args []js.Value) any {
        // kontrola počtu předaných argumentů
        if len(args) != 1 {
                fmt.Printf("incorrect number of arguments %d, but exactly one is accepted\n", len(args))
                return nil
        }

        // kontrola typu předaného argumentu
        typ := args[0].Type()
        if typ != js.TypeString {
                fmt.Printf("Argument #0 has incorrect type %s\n", typ.String())
                return nil
        }

        // provést konverzi
        message := args[0].String()

        // zobrazit zprávu
        fmt.Println(message)

        // je nutné vrátit nějakou hodnotu
        return nil
}

func main() {
        fmt.Println("started")

        c := make(chan bool)

        // export funkce PrintMessage tak, aby byla volatelná
        // z JavaScriptu
        js.Global().Set("printMessage", js.FuncOf(PrintMessage))

        // realizace nekonečného čekání
        // (nutno provést při překladu do WebAssembly, ktežto
        // v případě použití GopherJS je možné hlavní funkci ukončit)
        <-c

        fmt.Println("finished")
}
</pre>

<pre>
<!doctype html>
<html>
    <head>
        <title>Function call: with string argument</title>
    </head>
    <body>
        <h1 id="header">Function call: with string argument</h2>
        <script src="func_call_string.js" type="text/javascript"></script>
        <script type="text/javascript">
            // korektní argumenty
            printMessage("");
            printMessage("Hello, world!");
            printMessage("příliš žluťoučký kůň");

            // špatný počet argumentů
            printMessage("foo", "bar")
            printMessage();

            // špatný typ argumentu
            printMessage(2);
            printMessage(null);
            printMessage(undefined);
        </script>
    </body>
</html>

</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Předání objektu z&nbsp;JavaScriptu do Go</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
// Technologie WebAssembly a GopherJS
//
// - rozhraní mezi jazyky Go a JavaScript
// - kontrola počtu argumentů předaných funkci PrintObject
// - kontrola typu argumentů předaných funkci PrintObject

package main

import (
        "fmt"
        "syscall/js"
)

// funkce, která se bude volat z HTML stránky, jakoby
// se jednalo o JavaScriptovou funkci
func PrintObject(this js.Value, args []js.Value) any {
        // kontrola počtu předaných argumentů
        if len(args) != 1 {
                fmt.Printf("incorrect number of arguments %d, but exactly one is accepted\n", len(args))
                return nil
        }

        object := args[0]

        // kontrola typu předaného argumentu
        typ := object.Type()
        if typ != js.TypeObject {
                fmt.Printf("Argument #0 has incorrect type %s\n", typ.String())
                return nil
        }

        // zobrazit objekt
        fmt.Println(object)

        // je nutné vrátit nějakou hodnotu
        return nil
}

func main() {
        fmt.Println("started")

        c := make(chan bool)

        // export funkce PrintObject tak, aby byla volatelná
        // z JavaScriptu
        js.Global().Set("printObject", js.FuncOf(PrintObject))

        // realizace nekonečného čekání
        // (nutno provést při překladu do WebAssembly, ktežto
        // v případě použití GopherJS je možné hlavní funkci ukončit)
        <-c

        fmt.Println("finished")
}
</pre>

<pre>
<!doctype html>
<html>
    <head>
        <title>Function call: with object argument</title>
    </head>
    <body>
        <h1 id="header">Function call: with object argument</h2>
        <script src="func_call_object_1.js" type="text/javascript"></script>
        <script type="text/javascript">
            // konstrukce objektu
            const person = new Object();

            // přidání atributů
            person.firstName = "John";
            person.lastName = "Doe";
            person.age = 42;
            person.eyeColor = "blue";

            printObject(person);
        </script>
    </body>
</html>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Přístup k&nbsp;atributům JavaScriptového objektu z&nbsp;Go</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
// Technologie WebAssembly a GopherJS
//
// - rozhranĂ­ mezi jazyky Go a JavaScript
// - kontrola poÄtu argumentĹŻ pĹedanĂ˝ch funkci PrintObject
// - kontrola typu argumentĹŻ pĹedanĂ˝ch funkci PrintObject

package main

import (
        "fmt"
        "syscall/js"
)

// funkce, kterĂĄ se bude volat z HTML strĂĄnky, jakoby
// se jednalo o JavaScriptovou funkci
func PrintObject(this js.Value, args []js.Value) any {
        // kontrola poÄtu pĹedanĂ˝ch argumentĹŻ
        if len(args) != 1 {
                fmt.Printf("incorrect number of arguments %d, but exactly one is accepted\n", len(args))
                return nil
        }

        object := args[0]

        // kontrola typu pĹedanĂŠho argumentu
        typ := object.Type()
        if typ != js.TypeObject {
                fmt.Printf("Argument #0 has incorrect type %s\n", typ.String())
                return nil
        }

        // zobrazit atributy objektu
        fmt.Printf("First name: %v\n", object.Get("firstName"))
        fmt.Printf("Last name:  %v\n", object.Get("lastName"))
        fmt.Printf("Age:        %v\n", object.Get("age"))
        fmt.Printf("Eye color:  %v\n", object.Get("eyeColor"))

        // je nutnĂŠ vrĂĄtit nÄjakou hodnotu
        return nil
}

func main() {
        fmt.Println("started")

        c := make(chan bool)

        // export funkce PrintObject tak, aby byla volatelnĂĄ
        // z JavaScriptu
        js.Global().Set("printObject", js.FuncOf(PrintObject))

        // realizace nekoneÄnĂŠho ÄekĂĄnĂ­
        // (nutno provĂŠst pĹi pĹekladu do WebAssembly, kteĹžto
        // v pĹĂ­padÄ pouĹžitĂ­ GopherJS je moĹžnĂŠ hlavnĂ­ funkci ukonÄit)
        <-c

        fmt.Println("finished")
}
</pre>

<pre>
<!doctype html>
<html>
    <head>
        <title>Function call: with object argument</title>
    </head>
    <body>
        <h1 id="header">Function call: with object argument</h2>
        <script src="func_call_object_2.js" type="text/javascript"></script>
        <script type="text/javascript">
            // konstrukce objektu
            const person = new Object();

            // přidání atributů
            person.firstName = "John";
            person.lastName = "Doe";
            person.age = 42;
            person.eyeColor = "blue";

            printObject(person);
        </script>
    </body>
</html>
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Konverze atributů předaného objektu do nativních typů Go</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
// Technologie WebAssembly a GopherJS
//
// - rozhranĂ­ mezi jazyky Go a JavaScript
// - kontrola poÄtu argumentĹŻ pĹedanĂ˝ch funkci PrintObject
// - kontrola typu argumentĹŻ pĹedanĂ˝ch funkci PrintObject

package main

import (
        "fmt"
        "syscall/js"
)

// funkce, kterĂĄ se bude volat z HTML strĂĄnky, jakoby
// se jednalo o JavaScriptovou funkci
func PrintObject(this js.Value, args []js.Value) any {
        // kontrola poÄtu pĹedanĂ˝ch argumentĹŻ
        if len(args) != 1 {
                fmt.Printf("incorrect number of arguments %d, but exactly one is accepted\n", len(args))
                return nil
        }

        object := args[0]

        // kontrola typu pĹedanĂŠho argumentu
        typ := object.Type()
        if typ != js.TypeObject {
                fmt.Printf("Argument #0 has incorrect type %s\n", typ.String())
                return nil
        }

        firstName := object.Get("firstName").String()
        lastName := object.Get("lastName").String()
        age := object.Get("age").Int()
        eyeColor := object.Get("eyeColor").String()

        // zobrazit atributy objektu
        fmt.Printf("First name: %s (%T)\n", firstName, firstName)
        fmt.Printf("Last name:  %s (%T)\n", lastName, lastName)
        fmt.Printf("Age:        %d (%T)\n", age, age)
        fmt.Printf("Eye color:  %s (%T)\n", eyeColor, eyeColor)

        // je nutnĂŠ vrĂĄtit nÄjakou hodnotu
        return nil
}

func main() {
        fmt.Println("started")

        c := make(chan bool)

        // export funkce PrintObject tak, aby byla volatelnĂĄ
        // z JavaScriptu
        js.Global().Set("printObject", js.FuncOf(PrintObject))

        // realizace nekoneÄnĂŠho ÄekĂĄnĂ­
        // (nutno provĂŠst pĹi pĹekladu do WebAssembly, kteĹžto
        // v pĹĂ­padÄ pouĹžitĂ­ GopherJS je moĹžnĂŠ hlavnĂ­ funkci ukonÄit)
        <-c

        fmt.Println("finished")
}
</pre>

<pre>
<!doctype html>
<html>
    <head>
        <title>Function call: with object argument</title>
    </head>
    <body>
        <h1 id="header">Function call: with object argument</h2>
        <script src="func_call_object_3.js" type="text/javascript"></script>
        <script type="text/javascript">
            // konstrukce objektu
            const person = new Object();

            // přidání atributů
            person.firstName = "John";
            person.lastName = "Doe";
            person.age = 42;
            person.eyeColor = "blue";

            printObject(person);
        </script>
    </body>
</html>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Předání pole, získání počtu prvků pole</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
// Technologie WebAssembly a GopherJS
//
// - rozhranĂ­ mezi jazyky Go a JavaScript
// - kontrola poÄtu argumentĹŻ pĹedanĂ˝ch funkci PrintArrayLength
// - kontrola typu argumentĹŻ pĹedanĂ˝ch funkci PrintArrayLength
// - vĂ˝poÄet dĂŠlky pole

package main

import (
        "fmt"
        "syscall/js"
)

// funkce, kterĂĄ se bude volat z HTML strĂĄnky, jakoby
// se jednalo o JavaScriptovou funkci
func PrintArrayLength(this js.Value, args []js.Value) any {
        // kontrola poÄtu pĹedanĂ˝ch argumentĹŻ
        if len(args) != 1 {
                fmt.Printf("incorrect number of arguments %d, but exactly one is accepted\n", len(args))
                return nil
        }

        // kontrola typu pĹedanĂŠho argumentu
        typ := args[0].Type()
        if typ != js.TypeObject {
                fmt.Printf("Argument #0 has incorrect type %s\n", typ.String())
                return nil
        }

        // zĂ­skat atribut s dĂŠlkou pole
        array := args[0]
        length := array.Length()

        // zobrazit zprĂĄvu
        fmt.Printf("Array length = %d\n", length)

        // je nutnĂŠ vrĂĄtit nÄjakou hodnotu
        return nil
}

func main() {
        fmt.Println("started")

        c := make(chan bool)

        // export funkce printArrayLength tak, aby byla volatelnĂĄ
        // z JavaScriptu
        js.Global().Set("printArrayLength", js.FuncOf(PrintArrayLength))

        // realizace nekoneÄnĂŠho ÄekĂĄnĂ­
        // (nutno provĂŠst pĹi pĹekladu do WebAssembly, kteĹžto
        // v pĹĂ­padÄ pouĹžitĂ­ GopherJS je moĹžnĂŠ hlavnĂ­ funkci ukonÄit)
        <-c

        fmt.Println("finished")
}
</pre>

<pre>
<!doctype html>
<html>
    <head>
        <title>Function call: array as argument</title>
    </head>
    <body>
        <h1 id="header">Function call: array as argument</h2>
        <script src="func_call_array_1.js" type="text/javascript"></script>
        <script type="text/javascript">
            // korektní argumenty
            printArrayLength([]);
            printArrayLength([1]);
            printArrayLength([1, 2, 3]);
            printArrayLength(["foo", "bar", "baz"])
            printArrayLength([true, false]);
        </script>
    </body>
</html>
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Přístup k&nbsp;prvkům JavaScriptového pole z&nbsp;Go</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Součet prvků předaného pole</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Předání funkce naprogramované v&nbsp;JavaScriptu do Go</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Zavolání JavaScriptové funkce</h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;jazyce Go, které jsou určené pro
transpřeklad do JavaScriptu s&nbsp;využitím nástroje <strong>GopherJS</strong>,
byly uloženy do Git repositáře, jenž je dostupný na adrese <a
href="https://github.com/RedHatOfficial/GoCourse">https://github.com/RedHatOfficial/GoCourse</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>func_call_no_arguments.go</td><td>první demonstrační příklad: zavolání Go funkce bez předání argumentů</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_no_arguments.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_no_arguments.go</a></td></tr>
<tr><td> 2</td><td>func_call_no_arguments.html</td><td>HTML stránka s&nbsp;kódem pro načtení prvního demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_no_arguments.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_no_arguments.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>func_call_with_arguments.go</td><td>druhý demonstrační příklad: výpis všech argumentů předaných funkci volané z&nbsp;JavaScriptu</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_with_arguments.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_with_arguments.go</a></td></tr>
<tr><td> 4</td><td>func_call_with_arguments.html</td><td>HTML stránka s&nbsp;kódem pro načtení druhého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_with_arguments.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_with_arguments.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>func_call_argument_types_1.go</td><td>třetí demonstrační příklad: výpis typu argumentů, které jsou obaleny strukturou <strong>js.Value</strong></td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_1.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_1.go</a></td></tr>
<tr><td> 6</td><td>func_call_argument_types_1.html</td><td>HTML stránka s&nbsp;kódem pro načtení třetího demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_1.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_1.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>func_call_argument_types_2.go</td><td>čtvrtý demonstrační příklad: vylepšené řešení tisku argumentů funkce volané z&nbsp;JavaScriptu</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_2.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_2.go</a></td></tr>
<tr><td> 8</td><td>func_call_argument_types_2.html</td><td>HTML stránka s&nbsp;kódem pro načtení čtvrtého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_2.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_argument_types_2.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>func_call_two_ints.go</td><td>pátý demonstrační příklad: realizace předání a konverze dvou argumentů typu <i>celé číslo</i></td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_ints.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_ints.go</a></td></tr>
<tr><td>10</td><td>func_call_two_ints.html</td><td>HTML stránka s&nbsp;kódem pro načtení pátého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_ints.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_ints.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>func_call_two_floats.go</td><td>šestý demonstrační příklad: realizace předání a konverze dvou argumentů typu <i>double</i></td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_floats.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_floats.go</a></td></tr>
<tr><td>12</td><td>func_call_two_floats.html</td><td>HTML stránka s&nbsp;kódem pro načtení šestého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_floats.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_two_floats.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>func_call_return_int_1.go</td><td>sedmý demonstrační příklad: vrácení hodnoty typu <i>int</i> do JavaScriptu</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_1.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_1.go</a></td></tr>
<tr><td>14</td><td>func_call_return_int_1.html</td><td>HTML stránka s&nbsp;kódem pro načtení sedmého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_1.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_1.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>func_call_return_int_2.go</td><td>osmý demonstrační příklad: vrácení hodnoty typu <i>int</i> do JavaScriptu</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_2.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_2.go</a></td></tr>
<tr><td>16</td><td>func_call_return_int_2.html</td><td>HTML stránka s&nbsp;kódem pro načtení osmého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_2.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_return_int_2.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>17</td><td>func_call_string.go</td><td>devátý demonstrační příklad: předání řetězce z&nbsp;JavaScriptu do Go</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_string.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_string.go</a></td></tr>
<tr><td>18</td><td>func_call_string.html</td><td>HTML stránka s&nbsp;kódem pro načtení devátého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_string.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_string.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>19</td><td>func_call_object_1.go</td><td>desátý demonstrační příklad: předání objektu z&nbsp;JavaScriptu do Go</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_1.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_1.go</a></td></tr>
<tr><td>20</td><td>func_call_object_1.html</td><td>HTML stránka s&nbsp;kódem pro načtení desátého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_1.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_1.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>func_call_object_2.go</td><td>jedenáctý demonstrační příklad: přístup k&nbsp;atributům předaného objektu</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_2.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_2.go</a></td></tr>
<tr><td>22</td><td>func_call_object_2.html</td><td>HTML stránka s&nbsp;kódem pro načtení jedenáctého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_2.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_2.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>23</td><td>func_call_object_3.go</td><td>dvanáctý demonstrační příklad: konverze atributů předaného objektu do nativních typů Go</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_3.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_3.go</a></td></tr>
<tr><td>24</td><td>func_call_object_3.html</td><td>HTML stránka s&nbsp;kódem pro načtení dvanáctého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_3.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_object_3.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>25</td><td>func_call_array_1.go</td><td>třináctý demonstrační příklad: předání pole se získáním počtu prvků</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_1.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_1.go</a></td></tr>
<tr><td>26</td><td>func_call_array_1.html</td><td>HTML stránka s&nbsp;kódem pro načtení třináctého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_1.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_1.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>27</td><td>func_call_array_2.go</td><td>čtrnáctý demonstrační příklad: výpis prvků předaného pole</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_2.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_2.go</a></td></tr>
<tr><td>28</td><td>func_call_array_2.html</td><td>HTML stránka s&nbsp;kódem pro načtení čtrnáctého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_2.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_2.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>29</td><td>func_call_array_sum.go</td><td>patnáctý demonstrační příklad: součet prvků předaného pole</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_sum.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_sum.go</a></td></tr>
<tr><td>30</td><td>func_call_array_sum.html</td><td>HTML stránka s&nbsp;kódem pro načtení patnáctého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_sum.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/func_call_array_sum.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>31</td><td>callback.go</td><td>šestnáctý demonstrační příklad: předání funkce s&nbsp;jejím zavoláním</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/callback.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/callback.go</a></td></tr>
<tr><td>32</td><td>callback.html</td><td>HTML stránka s&nbsp;kódem pro načtení šestnáctého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/callback.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/callback.html</a></td></tr>
</table>

<p>Pro úplnost si uveďme i odkazy na ukázkové příklady použité <a
href="https://www.root.cz/clanky/gopherjs-transprekladac-z-jazyka-go-do-javascriptu/">minule</a>:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td>1</td><td>hello_world.go</td><td>zdrojový kód prvního demonstračního příkladu: výpis zprávy na konzoli webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/hello_world.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/hello_world.go</a></td></tr>
<tr><td>1</td><td>hello_world.html</td><td>HTML stránka s&nbsp;kódem pro načtení prvního demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/hello_world.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/hello_world.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>2</td><td>dom_manipulation.go</td><td>zdrojový kód druhého demonstračního příkladu: manipulace s&nbsp;DOMem webové stránky</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_manipulation.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_manipulation.go</a></td></tr>
<tr><td>2</td><td>dom_manipulation.html</td><td>HTML stránka s&nbsp;kódem pro načtení druhého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_manipulation.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_manipulation.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>3</td><td>dom_add_element.go</td><td>zdrojový kód třetího demonstračního příkladu: přidání elementů do DOMu webové stránky</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_add_element.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_add_element.go</a></td></tr>
<tr><td>3</td><td>dom_add_element.html</td><td>HTML stránka s&nbsp;kódem pro načtení třetího demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_add_element.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/dom_add_element.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>4</td><td>draw_into_canvas.go</td><td>zdrojový kód čtvrtého demonstračního příkladu: kreslení do canvasu</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/draw_into_canvas.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/draw_into_canvas.go</a></td></tr>
<tr><td>4</td><td>draw_into_canvas.html</td><td>HTML stránka s&nbsp;kódem pro načtení čtvrtého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/draw_into_canvas.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/draw_into_canvas.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>5</td><td>js_interop_1.go</td><td>zdrojový kód pátého demonstračního příkladu: komunikace s&nbsp;JavaScriptem</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_1.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_1.go</a></td></tr>
<tr><td>5</td><td>js_interop_1.html</td><td>HTML stránka s&nbsp;kódem pro načtení pátého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_1.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_1.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>6</td><td>js_interop_2.go</td><td>zdrojový kód šestého demonstračního příkladu: komunikace s&nbsp;JavaScriptem</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_2.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_2.go</a></td></tr>
<tr><td>6</td><td>js_interop_2.html</td><td>HTML stránka s&nbsp;kódem pro načtení šestého demonstračního příkladu do webového prohlížeče</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_2.html">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/js_interop_2.html</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>http_server.go</td><td>implementace HTTP serveru, který dokáže webovému prohlížeči předávat obsah požadovaných souborů</td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/http_server.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/http_server.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>8</td><td>hello_world_2.go</td><td>varianta programu typu &bdquo;Hello, world!&ldquo;, která volá pouze funkci <strong>println()</strong></td><td><a href="https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/hello_world_2.go">https://github.com/RedHatOfficial/GoCourse/blob/master/lesson12/hello_world_2.go</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>go2js<br />
<a href="https://github.com/tredoe/go2js">https://github.com/tredoe/go2js</a>
</li>

<li>GitHub repositář projektu GopherJS<br />
<a href="https://github.com/gopherjs/gopherjs">https://github.com/gopherjs/gopherjs</a>
</li>

<li>How to use GopherJS to turn Go code into a JavaScript library<br />
<a href="https://medium.com/@kentquirk/how-to-use-gopherjs-to-turn-go-code-into-a-javascript-library-1e947703db7a">https://medium.com/@kentquirk/how-to-use-gopherjs-to-turn-go-code-into-a-javascript-library-1e947703db7a</a>
</li>

<li>Source to source compiler<br />
<a href="https://en.wikipedia.org/wiki/Source-to-source_compiler">https://en.wikipedia.org/wiki/Source-to-source_compiler</a>
</li>

<li>Binary recompiler<br />
<a href="https://en.wikipedia.org/wiki/Binary_recompiler">https://en.wikipedia.org/wiki/Binary_recompiler</a>
</li>

<li>py2many na GitHubu<br />
<a href="https://github.com/py2many/py2many">https://github.com/py2many/py2many</a>
</li>

<li>py2many na PyPi<br />
<a href="https://pypi.org/project/py2many/">https://pypi.org/project/py2many/</a>
</li>

<li>Awesome Transpilers<br />
<a href="https://github.com/milahu/awesome-transpilers">https://github.com/milahu/awesome-transpilers</a>
</li>

<li>WebAssembly<br />
<a href="https://webassembly.org/">https://webassembly.org/</a>
</li>

<li>WebAssembly na Wiki Golangu<br />
<a href="https://github.com/golang/go/wiki/WebAssembly">https://github.com/golang/go/wiki/WebAssembly</a>
</li>

<li>The future of WebAssembly - A look at upcoming features and proposals<br />
<a href="https://blog.scottlogic.com/2018/07/20/wasm-future.html">https://blog.scottlogic.com/2018/07/20/wasm-future.html</a>
</li>

<li>Writing WebAssembly By Hand<br />
<a href="https://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html">https://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html</a>
</li>

<li>WebAssembly Specification<br />
<a href="https://webassembly.github.io/spec/core/index.html">https://webassembly.github.io/spec/core/index.html</a>
</li>

<li>Index of Instructions<br />
<a href="https://webassembly.github.io/spec/core/appendix/index-instructions.html">https://webassembly.github.io/spec/core/appendix/index-instructions.html</a>
</li>

<li>The WebAssembly Binary Toolkit<br />
<a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a>
</li>

<li>Will WebAssembly replace JavaScript? Or Will WASM Make JavaScript More Valuable in Future?<br />
<a href="https://dev.to/vaibhavshah/will-webassembly-replace-javascript-or-will-wasm-make-javascript-more-valuable-in-future-5c6e">https://dev.to/vaibhavshah/will-webassembly-replace-javascript-or-will-wasm-make-javascript-more-valuable-in-future-5c6e</a>
</li>

<li>Roadmap (pro WebAssemly)<br />
<a href="https://webassembly.org/roadmap/">https://webassembly.org/roadmap/</a>
</li>

<li>Transcrypt<br />
<a href="https://transcrypt.org/">https://transcrypt.org/</a>
</li>

<li>JavaScript Data Types<br />
<a href="https://www.geeksforgeeks.org/javascript-data-types/">https://www.geeksforgeeks.org/javascript-data-types/</a>
</li>

<li>Standardní balíček <strong>syscall/js</strong><br />
<a href="https://pkg.go.dev/syscall/js">https://pkg.go.dev/syscall/js</a>
</li>

<li>Data types<br />
<a href="https://javascript.info/types">https://javascript.info/types</a>
</li>

<li>Datové typy (napsáno poněkud zjednodušeně)<br />
<a href="https://naucme.it/chapter/qa-04">https://naucme.it/chapter/qa-04</a>
</li>

<li>Primitive (JavaScript)<br />
<a href="https://developer.mozilla.org/en-US/docs/Glossary/Primitive">https://developer.mozilla.org/en-US/docs/Glossary/Primitive</a>
</li>

<li>JavaScript type: String<br />
<a href="https://developer.mozilla.org/en-US/docs/Glossary/String">https://developer.mozilla.org/en-US/docs/Glossary/String</a>
</li>

<li>JavaScript type: Number<br />
<a href="https://developer.mozilla.org/en-US/docs/Glossary/Number">https://developer.mozilla.org/en-US/docs/Glossary/Number</a>
</li>

<li>JavaScript type: Boolean<br />
<a href="https://developer.mozilla.org/en-US/docs/Glossary/Boolean">https://developer.mozilla.org/en-US/docs/Glossary/Boolean</a>
</li>

<li>JavaScript type: Undefined<br />
<a href="https://developer.mozilla.org/en-US/docs/Glossary/Undefined">https://developer.mozilla.org/en-US/docs/Glossary/Undefined</a>
</li>

<li>JavaScript type: Null<br />
<a href="https://developer.mozilla.org/en-US/docs/Glossary/Null">https://developer.mozilla.org/en-US/docs/Glossary/Null</a>
</li>

<li>JavaScript type: Symbol<br />
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol</a>
</li>

<li>JavaScript type: BigInt<br />
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

