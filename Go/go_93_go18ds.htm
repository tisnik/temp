<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovny s implementací generických datových typů pro programovací jazyk Go (2)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovny s implementací generických datových typů pro programovací jazyk Go (2)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Knihovny s&nbsp;implementací generických datových typů pro programovací jazyk Go (2)</a></p>
<p><a href="#k02">*** 2. Čtyři varianty stromů v&nbsp;knihovně Go18DS</a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. Časová složitost operací se seznamy</a></p>
<p><a href="#k12">*** 12. Benchmark &ndash; operace se seznamy</a></p>
<p><a href="#k13">*** 13. Výsledky benchmarku</a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Knihovny s&nbsp;implementací generických datových typů pro programovací jazyk Go (2)</h2>

<p></p>

<table>
<tr><th>Kontejner</th><th>Překlad</th></tr>
<tr><td>List</td><td><a href="https://www.root.cz/clanky/knihovny-s-implementaci-generickych-datovych-typu-pro-programovaci-jazyk-go/#k06">seznam</a></td></tr>
<tr><td>Set</td><td><a href="https://www.root.cz/clanky/knihovny-s-implementaci-generickych-datovych-typu-pro-programovaci-jazyk-go/#k17">množina</a></td></tr>
<tr><td>Stack</td><td><a href="https://www.root.cz/clanky/knihovny-s-implementaci-generickych-datovych-typu-pro-programovaci-jazyk-go/#k14">zásobník</a></td></tr>
<tr><td>Tree</td><td><a href="">strom</a></td></tr>
<tr><td>Map</td><td><a href="">mapa</a></td></tr>
</table>

<p>Ovšem vzhledem k&nbsp;tomu, že neexistuje taková implementace těchto
datových struktur v&nbsp;podobě, v&nbsp;níž by všechny algoritmy byly
realizovány s&nbsp;optimální složitostí, je každá výše zmíněná datová struktura
realizována (implementována) hned několikrát, přičemž u každé implementace jsou
některé operace optimální a jiné nikoli. Liší se i paměťová náročnost:</p>

<table>
<tr><th>Rozhraní</th><th>Implementace</th></tr>
<tr><td>List</td><td>ArrayList SinglyLinkedList DoublyLinkedList</td></tr>
<tr><td>Set</td><td>HashSet TreeSet LinkedHashSet</td></tr>
<tr><td>Stack</td><td>LinkedListStack ArrayStack</td></tr>
<tr><td>Tree</td><td>RedBlackTree AVLTree BTree BinaryHeap</td></tr>
<tr><td>Map</td><td>HashMap TreeMap LinkedHashMap HashBidiMap TreeBidiMap</td></tr>
</table>



<p><a name="k02"></a></p>
<h2 id="k02">2. Čtyři varianty stromů v&nbsp;knihovně Go18DS</h2>

<p></p>

<table>
<tr><th>#</th><th>Jméno struktury</th></tr>
<tr><td>1</td><td>BTree</td></tr>
<tr><td>2</td><td>BinaryHeap</td></tr>
<tr><td>3</td><td>RedBlackTree</td></tr>
<tr><td>4</td><td>AVLTree</td></tr>
</table>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Časová složitost operací se seznamy</h2>

<p></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Benchmark &ndash; operace se seznamy</h2>

<pre>
package main
&nbsp;
import (
        "testing"
&nbsp;
        "github.com/daichi-m/go18ds/lists"
        "github.com/daichi-m/go18ds/lists/arraylist"
        "github.com/daichi-m/go18ds/lists/doublylinkedlist"
        "github.com/daichi-m/go18ds/lists/singlylinkedlist"
)
&nbsp;
func BenchmarkArrayListInsert0Operation(b *testing.B) {
        l := arraylist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Insert(0, i)
        }
}
&nbsp;
func BenchmarkSinglyLinkedListInsert0Operation(b *testing.B) {
        l := singlylinkedlist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Insert(0, i)
        }
}
&nbsp;
func BenchmarkDoublyLinkedListInsert0Operation(b *testing.B) {
        l := doublylinkedlist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Insert(0, i)
        }
}
&nbsp;
func BenchmarkArrayListInsertMiddleOperation(b *testing.B) {
        l := arraylist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Insert(l.Size()/2, i)
        }
}
&nbsp;
func BenchmarkSinglyLinkedListInsertMiddleOperation(b *testing.B) {
        l := singlylinkedlist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Insert(l.Size()/2, i)
        }
}
&nbsp;
func BenchmarkDoublyLinkedListInsertMiddleOperation(b *testing.B) {
        l := doublylinkedlist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Insert(l.Size()/2, i)
        }
}
&nbsp;
func BenchmarkArrayListAppendOperation(b *testing.B) {
        l := arraylist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Add(i)
        }
}
&nbsp;
func BenchmarkSinglyLinkedListAppendOperation(b *testing.B) {
        l := singlylinkedlist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Add(i)
        }
}
&nbsp;
func BenchmarkDoublyLinkedListAppendOperation(b *testing.B) {
        l := doublylinkedlist.New[int]()
        for i := 0; i &lt; b.N; i++ {
                l.Add(i)
        }
}
&nbsp;
func fillInList(l lists.List[int], n int) {
        for i := 0; i &lt; n; i++ {
                l.Add(i)
        }
}
&nbsp;
func BenchmarkArrayListRemoveFirstOperation(b *testing.B) {
        l := arraylist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                l.Remove(0)
        }
}
&nbsp;
func BenchmarkSinglyLinkedListRemoveFirstOperation(b *testing.B) {
        l := singlylinkedlist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                l.Remove(0)
        }
}
&nbsp;
func BenchmarkDoublyLinkedListRemoveFirstOperation(b *testing.B) {
        l := doublylinkedlist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                l.Remove(0)
        }
}
&nbsp;
func BenchmarkArrayListRemoveLastOperation(b *testing.B) {
        l := arraylist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                l.Remove(l.Size() - 1)
        }
}
&nbsp;
func BenchmarkSinglyLinkedListRemoveLastOperation(b *testing.B) {
        l := singlylinkedlist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                l.Remove(l.Size() - 1)
        }
}
&nbsp;
func BenchmarkDoublyLinkedListRemoveLastOperation(b *testing.B) {
        l := doublylinkedlist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                l.Remove(l.Size() - 1)
        }
}
&nbsp;
func BenchmarkArrayListGetOperation(b *testing.B) {
        l := arraylist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                _, exist := l.Get(i)
                if !exist {
                        b.Fail()
                }
        }
}
&nbsp;
func BenchmarkSinglyLinkedListGetOperation(b *testing.B) {
        l := singlylinkedlist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                _, exist := l.Get(i)
                if !exist {
                        b.Fail()
                }
        }
}
&nbsp;
func BenchmarkDoublyLinkedListGetOperation(b *testing.B) {
        l := doublylinkedlist.New[int]()
        fillInList(l, b.N)
&nbsp;
        for i := 0; i &lt; b.N; i++ {
                _, exist := l.Get(i)
                if !exist {
                        b.Fail()
                }
        }
}
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Výsledky benchmarku</h2>

<p></p>

<p></p>

<pre>
$ <strong>go test -bench=.  -benchtime=1x</strong>
&nbsp;
goos: linux
goarch: amd64
pkg: x
cpu: Intel(R) Core(TM) i7-8665U CPU @ 1.90GHz
BenchmarkArrayListInsert0Operation-8                           1               972.0 ns/op
BenchmarkSinglyLinkedListInsert0Operation-8                    1               666.0 ns/op
BenchmarkDoublyLinkedListInsert0Operation-8                    1               522.0 ns/op
BenchmarkArrayListInsertMiddleOperation-8                      1               664.0 ns/op
BenchmarkSinglyLinkedListInsertMiddleOperation-8               1               485.0 ns/op
BenchmarkDoublyLinkedListInsertMiddleOperation-8               1               458.0 ns/op
BenchmarkArrayListAppendOperation-8                            1               680.0 ns/op
BenchmarkSinglyLinkedListAppendOperation-8                     1               500.0 ns/op
BenchmarkDoublyLinkedListAppendOperation-8                     1               427.0 ns/op
BenchmarkArrayListRemoveFirstOperation-8                       1               772.0 ns/op
BenchmarkSinglyLinkedListRemoveFirstOperation-8                1               887.0 ns/op
BenchmarkDoublyLinkedListRemoveFirstOperation-8                1              1121 ns/op
BenchmarkArrayListRemoveLastOperation-8                        1               820.0 ns/op
BenchmarkSinglyLinkedListRemoveLastOperation-8                 1               846.0 ns/op
BenchmarkDoublyLinkedListRemoveLastOperation-8                 1              1011 ns/op
BenchmarkArrayListGetOperation-8                               1              1170 ns/op
BenchmarkSinglyLinkedListGetOperation-8                        1               911.0 ns/op
BenchmarkDoublyLinkedListGetOperation-8                        1               925.0 ns/op
</pre>

<pre>
$ <strong>go test -bench=.  -benchtime=1000x</strong>
&nbsp;
goos: linux
goarch: amd64
pkg: x
cpu: Intel(R) Core(TM) i7-8665U CPU @ 1.90GHz
BenchmarkArrayListInsert0Operation-8                        1000                50.74 ns/op
BenchmarkSinglyLinkedListInsert0Operation-8                 1000                47.76 ns/op
BenchmarkDoublyLinkedListInsert0Operation-8                 1000                49.05 ns/op
BenchmarkArrayListInsertMiddleOperation-8                   1000                38.22 ns/op
BenchmarkSinglyLinkedListInsertMiddleOperation-8            1000               301.3 ns/op
BenchmarkDoublyLinkedListInsertMiddleOperation-8            1000               314.8 ns/op
BenchmarkArrayListAppendOperation-8                         1000                15.46 ns/op
BenchmarkSinglyLinkedListAppendOperation-8                  1000                31.87 ns/op
BenchmarkDoublyLinkedListAppendOperation-8                  1000                28.25 ns/op
BenchmarkArrayListRemoveFirstOperation-8                    1000                66.13 ns/op
BenchmarkSinglyLinkedListRemoveFirstOperation-8             1000                45.42 ns/op
BenchmarkDoublyLinkedListRemoveFirstOperation-8             1000                50.19 ns/op
BenchmarkArrayListRemoveLastOperation-8                     1000                35.48 ns/op
BenchmarkSinglyLinkedListRemoveLastOperation-8              1000               568.3 ns/op
BenchmarkDoublyLinkedListRemoveLastOperation-8              1000                39.47 ns/op
BenchmarkArrayListGetOperation-8                            1000                21.56 ns/op
BenchmarkSinglyLinkedListGetOperation-8                     1000               578.4 ns/op
BenchmarkDoublyLinkedListGetOperation-8                     1000               278.6 ns/op
</pre>

<pre>
$ <strong>go test -bench=.  -benchtime=10000x</strong>
&nbsp;
goos: linux
goarch: amd64
pkg: x
cpu: Intel(R) Core(TM) i7-8665U CPU @ 1.90GHz
BenchmarkArrayListInsert0Operation-8                       10000               574.8 ns/op
BenchmarkSinglyLinkedListInsert0Operation-8                10000                27.98 ns/op
BenchmarkDoublyLinkedListInsert0Operation-8                10000                30.98 ns/op
BenchmarkArrayListInsertMiddleOperation-8                  10000               193.3 ns/op
BenchmarkSinglyLinkedListInsertMiddleOperation-8           10000              3444 ns/op
BenchmarkDoublyLinkedListInsertMiddleOperation-8           10000              4593 ns/op
BenchmarkArrayListAppendOperation-8                        10000                10.63 ns/op
BenchmarkSinglyLinkedListAppendOperation-8                 10000                21.70 ns/op
BenchmarkDoublyLinkedListAppendOperation-8                 10000                30.95 ns/op
BenchmarkArrayListRemoveFirstOperation-8                   10000               541.4 ns/op
BenchmarkSinglyLinkedListRemoveFirstOperation-8            10000                39.63 ns/op
BenchmarkDoublyLinkedListRemoveFirstOperation-8            10000                41.80 ns/op
BenchmarkArrayListRemoveLastOperation-8                    10000                28.46 ns/op
BenchmarkSinglyLinkedListRemoveLastOperation-8             10000              5606 ns/op
BenchmarkDoublyLinkedListRemoveLastOperation-8             10000                45.79 ns/op
BenchmarkArrayListGetOperation-8                           10000                24.72 ns/op
BenchmarkSinglyLinkedListGetOperation-8                    10000              4855 ns/op
BenchmarkDoublyLinkedListGetOperation-8                    10000              2758 ns/op
</pre>

<pre>
$ <strong>go test -bench=.  -benchtime=100000x</strong>
&nbsp;
goos: linux
goarch: amd64
pkg: x
cpu: Intel(R) Core(TM) i7-8665U CPU @ 1.90GHz
BenchmarkArrayListInsert0Operation-8                      100000              8034 ns/op
BenchmarkSinglyLinkedListInsert0Operation-8               100000                25.11 ns/op
BenchmarkDoublyLinkedListInsert0Operation-8               100000                27.59 ns/op
BenchmarkArrayListInsertMiddleOperation-8                 100000              3475 ns/op
BenchmarkSinglyLinkedListInsertMiddleOperation-8          100000             38085 ns/op
BenchmarkDoublyLinkedListInsertMiddleOperation-8          100000             51326 ns/op
BenchmarkArrayListAppendOperation-8                       100000                 7.919 ns/op
BenchmarkSinglyLinkedListAppendOperation-8                100000                31.44 ns/op
BenchmarkDoublyLinkedListAppendOperation-8                100000                26.86 ns/op
BenchmarkArrayListRemoveFirstOperation-8                  100000              8230 ns/op
BenchmarkSinglyLinkedListRemoveFirstOperation-8           100000                39.10 ns/op
BenchmarkDoublyLinkedListRemoveFirstOperation-8           100000                44.39 ns/op
BenchmarkArrayListRemoveLastOperation-8                   100000                25.78 ns/op
BenchmarkSinglyLinkedListRemoveLastOperation-8            100000             58259 ns/op
BenchmarkDoublyLinkedListRemoveLastOperation-8            100000                41.96 ns/op
BenchmarkArrayListGetOperation-8                          100000                21.33 ns/op
BenchmarkSinglyLinkedListGetOperation-8                   100000             52119 ns/op
BenchmarkDoublyLinkedListGetOperation-8                   100000             32143 ns/op
</pre>

<pre>
$ <strong>go test -bench=.  -benchtime=200000x</strong>
&nbsp;
goos: linux
goarch: amd64
pkg: x
cpu: Intel(R) Core(TM) i7-8665U CPU @ 1.90GHz
BenchmarkArrayListInsert0Operation-8                      200000             46394 ns/op
BenchmarkSinglyLinkedListInsert0Operation-8               200000                31.87 ns/op
BenchmarkDoublyLinkedListInsert0Operation-8               200000                42.38 ns/op
BenchmarkArrayListInsertMiddleOperation-8                 200000              9252 ns/op
BenchmarkSinglyLinkedListInsertMiddleOperation-8          200000             77002 ns/op
BenchmarkDoublyLinkedListInsertMiddleOperation-8          200000            105458 ns/op
BenchmarkArrayListAppendOperation-8                       200000                 8.773 ns/op
BenchmarkSinglyLinkedListAppendOperation-8                200000                26.50 ns/op
BenchmarkDoublyLinkedListAppendOperation-8                200000                35.79 ns/op
BenchmarkArrayListRemoveFirstOperation-8                  200000             45917 ns/op
BenchmarkSinglyLinkedListRemoveFirstOperation-8           200000               139.4 ns/op
BenchmarkDoublyLinkedListRemoveFirstOperation-8           200000               138.5 ns/op
BenchmarkArrayListRemoveLastOperation-8                   200000                53.20 ns/op
BenchmarkSinglyLinkedListRemoveLastOperation-8            200000            122137 ns/op
BenchmarkDoublyLinkedListRemoveLastOperation-8            200000                60.09 ns/op
BenchmarkArrayListGetOperation-8                          200000                23.92 ns/op
BenchmarkSinglyLinkedListGetOperation-8                   200000            108607 ns/op
BenchmarkDoublyLinkedListGetOperation-8                   200000             68191 ns/op
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly
uloženy do nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý,
dnes má přibližně stovku kilobajtů), můžete namísto toho použít odkazy
na jednotlivé demonstrační příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>arraylist01.go</td><td>konstrukce seznamu s přidáním prvků pro seznam typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist01.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist01.go</a></td></tr>
<tr><td> 2</td><td>arraylist02.go</td><td>přidání nových prvků do seznamu metodou Add pro seznam typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist02.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist02.go</a></td></tr>
<tr><td> 3</td><td>arraylist03.go</td><td>pokus o přidání prvků odlišného datového typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist03.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist03.go</a></td></tr>
<tr><td> 4</td><td>arraylist04.go</td><td>pokus o přidání prvků odlišného datového typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist04.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist04.go</a></td></tr>
<tr><td> 5</td><td>arraylist05.go</td><td>vymazání všech prvků ze seznamu typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist05.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist05.go</a></td></tr>
<tr><td> 6</td><td>arraylist06.go</td><td>test na existenci prvků v seznamu typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist06.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist06.go</a></td></tr>
<tr><td> 7</td><td>arraylist07.go</td><td>přečtení prvků se zadaným indexem ze seznamu typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist07.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist07.go</a></td></tr>
<tr><td> 8</td><td>arraylist08.go</td><td>odstranění prvků se zadaným indexem ze seznamu typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist08.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist08.go</a></td></tr>
<tr><td> 9</td><td>arraylist09.go</td><td>operace Swap - prohození dvou prvků v seznamu typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist09.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist09.go</a></td></tr>
<tr><td>10</td><td>arraylist10.go</td><td>operace Sort - setřídění prvků v seznamu typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist10.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist10.go</a></td></tr>
<tr><td>11</td><td>arraylist11.go</td><td>implementace iterátoru nad seznamem typu arraylist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraylist11.go">https://github.com/tisnik/go-root/blob/master/article_92/arraylist11.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>singlylinkedlist01.go</td><td>konstrukce seznamu s přidáním prvků pro seznam typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist01.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist01.go</a></td></tr>
<tr><td>13</td><td>singlylinkedlist02.go</td><td>přidání nových prvků do seznamu metodou Add pro seznam typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist02.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist02.go</a></td></tr>
<tr><td>14</td><td>singlylinkedlist03.go</td><td>pokus o přidání prvků odlišného datového typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist03.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist03.go</a></td></tr>
<tr><td>15</td><td>singlylinkedlist04.go</td><td>pokus o přidání prvků odlišného datového typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist04.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist04.go</a></td></tr>
<tr><td>16</td><td>singlylinkedlist05.go</td><td>vymazání všech prvků ze seznamu typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist05.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist05.go</a></td></tr>
<tr><td>17</td><td>singlylinkedlist06.go</td><td>test na existenci prvků v seznamu typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist06.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist06.go</a></td></tr>
<tr><td>18</td><td>singlylinkedlist07.go</td><td>přečtení prvků se zadaným indexem ze seznamu typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist07.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist07.go</a></td></tr>
<tr><td>19</td><td>singlylinkedlist08.go</td><td>odstranění prvků se zadaným indexem ze seznamu typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist08.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist08.go</a></td></tr>
<tr><td>20</td><td>singlylinkedlist09.go</td><td>operace Swap - prohození dvou prvků v seznamu typu singlylinkedlist </td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist09.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist09.go</a></td></tr>
<tr><td>21</td><td>singlylinkedlist10.go</td><td>operace Sort - setřídění prvků v seznamu typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist10.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist10.go</a></td></tr>
<tr><td>22</td><td>singlylinkedlist11.go</td><td>implementace iterátoru nad seznamem typu singlylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist11.go">https://github.com/tisnik/go-root/blob/master/article_92/singlylinkedlist11.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>23</td><td>doublylinkedlist01.go</td><td>konstrukce seznamu s přidáním prvků pro seznam typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist01.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist01.go</a></td></tr>
<tr><td>24</td><td>doublylinkedlist02.go</td><td>přidání nových prvků do seznamu metodou Add pro seznam typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist02.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist02.go</a></td></tr>
<tr><td>25</td><td>doublylinkedlist03.go</td><td>pokus o přidání prvků odlišného datového typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist03.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist03.go</a></td></tr>
<tr><td>26</td><td>doublylinkedlist04.go</td><td>pokus o přidání prvků odlišného datového typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist04.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist04.go</a></td></tr>
<tr><td>27</td><td>doublylinkedlist05.go</td><td>vymazání všech prvků ze seznamu typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist05.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist05.go</a></td></tr>
<tr><td>28</td><td>doublylinkedlist06.go</td><td>test na existenci prvků v seznamu typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist06.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist06.go</a></td></tr>
<tr><td>29</td><td>doublylinkedlist07.go</td><td>přečtení prvků se zadaným indexem ze seznamu typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist07.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist07.go</a></td></tr>
<tr><td>30</td><td>doublylinkedlist08.go</td><td>odstranění prvků se zadaným indexem ze seznamu typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist08.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist08.go</a></td></tr>
<tr><td>31</td><td>doublylinkedlist09.go</td><td>operace Swap - prohození dvou prvků v seznamu typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist09.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist09.go</a></td></tr>
<tr><td>32</td><td>doublylinkedlist10.go</td><td>operace Sort - setřídění prvků v seznamu typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist10.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist10.go</a></td></tr>
<tr><td>33</td><td>doublylinkedlist11.go</td><td>implementace iterátoru nad seznamem typu doublylinkedlist</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist11.go">https://github.com/tisnik/go-root/blob/master/article_92/doublylinkedlist11.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>34</td><td>arraystack01.go</td><td>operace <strong>Push</strong> nad zásobníkem typu arraystack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraystack01.go">https://github.com/tisnik/go-root/blob/master/article_92/arraystack01.go</a></td></tr>
<tr><td>35</td><td>arraystack02.go</td><td>operace <strong>Pop</strong> nad zásobníkem typu arraystack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraystack02.go">https://github.com/tisnik/go-root/blob/master/article_92/arraystack02.go</a></td></tr>
<tr><td>36</td><td>arraystack03.go</td><td>operace <strong>Peek</strong> nad zásobníkem typu arraystack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraystack03.go">https://github.com/tisnik/go-root/blob/master/article_92/arraystack03.go</a></td></tr>
<tr><td>37</td><td>arraystack04.go</td><td>metody <strong>Size</strong> a <strong>Empty</strong> nad zásobníkem typu arraystack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/arraystack04.go">https://github.com/tisnik/go-root/blob/master/article_92/arraystack04.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>38</td><td>linkedliststack01.go</td><td>operace <strong>Push</strong> nad zásobníkem typu linkedliststack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack01.go">https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack01.go</a></td></tr>
<tr><td>39</td><td>linkedliststack02.go</td><td>operace <strong>Pop</strong> nad zásobníkem typu linkedliststack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack02.go">https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack02.go</a></td></tr>
<tr><td>40</td><td>linkedliststack03.go</td><td>operace <strong>Peek</strong> nad zásobníkem typu linkedliststack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack03.go">https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack03.go</a></td></tr>
<tr><td>41</td><td>linkedliststack04.go</td><td>metody <strong>Size</strong> a <strong>Empty</strong> nad zásobníkem typu linkedliststack</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack04.go">https://github.com/tisnik/go-root/blob/master/article_92/linkedliststack04.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>42</td><td>stack_rpn.go</td><td>vyhodnocení výrazu zapsaného v&nbsp;RPN</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/stack_rpn.go">https://github.com/tisnik/go-root/blob/master/article_92/stack_rpn.go</a></td></tr>
<tr><td>43</td><td>stack_rpn_B.go</td><td>vyhodnocení výrazu zapsaného v&nbsp;RPN, použití odlišné implementace zásobníku</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/stack_rpn_B.go">https://github.com/tisnik/go-root/blob/master/article_92/stack_rpn_B.go</a></td></tr>
<tr><td>44</td><td>rpn.go</td><td>vyhodnocení aritmetického výrazu</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/rpn.go">https://github.com/tisnik/go-root/blob/master/article_92/rpn.go</a></td></tr>
<tr><td>45</td><td>erasthotenes.go</td><td>implementace Eratosthenova síta</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/erasthotenes.go">https://github.com/tisnik/go-root/blob/master/article_92/erasthotenes.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>47</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>48</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>49</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>50</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>51</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>52</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
<tr><td>53</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_92/">https://github.com/tisnik/go-root/blob/master/article_92/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Genfuncs &ndash; implements various functions utilizing Go's Generics to help avoid writing boilerplate code<br />
<a href="https://github.com/nwillc/genfuncs">https://github.com/nwillc/genfuncs</a>
</li>

<li>Go18DS (Go 1.18+ Data Structures)<br />
<a href="https://github.com/daichi-m/go18ds">https://github.com/daichi-m/go18ds</a>
</li>

<li>TreeMap v2<br />
<a href="https://github.com/igrmk/treemap">https://github.com/igrmk/treemap</a>
</li>

<li>Fp-go is a collection of Functional Programming helpers powered by Golang 1.18+ generics<br />
<a href="https://github.com/repeale/fp-go">https://github.com/repeale/fp-go</a>
</li>

<li>The Go Programming Language Specification<br />
<a href="https://go.dev/ref/spec">https://go.dev/ref/spec</a>
</li>

<li>Generics in Go<br />
<a href="https://bitfieldconsulting.com/golang/generics">https://bitfieldconsulting.com/golang/generics</a>
</li>

<li>Tutorial: Getting started with generics<br />
<a href="https://go.dev/doc/tutorial/generics">https://go.dev/doc/tutorial/generics</a>
</li>

<li>Type parameters in Go<br />
<a href="https://bitfieldconsulting.com/golang/type-parameters">https://bitfieldconsulting.com/golang/type-parameters</a>
</li>

<li>Go Data Structures: Binary Search Tree<br />
<a href="https://flaviocopes.com/golang-data-structure-binary-search-tree/">https://flaviocopes.com/golang-data-structure-binary-search-tree/</a>
</li>

<li>Gobs of data<br />
<a href="https://blog.golang.org/gobs-of-data">https://blog.golang.org/gobs-of-data</a>
</li>

<li>How the Go runtime implements maps efficiently (without generics)<br />
<a href="https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics">https://dave.cheney.net/2018/05/29/how-the-go-runtime-implements-maps-efficiently-without-generics</a>
</li>

<li>Go 1.18 Release Notes<br />
<a href="https://golang.org/doc/go1.18">https://golang.org/doc/go1.18</a>
</li>

<li>Go 1.17 Release Notes<br />
<a href="https://golang.org/doc/go1.17">https://golang.org/doc/go1.17</a>
</li>

<li>Go 1.16 Release Notes<br />
<a href="https://golang.org/doc/go1.16">https://golang.org/doc/go1.16</a>
</li>

<li>Go 1.15 Release Notes<br />
<a href="https://golang.org/doc/go1.15">https://golang.org/doc/go1.15</a>
</li>

<li>Go 1.14 Release Notes<br />
<a href="https://golang.org/doc/go1.14">https://golang.org/doc/go1.14</a>
</li>

<li>Go 1.13 Release Notes<br />
<a href="https://golang.org/doc/go1.13">https://golang.org/doc/go1.13</a>
</li>

<li>Go 1.12 Release Notes<br />
<a href="https://golang.org/doc/go1.12">https://golang.org/doc/go1.12</a>
</li>

<li>Go 1.11 Release Notes<br />
<a href="https://golang.org/doc/go1.11">https://golang.org/doc/go1.11</a>
</li>

<li>Go 1.11 Release Notes<br />
<a href="https://golang.org/doc/go1.11">https://golang.org/doc/go1.11</a>
</li>

<li>Go 1.10 Release Notes<br />
<a href="https://golang.org/doc/go1.10">https://golang.org/doc/go1.10</a>
</li>

<li>Go 1.9 Release Notes<br />
<a href="https://golang.org/doc/go1.9">https://golang.org/doc/go1.9</a>
</li>

<li>Go 1.8 Release Notes<br />
<a href="https://golang.org/doc/go1.8">https://golang.org/doc/go1.8</a>
</li>

<li>A Proposal for Adding Generics to Go<br />
<a href="https://go.dev/blog/generics-proposal">https://go.dev/blog/generics-proposal</a>
</li>

<li>Proposal: Go should have generics<br />
<a href="https://github.com/golang/proposal/blob/master/design/15292-generics.md">https://github.com/golang/proposal/blob/master/design/15292-generics.md</a>
</li>

<li>Know Go: Generics (Kniha)<br />
<a href="https://bitfieldconsulting.com/books/generics">https://bitfieldconsulting.com/books/generics</a>
</li>

<li>Go 1.18 Generics based slice package<br />
<a href="https://golangexample.com/go-1-18-generics-based-slice-package/">https://golangexample.com/go-1-18-generics-based-slice-package/</a>
</li>

<li>The missing slice package<br />
<a href="https://github.com/ssoroka/slice">https://github.com/ssoroka/slice</a>
</li>

<li>Dlouho očekávaná novinka v Go 1.18 – generické datové typy<br />
<a href="https://www.root.cz/clanky/dlouho-ocekavana-novinka-v-go-1-18-genericke-datove-typy/">https://www.root.cz/clanky/dlouho-ocekavana-novinka-v-go-1-18-genericke-datove-typy/</a>
</li>

<li>Dlouho očekávaná novinka v Go 1.18 – generické datové typy (dokončení)<br />
<a href="https://www.root.cz/clanky/dlouho-ocekavana-novinka-v-go-1-8-genericke-datove-typy-dokonceni/">https://www.root.cz/clanky/dlouho-ocekavana-novinka-v-go-1-8-genericke-datove-typy-dokonceni/</a>
</li>

<li>Generické datové typy v jazyce Go?<br />
<a href="https://www.root.cz/clanky/genericke-datove-typy-v-jazyce-go/">https://www.root.cz/clanky/genericke-datove-typy-v-jazyce-go/</a>
</li>

<li>GoDS (Go Data Structures)<br />
<a href="https://github.com/emirpasic/gods">https://github.com/emirpasic/gods</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

