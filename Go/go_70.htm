<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        MinWidth         = 0
        TabWidth         = 0
        Padding          = 1
        PaddingCharacter = ' '
        Flags            = 0
)

func main() {
        w := tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, Padding, PaddingCharacter, Flags)
        fmt.Fprintln(w, "1\t2\t3")
        fmt.Fprintln(w, "4\t5\t6")
        fmt.Fprintln(w, "7\t8\t9")
        w.Flush()

        fmt.Println()

        w = tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, Padding, PaddingCharacter, Flags)
        fmt.Fprintln(w, "foo\tbar\tbaz")
        fmt.Fprintln(w, "foo\tbar\tbaz")
        fmt.Fprintln(w, "foo\tbar\tbaz")
        w.Flush()
}
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        MinWidth         = 0
        TabWidth         = 0
        Padding          = 1
        PaddingCharacter = ' '
        Flags            = 0
)

func main() {
        w := tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, Padding, PaddingCharacter, Flags)
        fmt.Fprintln(w, "1\t1\t1")
        fmt.Fprintln(w, "22\t22\t22")
        fmt.Fprintln(w, "333\t333\t333")
        fmt.Fprintln(w, "4444\t4444\t4444")
        w.Flush()

        fmt.Println()

        w = tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, Padding, PaddingCharacter, Flags)
        fmt.Fprintln(w, "f\tb\tb")
        fmt.Fprintln(w, "foo\tbar\tbaz")
        fmt.Fprintln(w, "foobar\tbarbaz\tbazfoo")
        w.Flush()
}
</pre>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        TabWidth         = 0
        Padding          = 1
        PaddingCharacter = ' '
        Flags            = 0
)

func main() {
        for minWidth := 0; minWidth < 10; minWidth++ {
                fmt.Printf("Min width = %d\n", minWidth)
                w := tabwriter.NewWriter(os.Stdout, minWidth, TabWidth, Padding, PaddingCharacter, Flags)
                fmt.Fprintln(w, "1\t1\t1")
                fmt.Fprintln(w, "22\t22\t22")
                fmt.Fprintln(w, "333\t333\t333")
                fmt.Fprintln(w, "4444\t4444\t4444")
                w.Flush()
                fmt.Println()
        }
}
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        MinWidth         = 0
        TabWidth         = 0
        PaddingCharacter = ' '
        Flags            = 0
)

func main() {
        for padding := 0; padding < 10; padding++ {
                fmt.Printf("padding = %d\n", padding)
                w := tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, padding, PaddingCharacter, Flags)
                fmt.Fprintln(w, "1\t1\t1")
                fmt.Fprintln(w, "22\t22\t22")
                fmt.Fprintln(w, "333\t333\t333")
                fmt.Fprintln(w, "4444\t4444\t4444")
                w.Flush()
                fmt.Println()
        }
}
</pre>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        MinWidth         = 0
        TabWidth         = 0
        PaddingCharacter = '.'
        Flags            = 0
)

func main() {
        for padding := 0; padding < 10; padding++ {
                fmt.Printf("padding = %d\n", padding)
                w := tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, padding, PaddingCharacter, Flags)
                fmt.Fprintln(w, "1\t1\t1")
                fmt.Fprintln(w, "22\t22\t22")
                fmt.Fprintln(w, "333\t333\t333")
                fmt.Fprintln(w, "4444\t4444\t4444")
                w.Flush()
                fmt.Println()
        }
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        TabWidth         = 0
        Padding          = 1
        PaddingCharacter = ' '
        Flags            = tabwriter.AlignRight
)

func main() {
        for minWidth := 0; minWidth < 10; minWidth++ {
                fmt.Printf("Min width = %d\n", minWidth)
                w := tabwriter.NewWriter(os.Stdout, minWidth, TabWidth, Padding, PaddingCharacter, Flags)
                fmt.Fprintln(w, "1\t1\t1")
                fmt.Fprintln(w, "22\t22\t22")
                fmt.Fprintln(w, "333\t333\t333")
                fmt.Fprintln(w, "4444\t4444\t4444")
                w.Flush()
                fmt.Println()
        }
}
</pre>

<pre>
package main

import (
        "fmt"
        "os"
        "text/tabwriter"
)

const (
        TabWidth         = 0
        Padding          = 1
        PaddingCharacter = ' '
        Flags            = tabwriter.AlignRight | tabwriter.Debug
)

func main() {
        for minWidth := 0; minWidth < 10; minWidth++ {
                fmt.Printf("Min width = %d\n", minWidth)
                w := tabwriter.NewWriter(os.Stdout, minWidth, TabWidth, Padding, PaddingCharacter, Flags)
                fmt.Fprintln(w, "1\t1\t1")
                fmt.Fprintln(w, "22\t22\t22")
                fmt.Fprintln(w, "333\t333\t333")
                fmt.Fprintln(w, "4444\t4444\t4444")
                w.Flush()
                fmt.Println()
        }
}
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
package main

import (
	"fmt"
	"os"
	"text/tabwriter"
)

const (
	TabWidth         = 0
	Padding          = 1
	PaddingCharacter = ' '
	Flags            = tabwriter.AlignRight
)

func main() {
	for minWidth := 0; minWidth < 10; minWidth++ {
		fmt.Printf("Min width = %d\n", minWidth)
		w := tabwriter.NewWriter(os.Stdout, minWidth, TabWidth, Padding, PaddingCharacter, Flags)
		fmt.Fprintln(w, "1\t1\t1\t")
		fmt.Fprintln(w, "22\t22\t22\t")
		fmt.Fprintln(w, "333\t333\t333\t")
		fmt.Fprintln(w, "4444\t4444\t4444\t")
		w.Flush()
		fmt.Println()
	}
}
</pre>

<pre>
package main

import (
	"fmt"
	"os"
	"text/tabwriter"
)

const (
	TabWidth         = 0
	Padding          = 1
	PaddingCharacter = ' '
	Flags            = tabwriter.AlignRight | tabwriter.Debug
)

func main() {
	for minWidth := 0; minWidth < 10; minWidth++ {
		fmt.Printf("Min width = %d\n", minWidth)
		w := tabwriter.NewWriter(os.Stdout, minWidth, TabWidth, Padding, PaddingCharacter, Flags)
		fmt.Fprintln(w, "1\t1\t1\t")
		fmt.Fprintln(w, "22\t22\t22\t")
		fmt.Fprintln(w, "333\t333\t333\t")
		fmt.Fprintln(w, "4444\t4444\t4444\t")
		w.Flush()
		fmt.Println()
	}
}
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
package main

import (
	"fmt"
	"os"
	"text/tabwriter"
)

const (
	MinWidth         = 5
	TabWidth         = 0
	Padding          = 1
	PaddingCharacter = ' '
	Flags            = tabwriter.AlignRight | tabwriter.Debug
)

// Factorial computes factorial for given n that might be positive integer
func Factorial(n int64) int64 {
	switch {
	case n < 0:
		return 1
	case n == 0:
		return 1
	default:
		return n * Factorial(n-1)
	}
}

func main() {
	w := tabwriter.NewWriter(os.Stdout, MinWidth, TabWidth, Padding, PaddingCharacter, Flags)
	fmt.Fprintln(w, "n\tn!\t")

	for n := 0; n <= 20; n++ {
		fmt.Fprintf(w, "%d\t%d\t\n", n, Factorial(int64(n)))
	}

	w.Flush()
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
</pre>


<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>
</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

