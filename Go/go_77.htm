<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "flag"
        "fmt"
&nbsp;
        "github.com/logrusorgru/aurora"
)
&nbsp;
var colorizer aurora.Aurora
&nbsp;
func <strong>init</strong>() {
        var colors = flag.Bool("colors", false, "enable or disable colors")
        flag.Parse()
&nbsp;
        colorizer = aurora.NewAurora(*colors)
}
&nbsp;
func <strong>main</strong>() {
        fmt.Println(colorizer.Red("Test"))
        fmt.Println(colorizer.Green("Test"))
        fmt.Println(colorizer.Blue("Test"))
        fmt.Println(colorizer.Cyan("Test"))
        fmt.Println(colorizer.Magenta("Test"))
        fmt.Println(colorizer.Yellow("Test"))
&nbsp;
        fmt.Println()
&nbsp;
        fmt.Println(colorizer.Bold(colorizer.Red("Test")))
        fmt.Println(colorizer.Bold(colorizer.Green("Test")))
        fmt.Println(colorizer.Bold(colorizer.Blue("Test")))
        fmt.Println(colorizer.Bold(colorizer.Cyan("Test")))
        fmt.Println(colorizer.Bold(colorizer.Magenta("Test")))
        fmt.Println(colorizer.Bold(colorizer.Yellow("Test")))
}
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        cfmt.Success("Success message")
        cfmt.Info("Info message")
        cfmt.Warning("Warning message")
        cfmt.Error("Error message")
}
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        cfmt.Success("Success message\n")
        cfmt.Info("Info message\n")
        cfmt.Warning("Warning message\n")
        cfmt.Error("Error message\n")
}
</pre>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        cfmt.Successln("Success message")
        cfmt.Infoln("Info message")
        cfmt.Warningln("Warning message")
        cfmt.Errorln("Error message")
}
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        fmt.Print("1st line: ")
        cfmt.Successln("Success message")
&nbsp;
        fmt.Print("2nd line: ")
        cfmt.Infoln("Info message")
&nbsp;
        fmt.Print("3rd line: ")
        cfmt.Warningln("Warning message")
&nbsp;
        fmt.Print("4th line: ")
        cfmt.Errorln("Error message")
&nbsp;
        fmt.Println()
        fmt.Println("That's all...")
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        var msg string
&nbsp;
        msg = cfmt.Ssuccess("Success message")
        fmt.Printf("1st line: %s\n", msg)
&nbsp;
        msg = cfmt.Sinfo("Info message")
        fmt.Printf("2nd line: %s\n", msg)
&nbsp;
        msg = cfmt.Swarning("Warning message")
        fmt.Printf("3rd line: %s\n", msg)
&nbsp;
        msg = cfmt.Serror("Error message")
        fmt.Printf("4th line: %s\n", msg)
&nbsp;
        fmt.Println()
        fmt.Println("That's all...")
}
</pre>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        var msg string
&nbsp;
        msg = cfmt.Ssuccessln("Success message")
        fmt.Printf("1st line: %s", msg)
&nbsp;
        msg = cfmt.Sinfoln("Info message")
        fmt.Printf("2nd line: %s", msg)
&nbsp;
        msg = cfmt.Swarningln("Warning message")
        fmt.Printf("3rd line: %s", msg)
&nbsp;
        msg = cfmt.Serrorln("Error message")
        fmt.Printf("4th line: %s", msg)
&nbsp;
        fmt.Println()
        fmt.Println("That's all...")
}
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        for i := 1; i &lt;= 10; i++ {
                switch {
                case i &lt; 5:
                        cfmt.Warningf("Value too low: %d\n", i)
                case i == 5:
                        cfmt.Successf("An ideal value: %d\n", i)
                case i == 10:
                        cfmt.Errorf("Too high!!! %d\n", i)
                case i &gt; 5:
                        cfmt.Infof("Bit higher then necessary: %d\n", i)
                default:
                        cfmt.Errorf("Can't happen %d\n", i)
                }
        }
&nbsp;
        fmt.Println()
        fmt.Println("That's all...")
}
</pre>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "encoding/hex"
        "fmt"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func printEncoded(s string) {
        bytes := []byte(s)
        fmt.Printf("Encoded:\n%s\n", hex.Dump(bytes))
}
&nbsp;
func <strong>main</strong>() {
        var msg string
&nbsp;
        msg = cfmt.Ssuccessln("Success message")
        fmt.Printf("1st line: %s", msg)
        printEncoded(msg)
&nbsp;
        msg = cfmt.Sinfoln("Info message")
        fmt.Printf("2nd line: %s", msg)
        printEncoded(msg)
&nbsp;
        msg = cfmt.Swarningln("Warning message")
        fmt.Printf("3rd line: %s", msg)
        printEncoded(msg)
&nbsp;
        msg = cfmt.Serrorln("Error message")
        fmt.Printf("4th line: %s", msg)
        printEncoded(msg)
&nbsp;
        fmt.Println()
        fmt.Println("That's all...")
}
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "log"
        "os"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        file, err := os.Create("./temp.txt")
        if err != nil {
                log.Fatal(err)
        }
&nbsp;
        defer file.Close()
&nbsp;
        cfmt.Fsuccessln(file, "Success message")
        cfmt.Finfoln(file, "Info message")
        cfmt.Fwarningln(file, "Warning message")
        cfmt.Ferrorln(file, "Error message")
}
</pre>

<p></p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
        "log"
        "os"
&nbsp;
        "github.com/mingrammer/cfmt"
)
&nbsp;
func <strong>main</strong>() {
        file, err := os.Create("./temp.txt")
        if err != nil {
                log.Fatal(err)
        }
&nbsp;
        defer file.Close()
&nbsp;
        for i := 1; i &lt;= 10; i++ {
                switch {
                case i &lt; 5:
                        cfmt.Fwarningf(file, "Value too low: %d\n", i)
                case i == 5:
                        cfmt.Fsuccessf(file, "An ideal value: %d\n", i)
                case i == 10:
                        cfmt.Ferrorf(file, "Too high!!! %d\n", i)
                case i &gt; 5:
                        cfmt.Finfof(file, "Bit higher then necessary: %d\n", i)
                default:
                        cfmt.Ferrorf(file, "Can't happen %d\n", i)
                }
        }
&nbsp;
        fmt.Println()
        fmt.Println("That's all...")
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<p></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
přibližně stovku kilobajtů), můžete namísto toho použít odkazy na jednotlivé
demonstrační příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01-basic-usage.go</td><td>základní způsob použití balíčku <strong>cfmt</strong></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/01-basic-usage.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/01-basic-usage.go</a></td></tr>
<tr><td> 2</td><td>02-explicit-endlines.go</td><td>explicitní tisk konců řádků</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/02-explicit-endlines.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/02-explicit-endlines.go</a></td></tr>
<tr><td> 3</td><td>03-implicit-endlines.go</td><td>implicitní tisk konců řádků</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/03-implicit-endlines.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/03-implicit-endlines.go</a></td></tr>
<tr><td> 4</td><td>04-mixing-with-fmt.go</td><td>použití obarveného řetězce se standardním balíčkem <strong>fmt</strong></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/04-mixing-with-fmt.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/04-mixing-with-fmt.go</a></td></tr>
<tr><td> 5</td><td>05-string-generation.go</td><td>obarvený výstup přesměrovaný do řetězce</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/05-string-generation.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/05-string-generation.go</a></td></tr>
<tr><td> 6</td><td>06-string-generation-newlines.go</td><td>obarvený výstup přesměrovaný do řetězce</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/06-string-generation-newlines.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/06-string-generation-newlines.go</a></td></tr>
<tr><td> 7</td><td>07-string-formatting.go</td><td>formátování s&nbsp;obarvením</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/07-string-formatting.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/07-string-formatting.go</a></td></tr>
<tr><td> 8</td><td>08-string-content.go</td><td>výpis obsahu obarveného řetězce</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/08-string-content.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/08-string-content.go</a></td></tr>
<tr><td> 9</td><td>09-output-to-file.go</td><td>obarvený výstup přesměrovaný do souboru</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/09-output-to-file.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/09-output-to-file.go</a></td></tr>
<tr><td>10</td><td>10-output-to-file.go</td><td>obarvený výstup přesměrovaný do souboru</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/10-output-to-file.go">https://github.com/tisnik/go-root/blob/master/article_77/cfmt-mindgrammer/10-output-to-file.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/">https://github.com/tisnik/go-root/blob/master/article_77/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/">https://github.com/tisnik/go-root/blob/master/article_77/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/">https://github.com/tisnik/go-root/blob/master/article_77/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/">https://github.com/tisnik/go-root/blob/master/article_77/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/">https://github.com/tisnik/go-root/blob/master/article_77/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_77/">https://github.com/tisnik/go-root/blob/master/article_77/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Tvorba aplikací a her s&nbsp;textovým uživatelským rozhraním s&nbsp;využitím knihovny Blessed<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-uzivatelskym-rozhranim-s-vyuzitim-knihovny-blessed/">https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-uzivatelskym-rozhranim-s-vyuzitim-knihovny-blessed/</a>
</li>

<li>Tvorba aplikací a her s&nbsp;textovým rozhraním s&nbsp;knihovnou Blessed (dokončení)<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-rozhranim-s-knihovnou-blessed-dokonceni/">https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-rozhranim-s-knihovnou-blessed-dokonceni/</a>
</li>

<li>ANSI Escape Code &ndash; Colors<br />
<a href="https://en.wikipedia.org/wiki/ANSI_escape_code#Colors">https://en.wikipedia.org/wiki/ANSI_escape_code#Colors</a>
</li>

<li>A curated list of awesome Go frameworks, libraries and software<br />
<a href="https://awesome-go.com/">https://awesome-go.com/</a>
</li>

<li>Aurora<br />
<a href="https://github.com/logrusorgru/aurora">https://github.com/logrusorgru/aurora</a>
</li>

<li>colourize<br />
<a href="https://github.com/TreyBastian/colourize">https://github.com/TreyBastian/colourize</a>
</li>

<li>go-colortext<br />
<a href="https://github.com/daviddengcn/go-colortext">https://github.com/daviddengcn/go-colortext</a>
</li>

<li>blessed na PyPi<br />
<a href="https://pypi.org/project/blessed/">https://pypi.org/project/blessed/</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/jquast/blessed">https://github.com/jquast/blessed</a>
</li>

<li>Blessed documentation!<br />
<a href="https://blessed.readthedocs.io/en/latest/">https://blessed.readthedocs.io/en/latest/</a>
</li>

<li>termbox-go na GitHubu<br />
<a href="https://github.com/nsf/termbox-go">https://github.com/nsf/termbox-go</a>
</li>

<li>termui na GitHubu<br />
<a href="https://github.com/gizak/termui">https://github.com/gizak/termui</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/chjj/blessed">https://github.com/chjj/blessed</a>
</li>

<li>blessed-contrib na GitHubu<br />
<a href="https://github.com/yaronn/blessed-contrib">https://github.com/yaronn/blessed-contrib</a>
</li>

<li>tui-rs na GitHubu<br />
<a href="https://github.com/fdehau/tui-rs">https://github.com/fdehau/tui-rs</a>
</li>

<li>asciigraph<br />
<a href="https://github.com/guptarohit/asciigraph">https://github.com/guptarohit/asciigraph</a>
</li>

<li>Standardní balíček text/tabwriter<br />
<a href="https://golang.org/pkg/text/tabwriter/">https://golang.org/pkg/text/tabwriter/</a>
</li>

<li>Elastic tabstops: A better way to indent and align code<br />
<a href="https://nickgravgaard.com/elastic-tabstops/">https://nickgravgaard.com/elastic-tabstops/</a>
</li>

<li>ASCII Table Writer<br />
<a href="https://github.com/olekukonko/tablewriter">https://github.com/olekukonko/tablewriter</a>
</li>

<li>TablePrinter<br />
<a href="https://github.com/lensesio/tableprinter">https://github.com/lensesio/tableprinter</a>
</li>

<li>go-pretty<br />
<a href="https://github.com/jedib0t/go-pretty">https://github.com/jedib0t/go-pretty</a>
</li>

<li>What are the drawbacks of elastic tabstops?<br />
<a href="https://softwareengineering.stackexchange.com/questions/137290/what-are-the-drawbacks-of-elastic-tabstops">https://softwareengineering.stackexchange.com/questions/137290/what-are-the-drawbacks-of-elastic-tabstops</a>
</li>

<li>Elastic tabstop editors and plugins<br />
<a href="https://stackoverflow.com/questions/28652/elastic-tabstop-editors-and-plugins">https://stackoverflow.com/questions/28652/elastic-tabstop-editors-and-plugins</a>
</li>

<li>Příkaz gofmt<br />
<a href="https://golang.org/cmd/gofmt/">https://golang.org/cmd/gofmt/</a>
</li>

<li>Spaces vs. Tabs: A 20-Year Debate Reignited by Google’s Golang<br />
<a href="https://thenewstack.io/spaces-vs-tabs-a-20-year-debate-and-now-this-what-the-hell-is-wrong-with-go/">https://thenewstack.io/spaces-vs-tabs-a-20-year-debate-and-now-this-what-the-hell-is-wrong-with-go/</a>
</li>

<li>zerolog<br />
<a href="https://github.com/rs/zerolog">https://github.com/rs/zerolog</a>
</li>

<li>Zero Allocation JSON Logger na Go.doc<br />
<a href="https://pkg.go.dev/github.com/rs/zerolog?utm_source=godoc">https://pkg.go.dev/github.com/rs/zerolog?utm_source=godoc</a>
</li>

<li>cfmt<br />
<a href="https://github.com/mingrammer/cfmt">https://github.com/mingrammer/cfmt</a>
</li>

<li>box-cli-maker<br />
<a href="https://github.com/Delta456/box-cli-maker">https://github.com/Delta456/box-cli-maker</a>
</li>

<li>Who uses zerolog<br />
<a href="https://github.com/rs/zerolog/wiki/Who-uses-zerolog">https://github.com/rs/zerolog/wiki/Who-uses-zerolog</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

