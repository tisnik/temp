<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<pre>
--------------------------------------------------------------------
{{range .}}Jméno {{printf "%-15s" .Name}} {{printf "%-15s" .Surname}} <strong>{{if gt .Popularity 0}}</strong> Popularita {{printf "%2d" .Popularity}} <strong>{{end}}</strong>
{{end}}
--------------------------------------------------------------------
</pre>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "os"
        "text/template"
)
&nbsp;
const (
        templateFilename = "template17.txt"
)
&nbsp;
<i>// datový typ, jehož prvky budou vypisovány v šabloně</i>
type <strong>Role</strong> struct {
        Name       string
        Surname    string
        Popularity int
}
&nbsp;
func <strong>main</strong>() {
        <i>// vytvoření nové šablony</i>
        tmpl := template.Must(template.ParseFiles(templateFilename))
&nbsp;
        <i>// tyto hodnoty budou použity při aplikaci šablony</i>
        roles := []Role{
                Role{"Eliška", "Najbrtová", 4},
                Role{"Jenny", "Suk", 3},
                Role{"Anička", "Šafářová", 0},
                Role{"Sváťa", "Pulec", 3},
                Role{"Blažej", "Motyčka", 8},
                Role{"Eda", "Wasserfall", 0},
                Role{"Přemysl", "Hájek", 10},
        }
&nbsp;
        <i>// aplikace šablony - přepis hodnot</i>
        err := tmpl.Execute(os.Stdout, roles)
        if err != nil {
                panic(err)
        }
}
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<pre>
--------------------------------------------------------------------
Jméno Eliška          Najbrtová        Popularita  4 
Jméno Jenny           Suk              Popularita  3 
Jméno Anička          Šafářová        
Jméno Sváťa           Pulec            Popularita  3 
Jméno Blažej          Motyčka          Popularita  8 
Jméno Eda             Wasserfall      
Jméno Přemysl         Hájek            Popularita 10 
&nbsp;
--------------------------------------------------------------------
</pre>

<p>Úplný zdrojový kód demonstračního příkladu z&nbsp;této kapitoly je dostupný
na adrese <a
href="https://github.com/tisnik/go-root/blob/master/article_80/template17.go">https://github.com/tisnik/go-root/blob/master/article_80/template17.go</a>.</p>




<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
package main

import (
        "os"
        "text/template"
)

const (
        templateFilename = "html_template01.htm"
)

// datový typ, jehož prvky budou vypisovány v šabloně
type Role struct {
        Name       string
        Surname    string
        Popularity int
}

func main() {
        // vytvoření nové šablony
        tmpl := template.Must(template.ParseFiles(templateFilename))

        // tyto hodnoty budou použity při aplikaci šablony
        roles := []Role{
                Role{"Eliška", "Najbrtová", 4},
                Role{"Jenny", "Suk", 3},
                Role{"Anička", "Šafářová", 0},
                Role{"Sváťa", "Pulec", 3},
                Role{"Blažej", "Motyčka", 8},
                Role{"Eda", "Wasserfall", 0},
                Role{"Přemysl", "Hájek", 10},
        }

        // aplikace šablony - přepis hodnot
        err := tmpl.Execute(os.Stdout, roles)
        if err != nil {
                panic(err)
        }
}
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>
{{range .}}
            <tr><td>{{.Name}}</td><td>{{.Surname}}</td><td>{{if gt .Popularity 0}}{{.Popularity}}{{else}}&times;{{end}}</td></tr>
{{end}}
        </table>
    </body>
</html>
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>

            <tr><td>Eliška</td><td>Najbrtová</td><td>4</td></tr>

            <tr><td>Jenny</td><td>Suk</td><td>3</td></tr>

            <tr><td>Anička</td><td>Šafářová</td><td>&times;</td></tr>

            <tr><td>Sváťa</td><td>Pulec</td><td>3</td></tr>

            <tr><td>Blažej</td><td>Motyčka</td><td>8</td></tr>

            <tr><td>Eda</td><td>Wasserfall</td><td>&times;</td></tr>

            <tr><td>Přemysl</td><td>Hájek</td><td>10</td></tr>

        </table>
    </body>
</html>
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
package main

import (
        "html/template"
        "os"
)

const (
        templateFilename = "html_template02.htm"
)

// datový typ, jehož prvky budou vypisovány v šabloně
type Role struct {
        Name       string
        Surname    string
        Popularity int
}

func main() {
        // vytvoření nové šablony
        tmpl := template.Must(template.ParseFiles(templateFilename))

        // tyto hodnoty budou použity při aplikaci šablony
        roles := []Role{
                Role{"Eliška", "Najbrtová", 4},
                Role{"Jenny", "Suk", 3},
                Role{"Anička", "Šafářová", 0},
                Role{"Sváťa", "Pulec", 3},
                Role{"Blažej", "Motyčka", 8},
                Role{"Eda", "Wasserfall", 0},
                Role{"Přemysl", "Hájek", 10},
        }

        // aplikace šablony - přepis hodnot
        err := tmpl.Execute(os.Stdout, roles)
        if err != nil {
                panic(err)
        }
}
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>
{{range .}}
            <tr><td>{{.Name}}</td><td>{{.Surname}}</td><td>{{if gt .Popularity 0}}{{.Popularity}}{{else}}&times;{{end}}</td></tr>
{{end}}
        </table>
    </body>
</html>
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>

            <tr><td>Eliška</td><td>Najbrtová</td><td>4</td></tr>

            <tr><td>Jenny</td><td>Suk</td><td>3</td></tr>

            <tr><td>Anička</td><td>Šafářová</td><td>&times;</td></tr>

            <tr><td>Sváťa</td><td>Pulec</td><td>3</td></tr>

            <tr><td>Blažej</td><td>Motyčka</td><td>8</td></tr>

            <tr><td>Eda</td><td>Wasserfall</td><td>&times;</td></tr>

            <tr><td>Přemysl</td><td>Hájek</td><td>10</td></tr>

        </table>
    </body>
</html>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
package main

import (
        "os"
        "text/template"
)

const (
        templateFilename = "html_template03.htm"
)

// datový typ, jehož prvky budou vypisovány v šabloně
type Role struct {
        Name       string
        Surname    string
        Popularity int
}

func main() {
        // vytvoření nové šablony
        tmpl := template.Must(template.ParseFiles(templateFilename))

        // tyto hodnoty budou použity při aplikaci šablony
        roles := []Role{
                Role{"Eliška", "Najbrtová", 4},
                Role{"Jenny", "Suk", 3},
                Role{"Anička", "Šafářová", 0},
                Role{"Sváťa", "Pulec", 3},
                Role{"Blažej", "<script>alert('you have been pwned')</script>", 8},
                Role{"Eda", "Wasserfall", 0},
                Role{"Přemysl", "Hájek", 10},
        }

        // aplikace šablony - přepis hodnot
        err := tmpl.Execute(os.Stdout, roles)
        if err != nil {
                panic(err)
        }
}
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>
{{range .}}
            <tr><td>{{.Name}}</td><td>{{.Surname}}</td><td>{{if gt .Popularity 0}}{{.Popularity}}{{else}}&times;{{end}}</td></tr>
{{end}}
        </table>
    </body>
</html>
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>

            <tr><td>Eliška</td><td>Najbrtová</td><td>4</td></tr>

            <tr><td>Jenny</td><td>Suk</td><td>3</td></tr>

            <tr><td>Anička</td><td>Šafářová</td><td>&times;</td></tr>

            <tr><td>Sváťa</td><td>Pulec</td><td>3</td></tr>

            <tr><td>Blažej</td><td><script>alert('you have been pwned')</script></td><td>8</td></tr>

            <tr><td>Eda</td><td>Wasserfall</td><td>&times;</td></tr>

            <tr><td>Přemysl</td><td>Hájek</td><td>10</td></tr>

        </table>
    </body>
</html>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
package main

import (
        "html/template"
        "os"
)

const (
        templateFilename = "html_template04.htm"
)

// datový typ, jehož prvky budou vypisovány v šabloně
type Role struct {
        Name       string
        Surname    string
        Popularity int
}

func main() {
        // vytvoření nové šablony
        tmpl := template.Must(template.ParseFiles(templateFilename))

        // tyto hodnoty budou použity při aplikaci šablony
        roles := []Role{
                Role{"Eliška", "Najbrtová", 4},
                Role{"Jenny", "Suk", 3},
                Role{"Anička", "Šafářová", 0},
                Role{"Sváťa", "Pulec", 3},
                Role{"Blažej", "<script>alert('you have been pwned')</script>", 8},
                Role{"Eda", "Wasserfall", 0},
                Role{"Přemysl", "Hájek", 10},
        }

        // aplikace šablony - přepis hodnot
        err := tmpl.Execute(os.Stdout, roles)
        if err != nil {
                panic(err)
        }
}
</pre>

<pre>
<html>
    <head>
        <title>Role ve hře Švestka</title>
    </head>
    <body>
        <h1>Role ve hře Švestka</h1>
        <table>
            <tr><th>Jméno</th><th>Příjmení</th><th>Popularita</th></tr>

            <tr><td>Eliška</td><td>Najbrtová</td><td>4</td></tr>

            <tr><td>Jenny</td><td>Suk</td><td>3</td></tr>

            <tr><td>Anička</td><td>Šafářová</td><td>&times;</td></tr>

            <tr><td>Sváťa</td><td>Pulec</td><td>3</td></tr>

            <tr><td>Blažej</td><td>&lt;script&gt;alert(&#39;you have been pwned&#39;)&lt;/script&gt;</td><td>8</td></tr>

            <tr><td>Eda</td><td>Wasserfall</td><td>&times;</td></tr>

            <tr><td>Přemysl</td><td>Hájek</td><td>10</td></tr>

        </table>
    </body>
</html>
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
package main

import (
        "html/template"
        "os"
)

const (
        templateFilename = "html_template05.htm"
)

// datový typ, jehož prvky budou vypisovány v šabloně
type Role struct {
        Name       string
        Surname    string
        Popularity int
}

func main() {
        // vytvoření nové šablony
        tmpl := template.Must(template.ParseFiles(templateFilename))

        // tyto hodnoty budou použity při aplikaci šablony
        roles := []Role{
                Role{"Eliška", "Najbrtová", 4},
                Role{"Jenny", "Suk", 3},
                Role{"Anička", "Šafářová", 0},
                Role{"Sváťa", "Pulec", 3},
                Role{"Blažej", "Motyčka", 8},
                Role{"Eda", "Wasserfall", 0},
                Role{"Přemysl", "Hájek", 10},
        }

        // aplikace šablony - přepis hodnot
        err := tmpl.Execute(os.Stdout, roles)
        if err != nil {
                panic(err)
        }
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly
uloženy do nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý,
dnes má přibližně stovku kilobajtů), můžete namísto toho použít odkazy
na jednotlivé demonstrační příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_87/">https://github.com/tisnik/go-root/blob/master/article_87/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Awesome Go<br />
<a href="https://awesome-go.com/">https://awesome-go.com/</a>
</li>

<li>Template Engines for Go<br />
<a href="https://awesome-go.com/#template-engines">https://awesome-go.com/#template-engines</a>
</li>

<li>Mail merge<br />
<a href="https://en.wikipedia.org/wiki/Mail_merge">https://en.wikipedia.org/wiki/Mail_merge</a>
</li>

<li>Template processor<br />
<a href="https://en.wikipedia.org/wiki/Template_processor">https://en.wikipedia.org/wiki/Template_processor</a>
</li>

<li>Text/template<br />
<a href="https://pkg.go.dev/text/template">https://pkg.go.dev/text/template</a>
</li>

<li>Go Template Engines<br />
<a href="https://go.libhunt.com/categories/556-template-engines">https://go.libhunt.com/categories/556-template-engines</a>
</li>

<li>Template Engines<br />
<a href="https://reposhub.com/go/template-engines">https://reposhub.com/go/template-engines</a>
</li>

<li>GoLang Templating Made Easy<br />
<a href="https://awkwardferny.medium.com/golang-templating-made-easy-4d69d663c558">https://awkwardferny.medium.com/golang-templating-made-easy-4d69d663c558</a>
</li>

<li>Templates in GoLang<br />
<a href="https://golangdocs.com/templates-in-golang">https://golangdocs.com/templates-in-golang</a>
</li>

<li>What are the best template engines for Go apart from "html/template"?<br />
<a href="https://www.quora.com/What-are-the-best-template-engines-for-Go-apart-from-html-template?share=1">https://www.quora.com/What-are-the-best-template-engines-for-Go-apart-from-html-template?share=1</a>
</li>

<li>Ace - HTML template engine for Go<br />
<a href="https://github.com/yosssi/ace">https://github.com/yosssi/ace</a>
</li>

<li>amber<br />
<a href="https://github.com/eknkc/amber">https://github.com/eknkc/amber</a>
</li>

<li>quicktemplate<br />
<a href="https://github.com/valyala/quicktemplate">https://github.com/valyala/quicktemplate</a>
</li>

<li>Šablonovací systém <i>ace</i><br />
<a href="https://github.com/yosssi/ace">https://github.com/yosssi/ace</a>
</li>

<li>Šablonovací systém <i>amber</i><br />
<a href="https://github.com/eknkc/amber">https://github.com/eknkc/amber</a>
</li>

<li>Šablonovací systém <i>damsel</i><br />
<a href="https://github.com/dskinner/damsel">https://github.com/dskinner/damsel</a>
</li>

<li>Šablonovací systém <i>ego</i><br />
<a href="https://github.com/benbjohnson/ego">https://github.com/benbjohnson/ego</a>
</li>

<li>Šablonovací systém <i>extemplate</i><br />
<a href="https://github.com/dannyvankooten/extemplate">https://github.com/dannyvankooten/extemplate</a>
</li>

<li>Šablonovací systém <i>fasttemplate</i><br />
<a href="https://github.com/valyala/fasttemplate">https://github.com/valyala/fasttemplate</a>
</li>

<li>Šablonovací systém <i>gofpdf</i><br />
<a href="https://github.com/jung-kurt/gofpdf">https://github.com/jung-kurt/gofpdf</a>
</li>

<li>Šablonovací systém <i>gospin</i><br />
<a href="https://github.com/m1/gospin">https://github.com/m1/gospin</a>
</li>

<li>Šablonovací systém <i>goview</i><br />
<a href="https://github.com/foolin/goview">https://github.com/foolin/goview</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

