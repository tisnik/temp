<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Standardní binární soubor knihovny NumPy</a></p>
<p><a href="#k03">*** 3. Uložení vektoru (jednorozměrného pole) do binárního souboru s&nbsp;využitím knihovny Numpy</a></p>
<p><a href="#k04">*** 4. Uložení a načtení matice do/ze standardního binárního souboru, opět s&nbsp;využitím knihovny Numpy</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Standardní binární soubor knihovny NumPy</h2>

<p>Z&nbsp;předchozí kapitoly je patrné, že je sice možné n-rozměrná pole
ukládat do binárních souborů, ale bude se jednat skutečně pouze o čisté hodnoty
prvků. Žádné další informace se neuloží &ndash; tedy ani velmi důležité
informace o typu prvků popř.&nbsp;o tvaru (<i>shape</i>) pole. To není ani
zdaleka ideální situace a proto byl vyvinut dnes již standardní binární formát
určený pro ukládání n-rozměrných polí. Tento formát se nazývá NPY a jeho popis
lze nalézt na stránce <a
href="https://numpy.org/devdocs/reference/generated/numpy.lib.format.html">https://numpy.org/devdocs/reference/generated/numpy.lib.format.html</a>.
Jedná se o přímou serializaci pole do souboru, ovšem před vlastní hodnoty prvků
je uložena jednoduchá hlavička se všemi důležitými informacemi &ndash; včetně
endianity, kterou jsme prozatím vůbec neřešili.</p>

<p><div class="rs-tip-major">Poznámka: pokud se má uložit větší množství polí,
lze soubory NPY zabalit do ZIP archivu a použít koncovku NPZ. Podrobnosti si
ukážeme dále.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Uložení vektoru (jednorozměrného pole) do binárního souboru s&nbsp;využitím knihovny Numpy</h2>

<p>Vektor s&nbsp;prvky libovolného typu se uloží do standardního binárního
formátu funkcí <strong>save</strong>. Té je možné (a vhodné) předat parametr
<strong>allow_pickle=False</strong> aby se zabránilo případné serializaci
objektů:</p>

<pre>
<i>"""Uložení obsahu vektoru do standardního binárního souboru."""</i>
&nbsp;
import numpy as np
&nbsp;
<i># vektor obsahující hodnoty s plovoucí řádovou čárkou</i>
<i># s poloviční přesností (half)</i>
v = np.linspace(1, 10, 10, dtype="e")
print(v)
&nbsp;
<strong>np.save("vector.npy", v, allow_pickle=False)</strong>
</pre>

<p>Výsledný soubor si vypíšeme jak v&nbsp;hexadecimálním tvaru, tak i jako
sekvenci znaků. Pro tento účel použijeme standardní nástroj
<strong>od</strong>:</p>

<pre>
$ <strong>od -t x1z -v vector.npy</strong>
&nbsp;
0000000 93 4e 55 4d 50 59 01 00 76 00 7b 27 64 65 73 63  &gt;.NUMPY..v.{'desc&lt;
0000020 72 27 3a 20 27 3c 66 32 27 2c 20 27 66 6f 72 74  &gt;r': '&lt;f2', 'fort&lt;
0000040 72 61 6e 5f 6f 72 64 65 72 27 3a 20 46 61 6c 73  &gt;ran_order': Fals&lt;
0000060 65 2c 20 27 73 68 61 70 65 27 3a 20 28 31 30 2c  &gt;e, 'shape': (10,&lt;
0000100 29 2c 20 7d 20 20 20 20 20 20 20 20 20 20 20 20  &gt;), }            &lt;
0000120 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  &gt;                &lt;
0000140 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20  &gt;                &lt;
0000160 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0a  &gt;               .&lt;
0000200 00 3c 00 40 00 42 00 44 00 45 00 46 00 47 00 48  &gt;.&lt;.@.B.D.E.F.G.H&lt;
0000220 80 48 00 49                                      &gt;.H.I&lt;
0000224
</pre>

<p>Hlavička v&nbsp;tomto případě obsahuje mj.&nbsp;i informace o typu prvků
&bdquo;f2&ldquo; i o tvaru pole (v&nbsp;čitelném tvaru). Samotná data začínají
na offsetu 128 (tedy 200 oktalově).</p>

<p>Tento binární soubor s&nbsp;obsahem vektoru lze načíst velmi snadno, a to
konkrétně funkcí <strong>numpy.load()</strong>:</p>

<pre>
<i>"""Přečtení obsahu vektoru ze standardního binárního souboru."""</i>
&nbsp;
import numpy as np
&nbsp;
v = <strong>np.load("vector.npy")</strong>
print(v)
print(v.dtype)
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Uložení a načtení matice do/ze standardního binárního souboru, opět s&nbsp;využitím knihovny Numpy</h2>

<p>Naprosto stejným způsobem jako s&nbsp;vektory se v&nbsp;případě standardního
binárního souboru NPY pracuje s&nbsp;maticemi. Uložení matice:</p>

<pre>
<i>"""Uložení obsahu matice do standardního binárního souboru."""</i>
&nbsp;
import numpy as np
&nbsp;
<i># matice obsahující celočíselné 8bitové hodnoty (byte)</i>
m = np.linspace(1, 12, 12, dtype="b").reshape(3, 4)
print(m)
&nbsp;
<strong>np.save("matrix1.npy", m, allow_pickle=False)</strong>
</pre>

<p>Zpětné načtení matice:</p>

<pre>
<i>"""Přečtení obsahu matice ze standardního binárního souboru."""</i>
&nbsp;
import numpy as np
&nbsp;
m = <strong>np.load("matrix1.npy")</strong>
print(m)
print(m.dtype)
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

go get github.com/sbinet/npyio


<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář, můžete namísto toho
použít odkazy na jednotlivé demonstrační příklady, které naleznete
v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_A6/">https://github.com/tisnik/go-root/blob/master/article_A6/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_A6/">https://github.com/tisnik/go-root/blob/master/article_A6/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/go-root/blob/master/article_A6/">https://github.com/tisnik/go-root/blob/master/article_A6/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Git repositář balíčku gonpy<br />
<a href="https://github.com/kshedden/gonpy">https://github.com/kshedden/gonpy</a>
</li>

<li>Git repositář balíčku npyio<br />
<a href="https://github.com/sbinet/npyio">https://github.com/sbinet/npyio</a>
</li>

<li>NEP 1 &ndash; A simple file format for NumPy arrays<br />
<a href="https://numpy.org/neps/nep-0001-npy-format.html">https://numpy.org/neps/nep-0001-npy-format.html</a>
</li>

<li>Operace s&nbsp;daty uloženými v&nbsp;binárních souborech v&nbsp;knihovnách NumPy a Pandas<br />
<a href="https://www.root.cz/clanky/operace-s-daty-ulozenymi-v-binarnich-souborech-v-knihovnach-numpy-a-pandas/">https://www.root.cz/clanky/operace-s-daty-ulozenymi-v-binarnich-souborech-v-knihovnach-numpy-a-pandas/</a>
</li>

<li>Operace s&nbsp;daty uloženými v&nbsp;binárních souborech v&nbsp;knihovnách NumPy a Pandas (dokončení)<br />
<a href="https://www.root.cz/clanky/operace-s-daty-ulozenymi-v-binarnich-souborech-v-knihovnach-numpy-a-pandas-dokonceni/">https://www.root.cz/clanky/operace-s-daty-ulozenymi-v-binarnich-souborech-v-knihovnach-numpy-a-pandas-dokonceni/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

