<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">2. Vložení krátkého řetězce do výsledného spustitelného souboru</a></p>
<p><a href="#k03">3. Korektní způsob použití balíčku <strong>embed</strong></a></p>
<p><a href="#k04">4. Vložení delšího víceřádkového řetězce do výsledného spustitelného souboru</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Vložení krátkého řetězce do výsledného spustitelného souboru</h2>

<p>Do výsledného spustitelného souboru můžeme vložit řetězec, jenž je
v&nbsp;době překladu načtený z&nbsp;nějakého textového souboru. Pro tento účel
se před definicí proměnné použije tento speciální komentář:</p>

<pre>
<i>//go:embed hello.txt</i>
</pre>

<p>Například:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
)
&nbsp;
<i>//go:embed hello.txt</i>
var helloMessage string
&nbsp;
func <strong>main</strong>() {
        <i>// pouziti retezce</i>
        fmt.Println(helloMessage)
}
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu je uložen
na adrese <a
href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string0.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string0.go</a>.</div></p>

<p>Při pokusu o překlad tohoto zdrojového kódu však dojde k&nbsp;chybě, protože
pro zpracování výše uvedeného speciálního komentáře je nutné načíst balíček
<strong>embed</strong>:</p>

<pre>
./embed_string0.go:7:3: go:embed only allowed in Go files that import "embed"
</pre>

<p>Pokusme se tedy o úpravu tohoto příkladu:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "embed"
        "fmt"
)
&nbsp;
<i>//go:embed hello.txt</i>
var helloMessage string
&nbsp;
func <strong>main</strong>() {
        <i>// pouziti retezce</i>
        fmt.Println(helloMessage)
}
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu je uložen
na adrese <a
href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string1.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string1.go</a>.</div></p>

<p>Ani tento způsob ovšem ve skutečnosti není zcela korektní, protože sice
importujeme balíček <strong>embed</strong>, ovšem nikde ho nepoužijeme, což
v&nbsp;Go není dovoleno (je použit jen v&nbsp;onom komentáři):</p>

<pre>
./embed_string1.go:4:2: "embed" imported and not used
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Korektní způsob použití balíčku <strong>embed</strong></h2>

<p>Jak tedy můžeme naimportovat balíček <strong>embed</strong>, i když není
přímo v&nbsp;kódu použit? Programovací jazyk Go vyžaduje, aby každý importovaný
balíček byl skutečně využit (což jsme ostatně viděli výše), ovšem existuje zde
jeden trik, jak pouze provést import bez explicitního použití (používá se
například při načítání databázových driverů). Tento trik spočívá v&nbsp;tom, že
se před jméno importovaného balíčku zadá jeho jmenný alias, který je nastavený
na podtržítko:</p>

<pre>
import _ "embed"
</pre>

<p>V&nbsp;praxi to může vypadat následovně:</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        _ "embed"
        "fmt"
)
&nbsp;
<i>//go:embed hello.txt</i>
var helloMessage string
&nbsp;
func <strong>main</strong>() {
        <i>// pouziti retezce</i>
        fmt.Println(helloMessage)
}
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu je uložen
na adrese <a
href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string2.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string2.go</a>.</div></p>

<p>Tento zdrojový kód je již bez problémů jak přeložitelný, tak i
spustitelný:</p>

<pre>
$ <strong>go build embed_string2.go</strong>
&nbsp;
$ <strong>./embed_string2</strong>
Hello world!
</pre>

<p>O tom, že řetězec &bdquo;Hello world!&ldquo; je skutečně ve spustitelném
kódu použit, se lze snadno přesvědčit (i když dost primitivním způsobem):</p>

<pre>
$ <strong>strings embed_string2 | grep Hello</strong>
&nbsp;
entersyscallgcBitsArenasgcpacertraceharddecommithost is downillegal seekinvalid
slotlfstack.pushmadvdontneedmheapSpecialmspanSpecialnot pollablens} value:
{releasep: m=runtime: gp=runtime:
sp=spanSetSpinesweepWaiterstimer_deletetraceStringswirep: p-&gt;m=worker mode
}, want {r1= != sweepgen  MB globals,  MB) workers= called from  failed with
flushedWork  idlethreads= is nil, not  nStackRoots= pluginpath=  s.spanclass=
span.base()= syscalltick= work.nproc=  work.nwait= , gp-&gt;status=, not
pointer-byte block (3814697265625: unknown pc GC sweep
waitGunjala_Gondi<strong>Hello world!</strong>
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Vložení delšího víceřádkového řetězce do výsledného spustitelného souboru</h2>

<p>V&nbsp;dalším demonstračním příkladu se do výsledného spustitelného kódu
pokusíme vložit delší řetězec, který je navíc víceřádkový. Použijeme přitom
klasický příklad odstavce &bdquo;Lorem ipsum&ldquo;:</p>

<pre>
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim id est laborum.
</pre>

<p>Samotný zdrojový kód příkladu se prakticky nebude lišit od příkladu
předchozího, pouze použijeme jiné jméno souboru &bdquo;ipsum.txt&ldquo; a jiné
jméno proměnné, do které se obsah tohoto souboru automaticky přiřadí
(<strong>loremIpsum</strong>):</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        _ "embed"
        "fmt"
)
&nbsp;
<i>//go:embed lorem_ipsum.txt</i>
var loremIpsum string
&nbsp;
func <strong>main</strong>() {
        <i>// pouziti retezce</i>
        fmt.Println(loremIpsum)
}
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu je uložen
na adrese <a
href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string3.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string3.go</a>.</div></p>

<p>Proveďme kontrolní překlad a spuštění:</p>

<pre>
$ <strong>go build embed_string3.go </strong>
&nbsp;
&nbsp;
&nbsp;
$ <strong>./embed_string3 </strong>
&nbsp;
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim id est laborum.
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
package <strong>main</strong>

import (
        _ "embed"
        "fmt"
)

<i>//go:embed lorem_ipsum.txt</i>
var loremIpsum []byte

func <strong>main</strong>() {
        <i>// pouziti retezce</i>
        fmt.Println(loremIpsum)
}
</pre>

<pre>
package <strong>main</strong>

import (
        _ "embed"
        "fmt"
)

<i>//go:embed lorem_ipsum.txt</i>
var loremIpsum []byte

func <strong>main</strong>() {
        <i>// pouziti retezce</i>
        fmt.Println(string(loremIpsum))
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
package <strong>main</strong>

import (
        "embed"
        "log"
        "os"
)

<i>//go:embed npe.jpg</i>
var f embed.FS

func <strong>main</strong>() {
        data, err := f.ReadFile("npe.jpg")
        if err != nil {
                log.Fatal(err)
        }

        <i>// open output file</i>
        fout, err := os.Create("npe2.jpg")
        if err != nil {
                log.Fatal(err)
        }
        <i>// close fo on exit and check for its returned error</i>
        defer func() {
                err := fout.Close()
                if err != nil {
                        log.Fatal(err)
                }
        }()

        fout.Write(data)
}
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
package <strong>main</strong>

import (
        "embed"
        "fmt"
        "log"
)

<i>//go:embed lorem_ipsum.txt</i>
var f embed.FS

func <strong>main</strong>() {
        data, err := f.ReadFile("lorem_ipsum.txt")
        if err != nil {
                log.Fatal(err)
        }

        <i>// pouziti retezce</i>
        fmt.Println(string(data))
}
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
package <strong>main</strong>

import (
        "embed"
        "fmt"
        "log"
)

<i>//go:embed *.txt</i>
var f embed.FS

func <strong>main</strong>() {
        entries, err := f.ReadDir(".")
        if err != nil {
                log.Fatal(err)
        }

        for _, entry := range entries {
                fmt.Printf("%-25s  %s\n", entry.Name(), entry.Type())
        }
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
package <strong>main</strong>

import (
        "embed"
        "fmt"
        "log"
)

<i>//go:embed hello.txt</i>
<i>//go:embed lorem_ipsum.txt</i>
var f embed.FS

func <strong>main</strong>() {
        data, err := f.ReadFile("lorem_ipsum.txt")
        if err != nil {
                log.Fatal(err)
        }

        <i>// pouziti retezce</i>
        fmt.Println(string(data))
}
</pre>

<pre>
package <strong>main</strong>

import (
        "embed"
        "fmt"
        "log"
)

<i>//go:embed *.txt</i>
var f embed.FS

func <strong>main</strong>() {
        data, err := f.ReadFile("lorem_ipsum.txt")
        if err != nil {
                log.Fatal(err)
        }

        <i>// pouziti retezce</i>
        fmt.Println(string(data))
}
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů naprogramovaných
v&nbsp;jazyku Go byly uloženy do Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/go-root">https://github.com/tisnik/go-root</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář, můžete namísto toho
použít odkazy na jednotlivé demonstrační příklady, které naleznete
v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>embed_string0.go</td><td>vložení jednořádkového řetězce do výsledného spustitelného souboru (nekorektní varianta)</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string0.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string0.go</a></td></tr>
<tr><td> 2</td><td>embed_string1.go</td><td>vložení jednořádkového řetězce do výsledného spustitelného souboru (nekorektní varianta)</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string1.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string1.go</a></td></tr>
<tr><td> 3</td><td>embed_string2.go</td><td>vložení jednořádkového řetězce do výsledného spustitelného souboru (korektní varianta)</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string2.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string2.go</a></td></tr>
<tr><td> 4</td><td>embed_string3.go</td><td>vložení víceřádkového řetězce do výsledného spustitelného souboru</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_string3.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_string3.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>embed_binary1.go</td><td>vložení binárních dat do výsledného spustitelného souboru</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_binary1.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_binary1.go</a></td></tr>
<tr><td> 6</td><td>embed_binary2.go</td><td>vložení binárních dat do výsledného spustitelného souboru</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/embed_binary2.go">https://github.com/tisnik/go-root/blob/master/article_AB/embed_binary2.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>access_string.go</td><td>přístup k&nbsp;původnímu řetězci přes virtuální souborový systém</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/access_string.go">https://github.com/tisnik/go-root/blob/master/article_AB/access_string.go</a></td></tr>
<tr><td> 8</td><td>access_binary.go</td><td>přístup k&nbsp;binárním datům přes virtuální souborový systém</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/access_binary.go">https://github.com/tisnik/go-root/blob/master/article_AB/access_binary.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>more_strings1.go</td><td>větší množství řetězců, přístup k&nbsp;nim přes virtuální souborový systém</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/more_strings1.go">https://github.com/tisnik/go-root/blob/master/article_AB/more_strings1.go</a></td></tr>
<tr><td>10</td><td>more_strings2.go</td><td>větší množství řetězců, přístup k&nbsp;nim přes virtuální souborový systém</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/more_strings2.go">https://github.com/tisnik/go-root/blob/master/article_AB/more_strings2.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>dir.go</td><td>výpis všech dat, která jsou vložena do spustitelného souboru a dostupná přes virtuální souborový systém</td><td><a href="https://github.com/tisnik/go-root/blob/master/article_AB/dir.go">https://github.com/tisnik/go-root/blob/master/article_AB/dir.go</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Popis balíčku <i>embed</i><br />
<a href="https://pkg.go.dev/embed">https://pkg.go.dev/embed</a>
</li>

<li>How to Use go:embed in Go<br />
<a href="https://blog.jetbrains.com/go/2021/06/09/how-to-use-go-embed-in-go-1-16/">https://blog.jetbrains.com/go/2021/06/09/how-to-use-go-embed-in-go-1-16/</a>
</li>

<li>How to embed files into Go binaries<br />
<a href="https://stackoverflow.com/questions/17796043/how-to-embed-files-into-go-binaries">https://stackoverflow.com/questions/17796043/how-to-embed-files-into-go-binaries</a>
</li>

<li>Include binary file with GNU ld linker script<br />
<a href="https://stackoverflow.com/questions/327609/include-binary-file-with-gnu-ld-linker-script">https://stackoverflow.com/questions/327609/include-binary-file-with-gnu-ld-linker-script</a>
</li>

<li>Executable and Linkable Format<br />
<a href="https://en.wikipedia.org/wiki/Executable_and_Linkable_Format">https://en.wikipedia.org/wiki/Executable_and_Linkable_Format</a>
</li>

<li>Executable and Linkable Format 101 - Part 1 Sections and Segments<br />
<a href="https://intezer.com/blog/research/executable-linkable-format-101-part1-sections-segments/">https://intezer.com/blog/research/executable-linkable-format-101-part1-sections-segments/</a>
</li>

<li>appending data to an exe<br />
<a href="https://stackoverflow.com/questions/5795446/appending-data-to-an-exe">https://stackoverflow.com/questions/5795446/appending-data-to-an-exe</a>
</li>

<li>Embedding resources in executable using GCC<br />
<a href="https://stackoverflow.com/questions/4158900/embedding-resources-in-executable-using-gcc">https://stackoverflow.com/questions/4158900/embedding-resources-in-executable-using-gcc</a>
</li>

<li>Go 1.18 Release Notes<br />
<a href="https://golang.org/doc/go1.18">https://golang.org/doc/go1.18</a>
</li>

<li>Go 1.17 Release Notes<br />
<a href="https://golang.org/doc/go1.17">https://golang.org/doc/go1.17</a>
</li>

<li>Go 1.16 Release Notes<br />
<a href="https://golang.org/doc/go1.16">https://golang.org/doc/go1.16</a>
</li>

<li>Go 1.15 Release Notes<br />
<a href="https://golang.org/doc/go1.15">https://golang.org/doc/go1.15</a>
</li>

<li>Go 1.14 Release Notes<br />
<a href="https://golang.org/doc/go1.14">https://golang.org/doc/go1.14</a>
</li>

<li>Go 1.13 Release Notes<br />
<a href="https://golang.org/doc/go1.13">https://golang.org/doc/go1.13</a>
</li>

<li>Go 1.12 Release Notes<br />
<a href="https://golang.org/doc/go1.12">https://golang.org/doc/go1.12</a>
</li>

<li>Go 1.11 Release Notes<br />
<a href="https://golang.org/doc/go1.11">https://golang.org/doc/go1.11</a>
</li>

<li>Go 1.10 Release Notes<br />
<a href="https://golang.org/doc/go1.10">https://golang.org/doc/go1.10</a>
</li>

<li>Go 1.9 Release Notes<br />
<a href="https://golang.org/doc/go1.9">https://golang.org/doc/go1.9</a>
</li>

<li>Go 1.8 Release Notes<br />
<a href="https://golang.org/doc/go1.8">https://golang.org/doc/go1.8</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

