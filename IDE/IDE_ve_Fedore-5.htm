<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Integrovaná vývojová prostředí ve Fedoře: PyDev</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Integrovaná vývojová prostředí ve Fedoře: PyDev</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V&nbsp;dnešním článku se seznámíme s&nbsp;některými vlastnostmi integrovaného vývojového prostředí PyDev, které je určeno pro vývoj a ladění aplikací programovaných v&nbsp;Pythonu. PyDev je postaveno nad Eclipse, takže kromě samotného modulu pro podporu jazyka Python mohou programátoři používat i další pluginy pro toto prostředí, například plugin pro správu verzí, plánování, testování atd.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Integrovaná vývojová prostředí ve Fedoře: PyDev</a></p>
<p><a href="#k02">2. Vlastnosti prostředí PyDev</a></p>
<p><a href="#k03">3. Instalace vývojového prostředí PyDev</a></p>
<p><a href="#k04">4. Vytvoření nového projektu a výběr interpretru používaného projektem</a></p>
<p><a href="#k05">5. Pracovní plochy, pomocná okna a pohledy dostupné programátorům</a></p>
<p><a href="#k06">6. Ladění aplikací naprogramovaných v&nbsp;Pythonu</a></p>
<p><a href="#k07">7. Obsah následující části seriálu</a></p>
<p><a href="#k08">8. Předchozí části seriálu</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Integrovaná vývojová prostředí ve Fedoře: PyDev</h2>

<p>V&nbsp;předchozích částech seriálu o integrovaných vývojových prostředích dostupných ve Fedoře jsme se seznámili s&nbsp;projekty <i>Anjuta</i>, <i>Geany</i>, <i>Qt Creator</i>, <i>Eric</i>, <i>IDLE</i>, <i>Code:Blocks</i>, <i>Lazarus</i> či <i>Gambas</i>. Kamil Páral navíc napsal velmi pěkný <a href="http://mojefedora.cz/seznameni-s-python-ide-spyder/">článek o Spyderu</a>. Dnes se seznámíme s&nbsp;prostředím <i>PyDev</i>, které je určené pro všechny programátory pracující s&nbsp;Pythonem, a to nezávisle na použité verzi interpretru (podporován je totiž jak Python 2.x, tak i Python 3). Zatímco většina integrovaných vývojových prostředí popsaných v&nbsp;předchozích částech tohoto seriálu byla vytvořena ve formě samostatných aplikací (relativně) nezávislých na dalších balíčcích, je tomu v&nbsp;případě nástroje <i>PyDev</i> poněkud jinak, protože <i>PyDev</i> je ve skutečnosti &bdquo;pouze&ldquo; rozšiřujícím modulem určeným pro integraci do univerzálního prostředí Eclipse, s&nbsp;nímž jsme se již na tomto serveru několikrát setkali <a href="http://mojefedora.cz/eclipse-integrovane-vyvojove-prostredi-pro-javu-i-dalsi-programovaci-jazyky/">v&nbsp;samostatném seriálu</a>.</p>

<img class="alignnone size-medium wp-image-6727" src="http://mojefedora.cz/wp-content/uploads/2016/03/01-450x326.png" alt="01" width="450" height="326" />
<p><i>Obrázek 1: Ladění programu napsaného v&nbsp;Pythonu s&nbsp;využitím možností, které vývojářům poskytuje PyDev.</i></p>

<p>Připomeňme si jen ve stručnosti, že vývoj projektu Eclipse byl zahájen na přelomu tisíciletí ve společnosti IBM a v&nbsp;současnosti se jedná o aplikaci šířenou pod licencí EPL. EPL je licence v&nbsp;některých ohledech poněkud odlišná od známé GNU GPL, to však nijak neovlivňuje možnosti použití Eclipse ve funkci IDE v&nbsp;Linuxu. Ostatně i z&nbsp;tohoto důvodu najdeme Eclipse i v&nbsp;základních balíčcích Fedory, což by v&nbsp;případě problematičtějšího licenčního modelu pochopitelně nebylo možné. V&nbsp;případě Eclipse se původně mělo jednat o integrované vývojové prostředí (IDE), které mělo představovat alternativu k&nbsp;tehdy již existujícímu prostředí Visual Age založenému na programovacím jazyku Smalltalk (toto prostředí je nicméně stále nabízeno, používáno a existuje okolo něj loajální komunita), později se z&nbsp;Eclipse stala univerzální platforma používaná jak ve funkci integrovaného vývojového prostředí, tak i ve funkci takzvaného &bdquo;rich clienta&ldquo;. A právě tuto schopnost Eclipse využili (kromě mnoha jiných programátorů) i vývojáři prostředí PyDev.</p>

<img class="alignnone size-medium wp-image-6728" src="http://mojefedora.cz/wp-content/uploads/2016/03/02-450x326.png" alt="02" width="450" height="326" />
<p><i>Obrázek 2: Dialog pro vytvoření nového projektu. Můžete zde vidět volbu interpretru (verzi i typ). PyDev v&nbsp;této oblasti vývojáře neomezuje, samozřejmě však musí mít vybraný interpret nainstalován ve svém systému.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Vlastnosti prostředí PyDev</h2>

<p>Jaké funkce vlastně můžeme po instalaci nástroje PyDev očekávat? Jedná se většinou o funkce, které nalezneme i v&nbsp;Eclipse JDT, tj. v&nbsp;Eclipse rozšířeném o moduly určené pro práci s&nbsp;projekty naprogramovanými v&nbsp;Javě. Především v&nbsp;PyDev nalezneme snadno ovladatelného správce projektů, propojení s&nbsp;debuggerem Pythonu (takže lze hovořit o integrovaném debuggeru), možnost připojení debuggeru k&nbsp;aplikaci spuštěné mimo PyDev, programátorský editor byl rozšířen o vlastnosti typické pro Python (odsazení, dokumentační komentáře, folding), PyDev samozřejmě dokáže správně zobrazit chyby hlášené interpretrem, nalezneme zde podporu pro automatické či poloautomatické doplňování klíčových slov i názvů proměnných, funkcí, metod atd.</p>

<img class="alignnone size-medium wp-image-6729" src="http://mojefedora.cz/wp-content/uploads/2016/03/03-450x326.png" alt="03" width="450" height="326" />
<p><i>Obrázek 3: Vlastnosti editoru použitého pro editaci zdrojových textů psaných v&nbsp;Pythonu. Právě zde se skrývají volby pro použití mezer či znaků Tab, které je důležité nastavit pro dodržení &bdquo;štábní kultury&ldquo;.</i></p>

<p>Nesmíme zapomenout ani na nástroje určené pro poloautomatickou opravu chyb a taktéž pro refaktoring zdrojového kódu. Samozřejmě je nutné mít na paměti, že programovací jazyk Python se v&nbsp;mnoha ohledech odlišuje například od Javy, což se týká například rozdílných typových systémů. Z&nbsp;tohoto důvodu nalezneme mezi PyDev a Eclipse JDT poměrně mnoho rozdílů v&nbsp;chování konkrétních nástrojů (doplňování, nabídka oprav, refaktoring). Zvolit se lze i verzi Pythonu, což je stále velmi důležitá vlastnost, protože zdaleka ne všechny projekty a knihovny již přešly na Python 3.</p>

<img class="alignnone size-medium wp-image-6730" src="http://mojefedora.cz/wp-content/uploads/2016/03/04-450x326.png" alt="04" width="450" height="326" />
<p><i>Obrázek 4: Kooperace s&nbsp;překladačem a zobrazení neznámého identifikátoru.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace vývojového prostředí PyDev</h2>

<p>Pojďme si nyní říci, jakým způsobem je možné vývojové prostředí <i>PyDev</i> do Fedory nainstalovat. Budeme samozřejmě potřebovat Eclipse, resp.&nbsp;přesněji řečeno základní framework Eclipse. Dále je pak zapotřebí JRE, které se ovšem v&nbsp;případě potřeby nainstaluje automaticky jako závislý balíček pro Eclipse. V&nbsp;repositářích systému Fedora nalezneme hned několik balíčků, v&nbsp;jejichž názvu se řetězec &bdquo;eclipse&ldquo; vyskytuje. Je tomu tak právě z&nbsp;důvodu velké modularity. Pokud programátor potřebuje provádět vývoj aplikací vytvářených především v&nbsp;Javě, bude pro instalaci nejvhodnější zvolit balíček Eclipse JDT (<i>Java Development Toolkit</i>), pro vývoj v&nbsp;programovacích jazycích C a C++ je určen projekt nazvaný Eclipse CDT (<i>C/C++ Development Toolkit</i>), vývoj v&nbsp;Pythonu (což nás dnes zajímá nejvíce) je podporován právě v&nbsp;modulu PyDev, vývoj webových aplikací v&nbsp;Eclipse WTP (<i>Web Tool Platform</i>) atd.</p>

<p>Všechny tyto balíčky vyžadují ke své činnosti především balíček Eclipse Platform (<strong>eclipse-platform</strong>) a samozřejmě i již zmíněné JRE, tj.&nbsp;běhové prostředí Javy. Samotné Eclipse je totiž z&nbsp;velké části naprogramováno v&nbsp;Javě; pouze několik knihoven, například SWT, má i nativní část. Při instalaci balíčku <i>PyDev</i> (<strong>eclipse-pydev</strong>) se automaticky doinstalují i všechny závislosti, což mj.&nbsp;znamená i instalaci Jythonu (ten však ve skutečnosti nemusíte ve svém projektu explicitně používat, vyžaduje ho jen IDE pro svou činnost).</p>

<p>Alternativně je možné provést instalaci PyDev již do existujícího a spuštěného prostředí Eclipse ručně (pro přihlášeného uživatele), což je ukázáno na následující sekvenci screenshotů. Na začátku postačuje mít nainstalován pouze balíček nazvaný <strong>eclipse-platform</strong>, a to například příkazem:</p>

<pre>
# yum install eclipse-platform
</pre>

<p>alternativně (pokud máte příslušná práva):</p>

<pre>
$ sudo yum install eclipse-platform
</pre>

<p>Dále je možné postupovat interaktivně podle obrázků:</p>

<img class="alignnone size-medium wp-image-6731" src="http://mojefedora.cz/wp-content/uploads/2016/03/05-450x338.png" alt="05" width="450" height="338" />
<p><i>Obrázek 5: Dialog pro přidání nového modulu (pluginu) do Eclipse se skrývá pod položkou Help &rarr; Install New Software.</i></p>

<img class="alignnone size-medium wp-image-6732" src="http://mojefedora.cz/wp-content/uploads/2016/03/06-450x338.png" alt="06" width="450" height="338" />
<p><i>Obrázek 6: Tlačítkem Add se přidá adresa, z&nbsp;níž Eclipse získá informace o dostupných balíčcích. Můžete použít buď přímý link na konkrétní verzi <a href="https://dl.bintray.com/fabioz/pydev/4.5.4/">https://dl.bintray.com/fabioz/pydev/4.5.4/</a>, nebo se spokojit s&nbsp;obecnou adresou <a href="http://www.pydev.org/updates/">http://www.pydev.org/updates/</a>.</i></p>

<img class="alignnone size-medium wp-image-6733" src="http://mojefedora.cz/wp-content/uploads/2016/03/07-450x338.png" alt="07" width="450" height="338" />
<p><i>Obrázek 7: Eclipse následně ze zadané adresy stáhne metainformace o dostupných balíčcích. Nám bude postačovat balíček PyDev for Eclipse, který stačí vybrat a kliknout na tlačítko Next.</i></p>

<img class="alignnone size-medium wp-image-6734" src="http://mojefedora.cz/wp-content/uploads/2016/03/08-450x338.png" alt="08" width="450" height="338" />
<p><i>Obrázek 8: Běžný dialog se zobrazením licencí (licencemi), kde se musí explicitně souhlasit s&nbsp;textem licence. Co k&nbsp;tomu dodat více?</i></p>

<img class="alignnone size-medium wp-image-6735" src="http://mojefedora.cz/wp-content/uploads/2016/03/09-450x338.png" alt="09" width="450" height="338" />
<p><i>Obrázek 9: Eclipse nás upozorní na neexistující certifikát, kterým je balíček podepsán. Pokud se chcete tohoto dialogu zbavit a důvěřovat i případným budoucím updatům atd., lze příslušný platný certifikát získat z&nbsp;adresy <a href="http://www.pydev.org/pydev_certificate.cer">http://www.pydev.org/pydev_certificate.cer</a></i>.</p>

<img class="alignnone size-medium wp-image-6736" src="http://mojefedora.cz/wp-content/uploads/2016/03/10-450x338.png" alt="10" width="450" height="338" />
<p><i>Obrázek 10: Po instalaci pluginu a restartu Eclipse se podívejte na dialog Help &rarr; About Eclipse Platform. Pokud se v&nbsp;něm objeví ikona dvou požírajících se hadů, máte z&nbsp;poloviny vyhráno.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Vytvoření nového projektu a výběr interpretru používaného projektem</h2>

<p>Základem při práci v&nbsp;prostředí PyDev je vytvoření nového projektu, což je ve skutečnosti velmi snadné. Jedinou potenciálně problematickou věcí, která může způsobit problémy při prvním seznamování s&nbsp;PyDevem, je výběr správného interpretru jazyka Python. Opět se podívejme na sekvenci screenshotů, z&nbsp;nichž bude celý postup vytvoření a nakonfigurování nového projektu patrný:</p>

<img class="alignnone size-medium wp-image-6737" src="http://mojefedora.cz/wp-content/uploads/2016/03/11-450x338.png" alt="11" width="450" height="338" />
<p><i>Obrázek 11: Sekvence dialogů pro vytvoření nového projektu se skrývá pod položkou File &rarr; New &rarr; PyDev Project popř.&nbsp;lze použít první ikonu zobrazenou na standardně nakonfigurovaném toolbaru (ve druhém případě se Eclipse ještě přeptá na typ projektu).</i></p>

<p>Následuje jeden z&nbsp;nejdůležitějších dialogů, protože právě v&nbsp;něm můžete ovlivnit základní vlastnosti projektu. Nepřehlédněte zejména položky Project type a Grammar Version. V&nbsp;první položce volíte, zda se použije klasický CPython, Jython (tedy Python pro JVM) či IronPython (tedy Python pro CLR). Ve druhé položce pak dostanete na výběr verzi interpretu jazyka:</p>

<img class="alignnone size-medium wp-image-6738" src="http://mojefedora.cz/wp-content/uploads/2016/03/12-450x338.png" alt="12" width="450" height="338" />
<p><i>Obrázek 12: Nastavení základních vlastností projektu.</i></p>

<img class="alignnone size-medium wp-image-6739" src="http://mojefedora.cz/wp-content/uploads/2016/03/13-450x338.png" alt="13" width="450" height="338" />
<p><i>Obrázek 13: Prázdný projekt neobsahuje žádné zdrojové kódy. Ty je možné buď naimportovat popř.&nbsp;použít dialog pro přidání nového modulu (pravé tlačítko myši v&nbsp;Package Exploreru, první ikona na toolbaru atd.)</i></p>

<img class="alignnone size-medium wp-image-6740" src="http://mojefedora.cz/wp-content/uploads/2016/03/14-450x338.png" alt="14" width="450" height="338" />
<p><i>Obrázek 14: Prostředí zobrazí nový projekt s&nbsp;použitím výchozí perspektivy.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Pracovní plochy, pomocná okna a pohledy dostupné programátorům</h2>

<p>Některé koncepty, které jsou využívané v&nbsp;integrovaném vývojovém prostředí Eclipse (a tím pádem i v&nbsp;PyDev), jsou pro tento projekt specifické a mnohdy je v&nbsp;jiných integrovaných vývojových prostředích nenajdeme. Jedná se především o koncept takzvaných pracovních ploch (<i>workspaces</i>), automatické či manuální přepínání mezi perspektivami (<i>perspectives</i>) a částečně taktéž o využití pohledů (<i>views</i>) a různých interních editorů (<i>editors</i>). Nejdříve si řekněme, co se skrývá pod pojmem pracovní plocha. Zjednodušeně řečeno se jedná o adresář (resp. složku), do něhož jsou implicitně ukládány jednotlivé projekty, s&nbsp;nimiž se v&nbsp;Eclipse pracuje.</p>

<img class="alignnone size-medium wp-image-6741" src="http://mojefedora.cz/wp-content/uploads/2016/03/15-450x338.png" alt="15" width="450" height="338" />
<p><i>Obrázek 15: Okno Quick Outline lze vyvolat klávesovou zkratkou a dostane fokus, takže je ho možné použít i bez myši.</i></p>

<p>Součástí pracovní plochy je taktéž konfigurace vlastního vývojového prostředí i konfigurace jednotlivých zásuvných modulů (plugins). Pro zajímavost: tyto informace se nachází v&nbsp;podadresáři se jménem &bdquo;.metadata/.plugins&ldquo;. S&nbsp;výběrem pracovní plochy se ve skutečnosti setkáte ihned při prvním spuštění Eclipse &ndash; prostředí nabídne adresář reprezentující pracovní plochu, který je samozřejmě možné změnit. Adresář s&nbsp;pracovní plochou lze přenést i na jiný počítač a tam ho vybrat v&nbsp;lokální instalaci Eclipse. Pokud jsou na tomto počítači nainstalovány všechny potřebné zásuvné moduly, neměl by nastat s&nbsp;přenosem celé pracovní plochy žádný problém. Taktéž je možné použít GIT, Mercurial či SVN a synchronizovat si tak nejenom vlastní projekty, ale i celé nastavení Eclipse+PyDev.</p>

<img class="alignnone size-medium wp-image-6742" src="http://mojefedora.cz/wp-content/uploads/2016/03/16-450x338.png" alt="16" width="450" height="338" />
<p><i>Obrázek 16: Na pravou stranu grafického uživatelského rozhraní bylo přichyceno okno Outline. To nyní zobrazuje podobný obsah jako Package Explorer.</i></p>

<p>Dalším důležitým konceptem, s&nbsp;nímž se při práci v&nbsp;Eclipse a tedy i v&nbsp;PyDev dříve či později setká prakticky každý vývojář, je koncept takzvaných perspektiv (<i>perspectives</i>), jejichž princip může být zpočátku pro nové uživatele možná poněkud matoucí, nicméně se jedná o velmi užitečnou technologii. Tvůrci projektu Eclipse si totiž uvědomili, že vývojáři při různých činnostech používají odlišnou konfiguraci pracovní plochy. Například při editaci zdrojového kódu preferují, aby co největší plocha obrazovky byla obsazena vlastním programátorským textovým editorem, při ladění aplikace je (kromě zdrojového kódu) taktéž nutné zobrazit obsah proměnných a zásobník volání, dalším režimem činnosti je porovnávání dvou či více verzí zdrojových kódů (zejména při synchronizaci lokální kopie projektu s repositářem) apod. Co to konkrétně znamená pro programátory využívající PyDev? K&nbsp;dispozici mají dvě hlavní perspektivy nazvané <strong>PyDev</strong> a <strong>Debug</strong>. Tyto perspektivy se někdy přepínají automaticky, například při ladění aplikace, ovšem přepnutí je možné provést i ručně, a to výběrem perspektivy v&nbsp;pravém horním rohu grafického uživatelského rozhraní vývojového prostředí Eclipse.</p>

<img class="alignnone size-medium wp-image-6743" src="http://mojefedora.cz/wp-content/uploads/2016/03/17-450x326.png" alt="17" width="450" height="326" />
<p><i>Obrázek 17: Prohlížeč globálních symbolů je taktéž velmi užitečný, zejména při práci s&nbsp;projekty, které importují větší množství knihoven. Povšimněte si, že mnoho symbolů (zde se jedná o symboly začínající na &bdquo;len&ldquo;) se v&nbsp;projektu či v&nbsp;importovaných knihovnách vyskytuje několikrát, což samozřejmě nevadí, protože jak interpret, tak i PyDev dokáže rozpoznat kontext.</i></p>

<p>Kromě perspektiv si lze prakticky kdykoli nechat zobrazit další podokna se speciálním obsahem a významem. Tato podokna se nazývají <i>views</i> a v&nbsp;případě použití PyDev je možné použít například pohled na strukturu projektu (Outline), výsledky běhu jednotkových testů (PyUnit), výsledky zjištění pokrytí kódu testy (Code Coverage), seznam problémů nalezených v&nbsp;projektu (Problems) či seznam TODO zapsaných do zdrojových kódů (Tasks). Mezi pohledy patří i konzole (Console) zobrazující standardní i chybový výstup. Se všemi těmito okny lze manipulovat, tj.&nbsp;přemisťovat je, &bdquo;vytáhnout&ldquo; je mimo hlavní okno Eclipse apod. S&nbsp;popisem významu těchto oken se seznámíme příště.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Ladění aplikací naprogramovaných v&nbsp;Pythonu</h2>

<p>Samostatnou kapitolu si určitě zaslouží podpora pro ladění aplikací naprogramovaných v&nbsp;Pythonu. V&nbsp;prostředí PyDev je možné již v&nbsp;základní perspektivě do zdrojového kódu přidávat breakpointy a nastavovat jejich vlastnosti (především podmínku, při jejímž splnění se běh aplikace skutečně na breakpointu zastaví). Ovšem pro samotné krokování a ladění aplikací existuje speciální perspektiva obsahující několik nových typů pohledů. Jedná se především o pohled obsahující seznam viditelných proměnných (Variables) &ndash; obsah tohoto podokna se mění v&nbsp;závislosti na výběru vlákna (thread) v&nbsp;pohledu Debug, protože každé vlákno vlastní samostatnou strukturu zásobníkových rámců (<i>stack frames</i>). PyDev ve spolupráci s&nbsp;debuggerem rozpozná u každé proměnné jak její aktuální hodnotu, tak i typ této hodnoty. V&nbsp;průběhu krokování se testuje, která proměnná změnila svoji hodnotu a taková proměnná je následně obarvena (žluté pozadí), což samozřejmě usnadňuje ladění.</p>

<img class="alignnone size-medium wp-image-6744" src="http://mojefedora.cz/wp-content/uploads/2016/03/18-450x338.png" alt="18" width="450" height="338" />
<p><i>Obrázek 18: Přepnutí do perspektivy použité při ladění.</i></p>

<p>V&nbsp;perspektivě Debug se taktéž mění význam některých klávesových zkratek. Týká se to zejména zkratek používaných při krokování: funkční klávesa <strong>F5</strong> se používá pro provedení jednoho kroku s&nbsp;případným vstupem do funkce či metody, klávesa <strong>F6</strong> po provedení jednoho kroku, přičemž případné volání funkce/metody je považováno za jediný krok, funkční klávesa <strong>F7</strong> je používána pro dokončení aktuální funkce/metody, klávesa <strong>F8</strong> pro opětovné &bdquo;rozjetí&ldquo; aplikace (ta se buď dokončí, spadne při vzniku výjimky nebo se zastaví na dalším breakpointu) a konečně taktéž důležitou klávesovou zkratkou je <strong>Ctrl+F2</strong>, která aplikaci násilně ukončí. V&nbsp;případě potřeby lze klávesové zkratky měnit a upravit si tak Eclipse+PyDev způsobem, který vývojáři vyhovuje nejvíce.</p>

<img class="alignnone size-medium wp-image-6745" src="http://mojefedora.cz/wp-content/uploads/2016/03/19-450x338.png" alt="19" width="450" height="338" />
<p><i>Obrázek 19: Takto vypadá perspektiva Debug při ladění programu napsaného v&nbsp;Pythonu. Jestliže máte pocit, že je tento pohled poněkud komplikovaný a obsahuje mnoho informací, je možné jakékoliv podokno přesunout na druhý (či třetí) monitor.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Obsah následující části seriálu</h2>

<p>Jak jsme si již naznačili <a href="#k02">ve druhé kapitole</a>, nabízí PyDev vývojářům několik dalších konceptů a technologií, s&nbsp;nimiž se seznámíme v&nbsp;následující části tohoto seriálu. Jedná se především o podporu pro automatické či poloautomatické opravy chyb ve zdrojových kódech, automatické doplňování identifikátorů, použití šablon pro vytvoření části kódu a zejména pak o nástroje sloužící k&nbsp;refaktoringu. Taktéž si popíšeme propojení PyDev s&nbsp;nástroji pro práci s&nbsp;jednotkovými testy (spouštění, výpis výsledků) i o ladění aplikací spuštěných mimo samotné vývojové prostředí, tj.&nbsp;o ladění &bdquo;živých&ldquo; aplikací.</p>

<img class="alignnone size-medium wp-image-6746" src="http://mojefedora.cz/wp-content/uploads/2016/03/20-450x338.png" alt="20" width="450" height="338" />
<p><i>Obrázek 20: Automatické vygenerování properties z&nbsp;vybraných atributů. V&nbsp;tomto dialogu lze zvolit, ze kterých atributů se properties vytvoří a jaké operace s&nbsp;nimi budou povoleny.</i></p>

<img class="alignnone size-medium wp-image-6747" src="http://mojefedora.cz/wp-content/uploads/2016/03/21-450x338.png" alt="21" width="450" height="338" />
<p><i>Obrázek 21: Automatické vygenerování properties z&nbsp;vybraných atributů. Zde již PyDev ukazuje, na které místo ve zdrojovém kódu se properties a s&nbsp;nimi spojené metody vloží.</i></p>

<img class="alignnone size-medium wp-image-6748" src="http://mojefedora.cz/wp-content/uploads/2016/03/22-450x338.png" alt="22" width="450" height="338" />
<p><i>Obrázek 22: Refaktoring &ndash; část kódu se přenáší do nové funkce či metody. Zde nejprve označujeme tu část kódu, ze které chceme vytvořit novou funkci.</i></p>

<img class="alignnone size-medium wp-image-6749" src="http://mojefedora.cz/wp-content/uploads/2016/03/23-450x338.png" alt="23" width="450" height="338" />
<p><i>Obrázek 23: Refaktoring &ndash; část kódu se přenáší do nové funkce či metody. PyDev správně detekoval, že <strong>n</strong> je parametr, který bude do nové funkce vstupovat.</i></p>

<img class="alignnone size-medium wp-image-6750" src="http://mojefedora.cz/wp-content/uploads/2016/03/24-450x338.png" alt="24" width="450" height="338" />
<p><i>Obrázek 24: Refaktoring &ndash; část kódu se přenáší do nové funkce či metody. A zde již můžeme vidět výslednou funkci vloženou zpět do zdrojového kódu.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Předchozí části seriálu</h2>

<ol>

<li>Vývojová prostředí ve Fedoře (1. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-1-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-1-dil/</a>
</li>

<li>Vývojová prostředí ve Fedoře (2. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/</a>
</li>

<li>Vývojová prostředí ve Fedoře (3. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/</a>
</li>

<li>Vývojová prostředí ve Fedoře (4. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/</a>
</li>

</ol>

<img class="alignnone size-medium wp-image-6751" src="http://mojefedora.cz/wp-content/uploads/2016/03/25-450x326.png" alt="25" width="450" height="326" />
<p><i>Obrázek 25: Nastavení prostředí pro Jython. Zde je pro ilustraci dialog zobrazený na produkčním systému, v&nbsp;němž se používá dnes již poněkud zastaralá Java 6 (a nikoli Java 7 a Java 8, jak je tomu na moderních distribucích typu Fedora).</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Odkazy na Internetu</h2>

<ol>

<li>Seznámení s&nbsp;Python IDE Spyder (článek vyšel zde na mojefedora.cz)<br />
<a href="http://mojefedora.cz/seznameni-s-python-ide-spyder/">http://mojefedora.cz/seznameni-s-python-ide-spyder/</a>
</li>

<li>Stránka s&nbsp;popisem různých IDE pro Python<br />
<a href="http://quintagroup.com/cms/python/ide">http://quintagroup.com/cms/python/ide</a>
</li>

<li>Eclipse (stránka o frameworku na Fedoraproject.org)<br />
<a href="https://fedoraproject.org/wiki/Eclipse">https://fedoraproject.org/wiki/Eclipse</a>
</li>

<li>PyDev (hlavní stránka)<br />
<a href="http://pydev.sourceforge.net/index.html">http://pydev.sourceforge.net/index.html</a>
</li>

<li>PyDev (download, v podstatě není zapotřebí)<br />
<a href="http://pydev.sourceforge.net/download.html">http://pydev.sourceforge.net/download.html</a>
</li>

<li>PyDev (stránka s metainformacemi o PyDev pluginu, použita v Eclipse)<br />
<a href="http://www.pydev.org/updates/">http://www.pydev.org/updates/</a>
</li>

<li>PyDev (stránka s pluginem, použita v Eclipse)<br />
<a href="https://dl.bintray.com/fabioz/pydev/4.5.4/">https://dl.bintray.com/fabioz/pydev/4.5.4/</a>
</li>

<li>Certifikát, který lze do Eclipse doinstalovat<br />
<a href="http://www.pydev.org/pydev_certificate.cer">http://www.pydev.org/pydev_certificate.cer</a>
</li>

<li>PyDev FAQ<br />
<a href="http://pydev.sourceforge.net/faq.html">http://pydev.sourceforge.net/faq.html</a>
</li>

<li>PyDev (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PyDev">https://en.wikipedia.org/wiki/PyDev</a>
</li>

<li>Python (oficiální stránky projektu)<br />
<a href="https://www.python.org/">https://www.python.org/</a>
</li>

<li>Jython<br />
<a href="http://www.jython.org/">http://www.jython.org/</a>
</li>

<li>IronPython<br />
<a href="http://ironpython.net/">http://ironpython.net/</a>
</li>

<li>Python 3.5.1 documentation<br />
<a href="https://docs.python.org/3/">https://docs.python.org/3/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2016</small></p>
</body>
</html>

