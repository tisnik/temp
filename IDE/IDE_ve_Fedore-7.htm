<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Vedle běžných IDE, mezi něž patří například Eclipse, Netbeans či Visual Studio, se v&nbsp;některých případech můžeme setkat s&nbsp;poněkud odlišným přístupem programátorů k&nbsp;nástrojům používaným pro vývoj. Příkladem může být například systém IPython nabízející jak vylepšenou interaktivní smyčku REPL běžící v&nbsp;terminálu či ve vlastním okně (Qt Console), tak i takzvaný &bdquo;diář&ldquo; představovaný nástrojem IPython Notebook. Právě s&nbsp;IPythonem se seznámíme v&nbsp;dnešním článku.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook</a></p>
<p><a href="#k02">2. První používaný koncept: klasická IDE</a></p>
<p><a href="#k03">3. Alternativní koncepty: interaktivní smyčka REPL a diář (notebook)</a></p>
<p><a href="#k04">4. Představuje se IPython</a></p>
<p><a href="#k05">5. Interaktivní rozhraní IPythonu</a></p>
<p><a href="#k06">6. IPython Qt Console aneb vylepšený pseudoterminál</a></p>
<p><a href="#k07">7. Zobrazení grafů přímo v&nbsp;Qt Consoli</a></p>
<p><a href="#k08">8. Rozdělení plochy Qt Console na několik samostatných terminálů</a></p>
<p><a href="#k09">9. IPython Notebook</a></p>
<p><a href="#k10">10. Použití IPython Notebooku</a></p>
<p><a href="#k11">11. Předchozí části seriálu</a></p>
<p><a href="#k12">12. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook</h2>

<p>V&nbsp;předchozích částech seriálu o integrovaných vývojových prostředích, která je možné použít (nejenom) pro vývojáře pracující ve Fedoře, jsme se zaměřili především na IDE s&nbsp;vlastním textovým či grafickým uživatelským rozhraním nabízejícím různé pohledy na vytvářený a laděný projekt. Tato IDE jsou v&nbsp;naprosté většině případů postavena na konceptu, který si možná někteří uživatelé pamatují ještě z&nbsp;dob kralování Turbo Pascalu společnosti Borland: v&nbsp;integrovaném vývojovém prostředí se nějakým způsobem vytvoří projekt skládající se (obecně) z&nbsp;mnoha zdrojových souborů, takže IDE vývojářům nabízí okno s&nbsp;hierarchií souborů a tříd použitých v&nbsp;projektu, dále pak okna s&nbsp;integrovaným programátorským textovým editorem a popř.&nbsp;i další specializovaná okna používaná například v&nbsp;průběhu ladění či při používání systémů pro správu verzí (GIT, Mercurial, Subversion atd.).</p>

<img class="alignnone size-medium wp-image-6838" src="http://mojefedora.cz/wp-content/uploads/2016/04/01-450x281.png" alt="01" width="450" height="281" />
<p><i>Obrázek 1: Integrované vývojové prostředí Turbo Pascalu pro DOS.</i></p>

<p>Některá IDE, zejména pak prostředí založená na platformě Eclipse, tento koncept dále rozšiřují, protože samotná okna (v&nbsp;prostředí Eclipse se jim říká pohledy neboli <i>views</i>) jsou sdružena do perspektiv (<i>perspective</i>), mezi kterými se programátor může automaticky či manuálně přepínat v&nbsp;závislosti na právě prováděné činnosti. Například při úpravách zdrojového kódu je použita perspektiva, jejíž hlavní součástí je okno programátorského editoru, při ladění se naopak uplatní perspektiva zobrazující jen menší část zdrojového kódu, ovšem doplněná o výpis aktivních proměnných, vláken aplikace, zásobníkových rámců či obsahu vybrané části operační paměti, další perspektiva se použije při porovnávání dvou verzí zdrojových kódů apod.</p>

<img src="http://mojefedora.cz/wp-content/uploads/2016/03/04_-450x336.png" alt="04_" width="450" height="336" class="alignnone size-medium wp-image-6800" />
<p><i>Obrázek 2: Jedna z&nbsp;možností refaktoringu nabízená prostředím PyDev (založeno na Eclipse).</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. První používaný koncept: klasická IDE</h2>

<p>Klasická integrovaná vývojová prostředí jsou většinou určena pro práci na rozsáhlejších projektech s&nbsp;mnoha zdrojovými soubory a popř.&nbsp;i s&nbsp;košatou hierarchií objektů (ostatně právě to byl jeden z&nbsp;hlavních důvodů jejich vzniku &ndash; programátoři se museli začít orientovat ve stále větších a taktéž komplikovanějších projektech). Po takových integrovaných vývojových prostředích se většinou požaduje především co nejsnadnější orientace ve zpracovávaném projektu, automatické doplňování kódu (například názvů metod), přístup ke všem globálním symbolům (moduly, třídy, globální proměnné, funkce) společně s&nbsp;interaktivní filtrací seznamu symbolů, podpora pro ladění vznikajících aplikací a popř.&nbsp;i integrace s&nbsp;nástroji pro testování a refaktoring zdrojových kódů.</p>

<img class="alignnone size-medium wp-image-6839" src="http://mojefedora.cz/wp-content/uploads/2016/04/03-450x307.png" alt="03" width="450" height="307" />
<p><i>Obrázek 3: I pokročilý textový editor Atom je možné nakonfigurovat do podoby integrovaného vývojového prostředí.</i></p>

<p>Mezi takto koncipovaná integrovaná vývojová prostředí patří <a href="http://mojefedora.cz/eclipse-integrovane-vyvojove-prostredi-pro-javu-i-dalsi-programovaci-jazyky/">Eclipse</a> (Java Development Toolkit, C/C++ Development Toolkit, <a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev/">PyDev</a>, ...), IDEA, Netbeans (opět s&nbsp;podporou pro větší množství jazyků), Visual Studio či poněkud méně ambiciózní projekty, jako je <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-1-dil/">Anjuta</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/">Geany</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/">Code::Blocks</a>, Qt Creator, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">IDLE</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">Eric</a>, <a href="http://mojefedora.cz/seznameni-s-python-ide-spyder/">Spyder</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/">Gambas</a> popř.&nbsp;<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/">Lazarus</a> (mnohá z&nbsp;těchto prostředí se zaměřují na podporu jen jednoho programovacího jazyka, další prostředí se snaží být univerzálně použitelná). Do určité míry je možné integrované vývojové prostředí vytvořit například i z&nbsp;textových editorů Vim, Emacs a Atom doplněných o potřebné moduly (pluginy).</p>

<img class="alignnone size-medium wp-image-6840" src="http://mojefedora.cz/wp-content/uploads/2016/04/04-450x397.png" alt="04" width="450" height="397" />
<p><i>Obrázek 4: Především programátoři používající C++ ocení možnosti prostředí Code::Blocks.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Alternativní koncepty: interaktivní smyčka REPL a diář (notebook)</h2>

<p>Někteří programátoři, popř.&nbsp;ti uživatelé, kteří programovací jazyk musí používat pro řešení problémů ve své profesi (ovšem vývoj aplikací není jejich hlavní pracovní náplní), však preferují dosti odlišný způsob práce, který je v&nbsp;mnohem větší míře založen na interakci mezi vývojářem a systémem nebo vznikající aplikací. V&nbsp;takových případech ustupuje správa projektů poněkud do pozadí a naopak se začíná využívat odlišný druh vývojového prostředí založený buď na takzvané interaktivní smyčce REPL (<i>Read-Eval-Print-Loop</i>) nebo na konceptu takzvaných diářů (<i>notebooks</i>), které jsou už poměrně dlouho velmi populární především v&nbsp;systémech pro numerickou matematiku, analýzy, statistické výpočty i symbolickou matematiku (manipulace se symboly a výrazy, integrace, derivace, zjednodušování výrazů atd.).</p>

<img class="alignnone size-medium wp-image-6841" src="http://mojefedora.cz/wp-content/uploads/2016/04/05.png" alt="05" width="336" height="240" />
<p><i>Obrázek 5: Za zjednodušenou formu interaktivní smyčky REPL je možné považovat i přímý mód (direct mode) použitý například v&nbsp;BASICu. Na tomto screenshotu je v&nbsp;přímém módu zapsán příkaz <strong>LIST</strong>.</i></p>

<p>Poměrně velkou předností těchto systémů oproti klasickým integrovaným vývojovým prostředím je zejména okamžitá zpětná vazba systému na zadávané deklarace a příkazy. To uživatelům umožňuje se snadněji a taktéž rychleji seznámit jak s&nbsp;vlastním programovacím jazykem (nalezení chyby na jediném programovém řádku je určitě snazší, než analýza mnohdy několikastránkového výpisu vytvořeného překladačem), tak i s&nbsp;použitými knihovnami. To je dnes vlastně ještě důležitější, protože mnohdy vývoj spočívá v&nbsp;&bdquo;lepení&ldquo; již existujících komponent či knihoven. Aplikace vytvářené v&nbsp;takto koncipovaných prostředích většinou vznikají systémem zdola-nahoru (<i>bottom-up programming</i>), tj.&nbsp;postupně se skládají z&nbsp;funkcí a tříd, které mohou být ihned po své deklaraci otestovány.</p>

<img class="alignnone size-medium wp-image-6842" src="http://mojefedora.cz/wp-content/uploads/2016/04/06-450x280.png" alt="06" width="450" height="280" />
<p><i>Obrázek 6: Koncept diáře je použit například v&nbsp;nástroji Gorilla REPL, který mohou využít programátoři pracující s&nbsp;jazykem Clojure.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Představuje se IPython</h2>

<p>V&nbsp;dnešním článku se zaměříme na nástroj nazvaný <i>IPython</i>, který zpřístupňuje možnosti interaktivní komunikace s&nbsp;interpretrem těm vývojářům i dalším uživatelům, kteří používají dnes velmi populární programovací jazyk Python (i když je pravda, že struktura IPythonu ve skutečnosti dovoluje použití dalších programovacích jazyků). Architektura nástroje IPython je navržena takovým způsobem, že je do značné míry modulární, což mj.&nbsp;znamená, že uživatelé mohou s&nbsp;IPythonem komunikovat hned několika možnými způsoby. My se v&nbsp;tomto článku zaměříme zejména na použití interaktivního shellu (což je vlastně v&nbsp;mnoha ohledech vylepšená varianta smyčky REPL) a taktéž na IPython Notebook, což je naopak implementace konceptu diáře (notebooku). Další množnosti komunikace s&nbsp;IPythonem spočívají v&nbsp;použití 0MQ (Zero MQ), což je zjednodušeně řečeno řešení postavené na bázi socketů.</p>

<img class="alignnone size-medium wp-image-6843" src="http://mojefedora.cz/wp-content/uploads/2016/04/07-450x296.png" alt="07" width="450" height="296" />
<p><i>Obrázek 7: IPython je možné ovládat z&nbsp;terminálu (což je základní možnost).</i></p>

<p>Možnosti IPythonu jsou však ve skutečnosti mnohem větší, než &bdquo;pouhé&ldquo; vylepšené rozhraní mezi uživatelem a interpretrem. Architektura IPythonu například umožňuje, aby se komplikované výpočty neprováděly přímo na tom počítači, kde je spuštěn interaktivní shell (klient), ale aby se pouze předaly dalším strojům tvořícím výpočetní farmu. Díky tomu &ndash; a taktéž díky propojení IPythonu s&nbsp;knihovnami <i>NumPy</i> a <i>SciPy</i> i s&nbsp;nástrojem <i>matplotlib</i> &ndash; se IPython používá i v&nbsp;těch oblastech, kde se provádí mnoho složitých a/nebo časově náročných výpočtů, což může znít poněkud paradoxně, když si uvědomíme, že samotný Python je v&nbsp;těchto ohledech dosti pomalý jazyk (ve skutečnosti <i>NumPy</i> předává výpočty nativnímu kódu psanému v&nbsp;C popř.&nbsp;ve Fortranu). K&nbsp;této problematice se ostatně vrátíme v&nbsp;navazujícím textu, kde se budeme podrobněji zabývat především propojením <i>NumPy</i> a <i>matplotlib</i>.</p>

<img class="alignnone size-medium wp-image-6844" src="http://mojefedora.cz/wp-content/uploads/2016/04/08-450x275.png" alt="08" width="450" height="275" />
<p><i>Obrázek 8: Pro použití nástroje IPython Notebook postačuje použít jakýkoli moderní webový prohlížeč.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Interaktivní rozhraní IPythonu</h2>

<p>Základním modulem určeným pro komunikaci uživatele či programátora s&nbsp;jádrem IPythonu je interaktivní shell. Ten se spouští příkazem <strong>ipython</strong> popř.&nbsp;<strong>ipython3</strong>, samozřejmě v&nbsp;závislosti na tom, zda vyžadujete práci s&nbsp;interpretrem jazyka Python 2.x či naopak jeho novější varianty Python 3.x (navíc se jedná i o odlišné balíčky, takže je sice možné mít nainstalován jak Python 2.x i Python 3.x, ovšem IPython je nutné taktéž nainstalovat ze dvou oddělených balíčků):

<img class="alignnone size-medium wp-image-6845" src="http://mojefedora.cz/wp-content/uploads/2016/04/09-450x296.png" alt="09" width="450" height="296" />
<p><i>Obrázek 9: IPython využívající interpret jazyka Python 2.x.</i></p>

<img class="alignnone size-medium wp-image-6846" src="http://mojefedora.cz/wp-content/uploads/2016/04/10-450x296.png" alt="10" width="450" height="296" />
<p><i>Obrázek 10: IPython využívající interpret jazyka Python 3.x.</i></p>

<p>Interaktivní shell IPythonu se sice na první pohled může podobat klasickému interaktivnímu rozhraní interpretru Pythonu, ve skutečnosti jsou však možnosti IPythonu mnohem větší. Podívejme se na první podstatný rozdíl, který má dopad zejména na praktické použití IPythonu. Pokud v&nbsp;interpretru Pythonu potřebujeme například napsat programovou smyčku, je nutné provést ruční odsazení těla smyčky, jinak dojde k&nbsp;chybě. Namísto toho v&nbsp;IPythonu se odsazení provede automaticky, protože konec vnořeného bloku se oznamuje prázdným řádkem. To je pro interaktivní použití mnohem přirozenější chování:</p>

<img class="alignnone size-medium wp-image-6847" src="http://mojefedora.cz/wp-content/uploads/2016/04/11-450x296.png" alt="11" width="450" height="296" />
<p><i>Obrázek 11: Chování klasického interpretru Pythonu při psaní vnořených bloků bez odsazení.</i></p>

<img class="alignnone size-medium wp-image-6848" src="http://mojefedora.cz/wp-content/uploads/2016/04/12-450x296.png" alt="12" width="450" height="296" />
<p><i>Obrázek 12: Stejný kód se v&nbsp;IPythonu bez problémů provede.</i></p>

<p>Mezi další přednosti interaktivního shellu IPythonu patří automatické doplňování kódu klávesou <strong>Tab</strong>, plnohodnotná historie zadaných příkazů (podobně jako v&nbsp;BASHi, tedy například s&nbsp;velmi užitečnou klávesovou zkratkou <strong>Ctrl+R</strong> určenou pro hledání v&nbsp;historii) a taktéž speciální pseudopříkazy (nazývané &bdquo;magické&ldquo;). Pokud například potřebujete zjistit podrobnější informace o nějakém identifikátoru (jménu funkce, metody, třídy či proměnné), stačí za název vložit znak otazníku:</p>

<img class="alignnone size-medium wp-image-6849" src="http://mojefedora.cz/wp-content/uploads/2016/04/13-450x296.png" alt="13" width="450" height="296" />
<p><i>Obrázek 13: Zobrazení podrobnějších informací o identifikátoru.</i></p>

<img class="alignnone size-medium wp-image-6850" src="http://mojefedora.cz/wp-content/uploads/2016/04/14-450x296.png" alt="14" width="450" height="296" />
<p><i>Obrázek 14: Zobrazení podrobnějších informací o identifikátoru.</i></p>

<p>Další magické pseudopříkazy začínají znakem procenta. Například lze zjistit a zobrazit dokumentaci ke zvolené třídě, metodě či funkci, a to konkrétně pseudopříkazem <strong>%pdoc</strong>. Opět se podívejme na jednoduchý příklad:</p>

<img class="alignnone size-medium wp-image-6851" src="http://mojefedora.cz/wp-content/uploads/2016/04/15-450x296.png" alt="15" width="450" height="296" />
<p><i>Obrázek 15: Zobrazení dokumentace s&nbsp;využitím pseudopříkazu <strong>%pdoc</strong>.</i></p>

<p>Všechny magické pseudopříkazy lze vypsat s&nbsp;využitím <strong>%lsmagic</strong> (i názvy pseudopříkazů se samozřejmě mohou doplňovat klávesou <strong>Tab</strong>):</p>

<img class="alignnone size-medium wp-image-6852" src="http://mojefedora.cz/wp-content/uploads/2016/04/16-450x296.png" alt="16" width="450" height="296" />
<p><i>Obrázek 16: Výpis všech dostupných pseudopříkazů.</i></p>

<p>Poznámka: IPython obsahuje i několik aliasů systémových příkazů, takže můžete použít například příkaz <strong>ls</strong>, který spustí skutečné <strong>ls</strong> a navíc obarví výsledek podle typů nalezených a vypisovaných souborů. Podobně bude funkční i příkaz <strong>pwd</strong> apod.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. IPython Qt Console aneb vylepšený pseudoterminál</h2>

<p>Někteří uživatelé systému IPython preferují namísto klasického terminálu (resp.&nbsp;přesněji řečeno emulátoru terminálu), v&nbsp;němž běží IPython, použití nástroje nazvaného <i>IPython Qt Console</i>. Jak název tohoto nástroje naznačuje, jedná se o obdobu terminálu či konzole, ovšem s&nbsp;několika vylepšeními. Mezi první vylepšení patří především existence &bdquo;bublinové nápovědy&ldquo;, která se zobrazí například ve chvíli, kdy se mají zadávat parametry funkce či metody. Mezi další vylepšení patří podpora pro vkládání grafů, obrázků a dalších mediálních dat přímo do plochy Qt Console, čímž se možnosti tohoto nástroje přibližují dále popsanému IPython Notebooku (toto téma si osvětlíme v&nbsp;navazující kapitole). Poznámka na okraj: i když Qt Console používá knihovnu Qt, lze ji bez problémů použít i v&nbsp;Gnome Shellu či v&nbsp;jakémkoli jiném prostředí včetně XFCE či Fluxboxu.</p>

<img class="alignnone size-medium wp-image-6853" src="http://mojefedora.cz/wp-content/uploads/2016/04/17-450x348.png" alt="17" width="450" height="348" />
<p><i>Obrázek 17: Pohled na spuštěnou Qt Consoli.</i></p>

<p>Pokud chcete použít Qt Consoli, použijte příkaz:</p>

<pre>
ipython qtconsole
</pre>

<p>popř.:</p>

<pre>
ipython3 qtconsole
</pre>

<img class="alignnone size-medium wp-image-6854" src="http://mojefedora.cz/wp-content/uploads/2016/04/18-450x403.png" alt="18" width="450" height="403" />
<p><i>Obrázek 18: Bublinová nápověda je jednou z&nbsp;vylepšení Qt Console oproti klasickému interaktivnímu interpretru.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Zobrazení grafů přímo v&nbsp;Qt Consoli</h2>

<p>V&nbsp;případě, že se IPython Qt Console spustí následujícím příkazem:</p>

<pre>
ipython qtconsole --matplotlib inline
</pre>

<p>popř.&nbsp;opět:</p>

<pre>
ipython3 qtconsole --matplotlib inline
</pre>

<p>je možné přímo na plochu konzole vykreslovat grafy s&nbsp;využitím systému <i>matplotlib</i>. Prozatím bez podrobnějšího vysvětlení (to bude uvedeno v&nbsp;navazujícím článku) se podívejme, jak je možné jen několika příkazy zobrazit graf s&nbsp;průběhem funkce:</p>

<img class="alignnone size-medium wp-image-6855" src="http://mojefedora.cz/wp-content/uploads/2016/04/19-450x369.png" alt="19" width="450" height="369" />
<p><i>Obrázek 19: Vykreslení funkce s&nbsp;využitím pouhých pěti příkazů (z&nbsp;toho dva příkazy slouží k&nbsp;importu knihoven). Podrobnější informace budou uvedeny v&nbsp;navazujícím článku.</i></p>

<p>Poznámka: pokud by se při spouštění konzole neuvedl přepínač <strong>--matplotlib inline</strong>, zobrazil by se graf v&nbsp;samostatném okně, což je patrné z&nbsp;následujícího screenshotu:</p>

<img class="alignnone size-medium wp-image-6856" src="http://mojefedora.cz/wp-content/uploads/2016/04/20-450x186.png" alt="20" width="450" height="186" />
<p><i>Obrázek 20: Zobrazení průběhu funkce v&nbsp;samostatném okně (použit je balíček python-tk, tj.&nbsp;napojení na knihovnu Tk jazyka Tcl).</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Rozdělení plochy Qt Console na několik samostatných terminálů</h2>

<p>Idea terminálu, do něhož se interaktivně zadávají příkazy a postupně se zobrazuje jejich výsledek, je sice v&nbsp;mnoha oblastech velmi užitečná a oblíbená, ovšem například pro zobrazení nápovědy by bylo praktičtější si plochu terminálu rozdělit do většího množství podoken. V&nbsp;případě IPython Qt Console je to možné, protože při jejím spuštění je možné zadat i nepovinný parametr <strong>--paging</strong>, kterým se řídí rozdělení konzole vertikálně či horizontálně:</p>

<pre>
ipython3 qtconsole --paging=hsplit
ipython3 qtconsole --paging=vsplit
</pre>

<p>Při použití Python 2.x pak:</p>

<pre>
ipython qtconsole --paging=hsplit
ipython qtconsole --paging=vsplit
</pre>

<p>V&nbsp;této chvíli začne být aktivní menu View &rarr;Pager, v&nbsp;němž se nacházejí příkazy pro horizontální či vertikální rozdělení plochy terminálu. Podívejme se, jak v&nbsp;praxi obě možnosti vypadají:</p>

<img class="alignnone size-medium wp-image-6857" src="http://mojefedora.cz/wp-content/uploads/2016/04/21-450x414.png" alt="21" width="450" height="414" />
<p><i>Obrázek 21: Qt Console při vertikálním rozdělení svého okna.</i></p>

<img class="alignnone size-medium wp-image-6858" src="http://mojefedora.cz/wp-content/uploads/2016/04/22-450x247.png" alt="22" width="450" height="247" />
<p><i>Obrázek 22: Qt Console při horizontálním rozdělení svého okna</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. IPython Notebook</h2>

<p>Třetím rozhraním k&nbsp;nástroji IPython je takzvaný <i>IPython Notebook</i>. Jedná se o propracované grafické uživatelské rozhraní implementované systémem klient-server, kde klientem je libovolný moderní webový prohlížeč a server je přímo součástí modulárního IPythonu. IPython notebook se spouští příkazem:</p>

<pre>
$ <strong>ipython3 notebook</strong>
&nbsp;
2016-04-01 22:10:52.173 [NotebookApp] Using existing profile dir: '/home/tester/.config/ipython/profile_default'
2016-04-01 22:10:52.177 [NotebookApp] Using system MathJax
2016-04-01 22:10:52.185 [NotebookApp] Serving notebooks from local directory: /home/tester
2016-04-01 22:10:52.185 [NotebookApp] The IPython Notebook is running at: http://127.0.0.1:8888/
2016-04-01 22:10:52.185 [NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
</pre>

<p>Povšimněte si, že se po zadání tohoto příkazu po chvíli na terminálu zobrazí URL, na níž je možné rozhraní notebooku najít (zde se konkrétně jedná o lokální adresu a port 8888. Alternativně lze <i>IPython Notebook</i> spustit s&nbsp;volbou --pylab inline, který zajistí, že se případné grafy budou vykreslovat přímo do okna prohlížeče:</p>

<pre>
<strong>ipython3 notebook --pylab inline</strong>
</pre>

<img class="alignnone size-medium wp-image-6859" src="http://mojefedora.cz/wp-content/uploads/2016/04/23-450x366.png" alt="23" width="450" height="366" />
<p><i>Obrázek 23: Grafické uživatelské rozhraní IPython Notebooku ihned po jeho spuštění.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Použití IPython Notebooku</h2>

<p>Použitím <i>IPython Notebooku</i> se budeme podrobně zabývat příště, ovšem již dnes si můžeme ve stručnosti ukázat, jak se s&nbsp;tímto nástrojem pracuje. Je to ve skutečnosti velmi jednoduché, protože po výběru diáře (lze jich vytvořit a sdílet libovolné množství) se příkazy zapisují do takzvaných buněk (<i>cell</i>) a klávesovou zkratkou <strong>Shift+Enter</strong> se tyto příkazy následně spouští (a to v&nbsp;libovolném pořadí):</p>

<img class="alignnone size-medium wp-image-6860" src="http://mojefedora.cz/wp-content/uploads/2016/04/24-450x368.png" alt="24" width="450" height="368" />
<p><i>Obrázek 24: Takto vypadá prázdný diář. Šedá plocha představuje buňku, do které je možné zadávat příkazy.</i></p>

<img class="alignnone size-medium wp-image-6861" src="http://mojefedora.cz/wp-content/uploads/2016/04/25-450x268.png" alt="25" width="450" height="268" />
<p><i>Obrázek 25: Zápis příkazů, včetně podpory pro zobrazení bublinové nápovědy.</i></p>

<p>Jednotlivé diáře se ukládají do lokálního souboru a jejich výchozím formátem je datová struktura uložená v&nbsp;JSONu. Jen pro zajímavost se podívejme, jak tato struktura vypadá pro náš příklad (vynechám jen vložený rastrový obrázek s&nbsp;grafem):</p>

<pre>
{
 "metadata": {
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import matplotlib.pyplot as plot"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import numpy as np"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 3
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "x=np.linspace(0,1)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 4
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "y=np.sin(5*x)/(x+0.5)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 14
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plot.plot(x,y)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "[&lt;matplotlib.lines.Line2D at 0x7f9e542709e8&gt;]"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "data obrazku, uriznuto"
       "text": [
        "&lt;matplotlib.figure.Figure at 0x7f9e542ef550&gt;"
       ]
      }
     ],
     "prompt_number": 15
    }
   ],
   "metadata": {}
  }
 ]
}
</pre>

<img class="alignnone size-medium wp-image-6862" src="http://mojefedora.cz/wp-content/uploads/2016/04/26-450x344.png" alt="26" width="450" height="344" />
<p><i>Obrázek 26: Zobrazení grafu (průběhu funkce) přímo v&nbsp;okně prohlížeče.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Předchozí části seriálu</h2>

<ol>
<li>Vývojová prostředí ve Fedoře (1. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-1-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-1-dil/</a>
</li>

<li>Vývojová prostředí ve Fedoře (2. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/</a>
</li>

<li>Vývojová prostředí ve Fedoře (3. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/</a>
</li>

<li>Vývojová prostředí ve Fedoře (4. díl)<br />
<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: PyDev<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: PyDev (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev-2-cast/</a>
</li>

</ol>



<p><a name="k12"></a></p>
<h2 id="k12">12. Odkazy na Internetu</h2>

<ol>

<li>IPython homepage<br />
<a href="http://ipython.org/">http://ipython.org/</a>
</li>

<li>Dokumentace k IPythonu<br />
<a href="http://ipython.org/documentation.html#">http://ipython.org/documentation.html#</a>
</li>

<li>IPython Tutorial<br />
<a href="http://ipython.readthedocs.org/en/stable/interactive/tutorial.html">http://ipython.readthedocs.org/en/stable/interactive/tutorial.html</a>
</li>

<li>NumPy Home Page<br />
<a href="http://www.numpy.org/">http://www.numpy.org/</a>
</li>

<li>NumPy (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/NumPy">https://en.wikipedia.org/wiki/NumPy</a>
</li>

<li>Matplotlib Home Page<br />
<a href="http://matplotlib.org/">http://matplotlib.org/</a>
</li>

<li>matplotlib (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Matplotlib">https://en.wikipedia.org/wiki/Matplotlib</a>
</li>

<li>The cell magics in IPython<br />
<a href="http://nbviewer.jupyter.org/github/ipython/ipython/blob/1.x/examples/notebooks/Cell%20Magics.ipynb">http://nbviewer.jupyter.org/github/ipython/ipython/blob/1.x/examples/notebooks/Cell%20Magics.ipynb</a>
</li>

<li>0MQ Home Page<br />
<a href="http://zeromq.org/">http://zeromq.org/</a>
</li>

<li>Is IPython Notebook ever used as an IDE, or merely for presentations?<br />
<a href="https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/">https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/</a>
</li>

<li>The IDE as a Bad Programming Language Enabler <br />
<a href="https://dzone.com/articles/ide-bad-programming-language">https://dzone.com/articles/ide-bad-programming-language</a>
</li>

<li>Enhanced Interactive Python with IPython<br />
<a href="http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html">http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html</a>
</li>

<li>Direct mode<br />
<a href="https://en.wikipedia.org/wiki/Direct_mode">https://en.wikipedia.org/wiki/Direct_mode</a>
</li>

<li>Seznámení s&nbsp;Python IDE Spyder (článek vyšel zde na mojefedora.cz)<br />
<a href="http://mojefedora.cz/seznameni-s-python-ide-spyder/">http://mojefedora.cz/seznameni-s-python-ide-spyder/</a>
</li>

<li>Stránka s&nbsp;popisem různých IDE pro Python<br />
<a href="http://quintagroup.com/cms/python/ide">http://quintagroup.com/cms/python/ide</a>
</li>

<li>Eclipse (stránka o frameworku na Fedoraproject.org)<br />
<a href="https://fedoraproject.org/wiki/Eclipse">https://fedoraproject.org/wiki/Eclipse</a>
</li>

<li>PyDev (hlavní stránka)<br />
<a href="http://pydev.sourceforge.net/index.html">http://pydev.sourceforge.net/index.html</a>
</li>

<li>PyDev (download, v podstatě není zapotřebí)<br />
<a href="http://pydev.sourceforge.net/download.html">http://pydev.sourceforge.net/download.html</a>
</li>

<li>PyDev (stránka s metainformacemi o PyDev pluginu, použita v Eclipse)<br />
<a href="http://www.pydev.org/updates/">http://www.pydev.org/updates/</a>
</li>

<li>PyDev (stránka s pluginem, použita v Eclipse)<br />
<a href="https://dl.bintray.com/fabioz/pydev/4.5.4/">https://dl.bintray.com/fabioz/pydev/4.5.4/</a>
</li>

<li>Certifikát, který lze do Eclipse doinstalovat<br />
<a href="http://www.pydev.org/pydev_certificate.cer">http://www.pydev.org/pydev_certificate.cer</a>
</li>

<li>PyDev FAQ<br />
<a href="http://pydev.sourceforge.net/faq.html">http://pydev.sourceforge.net/faq.html</a>
</li>

<li>PyDev (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PyDev">https://en.wikipedia.org/wiki/PyDev</a>
</li>

<li>Python (oficiální stránky projektu)<br />
<a href="https://www.python.org/">https://www.python.org/</a>
</li>

<li>Jython<br />
<a href="http://www.jython.org/">http://www.jython.org/</a>
</li>

<li>IronPython<br />
<a href="http://ironpython.net/">http://ironpython.net/</a>
</li>

<li>Python 3.5.1 documentation<br />
<a href="https://docs.python.org/3/">https://docs.python.org/3/</a>
</li>

<li>PyDev: Unittest integration<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev/</a>
</li>

<li>Continuous unit testing with Pydev (Python and Eclipse)<br />
<a href="http://stackoverflow.com/questions/1015581/continuous-unit-testing-with-pydev-python-and-eclipse">http://stackoverflow.com/questions/1015581/continuous-unit-testing-with-pydev-python-and-eclipse</a>
</li>

<li>Test-driven development<br />
<a href="https://en.wikipedia.org/wiki/Test-driven_development">https://en.wikipedia.org/wiki/Test-driven_development</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2016</small></p>
</body>
</html>

