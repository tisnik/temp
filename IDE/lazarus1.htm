<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Integrované vývojové prostředí Lazarus: jen zdánlivý anachronismus</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Integrované vývojové prostředí Lazarus: jen zdánlivý anachronismus</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Integrované vývojové prostředí Lazarus: jen zdánlivý anachronismus</a></p>
<p><a href="#k02">2. Nástroje typu RAD &ndash; Rapid Application Development</a></p>
<p><a href="#k03">3. Lazarus: návrh GUI + programovací jazyk + debugger</a></p>
<p><a href="#k04">4. A co databáze?</a></p>
<p><a href="#k05">5. Od standardního Pascalu přes Turbo Pascal a Object Pascal k&nbsp;Free Pascalu</a></p>
<p><a href="#k06">*** 6. Vybrané vlastnosti podporované Free Pascalem</a></p>
<p><a href="#k07">*** 7. Lazarus Component Library (LCL)</a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">17. Alternativní projekty</a></p>
<p><a href="#k18">*** 18. Gambas &ndash; Gambas Almost Means BASIC</a></p>
<p><a href="#k19">*** 19. PySide a Qt Creator</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Integrované vývojové prostředí Lazarus: jen zdánlivý anachronismus</h2>

<p>V&nbsp;dnešním článku se seznámíme s&nbsp;multiplatformním integrovaným
vývojovým prostředím, které se jmenuje <i>Lazarus</i>. Jedná se o
programátorské prostředí, které se snaží (a nutno říci, že velmi úspěšně) o
napodobení stylu (a dnes spíše ještě dalšího vylepšení) vývoje aplikací
použitého ve známém a především v&nbsp;minulosti velmi populárním komerčním IDE
nazvaném <i>Delphi</i>. Toto vývojové prostředí bylo vyvíjeno původně
společností Borland a později firmou Embarcadero Technologies následované
společností Idera. Samotné Delphi, jehož první verze vydaná v&nbsp;roce 1995
byla původně určena pro šestnáctibitový systém Windows 3.x, bylo v&nbsp;dalších
verzích upraveno pro 32bitové systémy Windows 95, Windows NT i navazující řadu
operačních systémů společnosti Microsoft. Současná verze Delphi vydaná výše
zmíněnou společností Idera je pochopitelně určena i pro 64bitové operační
systémy.</p>

<p><div class="rs-tip-major">Poznámka: celkový vzhled grafického uživatelského
rozhraní Lazaru a například i použité klávesové zkratky skutečně odpovídají
starším verzím Delphi, což je samozřejmě výhodné především pro ty programátory,
kteří s&nbsp;tímto prostředím dlouhodobě pracují či musí například udržovat
starší projekty.</div></p>

<p>Mimochodem &ndash; původně se mělo Delphi jmenovat Borland AppBuilder, ovšem
krátce před vydáním Delphi byla vydána aplikace AppBuilder společnosti Novell
(s&nbsp;jiným zaměřením). Z&nbsp;tohoto důvodu se přešlo na interní (a to velmi
populární) jméno Delphi, navíc s&nbsp;tím, že tento RAD nástroj dokázal dobře
komunikovat s&nbsp;databázemi, v&nbsp;té době především s&nbsp;Oracle. Takže
bylo možné psát &bdquo;If you want to talk to [the] Oracle, go to
Delphi&ldquo;.</p>

<a href="https://www.root.cz/obrazek/445646/"><img src="https://i.iinfo.cz/images/375/lazarus-2-prev.png" class="image-445646" alt="&#160;" width="370" height="268" /></a>
<p><i>Obrázek 1: Integrované vývojové prostředí projektu Lazarus spuštěné
v&nbsp;Linuxu.</i></p>

<p><div class="rs-tip-major">Poznámka pro netrpělivé čtenáře: nejsilnějším
prvkem projektu Lazarus je návrh aplikací s&nbsp;plnohodnotným desktopovým
grafickým uživatelským rozhraním. Lze ho pochopitelně použít i pro jiné účely,
například pro tvorbu webových služeb atd., ovšem v&nbsp;těchto oblastech se již
používají odlišná řešení. Lazarus tak do značné míry žije
&bdquo;paralelně&ldquo; s&nbsp;jazyky a IDE určenými pro jiné účely.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Nástroje typu RAD &ndash; Rapid Application Development</h2>

<p>Programová a tedy de facto i ruční tvorba grafického uživatelského rozhraní
trpí hned několika dosti zásadními neduhy. Zejména se jedná o mnohdy zbytečně
nízkoúrovňovou práci, ovšem horší problém spočívá v&nbsp;tom, že požadavek na
změnu GUI (například i pouhé posunutí nějakého ovládacího prvku) vyžaduje zásah
do programového kódu, který navíc není či nemusí vždy být triviální a
intuitivní. Tohoto úskalí si byly některé softwarové firmy vědomy již minimálně
od začátku devadesátých let minulého století a právě z&nbsp;tohoto důvodu
vznikly nástroje typu <i>RAD</i> neboli <i>Rapid Application Development</i>.
Tyto nástroje umožňují nejenom velmi rychlou tvorbu grafického uživatelského
rozhraní s&nbsp;využitím návrhářů GUI, ale &ndash; což je možná ještě
důležitější &ndash; obousměrnou vazbu mezi grafickým uživatelským rozhraním a
programovým kódem. Dnes se zkratkou RAD označují (alespoň v&nbsp;některých
případech) i nástroje typu Glade, které ovšem ve skutečnosti
&bdquo;pouze&ldquo; slouží k&nbsp;návrhu GUI. Ovšem skutečné RAD mají vazbu
mezi návrhem GUI a kódem oboustrannou A přesně do této kategorie spadá i
Lazarus.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-1.jpg"><img src="http://i.iinfo.cz/images/75/llang02images-1-prev.jpg" width="370" height="248" alt=" " /></a>
<p><i>Obrázek 2: Historická první verze vývojového prostředí Delphi 1.0
běžícího ve Windows 3.11.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Lazarus: návrh GUI + programovací jazyk + debugger</h2>

<p>Silnou stránkou projektu Lazarus je jeho orientace na rychlou tvorbu
aplikací s&nbsp;plnohodnotným grafickým uživatelským rozhraním
popř.&nbsp;aplikací, které nějakým způsobem komunikují s&nbsp;databázemi.
Tvorba grafického uživatelského rozhraní přitom vyžaduje jak GUI navrhnout
(tj.&nbsp;navrhnout rozmístění ovládacích prvků do formulářů), tak ho propojit
s&nbsp;programovým kódem, konkrétně naprogramováním reakcí na události. A právě
snadnost tohoto propojení GUI a kódu byl asi největší faktor úspěchu projektu
Delphi, na který Lazarus navázal.</p>

*** image ***
<p><i>Obrázek 3. Samotné Delphi, přesněji řečeno jeho část orientovaná na návrh
grafického uživatelského rozhraní, bylo inspirováno Visual Basicem (zde
konkrétně první 32bitová verze Delphi 2.0).</i></p>

<p>Vzhledem k&nbsp;tomu, že je Delphi založeno na programovacím jazyku
<i>Object Pascal</i>, je v&nbsp;integrovaném vývojovém prostředí Lazarus
vytvořeno propojení s&nbsp;multiplatformním překladačem <i>fpc</i>
programovacího jazyka <i>Free Pascal</i> a samotné prostředí obsahuje jak
poměrně pokročilý programátorský editor (se zvýrazněním syntaxe, foldingem,
šablonami, podporou jednoduchého refaktoringu atd.) tak i interaktivní grafický
editor určený pro návrh formulářů. Nesmíme samozřejmě zapomenout ani na ladicí
program (debugger), který je do Lazaru plně integrován (stejně jako debugger do
Delphi &ndash; ostatně vývojová prostředí vyvíjená firmou Borland byla oblíbena
mj.&nbsp;i díky kvalitním interním debuggerům).</p>

<img src="https://i.iinfo.cz/images/257/pygubu-1.png" class="image-445652" alt="&#160;" width="642" height="537" />
<p><i>Obrázek 4: Obrazovka nástroje Pygubu designer určeného pro návrh
grafického uživatelského rozhraní aplikací vytvářených v&nbsp;Pythonu. Jedná se
o jeden z&nbsp;mnoha projektů, které byly inspirovány prostředím Borland Delphi
a Microsoft Visual Basic.</i></p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;posledních několika letech se
můžeme setkat s&nbsp;tím, že se desktopové aplikace začínají vytvářet
s&nbsp;využitím webových technologií. Typickým příkladem jsou aplikace
postavené na technologii <a href="https://www.electronjs.org/">Electron</a>.
Těmito typy aplikací &ndash; které pochopitelně opět trpí několika neduhy
&ndash; se ovšem v&nbsp;dnešním článku zabývat nebudeme.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. A co databáze?</h2>

<p>Jednou z&nbsp;velmi důležitých součástí integrovaného vývojového prostředí
Lazarus a taktéž jeho ideového předchůdce Delphi jsou komponenty nabídnuté
v&nbsp;nástrojovém panelu nazvaném <i>Data Access</i>, které do značné míry
zjednodušují použití relačních databází ve vyvíjených aplikacích, protože
nabízí dvě abstrakce: připojení k&nbsp;databázím a práci s&nbsp;výsledky
dotazů. Podporovány jsou různé typy a verze (většinou relačních) databází, do
nichž se vyvíjené aplikace mohou připojovat s&nbsp;využitím takzvaných datových
zdrojů (<i>data source</i>, představováno komponentou
<strong>TDataSource</strong>). Pro prezentaci dat získaných z&nbsp;databází na
formulářích vytvářené aplikace slouží množství specializovaných a mnohdy i
dosti komplikovaných ovládacích prvků, které lze nalézt na nástrojovém panelu
<i>Data Controls</i> a taktéž na panelu <i>SQLdb</i>.</p>

*** image ***
<p><i>Obrázek 5: Paleta (nástrojový panel) s&nbsp;komponentami Data
Controls.</i></p>

<p>Podporováno je připojení k&nbsp;následujícím databázím resp.&nbsp;přesněji
řečeno k&nbsp;datovým zdrojům (protože například textové soubory ve formátu CSV
atd. nejsou plnohodnotnou databází):</p>

<ol>
<li>Advantage</li>
<li>DBase</li>
<li>TurboPower</li>
<li>In memory</li>
<li>Firebird</li>
<li>(Visual) FoxPro</li>
<li>Interbase</li>
<li>Microsoft SQL Server</li>
<li>MySQL</li>
<li>ODBC</li>
<li>Oracle</li>
<li>Paradox</li>
<li>PostgreSQL</li>
<li>Sybase Adaptive Server Enterprise (ASE)</li>
<li>SQLite</li>
<li>Textové soubory s&nbsp;daty</li>
</ol>

<p><div class="rs-tip-major">Poznámka: existují i další komponenty od třetích
stran, které zpřístupňují další typy databází. Příkladem může být komponenta
nazvaná poměrně příznačně <i>Universal Data Access</i>.</div></p>

*** image ***
<p><i>Obrázek 6: Paleta (nástrojový panel) s&nbsp;komponentami Data
Access.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Od standardního Pascalu přes Turbo Pascal a Object Pascal k&nbsp;Free Pascalu</h2>

<p>Lazarus je projekt, v&nbsp;němž se (alespoň zdánlivě) setkáme s&nbsp;mnoha
anachronismy, což může být považováno jak za velkou přednost (stabilita), tak
za nedostatek (použití technologií, které dnes nejsou považovány za moderní či
alespoň &bdquo;moderní&ldquo;). Týká se to zejména samotného programovacího
jazyka, na němž je celý projekt Lazarus postaven. Již v&nbsp;úvodní kapitole
jsme se zmínili o tom, že předlohou pro Lazarus bylo integrované vývojové
prostředí Delphi, které je založeno na programovacím jazyku Object Pascal
odvozeného od Turbo Pascalu, který sám vznikl úpravami a rozšířením
standardního Pascalu (ovšem s&nbsp;několika důležitými odlišnostmi od původního
Pascalu).</p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti je jméno Object Pascal
poněkud zavádějící, protože existuje více jazyků s&nbsp;tímto jménem.
Nejznámější je však varianta Pascalu použitá v&nbsp;Delphi.</div></p>

<p>Lazarus používá programovací jazyk nazvaný Free Pascal, jenž je od Object
Pascalu odvozen, ovšem ve skutečnosti došlo k&nbsp;dalším rozšířením tohoto
jazyka o další vlastnosti. Navíc je možné ve Free Pascalu definovat použitý
jazyk pro každý modul zvlášť a lze tak například zkombinovat několik modulů,
z&nbsp;nichž každý je naprogramovaný v&nbsp;jiné variantě Pascalu. Buďme ovšem
konkrétní &ndash; podporovány jsou tyto dialekty programovacího jazyka
Pascal:</p>

<ol>
<li>Free Pascal</li>
<li>Object Pascal</li>
<li>Turbo Pascal</li>
<li>Delphi</li>
<li>Delphi with Unicode</li>
<li>Mac Pascal</li>
<li>GNU Pascal</li>
<li>ISO 7185 Standard Pascal</li>
<li>Extended Pascal</li>
</ol>

<p><div class="rs-tip-major">Poznámka: mohlo by se zdát, že dlouhá cesta
vedoucí od standardního Pascalu přes Turbo Pascal až po Object Pascal povede
k&nbsp;tomu, že na sebe výsledný jazyk nabalí různé historické smetí. Kupodivu
to však v&nbsp;tomto případě není tak hrozné, i když pochopitelně narazíme na
některé problematičtější části jazyka. Týká se to například problematického
datového typu <strong>string</strong>, jehož původní vlastnosti (omezení na
ASCII + maximální délka 255 znaků) pochopitelně velmi brzy přestaly vyhovovat a
postupně vzniklo hned několik dalších datových typů určených pro reprezentaci
řetězců.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vybrané vlastnosti podporované Free Pascalem</h2>

<p>V&nbsp;této kapitole se seznámíme s&nbsp;vybranými zajímavými vlastnostmi
podporovanými Free Pascalem. Některé z&nbsp;těchto vlastností byly převzaty
z&nbsp;Turbo Pascalu (například skvělá integrace s&nbsp;assemblerem), další pak
buď z&nbsp;Delphi nebo se jedná o novinky představené přímo ve Free
Pascalu.</p>

<p>Jedním z&nbsp;relativně nových konceptů ve světě Pascalu jsou takzvaná dynamická pole (<i>dynamic arrays</i>), jejichž velikost není resp.&nbsp;nemusí být známá v&nbsp;době překladu (<i>compile time</i>). V&nbsp;původním Pascalu ale například ještě i v&nbsp;Turbo Pascalu totiž byla součástí datového typu &bdquo;pole&ldquo; i informace o dolním a horním indexu &ndash; a nepřímo tedy i velikost pole:</p>

<pre>
mzdy : Array[1..12] of Integer;
</pre>

<p>Možnost definovat jak horní, tak i dolní index je ve skutečnosti velmi silná technika, která zjednodušuje mnoho algoritmů, ovšem na druhou stranu není vždy možné znát již v&nbsp;době překladu aplikace velikost pole. A právě v&nbsp;takových případech se používají dynamická pole. Jedná se o datový typ, u něhož se definuje typ prvků, ovšem nikoli již délka pole ani horní a dolní index:</p>

<pre>
pixels: Array of Byte
</pre>

<p>Alokace paměti pro dynamické pole se provádí v&nbsp;čase běhu aplikace (<i>runtime</i>), a to konkrétně procedurou <strong>setLength</strong>. To ovšem není vše, protože stejným způsobem, tj.&nbsp;zavoláním procedury <strong>setLength</strong>, je možné pole zvětšit i zmenšit. To se interně provádí alokací nového bloku paměti a kopií prvků z&nbsp;původního pole do pole nového (což nemusí být velmi efektivní, pokud se realokace provádí velmi často).</p>

<p>Interně jsou dynamická pole vlastně obdobou ukazatelů, což znamená, že sémantika práce s&nbsp;nimi je odlišná od statických polí.</p>

<a href="https://www.root.cz/obrazek/445647/"><img src="https://i.iinfo.cz/images/375/lazarus-3-prev.png" class="image-445647" alt="&#160;" width="370" height="268" /></a>
<p><i>Obrázek X: Informace o použité verzi.</i></p>

<img src="https://i.iinfo.cz/images/375/lazarus-1.png" class="image-445645" alt="&#160;" width="622" height="415" />
<p><i>Obrázek X: Konfigurace prostředí Lazarus.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Lazarus Component Library (LCL)</h2>

<p>Součástí integrovaného vývojového prostředí Lazarus je i <i>LCL</i>, neboli
plným jménem <i>Lazarus Component Library</i>. Toto jméno zcela záměrně
připomíná <i>VCL</i> (<i>Visual Component Library</i>), což byla knihovna
(nejenom grafických) komponent používaná v&nbsp;originálním prostředí Delphi.
Ovšem zatímco VCL bylo orientováno především na použití v&nbsp;operačních
systémech Microsoft Windows, obsahuje LCL rozhraní hned pro několik
&bdquo;nativních&ldquo; GUI knihoven, zejména GTK+ (verze 2.x i 3.x), Qt, Win
API a pro operační systém Mac OS X existuje vazba pro knihovny Cocoa a
Carbon.</p>

<p>To mj.&nbsp;znamená, že programátor vytvářející svoji aplikaci
s&nbsp;grafickým uživatelským rozhraním s&nbsp;využitím knihovny LCL nemusí ve
svém programovém kódu složitě řešit, jaké konkrétní grafické prvky (widgety) se
ve výsledku použijí, protože bude komunikovat pouze s&nbsp;univerzálním
rozhraním společným pro všechny zmíněné GUI knihovny. Napojení projektu na
zvolenou konkrétní GUI knihovnu se provede v&nbsp;čase překladu aplikace. Na
druhou stranu ovšem snadné tímto způsobem není možné využívat některé
speciality konkrétní nativní knihovny, například některé specifické ovládací
prvky.</p>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<a href="https://www.root.cz/obrazek/445648/"><img src="https://i.iinfo.cz/images/375/lazarus-4-prev.png" class="image-445648" alt="&#160;" width="370" height="267" /></a></p>
<p><i>Obrázek X: Návrh formuláře se ihned projeví i v&nbsp;programovém
kódu.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Alternativní projekty</h2>

<p>V&nbsp;závěru dnešního článku se ve stručnosti seznámíme s&nbsp;některými
alternativními projekty, které vývojářům většinou nabízí plnohodnotné
<i>RAD</i>. Do této skupiny aplikací patří kromě Lazara i projekt
<i>Gambas</i>, jenž vývojářům přináší obdobu <a
href="https://www.techworm.net/2017/11/perl-hated-programming-language-developers-says-report.html">nechvalně
proslulého</a> programovacího jazyka Visual Basic (ovšem spíše se jedná o
dialekt) a konečně nesmíme zapomenout ani na projekt <a href="#k19">Qt
Creator</a> (dříve <i>Qt Designer</i>). S&nbsp;příchodem aplikací založených na
webových technologiích sice význam těchto nástrojů poněkud klesl, ovšem
například pro vnitropodnikové aplikace se stále (podle mého skromného názoru)
jedná o velmi snadno a především rychle použitelnou technologii vyžadující méně
vstupních znalostí (a méně systémových prostředků na straně uživatele).</p>

<img src="https://i.iinfo.cz/images/428/gambas-1.png" class="image-445649" alt="&#160;" width="484" height="416" />
<p><i>Obrázek XX: Dnes již historická verze Gambasu 1.0.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Gambas &ndash; Gambas Almost Means BASIC</h2>

<p>První &bdquo;alternativní&ldquo; integrované vývojové prostředí s&nbsp;možnostmi RAD, s&nbsp;nímž se v&nbsp;dnešním článku alespoň ve stručnosti seznámíme, se jmenuje <i>Gambas</i> (<i>Gambas Almost Means BASic</i>). Jak již druhá část jména tohoto IDE napovídá, jedná se o integrované vývojové prostředí, v&nbsp;němž se používá programovací jazyk odvozený od <i>Visual Basicu</i>. Autor Gambasu, jímž je programátor <i>Benoit Minisini</i>, sám v&nbsp;přiložené dokumentaci píše, že na vývoji Gambasu začal původně pracovat především z&nbsp;toho důvodu, že mu množství chyb a různých nekonzistencí, které můžeme najít v&nbsp;původním Visual Basicu (nikoli VB .NET) prostě připadalo rozkošné, takže se nechal Visual Basicem inspirovat (a tím pádem demonstroval tvrzení &bdquo;worse is better&ldquo;).</p>

<img src="https://i.iinfo.cz/images/428/gambas-2.png" class="image-445650" alt="&#160;" width="450" height="337" />
<p><i>Obrázek XX: SDI (Single Document Interface) prostředí Gambasu.</i></p>

<p><div class="rs-tip-major">Poznámka: na tomto místě je však nutné vysvětlit, že Gambas ve své současné verzi (v&nbsp;praxi se ještě stále používá jak verze 1.x, tak i v&nbsp;mnoha ohledech vylepšená verze 2.x a 3.x, poslední stabilní verzí je 3.16.3 z&nbsp;roku 2021) je stabilní a poměrně schopné vývojové prostředí a i programovací jazyk založený na strukturovaném Visual Basicu rozšířeném o konstrukce určené pro práci s&nbsp;objekty, nemá s&nbsp;prapůvodním BASICem s&nbsp;čísly řádků a nestrukturovanými konstrukcemi založenými na příkazu GOTO prakticky nic společného.</div></p>

<img src="https://i.iinfo.cz/images/428/gambas-3.png" class="image-445651" alt="&#160;" width="577" height="519" />
<p><i>Obrázek XX: Dialog pro vytvoření nového projektu v&nbsp;Gambasu.</i></p>

<p>Ovšem tím hlavním důvodem, proč se v&nbsp;tomto článku vůbec integrovaným vývojovým prostředím Gambas v&nbsp;dnešním článku zabýváme, však není zvolený programovací jazyk, ale další velmi důležitá součást tohoto IDE &ndash; jedná se totiž o interaktivní grafický návrhář formulářů, díky jehož existenci je možné velmi jednoduše a především rychle a navíc s&nbsp;relativně velkým komfortem vytvořit i poměrně složitou aplikaci s&nbsp;plnohodnotným grafickým uživatelským rozhraním.</p>

<p>Interaktivní návrhář formulářů v&nbsp;prostředí Gambas je samozřejmě obousměrně propojen s&nbsp;ostatními částmi integrovaného vývojového prostředí, zejména s&nbsp;programátorským editorem zdrojových kódů. To například znamená, že pokud se na formuláři vytvoří nové tlačítko, je možné ihned začít psát obslužný kód zavolaný ve chvíli, kdy bude toto tlačítko na reálném GUI použito. Způsob propojení návrháře a programátorského editoru je obdobný způsobu, který byl využit v&nbsp;již  výše zmíněném Visual Basicu (Microsoft) a později taktéž ve slavném Delphi vytvořeném a prodávaném společností Borland. Později došlo &ndash; to již ovšem víme z&nbsp;úvodních kapitol &ndash; k&nbsp;rozšíření tohoto úspěšného konceptu i do dalších IDE.</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. PySide a Qt Creator</h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Lazarus &ndash; home page<br />
<a href="https://www.lazarus-ide.org/">https://www.lazarus-ide.org/</a>
</li>

<li>Lazarus (IDE)<br />
<a href="https://en.wikipedia.org/wiki/Lazarus_(IDE)">https://en.wikipedia.org/wiki/Lazarus_(IDE)</a>
</li>

<li>Lazarus &ndash; dokumentace<br />
<a href="https://www.getlazarus.org/learn/">https://www.getlazarus.org/learn/</a>
</li>

<li>Lazarus &ndash; dokumentace ve formátu chm<br />
<a href="https://sourceforge.net/projects/lazarus/files/Lazarus%20Documentation/Lazarus%202.2RC2/">https://sourceforge.net/projects/lazarus/files/Lazarus%20Documentation/Lazarus%202.2RC2/</a>
</li>

<li>Lazarus &ndash; getting started<br />
<a href="https://www.getlazarus.org/learn/tutorials/start/">https://www.getlazarus.org/learn/tutorials/start/</a>
</li>

<li>Introducing Lazarus<br />
<a href="https://www.getlazarus.org/learn/tutorials/introduction/#introducing_lazarus">https://www.getlazarus.org/learn/tutorials/introduction/#introducing_lazarus</a>
</li>

<li>Lexikální struktura Free Pascalu<br />
<a href="https://www.getlazarus.org/learn/language/lexical/">https://www.getlazarus.org/learn/language/lexical/</a>
</li>

<li>Object Pascal<br />
<a href="https://en.wikipedia.org/wiki/Object_Pascal">https://en.wikipedia.org/wiki/Object_Pascal</a>
</li>

<li>Comparison of integrated development environments: Pascal, Object Pascal<br />
<a href="https://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments#Pascal,_Object_Pascal">https://en.wikipedia.org/wiki/Comparison_of_integrated_development_environments#Pascal,_Object_Pascal</a>
</li>

<li>Free Pascal and Lazarus Wiki<br />
<a href="https://wiki.lazarus.freepascal.org/">https://wiki.lazarus.freepascal.org/</a>
</li>

<li>Projects using Free Pascal<br />
<a href="https://wiki.freepascal.org/Projects_using_Free_Pascal">https://wiki.freepascal.org/Projects_using_Free_Pascal</a>
</li>

<li>Free Pascal<br />
<a href="https://www.freepascal.org/">https://www.freepascal.org/</a>
</li>

<li>Free Pascal: Online documentation<br />
<a href="https://www.freepascal.org/docs.html">https://www.freepascal.org/docs.html</a>
</li>

<li>Free Pascal User’s Guide<br />
<a href="https://www.freepascal.org/docs-html/current/user/user.html">https://www.freepascal.org/docs-html/current/user/user.html</a>
</li>

<li>Free Pascal Programmer’s Guide<br />
<a href="https://www.freepascal.org/docs-html/current/prog/prog.html">https://www.freepascal.org/docs-html/current/prog/prog.html</a>
</li>

<li>Free Pascal Reference guide<br />
<a href="https://www.freepascal.org/docs-html/current/ref/ref.html">https://www.freepascal.org/docs-html/current/ref/ref.html</a>
</li>

<li>Free Pascal Run-Time Library<br />
<a href="https://www.freepascal.org/docs-html/current/rtl/index.html">https://www.freepascal.org/docs-html/current/rtl/index.html</a>
</li>

<li>Free Pascal FCL: Free Component Library<br />
<a href="https://www.freepascal.org/docs-html/current/fcl/index.html">https://www.freepascal.org/docs-html/current/fcl/index.html</a>
</li>

<li>Reference for package 'fcl-res'<br />
<a href="https://www.freepascal.org/docs-html/current/fclres/index.html">https://www.freepascal.org/docs-html/current/fclres/index.html</a>
</li>

<li>Free Pascal code documenter: Reference manual<br />
<a href="https://www.freepascal.org/docs-html/current/fpdoc/fpdoc.html">https://www.freepascal.org/docs-html/current/fpdoc/fpdoc.html</a>
</li>

<li>Free Pascal Run-Time Library: Reference guide (zastaralé)<br />
<a href="https://www.root.cz/knihy/free-pascal-run-time-library-reference-guide/">https://www.root.cz/knihy/free-pascal-run-time-library-reference-guide/</a>
</li>

<li>Topic: The future of Free Pascal<br />
<a href="https://forum.lazarus.freepascal.org/index.php?topic=31347.30">https://forum.lazarus.freepascal.org/index.php?topic=31347.30</a>
</li>

<li>Free Pascal: Future plans<br />
<a href="https://freepascal.org/future.var">https://freepascal.org/future.var</a>
</li>

<li>Interaktivní tvorba grafického uživatelského rozhraní nástrojem Pygubu<br />
<a href="https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-nastrojem-pygubu/">https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-nastrojem-pygubu/</a>
</li>

<li>Interaktivní tvorba grafického uživatelského rozhraní s využitím nástroje Pygubu (2)<br />
<a href="https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-2/">https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-2/</a>
</li>

<li>Interaktivní tvorba grafického uživatelského rozhraní s využitím nástroje Pygubu (dokončení)<br />
<a href="https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-dokonceni/">https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-dokonceni/</a>
</li>

<li>Graphical user interface builder<br />
<a href="https://en.wikipedia.org/wiki/Graphical_user_interface_builder">https://en.wikipedia.org/wiki/Graphical_user_interface_builder</a>
</li>

<li>Seriál Grafické uživatelské rozhraní v&nbsp;Pythonu<br />
<a href="https://www.root.cz/serialy/graficke-uzivatelske-rozhrani-v-pythonu/">https://www.root.cz/serialy/graficke-uzivatelske-rozhrani-v-pythonu/</a>
</li>

<li>User interface markup language<br />
<a href="https://en.wikipedia.org/wiki/User_interface_markup_language">https://en.wikipedia.org/wiki/User_interface_markup_language</a>
</li>

<li>Dynamic array<br />
<a href="https://wiki.freepascal.org/Dynamic_array">https://wiki.freepascal.org/Dynamic_array</a>
</li>

<li>Platformy podporované Free Pascalem<br />
<a href="https://wiki.freepascal.org/Platform_list">https://wiki.freepascal.org/Platform_list</a>
</li>

<li>Databases<br />
<a href="https://wiki.freepascal.org/Databases">https://wiki.freepascal.org/Databases</a>
</li>

<li>Lazarus Database Overview<br />
<a href="https://wiki.freepascal.org/Lazarus_Database_Overview">https://wiki.freepascal.org/Lazarus_Database_Overview</a>
</li>

<li>PostgreSQL Data Access Components<br />
<a href="https://www.devart.com/pgdac/">https://www.devart.com/pgdac/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

