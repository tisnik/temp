<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Prakticky nezbytným prostředkem používaným většinou dnešních programátorů je vývojové prostředí. Může se jednat o programátorský textový editor zkombinovaný s dalšími samostatnými nástroji, ovšem mnoho vývojářů dává v současnosti přednost takzvaným integrovaným vývojovým prostředím (IDE). V této oblasti se stále více začíná využívat (relativně) nový fenomén &ndash; online IDE.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Klasická integrovaná vývojová prostředí (IDE)</a></p>
<p><a href="#k02">*** 2. Webové IDE</a></p>
<p><a href="#k03">*** 3. Co lze od webového IDE očekávat?</a></p>
<p><a href="#k04">*** 4. Univerzální vs. specializovaná integrovaná vývojová prostředí</a></p>
<p><a href="#k05">*** 5. Replit</a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. Jupyter notebook</a></p>
<p><a href="#k13">*** 13. Pískoviště pro první seznámení s&nbsp;vlastnostmi zvoleného programovacího jazyka a pro sdílení kódu</a></p>
<p><a href="#k14">*** 14. Try F#</a></p>
<p><a href="#k15">*** 15. Python playground</a></p>
<p><a href="#k16">*** 16. Go playground</a></p>
<p><a href="#k17">*** 17. Rust playground</a></p>
<p><a href="#k18">*** 18. TryAPL</a></p>
<p><a href="#k19">*** 19. Compiler Explorer</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Klasická integrovaná vývojová prostředí (IDE)</h2>

<p>Integrovaná vývojová prostředí (<i>Integrated Development Environment</i> neboli zkráceně <i>IDE</i>) za sebou mají již neuvěřitelných více než čtyřicet let vývoje (Dartmouth BASIC, Maestro I, produkty firmy Borland atd.) a v&nbsp;současnosti se jedná o programový prostředek využívaný vývojáři pracujícími s&nbsp;nepřeberným množstvím programovacích jazyků od jazyků nízkoúrovňových (může jít o různé assemblery a makroassemblery) přes klasické kompilované programovací jazyky typu C, C++, C#, Go, Rust či Java až po oblíbené interpretované programovací jazyky (Python, Ruby, JavaScript a TypeScript) apod. Hlavní důvod, proč velká část programátorů preferuje při své práci použití integrovaného vývojového prostředí, spočívá především v&nbsp;tom, že se díky IDE může celý vývoj a následné ladění aplikace urychlit a zjednodušit, což samozřejmě v&nbsp;důsledku vede k&nbsp;mnohdy výraznému zvýšení produktivity programátora.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-3.png"><img src="http://i.iinfo.cz/images/75/llang02images-3-prev.png" width="370" height="205" alt=" " /></a>
<p><i>Obrázek 1: Hlavní menu vývojového prostředí Turbo Pascalu 1.0.
Z&nbsp;tohoto menu se vyvolávaly jednotlivé moduly integrovaného vývojového
prostředí. Teprve později došlo k&nbsp;úplnému sjednocení jednotlivých částí a
hlavní obrazovkou se stal samotný programátorský editor se stavovým řádkem a
hlavním menu &ndash; vznikl tedy program, který se již poměrně značně podobal i
moderním IDE.</i></p>

<p>Moderní integrovaná vývojová prostředí jsou většinou tvořena samostatnou aplikací vybavenou mnohdy velmi komplexním grafickým uživatelským rozhraním. Tato aplikace programátorům poskytuje nástroje určené pro správu projektů, vytváření a úpravu zdrojových kódů, refaktoring zdrojových kódů, porovnání dvou či více verzí zdrojového kódu (popř. i podporu pro tvorbu a aplikaci takzvaných patchů), překlad programů a většinou taktéž podporu pro ladění přeložených programů a pro jejich profiling (tj.&nbsp;zjištění, ve kterých částech kódu běžící proces strávil nejvíce času). Některá integrovaná vývojová prostředí navíc programátorům nabízí i rozhraní k systémům pro správu verzí &ndash; Git, ale i CVS, SVN a Mercurial apod. &ndash; většinou opět s&nbsp;podporou porovnání dvou či více variant zdrojových souborů či celých projektů, zobrazení jednotlivých větví atd.</p>

<a href="http://i.iinfo.cz/images/354/pc120-14.png"><img src="http://i.iinfo.cz/images/354/pc120-14-prev.png" width="370" height="231" alt="&#160; " /></a>
<p><i>Obrázek 2: Úvodní obrazovka Turbo Basicu. Jednalo se o jazyk vyvíjený
v&nbsp;letech 1987 a 1988, takže zde firma Borland logicky použila velmi
podobné uživatelské rozhraní, jaké nalezneme právě v&nbsp;Turbo Pascalu 4.0.
Později však přestal být Turbo Basic i další podobné nemainstreamové jazyky
(Turbo Prolog) vyvíjen, protože se Borland orientoval na Turbo Pascal a na
Turbo C (později Turbo C++).</i></p>

<p>Jednotlivá integrovaná vývojová prostředí se od sebe odlišují tím, do jaké míry jsou tyto nástroje navzájem integrovány. V&nbsp;některých případech totiž vývojové prostředí využívá externí aplikace (například externí programátorský textový editor, překladač, debugger, profiler), další IDE pak většinu funkcí integrují do jedné monolitické aplikace (což je dnes méně časté). Oba přístupy mají své klady, ale samozřejmě i zápory. O některých se zmíníme v&nbsp;navazujícím textu. U některých komplikovanějších IDE dokonce můžeme najít souběžné použití obou přístupů. Příkladem je například Eclipse, kde se v případě práce s projekty vytvářenými v Javě využívá mnoho pluginů, které lze považovat za součást Eclipse (včetně interního překladače ECJ), zatímco v případě, že se Eclipse vyžije pro tvorbu projektů v C a C++, používají se pro překlad či ladění externí aplikace.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Webová IDE</h2>

<p>V&nbsp;posledních přibližně dvou desetiletích můžeme být svědky poměrně důležité změny v&nbsp;IT. Jedná se o postupný přesun uživatelských aplikací od klasických desktopových aplikací s&nbsp;plnohodnotným (a většinou i do určité míry standardizovaným) grafickým uživatelským rozhraním k&nbsp;webovým aplikacím, tj.&nbsp;k&nbsp;takovým aplikacím, v&nbsp;nichž je uživatelské rozhraní typicky tvořeno kombinací HTML+CSS+JavaScriptu (WebAssembly se prozatím příliš neujalo) a samotná plocha aplikace je vykreslena do okna webového prohlížeče. Tento posun s&nbsp;sebou přináší poměrně mnoho výhod (a to jak na straně dodavatele či provozovatele aplikace, tak i uživatele), ale i několik nevýhod (výkon, systémové nároky, problematika zajištění soukromí, závislost na připojení), nicméně se (zdá se) jedná o v&nbsp;dohledné době nezvratnou změnu.</p>

<p>Příkladem aplikací převedených do webové podoby jsou mailoví klienti, ale i celé kancelářské aplikace. Převedeny ovšem byly například i různé CADy apod. Tato změna se dotkla i integrovaných vývojových prostředí (IDE), z&nbsp;nichž některé se buď přesunuly na web nebo už na této platformě vznikly. Použití IDE na webu má svá úskalí, ovšem přináší zajímavou možnost vyzkoušet si nový programovací jazyk bez nutnosti jeho instalace a konfigurace, což v&nbsp;některých případech nemusí být zcela jednoduchá záležitost. Ostatně právě z&nbsp;tohoto důvodu prakticky všechny webové stránky moderních programovacích jazyků (a to i těch kompilovaných) nabízí nějakou formu <i>hřiště</i> (<i>playground</i>), na němž si lze jazyk otestovat. Taktéž je mnohdy možné sdílet zdrojový kód, ponechat webové IDE, aby si kód zapamatovalo (takže lze vytvořit odkaz na demonstrační příklady dostupné online) nebo je v&nbsp;některých případech dokonce možné, aby se zdrojový kód stal součástí URL, což opět zjednoduší jeho sdílení (a navíc si nemusí webová aplikace nic pamatovat).</p>

<p><div class="rs-tip-major">Poznámka: osobně pro vlastní vývoj webové IDE (a vlastně ani běžné IDE) nepoužívám; ovšem naopak webová IDE poměrně často využívám při zkoumání nových jazyků popř.&nbsp;při sdílení &bdquo;živých&ldquo; snippetů.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Co lze od webového IDE očekávat?</h2>

<p></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Univerzální vs. specializovaná integrovaná vývojová prostředí</h2>

<p></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Replit</h2>

<p></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Jupyter notebook</h2>

<p></p>

<p>Nástroj <i>Jupyter Notebook</i> je založen na klasické technologii klient-server, kde klientem je webový prohlížeč spuštěný u uživatele (či uživatelů) a serverem je Jupyter s&nbsp;přidaným modulem (takzvaným kernelem) pro zvolený programovací jazyk nebo jazyky. Výraz, popř.&nbsp;blok výrazů představujících programový kód napsaný ve zvoleném programovacím jazyce, je po stlačení klávesové zkratky <strong>Shift+Enter</strong> přenesen na server, kde je zpracován a výsledek je poslán zpět do prohlížeče.</p>

<p>JavaScriptový kód na straně prohlížeče zajistí interpretaci získaných výsledků a jejich zařazení na správné místo do dynamické webové stránky (jedná se vlastně o variantu na dnes tak populární <a href="https://en.wikipedia.org/wiki/Single-page_application">SPA</a> &ndash; <i>Single-Page Application</i> se všemi přednostmi a pochopitelně i zápory, které toto řešení přináší). Výsledky poslané serverem na klienta mohou být ve skutečnosti různého typu; typicky se jedná o fragment HTML (tabulky atd.), obrázek typu SVG (graf, histogram), rastrový obrázek (graf získaný například ze systému R), vzorec vykreslený z&nbsp;TeXového či LaTeXového zdrojového kódu, <a href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">animace či video</a> (různé formáty) apod. Samotná architektura nástroje Jupyter je otevřená a poměrně snadno rozšiřitelná, což znamená, že je v&nbsp;případě potřeby možné přidat například další typy grafů apod.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Pískoviště pro první seznámení s&nbsp;vlastnostmi zvoleného programovacího jazyka a pro sdílení kódu</h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Try F#</h2>

<p></p>

https://try.fsharp.org/



<p><a name="k15"></a></p>
<h2 id="k15">15. Python playground</h2>

<p></p>

https://www.python.org/
https://lwebapp.com/en/python-playground


<p><a name="k16"></a></p>
<h2 id="k16">16. Go playground</h2>

<p></p>

https://go.dev/play/



<p><a name="k17"></a></p>
<h2 id="k17">17. Rust playground</h2>

<p></p>

https://play.rust-lang.org/


<p><a name="k18"></a></p>
<h2 id="k18">18. TryAPL</h2>

<p>V&nbsp;současnosti je pravděpodobně nejpoužívanější variantou <i>APL</i> <i>Dyalog</i>, což je komerční (a nutno podotknout, že velmi dobré) vývojové prostředí, které lze získat z&nbsp;adresy <a href="https://www.dyalog.com/">https://www.dyalog.com/</a>. Ovšem pro otestování možností nabízených jazykem <i>APL</i> není nutné si <i>Dyalog</i> instalovat, protože je k&nbsp;dispozici webové prostředí dostupné na adrese <a href="https://tryapl.org/">https://tryapl.org/</a>, které lze spustit přímo z&nbsp;prakticky jakéhokoli moderního webového prohlížeče. Toto prostředí mj.&nbsp;nabízí i trojí způsob zápisu základních funkcí a operátorů &ndash; buď se vybírají z&nbsp;horního pruhu se symboly, nebo je možné použít dvojznaku následovaného klávesou <strong>Tab</strong> popř.&nbsp;prefixového znaku následovaného nějakým ASCII znakem. Obě poslední možnosti jsou uvedeny v&nbsp;tabulce pro často používaný symbol &iota;:</p>

<table>
<tr><td>Dvojznak následovaný TABem</td><td>ii<strong>Tab</strong></td></tr>
<tr><td>Prefixový znak</td><td>`i</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: samozřejmě zpočátku bude programátor
spíše používat myš, ovšem zápis těch nejčastějších znaků se dá naučit za
pouhých několik minut.</div></p>

<a href="https://www.root.cz/obrazek/492306/"><img src="https://i.iinfo.cz/images/517/apl55-2-4-prev.png" class="image-492306" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="189" /></a>
<p><i>Obrázek XX: Prostředí TryAPL.</i></p>

<img src="https://i.iinfo.cz/images/517/apl55-2-2.png" class="image-492304" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="463" height="640" />
<p><i>Obrázek XX: Základní funkce a operátory vypsané v&nbsp;nápovědě
k&nbsp;prostředí TryAPL.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Compiler Explorer</h2>

<p>Posledním IDE (jestli se v&nbsp;tomto případě vůbec dá o IDE mluvit) je <i>Compiler Explorer</i>. Jedná se o webovou aplikaci dostupnou na adrese <a href="https://godbolt.org/">https://godbolt.org/</a>, která dokáže přeložit zdrojové kódy napsané v&nbsp;různých programovacích jazycích buď do assembleru zvoleného mikroprocesoru nebo (pro určité vybrané jazyky) do bajtkódu příslušného virtuálního stroje. Překlad je přitom proveden vybraným překladačem (podle zvoleného jazyka existuje jen jeden překladač nebo i několik desítek překladačů), který je navíc nabízen v&nbsp;různých verzích, takže je například možné porovnat, jak se způsob překladu postupně měnil.</p>

*** image ***
<p><i>Obrázek 1: Úvodní stránka nástroje Compiler Explorer.</i></p>

<p>Compiler Explorer si ovšem v&nbsp;případě potřeby můžete spustit i lokálně s&nbsp;využitím kódu a konfigurace získaného <a href="https://github.com/compiler-explorer/compiler-explorer">z&nbsp;tohoto repositáře</a>.</p>

<p>Již název projektu <i>Compiler Explorer</i> naznačuje, že umožňuje překládat
zdrojové kódy napsané v&nbsp;některém z&nbsp;překládaných (kompilovaných)
jazyků do assembleru s&nbsp;možností prohlédnutí výsledného vygenerovaného
kódu. To je operace, kterou pochopitelně dokáže provést prakticky jakýkoli
překladač, ovšem <i>Compiler Explorer</i> programátorům nabízí především velký
výběr překládaných programovacích jazyků (včetně C, C++, <a
href="https://www.root.cz/serialy/programovaci-jazyk-rust/">Rustu</a> a <a
href="https://www.root.cz/serialy/programovaci-jazyk-go/">Go</a>) a taktéž <a
href="https://compiler-explorer.github.io/compiler-workflows/build-status">velký
výběr překladačů</a>, včetně různých verzí těchto překladačů (v&nbsp;případě C
a C++ je to GCC, LLVM, MSVC, překlad do WebAssembly apod.). Navíc je nabízeno
velké množství cílových platforem, pro které je možné provést překlad, od
historických osmibitových mikroprocesorů, až po moderní x86-64, <a
href="https://www.root.cz/clanky/64bitove-mikroprocesory-s-architekturou-aarch64/">ARMv8</a>
či <a
href="https://www.root.cz/clanky/instrukcni-sada-procesorovych-jader-s-otevrenou-architekturou-risc-v/">RISC-V</a>.
Ovšem <i>Compiler Explorer</i> uživatelům navíc nabízí možnost specifikovat
parametry překladu, tedy většinou zapínat a vypínat optimalizace (prováděné
s&nbsp;ohledem na rychlost či velikost cílového strojového kódu),
popř.&nbsp;zapínat a vypínat různá rozšíření instrukční sady či <a
href="https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html">určit typ
procesoru</a>, což je v&nbsp;současnosti důležité pro všechny tři výše zmíněné
platformy: x86-64, ARM a taktéž RISC-V.</p>




<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Top 5 Online IDEs for In-Browser Development<br />
<a href="https://www.developer.com/cloud/top-online-ide/">https://www.developer.com/cloud/top-online-ide/</a>
</li>

<li>Online IDE (Beta)<br />
<a href="https://www.online-ide.com/">https://www.online-ide.com/</a>
</li>

<li>Online C and C++<br />
<a href="https://www.online-cpp.com/online_c_ide">https://www.online-cpp.com/online_c_ide</a>
</li>

<li>Sharplab.io<br />
<a href="https://sharplab.io/">https://sharplab.io/</a>
</li>

<li>12 Best Online IDE and Code Editors to Develop Web Applications<br />
<a href="https://geekflare.com/online-code-editors/">https://geekflare.com/online-code-editors/</a>
</li>

<li>Try F#<br />
<a href="https://try.fsharp.org/">https://try.fsharp.org/</a>
</li>

<li>Fable.io<br />
<a href="https://fable.io/repl3/">https://fable.io/repl3/</a>
</li>

<li>FSBolero<br />
<a href="https://tryfsharp.fsbolero.io/">https://tryfsharp.fsbolero.io/</a>
</li>

<li>The Go Playground<br />
<a href="https://go.dev/play/">https://go.dev/play/</a>
</li>

<li>TryAPL Version 3.6.1<br />
<a href="https://tryapl.org/">https://tryapl.org/</a>
</li>

<li>Replit<br />
<a href="https://replit.com/">https://replit.com/</a>
</li>

<li>Ghostwriter<br />
<a href="https://replit.com/site/ghostwriter">https://replit.com/site/ghostwriter</a>
</li>

<li>QBJS<br />
<a href="https://boxgm.itch.io/qbjs">https://boxgm.itch.io/qbjs</a>
</li>

<li>The Rust playground<br />
<a href="https://play.rust-lang.org/">https://play.rust-lang.org/</a>
</li>

<li>Stránka s&nbsp;popisem různých IDE pro Python<br />
<a href="http://quintagroup.com/cms/python/ide">http://quintagroup.com/cms/python/ide</a>
</li>

<li>Eclipse (stránka o frameworku na Fedoraproject.org)<br />
<a href="https://fedoraproject.org/wiki/Eclipse">https://fedoraproject.org/wiki/Eclipse</a>
</li>

<li>PyDev (hlavní stránka)<br />
<a href="http://pydev.sourceforge.net/index.html">http://pydev.sourceforge.net/index.html</a>
</li>

<li>PyDev (download, v podstatě není zapotřebí)<br />
<a href="http://pydev.sourceforge.net/download.html">http://pydev.sourceforge.net/download.html</a>
</li>

<li>PyDev (stránka s metainformacemi o PyDev pluginu, použita v Eclipse)<br />
<a href="http://www.pydev.org/updates/">http://www.pydev.org/updates/</a>
</li>

<li>PyDev (stránka s pluginem, použita v Eclipse)<br />
<a href="https://dl.bintray.com/fabioz/pydev/4.5.4/">https://dl.bintray.com/fabioz/pydev/4.5.4/</a>
</li>

<li>Python playground<br />
<a href="https://lwebapp.com/en/python-playground">https://lwebapp.com/en/python-playground</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

