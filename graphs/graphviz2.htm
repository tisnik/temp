<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba grafů a diagramů s využitím doménově specifického jazyka nástroje Graphviz (2.část)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba grafů a diagramů s využitím doménově specifického jazyka nástroje Graphviz (2.část)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve druhém článku o nástroji Graphviz se nejprve zaměříme na algoritmy určené pro rozmístění uzlů na ploše grafu. Následně se budeme zabývat problematikou specifikace i vizuálního zvýraznění podgrafů. A ve třetí části článku si ukážeme, jak lze měnit tvar uzlů popř. tvar šipek či celých hran.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Využití různých algoritmů pro rozmístění uzlů na plochu obrázku</a></p>
<p><a href="#k02">2. Graf se šesticí uzlů spojených jediným cyklem</a></p>
<p><a href="#k03">3. Výsledek aplikace jednotlivých algoritmů</a></p>
<p><a href="#k04">4. Neorientovaný graf se středovým uzlem</a></p>
<p><a href="#k05">5. Výsledek aplikace jednotlivých algoritmů</a></p>
<p><a href="#k06">6. Explicitní specifikace kořenového uzlu</a></p>
<p><a href="#k07">7. Graf se středovým uzlem a okrajovými podstromy</a></p>
<p><a href="#k08">8. Algoritmy <strong>dot</strong> a <strong>circo</strong> a několikanásobné hrany mezi uzly</a></p>
<p><a href="#k09">9. Symetrický orientovaný i neorientovaný graf s&nbsp;podstromy</a></p>
<p><a href="#k10">10. Specifikace podgrafů</a></p>
<p><a href="#k11">11. Postupné přidávání podgrafů</a></p>
<p><a href="#k12">12. Barevné zvýraznění podgrafů</a></p>
<p><a href="#k13">*** 13. Postupné přidávání podgrafů &bdquo;clusterX&ldquo; se specifikací jejich barevné výplně</a></p>
<p><a href="#k14">*** 14. Změna tvaru uzlů v&nbsp;grafech</a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Odkazy na články s&nbsp;tématem programové tvorby grafů a diagramů</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Využití různých algoritmů pro rozmístění uzlů na plochu obrázku</h2>

<p>Na <a
href="https://www.root.cz/clanky/tvorba-grafu-a-diagramu-s-vyuzitim-domenove-specifickeho-jazyka-nastroje-graphviz/">úvodní
článek o nástroji Graphviz</a> dnes navážeme a popíšeme si další možnosti,
které tento nástroj (resp.&nbsp;přesněji řečeno sada nástrojů) uživatelům
nabízí. Nejprve se zaměříme na různé algoritmy určené pro rozmístění uzlů na
ploše grafu. Následně se budeme zabývat problematikou specifikace i vizuálního
zvýraznění podgrafů. A ve třetí části článku si ukážeme, jak lze měnit tvar
uzlů popř.&nbsp;tvar šipek či celých hran.</p>

<p>Prozatím jsme většinu grafů vykreslovali nástrojem nazvaným
<strong>dot</strong> (což je současně i jméno jazyka pro definici grafů). Ve
skutečnosti je ovšem <i>Graphviz</i> sadou většího množství nástrojů, které se
od sebe odlišují především tím, jaký algoritmus je použit pro rozmístění uzlů
na ploše &ndash; což do značné míry ovlivňuje přehlednost (či naopak
nepřehlednost) vykresleného grafu. Těchto nástrojů-algoritmů existuje celá řada
a každý se hodí pro jiné účely. Standardní algoritmy dostupné v&nbsp;instalaci
<i>Graphviz</i> jsou vypsány v&nbsp;tabulce pod tímto odstavcem:</p>

<table>
<tr><th>#</th><th>Název nástroje</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>dot</td><td>používáno pro grafy s&nbsp;hierarchií uzlů a skupin (podgrafy, clustery)</td></tr>
<tr><td>2</td><td>neato</td><td>určeno pro symetrické grafy (typicky neorientované)</td></tr>
<tr><td>3</td><td>twopi</td><td>určeno pro grafy, které mají uzly rozmístěny radiálně (paprskovitě)</td></tr>
<tr><td>4</td><td>circo</td><td>určeno pro &nbsp;uzly rozmístěnými na pomyslnou kružnici</td></tr>
<tr><td>5</td><td>fdp</td><td>určeno především pro symetrické grafy</td></tr>
<tr><td>6</td><td>sfdp</td><td>určeno především pro rozsáhlé neorientované grafy</td></tr>
<tr><td>7</td><td>patchwork</td><td>typicky používáno pro stromy (tj.&nbsp;pro grafy bez cyklů)</td></tr>
<tr><td>8</td><td>osage</td><td>určeno pro grafy s&nbsp;clustery, alternativa k&nbsp;<strong>dot</strong></td></tr>
</table>

<p>Vliv jednotlivých algoritmů si ukážeme na několika příkladech s&nbsp;různými
typy grafů.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Graf se šesticí uzlů spojených jediným cyklem</h2>

<p>Prvním demonstračním příkladem, s&nbsp;nímž se dnes seznámíme, je příklad
obsahující definici grafu se šesticí uzlů, které jsou propojeny jediným
<i>cyklem</i>. Konkrétně to znamená, že první uzel je propojen s&nbsp;uzlem
druhým, ten s&nbsp;uzlem třetím atd. až poslední uzel je opět propojen
s&nbsp;prvním uzlem. Jedná se o neorientovaný graf:</p>

<pre>
<strong>graph</strong> {
    rankdir=LR
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    a -- b
    b -- c
    c -- d;
    d -- e;
    e -- f;
    f -- a;
}
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Výsledek aplikace jednotlivých algoritmů</h2>

*** image ***
<p><i>Obrázek 1: Algoritmus <strong>circo</strong>.</i></p>

*** image ***
<p><i>Obrázek 2: Algoritmus <strong>dot</strong>.</i></p>

*** image ***
<p><i>Obrázek 3: Algoritmus <strong>fdp</strong>.</i></p>

*** image ***
<p><i>Obrázek 4: Algoritmus <strong>neato</strong>.</i></p>

*** image ***
<p><i>Obrázek 5: Algoritmus <strong>osage</strong>.</i></p>

*** image ***
<p><i>Obrázek 6: Algoritmus <strong>patchwork</strong>.</i></p>

*** image ***
<p><i>Obrázek 7: Algoritmus <strong>sfpd</strong>.</i></p>

*** image ***
<p><i>Obrázek 8: Algoritmus <strong>twopi</strong>.</i></p>

<p><div class="rs-tip-major">Poznámka: podle očekávání dopadl nejlépe
algoritmus <strong>circo</strong>, který všechny uzly umístil na pomyslnou
kružnici. Druhý vizuálně nejhezčí graf byl vytvořen algoritmem
<strong>neato</strong>.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Neorientovaný graf se středovým uzlem</h2>

<p>Ve druhém grafu, na němž budeme testovat různé algoritmy pro rozložení uzlů,
přidáme &bdquo;středový&ldquo; uzel <strong>o</strong> s&nbsp;popiskem &omega;.
Tento uzel je propojen se všemi ostatními uzly (a ty jsou navzájem propojeny
stejně, jako tomu bylo v&nbsp;prvním demonstračním příkladu):</p>

<pre>
<strong>graph</strong> {
    rankdir=LR
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
    <strong>o[label="&omega;"]</strong>
&nbsp;
    a -- b
    b -- c
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    <strong>a -- o;</strong>
    <strong>b -- o;</strong>
    <strong>c -- o;</strong>
    <strong>d -- o;</strong>
    <strong>e -- o;</strong>
    <strong>f -- o;</strong>
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Výsledek aplikace jednotlivých algoritmů</h2>

*** image ***
<p><i>Obrázek 9: Algoritmus <strong>circo</strong>.</i></p>

*** image ***
<p><i>Obrázek 10: Algoritmus <strong>dot</strong>.</i></p>

*** image ***
<p><i>Obrázek 11: Algoritmus <strong>fdp</strong>.</i></p>

*** image ***
<p><i>Obrázek 12: Algoritmus <strong>neato</strong>.</i></p>

*** image ***
<p><i>Obrázek 13: Algoritmus <strong>osage</strong>.</i></p>

*** image ***
<p><i>Obrázek 14: Algoritmus <strong>patchwork</strong>.</i></p>

*** image ***
<p><i>Obrázek 15: Algoritmus <strong>sfpd</strong>.</i></p>

*** image ***
<p><i>Obrázek 16: Algoritmus <strong>twopi</strong>.</i></p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;tomto případě nejlépe dopadly
algoritmy <strong>neato</strong> (znovu) a <strong>sfdp</strong>.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Explicitní specifikace kořenového uzlu</h2>

<p>Algoritmus <strong>twopi</strong> vyžaduje explicitní specifikaci kořenového
uzlu. Pokud neví, který uzel je kořenový, vybere náhodně libovolný uzel, takže
pravděpodobnost, že vybere ten správný, je relativně malá (a nelze se na ni
spoléhat). Z&nbsp;tohoto důvodu je možné v&nbsp;jazyce <strong>dot</strong>
specifikovat kořenový uzel atributem <strong>root</strong>. Tento kořenový uzel
bude umístěn uprostřed grafu a ostatní uzly se uspořádají do soustředných
kružnic. Předchozí demonstrační příklad tedy postačuje nepatrně upravit:</p>

<pre>
<strong>graph</strong> {
    rankdir=LR
    <strong>root=o</strong>
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
    o[label="&omega;"]
&nbsp;
    a -- b
    b -- c
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    a -- o;
    b -- o;
    c -- o;
    d -- o;
    e -- o;
    f -- o;
}
</pre>

<p>Z&nbsp;výsledku je nyní patrné, že algoritmus <strong>twopi</strong>
vytvořil estetický symetrický graf:</p>

*** image ***
<p><i>Obrázek 17: Výsledek práce algoritmu <strong>twopi</strong>.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Graf se středovým uzlem a okrajovými podstromy</h2>

<p>V&nbsp;předchozích kapitolách jsme si řekli, že se algoritmus
<strong>twopi</strong> snaží umístit jeden uzel do středu grafu a ostatní uzly
do soustředných kružnic okolo něj. Na sedmnáctém obrázku je patrné použití
jediné pomyslné kružnice, ovšem v&nbsp;případě složitějších grafů je možné mít
těchto kružnic více. Toto chování algoritmu <strong>twopi</strong> si ukážeme
na dalším grafu, jenž má (opět) explicitně zvolený středový uzel (kořenový).
Z&nbsp;dalších šesti základních uzlů vedou hrany do dalších dvanácti uzlů:</p>

<pre>
<strong>graph</strong> {
    rankdir=LR
    <strong>root=o</strong>
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
    o[label="&omega;"]
&nbsp;
    a -- b;
    b -- c;
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    a -- o;
    b -- o;
    c -- o;
    d -- o;
    e -- o;
    f -- o;
&nbsp;
    a -- a1;
    a -- a2;
    b -- b1;
    b -- b2;
    c -- c1;
    c -- c2;
    d -- d1;
    d -- d2;
    e -- e1;
    e -- e2;
    f -- f1;
    f -- f2;
}
</pre>

<p>Takto definovaný graf se s&nbsp;využitím algoritmu <strong>twopi</strong>
zobrazí následovně:</p>

*** image ***
<p><i>Obrázek 18: Výsledek práce algoritmu <strong>twopi</strong>.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Algoritmy <strong>dot</strong> a <strong>circo</strong> a několikanásobné hrany mezi uzly</h2>

<p>Mnohdy je nutné pracovat s&nbsp;grafy, v&nbsp;nichž jsou uzly propojeny
několikanásobnými hranami (ať již orientovanými, tak i neorientovanými). Takové
grafy jsou zpracovatelné všemi osmi výše zmíněnými algoritmy, ovšem
s&nbsp;různých úspěchem. Ukažme si nyní, co se stane, pokud do grafu <a
href="#k07">z&nbsp;předchozí kapitoly</a> přidáme hrany mezi základní šestici
uzlů &alpha; až &zeta;:</p>

<pre>
<strong>graph</strong> {
    rankdir=LR
    <strong>root=o</strong>
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
    o[label="&omega;"]
&nbsp;
    a -- b;
    b -- c;
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    a -- b;
    b -- c;
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    a -- o;
    b -- o;
    c -- o;
    d -- o;
    e -- o;
    f -- o;
&nbsp;
    a -- a1;
    a -- a2;
    b -- b1;
    b -- b2;
    c -- c1;
    c -- c2;
    d -- d1;
    d -- d2;
    e -- e1;
    e -- e2;
    f -- f1;
    f -- f2;
}
</pre>

<p>Základní algoritmus <strong>dot</strong> i přes snahu vytvořil dosti
nečitelný graf:</p>

*** image ***
<p><i>Obrázek 19: Výsledek práce algoritmu <strong>dot</strong>.</i></p>

<p>Naproti tomu algoritmus <strong>twopi</strong> vytvořil graf, který je
mnohem lepší jak po stránce vizuální, tak i z&nbsp;hlediska celkové
čitelnosti:</p>

*** image ***
<p><i>Obrázek 20: Výsledek práce algoritmu <strong>twopi</strong>.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Symetrický orientovaný i neorientovaný graf s&nbsp;podstromy</h2>

<p>Algoritmus <strong>circo</strong> dokáže zpracovat jak orientované, tak i
neorientované grafy. Můžeme se o tom ostatně velmi snadno přesvědčit po
vykreslení grafů definovaných v&nbsp;následující dvojici demonstračních
příkladů. První z&nbsp;těchto příkladů je neorientovaným grafem se šesti uzly
tvořícími cyklus a s&nbsp;dalšími dvanácti listy:</p>

<pre>
<strong>graph</strong> {
    <strong>rankdir=LR</strong>
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    a -- b;
    b -- c;
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    a -- b;
    b -- c;
    c -- d;
    d -- e;
    e -- f;
    f -- a;
&nbsp;
    a -- a1;
    a -- a2;
    b -- b1;
    b -- b2;
    c -- c1;
    c -- c2;
    d -- d1;
    d -- d2;
    e -- e1;
    e -- e2;
    f -- f1;
    f -- f2;
}
</pre>

<p>Druhý demonstrační příklad z&nbsp;této kapitoly je prakticky totožný, ovšem
graf je nyní orientovaný &ndash; jeho hrany jsou tedy tvořeny šipkami:</p>

<pre>
<strong>digraph</strong> {
    <strong>rankdir=LR</strong>
&nbsp;
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Z&nbsp;následující dvojice obrázků je patrné, že vykreslené grafy jsou
prakticky totožné (pochopitelně až na odlišné hrany):</p>

*** image ***
<p><i>Obrázek 21: Výsledek práce algoritmu <strong>circo</strong>
(neorientovaný graf).</i></p>

*** image ***
<p><i>Obrázek 22: Výsledek práce algoritmu <strong>circo</strong> (orientovaný
graf).</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Specifikace podgrafů</h2>

<p>Doménově specifický jazyk <strong>dot</strong> umožňuje v&nbsp;grafu
definovat podgrafy, což jsou uzly, které mohou mít společné vlastnosti (a to i
vizuální). Pokud nějaké uzly tvoří podgraf, budou se jednotlivé algoritmy
snažit takové uzly vhodným způsobem uspořádat. Samotná definice podgrafu vypadá
následovně:</p>

<pre>
    ...
    ...
    ...
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
    ...
    ...
    ...
</pre>

<p>Z&nbsp;tohoto úryvku kódu je patrné, že v&nbsp;podgrafu můžeme pouze
specifikovat uzly, které do něj patří.</p>

<p><div class="rs-tip-major">Poznámka: podgrafy je možné i pojmenovat, což lze
využít pro logické označení celého bloku. Ovšem navíc ještě existuje varianta
pojmenování podgrafu začínající slovem &bdquo;cluster&ldquo;. Takové podgrafy
jsou specifické, protože uzly, které do podgrafu spadají, budou orámovány.
Podrobnosti si ukážeme v&nbsp;navazujících kapitolách.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Postupné přidávání podgrafů</h2>

<p>Ukažme si nyní, jak existence podgrafů ovlivňuje způsob zobrazení grafu.
Začneme s&nbsp;následujícím grafem (s&nbsp;celkem osmnácti uzly), v&nbsp;němž
žádné podgrafy definovány nejsou:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Přidáme první podgraf:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Přidáme druhý podgraf:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        b;
        b1;
        b2;
    }
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Přidáme třetí podgraf:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        b;
        b1;
        b2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        c;
        c1;
        c2;
    }
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Přidáme čtvrtý podgraf:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        b;
        b1;
        b2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        c;
        c1;
        c2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        d;
        d1;
        d2;
    }
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Přidáme pátý (předposlední) podgraf:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        b;
        b1;
        b2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        c;
        c1;
        c2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        d;
        d1;
        d2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        e;
        e1;
        e2;
    }
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>A konečně přidáme šestý (poslední) podgraf:</p>

<pre>
<strong>digraph</strong> {
    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        a;
        a1;
        a2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        b;
        b1;
        b2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        c;
        c1;
        c2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        d;
        d1;
        d2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        e;
        e1;
        e2;
    }
&nbsp;
    <strong>subgraph</strong> {
        rank = same;
        f;
        f1;
        f2;
    }
&nbsp;
    a -&gt; b;
    b -&gt; c;
    c -&gt; d;
    d -&gt; e;
    e -&gt; f;
    f -&gt; a;
&nbsp;
    b -&gt; a;
    c -&gt; b;
    d -&gt; c;
    e -&gt; d;
    f -&gt; e;
    a -&gt; f;
&nbsp;
    a -&gt; a1;
    a -&gt; a2;
    b -&gt; b1;
    b -&gt; b2;
    c -&gt; c1;
    c -&gt; c2;
    d -&gt; d1;
    d -&gt; d2;
    e -&gt; e1;
    e -&gt; e2;
    f -&gt; f1;
    f -&gt; f2;
}
</pre>

<p>Výsledky jsou pro lepší vizuální porovnání zobrazeny pod sebou:</p>

*** image ***
<p><i>Obrázek 23: Graf bez podgrafů.</i></p>

*** image ***
<p><i>Obrázek 24: Graf s&nbsp;jedním podgrafem</i></p>

*** image ***
<p><i>Obrázek 25: Graf se dvěma podgrafy</i></p>

*** image ***
<p><i>Obrázek 26: Graf se třemi podgrafy</i></p>

*** image ***
<p><i>Obrázek 27: Graf se čtyřmi podgrafy</i></p>

*** image ***
<p><i>Obrázek 28: Graf s&nbsp;pěti podgrafy</i></p>

*** image ***
<p><i>Obrázek 29: Graf se šesti podgrafy</i></p>

<p><div class="rs-tip-major">Poznámka: z&nbsp;těchto ukázek je patrné, jak se
algoritmus snaží uzly v&nbsp;podgrafu umístit vedle sebe popř.&nbsp;pod
sebe.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Barevné zvýraznění podgrafů</h2>

<p><a href="#k10">V&nbsp;desáté kapitole</a> jsme si řekli, že podgrafy je
možné pojmenovat:</p>

<pre>
<strong>subgraph</strong> <u>totoJeJmeno</u> {
    rank = same;
    a;
    a1;
    a2;
}
</pre>

<p>V&nbsp;případě, že jméno podgrafu začíná slovem &bdquo;cluster&ldquo;, bude
podgraf orámován. A nejen to &ndash; bude možné specifikovat i barvu výplně
tohoto orámování. Následuje příklad využití této velmi užitečné vlastnosti
doménově specifického jazyka <strong>dot</strong>:</p>

<pre>
<strong>subgraph</strong> <i>cluster1</i> {
    rank = same;
    style = "filled";
    fillcolor = "#80ff80";
    a;
    a1;
    a2;
}
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Postupné přidávání podgrafů &bdquo;clusterX&ldquo; se specifikací jejich barevné výplně</h2>

<pre>
<strong>digraph</strong> {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>

<pre>
<strong>digraph</strong> {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    <strong>subgraph</strong> cluster1 {
        rank = same;
        style = "filled";
        fillcolor = "#80ff80";
        a;
        a1;
        a2;
    }

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>

<pre>
<strong>digraph</strong> {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    <strong>subgraph</strong> cluster1 {
        rank = same;
        style = "filled";
        fillcolor = "#80ff80";
        a;
        a1;
        a2;
    }

    <strong>subgraph</strong> cluster2 {
        rank = same;
        style = "filled";
        fillcolor = "#80ffff";
        b;
        b1;
        b2;
    }

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>

<pre>
digraph {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    <strong>subgraph</strong> cluster1 {
        rank = same;
        style = "filled";
        fillcolor = "#80ff80";
        a;
        a1;
        a2;
    }

    <strong>subgraph</strong> cluster2 {
        rank = same;
        style = "filled";
        fillcolor = "#80ffff";
        b;
        b1;
        b2;
    }

    <strong>subgraph</strong> cluster3 {
        rank = same;
        style = "filled";
        fillcolor = "#8080ff";
        c;
        c1;
        c2;
    }

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>

<pre>
digraph {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    <strong>subgraph</strong> cluster1 {
        rank = same;
        style = "filled";
        fillcolor = "#80ff80";
        a;
        a1;
        a2;
    }

    <strong>subgraph</strong> cluster2 {
        rank = same;
        style = "filled";
        fillcolor = "#80ffff";
        b;
        b1;
        b2;
    }

    <strong>subgraph</strong> cluster3 {
        rank = same;
        style = "filled";
        fillcolor = "#8080ff";
        c;
        c1;
        c2;
    }

    <strong>subgraph</strong> cluster4 {
        rank = same;
        style = "filled";
        fillcolor = "#ff80ff";
        d;
        d1;
        d2;
    }

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>

<pre>
digraph {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    <strong>subgraph</strong> cluster1 {
        rank = same;
        style = "filled";
        fillcolor = "#80ff80";
        a;
        a1;
        a2;
    }

    <strong>subgraph</strong> cluster2 {
        rank = same;
        style = "filled";
        fillcolor = "#80ffff";
        b;
        b1;
        b2;
    }

    <strong>subgraph</strong> cluster3 {
        rank = same;
        style = "filled";
        fillcolor = "#8080ff";
        c;
        c1;
        c2;
    }

    <strong>subgraph</strong> cluster4 {
        rank = same;
        style = "filled";
        fillcolor = "#ff80ff";
        d;
        d1;
        d2;
    }

    <strong>subgraph</strong> cluster5 {
        rank = same;
        style = "filled";
        fillcolor = "#ff8080";
        e;
        e1;
        e2;
    }

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>

<pre>
digraph {
    rankdir=LR

    a[label="&alpha;"]
    b[label="&beta;"]
    c[label="&gamma;"]
    d[label="&delta;"]
    e[label="&epsilon;"]
    f[label="&zeta;"]

    <strong>subgraph</strong> cluster1 {
        rank = same;
        style = "filled";
        fillcolor = "#80ff80";
        a;
        a1;
        a2;
    }

    <strong>subgraph</strong> cluster2 {
        rank = same;
        style = "filled";
        fillcolor = "#80ffff";
        b;
        b1;
        b2;
    }

    <strong>subgraph</strong> cluster3 {
        rank = same;
        style = "filled";
        fillcolor = "#8080ff";
        c;
        c1;
        c2;
    }

    <strong>subgraph</strong> cluster4 {
        rank = same;
        style = "filled";
        fillcolor = "#ff80ff";
        d;
        d1;
        d2;
    }

    <strong>subgraph</strong> cluster5 {
        rank = same;
        style = "filled";
        fillcolor = "#ff8080";
        e;
        e1;
        e2;
    }

    <strong>subgraph</strong> cluster6 {
        rank = same;
        style = "filled";
        fillcolor = "#ffff80";
        f;
        f1;
        f2;
    }

    a -> b;
    b -> c;
    c -> d;
    d -> e;
    e -> f;
    f -> a;

    b -> a;
    c -> b;
    d -> c;
    e -> d;
    f -> e;
    a -> f;

    a -> a1;
    a -> a2;
    b -> b1;
    b -> b2;
    c -> c1;
    c -> c2;
    d -> d1;
    d -> d2;
    e -> e1;
    e -> e2;
    f -> f1;
    f -> f2;
}
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Změna tvaru uzlů v&nbsp;grafech</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/diagrams">https://github.com/tisnik/diagrams</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
přibližně jednotky kilobajtů), můžete namísto toho použít odkazy na jednotlivé
demonstrační příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>graph01.dot</td><td>graf s&nbsp;jediným uzlem</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph01.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph01.dot</a></td></tr>
<tr><td> 2</td><td>graph02.dot</td><td>graf s&nbsp;větším množstvím uzlům a neorientovanými hranami</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph02.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph02.dot</a></td></tr>
<tr><td> 3</td><td>graph03.dot</td><td>graf s&nbsp;hranami začínajícími a končícími ve stejném uzlu</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph03.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph03.dot</a></td></tr>
<tr><td> 4</td><td>graph04.dot</td><td>propojení uzlů větším množstvím hran</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph04.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph04.dot</a></td></tr>
<tr><td> 5</td><td>graph05.dot</td><td>popisky neorientovaných hran</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph05.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph05.dot</a></td></tr>
<tr><td> 6</td><td>graph06.dot</td><td>graf se dvěma uzly a orientovanou hranou</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph06.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph06.dot</a></td></tr>
<tr><td> 7</td><td>graph07.dot</td><td>graf s&nbsp;orientovanou hranou, ovšem s&nbsp;opačnou šipkou</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph07.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph07.dot</a></td></tr>
<tr><td> 8</td><td>graph08.dot</td><td>složitější graf s&nbsp;orientovanými hranami</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph08.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph08.dot</a></td></tr>
<tr><td> 9</td><td>graph09.dot</td><td>graf s&nbsp;hranami, které se vrací do původního uzlu</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph09.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph09.dot</a></td></tr>
<tr><td>10</td><td>graph10.dot</td><td>neorientovaný graf se zvýrazněnými hranami</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph10.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph10.dot</a></td></tr>
<tr><td>11</td><td>graph11.dot</td><td>orientovaný graf se zvýrazněnými hranami</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph11.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph11.dot</a></td></tr>
<tr><td>12</td><td>graph12.dot</td><td>orientovaný graf se zvýrazněnými hranami a s&nbsp;uzly uspořádanými zleva doprava</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph12.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph12.dot</a></td></tr>
<tr><td>13</td><td>graph13.dot</td><td>graf s&nbsp;hranami vykreslenými formou úsečky popř.&nbsp;oblouku.</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph13.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph13.dot</a></td></tr>
<tr><td>14</td><td>graph14.dot</td><td>graf, v&nbsp;němž mají jednotlivé uzly nastaven jiný vizuální styl vykreslování</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph14.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph14.dot</a></td></tr>
<tr><td>15</td><td>graph15.dot</td><td>graf s&nbsp;popisky, v&nbsp;nichž jsou použity HTML entity</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph15.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph15.dot</a></td></tr>
<tr><td>16</td><td>graph16.dot</td><td>graf se šesticí uzlů cyklicky propojených orientovanými hranami</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph16.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph16.dot</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>17</td><td>graph17.dot</td><td>graf se šesticí uzlů spojených jediným cyklem</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph17.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph17.dot</a></td></tr>
<tr><td>18</td><td>graph18.dot</td><td>neorientovaný graf se středovým uzlem</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph18.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph18.dot</a></td></tr>
<tr><td>19</td><td>graph19.dot</td><td>explicitní specifikace kořenového uzlu</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph19.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph19.dot</a></td></tr>
<tr><td>20</td><td>graph20.dot</td><td>graf se středovým uzlem a okrajovými podstromy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph20.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph20.dot</a></td></tr>
<tr><td>21</td><td>graph21.dot</td><td>graf s&nbsp;několikanásobnými hranami mezi uzly</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph21.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph21.dot</a></td></tr>
<tr><td>22</td><td>graph22.dot</td><td>symetrický orientovaný i neorientovaný graf s&nbsp;podstromy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/graph22.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/graph22.dot</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>23</td><td>subgraph0.dot</td><td>graf bez podgrafů</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph0.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph0.dot</a></td></tr>
<tr><td>24</td><td>subgraph1.dot</td><td>graf s&nbsp;jedním podgrafem</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph1.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph1.dot</a></td></tr>
<tr><td>25</td><td>subgraph2.dot</td><td>graf se dvěma podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph2.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph2.dot</a></td></tr>
<tr><td>26</td><td>subgraph3.dot</td><td>graf se třemi podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph3.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph3.dot</a></td></tr>
<tr><td>27</td><td>subgraph4.dot</td><td>graf se čtyřmi podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph4.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph4.dot</a></td></tr>
<tr><td>28</td><td>subgraph5.dot</td><td>graf s&nbsp;pěti podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph5.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph5.dot</a></td></tr>
<tr><td>29</td><td>subgraph6.dot</td><td>graf se šesti podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph6.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph6.dot</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>30</td><td>subgraph_c0.dot</td><td>graf bez podgrafů</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c0.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c0.dot</a></td></tr>
<tr><td>31</td><td>subgraph_c1.dot</td><td>graf s&nbsp;jedním pojmenovaným podgrafem</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c1.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c1.dot</a></td></tr>
<tr><td>32</td><td>subgraph_c2.dot</td><td>graf se dvěma pojmenovanými podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c2.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c2.dot</a></td></tr>
<tr><td>33</td><td>subgraph_c3.dot</td><td>graf se třemi pojmenovanými podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c3.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c3.dot</a></td></tr>
<tr><td>34</td><td>subgraph_c4.dot</td><td>graf se čtyřmi pojmenovanými podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c4.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c4.dot</a></td></tr>
<tr><td>35</td><td>subgraph_c5.dot</td><td>graf s&nbsp;pěti pojmenovanými podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c5.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c5.dot</a></td></tr>
<tr><td>36</td><td>subgraph_c6.dot</td><td>graf se šesti pojmenovanými podgrafy</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c6.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/subgraph_c6.dot</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>37</td><td>shapes1.dot</td><td>původní graf s&nbsp;výchozím tvarem uzlů</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/shapes1.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/shapes1.dot</a></td></tr>
<tr><td>38</td><td>shapes2.dot</td><td>změna tvaru uzlů: kružnice</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/shapes2.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/shapes2.dot</a></td></tr>
<tr><td>39</td><td>shapes3.dot</td><td>změna tvaru uzlů: obdélníky</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/shapes3.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/shapes3.dot</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>40</td><td>path1.dot</td><td>výchozí příklad pro další tři operace</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/path1.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/path1.dot</a></td></tr>
<tr><td>41</td><td>path2.dot</td><td>nalezení podgrafu</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/path2.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/path2.dot</a></td></tr>
<tr><td>42</td><td>path3.dot</td><td>automaticky vygenerovaný soubor</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/path3.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/path3.dot</a></td></tr>
<tr><td>43</td><td>path4.dot</td><td>graf, jehož uzly mohou být automaticky obarveny</td><td><a href="https://github.com/tisnik/diagrams/blob/master/graphviz/path4.dot">https://github.com/tisnik/diagrams/blob/master/graphviz/path4.dot</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na články s&nbsp;tématem programové tvorby grafů a diagramů</h2>

<p>V&nbsp;této kapitole jsou uvedeny odkazy na předchozí články, v&nbsp;nichž
jsme se zabývali tvorbou různých typů grafů a diagramů &ndash; a to
v&nbsp;naprosté většině případů s&nbsp;využitím nějakého doménově specifického
jazyka neboli DSL (<i>Domain Specific Language</i>) popř.&nbsp;nějakého
univerzálního programovacího jazyka (zejména <a
href="https://www.root.cz/n/python/">Python</a>, <a
href="https://www.root.cz/serialy/programovaci-jazyk-go/">Go</a>, <a
href="https://www.root.cz/n/clojure/">Clojure</a>):</p>

<ol>

<li>Nástroje pro tvorbu UML diagramů<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z&nbsp;příkazové řádky<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z&nbsp;příkazové řádky (II)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/</a>
</li>

<li>Nástroje pro tvorbu grafů a diagramů z&nbsp;příkazové řádky<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/</a>
</li>

<li>Sledování správy paměti v&nbsp;Pythonu s&nbsp;využitím nástroje objgraph<br />
<a href="https://www.root.cz/clanky/sledovani-spravy-pameti-v-pythonu-s-vyuzitim-nastroje-objgraph/">https://www.root.cz/clanky/sledovani-spravy-pameti-v-pythonu-s-vyuzitim-nastroje-objgraph/</a>
</li>

<li>Programová tvorba diagramů v&nbsp;jazyku Clojure s&nbsp;využitím knihovny Rhizome<br />
<a href="https://www.root.cz/clanky/programova-tvorba-diagramu-v-jazyku-clojure-s-vyuzitim-knihovny-rhizome/">https://www.root.cz/clanky/programova-tvorba-diagramu-v-jazyku-clojure-s-vyuzitim-knihovny-rhizome/</a>
</li>

<li>Tvorba sekvenčních diagramů v&nbsp;Pythonu s&nbsp;využitím knihovny Napkin<br />
<a href="https://www.root.cz/clanky/tvorba-sekvencnich-diagramu-v-pythonu-s-vyuzitim-knihovny-napkin/">https://www.root.cz/clanky/tvorba-sekvencnich-diagramu-v-pythonu-s-vyuzitim-knihovny-napkin/</a>
</li>

<li>Tvorba vývojových diagramů přímo ze zdrojových kódů Pythonu<br />
<a href="https://www.root.cz/clanky/tvorba-vyvojovych-diagramu-primo-ze-zdrojovych-kodu-pythonu/">https://www.root.cz/clanky/tvorba-vyvojovych-diagramu-primo-ze-zdrojovych-kodu-pythonu/</a>
</li>

<li>Tvorba diagramů s architekturou systémů s využitím knihovny Diagrams<br />
<a href="https://www.root.cz/clanky/tvorba-diagramu-s-architekturou-systemu-s-vyuzitim-knihovny-diagrams/">https://www.root.cz/clanky/tvorba-diagramu-s-architekturou-systemu-s-vyuzitim-knihovny-diagrams/</a>
</li>

<li>Knihovny Diagrams a go-diagrams určené pro tvorbu diagramů s&nbsp;architekturou systémů<br />
<a href="https://www.root.cz/clanky/knihovny-diagrams-a-go-diagrams-urcene-pro-tvorbu-diagramu-s-architekturou-systemu/">https://www.root.cz/clanky/knihovny-diagrams-a-go-diagrams-urcene-pro-tvorbu-diagramu-s-architekturou-systemu/</a>
</li>

<li>Tvorba grafů a diagramů s&nbsp;využitím doménově specifického jazyka nástroje Graphviz<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-a-diagramu-s-vyuzitim-domenove-specifickeho-jazyka-nastroje-graphviz/">https://www.root.cz/clanky/tvorba-grafu-a-diagramu-s-vyuzitim-domenove-specifickeho-jazyka-nastroje-graphviz/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>GraphViz Pocket Reference<br />
<a href="https://graphs.grevian.org/example">https://graphs.grevian.org/example</a>
</li>

<li>Xfig home page<br />
<a href="http://mcj.sourceforge.net/">http://mcj.sourceforge.net/</a>
</li>

<li>Xfig (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Xfig">https://en.wikipedia.org/wiki/Xfig</a>
</li>

<li>Xfig user manual<br />
<a href="http://mcj.sourceforge.net/">http://mcj.sourceforge.net/</a>
</li>

<li>HTML Entity List<br />
<a href="https://www.freeformatter.com/html-entities.html">https://www.freeformatter.com/html-entities.html</a>
</li>

<li>Flowchart (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Flowchart">https://en.wikipedia.org/wiki/Flowchart</a>
</li>

<li>DRAKON<br />
<a href="https://en.wikipedia.org/wiki/DRAKON">https://en.wikipedia.org/wiki/DRAKON</a>
</li>

<li>Modeling language<br />
<a href="https://en.wikipedia.org/wiki/Modeling_language">https://en.wikipedia.org/wiki/Modeling_language</a>
</li>

<li>Napkin na GitHubu<br />
<a href="https://github.com/pinetr2e/napkin">https://github.com/pinetr2e/napkin</a>
</li>

<li>Napkin 0.6.8 na PyPi<br />
<a href="https://pypi.org/project/napkin/">https://pypi.org/project/napkin/</a>
</li>

<li>PlantUML (home page)<br />
<a href="http://plantuml.sourceforge.net/">http://plantuml.sourceforge.net/</a>
</li>

<li>PlantUML (download page)<br />
<a href="http://sourceforge.net/projects/plantuml/files/plantuml.jar/download">http://sourceforge.net/projects/plantuml/files/plantuml.jar/download</a>
</li>

<li>PlantUML (Language Reference Guide)<br />
<a href="http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf">http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf</a>
</li>

<li>Rhizome<br />
<a href="https://github.com/ztellman/rhizome">https://github.com/ztellman/rhizome</a>
</li>

<li>Swagger to UML<br />
<a href="https://github.com/nlohmann/swagger_to_uml">https://github.com/nlohmann/swagger_to_uml</a>
</li>

<li>pydiagrams<br />
<a href="https://github.com/billingtonm/pydiagrams">https://github.com/billingtonm/pydiagrams</a>
</li>

<li>graphviz(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/graphviz">https://linux.die.net/man/3/graphviz</a>
</li>

<li>dot(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/dot">https://linux.die.net/man/1/dot</a>
</li>

<li>neato(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/neato">https://linux.die.net/man/1/neato</a>
</li>

<li>twopi(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/twopi">https://linux.die.net/man/1/twopi</a>
</li>

<li>circo(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/circo">https://linux.die.net/man/1/circo</a>
</li>

<li>fdp(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/fdp">https://linux.die.net/man/1/fdp</a>
</li>

<li>sfdp(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/sfdp">https://linux.die.net/man/1/sfdp</a>
</li>

<li>Plain-text diagrams take shape in Asciidoctor!<br />
<a href="http://asciidoctor.org/new­s/2014/02/18/plain-text-diagrams-in-asciidoctor/">http://asciidoctor.org/new­s/2014/02/18/plain-text-diagrams-in-asciidoctor/</a>
</li>

<li>Graphviz – Graph Visualization Software<br />
<a href="http://www.graphviz.org/">http://www.graphviz.org/</a>
</li>

<li>graphviz (Manual Page)<br />
<a href="http://www.root.cz/man/7/graphviz/">http://www.root.cz/man/7/graphviz/</a>
</li>

<li>dot (Manual page)<br />
<a href="http://www.root.cz/man/1/dot/">http://www.root.cz/man/1/dot/</a>
</li>

<li>dot (Manual v&nbsp;PDF)<br />
<a href="https://graphviz.org/pdf/dot.1.pdf">https://graphviz.org/pdf/dot.1.pdf</a>
</li>

<li>Ditaa home page<br />
<a href="http://ditaa.sourceforge.net/">http://ditaa.sourceforge.net/</a>
</li>

<li>Ditaa introduction<br />
<a href="http://ditaa.sourceforge.net/#intro">http://ditaa.sourceforge.net/#intro</a>
</li>

<li>Ditaa usage<br />
<a href="http://ditaa.sourceforge.net/#usage">http://ditaa.sourceforge.net/#usage</a>
</li>

<li>Node, Edge and Graph Attributes<br />
<a href="http://www.graphviz.org/doc/in­fo/attrs.html">http://www.graphviz.org/doc/in­fo/attrs.html</a>
</li>

<li>Graphviz (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Graphviz">http://en.wikipedia.org/wiki/Graphviz</a>
</li>

<li>Unified Modeling Language<br />
<a href="https://en.wikipedia.org/wiki/Unified_Modeling_Language">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a>
</li>

<li>UML basics: The sequence diagram<br />
<a href="http://www.ibm.com/developerworks/rational/library/3101.html">http://www.ibm.com/developerworks/rational/library/3101.html</a>
</li>

<li>UML 2 State Machine Diagrams: An Agile Introduction<br />
<a href="http://www.agilemodeling.com/artifacts/stateMachineDiagram.htm">http://www.agilemodeling.com/artifacts/stateMachineDiagram.htm</a>
</li>

<li>Sequence diagram (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Sequence_diagram">https://en.wikipedia.org/wiki/Sequence_diagram</a>
</li>

<li>UML 2 Sequence Diagrams: An Agile Introduction<br />
<a href="http://www.agilemodeling.com/artifacts/sequenceDiagram.htm">http://www.agilemodeling.com/artifacts/sequenceDiagram.htm</a>
</li>

<li>A Quick Introduction to UML Sequence Diagrams<br />
<a href="http://www.tracemodeler.com/articles/a_quick_introduction_to_uml_sequence_diagrams/">http://www.tracemodeler.com/articles/a_quick_introduction_to_uml_sequence_diagrams/</a>
</li>

<li>UML Sequence Diagrams<br />
<a href="https://www.uml-diagrams.org/sequence-diagrams.html">https://www.uml-diagrams.org/sequence-diagrams.html</a>
</li>

<li>Web Sequence Diagrams<br />
<a href="https://www.websequencediagrams.com/">https://www.websequencediagrams.com/</a>
</li>

<li>Drawing sequence diagrams “napkin style”<br />
<a href="https://modeling-languages.com/drawing-sequence-diagrams-napkin-style/">https://modeling-languages.com/drawing-sequence-diagrams-napkin-style/</a>
</li>

<li>Curated list of UML tools – 2020 edition<br />
<a href="https://modeling-languages.com/uml-tools/#textual">https://modeling-languages.com/uml-tools/#textual</a>
</li>

<li>Flowchart diagrams vs. UML activity diagrams<br />
<a href="https://stackoverflow.com/questions/7081215/flowchart-diagrams-vs-uml-activity-diagrams">https://stackoverflow.com/questions/7081215/flowchart-diagrams-vs-uml-activity-diagrams</a>
</li>

<li>Kopenograms – Graphical Language for Structured Algorithms<br />
<a href="https://kopenogram.org/Assets/Kopenograms_Graphical_Language_for_Structured_Algorithms.pdf">https://kopenogram.org/Assets/Kopenograms_Graphical_Language_for_Structured_Algorithms.pdf</a>
</li>

<li>Kopenograms and Their Implementation in BlueJ<br />
<a href="https://link.springer.com/chapter/10.1007%2F978-3-319-46535-7_8">https://link.springer.com/chapter/10.1007%2F978-3-319-46535-7_8</a>
</li>

<li>The simplest way to describe your flows<br />
<a href="https://code2flow.com/">https://code2flow.com/</a>
</li>

<li>Allan Mogensen and his Legacy<br />
<a href="http://www.worksimp.com/articles/allan-mogensen.htm">http://www.worksimp.com/articles/allan-mogensen.htm</a>
</li>

<li>Diagrams: Diagram as Code<br />
<a href="https://diagrams.mingrammer.com/">https://diagrams.mingrammer.com/</a>
</li>

<li>Diagrams: Guides<br />
<a href="https://diagrams.mingrammer.com/docs/guides/diagram">https://diagrams.mingrammer.com/docs/guides/diagram</a>
</li>

<li>Diagrams: Nodes<br />
<a href="https://diagrams.mingrammer.com/docs/nodes/">https://diagrams.mingrammer.com/docs/nodes/onprem</a>
</li>

<li>go-diagrams<br />
<a href="https://github.com/blushft/go-diagrams">https://github.com/blushft/go-diagrams</a>
</li>

<li>GoJS<br />
<a href="https://gojs.net/latest/index.html">https://gojs.net/latest/index.html</a>
</li>

<li>Code visualization: How to turn complex code into diagrams<br />
<a href="https://www.lucidchart.com/blog/visualize-code-documentation">https://www.lucidchart.com/blog/visualize-code-documentation</a>
</li>

<li>Create dependency diagrams from your code<br />
<a href="https://docs.microsoft.com/en-us/visualstudio/modeling/create-layer-diagrams-from-your-code?view=vs-2019">https://docs.microsoft.com/en-us/visualstudio/modeling/create-layer-diagrams-from-your-code?view=vs-2019</a>
</li>

<li>Software Architecture Diagrams as Code<br />
<a href="https://shekhargulati.com/2020/04/21/software-architecture-diagrams-as-code/">https://shekhargulati.com/2020/04/21/software-architecture-diagrams-as-code/</a>
</li>

<li>Processing spreadsheet data in Go<br />
<a href="https://appliedgo.net/spreadsheet/">https://appliedgo.net/spreadsheet/</a>
</li>

<li>Stránka projektu plotly<br />
<a href="https://plot.ly/">https://plot.ly/</a>
</li>

<li>Plotly JavaScript Open Source Graphing Library<br />
<a href="https://plot.ly/javascript/">https://plot.ly/javascript/</a>
</li>

<li>Domain coloring<br />
<a href="https://en.wikipedia.org/wiki/Domain_coloring">https://en.wikipedia.org/wiki/Domain_coloring</a>
</li>

<li>The Gonum Numerical Computing Package<br />
<a href="https://www.gonum.org/post/introtogonum/">https://www.gonum.org/post/introtogonum/</a>
</li>

<li>Gomacro na GitHubu<br />
<a href="https://github.com/cosmos72/gomacro">https://github.com/cosmos72/gomacro</a>
</li>

<li>gophernotes - Use Go in Jupyter notebooks and nteract<br />
<a href="https://github.com/gopherdata/gophernotes">https://github.com/gopherdata/gophernotes</a>
</li>

<li>gonum<br />
<a href="https://github.com/gonum">https://github.com/gonum</a>
</li>

<li>go-gota/gota -  DataFrames and data wrangling in Go (Golang)<br />
<a href="https://porter.io/github.com/go-gota/gota">https://porter.io/github.com/go-gota/gota</a>
</li>

<li>A repository for plotting and visualizing data <br />
<a href="https://github.com/gonum/plot">https://github.com/gonum/plot</a>
</li>

<li>Gonum Numerical Packages<br />
<a href="https://www.gonum.org/">https://www.gonum.org/</a>
</li>

<li>Getting started with Go modules<br />
<a href="https://medium.com/@fonseka.live/getting-started-with-go-modules-b3dac652066d">https://medium.com/@fonseka.live/getting-started-with-go-modules-b3dac652066d</a>
</li>

<li>Create projects independent of $GOPATH using Go Modules<br />
<a href="https://medium.com/mindorks/create-projects-independent-of-gopath-using-go-modules-802260cdfb51o">https://medium.com/mindorks/create-projects-independent-of-gopath-using-go-modules-802260cdfb51o</a>
</li>

<li>Anatomy of Modules in Go<br />
<a href="https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16">https://medium.com/rungo/anatomy-of-modules-in-go-c8274d215c16</a>
</li>

<li>Modules<br />
<a href="https://github.com/golang/go/wiki/Modules">https://github.com/golang/go/wiki/Modules</a>
</li>

<li>Go Modules Tutorial<br />
<a href="https://tutorialedge.net/golang/go-modules-tutorial/">https://tutorialedge.net/golang/go-modules-tutorial/</a>
</li>

<li>Module support<br />
<a href="https://golang.org/cmd/go/#hdr-Module_support">https://golang.org/cmd/go/#hdr-Module_support</a>
</li>

<li>Go vs. Python<br />
<a href="https://www.peterbe.com/plog/govspy">https://www.peterbe.com/plog/govspy</a>
</li>

<li>PackageManagementTools<br />
<a href="https://github.com/golang/go/wiki/PackageManagementTools">https://github.com/golang/go/wiki/PackageManagementTools</a>
</li>

<li>Sketchviz<br />
<a href="https://sketchviz.com/">https://sketchviz.com/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

