<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Podrobnější popis vlastností programovacího jazyka R</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Podrobnější popis vlastností programovacího jazyka R</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Psát užitečné skripty v jazyce R je možné i bez detailní znalosti syntaxe a sémantiky tohoto jazyka. I proto se k tomuto tématu dostáváme až ve třinácté části seriálu o R. Popíšeme si vlastnosti datových typů i všechny nabízené řídicí konstrukce: podmínky a programové smyčky.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Základní operace s&nbsp;balíčky</a></p>
<p><a href="#k02">2. Instalace nového balíčku</a></p>
<p><a href="#k03">3. Datové typy a proměnné</a></p>
<p><a href="#k04">4. Deklarace proměnných</a></p>
<p><a href="#k05">5. Základní funkce pro práci s&nbsp;proměnnými</a></p>
<p><a href="#k06">6. Automatické převody mezi hodnotami různých typů</a></p>
<p><a href="#k07">7. Explicitní datové konverze</a></p>
<p><a href="#k08">8. Hodnoty <strong>Inf</strong>, <strong>-Inf</strong> a <strong>NaN</strong></a></p>
<p><a href="#k09">9. Aritmetické a relační operace s&nbsp;hodnotou <strong>NaN</strong></a></p>
<p><a href="#k10">10. Speciální hodnota <strong>NA</strong> a její varianty</a></p>
<p><a href="#k11">11. Řízení toku programu v&nbsp;jazyce R</a></p>
<p><a href="#k12">12. Podmínky realizované konstrukcí <strong>if</strong></a></p>
<p><a href="#k13">13. Konstrukce <strong>ifelse</strong></a></p>
<p><a href="#k14">14. Konstrukce <strong>switch</strong></a></p>
<p><a href="#k15">15. Programová smyčka typu <strong>repeat</strong></a></p>
<p><a href="#k16">16. Programová smyčka typu <strong>while</strong></a></p>
<p><a href="#k17">17. Programová smyčka typu <strong>for</strong></a></p>
<p><a href="#k18">18. Seznam dnes použitých funkcí</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Balíčky</h2>

<p>Nejprve si popišme (popř.&nbsp;připomeňme) základní funkce používané pro
práci s&nbsp;balíčky. Každý balíček typicky obsahuje sadu funkcí s&nbsp;jejich
dokumentací, ovšem mnohdy obsahuje i testovací data, nápovědu k&nbsp;použití
těchto testovacích dat a některé balíčky jsou založeny na nativních funkcích
překládaných a linkovaných v&nbsp;rámci instalace balíčku.</p>

<p>Pokud je nějaký balíček již nainstalován a je nutné ho použít, lze takový
balíček načíst příkazem <strong>require</strong>:</p>

<pre>
&gt; <strong>require(lattice)</strong>
&nbsp;
Loading required package: lattice
</pre>

<p>Popř.&nbsp;se použije příkaz <strong>library</strong>:</p>

<pre>
&gt; <strong>library(lattice)</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se jméno balíčku
zapisuje bez uvozovek.</div></p>

<p>Při pokusu inicializovat neexistující balíček dojde k&nbsp;chybě:</p>

<pre>
&gt; <strong>library(foobar)</strong>
Error in library(foobar) : there is no package called ‘foobar’
</pre>

<p>K&nbsp;balíčku je možné zobrazit dokumentaci zadáním příkazu
<strong>help</strong>, kterému se předá jméno balíčku:</p>

<pre>
&gt; <strong>help(lattice)</strong>
</pre>

<p>V&nbsp;tomto případě s&nbsp;výsledkem:</p>

<pre>
A_01_Lattice              package:lattice              R Documentation
&nbsp;
Lattice Graphics
&nbsp;
Description:
&nbsp;
     The ‘lattice’ add-on package is an implementation of Trellis
     graphics for R.  It is a powerful and elegant high-level data
     visualization system with an emphasis on multivariate data.  It is
     designed to meet most typical graphics needs with minimal tuning,
     but can also be easily extended to handle most nonstandard
     requirements.
&nbsp;
Details:
&nbsp;
     Trellis Graphics, originally developed for S and S-PLUS at the
     Bell Labs, is a framework for data visualization developed by R.
     A. Becker, W. S. Cleveland, et al, extending ideas presented in
     Cleveland's 1993 book _Visualizing Data_.  The Lattice API is
     based on the original design in S, but extends it in many ways.
&nbsp;
     The Lattice user interface primarily consists of several
     ‘high-level’ generic functions (listed below in the “See Also”
     section), each designed to create a particular type of display by
</pre>

<p>Pro zjištění informací o nainstalovaných balíčcích se používá příkaz
<strong>installed.packages</strong>, který vrací tabulku s&nbsp;následujícími
informacemi o každém balíčku:</p>

<ul>
<li>Package</li>
<li>LibPath</li>
<li>Version</li>
<li>Priority</li>
<li>Depends</li>
<li>Imports</li>
<li>LinkingTo</li>
<li>Suggests</li>
<li>Enhances</li>
<li>OS Type</li>
<li>License</li>
<li>Built</li>
</ul>

<p><div class="rs-tip-major">Poznámka: některé údaje nemusí být
vyplněny.</div></p>

<p>Příklad výsledku pro čistě nainstalovaný jazyk R bez dalších doplňujících
balíčků:</p>

<pre>
&gt; <strong>installed.packages()</strong>
           Package      LibPath                Version    Priority     
base       "base"       "/usr/lib64/R/library" "3.6.3"    "base"       
boot       "boot"       "/usr/lib64/R/library" "1.3-24"   "recommended"
class      "class"      "/usr/lib64/R/library" "7.3-15"   "recommended"
cluster    "cluster"    "/usr/lib64/R/library" "2.1.0"    "recommended"
codetools  "codetools"  "/usr/lib64/R/library" "0.2-16"   "recommended"
compiler   "compiler"   "/usr/lib64/R/library" "3.6.3"    "base"       
foreign    "foreign"    "/usr/lib64/R/library" "0.8-75"   "recommended"
graphics   "graphics"   "/usr/lib64/R/library" "3.6.3"    "base"       
&nbsp;
&nbsp;
           Depends                                          
base       NA                                               
boot       "R (&gt;= 3.0.0), graphics, stats"                  
class      "R (&gt;= 3.0.0), stats, utils"                     
cluster    "R (&gt;= 3.3.0)"                                   
codetools  "R (&gt;= 2.1)"                                     
compiler   NA                                               
datasets   NA                                               
foreign    "R (&gt;= 3.0.0)"                                   
&nbsp;
           Imports                                            LinkingTo
base       NA                                                 NA       
boot       NA                                                 NA       
class      "MASS"                                             NA       
cluster    "graphics, grDevices, stats, utils"                NA       
codetools  NA                                                 NA       
compiler   NA                                                 NA       
datasets   NA                                                 NA       
foreign    "methods, utils, stats"                            NA       
&nbsp;
           Suggests                                    
base       "methods"                                   
boot       "MASS, survival"                            
class      NA                                          
cluster    "MASS, Matrix"                              
codetools  NA                                          
compiler   NA                                          
datasets   NA                                          
foreign    NA                                          
graphics   NA                                          
&nbsp;
           Enhances                                License                    
base       NA                                      "Part of R 3.6.3"          
boot       NA                                      "Unlimited"                
class      NA                                      "GPL-2 | GPL-3"            
cluster    NA                                      "GPL (&gt;= 2)"               
codetools  NA                                      "GPL"                      
compiler   NA                                      "Part of R 3.6.3"          
datasets   NA                                      "Part of R 3.6.3"          
foreign    NA                                      "GPL (&gt;= 2)"               
graphics   NA                                      "Part of R 3.6.3"          
&nbsp;
           License_is_FOSS License_restricts_use OS_type MD5sum
base       NA              NA                    NA      NA    
boot       NA              NA                    NA      NA    
class      NA              NA                    NA      NA    
cluster    NA              NA                    NA      NA    
codetools  NA              NA                    NA      NA    
compiler   NA              NA                    NA      NA    
datasets   NA              NA                    NA      NA    
foreign    NA              NA                    NA      NA    
graphics   NA              NA                    NA      NA    
&nbsp;
           NeedsCompilation Built  
base       NA               "3.6.3"
boot       "no"             "3.6.3"
class      "yes"            "3.6.3"
cluster    "yes"            "3.6.3"
codetools  "no"             "3.6.3"
compiler   NA               "3.6.3"
datasets   NA               "3.6.3"
foreign    "yes"            "3.6.3"
graphics   "yes"            "3.6.3"
</pre>

<p><div class="rs-tip-major">Poznámka: seznam balíčků ze standardní knihovny
naleznete na stránce <a
href="https://stat.ethz.ch/R-manual/R-devel/doc/html/packages.html">https://stat.ethz.ch/R-manual/R-devel/doc/html/packages.html</a>.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace nového balíčku</h2>

<p>Instalaci nového balíčku lze provést příkazem
<strong>install.packages</strong>, kterému se předá jméno požadovaného balíčku.
Seznam dostupných balíčků naleznete například na adrese <a
href="https://cran.r-project.org/web/packages/available_packages_by_name.html">https://cran.r-project.org/web/packages/available_packages_by_name.html</a>:</p>

<pre>
&lt; <strong>install.packages("ggplot2")</strong>
</pre>

<p>Instalační proces ze zpočátku zeptá na volbu umístění serveru se zrcadlem
balíčků (ovšem geograficky bližší server nemusí být nutně rychlejší):</p>

<pre>
Installing package into ‘/usr/lib64/R/library’
(as ‘lib’ is unspecified)
--- Please select a CRAN mirror for use in this session ---
Secure CRAN mirrors 
&nbsp;
 1: 0-Cloud [https]
 2: Australia (Canberra) [https]
 3: Australia (Melbourne 1) [https]
 4: Australia (Melbourne 2) [https]
</pre>

<p>Konkrétně v&nbsp;případě balíčku <strong>ggplot2</strong> dochází
k&nbsp;překladu nativních knihoven s&nbsp;využitím překladače jazyka C++:</p>

<pre>
...
...
...
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (ggplot2)
Making 'packages.html' ... done
&nbsp;
The downloaded source packages are in
        ‘/tmp/RtmpvIdtKQ/downloaded_packages’
Updating HTML index of packages in '.Library'
Making 'packages.html' ... done
</pre>

<p>Vidíme, že se na konci instalace upravila nápověda dostupná lokálně.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Datové typy a proměnné</h2>

<p>S&nbsp;některými datovými typy programovacího jazyka R jsme se již seznámili
v&nbsp;předchozích částech tohoto seriálu. Připomeňme si tedy, že tento
programovací jazyk podporuje práci s&nbsp;následujícími datovými typy:</p>

<table>
<tr><th>#</th><th>Datový typ</th></tr>
<tr><td>1</td><td>Vektory</td></tr>
<tr><td>2</td><td>Seznamy</td></tr>
<tr><td>3</td><td>Factory</td></tr>
<tr><td>4</td><td>Pole</td></tr>
<tr><td>5</td><td>Matice</td></tr>
<tr><td>6</td><td>Datové rámce</td></tr>
</table>

<p>Nejjednodušším typem z&nbsp;předchozí šestice jsou <i>vektory</i>, které
mohou v&nbsp;limitním případě obsahovat jediný prvek, který by byl
v&nbsp;jiných programovacích jazycích považován za <i>skalár</i>. Existuje
přitom šest datových typů takzvaných atomických vektorů (může to být matoucí,
ale v&nbsp;tomto kontextu se setkáme i s&nbsp;označením &bdquo;třída
vektoru&ldquo;):</p>

<table>
<tr><th>#</th><th>Režim</th><th>Typ (třída) atomického vektoru</th><th>Příklad</th></tr>
<tr><td>1</td><td>Logical</td><td>Logical</td><td>TRUE, FALSE</td></tr>
<tr><td>2</td><td>Numeric</td><td>Double</td><td>3.14, 1000, 10000.5</td></tr>
<tr><td>3</td><td>Numeric</td><td>Integer</td><td>42L, 0L</td></tr>
<tr><td>4</td><td>Complex</td><td>Complex</td><td>1 + 2i</td></tr>
<tr><td>5</td><td>Character</td><td>Character</td><td>"Hello"</td></tr>
<tr><td>6</td><td>Raw</td><td>Raw</td><td>charToRaw("Hello")</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: poněkud zvláštní je především druhý,
třetí a čtvrtý řádek tabulky, tedy například <strong>Numeric</strong>
resp.&nbsp;<strong>Double</strong>. V&nbsp;případě <strong>Double</strong> se
jedná o hodnoty s&nbsp;plovoucí řádovou tečkou (tedy hodnoty používané i
v&nbsp;dalších programovacích jazycích a podporované matematickými
koprocesory). Z&nbsp;historických důvodů (objektový systém S3) ovšem pro tyto
hodnoty vrací funkce <strong>class</strong> zmíněná níže &bdquo;numeric&ldquo;,
kdežto funkce <strong>typeof</strong> vrací &bdquo;double&ldquo;. Vztah mezi
numerickými typy je možné si zobrazit pomocí predikátů
<strong>is.TYP</strong>:</div></p>

<h4>Číslo s&nbsp;plovoucí řádovou čárkou</h4>

<pre>
&gt; <strong>x &lt;- 3.14</strong>
&gt; <strong>is.numeric(x)</strong>
[1] TRUE
&nbsp;
&gt; <strong>is.integer(x)</strong>
[1] FALSE
&nbsp;
&gt; <strong>is.double(x)</strong>
[1] TRUE
&nbsp;
&gt; <strong>is.complex(x)</strong>
[1] FALSE
</pre>

<h4>Celé číslo</h4>

<pre>
&gt; <strong>x &lt;- 1L</strong>
&nbsp;
&gt; <strong>is.numeric(x)</strong>
[1] TRUE
&nbsp;
&gt; <strong>is.integer(x)</strong>
[1] TRUE
&nbsp;
&gt; <strong>is.double(x)</strong>
[1] FALSE
&nbsp;
&gt; <strong>is.complex(x)</strong>
[1] FALSE
</pre>

<h4>Komplexní číslo</h4>

<pre>
&gt; <strong>x &lt;- 1+2i</strong>
&nbsp;
&gt; <strong>is.numeric(x)</strong>
[1] TRUE
&nbsp;
&gt; <strong>is.integer(x)</strong>
[1] FALSE
&nbsp;
[1] FALSE
&gt; <strong>is.double(x)</strong>
[1] FALSE
&nbsp;
&gt; <strong>is.complex(x)</strong>
[1] TRUE
</pre>

<p><div class="rs-tip-major">Poznámka: existují i další podobné predikáty,
zejména <strong>is.vector</strong> a <strong>is.atomic</strong>, ovšem jejich
praktické použití je poměrně problematické (a většinou ani není
nutné).</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Deklarace proměnných</h2>

<p>Proměnné se deklarují (vytváří) přiřazením nové hodnoty (libovolného typu)
do proměnné s&nbsp;využitím operátoru &lt;- popř.&nbsp;operátoru =. Při
deklaraci proměnných však není nutné datový typ explicitně specifikovat,
protože se dynamicky odvodí z&nbsp;hodnoty, která je do proměnné přiřazována.
Typ (resp.&nbsp;v&nbsp;řeči jazyka R spíše třídu) proměnné lze zjistit
standardní funkcí <strong>class</strong>, takže si vyzkoušejme několik
příkladů:</p>

<pre>
&gt; <strong>x &lt;- 10</strong>
&gt; <strong>class(x)</strong>
[1] "numeric"
&nbsp;
&gt; <strong>x &lt;- 10L</strong>
&gt; <strong>class(x)</strong>
[1] "integer"
&nbsp;
&gt; <strong>x &lt;- 1+2i</strong>
&gt; <strong>class(x)</strong>
[1] "complex"
&nbsp;
&gt; <strong>x &lt;- "Hello world!"</strong>
&gt; <strong>class(x)</strong>
[1] "character"
&nbsp;
&gt; <strong>x &lt;- charToRaw("Hello")</strong>
&gt; <strong>class(x)</strong>
[1] "raw"
&nbsp;
&gt; <strong>x &lt;- TRUE</strong>
&gt; <strong>class(x)</strong>
[1] "logical"
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se v&nbsp;prvním
případě (z&nbsp;historických důvodů) vrací &bdquo;numeric&ldquo; a nikoli
&bdquo;double&ldquo;.</div></p>

<p>Režim uložení libovolné hodnoty se zjistí funkcí nazvanou
<strong>typeof</strong>:</p>

<pre>
&gt; <strong>x &lt;- 10</strong>
&gt; <strong>typeof(x)</strong>
[1] "double"
&nbsp;
&gt; <strong>x &lt;- 10L</strong>
&gt; <strong>typeof(x)</strong>
[1] "integer"
&nbsp;
&gt; <strong>x &lt;- 1+2i</strong>
&gt; <strong>typeof(x)</strong>
[1] "complex"
&nbsp;
&gt; <strong>x &lt;- "Hello world!"</strong>
&gt; <strong>typeof(x)</strong>
[1] "character"
&nbsp;
&gt; <strong>x &lt;- charToRaw("Hello")</strong>
&gt; <strong>typeof(x)</strong>
[1] "raw"
&nbsp;
&gt; <strong>x &lt;- TRUE</strong>
&gt; <strong>typeof(x)</strong>
[1] "logical"
</pre>

<p>Posledním důležitým <i>plnohodnotným</i> datovým typem jsou funkce, kterými
se budeme zabývat v&nbsp;samostatné kapitole:</p>

<pre>
&gt; <strong>f &lt;- function() {42}</strong>
&nbsp;
&gt; <strong>f</strong>
function() {42}
&nbsp;
&gt; <strong>f()</strong>
[1] 42
&nbsp;
&gt; <strong>class(f)</strong>
[1] "function"
&nbsp;
&gt; <strong>typeof(f)</strong>
[1] "closure"
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Základní funkce pro práci s&nbsp;proměnnými</h2>

<p>Pro práci s&nbsp;proměnnými je k&nbsp;dispozici několik funkcí, které je
možné použít pro prakticky libovolné hodnoty:</p>

<table>
<tr><th>#</th><th>Funkce</th><th>Stručný popis funkce</th></tr>
<tr><td>1</td><td>ls()</td><td>vrátí vektor se jmény všech viditelných objektů</td></tr>
<tr><td>2</td><td>str(x)</td><td>zobrazení objektu v&nbsp;čitelné podobě</td></tr>
<tr><td>3</td><td>head(x)</td><td>zobrazení první části obsahu proměnné (vektoru, pole, datového rámce atd.)</td></tr>
<tr><td>4</td><td>tail(x)</td><td>zobrazení poslední části obsahu proměnné (vektoru, pole, datového rámce atd.)</td></tr>
<tr><td>5</td><td>class(x)</td><td>zobrazení třídy (typu) hodnoty navázané na proměnnou (bylo popsáno <a href="#k04">ve čtvrté kapitole</a>)</td></tr>
<tr><td>6</td><td>typeof(x)</td><td>zobrazení režimu uložení hodnoty navázané na proměnnou (bylo popsáno <a href="#k04">ve čtvrté kapitole</a>)</td></tr>
<tr><td>7</td><td>rm(x)</td><td>odstranění objektů z&nbsp;operační paměti</td></tr>
</table>

<p>Následují příklady použití těchto funkcí:</p>

<pre>
&gt; <strong>v &lt;- 1:100</strong>
&nbsp;
&gt; <strong>head(v)</strong>
[1] 1 2 3 4 5 6
&nbsp;
&gt; <strong>tail(v)</strong>
[1]  95  96  97  98  99 100
&nbsp;
&gt; <strong>class(v)</strong>
[1] "integer"
&nbsp;
&gt; <strong>typeof(v)</strong>
[1] "integer"
&nbsp;
&gt; <strong>str(v)</strong>
 int [1:100] 1 2 3 4 5 6 7 8 9 10 ...
&nbsp;
&gt; <strong>ls()</strong>
[1] "i" "v" "x"
</pre>

<p>Specifikace počtu zobrazených prvků ze začátku resp. konce obsahu
proměnné:</p>

<pre>
&gt; <strong>head(v, 10)</strong>
 [1]  1  2  3  4  5  6  7  8  9 10
&nbsp;
&gt; <strong>tail(v, 10)</strong>
 [1]  91  92  93  94  95  96  97  98  99 100
</pre>

<p>Použít je však možné i záporné indexy, které určují, kolik prvků od
konce/začátku má být z&nbsp;výpisu vynecháno:</p>

<pre>
&gt; <strong>head(v, -10)</strong>
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
[26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
[51] 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
[76] 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
&nbsp;
&gt; <strong>tail(v, -10)</strong>
 [1]  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29
[20]  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48
[39]  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67
[58]  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86
[77]  87  88  89  90  91  92  93  94  95  96  97  98  99 100
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Automatické převody mezi hodnotami různých typů</h2>

<p>Typový systém programovacího jazyka R se chová poněkud zvláštním způsobem,
což může vést k&nbsp;mnoha &bdquo;záhadným&ldquo; chybám. V&nbsp;některých
případech provádí automatickou typovou konverzi tak, aby například byly oba
operandy nějakého binárního operátoru kompatibilní. Například:</p>

<pre>
&gt; <strong>1 == "1"</strong>
[1] TRUE
</pre>

<p>V&nbsp;tomto případě je první operand taktéž převeden na řetězec.</p>

<p>U vektorů platí, že všechny jejich prvky musí být stejného typu, takže i zde
dochází k&nbsp;automatickým typovým konverzím.</p>

<p>Dvě hodnoty typu <strong>double</strong> resp.&nbsp;<strong>numeric</strong>:</p>

<pre>
&gt; <strong>x &lt;- c(1, 1)</strong>
&gt; <strong>x</strong>
[1] 1 1
&nbsp;
&gt; <strong>class(x)</strong>
[1] "numeric"
</pre>

<p>Hodnoty různého typu (druhé číslo je v&nbsp;tomto příkladu typu
<strong>integer</strong>):</p>

<pre>
&gt; <strong>x &lt;- c(1, 1L)</strong>
&gt; <strong>x</strong>
[1] 1 1
&gt; <strong>class(x)</strong>
[1] "numeric"
</pre>

<p>Dva prvky typu <strong>integer</strong>:</p>

<pre>
&gt; <strong>x &lt;- c(1L, 1L)</strong>
&gt; <strong>x</strong>
[1] 1 1
&gt; <strong>class(x)</strong>
[1] "integer"
</pre>

<p>Jeden z&nbsp;prvků je komplexní číslo:</p>

<pre>
&gt; <strong>x &lt;- c(1, 1+2i)</strong>
&gt; <strong>x</strong>
[1] 1+0i 1+2i
&gt; <strong>class(x)</strong>
[1] "complex"
</pre>

<p>Jeden z&nbsp;prvků je řetězcem:</p>

<pre>
&gt; <strong>x &lt;- c(1, "1")</strong>
&gt; <strong>x</strong>
[1] "1" "1"
&gt; <strong>class(x)</strong>
[1] "character"
</pre>

<p>Automatické typové konverze se provádí i při spuštění některých funkcí:</p>

<pre>
&gt; <strong>x &lt;- c(TRUE, FALSE, TRUE, FALSE)</strong>
&nbsp;
&gt; <strong>x</strong>
[1]  TRUE FALSE  TRUE FALSE
&nbsp;
&gt; <strong>sum(x)</strong>
[1] 2
&gt; <strong>mean(x)</strong>
[1] 0.5
</pre>

<p>Ovšem například řetězce se na číselné hodnoty automaticky nepřevádí:</p>

<pre>
&gt; <strong>y &lt;- c("1", "2", "3", "4")</strong>
&nbsp;
&gt; <strong>y</strong>
[1] "1" "2" "3" "4"
&nbsp;
&gt; <strong>class(y)</strong>
[1] "character"
&nbsp;
&gt; <strong>sum(y)</strong>
Error in sum(y) : invalid 'type' (character) of argument
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Explicitní datové konverze</h2>

<p>Převod (tedy konverzi) na jiný datový typ lze provést i explicitně, a to
s&nbsp;využitím následujících funkcí:</p>

<table>
<tr><th>#</th><th>Jméno funkce</th><th>Stručný popis funkce</th></tr>
<tr><td>1</td><td>as.logical</td><td>převod na typ <strong>Logical</strong></td></tr>
<tr><td>2</td><td>as.integer</td><td>převod na typ <strong>Integer</strong></td></tr>
<tr><td>3</td><td>as.double</td><td>převod na typ <strong>Double</strong></td></tr>
<tr><td>4</td><td>as.character</td><td>převod na typ <strong>Character</strong></td></tr>
</table>

<p>Opět si ukážeme některé příklady použití:</p>

<pre>
&gt; <strong>x &lt;- c(TRUE, FALSE, TRUE, FALSE)</strong>
&nbsp;
&gt; <strong>as.numeric(x)</strong>
[1] 1 0 1 0
&nbsp;
&gt; <strong>x</strong>
[1]  TRUE FALSE  TRUE FALSE
</pre>

<p>Převod číselných hodnot uložených v&nbsp;řetězcích je možný:</p>

<pre>
&gt; <strong>as.integer(c("1", "2", "3"))</strong>
[1] 1 2 3
&nbsp;
&gt; <strong>as.complex(c("1+2i"))</strong>
[1] 1+2i
</pre>

<p>Zpětný převod (numerické hodnoty na řetězec):</p>

<pre>
&gt; <strong>as.character(c(1, 2, 3, 4))</strong>
[1] "1" "2" "3" "4"
</pre>

<p>Převod na vektor logických hodnot:</p>

<pre>
&gt; <strong>as.logical(c(0, 1, 2, -1))</strong>
[1] FALSE  TRUE  TRUE  TRUE
</pre>

<p>Pokud nějakou hodnotu konvertovat nelze, což je příklad řetězce
&bdquo;a&ldquo; převáděného na celé číslo, bude tato hodnota nahrazena za
<strong>NA</strong> a přitom se vypíše varování:</p>

<pre>
&gt; <strong>as.integer(c("1", "1.5", "a"))</strong>
[1]  1  1 NA
Warning message:
NAs introduced by coercion 
&nbsp;
&nbsp;
&gt; <strong>as.double(c("1", "1.5", "a"))</strong>
[1] 1.0 1.5  NA
Warning message:
NAs introduced by coercion 
</pre>

<p>Některé konverze mohou vést k&nbsp;částečné ztrátě informací; opět se
zobrazí varování:</p>

<pre>
&gt; <strong>as.integer(c(1, 2L, 3.14, 5+6i))</strong>
[1] 1 2 3 5
Warning message:
imaginary parts discarded in coercion 
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Hodnoty <strong>Inf</strong>, <strong>-Inf</strong> a <strong>NaN</strong></h2>

<p>Programovací jazyk R je mj.&nbsp;určen pro zpracování dat získaných
z&nbsp;různých zdrojů i pro numerické výpočty. Z&nbsp;tohoto důvodu podporuje
jak speciální hodnotu <strong>NaN</strong> značící &bdquo;not a number&ldquo;
(což ale není totéž jako hodnota <strong>NA</strong>), tak i hodnoty
<strong>Inf</strong> a <strong>-Inf</strong> reprezentující kladné a záporné
nekonečno. S&nbsp;těmito hodnotami lze provádět i aritmetické operace atd.</p>

<p>Typ těchto hodnot je <strong>Numeric</strong>:</p>

<pre>
&gt; <strong>x &lt;- Inf</strong>
&gt; <strong>class(x)</strong>
[1] "numeric"
&nbsp;
&gt; <strong>x &lt;- -Inf</strong>
&gt; <strong>class(x)</strong>
[1] "numeric"
&nbsp;
&gt; <strong>x &lt;- NaN</strong>
&gt; <strong>class(x)</strong>
[1] "numeric"
</pre>

<p>Nyní si vyzkoušejme některé aritmetické operace s&nbsp;hodnotou
<strong>Inf</strong>:</p>

<pre>
&gt; <strong>x &lt;- Inf</strong>
&nbsp;
&gt; <strong>-x</strong>
[1] -Inf
&nbsp;
&gt; <strong>x + 0</strong>
[1] Inf
&nbsp;
&gt; <strong>x + 10</strong>
[1] Inf
&nbsp;
&gt; <strong>x * 0</strong>
[1] NaN
&nbsp;
&gt; <strong>x * 10</strong>
[1] Inf
&nbsp;
&gt; <strong>x - x</strong>
[1] NaN
&nbsp;
&gt; <strong>x / x</strong>
[1] NaN
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že některé operace vrací
<strong>NaN</strong>!</div></p>

<p>Základní relační operace pracují s&nbsp;nekonečnem podle předpokladů:</p>

<pre>
&gt; <strong>x &lt;- Inf</strong>
&nbsp;
&gt; <strong>x &lt; 0</strong>
[1] FALSE
&nbsp;
&gt; <strong>x &gt; 0</strong>
[1] TRUE
&nbsp;
&gt; <strong>x == 0</strong>
[1] FALSE
</pre>

<p>Ovšem nikoli již v&nbsp;kombinaci s&nbsp;nějakou aritmetickou operací!:</p>

<pre>
&gt; <strong>x &lt;- Inf</strong>
&nbsp;
&gt; <strong>x &lt; x * 2</strong>
[1] FALSE
&nbsp;
&gt; <strong>x &lt; x + 1</strong>
[1] FALSE
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Aritmetické a relační operace s&nbsp;hodnotou <strong>NaN</strong></h2>

<p>Aritmetické operace s&nbsp;hodnotou <strong>NaN</strong> mají prakticky vždy
stejný výsledek &ndash; opět <strong>NaN</strong>, což ostatně odpovídá i normě
IEEE 794:</p>

<pre>
&gt; <strong>x &lt;- NaN</strong>
&nbsp;
&gt; <strong>-x</strong>
[1] NaN
&nbsp;
&gt; <strong>x + 0</strong>
[1] NaN
&nbsp;
&gt; <strong>x + 10</strong>
[1] NaN
&nbsp;
&gt; <strong>x * 0</strong>
[1] NaN
&nbsp;
&gt; <strong>x * 10</strong>
[1] NaN
&nbsp;
&gt; <strong>x - x</strong>
[1] NaN
&nbsp;
&gt; <strong>x / x</strong>
[1] NaN
</pre>

<p>Speciální chování nalezneme u relačních operátorů, protože v&nbsp;tomto
ohledu se jazyk R odlišuje od mnoha jiných jazyků, protože vrací hodnotu
<strong>NA</strong> a nikoli <strong>FALSE</strong>:</p>

<pre>
&gt; <strong>x &lt;- NaN</strong>
&nbsp;
&gt; <strong>x &lt; 0</strong>
[1] NA
&nbsp;
&gt; <strong>x &gt; 0</strong>
[1] NA
&nbsp;
&gt; <strong>x == 0</strong>
[1] NA
&nbsp;
&gt; <strong>x &lt; NaN</strong>
[1] NA
&nbsp;
&gt; <strong>x &gt; NaN</strong>
[1] NA
&nbsp;
&gt; <strong>x == NaN</strong>
[1] NA
</pre>

<p>Totéž platí i pro kombinaci relačního operátoru s&nbsp;operátorem
aritmetickým:</p>

<pre>
&gt; <strong>x &lt;- NaN</strong>
&nbsp;
&gt; <strong>x &lt; x * 2</strong>
[1] NA
&nbsp;
&gt; <strong>x &lt; x + 1</strong>
[1] NA
&nbsp;
&gt; <strong>x &gt; x * 2</strong>
[1] NA
&nbsp;
&gt; <strong>x &gt; x + 1</strong>
[1] NA
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Speciální hodnota <strong>NA</strong> a její varianty</h2>

<p>Při zpracování reálných dat se nevyhneme situacím, kdy nějaké údaje zcela
chybí. V&nbsp;programovacím jazyku R mohou být takové neexistující údaje
reprezentovány speciální hodnotou <strong>NA</strong> neboli &bdquo;Not
Available&ldquo;. Tato speciální hodnota může být použita v&nbsp;aritmetických
operacích, což mj.&nbsp;naznačuje, že se jedná o koncepční rozdíl oproti
<strong>NULL</strong> či <strong>None</strong> (spíše se blíží koncepci
<strong>nil</strong> v&nbsp;LISPovských jazycích podporujících &bdquo;nil
punning&ldquo;:</p>

<pre>
&gt; <strong>NA+NA</strong>
[1] NA
&nbsp;
&gt; <strong>NA-NA</strong>
[1] NA
&nbsp;
&gt; <strong>NA+1</strong>
[1] NA
&nbsp;
&gt; <strong>NA*2</strong>
[1] NA
&nbsp;
&gt; <strong>NA+Inf</strong>
[1] NA
&nbsp;
&gt; <strong>NA/Inf</strong>
[1] NA
</pre>

<p>Výsledky porovnání (relačních operací):</p>

<pre>
&gt; <strong>NA &gt; 42</strong>
[1] NA
&nbsp;
&gt; <strong>NA &lt; 42</strong>
[1] NA
&nbsp;
&gt; <strong>NA == 42</strong>
[1] NA
&nbsp;
&gt; <strong>NA == NA</strong>
[1] NA
&nbsp;
&gt; <strong>NA != NA</strong>
[1] NA
</pre>

<p>Výsledky logických a bitových operací &ndash; pozor na to, že zde
<strong>NA</strong> skutečně vystupuje v&nbsp;roli &bdquo;zde nic není&ldquo;,
což ovlivňuje operaci logického součtu a logického součinu:</p>

<pre>
&gt; <strong>!NA</strong>
[1] NA
&nbsp;
&gt; <strong>NA | TRUE</strong>
[1] TRUE
&nbsp;
&gt; <strong>NA & FALSE</strong>
[1] FALSE
&nbsp;
&gt; <strong>NA ^ 0</strong>
[1] 1
</pre>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti pro každý datový typ
existuje zvláštní hodnota <strong>NA</strong>, ovšem v&nbsp;praxi tyto hodnoty
prakticky nikdy nepoužijeme, protože se provádí automatické přetypování na
<strong>NA</strong>:</div></p>

<pre>
&gt; <strong>NA_integer_ + 1</strong>
[1] NA
&nbsp;
&gt; <strong>NA_real_ * 2.4</strong>
[1] NA
&nbsp;
&gt; <strong>NA_character_</strong>
[1] NA
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Řízení toku programu v&nbsp;jazyce R</h2>

<p>V&nbsp;programovacím jazyku R pochopitelně nalezneme i konstrukce určené pro
řízení toku programu. Prozatím jsme se s&nbsp;nimi nesetkali, a to zejména
z&nbsp;toho důvodu, že mnoho skriptů zpracovávajících data se bez těchto
relativně nízkoúrovňových konstrukcí bez problému obejde (což ostatně platí i
pro další doménově specifické jazyky typu Matlab atd.):</p>

<table>
<tr><th>#</th><th>Konstrukce</th><th>Stručný popis programové konstrukce</th></tr>
<tr><td>1</td><td>if</td><td>rozvětvení na základě vyhodnocené podmínky</td></tr>
<tr><td>2</td><td>ifelse</td><td>aplikace podmínky na všechny prvky datového typu</td></tr>
<tr><td>3</td><td>switch</td><td>rozvětvení na základě numerické hodnoty nebo řetězce</td></tr>
<tr><td>4</td><td>repeat</td><td>nekonečná programová smyčka</td></tr>
<tr><td>5</td><td>while</td><td>programová smyčka s&nbsp;testem na začátku</td></tr>
<tr><td>6</td><td>for</td><td>programová smyčka procházející prvky datového typu</td></tr>
</table>

<p>Jednotlivé konstrukce budou podrobněji popsány v&nbsp;navazujících
kapitolách.</p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti se v&nbsp;mnoha skriptech
s&nbsp;žádnými řídicími strukturami nesetkáme, protože se pracuje vždy
s&nbsp;celými vektory či s&nbsp;datovými rámci.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Podmínky realizované konstrukcí <strong>if</strong></h2>

<p>V&nbsp;programovacím jazyku R se používá klasická rozhodovací konstrukce
(větvení) pojmenovaná <strong>if</strong>. Tato konstrukce existuje ve dvou
variantách &ndash; bez větve <strong>else</strong> a s&nbsp;větví
<strong>else</strong> (což opět koresponduje s&nbsp;většinou ostatních
mainstreamových programovacích jazyků):</p>

<pre>
<strong>if</strong> (podmínka) větev_true
<strong>if</strong> (podmínka) větev_true <strong>else</strong> větev_false
</pre>

<p>Podmínkou je zde myšlen výraz vyhodnocený na TRUE či FALSE; samotné větve
mohou taktéž obsahovat jediný výraz, jehož hodnota je vrácena:</p>

<pre>
&gt; <strong>x1 &lt;- if (TRUE) 1 else 2</strong>
&gt; <strong>x2 &lt;- if (FALSE) 1 else 2</strong>
&nbsp;
&gt; <strong>x1</strong>
[1] 1
&nbsp;
&gt; <strong>x2</strong>
[1] 2
</pre>

<p>Celočíselné hodnoty jsou převáděny na TRUE/FALSE podle běžných zvyklostí
(0=FALSE, vše ostatní je TRUE):</p>

<pre>
&gt; <strong>if (1) "yes" else "no"</strong>
[1] "yes"
&nbsp;
&gt; <strong>if (0) "yes" else "no"</strong>
[1] "no"
</pre>

<p>Ovšem pozor na to, že totéž neplatí o celočíselných hodnotách
v&nbsp;řetězci:</p>

<pre>
&gt; <strong>if ("1") "yes" else "no"</strong>
Error in if ("1") "yes" else "no" : 
  argument is not interpretable as logical
</pre>

<p>Z&nbsp;předchozích kapitol již víme, že výsledkem mnoha operací může být
hodnota <strong>NA</strong>. Tu ovšem přímo v&nbsp;podmínce použít nelze:</p>

<pre>
&gt; <strong>if (NA) "yes" else "no"</strong>
Error in if (NA) "yes" else "no" : missing value where TRUE/FALSE needed
</pre>

<p>Pokud se v&nbsp;podmínce vyskytne vektor s&nbsp;více prvky (což může být
časté), testuje se pouze první prvek tohoto vektoru a navíc se uživateli vypíše
varování o provedené operaci:</p>

<pre>
&gt; <strong>if (c(TRUE, FALSE)) "yes" else "no"</strong>
[1] "yes"
Warning message:
In if (c(TRUE, FALSE)) "yes" else "no" :
  the condition has length &gt; 1 and only the first element will be used
&nbsp;
&gt; <strong>if (c(FALSE, FALSE)) "yes" else "no"</strong>
[1] "no"
Warning message:
In if (c(FALSE, FALSE)) "yes" else "no" :
  the condition has length &gt; 1 and only the first element will be used
</pre>

<p>Toto chování (které může být zbytečně benevolentní) je možné vypnout tímto
trikem:</p>

<pre>
&gt; <strong>Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = "true")</strong>
&nbsp;
&gt; <strong>if (c(TRUE, FALSE)) "yes" else "no"</strong>
Error in if (c(TRUE, FALSE)) "yes" else "no" : 
  the condition has length &gt; 1
&nbsp;
&gt; <strong>if (c(FALSE, FALSE)) "yes" else "no"</strong>
Error in if (c(FALSE, FALSE)) "yes" else "no" : 
  the condition has length &gt; 1
</pre>

<p>Složitější konstrukce s&nbsp;vnořenými konstrukcemi
<strong>if-else</strong>:</p>

<pre>
grade &lt;- 0
&nbsp;
if (grade &gt;= 95) {
    "A"
} else if (grade &gt;= 80) {
    "B"
} else if (grade &gt;= 70) {
    "C"
} else if (grade &gt;= 55) {
    "D"
} else {
    "E"
}
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Konstrukce <strong>ifelse</strong></h2>

<p>V&nbsp;mnoha případech se stane, že potřebujeme zpracovat celý vektor dat na
základě nějaké podmínky aplikované na jednotlivé prvky vektoru. Tuto činnost
zajišťuje konstrukce <strong>ifelse</strong>, která je zapisována formou volání
funkce, i když se ve skutečnosti o tradiční funkci nejedná. Do
<strong>ifelse</strong> se zapíše podmínka (viz <a href="#k12">předchozí
kapitolu</a>), hodnota či výraz použitý při splnění podmínky a hodnota či výraz
použitý při jejím nesplnění:</p>

<p>Vytvoření nového vektoru, který bude obsahovat informaci o tom, zda byl
prvek původního vektoru sudý nebo lichý (zdrojový vektor obsahuje hodnoty od 1
do 10 včetně):</p>

<pre>
&gt; <strong>x &lt;- 1:10</strong>
&nbsp;
&gt; <strong>ifelse(x %% 2 == 0, "even", "odd")</strong>
 [1] "odd"  "even" "odd"  "even" "odd"  "even" "odd"  "even" "odd"  "even"
</pre>

<p>Použití složitějších výrazů:</p>

<pre>
&gt; <strong>x &lt;- 1:10</strong>
&nbsp;
&gt; <strong>ifelse(x %% 2 == 0, "even", x)</strong>
 [1] "1"    "even" "3"    "even" "5"    "even" "7"    "even" "9"    "even"
&nbsp;
&gt; <strong>ifelse(x %% 2 == 0, x*10, 1/x)</strong>
 [1]   1.0000000  20.0000000   0.3333333  40.0000000   0.2000000  60.0000000
 [7]   0.1428571  80.0000000   0.1111111 100.0000000
</pre>

<p><div class="rs-tip-major">Poznámka: pozor na typ výsledného vektoru
v&nbsp;případě, že jeden výraz bude vracet hodnoty odlišného typu!</div></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Konstrukce <strong>switch</strong></h2>

<p>Vraťme se na chvíli k&nbsp;poněkud složitější konstrukci
<strong>if-else</strong> s&nbsp;několika postupně vyhodnocovanými podmínkami.
V&nbsp;takové konstrukci můžeme snadno reagovat na neplatný vstup:</p>

<pre>
input &lt;- 3
&nbsp;
if (input == 0) {
    "zero"
} else if (input == 1) {
    "one"
} else if (input == 2) {
    "two"
} else {
    stop("Invalid `input` value")
}
</pre>

<p>Otestování v&nbsp;praxi:</p>

<pre>
&gt; <strong>input &lt;- 2</strong>
&gt; <strong></strong>
&gt; <strong>if (input == 0) {</strong>
+     <strong>"zero"</strong>
+ <strong>} else if (input == 1) {</strong>
+     <strong>"one"</strong>
+ <strong>} else if (input == 2) {</strong>
+     <strong>"two"</strong>
+ <strong>} else {</strong>
+     <strong>stop("Invalid `input` value")</strong>
+ <strong>}</strong>
[1] "two"
&nbsp;
&gt; <strong>input &lt;- 3</strong>
&gt; <strong></strong>
&gt; <strong>if (input == 0) {</strong>
+     <strong>"zero"</strong>
+ <strong>} else if (input == 1) {</strong>
+     <strong>"one"</strong>
+ <strong>} else if (input == 2) {</strong>
+     <strong>"two"</strong>
+ <strong>} else {</strong>
+     <strong>stop("Invalid `input` value")</strong>
+ <strong>}</strong>
Error: Invalid `input` value
</pre>

<p>Jedná se ovšem o zbytečně složitý zápis, protože stejného chování můžeme
dosáhnout konstrukcí pojmenovanou <strong>switch</strong>, která se
v&nbsp;programovacím jazyku R opět zapisuje tak, jakoby se jednalo o volání
funkce. Prvním parametrem je výraz, jehož výsledek určuje, který z&nbsp;dalších
parametrů se má vrátit jako výsledek. Pokud je výraz vyhodnocen na celé číslo,
vrátí se n-tý parametr (po svém vyhodnocení). Parametry jsou očíslovány od
jedničky:</p>

<pre>
<strong>input &lt;- 0</strong>
&nbsp;
<strong>switch(input+1,</strong>
    <strong>"zero",</strong>
    <strong>"one",</strong>
    <strong>"two",</strong>
    <strong>stop("Invalid `input` value")</strong>
)
</pre>

<p>Poněkud odlišného chování dosáhneme tehdy, pokud se použije následující
zápis. Ten nám umožní vybírat hodnoty na základě řetězců (klíčů) uvedených před
znakem &bdquo;=&ldquo;:</p>

<pre>
<strong>command &lt;- "color"</strong>
&nbsp;
<strong>switch(command,</strong>
       <strong>"color" = "red",</strong>
       <strong>"shape" = "square",</strong>
       <strong>"length" = 5)</strong>
&nbsp;
"red"
</pre>

<pre>
<strong>command &lt;- "shape"</strong>
&nbsp;
<strong>switch(command,</strong>
       <strong>"color" = "red",</strong>
       <strong>"shape" = "square",</strong>
       <strong>"length" = 5)</strong>
&nbsp;
"square"
</pre>

<pre>
<strong>command &lt;- "length"</strong>
&nbsp;
<strong>switch(command,</strong>
       <strong>"color" = "red",</strong>
       <strong>"shape" = "square",</strong>
       <strong>"length" = 5)</strong>
&nbsp;
5
</pre>

<p>Při výběru může dojít k&nbsp;vyhodnocení <strong>NA</strong> tehdy, pokud
není řetězec v&nbsp;množině klíčů nalezen:</p>

<pre>
<strong>command &lt;- "foobar"</strong>
&nbsp;
<strong>switch(command,</strong>
       <strong>"color" = "red",</strong>
       <strong>"shape" = "square",</strong>
       <strong>"length" = 5)</strong>
&nbsp;
</pre>

<p>Ovšem chybu můžeme nahlásit i explicitně:</p>

<pre>
<strong>command &lt;- "foobar"</strong>
&nbsp;
<strong>switch(command,</strong>
       <strong>"color" = "red",</strong>
       <strong>"shape" = "square",</strong>
       <strong>"length" = 5)</strong>
       <strong>stop("Invalid `input` value"))</strong>
&nbsp;
Error: Invalid `input` value
</pre>

<p><div class="rs-tip-major">Poznámka: z&nbsp;uvedených příkladů je zřejmé, že
i když se <strong>switch</strong> zapisuje formou volání funkce, ve skutečnosti
se o funkci v&nbsp;žádném případě nejedná &ndash; sémantika je
odlišná!</div></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Programová smyčka typu <strong>repeat</strong></h2>

<p>Dalším typem řídicích konstrukcí jsou programové smyčky. Nejuniverzálnější a
současně i nejjednodušší je smyčka typu <strong>repeat</strong>. Jedná se o
nekonečnou smyčku, jejíž základní podoba vypadá následovně:</p>

<pre>
<strong>repeat print("Diamonds are forever")</strong>
&nbsp;
[1] "Diamonds are forever"
[1] "Diamonds are forever"
[1] "Diamonds are forever"
...
...
...
</pre>

<p>Častěji se ovšem setkáme s&nbsp;použitím blokových závorek, což nám umožňuje
zápis více výrazů do těla smyčky:</p>

<pre>
<strong>repeat {</strong>
    <strong>print("Diamonds are forever")</strong>
<strong>}</strong>
&nbsp;
[1] "Diamonds are forever"
[1] "Diamonds are forever"
[1] "Diamonds are forever"
...
...
...
</pre>

<p>Explicitně vytvořené počitadlo v&nbsp;nekonečné smyčce:</p>

<pre>
<strong>i &lt;- 0</strong>
<strong>repeat {</strong>
    <strong>i &lt;- i + 1</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 3
...
...
...
</pre>

<p>Tuto smyčku (a i další dvě typy programových smyček) je možné ukončit
příkazem <strong>break</strong> známým z&nbsp;dalších programovacích
jazyků:</p>

<pre>
<strong>i &lt;- 10</strong>
<strong>repeat {</strong>
    <strong>print(i)</strong>
    <strong>i &lt;- i - 1</strong>
    <strong>if (i == 0)</strong>
        <strong>break</strong>
<strong>}</strong>
&nbsp;
[1] 10
[1] 9
[1] 8
[1] 7
[1] 6
[1] 5
[1] 4
[1] 3
[1] 2
[1] 1
</pre>

<p>Použít lze i příkaz <strong>next</strong>, který má stejný význam jako
<strong>continue</strong> známý z&nbsp;céčkové větve programovacích jazyků:</p>

<pre>
<strong>i &lt;- 0</strong>
<strong>repeat {</strong>
    <strong>i &lt;- i + 1</strong>
    <strong>if (i &lt;= 5)</strong>
        <strong>next</strong>
    <strong>print(i)</strong>
    <strong>if (i &gt;= 10)</strong>
        <strong>break</strong>
<strong>}</strong>
&nbsp;
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Programová smyčka typu <strong>while</strong></h2>

<p>V&nbsp;jazyku R nalezneme i programovou smyčku typu <strong>while</strong>,
v&nbsp;níž se podmínka (jak bývá zvykem už <a
href="https://www.root.cz/clanky/sedesatiny-prevratneho-programovaciho-jazyka-algol-60/">od
dob Algolu</a>) zapisuje před tělo smyčky, protože se taktéž vyhodnocuje před
vstupem do smyčky (tedy před začátkem další iterace. Základní forma této smyčky
vypadá následovně:</p>

<pre>
while(podmínka) příkaz
</pre>

<p>Častěji se však používají blokové závorky:</p>

<pre>
while(podmínka) {
    příkaz
    ...
    ...
    ...
}
</pre>

<p>Příklad smyčky s&nbsp;explicitně použitým počitadlem:</p>

<pre>
<strong>i &lt;- 10</strong>
<strong>while (i &gt; 0) {</strong>
    <strong>print(i)</strong>
    <strong>i &lt;- i - 1</strong>
<strong>}</strong>
&nbsp;
[1] 10
[1] 9
[1] 8
[1] 7
[1] 6
[1] 5
[1] 4
[1] 3
[1] 2
[1] 1
</pre>

<p>Nepatrně složitější výpočet:</p>

<pre>
<strong>i &lt;- 1</strong>
<strong>while (i &lt; 100000) {</strong>
    <strong>print(i)</strong>
    <strong>i &lt;- i * 2</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 4
[1] 8
[1] 16
[1] 32
[1] 64
[1] 128
[1] 256
[1] 512
[1] 1024
[1] 2048
[1] 4096
[1] 8192
[1] 16384
[1] 32768
[1] 65536
</pre>

<p>I v&nbsp;této smyčce je možné použít příkaz <strong>break</strong>:</p>

<pre>
<strong>i &lt;- 1</strong>
<strong>while (TRUE) {</strong>
    <strong>print(i)</strong>
    <strong>i &lt;- i * 2</strong>
    <strong>if (i &gt; 65536)</strong>
        <strong>break</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 4
[1] 8
[1] 16
[1] 32
[1] 64
[1] 128
[1] 256
[1] 512
[1] 1024
[1] 2048
[1] 4096
[1] 8192
[1] 16384
[1] 32768
[1] 65536
</pre>

<p>Použitelný je i příkaz <strong>next</strong> pro vynechání části těla
smyčky:</p>

<pre>
<strong>i &lt;- 1</strong>
<strong>while (TRUE) {</strong>
    <strong>i &lt;- i * 2</strong>
    <strong>if (i &gt; 65536)</strong>
        <strong>break</strong>
    <strong>if (i &lt; 1000)</strong>
        <strong>next</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 1024
[1] 2048
[1] 4096
[1] 8192
[1] 16384
[1] 32768
[1] 65536
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Programová smyčka typu <strong>for</strong></h2>

<p>Posledním typem smyčky programovacího jazyka R je smyčka typu
<strong>for</strong>, která se používá pro průchod prvky vektorů, datových
rámců atd. Základní tvar této smyčky vypadá následovně:</p>

<pre>
<strong>for (i in 1:10) {</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
</pre>

<p>Na rozdíl od jiných jazyků je proměnná <strong>i</strong> (řídicí proměnná
smyčky) dostupná i mimo její tělo:</p>

<pre>
&gt; <strong>i</strong>
[1] 10
</pre>

<p>Díky tomu, jak jsou v&nbsp;jazyku R konstruovány sekvence, je možné použít i
čítač směrem dolů:</p>

<pre>
<strong>for (i in 10:1) {</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 10
[1] 9
[1] 8
[1] 7
[1] 6
[1] 5
[1] 4
[1] 3
[1] 2
[1] 1
</pre>

<p>I v&nbsp;tomto typu smyčky lze využít příkaz <strong>break</strong>:</p>

<pre>
<strong>for (i in 1:10) {</strong>
    <strong>print(i)</strong>
    <strong>if (i &gt; 5)</strong>
        <strong>break</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
</pre>

<p>A taktéž příkaz <strong>next</strong>:</p>

<pre>
<strong>for (i in 1:10) {</strong>
    <strong>if (i &lt; 5)</strong>
        <strong>next</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
</pre>

<p>Kombinace obou zmíněných příkazů:</p>

<pre>
<strong>for (i in 1:20) {</strong>
    <strong>if (i &lt; 5)</strong>
        <strong>next</strong>
    <strong>else if (i &gt; 10)</strong>
        <strong>break</strong>
    <strong>print(i)</strong>
}
&nbsp;
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
</pre>

<p>Průchod prvky vektoru:</p>

<pre>
<strong>v &lt;- c(1, 2, 5, 10)</strong>
&nbsp;
<strong>for (i in v) {</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 5
[1] 10
</pre>

<p>Pozor na použití počitadla při průchodu vektorem. Následující příklad sice
bude funkční:</p>

<pre>
<strong>v &lt;- c(1, 2, 5, 10)</strong>
&nbsp;
<strong>for (i in 1:length(v)) {</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 2
[1] 3
[1] 4
</pre>

<p>Ale tento již nikoli, protože se vygenerují pouze indexy 1 a 0 (v&nbsp;tomto
pořadí):</p>

<pre>
<strong>v &lt;- c()</strong>
&nbsp;
<strong>for (i in 1:length(v)) {</strong>
    <strong>print(i)</strong>
<strong>}</strong>
&nbsp;
[1] 1
[1] 0
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Seznam dnes použitých funkcí</h2>

<table>
<tr><th> #</th><th>Funkce</th><th>Stručný popis funkce</th></tr>
<tr><td> 1</td><td>ls()</td><td>vektor se jmény všech objektů</td></tr>
<tr><td> 2</td><td>str(x)</td><td>zobrazení objektu v&nbsp;čitelné podobě</td></tr>
<tr><td> 3</td><td>head(x)</td><td>zobrazení první části obsahu proměnné (vektoru, pole, datového rámce atd.)</td></tr>
<tr><td> 4</td><td>tail(x)</td><td>zobrazení poslední části obsahu proměnné (vektoru, pole, datového rámce atd.)</td></tr>
<tr><td> 5</td><td>class(x)</td><td>zobrazení třídy (typu) hodnoty navázané na proměnnou (bylo popsáno <a href="#k03">ve třetí kapitole</a>)</td></tr>
<tr><td> 6</td><td>typeof(x)</td><td>zobrazení režimu uložení hodnoty navázané na proměnnou (bylo popsáno <a href="#k03">ve třetí kapitole</a>)</td></tr>
<tr><td> 7</td><td>rm(x)</td><td>odstranění objektů z&nbsp;operační paměti</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 8</td><td>is.numeric</td><td>test na typ parametru funkce</td></tr>
<tr><td> 9</td><td>is.integer</td><td>test na typ parametru funkce</td></tr>
<tr><td>10</td><td>is.double</td><td>test na typ parametru funkce</td></tr>
<tr><td>11</td><td>is.complex</td><td>test na typ parametru funkce</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>as.logical</td><td>převod na typ <strong>Logical</strong></td></tr>
<tr><td>13</td><td>as.integer</td><td>převod na typ <strong>Integer</strong></td></tr>
<tr><td>14</td><td>as.double</td><td>převod na typ <strong>Double</strong></td></tr>
<tr><td>15</td><td>as.character</td><td>převod na typ <strong>Character</strong></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>require</td><td>načtení zvoleného balíčku</td></tr>
<tr><td>17</td><td>library</td><td>načtení zvoleného balíčku</td></tr>
<tr><td>18</td><td>installed.packages</td><td>seznam všech nainstalovaných balíčků</td></tr>
<tr><td>19</td><td>install.packages</td><td>instalace zvoleného balíčku</td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/r-examples">https://github.com/tisnik/r-examples</a>
V&nbsp;případě, že z&nbsp;nějakého důvodu nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
stále jen jednotky kilobajtů), můžete namísto toho použít odkazy na jednotlivé
demonstrační příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis demonstračního příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>function_type.R</td><td>datový typ &bdquo;funkce&ldquo;</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/function_type.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/function_type.R</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 2</td><td>NaN.R</td><td>aritmetické operace s&nbsp;hodnotou NaN</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NaN.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NaN.R</a></td></tr>
<tr><td> 3</td><td>NaNRelOp.R</td><td>porovnání s&nbsp;hodnotou NaN</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NaNRelOp.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NaNRelOp.R</a></td></tr>
<tr><td> 4</td><td>NaNRelOp2.R</td><td>porovnání s&nbsp;hodnotou NaN</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NaNRelOp2.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NaNRelOp2.R</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>NA.R</td><td>aritmetické operace s&nbsp;hodnotou NA</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NA.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NA.R</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 6</td><td>PosInf.R</td><td>aritmetické operace s&nbsp;hodnotou Inf</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/PosInf.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/PosInf.R</a></td></tr>
<tr><td> 7</td><td>PosInfRelOp.R</td><td>porovnání s&nbsp;hodnotou Inf</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/PosInfRelOp.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/PosInfRelOp.R</a></td></tr>
<tr><td> 8</td><td>PosInfRelOp2.R</td><td>porovnání s&nbsp;hodnotou Inf</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/PosInfRelOp2.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/PosInfRelOp2.R</a></td></tr>
<tr><td> 9</td><td>NegInf.R</td><td>aritmetické operace s&nbsp;hodnotou -Inf</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NegInf.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NegInf.R</a></td></tr>
<tr><td>10</td><td>NegInfRelOp.R</td><td>porovnání s&nbsp;hodnotou -Inf</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NegInfRelOp.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NegInfRelOp.R</a></td></tr>
<tr><td>11</td><td>NegInfRelOp2.R</td><td>porovnání s&nbsp;hodnotou -Inf</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/NegInfRelOp2.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/NegInfRelOp2.R</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>repeat1.R</td><td>nekonečná smyčka typu <strong>repeat</strong></td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat1.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat1.R</a></td></tr>
<tr><td>13</td><td>repeat2.R</td><td>nekonečná smyčka typu <strong>repeat</strong> s&nbsp;počitadlem</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat2.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat2.R</a></td></tr>
<tr><td>14</td><td>repeat3.R</td><td>příkaz <strong>break</strong> ve smyčce typu <strong>repeat</strong></td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat3.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat3.R</a></td></tr>
<tr><td>15</td><td>repeat4.R</td><td>příkaz <strong>next</strong> ve smyčce typu <strong>repeat</strong></td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat4.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/repeat4.R</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>switch1.R</td><td>konstrukce <strong>switch</strong> s&nbsp;celočíselným výrazem</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/switch1.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/switch1.R</a></td></tr>
<tr><td>17</td><td>switch2.R</td><td>konstrukce <strong>switch</strong> s&nbsp;řetězci</td><td><a href="https://github.com/tisnik/r-examples/blob/master/12-language-features/switch2.R">https://github.com/tisnik/r-examples/blob/master/12-language-features/switch2.R</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>R Tutorial<br />
<a href="https://www.tutorialspoint.com/r/index.htm">https://www.tutorialspoint.com/r/index.htm</a>
</li>

<li>Difference between double-precision data type and numeric data type<br />
<a href="https://stackoverflow.com/questions/50255318/difference-between-double-precision-data-type-and-numeric-data-type">https://stackoverflow.com/questions/50255318/difference-between-double-precision-data-type-and-numeric-data-type</a>
</li>

<li>R Data Types<br />
<a href="https://www.w3schools.in/r/data-types/">https://www.w3schools.in/r/data-types/</a>
</li>

<li>What is the difference between mode and class in R?<br />
<a href="https://stackoverflow.com/questions/35445112/what-is-the-difference-between-mode-and-class-in-r">https://stackoverflow.com/questions/35445112/what-is-the-difference-between-mode-and-class-in-r</a>
</li>

<li>switch: Select One of a List of Alternatives<br />
<a href="https://rdrr.io/r/base/switch.html">https://rdrr.io/r/base/switch.html</a>
</li>

<li>R switch() Function<br />
<a href="https://www.datamentor.io/r-programming/switch-function/">https://www.datamentor.io/r-programming/switch-function/</a>
</li>

<li>Using ggplot in Python: Visualizing Data With plotnine<br />
<a href="https://realpython.com/ggplot-python/">https://realpython.com/ggplot-python/</a>
</li>

<li>A Grammar of Graphics for Python<br />
<a href="https://plotnine.readthedocs.io/en/stable/">https://plotnine.readthedocs.io/en/stable/</a>
</li>

<li>Plotnine gallery<br />
<a href="https://plotnine.readthedocs.io/en/latest/gallery.html">https://plotnine.readthedocs.io/en/latest/gallery.html</a>
</li>

<li>plotnine 0.7.1 na PyPi<br />
<a href="https://pypi.org/project/plotnine/">https://pypi.org/project/plotnine/</a>
</li>

<li>plotnine-examples 0.0.4 na PyPi<br />
<a href="https://pypi.org/project/plotnine-examples/">https://pypi.org/project/plotnine-examples/</a>
</li>

<li>plotnine examples repository<br />
<a href="https://github.com/has2k1/plotnine-examples">https://github.com/has2k1/plotnine-examples</a>
</li>

<li>Data visualization in R: cheat sheet<br />
<a href="https://github.com/rstudio/cheatsheets/blob/master/data-visualization-2.1.pdf">https://github.com/rstudio/cheatsheets/blob/master/data-visualization-2.1.pdf</a>
</li>

<li>The R Project for Statistical Computing<br />
<a href="https://www.r-project.org/">https://www.r-project.org/</a>
</li>

<li>An Introduction to R<br />
<a href="https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf">https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf</a>
</li>

<li>R (programming language)<br />
<a href="https://en.wikipedia.org/wiki/R_(programming_language)">https://en.wikipedia.org/wiki/R_(programming_language)</a>
</li>

<li>The R Programming Language<br />
<a href="https://www.tiobe.com/tiobe-index/r/">https://www.tiobe.com/tiobe-index/r/</a>
</li>

<li>R Graphics Second Edition<br />
<a href="https://www.stat.auckland.ac.nz/~paul/RG2e/">https://www.stat.auckland.ac.nz/~paul/RG2e/</a>
</li>

<li>ggplot2 - Introduction<br />
<a href="https://www.tutorialspoint.com/ggplot2/ggplot2_introduction.htm">https://www.tutorialspoint.com/ggplot2/ggplot2_introduction.htm</a>
</li>

<li>ggplot2: Elegant Graphics for Data Analysis<br />
<a href="https://ggplot2-book.org/index.html">https://ggplot2-book.org/index.html</a>
</li>

<li>Create Elegant Data Visualisations Using the Grammar of Graphics<br />
<a href="https://www.rdocumentation.org/packages/ggplot2/versions/3.3.2">https://www.rdocumentation.org/packages/ggplot2/versions/3.3.2</a>
</li>

<li>Grid<br />
<a href="https://www.stat.auckland.ac.nz/~paul/grid/grid.html">https://www.stat.auckland.ac.nz/~paul/grid/grid.html</a>
</li>

<li>Interactive Course: Data Visualization with lattice in R<br />
<a href="https://www.datacamp.com/courses/data-visualization-in-r-with-lattice">https://www.datacamp.com/courses/data-visualization-in-r-with-lattice</a>
</li>

<li>Lattice: trellis graphics for R<br />
<a href="https://lattice.r-forge.r-project.org/">https://lattice.r-forge.r-project.org/</a>
</li>

<li>Lattice: Multivariate Data Visualization with R<br />
<a href="http://lmdvr.r-forge.r-project.org/figures/figures.html">http://lmdvr.r-forge.r-project.org/figures/figures.html</a>
</li>

<li>Getting Started with Lattice Graphics<br />
<a href="https://lattice.r-forge.r-project.org/Vignettes/src/lattice-intro/lattice-intro.pdf">https://lattice.r-forge.r-project.org/Vignettes/src/lattice-intro/lattice-intro.pdf</a>
</li>

<li>Using lattice’s xyplot()<br />
<a href="https://homerhanumat.github.io/tigerstats/xyplot.html">https://homerhanumat.github.io/tigerstats/xyplot.html</a>
</li>

<li>ggplot2 Tutorial<br />
<a href="https://www.tutorialspoint.com/ggplot2/index.htm">https://www.tutorialspoint.com/ggplot2/index.htm</a>
</li>

<li>Lattice Package in R with Functions and Graphs<br />
<a href="https://techvidvan.com/tutorials/lattice-package-in-r/">https://techvidvan.com/tutorials/lattice-package-in-r/</a>
</li>

<li>The R Graph Gallery<br />
<a href="https://www.r-graph-gallery.com/index.html">https://www.r-graph-gallery.com/index.html</a>
</li>

<li>Lattice Graphs<br />
<a href="https://www.statmethods.net/advgraphs/trellis.html">https://www.statmethods.net/advgraphs/trellis.html</a>
</li>

<li>ggplot2 (Graph gallery)<br />
<a href="https://www.r-graph-gallery.com/ggplot2-package.html">https://www.r-graph-gallery.com/ggplot2-package.html</a>
</li>

<li>R Markdown<br />
<a href="https://rmarkdown.rstudio.com/">https://rmarkdown.rstudio.com/</a>
</li>

<li>R Markdown: The Definitive Guide<br />
<a href="https://bookdown.org/yihui/rmarkdown/">https://bookdown.org/yihui/rmarkdown/</a>
</li>

<li>R Markdown Cheat Sheet<br />
<a href="https://rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf">https://rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf</a>
</li>

<li>Introduction to R Markdown<br />
<a href="https://rmarkdown.rstudio.com/articles_intro.html">https://rmarkdown.rstudio.com/articles_intro.html</a>
</li>

<li>R Cheat Sheets<br />
<a href="https://blog.sergiouri.be/2016/07/r-cheat-sheets.html">https://blog.sergiouri.be/2016/07/r-cheat-sheets.html</a>
</li>

<li>R Cheat Sheet<br />
<a href="https://s3.amazonaws.com/quandl-static-content/Documents/Quandl+-+R+Cheat+Sheet.pdf">https://s3.amazonaws.com/quandl-static-content/Documents/Quandl+-+R+Cheat+Sheet.pdf</a>
</li>

<li>Base R Cheat Sheet<br />
<a href="https://rstudio.com/wp-content/uploads/2016/06/r-cheat-sheet.pdf">https://rstudio.com/wp-content/uploads/2016/06/r-cheat-sheet.pdf</a>
</li>

<li>PYPL PopularitY of Programming Language<br />
<a href="https://pypl.github.io/PYPL.html">https://pypl.github.io/PYPL.html</a>
</li>

<li>Tiobe index<br />
<a href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a>
</li>

<li>Stack Overflow: Most Loved, Dreaded &amp; Wanted Programming Languages In 2020<br />
<a href="https://fossbytes.com/stack-overflow-most-loved-dreaded-wanted-programming-languages-in-2020/">https://fossbytes.com/stack-overflow-most-loved-dreaded-wanted-programming-languages-in-2020/</a>
</li>

<li>How to Install and Use R on Ubuntu<br />
<a href="https://itsfoss.com/install-r-ubuntu/">https://itsfoss.com/install-r-ubuntu/</a>
</li>

<li>R programming for beginners - Why you should use R<br />
<a href="https://www.youtube.com/watch?v=9kYUGMg_14s">https://www.youtube.com/watch?v=9kYUGMg_14s</a>
</li>

<li>GOTO 2012 • The R Language The Good The Bad &amp; The Ugly<br />
<a href="https://www.youtube.com/watch?v=6S9r_YbqHy8">https://www.youtube.com/watch?v=6S9r_YbqHy8</a>
</li>

<li>Intro to Data Visualization with R &amp; ggplot2<br />
<a href="https://www.youtube.com/watch?v=49fADBfcDD4">https://www.youtube.com/watch?v=49fADBfcDD4</a>
</li>

<li>Plotting with ggplot2: Part 1<br />
<a href="https://www.youtube.com/watch?v=HeqHMM4ziXA">https://www.youtube.com/watch?v=HeqHMM4ziXA</a>
</li>

<li>Plotting with ggplot2: Part 2<br />
<a href="https://www.youtube.com/watch?v=n8kYa9vu1l8">https://www.youtube.com/watch?v=n8kYa9vu1l8</a>
</li>

<li>R vs Python - What should I learn in 2020? | R and Python Comparison<br />
<a href="https://www.youtube.com/watch?v=eRP_J2yLjSU">https://www.youtube.com/watch?v=eRP_J2yLjSU</a>
</li>

<li>R Programming 101<br />
<a href="https://www.youtube.com/c/rprogramming101">https://www.youtube.com/c/rprogramming101</a>
</li>

<li>Seriál Tvorba grafů pomocí programu "R"<br />
<a href="https://www.root.cz/serialy/tvorba-grafu-pomoci-programu-r/">https://www.root.cz/serialy/tvorba-grafu-pomoci-programu-r/</a>
</li>

<li>Tvorba grafů pomocí programu "R": úvod<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-1/">https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-1/</a>
</li>

<li>Tvorba grafů pomocí programu "R": pokročilé funkce<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-pokrocile-funkce/">https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-pokrocile-funkce/</a>
</li>

<li>Tvorba grafů pomocí programu "R": vkládání textu, čeština<br />
<a href="https://www.root.cz/clanky/grafy-pomoci-programu-r-vkladani-textu-cestina/">https://www.root.cz/clanky/grafy-pomoci-programu-r-vkladani-textu-cestina/</a>
</li>

<li>Cesta erka: Krok nultý &ndash; instalace &amp; nastavení – prostředí, projekty, package<br />
<a href="https://www.jla-data.net/r4su/r4su-environment-setup/">https://www.jla-data.net/r4su/r4su-environment-setup/</a>
</li>

<li>Cesta erka: Krok první &ndash; operace a struktury – proměnné, rovnítka a dolary<br />
<a href="https://www.jla-data.net/r4su/r4su-data-structures/">https://www.jla-data.net/r4su/r4su-data-structures/</a>
</li>

<li>Cesta erka: Krok druhý &ndash; načtení externích dat – csvčka, excely a databáze<br />
<a href="https://www.jla-data.net/r4su/r4su-read-data/">https://www.jla-data.net/r4su/r4su-read-data/</a>
</li>

<li>Cesta erka: Krok třetí &ndash; manipulace s daty – dplyr, slovesa a pajpy<br />
<a href="https://www.jla-data.net/r4su/r4su-manipulate-data/">https://www.jla-data.net/r4su/r4su-manipulate-data/</a>
</li>

<li>Cesta erka: Krok čtvrtý &ndash; podání výsledků – ggplot, geomy a estetiky<br />
<a href="https://www.jla-data.net/r4su/r4su-report-results/">https://www.jla-data.net/r4su/r4su-report-results/</a>
</li>

<li>Cesta erka: Krok pátý &ndash; case study – případ piva v&nbsp;Praze<br />
<a href="https://www.jla-data.net/r4su/r4su-case-study-beer/">https://www.jla-data.net/r4su/r4su-case-study-beer/</a>
</li>

<li>V indexu popularity programovacích jazyků TIOBE překvapilo R, Go, Perl, Scratch a Rust<br />
<a href="https://www.root.cz/zpravicky/v-indexu-popularity-programovacich-jazyku-tiobe-prekvapilo-r-go-perl-scratch-a-rust/">https://www.root.cz/zpravicky/v-indexu-popularity-programovacich-jazyku-tiobe-prekvapilo-r-go-perl-scratch-a-rust/</a>
</li>

<li>Is R Programming SURGING in Popularity in 2020?<br />
<a href="https://www.youtube.com/watch?v=Duwn-vImyXE">https://www.youtube.com/watch?v=Duwn-vImyXE</a>
</li>

<li>Using the R programming language in Jupyter Notebook<br />
<a href="https://docs.anaconda.com/anaconda/navigator/tutorials/r-lang/">https://docs.anaconda.com/anaconda/navigator/tutorials/r-lang/</a>
</li>

<li>Using R on Jupyter Notebook<br />
<a href="https://dzone.com/articles/using-r-on-jupyternbspnotebook">https://dzone.com/articles/using-r-on-jupyternbspnotebook</a>
</li>

<li>Graphics, ggplot2<br />
<a href="http://r4stats.com/examples/graphics-ggplot2/">http://r4stats.com/examples/graphics-ggplot2/</a>
</li>

<li>A Practice Data Set<br />
<a href="https://r4stats.wordpress.com/examples/mydata/">https://r4stats.wordpress.com/examples/mydata/</a>
</li>

<li>Shiny &ndash; galerie projektů<br />
<a href="https://shiny.rstudio.com/gallery/">https://shiny.rstudio.com/gallery/</a>
</li>

<li>Seriál Programovací jazyk Julia<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-julia/">https://www.root.cz/serialy/programovaci-jazyk-julia/</a>
</li>

<li>Julia (front page)<br />
<a href="http://julialang.org/">http://julialang.org/</a>
</li>

<li>Julia &ndash; repositář na GitHubu<br />
<a href="https://github.com/JuliaLang/julia">https://github.com/JuliaLang/julia</a>
</li>

<li>Julia (programming language)<br />
<a href="https://en.wikipedia.org/wiki/Julia_%28programming_language%29">https://en.wikipedia.org/wiki/Julia_%28programming_language%29</a>
</li>

<li>IJulia<br />
<a href="https://github.com/JuliaLang/IJulia.jl">https://github.com/JuliaLang/IJulia.jl</a>
</li>

<li>Introducing Julia<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia">https://en.wikibooks.org/wiki/Introducing_Julia</a>
</li>

<li>Julia: the REPL<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/The_REPL">https://en.wikibooks.org/wiki/Introducing_Julia/The_REPL</a>
</li>

<li>Introducing Julia/Metaprogramming<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/Metaprogramming">https://en.wikibooks.org/wiki/Introducing_Julia/Metaprogramming</a>
</li>

<li>Month of Julia<br />
<a href="https://github.com/DataWookie/MonthOfJulia">https://github.com/DataWookie/MonthOfJulia</a>
</li>

<li>Learn X in Y minutes (where X=Julia)<br />
<a href="https://learnxinyminutes.com/docs/julia/">https://learnxinyminutes.com/docs/julia/</a>
</li>

<li>New Julia language seeks to be the C for scientists<br />
<a href="http://www.infoworld.com/article/2616709/application-development/new-julia-language-seeks-to-be-the-c-for-scientists.html">http://www.infoworld.com/article/2616709/application-development/new-julia-language-seeks-to-be-the-c-for-scientists.html</a>
</li>

<li>Julia: A Fast Dynamic Language for Technical Computing<br />
<a href="http://karpinski.org/publications/2012/julia-a-fast-dynamic-language">http://karpinski.org/publications/2012/julia-a-fast-dynamic-language</a>
</li>

<li>The LLVM Compiler Infrastructure<br />
<a href="http://llvm.org/">http://llvm.org/</a>
</li>

<li>Julia: benchmarks<br />
<a href="http://julialang.org/benchmarks/">http://julialang.org/benchmarks/</a>
</li>

<li>R Vector<br />
<a href="https://www.datamentor.io/r-programming/vector/">https://www.datamentor.io/r-programming/vector/</a>
</li>

<li>.R File Extension<br />
<a href="https://fileinfo.com/extension/r">https://fileinfo.com/extension/r</a>
</li>

<li>Lineární regrese<br />
<a href="https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese">https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese</a>
</li>

<li>lm (funkce)<br />
<a href="https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/lm">https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/lm</a>
</li>

<li>quit (funkce)<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quit">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quit</a>
</li>

<li>c (funkce)<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/c">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/c</a>
</li>

<li>help (funkce)<br />
<a href="https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/help">https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/help</a>
</li>

<li>Shiny: Introduction to interactive documents<br />
<a href="https://shiny.rstudio.com/articles/interactive-docs.html">https://shiny.rstudio.com/articles/interactive-docs.html</a>
</li>

<li>R Release History 1997-2013<br />
<a href="http://timelyportfolio.github.io/rCharts_timeline_r/">http://timelyportfolio.github.io/rCharts_timeline_r/</a>
</li>

<li>R: atomic vectors<br />
<a href="https://renenyffenegger.ch/notes/development/languages/R/data-structures/vector/">https://renenyffenegger.ch/notes/development/languages/R/data-structures/vector/</a>
</li>

<li>11 Best R Programming IDE and editors<br />
<a href="https://www.dunebook.com/best-r-programming-ide/">https://www.dunebook.com/best-r-programming-ide/</a>
</li>

<li>CRAN - The Comprehensive R Archive Network<br />
<a href="https://cran.r-project.org/">https://cran.r-project.org/</a>
</li>

<li>R - Arrays<br />
<a href="https://www.tutorialspoint.com/r/r_arrays.htm">https://www.tutorialspoint.com/r/r_arrays.htm</a>
</li>

<li>Array vs Matrix in R Programming<br />
<a href="https://www.geeksforgeeks.org/array-vs-matrix-in-r-programming/?ref=rp">https://www.geeksforgeeks.org/array-vs-matrix-in-r-programming/?ref=rp</a>
</li>

<li>Online R Language IDE<br />
<a href="https://www.jdoodle.com/execute-r-online/">https://www.jdoodle.com/execute-r-online/</a>
</li>

<li>Execute R Online (R v3.4.1)<br />
<a href="https://www.tutorialspoint.com/execute_r_online.php">https://www.tutorialspoint.com/execute_r_online.php</a>
</li>

<li>Snippets: Run any R code you like. There are over twelve thousand R packages preloaded<br />
<a href="https://rdrr.io/snippets/">https://rdrr.io/snippets/</a>
</li>

<li>R Package Documentation<br />
<a href="https://rdrr.io/">https://rdrr.io/</a>
</li>

<li>Data Reshaping in R – Popular Functions to Organise Data<br />
<a href="https://techvidvan.com/tutorials/data-reshaping-in-r/">https://techvidvan.com/tutorials/data-reshaping-in-r/</a>
</li>

<li>What is an R Data Frame?<br />
<a href="https://magoosh.com/data-science/what-is-an-r-data-frame/">https://magoosh.com/data-science/what-is-an-r-data-frame/</a>
</li>

<li>What's a data frame?<br />
<a href="https://campus.datacamp.com/courses/free-introduction-to-r/chapter-5-data-frames?ex=1">https://campus.datacamp.com/courses/free-introduction-to-r/chapter-5-data-frames?ex=1</a>
</li>

<li>data.frame<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/data.frame">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/data.frame</a>
</li>

<li>as.data.frame<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/as.data.frame">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/as.data.frame</a>
</li>

<li>table<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/table">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/table</a>
</li>

<li>Python Pandas - DataFrame<br />
<a href="https://www.tutorialspoint.com/python_pandas/python_pandas_dataframe.htm">https://www.tutorialspoint.com/python_pandas/python_pandas_dataframe.htm</a>
</li>

<li>The Pandas DataFrame: Make Working With Data Delightful<br />
<a href="https://realpython.com/pandas-dataframe/">https://realpython.com/pandas-dataframe/</a>
</li>

<li>Python | Pandas DataFrame<br />
<a href="https://www.geeksforgeeks.org/python-pandas-dataframe/">https://www.geeksforgeeks.org/python-pandas-dataframe/</a>
</li>

<li>R - Factors<br />
<a href="https://www.tutorialspoint.com/r/r_factors.htm">https://www.tutorialspoint.com/r/r_factors.htm</a>
</li>

<li>R - Scatterplots<br />
<a href="https://www.tutorialspoint.com/r/r_scatterplots.htm">https://www.tutorialspoint.com/r/r_scatterplots.htm</a>
</li>

<li>Quick guide to line types (lty) in R<br />
<a href="https://www.benjaminbell.co.uk/2018/02/quick-guide-to-line-types-lty-in-r.html">https://www.benjaminbell.co.uk/2018/02/quick-guide-to-line-types-lty-in-r.html</a>
</li>

<li>Lattice C (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Lattice_C">https://en.wikipedia.org/wiki/Lattice_C</a>
</li>

<li>Lorenz Attractor in R<br />
<a href="https://www.sixhat.net/lorenz-attractor-in-r.html">https://www.sixhat.net/lorenz-attractor-in-r.html</a>
</li>

<li>Small multiple<br />
<a href="https://en.wikipedia.org/wiki/Small_multiple">https://en.wikipedia.org/wiki/Small_multiple</a>
</li>

<li>Category:Infographics (infografika)<br />
<a href="https://en.wikipedia.org/wiki/Category:Infographics">https://en.wikipedia.org/wiki/Category:Infographics</a>
</li>

<li>Trellis plots (pro Python)<br />
<a href="https://subscription.packtpub.com/book/big_data_and_business_intelligence/9781784390150/4/ch04lvl1sec41/trellis-plots">https://subscription.packtpub.com/book/big_data_and_business_intelligence/9781784390150/4/ch04lvl1sec41/trellis-plots</a>
</li>

<li>Trellis (architecture)<br />
<a href="https://en.wikipedia.org/wiki/Trellis_(architecture)">https://en.wikipedia.org/wiki/Trellis_(architecture)</a>
</li>

<li>Izobara (meteorologie)<br />
<a href="https://cs.wikipedia.org/wiki/Izobara_(meteorologie)">https://cs.wikipedia.org/wiki/Izobara_(meteorologie)</a>
</li>

<li>How to Create a Lattice Plot in R<br />
<a href="https://www.dummies.com/programming/r/how-to-create-a-lattice-plot-in-r/">https://www.dummies.com/programming/r/how-to-create-a-lattice-plot-in-r/</a>
</li>

<li>Density estimation<br />
<a href="https://en.wikipedia.org/wiki/Density_estimation">https://en.wikipedia.org/wiki/Density_estimation</a>
</li>

<li>Sedm smrtelných statistických hříchů<br />
<a href="http://dfens-cz.com/sedm-smrtelnych-statistickych-hrichu/">http://dfens-cz.com/sedm-smrtelnych-statistickych-hrichu/</a>
</li>

<li>Spurious correlations<br />
<a href="https://tylervigen.com/spurious-correlations">https://tylervigen.com/spurious-correlations</a>
</li>

<li>R programming<br />
<a href="https://www.slideshare.net/shantanupatil104/r-programming-44637606">https://www.slideshare.net/shantanupatil104/r-programming-44637606</a>
</li>

<li>R language tutorial<br />
<a href="https://www.slideshare.net/ChiuYW/r-language-tutorial">https://www.slideshare.net/ChiuYW/r-language-tutorial</a>
</li>

<li>An Interactive Introduction To R (Programming Language For Statistics)<br />
<a href="https://www.slideshare.net/dataspora/an-interactive-introduction-to-r-programming-language-for-statistics">https://www.slideshare.net/dataspora/an-interactive-introduction-to-r-programming-language-for-statistics</a>
</li>

<li>A Pamphlet against R<br />
<a href="https://panicz.github.io/pamphlet/">https://panicz.github.io/pamphlet/</a>
</li>

<li>Notebook interface<br />
<a href="https://en.wikipedia.org/wiki/Notebook_interface">https://en.wikipedia.org/wiki/Notebook_interface</a>
</li>

<li>Jypyter: open source, interactive data science and scientific computing across over 40 programming languages<br />
<a href="https://jupyter.org/">https://jupyter.org/</a>
</li>

<li>nbviewer: a simple way to share Jupyter Notebooks<br />
<a href="https://nbviewer.jupyter.org/">https://nbviewer.jupyter.org/</a>
</li>

<li>Video streaming in the Jupyter Notebook<br />
<a href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85</a>
</li>

<li>How IPython and Jupyter Notebook work<br />
<a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html</a>
</li>

<li>Jupyter kernels<br />
<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a>
</li>

<li>PNG is Not GIF<br />
<a href="https://www.root.cz/clanky/png-is-not-gif/">https://www.root.cz/clanky/png-is-not-gif/</a>
</li>

<li>Anatomie grafického formátu PNG<br />
<a href="https://www.root.cz/clanky/anatomie-grafickeho-formatu-png/">https://www.root.cz/clanky/anatomie-grafickeho-formatu-png/</a>
</li>

<li>PNG - bity, byty, chunky<br />
<a href="https://www.root.cz/clanky/png-bity-byty-chunky/">https://www.root.cz/clanky/png-bity-byty-chunky/</a>
</li>

<li>Řádkové filtry v PNG<br />
<a href="https://www.root.cz/clanky/radkove-filtry-v-png/">https://www.root.cz/clanky/radkove-filtry-v-png/</a>
</li>

<li>Nepovinné chunky v PNG a kontrola pomocí CRC<br />
<a href="https://www.root.cz/clanky/nepovinne-chunky-v-png-a-kontrola-pomoci-crc/">https://www.root.cz/clanky/nepovinne-chunky-v-png-a-kontrola-pomoci-crc/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

