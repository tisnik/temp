<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Programovací jazyk R: seznamy a datové rámce</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Programovací jazyk R: seznamy a datové rámce</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Posledními dvěma datovými typy, s nimiž se seznámíme, jsou seznamy a datové rámce. V&nbsp;praxi (statistické výpočty atd.) jsou důležité především datové rámce, které svými vlastnostmi připomínají například databázové tabulky &ndash; jejich sloupce mohou mít různý typ.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Programovací jazyk R: seznamy a datové rámce</a></p>
<p><a href="#k02">2. Přístup k&nbsp;prvkům seznamů s&nbsp;využitím celočíselných indexů</a></p>
<p><a href="#k03">3. Přístup k&nbsp;prvkům seznamů pomocí jejich jména</a></p>
<p><a href="#k04">4. Spojení seznamů</a></p>
<p><a href="#k05">5. Modifikace obsahu seznamů</a></p>
<p><a href="#k06">6. Vytvoření nového seznamu ze sekvence</a></p>
<p><a href="#k07">7. Vytvoření nového seznamu z&nbsp;vektoru</a></p>
<p><a href="#k08">*** 8. Vytvoření seznamu z&nbsp;jednodimenzionálního pole</a></p>
<p><a href="#k09">*** 9. Vytvoření seznamu z&nbsp;dvojdimenzionálního pole</a></p>
<p><a href="#k10">*** 10. Vytvoření seznamu z&nbsp;matice</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Programovací jazyk R: seznamy a datové rámce</h2>

<p>Na popis datových typů programovacího jazyka R, jemuž jsme se věnovali
v&nbsp;předchozích článcích, dnes navážeme a celé (relativně rozsáhlé) téma
zakončíme. Nejprve si popíšeme seznamy (<i>list</i>) a posléze velmi důležitý
datový typ nazvaný datový rámec (<i>data frame</i>). Nejprve začněme popisem
seznamů. Seznamy mohou obsahovat sekvenci hodnot libovolných typů, což znamená,
že se (na rozdíl od vektorů nebo matic) nejedná o homogenní datový typ. Do
seznamů lze prvky přidávat či naopak odebírat. Prvky seznamu jsou přístupné buď
přes jejich celočíselný index nebo pomocí jména, samozřejmě za předpokladu, že
jsou prvky pojmenovány (takový seznam pak připomíná svým chováním spíše
slovník, dokonce i tím, že si lze zvolit, jestli mají být prvky podle jména
setříděny či nikoli).</p>

<p><div class="rs-tip-major">Poznámka: jazyk <i>R</i> se vyvinul
z&nbsp;programovacího jazyka <i>S</i>, mezi jehož předky patří mj.&nbsp;i
<i>Scheme</i>. Proto lze v&nbsp;R pracovat i s&nbsp;takzvanou tečka dvojicí
typickou pro prakticky všechny lispovské jazyky.</div></p>

<p>Pro vytvoření seznamu je možné použít několik konstruktorů, zejména
konstruktor nazvaný <strong>list</strong>, dále převodní funkci pojmenovanou
<strong>as.list</strong> atd. Všechny tyto funkce jsou pochopitelně popsány
v&nbsp;nápovědě, o čemž se můžeme velmi snadno přesvědčit:</p>

<pre>
<strong>help(list)</strong>
&nbsp;
list                   package:base                    R Documentation
&nbsp;
Lists - Generic and Dotted Pairs
&nbsp;
Description:
&nbsp;
     Functions to construct, coerce and check for both kinds of R
     lists.
&nbsp;
Usage:
&nbsp;
     list(...)
     pairlist(...)
&nbsp;
     as.list(x, ...)
     ## S3 method for class 'environment'
     as.list(x, all.names = FALSE, sorted = FALSE, ...)
     as.pairlist(x)
&nbsp;
     is.list(x)
     is.pairlist(x)
&nbsp;
     alist(...)
&nbsp;
Arguments:
&nbsp;
     ...: objects, possibly named.
&nbsp;
       x: object to be coerced or tested.
&nbsp;
all.names: a logical indicating whether to copy all values or (default)
          only those whose names do not begin with a dot.
&nbsp;
  sorted: a logical indicating whether the ‘names’ of the resulting
          list should be sorted (increasingly).  Note that this is
          somewhat costly, but may be useful for comparison of
          environments.
</pre>

<p>Vyzkoušejme si nyní základní konstruktor seznamu představovaný funkcí
<strong>list</strong>. Této funkci se předávají prvky seznamu, které jsou
zařazeny v&nbsp;takovém pořadí, v&nbsp;jakém jsou zapsány:</p>

<pre>
lst &lt;- <strong>list</strong>(1, 2, 3, 4)
print(lst)
</pre>

<p>Funkce <strong>print</strong> vytiskne jednotlivé prvky seznamu a před
každým prvkem je uveden jeho <i>selektor</i> (v&nbsp;podstatě zápis indexu
prvku):</p>

<pre>
[[1]]
[1] 1
&nbsp;
[[2]]
[1] 2
&nbsp;
[[3]]
[1] 3
&nbsp;
[[4]]
[1] 4
</pre>

<p><div class="rs-tip-major">Poznámka: jak je v&nbsp;R zvykem, jsou prvky
seznamu považovány za jednoprvkové vektory.</div></p>

<p>Ukažme si, že seznam může obsahovat i řetězce:</p>

<pre>
lst &lt;- <strong>list</strong>("foo", "bar", "baz")
print(lst)
</pre>

<p>Výsledek:</p>

<pre>
[[1]]
[1] "foo"
&nbsp;
[[2]]
[1] "bar"
&nbsp;
[[3]]
[1] "baz"
</pre>

<p>A konečně poslední seznam obsahuje pojmenované prvky, což znamená, že
k&nbsp;prvkům lze přistupovat nejenom pomocí indexu, ale i jejich jména:</p>

<pre>
lst &lt;- <strong>list</strong>(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
print(lst)
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že prvky tohoto seznamu
mají rozdílné typy hodnot.</div></p>

<p>Tisk celého seznamu:</p>

<pre>
$name
[1] "Fred"
&nbsp;
$wife
[1] "Mary"
&nbsp;
$no.children
[1] 3
&nbsp;
$child.ages
[1] 4 7 9
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, jak jsou prvky
pojmenovány &ndash; před jménem se nachází znak dolaru. Toto využijeme později
při přístupu k&nbsp;prvkům.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Přístup k&nbsp;prvkům seznamů s&nbsp;využitím celočíselných indexů</h2>

<p>Přístup k&nbsp;prvkům seznamu (s&nbsp;využitím <i>selektoru</i>) může být
zpočátku poněkud matoucí, protože se používají dva způsoby zápisu
s&nbsp;rozdílným chováním. Nejprve vytvořme seznam pro otestování:</p>

<pre>
lst &lt;- <strong>list</strong>("foo", "bar", "baz")
</pre>

<p>Dále se pokusme přistoupit k&nbsp;prvnímu prvku seznamu, a to tak, že index
prvku zapíšeme do jednoduché hranaté závorky:</p>

<pre>
print(<strong>lst[1]</strong>)
</pre>

<p>Výsledek bude následující:</p>

<pre>
[[1]]
[1] "foo"
</pre>

<p>Sice to tak nemusí vypadat, ale výsledkem předchozí selekce je jednoprvkový seznam, tedy nikoli samotný prvek:</p>

<pre>
print(class(lst[1]))
&nbsp;
[1] "list"
</pre>

<p>Získání skutečné hodnoty prvního prvku musí vypadat nepatrně odlišně:</p>

<pre>
print(<strong>lst[[1]]</strong>)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
[1] "foo"
</pre>

<p>Který je typu:</p>

<pre>
<strong>print(class(lst[[1]]))</strong>
&nbsp;
[1] "character"
</pre>

<p>Podobným způsobem lze získat i všechny prvky kromě prvního atd.:</p>

<pre>
<strong>print(lst[-1])</strong>
&nbsp;
[[1]]
[1] "bar"
&nbsp;
[[2]]
[1] "baz"
</pre>

<p>Výsledkem této operace je tedy nový seznam, s&nbsp;nímž je možné pracovat
jako s&nbsp;jakýmkoli jiným seznamem:</p>

<pre>
lst &lt;- list("foo", "bar", "baz")
&nbsp;
print("lst[[-1]][1]")
print(<strong>lst[-1][1]</strong>)
</pre>

<p>Po spuštění tohoto příkladu se zobrazí:</p>

<pre>
[1] "lst[[-1]][1]"
[[1]]
[1] "bar"
</pre>

<p><div class="rs-tip-major">Poznámka: právě rozdíl mezi zápisy
<strong>[index]</strong> a <strong>[[index]]</strong> může způsobit při práci
se seznamy mnoho chyb.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Přístup k&nbsp;prvkům seznamů pomocí jejich jména</h2>

<p><a href="#k01">V&nbsp;úvodní kapitole</a> jsme si řekli, že prvky seznamu
mohou být pojmenovány, čímž se z&nbsp;klasických seznamů vytváří obdoba
slovníků (<i>dictionary</i>). K&nbsp;těmto prvkům lze pochopitelně přistoupit
právě i s&nbsp;použitím tohoto jména a dokonce jsou povoleny dva zápisy
zvýrazněné v&nbsp;následujícím demonstračním příkladu:</p>

<pre>
lst &lt;- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
&nbsp;
print(<strong>lst["name"]</strong>)
print(<strong>lst[["name"]]</strong>)
print(<strong>lst$name</strong>)
</pre>

<p>Podívejme se na výsledky získané po spuštění tohoto demonstračního
příkladu:</p>

<pre>
$name
[1] "Fred"
&nbsp;
[1] "Fred"
[1] "Fred"
</pre>

<p>Z&nbsp;vytištěných výsledků je patrné, že prvním zápisem jsme získali nový
jednoprvkový seznam a druhé dva zápisy vedly k&nbsp;přečtení stejného prvku
seznamu. Prostřední zápis použijeme tehdy, pokud je jméno prvku uloženo
v&nbsp;nějaké proměnné, poslední zápis pak při &bdquo;ručním&ldquo; přístupu
k&nbsp;prvku, protože použití jména seznamu, dolaru a jména prvku se zapíše
rychleji, než indexovací závorky a klíč v&nbsp;uvozovkách.</p>

<p>V&nbsp;případě, že je výsledkem výběru vektor či další seznam, lze
indexování v&nbsp;této datové struktuře zapsat do vlastních hranatých závorek,
tedy naprosto stejným způsobem, jako je tomu i v&nbsp;dalších programovacích
jazycích:</p>

<pre>
lst &lt;- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
&nbsp;
print(<strong>lst["child.ages"][1]</strong>)
print(<strong>lst[["child.ages"]][2]</strong>)
print(<strong>lst$child.ages[2]</strong>)
</pre>

<p>Výsledky budou nyní vypadat následovně:</p>

<pre>
$child.ages
[1] 4 7 9
&nbsp;
[1] 7
[1] 7
</pre>

<p><div class="rs-tip-major">Poznámka: vidíme, že první výběr je proveden
odlišně &ndash; snažíme se vybrat první prvek z&nbsp;datového typu
&bdquo;seznam&ldquo;.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Spojení seznamů</h2>

<p>Pro spojení seznamů použijeme nám již známou funkci nazvanou
<strong>c</strong>, jejíž jednopísmenné označení vychází z&nbsp;názvu
<i>cons</i> popř.&nbsp;v&nbsp;tomto případě přesněji <i>concatenate</i>
popř.&nbsp;<i>combine</i>. V&nbsp;následujícím demonstračním příkladu jsou
nejprve vytvořeny dva seznamy, které jsou následně spojeny funkcí
<strong>c</strong> do seznamu jediného. Povšimněte si odlišných typů prvků i
toho, že v&nbsp;prvním seznamu jsou prvky pojmenovány, kdežto ve druhém
nikoli:</p>

<pre>
lst1 &lt;- <strong>list</strong>(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
lst2 &lt;- <strong>list</strong>(1, 2, 3, 4)
&nbsp;
lst &lt;- <strong>c</strong>(lst1, lst2)
&nbsp;
print(lst)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
$name
[1] "Fred"
&nbsp;
$wife
[1] "Mary"
&nbsp;
$no.children
[1] 3
&nbsp;
$child.ages
[1] 4 7 9
&nbsp;
[[5]]
[1] 1
&nbsp;
[[6]]
[1] 2
&nbsp;
[[7]]
[1] 3
&nbsp;
[[8]]
[1] 4
</pre>

<p>Pokus o spojení seznamů, které mají stejně pojmenované prvky:</p>

<pre>
lst1 &lt;- <strong>list</strong>(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
lst2 &lt;- <strong>list</strong>(name="Mary", husband="Mary", no.children=3, child.ages=c(4,7,9))
&nbsp;
lst &lt;- <strong>c</strong>(lst1, lst2)
&nbsp;
print(lst)
</pre>

<p>Ve výsledném seznamu se objeví prvky se stejným jménem (což je jeden
z&nbsp;rozdílů oproti klasickým slovníkům):</p>

<pre>
$name
[1] "Fred"
&nbsp;
$wife
[1] "Mary"
&nbsp;
$no.children
[1] 3
&nbsp;
$child.ages
[1] 4 7 9
&nbsp;
$name
[1] "Mary"
&nbsp;
$husband
[1] "Mary"
&nbsp;
$no.children
[1] 3
&nbsp;
$child.ages
[1] 4 7 9
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Modifikace obsahu seznamů</h2>

<p>Seznamy jsou měnitelné datové struktury, takže jejich prvky můžeme měnit, a
to běžným přiřazením. Podívejme se na příklad:</p>

<pre>
lst1 &lt;- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
lst2 &lt;- list(1, 2, 3, 4)
&nbsp;
print(lst1)
print(lst2)
print("----------------------------")
&nbsp;
<strong>lst1["name"]</strong> = "XXX"
print(lst1)
&nbsp;
<strong>lst2[2]</strong> = 100
print(lst2)
</pre>

<p><div class="rs-tip-major">Poznámka: namísto = můžete v&nbsp;tomto případě
použít přiřazovací operátor &lt;- (což je pro jazyk R více
idiomatické):</div></p>

<pre>
lst1 &lt;- list(name="Fred", wife="Mary", no.children=3, child.ages=c(4,7,9))
lst2 &lt;- list(1, 2, 3, 4)
&nbsp;
print(lst1)
print(lst2)
print("----------------------------")
&nbsp;
<strong>lst1["name"]</strong> &lt;- "XXX"
print(lst1)
&nbsp;
<strong>lst2[2]</strong> &lt;- 100
print(lst2)
</pre>

<p>Výsledky budou v&nbsp;obou případech totožné:</p>

<pre>
$name
[1] "Fred"
&nbsp;
$wife
[1] "Mary"
&nbsp;
$no.children
[1] 3
&nbsp;
$child.ages
[1] 4 7 9
&nbsp;
[[1]]
[1] 1
&nbsp;
[[2]]
[1] 2
&nbsp;
[[3]]
[1] 3
&nbsp;
[[4]]
[1] 4
&nbsp;
[1] "----------------------------"
$name
[1] "XXX"
&nbsp;
$wife
[1] "Mary"
&nbsp;
$no.children
[1] 3
&nbsp;
$child.ages
[1] 4 7 9
&nbsp;
[[1]]
[1] 1
&nbsp;
[[2]]
[1] 100
&nbsp;
[[3]]
[1] 3
&nbsp;
[[4]]
[1] 4
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vytvoření nového seznamu ze sekvence</h2>

<p>V&nbsp;předchozích kapitolách jsme si ukázali použití konstruktoru nazvaného
<strong>list</strong>. Tomuto konstruktoru se předávají jednotlivé prvky
seznamu, ovšem každá takto předaná hodnota je &ndash; nezávisle na svém obsahu
&ndash; skutečně chápána jako jediný prvek, což může být matoucí. Příkladem
může být pokus o vytvoření seznamu ze sekvence:</p>

<pre>
s &lt;- <strong>seq</strong>(1, 10)
print(class(s))
&nbsp;
lst &lt;- <strong>list</strong>(s)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<p>Výsledkem bude seznam obsahující jediný prvek, který je typu &bdquo;vektor
celých čísel&ldquo;:</p>

<pre>
[1] "integer"
[[1]]
 [1]  1  2  3  4  5  6  7  8  9 10
&nbsp;
[1] 1
[1] "list"
</pre>

<p>Pokud potřebujeme ze sekvence vytvořit seznam tak, aby se každý prvek
sekvence vložil jako samostatný prvek do seznamu, musíme použít konverzi
<strong>as.list</strong>:</p>

<pre>
s &lt;- <strong>seq</strong>(1, 10)
print(class(s))
&nbsp;
lst &lt;- <strong>as.list</strong>(s)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<p>Nyní je výsledkem seznam s&nbsp;deseti prvky (každý prvek je jednoprvkovým
vektorem):</p>

<pre>
[1] "integer"
[[1]]
[1] 1
&nbsp;
[[2]]
[1] 2
&nbsp;
[[3]]
[1] 3
&nbsp;
[[4]]
[1] 4
&nbsp;
[[5]]
[1] 5
&nbsp;
[[6]]
[1] 6
&nbsp;
[[7]]
[1] 7
&nbsp;
[[8]]
[1] 8
&nbsp;
[[9]]
[1] 9
&nbsp;
[[10]]
[1] 10
&nbsp;
[1] 10
[1] "list"
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Vytvoření nového seznamu z&nbsp;vektoru</h2>

<p>Stejným způsobem můžeme vytvořit jednoprvkový seznam z&nbsp;tříprvkového
vektoru:</p>

<pre>
v &lt;- <strong>c</strong>("foo", "bar", "baz")
print(class(v))
&nbsp;
lst &lt;- <strong>list</strong>(v)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<p>Výsledek:</p>

<pre>
[1] "character"
[[1]]
[1] "foo" "bar" "baz"
&nbsp;
[1] 1
[1] "list"
</pre>

<p>Či naopak tříprvkový seznam z&nbsp;tříprvkového vektoru:</p>

<pre>
v &lt;- <strong>c</strong>("foo", "bar", "baz")
print(class(v))
&nbsp;
lst &lt;- <strong>as.list</strong>(v)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<p>Výsledek bude v&nbsp;tomto případě odlišný:</p>

<pre>
[1] "character"
[[1]]
[1] "foo"
&nbsp;
[[2]]
[1] "bar"
&nbsp;
[[3]]
[1] "baz"
&nbsp;
[1] 3
[1] "list"
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;naprosté většině případů
požadujeme chování ukázané ve druhém demonstračním příkladu.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Vytvoření seznamu z&nbsp;jednodimenzionálního pole</h2>

<pre>
data &lt;- c(1, 2, 3, 4, 5, 6)
dimension1 &lt;- c(6)
&nbsp;
a &lt;- array(data, dim=dimension1)
&nbsp;
print(class(a))
&nbsp;
lst &lt;- list(a)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<pre>
[1] "array"
[[1]]
[1] 1 2 3 4 5 6
&nbsp;
[1] 1
[1] "list"
</pre>

<pre>
data &lt;- c(1, 2, 3, 4, 5, 6)
dimension1 &lt;- c(6)
&nbsp;
a &lt;- array(data, dim=dimension1)
&nbsp;
print(class(a))
&nbsp;
lst &lt;- as.list(a)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<pre>
[1] "array"
[[1]]
[1] 1
&nbsp;
[[2]]
[1] 2
&nbsp;
[[3]]
[1] 3
&nbsp;
[[4]]
[1] 4
&nbsp;
[[5]]
[1] 5
&nbsp;
[[6]]
[1] 6
&nbsp;
[1] 6
[1] "list"
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Vytvoření seznamu z&nbsp;dvojdimenzionálního pole</h2>

<pre>
data &lt;- c(1, 2, 3, 4, 5, 6)
dimension1 &lt;- c(2, 3)
&nbsp;
a &lt;- array(data, dim=dimension1)
&nbsp;
print(class(a))
&nbsp;
lst &lt;- list(a)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<pre>
[1] "matrix"
[[1]]
     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6
&nbsp;
[1] 1
[1] "list"
</pre>

<pre>
data &lt;- c(1, 2, 3, 4, 5, 6)
dimension1 &lt;- c(2, 3)
&nbsp;
a &lt;- array(data, dim=dimension1)
&nbsp;
print(class(a))
&nbsp;
lst &lt;- as.list(a)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<pre>
[1] "matrix"
[[1]]
[1] 1
&nbsp;
[[2]]
[1] 2
&nbsp;
[[3]]
[1] 3
&nbsp;
[[4]]
[1] 4
&nbsp;
[[5]]
[1] 5
&nbsp;
[[6]]
[1] 6
&nbsp;
[1] 6
[1] "list"
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Vytvoření seznamu z&nbsp;matice</h2>

<pre>
data &lt;- 1:12
&nbsp;
m1 &lt;- matrix(data, nrow=1, ncol=12)
print(m1)
print(class(m1))
&nbsp;
lst &lt;- list(m1)
&nbsp;
print(lst)
print(length(lst))
print(class(lst))
</pre>

<pre>
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
[1,]    1    2    3    4    5    6    7    8    9    10    11    12
[1] "matrix"
[[1]]
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
[1,]    1    2    3    4    5    6    7    8    9    10    11    12

[1] 1
[1] "list"
</pre>

<pre>
data &lt;- 1:12

m1 &lt;- matrix(data, nrow=1, ncol=12)
print(m1)
print(class(m1))

lst &lt;- as.list(m1)

print(lst)
print(length(lst))
print(class(lst))
</pre>

<pre>
     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]
[1,]    1    2    3    4    5    6    7    8    9    10    11    12
[1] "matrix"
[[1]]
[1] 1

[[2]]
[1] 2

[[3]]
[1] 3

[[4]]
[1] 4

[[5]]
[1] 5

[[6]]
[1] 6

[[7]]
[1] 7

[[8]]
[1] 8

[[9]]
[1] 9

[[10]]
[1] 10

[[11]]
[1] 11

[[12]]
[1] 12

[1] 12
[1] "list"
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
<strong>help(data.frame)</strong>
&nbsp;
list                   package:base                    R Documentation
&nbsp;
Lists - Generic and Dotted Pairs
&nbsp;
Description:
&nbsp;
     Functions to construct, coerce and check for both kinds of R
     lists.
&nbsp;
Usage:
&nbsp;
     list(...)
     pairlist(...)
     &nbsp;
     as.list(x, ...)
     ## S3 method for class 'environment'
     as.list(x, all.names = FALSE, sorted = FALSE, ...)
     as.pairlist(x)
     &nbsp;
     is.list(x)
     is.pairlist(x)
     &nbsp;
     alist(...)
     &nbsp;
Arguments:
&nbsp;
     ...: objects, possibly named.
&nbsp;
       x: object to be coerced or tested.
&nbsp;
all.names: a logical indicating whether to copy all values or (default)
          only those whose names do not begin with a dot.
&nbsp;
  sorted: a logical indicating whether the ‘names’ of the resulting
          list should be sorted (increasingly).  Note that this is
          somewhat costly, but may be useful for comparison of
          environments.
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
ids = c(1:9)
names = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R")
usages = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37)
changes = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
&nbsp;
languages &lt;- data.frame(
   id = ids,
   name = names,
   usage = usages,
   change = changes
)
&nbsp;
print(languages)
</pre>

<pre>
  id         name usage change
1  1            C 15.95   0.74
2  2         Java 13.48  -3.18
3  3       Python 10.47   0.59
4  4          C++  7.11   1.48
5  5           C#  4.58   1.18
6  6 Visual Basic  4.12   0.83
7  7   JavaScript  2.54   0.41
8  8          PHP  2.49   0.62
9  9            R  2.37   1.33
</pre>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)
&nbsp;
print(languages)
</pre>

<pre>
  id         name usage change
1  1            C 15.95   0.74
2  2         Java 13.48  -3.18
3  3       Python 10.47   0.59
4  4          C++  7.11   1.48
5  5           C#  4.58   1.18
6  6 Visual Basic  4.12   0.83
7  7   JavaScript  2.54   0.41
8  8          PHP  2.49   0.62
9  9            R  2.37   1.33
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<pre>
languages &lt;- data.frame(
   id = c(1:20),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83)
)
&nbsp;
print(languages)
</pre>

<pre>
Error in data.frame(id = c(1:20), name = c("C", "Java", "Python", "C++",  : 
  arguments imply differing number of rows: 20, 9, 7, 6
Execution halted
</pre>

<pre>
ids = c(1:9)
names = c("C", "Java", "Python", "C++", "C#", "Visual Basic", NA, "PHP", "R")
usages = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, NA, 2.49, 2.37)
changes = c(0.74, NA, 0.59, 1.48, 1.18, 0.83, 0.41, NA, 1.33)
&nbsp;
languages &lt;- data.frame(
   id = ids,
   name = names,
   usage = usages,
   change = changes
)
&nbsp;
print(languages)
</pre>

<pre>
  id         name usage change
1  1            C 15.95   0.74
2  2         Java 13.48     NA
3  3       Python 10.47   0.59
4  4          C++  7.11   1.48
5  5           C#  4.58   1.18
6  6 Visual Basic  4.12   0.83
7  7         <NA>    NA   0.41
8  8          PHP  2.49     NA
9  9            R  2.37   1.33
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)
&nbsp;
print(names(languages))
</pre>

<pre>
[1] "id"     "name"   "usage"  "change"
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)
&nbsp;
print(colnames(languages))
</pre>

<pre>
[1] "id"     "name"   "usage"  "change"
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)
&nbsp;
print(rownames(languages))
</pre>

<pre>
[1] "1" "2" "3" "4" "5" "6" "7" "8" "9"
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)
&nbsp;
print(languages)
&nbsp;
colnames(languages) &lt;- c("ID", "Language", "Usage 2020", "Change")

print("---------------------------------------")

print(languages)
</pre>

<pre>
  id         name usage change
1  1            C 15.95   0.74
2  2         Java 13.48  -3.18
3  3       Python 10.47   0.59
4  4          C++  7.11   1.48
5  5           C#  4.58   1.18
6  6 Visual Basic  4.12   0.83
7  7   JavaScript  2.54   0.41
8  8          PHP  2.49   0.62
9  9            R  2.37   1.33
[1] "---------------------------------------"
  ID     Language Usage 2020 Change
1  1            C      15.95   0.74
2  2         Java      13.48  -3.18
3  3       Python      10.47   0.59
4  4          C++       7.11   1.48
5  5           C#       4.58   1.18
6  6 Visual Basic       4.12   0.83
7  7   JavaScript       2.54   0.41
8  8          PHP       2.49   0.62
9  9            R       2.37   1.33
</pre>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)

print(languages)

rownames(languages) &lt;- seq(9,1)

print("---------------------------------------")

print(languages)
</pre>

<pre>
  id         name usage change
1  1            C 15.95   0.74
2  2         Java 13.48  -3.18
3  3       Python 10.47   0.59
4  4          C++  7.11   1.48
5  5           C#  4.58   1.18
6  6 Visual Basic  4.12   0.83
7  7   JavaScript  2.54   0.41
8  8          PHP  2.49   0.62
9  9            R  2.37   1.33
[1] "---------------------------------------"
  id         name usage change
9  1            C 15.95   0.74
8  2         Java 13.48  -3.18
7  3       Python 10.47   0.59
6  4          C++  7.11   1.48
5  5           C#  4.58   1.18
4  6 Visual Basic  4.12   0.83
3  7   JavaScript  2.54   0.41
2  8          PHP  2.49   0.62
1  9            R  2.37   1.33
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)

print(head(languages, 5))
</pre>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)

print(head(languages, 5))
</pre>

<pre>
languages &lt;- data.frame(
   id = c(1:9),
   name = c("C", "Java", "Python", "C++", "C#", "Visual Basic", "JavaScript", "PHP", "R"),
   usage = c(15.95, 13.48, 10.47, 7.11, 4.58, 4.12, 2.54, 2.49, 2.37),
   change = c(0.74, -3.18, 0.59, 1.48, 1.18, 0.83, 0.41, 0.62, 1.33)
)

print(tail(languages, 5))
</pre>

<pre>
  id         name usage change
5  5           C#  4.58   1.18
6  6 Visual Basic  4.12   0.83
7  7   JavaScript  2.54   0.41
8  8          PHP  2.49   0.62
9  9            R  2.37   1.33
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
nového Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/r-examples">https://github.com/tisnik/r-examples</a>
V&nbsp;případě, že z&nbsp;nějakého důvodu nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
stále jen jednotky kilobajtů), můžete namísto toho použít odkazy na jednotlivé
demonstrační příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td>1</td><td>01-list-constructor.R</td><td>vytvoření seznamu s&nbsp;vektory celých čísel</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/01-list-constructor.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/01-list-constructor.R</a></td></tr>
<tr><td>2</td><td>02-list-constructor.R</td><td>vytvoření seznamu s&nbsp;řetězci</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/02-list-constructor.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/02-list-constructor.R</a></td></tr>
<tr><td>3</td><td>03-list-constructor.R</td><td>vytvoření seznamu s&nbsp;pojmenovanými prvky</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/03-list-constructor.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/03-list-constructor.R</a></td></tr>
<tr><td>4</td><td>04-indexing.R</td><td>získání podseznamu ze seznamu</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/04-indexing.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/04-indexing.R</a></td></tr>
<tr><td>5</td><td>05-index-of-index.R</td><td>získání konkrétního prvku ze seznamu</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/05-index-of-index.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/05-index-of-index.R</a></td></tr>
<tr><td>6</td><td>06-select-by-name-R</td><td>přístup k&nbsp;prvkům seznamu s&nbsp;využitím jejich jména</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/06-select-by-name-R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/06-select-by-name-R</a></td></tr>
<tr><td>7</td><td>07-select-by-name-and-index.R</td><td>přístup k&nbsp;prvkům seznamu s&nbsp;využitím jejich jména, opakované indexování</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/07-select-by-name-and-index.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/07-select-by-name-and-index.R</a></td></tr>
<tr><td>8</td><td>08-indexing-problems.R</td><td>možné problémy při indexování prvků v&nbsp;seznamu</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/08-indexing-problems.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/08-indexing-problems.R</a></td></tr>
<tr><td>9</td><td>09-concatenate.R</td><td>spojení dvou seznamů</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/09-concatenate.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/09-concatenate.R</a></td></tr>
<tr><td>10</td><td>10-list-modify.R</td><td>modifikace prvků seznamu</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/10-list-modify.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/10-list-modify.R</a></td></tr>
<tr><td>11</td><td>11-from-seq.R</td><td>vytvoření jednoprvkového seznamu ze sekvence</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/11-from-seq.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/11-from-seq.R</a></td></tr>
<tr><td>12</td><td>12-from-seq.R</td><td>vytvoření víceprvkového seznamu ze sekvence</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/12-from-seq.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/12-from-seq.R</a></td></tr>
<tr><td>13</td><td>13-from-vector.R</td><td>vytvoření jednoprvkového seznamu z&nbsp;vektoru</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/13-from-vector.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/13-from-vector.R</a></td></tr>
<tr><td>14</td><td>14-from-vector.R</td><td>vytvoření víceprvkového seznamu z&nbsp;vektoru</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/14-from-vector.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/14-from-vector.R</a></td></tr>
<tr><td>15</td><td>15-from-1D-array.R</td><td>vytvoření jednoprvkového seznamu z&nbsp;1D pole</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/15-from-1D-array.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/15-from-1D-array.R</a></td></tr>
<tr><td>16</td><td>16-from-1D-array.R</td><td>vytvoření víceprvkového seznamu z&nbsp;1D pole</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/16-from-1D-array.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/16-from-1D-array.R</a></td></tr>
<tr><td>17</td><td>17-from-2D-array.R</td><td>vytvoření jednoprvkového seznamu z&nbsp;2D pole</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/17-from-2D-array.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/17-from-2D-array.R</a></td></tr>
<tr><td>18</td><td>18-from-2D-array.R</td><td>vytvoření víceprvkového seznamu z&nbsp;2D pole</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/18-from-2D-array.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/18-from-2D-array.R</a></td></tr>
<tr><td>19</td><td>19-from-matrix.R</td><td>vytvoření jednoprvkového seznamu z&nbsp;matice</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/19-from-matrix.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/19-from-matrix.R</a></td></tr>
<tr><td>20</td><td>20-from-matrix.R</td><td>vytvoření víceprvkového seznamu z&nbsp;matice</td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/20-from-matrix.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/20-from-matrix.R</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>21-data-frame-constructor.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/21-data-frame-constructor.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/21-data-frame-constructor.R</a></td></tr>
<tr><td>22</td><td>22-data-frame-constructor.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/22-data-frame-constructor.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/22-data-frame-constructor.R</a></td></tr>
<tr><td>23</td><td>23-data-frame-constructor-diff-length.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/23-data-frame-constructor-diff-length.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/23-data-frame-constructor-diff-length.R</a></td></tr>
<tr><td>24</td><td>24-data-frame-constructor-NA.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/24-data-frame-constructor-NA.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/24-data-frame-constructor-NA.R</a></td></tr>
<tr><td>25</td><td>25-data-frame-names.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/25-data-frame-names.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/25-data-frame-names.R</a></td></tr>
<tr><td>26</td><td>26-data-frame-colnames.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/26-data-frame-colnames.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/26-data-frame-colnames.R</a></td></tr>
<tr><td>27</td><td>27-data-frame-rownames.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/27-data-frame-rownames.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/27-data-frame-rownames.R</a></td></tr>
<tr><td>28</td><td>28-data-frame-set-colnames.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/28-data-frame-set-colnames.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/28-data-frame-set-colnames.R</a></td></tr>
<tr><td>29</td><td>29-data-frame-set-rownames.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/29-data-frame-set-rownames.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/29-data-frame-set-rownames.R</a></td></tr>
<tr><td>30</td><td>30-data-frame-head.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/30-data-frame-head.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/30-data-frame-head.R</a></td></tr>
<tr><td>31</td><td>31-data-frame-tail.R</td><td></td><td><a href="https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/31-data-frame-tail.R">https://github.com/tisnik/r-examples/blob/master/05-lists-and-data-frames/31-data-frame-tail.R</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The R Project for Statistical Computing<br />
<a href="https://www.r-project.org/">https://www.r-project.org/</a>
</li>

<li>An Introduction to R<br />
<a href="https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf">https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf</a>
</li>

<li>R (programming language)<br />
<a href="https://en.wikipedia.org/wiki/R_(programming_language)">https://en.wikipedia.org/wiki/R_(programming_language)</a>
</li>

<li>The R Programming Language<br />
<a href="https://www.tiobe.com/tiobe-index/r/">https://www.tiobe.com/tiobe-index/r/</a>
</li>

<li>R Markdown<br />
<a href="https://rmarkdown.rstudio.com/">https://rmarkdown.rstudio.com/</a>
</li>

<li>R Markdown: The Definitive Guide<br />
<a href="https://bookdown.org/yihui/rmarkdown/">https://bookdown.org/yihui/rmarkdown/</a>
</li>

<li>R Markdown Cheat Sheet<br />
<a href="https://rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf">https://rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf</a>
</li>

<li>Introduction to R Markdown<br />
<a href="https://rmarkdown.rstudio.com/articles_intro.html">https://rmarkdown.rstudio.com/articles_intro.html</a>
</li>

<li>R Cheat Sheets<br />
<a href="https://blog.sergiouri.be/2016/07/r-cheat-sheets.html">https://blog.sergiouri.be/2016/07/r-cheat-sheets.html</a>
</li>

<li>R Cheat Sheet<br />
<a href="https://s3.amazonaws.com/quandl-static-content/Documents/Quandl+-+R+Cheat+Sheet.pdf">https://s3.amazonaws.com/quandl-static-content/Documents/Quandl+-+R+Cheat+Sheet.pdf</a>
</li>

<li>Base R Cheat Sheet<br />
<a href="https://rstudio.com/wp-content/uploads/2016/06/r-cheat-sheet.pdf">https://rstudio.com/wp-content/uploads/2016/06/r-cheat-sheet.pdf</a>
</li>

<li>PYPL PopularitY of Programming Language<br />
<a href="https://pypl.github.io/PYPL.html">https://pypl.github.io/PYPL.html</a>
</li>

<li>Tiobe index<br />
<a href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a>
</li>

<li>Stack Overflow: Most Loved, Dreaded &amp; Wanted Programming Languages In 2020<br />
<a href="https://fossbytes.com/stack-overflow-most-loved-dreaded-wanted-programming-languages-in-2020/">https://fossbytes.com/stack-overflow-most-loved-dreaded-wanted-programming-languages-in-2020/</a>
</li>

<li>How to Install and Use R on Ubuntu<br />
<a href="https://itsfoss.com/install-r-ubuntu/">https://itsfoss.com/install-r-ubuntu/</a>
</li>

<li>R programming for beginners - Why you should use R<br />
<a href="https://www.youtube.com/watch?v=9kYUGMg_14s">https://www.youtube.com/watch?v=9kYUGMg_14s</a>
</li>

<li>GOTO 2012 • The R Language The Good The Bad &amp; The Ugly<br />
<a href="https://www.youtube.com/watch?v=6S9r_YbqHy8">https://www.youtube.com/watch?v=6S9r_YbqHy8</a>
</li>

<li>R vs Python - What should I learn in 2020? | R and Python Comparison<br />
<a href="https://www.youtube.com/watch?v=eRP_J2yLjSU">https://www.youtube.com/watch?v=eRP_J2yLjSU</a>
</li>

<li>R Programming 101<br />
<a href="https://www.youtube.com/c/rprogramming101">https://www.youtube.com/c/rprogramming101</a>
</li>

<li>Seriál Tvorba grafů pomocí programu "R"<br />
<a href="https://www.root.cz/serialy/tvorba-grafu-pomoci-programu-r/">https://www.root.cz/serialy/tvorba-grafu-pomoci-programu-r/</a>
</li>

<li>Tvorba grafů pomocí programu "R": úvod<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-1/">https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-1/</a>
</li>

<li>Tvorba grafů pomocí programu "R": pokročilé funkce<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-pokrocile-funkce/">https://www.root.cz/clanky/tvorba-grafu-pomoci-programu-r-pokrocile-funkce/</a>
</li>

<li>Tvorba grafů pomocí programu "R": vkládání textu, čeština<br />
<a href="https://www.root.cz/clanky/grafy-pomoci-programu-r-vkladani-textu-cestina/">https://www.root.cz/clanky/grafy-pomoci-programu-r-vkladani-textu-cestina/</a>
</li>

<li>Cesta erka: Krok nultý &ndash; instalace &amp; nastavení – prostředí, projekty, package<br />
<a href="https://www.jla-data.net/r4su/r4su-environment-setup/">https://www.jla-data.net/r4su/r4su-environment-setup/</a>
</li>

<li>Cesta erka: Krok první &ndash; operace a struktury – proměnné, rovnítka a dolary<br />
<a href="https://www.jla-data.net/r4su/r4su-data-structures/">https://www.jla-data.net/r4su/r4su-data-structures/</a>
</li>

<li>Cesta erka: Krok druhý &ndash; načtení externích dat – csvčka, excely a databáze<br />
<a href="https://www.jla-data.net/r4su/r4su-read-data/">https://www.jla-data.net/r4su/r4su-read-data/</a>
</li>

<li>Cesta erka: Krok třetí &ndash; manipulace s daty – dplyr, slovesa a pajpy<br />
<a href="https://www.jla-data.net/r4su/r4su-manipulate-data/">https://www.jla-data.net/r4su/r4su-manipulate-data/</a>
</li>

<li>Cesta erka: Krok čtvrtý &ndash; podání výsledků – ggplot, geomy a estetiky<br />
<a href="https://www.jla-data.net/r4su/r4su-report-results/">https://www.jla-data.net/r4su/r4su-report-results/</a>
</li>

<li>Cesta erka: Krok pátý &ndash; case study – případ piva v Praze<br />
<a href="https://www.jla-data.net/r4su/r4su-case-study-beer/">https://www.jla-data.net/r4su/r4su-case-study-beer/</a>
</li>

<li>V indexu popularity programovacích jazyků TIOBE překvapilo R, Go, Perl, Scratch a Rust<br />
<a href="https://www.root.cz/zpravicky/v-indexu-popularity-programovacich-jazyku-tiobe-prekvapilo-r-go-perl-scratch-a-rust/">https://www.root.cz/zpravicky/v-indexu-popularity-programovacich-jazyku-tiobe-prekvapilo-r-go-perl-scratch-a-rust/</a>
</li>

<li>Is R Programming SURGING in Popularity in 2020?<br />
<a href="https://www.youtube.com/watch?v=Duwn-vImyXE">https://www.youtube.com/watch?v=Duwn-vImyXE</a>
</li>

<li>Using the R programming language in Jupyter Notebook<br />
<a href="https://docs.anaconda.com/anaconda/navigator/tutorials/r-lang/">https://docs.anaconda.com/anaconda/navigator/tutorials/r-lang/</a>
</li>

<li>Using R on Jupyter Notebook<br />
<a href="https://dzone.com/articles/using-r-on-jupyternbspnotebook">https://dzone.com/articles/using-r-on-jupyternbspnotebook</a>
</li>

<li>Graphics, ggplot2<br />
<a href="http://r4stats.com/examples/graphics-ggplot2/">http://r4stats.com/examples/graphics-ggplot2/</a>
</li>

<li>A Practice Data Set<br />
<a href="https://r4stats.wordpress.com/examples/mydata/">https://r4stats.wordpress.com/examples/mydata/</a>
</li>

<li>Shiny &ndash; galerie projektů<br />
<a href="https://shiny.rstudio.com/gallery/">https://shiny.rstudio.com/gallery/</a>
</li>

<li>Seriál Programovací jazyk Julia<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-julia/">https://www.root.cz/serialy/programovaci-jazyk-julia/</a>
</li>

<li>Julia (front page)<br />
<a href="http://julialang.org/">http://julialang.org/</a>
</li>

<li>Julia &ndash; repositář na GitHubu<br />
<a href="https://github.com/JuliaLang/julia">https://github.com/JuliaLang/julia</a>
</li>

<li>Julia (programming language)<br />
<a href="https://en.wikipedia.org/wiki/Julia_%28programming_language%29">https://en.wikipedia.org/wiki/Julia_%28programming_language%29</a>
</li>

<li>IJulia<br />
<a href="https://github.com/JuliaLang/IJulia.jl">https://github.com/JuliaLang/IJulia.jl</a>
</li>

<li>Introducing Julia<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia">https://en.wikibooks.org/wiki/Introducing_Julia</a>
</li>

<li>Julia: the REPL<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/The_REPL">https://en.wikibooks.org/wiki/Introducing_Julia/The_REPL</a>
</li>

<li>Introducing Julia/Metaprogramming<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/Metaprogramming">https://en.wikibooks.org/wiki/Introducing_Julia/Metaprogramming</a>
</li>

<li>Month of Julia<br />
<a href="https://github.com/DataWookie/MonthOfJulia">https://github.com/DataWookie/MonthOfJulia</a>
</li>

<li>Learn X in Y minutes (where X=Julia)<br />
<a href="https://learnxinyminutes.com/docs/julia/">https://learnxinyminutes.com/docs/julia/</a>
</li>

<li>New Julia language seeks to be the C for scientists<br />
<a href="http://www.infoworld.com/article/2616709/application-development/new-julia-language-seeks-to-be-the-c-for-scientists.html">http://www.infoworld.com/article/2616709/application-development/new-julia-language-seeks-to-be-the-c-for-scientists.html</a>
</li>

<li>Julia: A Fast Dynamic Language for Technical Computing<br />
<a href="http://karpinski.org/publications/2012/julia-a-fast-dynamic-language">http://karpinski.org/publications/2012/julia-a-fast-dynamic-language</a>
</li>

<li>The LLVM Compiler Infrastructure<br />
<a href="http://llvm.org/">http://llvm.org/</a>
</li>

<li>Julia: benchmarks<br />
<a href="http://julialang.org/benchmarks/">http://julialang.org/benchmarks/</a>
</li>

<li>R Vector<br />
<a href="https://www.datamentor.io/r-programming/vector/">https://www.datamentor.io/r-programming/vector/</a>
</li>

<li>.R File Extension<br />
<a href="https://fileinfo.com/extension/r">https://fileinfo.com/extension/r</a>
</li>

<li>Lineární regrese<br />
<a href="https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese">https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese</a>
</li>

<li>lm (funkce)<br />
<a href="https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/lm">https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/lm</a>
</li>

<li>quit (funkce)<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quit">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/quit</a>
</li>

<li>c (funkce)<br />
<a href="https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/c">https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/c</a>
</li>

<li>help (funkce)<br />
<a href="https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/help">https://www.rdocumentation.org/packages/utils/versions/3.6.2/topics/help</a>
</li>

<li>Shiny: Introduction to interactive documents<br />
<a href="https://shiny.rstudio.com/articles/interactive-docs.html">https://shiny.rstudio.com/articles/interactive-docs.html</a>
</li>

<li>R Release History 1997-2013<br />
<a href="http://timelyportfolio.github.io/rCharts_timeline_r/">http://timelyportfolio.github.io/rCharts_timeline_r/</a>
</li>

<li>R: atomic vectors<br />
<a href="https://renenyffenegger.ch/notes/development/languages/R/data-structures/vector/">https://renenyffenegger.ch/notes/development/languages/R/data-structures/vector/</a>
</li>

<li>11 Best R Programming IDE and editors<br />
<a href="https://www.dunebook.com/best-r-programming-ide/">https://www.dunebook.com/best-r-programming-ide/</a>
</li>

<li>CRAN - The Comprehensive R Archive Network<br />
<a href="https://cran.r-project.org/">https://cran.r-project.org/</a>
</li>

<li>R - Arrays<br />
<a href="https://www.tutorialspoint.com/r/r_arrays.htm">https://www.tutorialspoint.com/r/r_arrays.htm</a>
</li>

<li>Array vs Matrix in R Programming<br />
<a href="https://www.geeksforgeeks.org/array-vs-matrix-in-r-programming/?ref=rp">https://www.geeksforgeeks.org/array-vs-matrix-in-r-programming/?ref=rp</a>
</li>

<li>Online R Language IDE<br />
<a href="https://www.jdoodle.com/execute-r-online/">https://www.jdoodle.com/execute-r-online/</a>
</li>

<li>Execute R Online (R v3.4.1)<br />
<a href="https://www.tutorialspoint.com/execute_r_online.php">https://www.tutorialspoint.com/execute_r_online.php</a>
</li>

<li>Snippets: Run any R code you like. There are over twelve thousand R packages preloaded<br />
<a href="https://rdrr.io/snippets/">https://rdrr.io/snippets/</a>
</li>

<li>R Package Documentation<br />
<a href="https://rdrr.io/">https://rdrr.io/</a>
</li>

<li>Data Reshaping in R – Popular Functions to Organise Data<br />
<a href="https://techvidvan.com/tutorials/data-reshaping-in-r/">https://techvidvan.com/tutorials/data-reshaping-in-r/</a>
</li>

<li>What is an R Data Frame?<br />
<a href="https://magoosh.com/data-science/what-is-an-r-data-frame/">https://magoosh.com/data-science/what-is-an-r-data-frame/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

