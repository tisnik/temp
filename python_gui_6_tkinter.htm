<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (canvasem)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (canvasem)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Dokončení předchozího tématu: další možnosti menu</a></p>
<p><a href="#k02">*** 2. Zaškrtávací tlačítka v&nbsp;menu</a></p>
<p><a href="#k03">*** 3. Výběrová tlačítka v&nbsp;menu</a></p>
<p><a href="#k04">*** 4. Klávesové akcelerátory v&nbsp;menu</a></p>
<p><a href="#k05">*** 5. Grafické uživatelské rozhraní v&nbsp;Pythonu: kouzla s&nbsp;kreslicí plochou (canvasem)</a></p>
<p><a href="#k06">*** 6. Dvě úrovně práce (manipulace) s&nbsp;grafickými informacemi</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Dokončení předchozího tématu: další možnosti menu</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Zaškrtávací tlačítka v&nbsp;menu</h2>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
&nbsp;
&nbsp;
def test():
    print("Test!")
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
menubar = tkinter.Menu(root)
&nbsp;
image_names = [
    "document-open",
    "document-save",
    "application-exit",
    "edit-undo",
    "edit-cut",
    "edit-copy",
    "edit-paste",
    "edit-delete",
    "edit-select-all"]
&nbsp;
images = {}
for image_name in image_names:
    images[image_name] = tkinter.PhotoImage(file="icons/%s.gif" % image_name)
&nbsp;
filemenu = tkinter.Menu(menubar, tearoff=0)
&nbsp;
filemenu.add_command(label="Open", underline=0, image=images["document-open"],
                     compound="left")
&nbsp;
filemenu.add_command(label="Save", underline=0, image=images["document-save"],
                     compound="left")
&nbsp;
filemenu.add_separator()
&nbsp;
filemenu.add_command(label="Exit", underline=1,
                     image=images["application-exit"], compound="left",
                     command=root.quit)
&nbsp;
menubar.add_cascade(label="File", menu=filemenu, underline=0)
&nbsp;
&nbsp;
editmenu = tkinter.Menu(menubar, tearoff=0)
&nbsp;
editmenu.add_command(label="Undo", underline=0, image=images["edit-undo"],
                     compound="left")
&nbsp;
editmenu.add_separator()
&nbsp;
editmenu.add_command(label="Cut", underline=2, image=images["edit-cut"],
                     compound="left")
&nbsp;
editmenu.add_command(label="Copy", underline=0, image=images["edit-copy"],
                     compound="left")
&nbsp;
editmenu.add_command(label="Paste", underline=0, image=images["edit-paste"],
                     compound="left")
&nbsp;
editmenu.add_command(label="Delete", underline=2, image=images["edit-delete"],
                     compound="left")
&nbsp;
editmenu.add_separator()
&nbsp;
editmenu.add_command(label="Select All", underline=7,
                     image=images["edit-select-all"], compound="left")
&nbsp;
menubar.add_cascade(label="Edit", menu=editmenu, underline=0)
&nbsp;
&nbsp;
word_wrap = tkinter.BooleanVar()
show_all = tkinter.BooleanVar()
show_all.set(True)
&nbsp;
optionmenu = tkinter.Menu(menubar, tearoff=0)
optionmenu.add_checkbutton(label="Word wrap", onvalue=True, offvalue=False,
                           variable=word_wrap)
optionmenu.add_checkbutton(label="Show all", onvalue=True, offvalue=False,
                           variable=show_all)
&nbsp;
menubar.add_cascade(label="Options", menu=optionmenu, underline=0)
&nbsp;
&nbsp;
colors = ("white", "yellow", "orange", "red", "magenta",
          "blue", "cyan", "green")
colormenu = tkinter.Menu(menubar, tearoff=0)
&nbsp;
for color in colors:
    colormenu.add_command(label=color, background=color)
&nbsp;
menubar.add_cascade(label="Colors", menu=colormenu, underline=0)
&nbsp;
helpmenu = tkinter.Menu(menubar, tearoff=0)
helpmenu.add_command(label="About", command=test, underline=0)
menubar.add_cascade(label="Help", menu=helpmenu, underline=0)
&nbsp;
root.config(menu=menubar)
root.geometry("320x200")
&nbsp;
root.mainloop()
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Výběrová tlačítka v&nbsp;menu</h2>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
&nbsp;
&nbsp;
def test():
    print("Test!")
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
menubar = tkinter.Menu(root)
&nbsp;
image_names = [
    "document-open",
    "document-save",
    "application-exit",
    "edit-undo",
    "edit-cut",
    "edit-copy",
    "edit-paste",
    "edit-delete",
    "edit-select-all"]
&nbsp;
images = {}
for image_name in image_names:
    images[image_name] = tkinter.PhotoImage(file="icons/%s.gif" % image_name)
&nbsp;
filemenu = tkinter.Menu(menubar, tearoff=0)
&nbsp;
filemenu.add_command(label="Open", underline=0, image=images["document-open"],
                     compound="left")
&nbsp;
filemenu.add_command(label="Save", underline=0, image=images["document-save"],
                     compound="left")
&nbsp;
filemenu.add_separator()
&nbsp;
filemenu.add_command(label="Exit", underline=1,
                     image=images["application-exit"], compound="left",
                     command=root.quit)
&nbsp;
menubar.add_cascade(label="File", menu=filemenu, underline=0)
&nbsp;
&nbsp;
editmenu = tkinter.Menu(menubar, tearoff=0)
&nbsp;
editmenu.add_command(label="Undo", underline=0, image=images["edit-undo"],
                     compound="left")
&nbsp;
editmenu.add_separator()
&nbsp;
editmenu.add_command(label="Cut", underline=2, image=images["edit-cut"],
                     compound="left")
&nbsp;
editmenu.add_command(label="Copy", underline=0, image=images["edit-copy"],
                     compound="left")
&nbsp;
editmenu.add_command(label="Paste", underline=0, image=images["edit-paste"],
                     compound="left")
&nbsp;
editmenu.add_command(label="Delete", underline=2, image=images["edit-delete"],
                     compound="left")
&nbsp;
editmenu.add_separator()
&nbsp;
editmenu.add_command(label="Select All", underline=7,
                     image=images["edit-select-all"], compound="left")
&nbsp;
menubar.add_cascade(label="Edit", menu=editmenu, underline=0)
&nbsp;
&nbsp;
word_wrap = tkinter.BooleanVar()
show_all = tkinter.BooleanVar()
show_all.set(True)
&nbsp;
optionmenu = tkinter.Menu(menubar, tearoff=0)
optionmenu.add_checkbutton(label="Word wrap", onvalue=True, offvalue=False,
                           variable=word_wrap)
optionmenu.add_checkbutton(label="Show all", onvalue=True, offvalue=False,
                           variable=show_all)
&nbsp;
menubar.add_cascade(label="Options", menu=optionmenu, underline=0)
&nbsp;
&nbsp;
colors = ("white", "yellow", "orange", "red", "magenta",
          "blue", "cyan", "green")
colormenu = tkinter.Menu(menubar, tearoff=0)
&nbsp;
for color in colors:
    colormenu.add_radiobutton(label=color, background=color)
&nbsp;
menubar.add_cascade(label="Colors", menu=colormenu, underline=0)
&nbsp;
helpmenu = tkinter.Menu(menubar, tearoff=0)
helpmenu.add_command(label="About", command=test, underline=0)
menubar.add_cascade(label="Help", menu=helpmenu, underline=0)
&nbsp;
root.config(menu=menubar)
root.geometry("320x200")
&nbsp;
root.mainloop()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Klávesové akcelerátory v&nbsp;menu</h2>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
menubar = tkinter.Menu(root)
&nbsp;
filemenu = tkinter.Menu(menubar, tearoff=0)
filemenu.add_command(label="Open", underline=0, accelerator="Ctrl+O",
                     command=lambda: print("Open"))
filemenu.add_command(label="Save", underline=0, accelerator="Ctrl+S",
                     command=lambda: print("Save"))
filemenu.add_separator()
filemenu.add_command(label="Exit", underline=1, accelerator="Ctrl+Q",
                     command=root.quit)
menubar.add_cascade(label="File", menu=filemenu, underline=0)
&nbsp;
editmenu = tkinter.Menu(menubar, tearoff=0)
editmenu.add_command(label="Undo", underline=0, accelerator="Ctrl+U",
                     command=lambda: print("Undo"))
editmenu.add_separator()
editmenu.add_command(label="Cut", underline=2, accelerator="Ctrl+X",
                     command=lambda: print("Cut"))
editmenu.add_command(label="Copy", underline=0, accelerator="Ctrl+C",
                     command=lambda: print("Copy"))
editmenu.add_command(label="Paste", underline=0, accelerator="Ctrl+V",
                     command=lambda: print("Paste"))
editmenu.add_command(label="Delete", underline=2,
                     command=lambda: print("Delete"))
editmenu.add_separator()
editmenu.add_command(label="Select All", underline=7, accelerator="Ctrl+A",
                     command=lambda: print("Select All"))
menubar.add_cascade(label="Edit", menu=editmenu, underline=0)
&nbsp;
helpmenu = tkinter.Menu(menubar, tearoff=0)
helpmenu.add_command(label="About", underline=0, accelerator="F1",
                     command=lambda: print("About"))
menubar.add_cascade(label="Help", menu=helpmenu, underline=0)
&nbsp;
root.config(menu=menubar)
&nbsp;
root.mainloop()
</pre>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
&nbsp;
&nbsp;
def cmd_open():
    print("Open")
&nbsp;
&nbsp;
def cmd_save():
    print("Save")
&nbsp;
&nbsp;
def cmd_undo():
    print("Undo")
&nbsp;
&nbsp;
def cmd_help():
    print("Help")
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
menubar = tkinter.Menu(root)
&nbsp;
filemenu = tkinter.Menu(menubar, tearoff=0)
filemenu.add_command(label="Open", underline=0, accelerator="Ctrl+O",
                     command=cmd_open)
filemenu.add_command(label="Save", underline=0, accelerator="Ctrl+S",
                     command=cmd_save)
filemenu.add_separator()
filemenu.add_command(label="Exit", underline=1, accelerator="Ctrl+Q",
                     command=root.quit)
menubar.add_cascade(label="File", menu=filemenu, underline=0)
&nbsp;
editmenu = tkinter.Menu(menubar, tearoff=0)
editmenu.add_command(label="Undo", underline=0, accelerator="Ctrl+U",
                     command=cmd_undo)
editmenu.add_separator()
editmenu.add_command(label="Cut", underline=2, accelerator="Ctrl+X",
                     command=lambda: print("Cut"))
editmenu.add_command(label="Copy", underline=0, accelerator="Ctrl+C",
                     command=lambda: print("Copy"))
editmenu.add_command(label="Paste", underline=0, accelerator="Ctrl+V",
                     command=lambda: print("Paste"))
editmenu.add_command(label="Delete", underline=2,
                     command=lambda: print("Delete"))
editmenu.add_separator()
editmenu.add_command(label="Select All", underline=7, accelerator="Ctrl+A",
                     command=lambda: print("Select All"))
menubar.add_cascade(label="Edit", menu=editmenu, underline=0)
&nbsp;
helpmenu = tkinter.Menu(menubar, tearoff=0)
helpmenu.add_command(label="About", underline=0, accelerator="F1",
                     command=cmd_help)
menubar.add_cascade(label="Help", menu=helpmenu, underline=0)
&nbsp;
root.config(menu=menubar)
&nbsp;
root.bind('<Control-o>', lambda event: cmd_open())
root.bind('<Control-s>', lambda event: cmd_save())
root.bind('<Control-u>', lambda event: cmd_undo())
root.bind('<F1>', lambda event: cmd_help())
&nbsp;
root.mainloop()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Grafické uživatelské rozhraní v&nbsp;Pythonu: kouzla s&nbsp;kreslicí plochou (canvasem)</h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Repositář s&nbsp;demonstračními příklady</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Odkazy na Internetu</h2>

<ol>

<li>The Tkinter Canvas Widget<br />
<a href="http://effbot.org/tkinterbook/canvas.htm">http://effbot.org/tkinterbook/canvas.htm</a>
</li>

<li>Ovládací prvek (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29">https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29</a>
</li>

<li>Rezervovaná klíčová slova v&nbsp;Pythonu<br />
<a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords">https://docs.python.org/3/reference/lexical_analysis.html#keywords</a>
</li>

<li>TkDocs: Styles and Themes<br />
<a href="http://www.tkdocs.com/tutorial/styles.html">http://www.tkdocs.com/tutorial/styles.html</a>
</li>

<li>Drawing in Tkinter<br />
<a href="http://zetcode.com/gui/tkinter/drawing/">http://zetcode.com/gui/tkinter/drawing/</a>
</li>

<li>Changing ttk widget text color (StackOverflow)<br />
<a href="https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color">https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color</a>
</li>

<li>Hra Breakout napísaná v Tkinteri<br />
<a href="https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/">https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/</a>
</li>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>appJar<br />
<a href="http://appjar.info/">http://appjar.info/</a>
</li>

<li>appJar (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/AppJar">https://en.wikipedia.org/wiki/AppJar</a>
</li>

<li>appJar na Pythonhosted<br />
<a href="http://pythonhosted.org/appJar/">http://pythonhosted.org/appJar/</a>
</li>

<li>Stránky projektu PyGTK<br />
<a href="http://www.pygtk.org/">http://www.pygtk.org/</a>
</li>

<li>PyGTK (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PyGObject<br />
<a href="https://wiki.gnome.org/Projects/PyGObject">https://wiki.gnome.org/Projects/PyGObject</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Stránky projektu PyQt<br />
<a href="https://riverbankcomputing.com/software/pyqt/intro">https://riverbankcomputing.com/software/pyqt/intro</a>
</li>

<li>PyQt (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PySide<br />
<a href="https://wiki.qt.io/PySide">https://wiki.qt.io/PySide</a>
</li>

<li>PySide (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PySide">https://en.wikipedia.org/wiki/PySide</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>

<li>Kivy (framework, Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Kivy_(framework)">https://en.wikipedia.org/wiki/Kivy_(framework)</a>

<li>QML Applications<br />
<a href="http://doc.qt.io/qt-5/qmlapplications.html">http://doc.qt.io/qt-5/qmlapplications.html</a>
</li>

<li>KDE<br />
<a href="https://www.kde.org/">https://www.kde.org/</a>
</li>

<li>Qt<br />
<a href="https://www.qt.io/">https://www.qt.io/</a>
</li>

<li>GNOME<br />
<a href="https://en.wikipedia.org/wiki/GNOME">https://en.wikipedia.org/wiki/GNOME</a>
</li>

<li>Category:Software that uses PyGTK<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK</a>
</li>

<li>Category:Software that uses PyGObject<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject</a>
</li>

<li>Category:Software that uses wxWidgets<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets">https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets</a>
</li>

<li>GIO<br />
<a href="https://developer.gnome.org/gio/stable/">https://developer.gnome.org/gio/stable/</a>
</li>

<li>GStreamer<br />
<a href="https://gstreamer.freedesktop.org/">https://gstreamer.freedesktop.org/</a>
</li>

<li>GStreamer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GStreamer">https://en.wikipedia.org/wiki/GStreamer</a>
</li>

<li>Wax Gui Toolkit<br />
<a href="https://wiki.python.org/moin/Wax">https://wiki.python.org/moin/Wax</a>
</li>

<li>Python Imaging Library (PIL)<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/pil/">http://infohost.nmt.edu/tcc/help/pubs/pil/</a>
</li>

<li>Why Pyjamas Isn’t a Good Framework for Web Apps (blogpost z&nbsp;roku 2012)<br />
<a href="http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/">http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

