<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Praktické ukázky možností aplikace Mandelbulber při tvorbě 3D fraktálů</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Praktické ukázky možností aplikace Mandelbulber při tvorbě 3D fraktálů</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve druhém článku o aplikaci Mandelbulber si ukážeme některé další možnosti tohoto pravděpodobně nejpropracovanějšího nástroje určeného pro vykreslování trojrozměrných fraktálů i jejich animací.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Praktické ukázky možností aplikace Mandelbulber při tvorbě 3D fraktálů</a></p>
<p><a href="#k02">2. Algoritmy použité při vykreslování trojrozměrných scén s&nbsp;fraktály a multifraktály</a></p>
<p><a href="#k03">3. Integrace podél paprsku</a></p>
<p><a href="#k04">4. Raytracing či raycasting</a></p>
<p><a href="#k05">5. Fraktály bez spojitého povrchu versus klasický raytracing?</a></p>
<p><a href="#k06">6. Distance estimation a algoritmus ray matchingu</a></p>
<p><a href="#k07">*** 7. Nastavení kamery při konfiguraci trojrozměrné scény</a></p>
<p><a href="#k08">*** 8. Vliv parametru &bdquo;smoothness&ldquo; na tvar vykreslovaného fraktálu</a></p>
<p><a href="#k09">*** 9. Změna tvaru fraktálu při změně počtu iterací (IFS apod.)</a></p>
<p><a href="#k10">*** 10. Editor materiálů</a></p>
<p><a href="#k11">*** 11. Tvorba animací</a></p>
<p><a href="#k12">*** 12. Ukázka animací, které vznikly ve &bdquo;flight&ldquo; režimu</a></p>
<p><a href="#k13">*** 13. Animace založená na klíčových snímcích (<strong>keyframes</strong>)</a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. Vykreslení fraktálu typu Mandelbox v&nbsp;rovině (vylepšený příklad)</a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">*** 19. Literatura</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Praktické ukázky možností aplikace Mandelbulber při tvorbě 3D fraktálů</h2>

<p>Na <a
href="https://www.root.cz/clanky/vykreslovani-a-animace-trojrozmernych-fraktalu-v-aplikaci-mandelbulber/">úvodní
článek o aplikaci Mandelbulber</a> navážeme článkem dnešním, v&nbsp;němž si
popíšeme některé praktické způsoby použití této aplikace, a to jak při
renderingu statických obrázků s&nbsp;trojrozměrnými fraktály, tak i při tvorbě
jednoduchých animací, v&nbsp;nichž se mění jak pohled na fraktál, tak i
popř.&nbsp;některé jeho parametry. Na rozdíl od předchozího článku, který byl
v&nbsp;úvodní části pojat více teoreticky, se dnes zaměříme na ukázky
grafického uživatelského rozhraní Mandelbulberu i na způsob jeho použití
(zejména tvorba animací může být zpočátku poněkud matoucí).</p>

<a href="https://www.root.cz/obrazek/367278/"><img src="https://i.iinfo.cz/images/574/mandelbulb1-2-1-prev.jpg" class="image-367278" alt="&#160;" width="370" height="199" /></a>
<p><i>Obrázek 1: Základní rozložení okna s&nbsp;grafickým uživatelským
rozhraním programu Mandelbulber.</i></p>

<p>Nejprve si však vysvětlíme, jakými prostředky se vůbec trojrozměrné modely
fraktálů vykreslují, protože vlastní algoritmy vykreslování se zcela odlišují
od algoritmů, které známe z&nbsp;klasických dvourozměrných fraktálů, ať již se
jedná o fraktály vykreslované v&nbsp;komplexní rovině, L-systémy či o systémy
iterovaných funkcí (<i>IFS</i>). Problematika trojrozměrných fraktálů je
v&nbsp;tomto ohledu poměrně rozsáhlá a navíc se ještě postupně vyvíjí, neboť
vlastnosti 3D fraktálů jsou značně odlišné od běžných &bdquo;spojitých&ldquo;
trojrozměrných těles, s&nbsp;nimiž se běžně v&nbsp;počítačové grafice
setkáváme.</p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-1.jpg" class="image-367584" alt="&#160;" width="400" height="300" />
<p><i>Obrázek 2: Běžný fraktál vykreslený v&nbsp;komplexní rovině.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Algoritmy použité při vykreslování trojrozměrných scén s&nbsp;fraktály a multifraktály</h2>

<p>Při vykreslování trojrozměrných fraktálů lze použít hned několik technik,
které se od sebe liší kvalitou výsledku, rychlostí (resp.&nbsp;spíše pomalostí)
vykreslování a taktéž nabídkou či naopak absencí dalších možností, například
vytvoření řezu fraktálem, aplikací Booleovských operací na dvojici či trojici
těles atd. atd. Dnes si popíšeme zejména metodu nazvanou <i>integrace (barvy,
průhlednosti) podél paprsku</i> a samozřejmě i klasické renderovací metody
<i>raycastingu</i> a <i>raytracingu</i>. Již na tomto místě je vhodné
poznamenat, že Mandelbulber sice obě metody dokáže využít, ovšem navíc nabízí
uživatelům i velké množství dalších voleb ovlivňujících vykreslování. O
některých těchto volbách se zmíníme v&nbsp;dalším textu.</p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-2.png" class="image-367585" alt="&#160;" width="400" height="300" />
<p><i>Obrázek 3: Další fraktál vykreslený v&nbsp;komplexní rovině.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Integrace podél paprsku</h2>

<p>První důležitou a relativně často používanou metodou je metoda nazvaná
<i>integrace podél paprsku</i>. Jedná se o v&nbsp;principu vlastně velmi
jednoduše pochopitelnou metodu vycházející z&nbsp;rastrové objemové
reprezentace prostorových objektů. Tento způsob reprezentace těles vznikl
jednoduchým a přímočarým rozšířením dvourozměrných rastrových obrazů (bitmap
resp.&nbsp;pixmap) do třech rozměrů. Část trojrozměrného prostoru je rozdělena
na množství pravidelných elementárních objemových jednotek, které se nazývají
<i>voxely</i>. Termín <i>voxel</i> přitom vznikl zkrácením anglického termínu
<i>Volume Element</i>. Svou (na první pohled nelogickou) zkratkou &ndash;
písmeno <strong>X</strong> ve slovním základu &ndash; ukazuje na svou podobnost
s&nbsp;<i>pixelem</i>, což je zkratka termínu <i>Picture Element</i>. Původně
spojitý trojrozměrný prostor se tedy diskretizuje na jednotlivé mikroobjemy,
podobně jako je tomu v&nbsp;případě bitmap a pixmap u dvourozměrných obrazů,
kde je původně spojitá plocha rozdělena na dále nedělitelné plošky
(<i>pixely</i>).</p>

<p><div class="rs-tip-major">Poznámka: důležité upozornění &ndash; většina
obrázků vykreslených touto metodou není &bdquo;fotorealistická&ldquo;, což
ovšem v&nbsp;mnoha oborech vůbec nevadí, spíše naopak.</div></p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-3.jpg" class="image-367586" alt="&#160;" width="419" height="395" />
<p><i>Obrázek 4: Výsledek simulace vykreslený metodou integrace podél
paprsku.</i></p>

<p>Pro účely zde popisovaných algoritmů můžeme za voxely poněkud nepřesně
považovat osově orientované krychličky nebo kvádry, ve skutečnosti se však
jedná o pouhé navzorkované bezrozměrné body, stejně jako pixely.
V&nbsp;základní podobě, kdy potřebujeme pouze vyjádřit, zda daná část
v&nbsp;prostoru náleží či nenáleží do tělesa, mohou voxely nabývat pouze dvou
stavů &ndash; obsazeno, neobsazeno. Pro každý voxel tedy v&nbsp;tomto případě
stačí zaznamenat pouze jeden bit jehož hodnota signalizuje obsazenost či
neobsazenost voxelu tělesem. Druhá možnost spočívá v&nbsp;záznamu počtu
provedených iterací. To je právě případ zde popisované metody integrace podél
paprsku. Jak tedy můžeme tuto metodu použít? Celý postup si můžeme shrnout do
několika bodů:</p>

<ol>

<li>Nejprve je zapotřebí zvolit jednu dimenzi, která bude při vykreslování
konstantní. Typicky se za konstantu volí poslední dimenze vztažená
k&nbsp;jednotkovému vektoru <strong>k</strong>, není to však podmínkou
(v&nbsp;Mandelbulberu je možné celým tělesem otočit, takže nejsme vázáni na osy
souřadného systému).</li>

<li>Vlastní vykreslování probíhá ve čtyřech do sebe vnořených smyčkách.
V&nbsp;prvních třech vnějších smyčkách se postupně mění hodnoty čtyřrozměrné
konstanty <i>c=c<sub>x</sub>+c<sub>y</sub>i+c<sub>z</sub>j+c<sub>w</sub>k</i>.
Postačují nám pouze tři smyčky, protože čtvrtá hodnota je zvolena v&nbsp;prvním
bodu zpracování jako konstantní.</li>

<li>Nejvnitřnější smyčka vykonává vlastní iterační výpočet. Výsledkem tohoto
výpočtu je celočíselná hodnota říkající, kolik iterací bylo zapotřebí provést,
aby se dosáhlo podmínky <i>|z|&gt;bailout</i>. Pokud této podmínky nebylo
dosaženo, tj.&nbsp;došlo k&nbsp;divergenci orbitu, je výsledkem nejvnitřnější
smyčky hodnota odpovídající maximálnímu počtu iterací.</li>

<li>Hodnota vrácená z&nbsp;iterační smyčky je vložena do trojrozměrného
voxelového pole, které uchovává hustoty jednotlivých voxelů. Čím vyšší je
uložená hodnota (vyšší počet iterací), tím větší je hustota v&nbsp;okolí daného
voxelu.</li>

<li>Výsledné zobrazení scény probíhá tak, že se zvolí souřadnice pozorovatele a
promítací roviny. Posléze se od pozorovatele do scény vrhají paprsky (podobně
jako u raytracingu popsaného v&nbsp;navazující kapitole). Na rozdíl od
raytracingu se však nehledá průsečík s&nbsp;nějakým povrchem, ale sčítají se
hustoty voxelů, které paprsek protne při svém průletu scénou. Rychlým
algoritmem výpočtu průsečíků paprsku s&nbsp;voxely je například algoritmus DDA
či Bresenhamův algoritmus pro 3D úsečku. Existují však i vylepšené metody,
které dokážou spočítat délku paprsku při průletu jednotlivými voxel a výsledek
je váhován touto (normalizovanou) délkou.</li>

<li>Na základě vypočtené sumy hustot je obarven příslušný pixel na obrazovce.
Výsledkem je tedy obrázek podobný rentgenovému či ultrazvukovému snímku.
Předností tohoto postupu je, že se zobrazí i odlehlé části fraktálního objektu,
nevýhodou pak fakt, že není zvýrazněn povrch a nelze zde použít klasické
osvětlovací modely.</li>

</ol>

<p>Nevýhodou tohoto postupu je fakt, že se vůbec nepočítají normály povrchu
(žádný povrch se neuvažuje, pouze voxely s&nbsp;různou hustotou), takže není
možné přímočaře použít osvětlovací modely.</p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-4.jpg" class="image-367587" alt="&#160;" width="179" height="499" />
<p><i>Obrázek 5: Tepelné proudění, opět vykresleno metodou integrace podél
paprsku.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Raytracing či raycasting</h2>

<p>Mnohem častěji používanou vykreslovací metodou, která je sice mnohem
pomalejší, ale vede ke kvalitnějším výsledkům, je metoda nazvaná
<i>raycasting</i> popř.&nbsp;její jednodušší varianta pojmenovaná
<i>raycasting</i>.</p>

<p><i>Raycasting</i> neboli <i>vrhání paprsků</i> je často užívanou metodou pro
vykreslení prostorových scén v&nbsp;případě, kdy nemáme k&nbsp;dispozici
hardwarový akcelerátor nebo je scéna složená z&nbsp;těles, která se složitě
převádí na polygony (může se jednat o implicitní plochy, uložení objemu ve
formě <i>voxelů</i> atd.). Nejčastěji se můžeme s&nbsp;raycastingem setkat
v&nbsp;různých programech typu CAD, které důsledně využívají <i>CSG
(Constructive Solid Geometry)</i>, neboli konstruktivní geometrii těles, což je
způsob vytváření složitějších těles pomocí jednoduchých základních
trojrozměrných tvarů (typicky koule, kužele, válce, toroidu a
roviny/poloprostoru), které jsou navzájem kombinovány pomocí operací
sjednocení, průniku a rozdílu.</p>

<p>Princip metody <i>raycastingu</i> je poměrně jednoduchý: představme si
pozorovatele, který stojí před stínítkem představovaným plochou (rastrového)
displeje, za kterým je umístěna celá sledovaná scéna, včetně světelných zdrojů.
Jakým způsobem je možné scénu vykreslit tak, aby se zobrazila na stínítku ve
formě různě obarvených pixelů? Způsobů je samozřejmě více, ovšem
<i>raycasting</i> je postavený na jednoduché myšlence. Z&nbsp;pozice
pozorovatele budeme do scény vysílat pomyslné paprsky a zjišťovat, která tělesa
tyto paprsky protnou.</p>

<p>Pokud nebudeme brát v&nbsp;úvahu průhlednost těles, bude nás zajímat ten
průsečík, který se nachází nejblíže k&nbsp;pozorovateli, protože ostatní
průsečíky nejsou z&nbsp;jeho pozice viditelné (jsou skryté dalšími tělesy).
Kolik paprsků se však má vysílat a jakým směrem? Základním principem (ne nutně
s&nbsp;nejkvalitnějšími výsledky) je vyslat jeden paprsek pro každý pixel
displeje, čímž je automaticky určen i jeho směr. Ovšem jsou možné i jiné
způsoby, kterými se nyní nebudeme zabývat, abychom se nevěnovali nyní
nepodstatným detailům.</p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-5.jpg" class="image-367588" alt="&#160;" width="480" height="360" />
<p><i>Obrázek 6: Termín &bdquo;fotorealistická grafika&ldquo; nevznikl
náhodou...</i></p>

<p>Po výpočtu průsečíku paprsku s&nbsp;nejbližším povrchem je ještě nutné
provést výpočet světelných poměrů v&nbsp;místě průsečíku. Vytvoří se tedy další
pomyslné paprsky, které směřují k&nbsp;jednotlivým světelným zdrojům a zjišťuje
se odchylka těchto paprsků od normálového vektoru popř.&nbsp;od odraženého
paprsku (tvorba odlesků &ndash; &bdquo;prasátek&ldquo;). Také se zjišťuje, zda
jsou vůbec světelné zdroje z&nbsp;daného místa viditelné, čímž se ve
vykreslované scéně automaticky vytváří stíny. Může samozřejmě nastat situace,
že primární paprsek neprotne žádné těleso &ndash; v&nbsp;tomto případě je
příslušný pixel obarven nastavenou barvou pozadí.</p>

<p>Ukažme si na jednoduchém příkladu, jak výpočet průsečíku probíhá.
Předpokládejme, že se ve scéně nachází jedna koule popsaná rovnicí:<br />
<i>(x-x<sub>0</sub>)<sup>2</sup>+(y-y<sub>0</sub>)<sup>2</sup>+(z-z<sub>0</sub>)<sup>2</sup>-r<sup>2</sup>=0</i><br />
kde <i>[x<sub>0</sub>, y<sub>0</sub>, z<sub>0</sub>]</i> je souřadnice středu koule a <i>r</i> je její poloměr.</p>

<p>Výpočet průsečíku paprsku s&nbsp;koulí je poměrně snadný, což mimochodem
výrazně urychlí všechny výpočty a tím i dobu zobrazování scény (proto byly
obrázky s&nbsp;koulemi při prezentaci možností raytracingu velmi často
používány). Pro zjištění, zda paprsek protíná kouli je potřeba zjistit přesnou
pozici průsečíku paprsku s&nbsp;jejím povrchem. V&nbsp;rovnici paprsku:<br />

<i>R(t)=A+tq</i><br />

musíme pro zadané hodnoty <i>A</i> (pozice pozorovatele) a <i>q</i> (směr
paprsku) zjistit hodnotu parametru <i>t</i>. Bude-li hodnota kladná, je povrch
viditelný (před kamerou/pozorovatelem). Bude-li hodnota záporná, je povrch
neviditelný (za kamerou). Přesnou hodnotu parametru <i>t</i> zjistíme dosazením
rovnice paprsku do rovnice popisující kouli. Ve skutečnosti se může stát, že
nám vyjdou dvě hodnoty <i>t</i>, popř.&nbsp;jedna hodnota (dvojitý kořen) či
rovnice nebude mít reálné kořeny. To je v&nbsp;pořádku, neboť to odpovídá
možným vzájemným postavením paprsku a koule:</p>

<ol>
<li>dva kořeny &ndash; paprsek kouli protíná, samozřejmě ve dvou místech</li>
<li>jeden kořen &ndash; paprsek se koule pouze dotkl, tj.&nbsp;je tečný k&nbsp;povrchu</li>
<li>žádný reálný kořen &ndash; paprsek kouli zcela minul</li>
</ol>

<p>Velkým problémem zůstává potažení koule či jiného obecného tvaru texturou.
Pro běžná tělesa se používá promítání textury z&nbsp;vhodně zvoleného tělesa. U
koule není zcela zřejmé, které promítací těleso se má použít. Kvůli topologicky
&bdquo;nekompatibilnímu&ldquo; tvaru povrchu koule s&nbsp;tvarem plošné textury
je však zřejmé, že textura bude nanesena s&nbsp;velkou chybou, především na
vzniklých pólech. Tento problém nastává pouze u dvoudimenzionálních textur
nanášených na povrch tělesa. U třídimenzionálních textur tento problém není
zřetelný, což je jeden z&nbsp;důvodů, proč se například v&nbsp;POV-Rayi často
pracuje s&nbsp;třídimenzionálními procedurálními texturami
(v&nbsp;Mandelbulberu jsou použity oba typy textur).</p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-6.jpg" class="image-367589" alt="&#160;" width="480" height="360" />
<p><i>Obrázek 7: Odlesky na kovu a skleněné povrchy byly vždy doménou
raytracerů.</i></p>

<p><i>Raytracing</i>, neboli <i>zpětné sledování paprsku</i> vznikl jednoduchým
a přitom z&nbsp;hlediska vizuálních výsledků významným rozšířením předchozí
metody. Sledování paprsku vrhaného od pozorovatele do scény totiž nekončí už po
nalezení průsečíku s&nbsp;nejbližším tělesem, ale pokračuje sledováním dalších
paprsků, odvozených podle odrazivosti a průhlednosti (přesněji řečeno lomových
vlastností) nalezeného tělesa. Na barvě tělesa se tedy podílejí světelné
příspěvky vypočtené s&nbsp;pomocí obecně většího počtu paprsků.</p>

<p>První test průsečíku (primárního) paprsku s&nbsp;plochou tělesa je proveden
stejným způsobem jako u <i>raycastingu</i>. Jediný rozdíl spočívá v&nbsp;tom,
že je po výpočtu průsečíku spočítán odraz a lom paprsku na povrchu tělesa a
výpočet probíhá <i>rekurzivně</i> s&nbsp;dále vzniklými paprsky, které se
nazývají sekundární paprsky. Hloubka rekurze musí být omezena, aby výpočet
skončil v&nbsp;konečném čase. Pro reálné scény většinou postačí volit tři až
čtyři odrazy. Už při této hloubce rekurze lze docílit fotorealistického
zobrazení celé scény.</p>

<p>Při výpočtu světelných poměrů na povrchu tělesa potřebujeme znát orientaci
normálového vektoru v&nbsp;místě průsečíku paprsku s&nbsp;povrchem. Problém
potažení povrchu texturou je stejně složitý jako v&nbsp;metodě vrhání
paprsku.</p>

<p><div class="rs-tip-major">Zbývá dodat, proč se tato metoda česky nazývá
<strong>zpětné</strong> sledování paprsku. Paprsek totiž vysíláme skutečně
opačným směrem &ndash; od pozorovatele směrem do scény a zjišťujeme,
z&nbsp;jakých světelných zdrojů mohl vzniknout. Tím se původně neprakticky
složitá úloha (vysílání paprsků ze všech zdrojů všemi směry, ovšem jen velmi
málo z&nbsp;nich dosáhne oka/kamery pozorovatele) stává výpočetně
zvládnutelnou.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Fraktály bez spojitého povrchu versus klasický raytracing?</h2>

<p><a href="#k04">Výše zmíněné</a> algoritmy raycastingu a raytracingu byly
primárně vyvinuty pro ty trojrozměrné scény, v&nbsp;nichž jsou tělesa popsána
nějakou implicitní funkcí, která by měla být v&nbsp;ideálním případě spojitá.
Pouze při zajištění této podmínky je totiž možné zaručit, že bude možné
vypočítat průnik paprsku s&nbsp;povrchem tělesa a navíc i určit normálový
vektor v&nbsp;místě tohoto průniku. A znalost normálového vektoru je důležitá
pro to, aby bylo možné vypočítat barvu plošky tělesa na základě nějakého
osvětlovacího modelu (těch existuje větší množství typů, klasický osvětlovací
model je založen na vyjádření světla na základě ambientní složky, difůzní
složky a odlesků). Ovšem základní vlastností trojrozměrných fraktálů a
multifraktálů je fakt, že jejich povrch <strong>vůbec spojitý není</strong>. Je
tomu ve skutečnosti přesně naopak &ndash; na některých místech povrchu je zcela
nespojitý, protože samotný povrch má větší dimenzi než 2.</p>

<p>Základní otázkou, kterou museli tvůrci programu Mandelbulber vyřešit je tedy
určení, jakým způsobem se má reálný povrch fraktálu nahradit ve chvíli, kdy se
počítá (renderuje) 3D scéna a jak vlastně určit průsečík paprsku s&nbsp;takovým
složitým povrchem. Pro tento účel byly vyvinuty algoritmy nazvané <i>Distance
estimation</i> (DE) a <i>ray-matching</i>.</p>

<a href="https://www.root.cz/obrazek/367590/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-7-prev.png" class="image-367590" alt="&#160;" width="370" height="44" /></a>
<p><i>Obrázek 8: Nástrojový pruh s&nbsp;výběrem typů fraktálů, které aplikace
Mandelbulber dokáže vykreslit.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Distance estimation a algoritmus ray matchingu</h2>

<p>Tyto metody se snaží zjistit průsečík parpsku s&nbsp;(mnohdy nekonečně
komplikovaným) povrchem tak, že se na stopě paprsku tvoří pomyslné koule a
zjišťuje se, zda tato koule protne alespoň určitou část prostoru či nikoli.
Pokud k&nbsp;protnutí dojde, koule se změnší a celý proces se iterativně
opakuje. Nakonec se dojde do situace, kdy je koule dostatečně malá na to, aby
se dalo prohlásit, že její průsečík s&nbsp;paprskem je současně i průsečíkem
s&nbsp;&bdquo;reálným&ldquo; povrchem fraktálu. Nevýhodou této metody je její
časová náročnost a velká závislost na požadované přesnosti výpočtu.</p>

<p><div class="rs-tip-major">Poznámka: <a
href="http://cdn.mandelbulber.org/doc/Mandelbulber_Manual_v091.pdf">v&nbsp;postarším
manuálu k&nbsp;programu Mandelbulber</a> je princip této metody naznačen na
obrázcích na čtvrté straně</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Nastavení kamery při konfiguraci trojrozměrné scény</h2>

<a href="https://www.root.cz/obrazek/367591/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-8-prev.jpg" class="image-367591" alt="&#160;" width="366" height="270" /></a>
<p><i>Obrázek 9: </i></p>

<img src="https://i.iinfo.cz/images/183/mandelbulb-2-9.png" class="image-367592" alt="&#160;" width="281" height="506" />
<p><i>Obrázek 10: </i></p>

<a href="https://www.root.cz/obrazek/367593/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-10-prev.jpg" class="image-367593" alt="&#160;" width="366" height="270" /></a>
<p><i>Obrázek 11: </i></p>

<a href="https://www.root.cz/obrazek/367594/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-11-prev.jpg" class="image-367594" alt="&#160;" width="366" height="270" /></a>
<p><i>Obrázek 12: </i></p>

<a href="https://www.root.cz/obrazek/367595/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-12-prev.jpg" class="image-367595" alt="&#160;" width="366" height="270" /></a>
<p><i>Obrázek 13: </i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Vliv parametru &bdquo;smoothness&ldquo; na tvar vykreslovaného fraktálu</h2>

<a href="https://www.root.cz/obrazek/367596/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-13-prev.png" class="image-367596" alt="&#160;" width="160" height="270" /></a>

<a href="https://www.root.cz/obrazek/367597/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-14-prev.jpg" class="image-367597" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367597/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-15-prev.jpg" class="image-367598" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367597/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-16-prev.jpg" class="image-367599" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367597/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-17-prev.jpg" class="image-367600" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367597/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-18-prev.jpg" class="image-367601" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367597/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-19-prev.jpg" class="image-367602" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367603/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-20-prev.jpg" class="image-367603" alt="&#160;" width="366" height="270" /></a></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Změna tvaru fraktálu při změně počtu iterací (IFS apod.)</h2>

<a href="https://www.root.cz/obrazek/367605/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-22-prev.jpg" class="image-367604" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367606/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-23-prev.jpg" class="image-367604" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367607/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-24-prev.jpg" class="image-367604" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367608/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-25-prev.jpg" class="image-367604" alt="&#160;" width="366" height="270" /></a>
<a href="https://www.root.cz/obrazek/367609/"><img src="https://i.iinfo.cz/images/183/mandelbulb-2-26-prev.jpg" class="image-367609" alt="&#160;" width="366" height="270" /></a>



<p><a name="k10"></a></p>
<h2 id="k10">10. Editor materiálů</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Tvorba animací</h2>

<p>Již v&nbsp;úvodním článku o aplikaci Mandelbulber jsme si řekli, že kromě
statických snímků je možné vytvářet i animace. Existují přitom dva způsoby
tvorby animací. První z&nbsp;nich, který se jmenuje <i>Flight Mode</i>, spočívá
v&nbsp;tom, že se myš použije pro okamžitou změnu souřadnic kamery, podobně
jako v&nbsp;některých počítačových hrách při řízení letadla (FPS). Mandelbulber
se v&nbsp;tomto případě snaží o rychlé (resp.&nbsp;většinou pouze
&bdquo;rychlé&ldquo;) vygenerování snímků tak, aby vznikla plynulá animace.
Ovšem výpočetní výkon současných strojů dostačuje pouze pro vyrendrování
animací s&nbsp;velmi nízkým rozlišením, například jen 320&times;240 pixelů nebo
dokonce pouze 160&times;120 pixelů.</p>

<p>Při zapnutí <i>flight</i> režimu se směr letu řídí posunem myši (bez
tlačítek), ovšem kurzorovými šipkami je navíc možné posunovat vlastní pozici
kamery. Levé a pravé tlačítko myši v&nbsp;tomto režimu slouží k&nbsp;urychlení
popř.&nbsp;naopak ke zpomalení letu. Jiné parametry není možné změnit &ndash;
jinými slovy se <i>flight</i> režimu používá skutečně pro animaci průletu okolo
fraktálu nebo do jeho vnitřních struktur.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Ukázka animací, které vznikly ve &bdquo;flight&ldquo; režimu</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Animace založená na klíčových snímcích (<strong>keyframes</strong>)</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>

<pre>
mencoder mf://*.png -mf w=320:h=240:fps=10:type=png -ovc lavc \
    -lavcopts vcodec=mpeg4:mbd=2:trell -oac copy -o output.avi
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Vykreslení fraktálu typu Mandelbox v&nbsp;rovině (vylepšený příklad)</h2>

<pre>
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;math.h&gt;
&nbsp;
#define WIDTH  400
#define HEIGHT 400
&nbsp;
void <strong>writeImage</strong>(const int width, const int height, const unsigned char *image)
{
    int i;
    puts("P2");
    printf("%d %d\n", width, height);
    puts("255");
    for (i=0; i&lt;width*height; i++) {
        printf("%d ", image[i]);
    }
}
&nbsp;
void <strong>toLogarithmicScale</strong>(const int width, const int height,
                        unsigned char *pixels, const float *floatPixels, const float max)
{
    int i;
    for (i = 0; i &lt; WIDTH*HEIGHT; i++) {
        if (floatPixels[i] == -1) {
            pixels[i] = 0x00;
        }
        else {
            int val = (int)(log(floatPixels[i])/log(max)*255);
            pixels[i] = val;
        }
    }
}
&nbsp;
void <strong>calcMandelbox</strong>(const int width, const int height, float *floatPixels, const int maxiter, float *max)
{
    float cx, cy;
    float zx, zy;
    float magnitude, squared;
&nbsp;
    int i, j, n;
&nbsp;
    cy = -4.0;
    for (j = 0; j &lt; height; j++) {
        cx = -4.0;
        for (i = 0; i &lt; width; i++) {
            float zx = 0, zy = 0;
            for (n = 0; n &lt; maxiter; n++) {
                if (zx&gt;1.0) {
                    zx = 2.0-zx;
                }
                else if (zx&lt;-1.0) {
                    zx = -2.0-zx;
                }
                if (zy&gt;1.0) {
                    zy = 2.0-zy;
                }
                else if (zy&lt;-1.0) {
                    zy = -2.0-zy;
                }
                float zx2 = zx * zx;
                float zy2 = zy * zy;
                squared = zx2 + zy2;
                magnitude = sqrt(squared);
                if (squared &gt; 256.0) {
                    break;
                }
                if (magnitude &lt; 0.5) {
                    zx = zx * 8.0 * magnitude;
                    zy = zy * 8.0 * magnitude;
                }
                else if (magnitude &lt; 1.0) {
                    zx = zx * 2.0 / (magnitude*magnitude);
                    zy = zy * 2.0 / (magnitude*magnitude);
                }
                else {
                    zx = zx * 2.0 * magnitude;
                    zy = zy * 2.0 * magnitude;
                }
                zx += cx;
                zy += cy;
                zx2 = zx * zx;
                zy2 = zy * zy;
                squared = zx2 + zy2;
            }
            if (squared &gt; *max) {
                *max = squared;
            }
            if (n == maxiter) {
                floatPixels[i+j*WIDTH] = squared;
            }
            else {
                floatPixels[i+j*WIDTH] = -1;
            }
            cx += 8.0 / WIDTH;
        }
        cy += 8.0 / HEIGHT;
    }
&nbsp;
}
&nbsp;
int <strong>main</strong>(int argc, char **argv)
{
    char pixels[WIDTH * HEIGHT];
    float floatPixels[WIDTH * HEIGHT];
    float max = 0;
&nbsp;
    calcMandelbox(WIDTH, HEIGHT, floatPixels, 4, &amp;max);
    toLogarithmicScale(WIDTH, HEIGHT, pixels, floatPixels, max);
    writeImage(WIDTH, HEIGHT, pixels);
&nbsp;
    return 0;
}
</pre>

*** image ***
<p><i>Obrázek: </i></p>

*** image ***
<p><i>Obrázek: </i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy dvoudimenzionálních variant fraktálů typu MandelBox a
MandelBulb naprogramované v&nbsp;jazyce C byly uloženy do Git repositáře, který
je dostupný na adrese <a
href="https://github.com/tisnik/fractals.git">https://github.com/tisnik/fractals.git</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, můžete
namísto toho použít odkazy na jednotlivé příklady, které naleznete
v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Popis příkladu</th><th>Cesta</th></tr>
<tr><td>1</td><td></td><td></td><td><a href=""></a></td></tr>
<tr><td>2</td><td></td><td></td><td><a href=""></a></td></tr>
<tr><td>3</td><td></td><td></td><td><a href=""></a></td></tr>
<tr><td>4</td><td></td><td></td><td><a href=""></a></td></tr>
<tr><td>5</td><td></td><td></td><td><a href=""></a></td></tr>
</table>

*** image ***
<p><i>Obrázek :</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Literatura</h2>

<p>Klasické knihy i vybrané články o fraktálech:</p>

<ol>

<li>Barnsley Michael: <i>"Fractals Everywhere"</i>,<br>
Academic Press Inc., 1988, ISBN 0-12-079062-9</li>

<li>Barnsley Michael, Devaney R. L., Mandelbrot Benoit B., Peitgenn Heinz-Otto, Saupe Dietmar, Voss Richard: <i>"The Science of Fractal Images"</i>,<br>
Springer-Verlag, New York, 1988</li>

<li>Barnsley Michael, Hurd Lyman P.: <i>"Fractal Image Compression"</i>,<br>
A. K. Peters, 1993</li>

<li>Bowman Richard L.: <i>"Fractal Metamorfosis: A Brief Student Tutorial"</i></br>
Computer and Graphics, 19, strany 157-164, 1995</li>

<li>Bulín Jan: <i>"Vykreslování výškových map"</i>,<br />
Ročníkový projekt, VUT Brno, FEI, 1998</li>

<li>Cahalan R. F. a Joseph J. H.: <i>"Fractal statistics of cloud fields"</i>,<br />
Mon. Wea.Rev. 117, 261-272, 1989</li>

<li>Cahalan R. F., W.  Ridgway, W. J. Wiscombe, T. L. Bell and J. B. Snider: <i>"The albedo of fractal stratocumulus clouds"</i>,<br />
Atmos. Sci.  51, 2434-2455, 1994</li>

<li>Devaney Robert L.: <i>"A First Course In Chaotic Dynamical Systems"</i>,<br>
Addison-Wesley, Reading, MA, 1992</li>

<li>Dewdney A. K: <i>"Computer Recreations"</i>,<br />
časopis Scientific American</li>

<li>Douady, A., Hubbard, J.: <i>"Itération des polynomes quadratiques complexes"</i>,<br />
C. R. Acad. Sci., Paris 1982<br />

<li>Etienne Martineau: <i>"On a Bicomplex Distance Estimation for the Tetrabrot"</i><br />
June, 2004</li>

<li>Ewing, J. H., Schober, G.: <i>"The area of the Mandelbrot Set"</i>,<br />
Numer. Math. 1992</li>

<li>Fischer Yuval (editor): <i>"Fractal Image Compression: Theory and Application"</i>,<br>
Springer-Verlag, New York, 1995</li>

<li>Gleick James: <i>"Chaos: Making a New Science"</i>,<br />Viking Press, Penguin, New York, 1987</li>

<li>Gleick James: <i>"Chaos: Vznik nové vědy"</i> (český překlad předchozí knihy),<br />Ando Publishing, Brno, 1996</li>

<li>Gröller Eduard: <i>"Interactive design of Nonlinear Functions for Iterated Function System"</i>,<br />
Technical University Vienna, 1995
</li>

<li>Hill, F. S. jr.: <i>"Computer Graphics using OpenGL"</i>,<br />
Prentice Hall, 2001</li>

<li>Hook Brian: <i>"An Introduction to Fixed Point Math"</i>,<br />
Game Design and Review, 2003</li>

<li>Lauwerier Hans: <i>"Fractals"</i>,<br />
Princeton University Press, 1991</li>

<li>Makovský Dušan: <i>"Stochastické fraktály"</i>,<br />
Diplomová práce, VUT FIT Brno, 2003<br />

<li>Mandelbrot Benoit B.: <i>"The Fractal Geometry of Nature",</i><br />
W. H. Freeman, New York; San Francisco, 1982, ISBN 0-7167-1186-9</li>

<li>Mandelbrot Benoit B.: <i>"Fractal Landscapes without creases and with rivers"</i>,<br />
The Science of Fractal Images, ed. Heinz-Otto Peitgen, Dietmar Saupe; Springer-Verlag (1988) pp 243-260</li>

<li>Peitgen Heinz-Otto, D. Saupe: <i>"The Science of Fractal Images"</i>,<br />
Springer-Velag, 1988</li>

<li>Peitgen Heinz-Otto, Jurgens Hartmut, Saupe Dietmar: <i>"Fractals For The Classroom"</i>,<br />
Springer-Verlag, New York, 1988</li>

<li>Peitgen Heinz-Otto, Richter Peter: <i>"The Beauty of Fractals",</i><br />
Springer-Verlag, New York, 1986, ISBN 0-387-15851-0</li>

<li>Peitgen Heinz-Otto, Jurgens Hartmut, Saupe Dietmar: <i>"Chaos and Fractals: New Frontiers of Science"</i>,<br />Springer-Verlag, New York, 1992</li>

<li>Perlin K. and Hoffert E. M.: <i>"Hypertexture"</i>,<br />
Computer graphics, Volume 23, Number 3, July 1989, pages 253&ndash;262</li>

<li>Perlin Ken: <i>"An Image Synthesizer"</i>,<br />
Computer Graphics, Volume 19, Number 3, 1985, pages 287&ndash;296</li>

<li>Pickover Clifford: <i>"Computers, Pattern, Chaos and Beauty: Graphics from an Unseen World"</i>,<br />St. Martin's Press, New York, 1990</li>

<li>Pickover Clifford: <i>"Chaos in Wonderland"</i>,<br />
ISBN 0-312-10743-9 St. Martin's Press<br />

<li>Pritchard Joe: <i>"The Chaos Cookbook: A Practical Programming Guide"</i>,<br />Butterworth-Heinemann, Oxford, 1992, ISBN 0-7506-0304-6</li>

<li>Prusinkiewicz Przemyslaw and Hanan James: <i>"Lindenmayer Systems, Fractals, and Plants"</i>,<br />
Springer-Verlag, New York, 1989.</li>

<li>Prusinkiewicz Przemyslaw and Lindenmayer Aristid: <i>"The Algorithmic Beauty of Plants"</i>,<br />
Springer-Verlag, NY, 1990. ISBN 0-387-97297-8</li>

<li>Sharman, J: <i>"How to render landscapes"</i></li>

<li>Silverman B. W.: <i>"Density Estimation for Statistics and Data Analysis"</i>,<br />
Chapman and Hall, London, 1986.</li>

<li>Tišnovský Pavel: <i>"Návrh editoru IFS"</i>,<br />
Vysoké učení technické v Brně, Fakulta elektrotechniky a informatiky, 1998</li>

<li>Tišnovský Pavel: <i>"Interaktivní editor afinních transformací"</i>,<br />
Vysoké učení technické v Brně, Fakulta elektrotechniky a informatiky, 1999</li>

<li>Tišnovský Pavel: <i>"Výpočet plochy Mandelbrotovy množiny metodou součtu pixelů"</i>,<br />
Elektrorevue, 2001</li>

<li>Tišnovský Pavel: <i>"Fraktály: dynamické systémy v komplexní rovině"</i>,<br />
Elektrorevue, 2001</li>

<li>Tumblin Jack, Holly Rushmeier: <i>"Tone Reproduction for Realistic Images"</i>,<br />
IEEE Computer Graphics and Applications, November/December 1993 (Vol. 13, No. 6) pp. 42-48.<br />

<li>Weber J., Penn J.: <i>"Creation and Rendering of Realistic Trees"</i>,<br />
Proceedings of SIGGRAPH '95, volume 22(4), ACM SIGGRAPH, New York, 1995</li>

<li>Wegner Timothy, Peterson Mark: <i>"Fractal Creations, First Edition"</i>,<br />
The Waite Group Press, 1991</li>

<li>Wegner Timothy, Tyler Bert: <i>"Fractal Creations, Second Edition"</i>,<br />
The Waite Group Press, 1993</li>

<li>Wegner Timothy, Tyler Bert, Peterson Mark, Branderhorst Pierer: <i>"Fractals for Windows"</i>,<br />
The Waite Group Press, 1992</li>

<li>Yates Randy: <i>"Fixed-Point Arithmetic: An Introduction"</i></li>

<li>Žára J., Beneš B., Felkel P.: <i>"Moderní počítačová grafika",</i><br />
Computer Press, Praha, 1998, ISBN 80-7226-049-9</li>

<li>Žára J., Limpouch A., Beneš B., Werner T.: <i>"Počítačová grafika - principy a algoritmy",</i><br />
Grada, 1992<br />

</ol>

*** image ***
<p><i>Obrázek :</i></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Mandelbulber - creating animations<br />
<a href="https://sites.google.com/site/mandelbulber/getting-started">https://sites.google.com/site/mandelbulber/getting-started</a>
</li>

<li>MandelbulberTutorial &amp; User Manual Version: 0.9.1<br />
<a href="http://cdn.mandelbulber.org/doc/Mandelbulber_Manual_v091.pdf">http://cdn.mandelbulber.org/doc/Mandelbulber_Manual_v091.pdf</a>
</li>

<li>AppImage<br />
<a href="https://appimage.org/">https://appimage.org/</a>
</li>

<li>Stránka aplikace Gnofract 4D<br />
<a href="http://edyoung.github.io/gnofract4d/">http://edyoung.github.io/gnofract4d/</a>
</li>

<li>Repositář aplikace Gnofract 4D<br />
<a href="https://github.com/edyoung/gnofract4d">https://github.com/edyoung/gnofract4d</a>
</li>

<li>Multifractal system<br />
<a href="https://en.wikipedia.org/wiki/Multifractal_system">https://en.wikipedia.org/wiki/Multifractal_system</a>
</li>

<li>What are Multifractals?<br />
<a href="https://imagej.nih.gov/ij/plugins/fraclac/FLHelp/Multifractals.htm">https://imagej.nih.gov/ij/plugins/fraclac/FLHelp/Multifractals.htm</a>
</li>

<li>Multifractal vs Fractal - What's the difference?<br />
<a href="https://wikidiff.com/multifractal/fractal">https://wikidiff.com/multifractal/fractal</a>
</li>

<li>Mandelbulb<br />
<a href="http://www.mandelbulb.com/">http://www.mandelbulb.com/</a>
</li>

<li>Mandelbulber Fractal Rendering Software<br />
<a href="http://www.mandelbulb.com/2012/3d-fractal-rendering-mandelbulber/">http://www.mandelbulb.com/2012/3d-fractal-rendering-mandelbulber/</a>
</li>

<li>Mandelbulber na Sourceforge<br />
<a href="https://sourceforge.net/projects/mandelbulber/">https://sourceforge.net/projects/mandelbulber/</a>
</li>

<li>Mandelbulb 3D (MB3D) Fractal Rendering Software<br />
<a href="http://www.mandelbulb.com/2014/mandelbulb-3d-mb3d-fractal-rendering-software/">http://www.mandelbulb.com/2014/mandelbulb-3d-mb3d-fractal-rendering-software/</a>
</li>

<li>Mandelbox (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Mandelbox">https://en.wikipedia.org/wiki/Mandelbox</a>
</li>

<li>Gallery of Mandelbox fractals<br />
<a href="https://sites.google.com/site/mandelbox/">https://sites.google.com/site/mandelbox/</a>
</li>

<li>Mandelbulb (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Mandelbulb">https://en.wikipedia.org/wiki/Mandelbulb</a>
</li>

<li>Cygnus software: <strong>"Fractal eXtreme (fractal generator for Windows)"</strong>,<br>
<a href="http://www.cygnus-software.com">
http://www.cygnus-software.com</a><br />
<i>We think that if you give Fractal eXtreme a try, you will soon decide that Fractal eXtreme's unique combination of speed, power, and intuitive interface make it your best choice for exploring the wonders of fractals.</i>
</li>

<li>Devaney Bob: <strong>"Dynamical systems and Iterated Function Systems"</strong>,<br />
<a href="http://math.bu.edu/people/bob/">
http://math.bu.edu/people/bob/</a><br />
<i>Bob Devaney's Home Page</i>
</li>

<li>Gintz Terry W.: <strong>"Zplot (fractal generator)"</strong>,<br>
<a href="http://www.mysticfractal.com/FractalZplot.html">
http://www.mysticfractal.com/FractalZplot.html</a><br />
<i>Fractal Zplot is an interactive program for generating fractal images. Originally named Zplot, this program has been in continuous development since 1989. Fractal Zplot currently supports the Mandelbrot set, Julia sets, Newton's method, and Phoenix curves, with millions of mapping variations. 3D fractal types include quaternion, hypercomplex, orbital fractals and lsystems, in addition to the original height field and landscape types.</i>
</li>

<li>Hubička Jan: <strong>"Stránky programu XaoS"</strong>,<br />
<a href="http://xaos.sourceforge.net/english.php">
http://xaos.sourceforge.net/english.php</a><br />
<i>Welcome to the redesigned web portal of XaoS. Here we offer up-to-date information about the XaoS project, the development issues and others.</i>
</li>

<li>Hubička Jan: <strong>"Starší (a IMHO hezčí) verze stránek programu XaoS"</strong>,<br />
<a href="http://xaos.sourceforge.net/black/index.php">
http://xaos.sourceforge.net/black/index.php</a><br />
<i>XaoS is a fast portable real-time interactive fractal zoomer. It displays the Mandelbrot set (among other escape time fractals) and allows you zoom smoothly into the fractal. Various coloring modes are provided for both the points inside and outside the selected set. In addition, switching between Julia and Mandelbrot fractal types and on-the-fly plane switching is provided. The first version was a minimal X Window Mandelbrot viewer by Thomas later modified by Jan to support high frame-rate zooming. Other additions were later made by both Thomas and Jan including autopilot (for those of you without drivers licenses), palette changing, GIF saving, and fractal inversion.</i>
</li>

<li>Chardonnet David: <strong>"IFS Fractals Digital Encyclopedy"</strong>,<br />
<a href="http://www.chez.com/fractals/galeries/gb_index.html">
http://www.chez.com/fractals/galeries/gb_index.html</a>
</li>

<li>Jones Damien M. a kol.:<strong>"Fractalus"</strong>,<br />
<a href="http://www.fractalus.com">
http://www.fractalus.com</a><br />
<i>fractalus.com exists to showcase fractal art, provide information about fractals, and promote fractals in general. We (the artists who build and maintain this site) want to show you our very best; we create this art because we love to do it. We're happy to share this with you, but we would appreciate it if you would respect our wishes regarding image re-use and copyrights.</i>
</li>

<li>Kolka Milan: <strong>"Spojování želv v jazyce založeném na L-systémech"</strong>,<br />
<a href="http://www.elektrorevue.cz/clanky/01010/index.html">
http://www.elektrorevue.cz/clanky/01010/index.html</a><br />
<i>Článek představuje programovací jazyk Fraktálovač, který je určen ke generování fraktálů. Jazyk je založen na Lindenmayerových systémech (L-systémech). Zejména je zde ukázán princip spojování želv, který rozšiřuje možnosti klasických L-systémů.</i></li>

<li>Lartigue Ghislain: <strong>"Hydrodynamical Instabilities: The Iterative Function System"</strong>,<br />
<a href="http://www.enseeiht.fr/hmf/travaux/CD9900/travaux/optmfn/hi/00pa/mfn11/pa01.htm">
http://www.enseeiht.fr/hmf/travaux/CD9900/travaux/optmfn/hi/00pa/mfn11/pa01.htm</a><br />
<i>The aim of this hands-on was to study a dynamical system. I have choosen to deal with a particular class of these systems which are the Iterative Function System (IFS). These systems are not really what one could call a "pure" dynamical system. Actually, all the systems we have studied so far can be written X'=F(X,t), that is to say that the derivative of a given set of variables X=(x1,...,xn) can be expressed as a function of this set X and of the time (for the non-autonomous systems). Thus, the whole evolution of the system is perfectly deterministic and actually, is totally determined by the initial condition X(0). However, it is well known that in many cases, the evolution of a system can become chaotic and then, the sensibility to the initial conditions can give the impression that the system follows a random trajectory. But one should still remember that this is just an illusion which is the consequence of our finite precision knowing of the initial condition.</i></li>

<li>Pulcini Giovambattista, Verrando, Meloni Rossi: <strong>"IFS: Fractal Image Compression"</strong>,<br />
<a href="http://mathforum.org/library/view/6165.html">
http://mathforum.org/library/view/6165.html</a><br />
<i>Download IFS Application Framework, a freeware educational program for fractal image coding. Note: It needs 486DX2/66, 8MB RAM, Windows 3.1 with a 11MB swapfile and a 32000 SVGA driver (at least). Download IFSDOC, an introduction to IFS and IFSAF (in Postscript format). A more detailed description of IFSAF is also available.</i></li>

<li>Pulcini Giovambattista: <strong>"Fractal Image Compression Software (for Windows)"</strong>,<br />
<a href="http://www.verrando.com/pulcini/gp-ifs1.html">
http://www.verrando.com/pulcini/gp-ifs1.html</a><br />
<i>IFSAF: IFS Application Framework is a software running under Windows 3.x for fractal image encoding. It has some bugs, makes no control on what you are doing, so it crashes frequently, is not a well-behaved window application: it monopolizes the CPU until the enc/dec is over, but shows graphically each step of the computation, so may be a valuable choise for the beginners in this field.Besides, it is a powerful framework, for testing several different algorithms, andoptions.</i><br /></li>

<li>Scott Draves: <strong>"The Fractal Flame Algorithm"</strong>,<br />
<a href="http://flam3.com/flame_draves.pdf">
http://flam3.com/flame_draves.pdf</a>, May 18, 2005
</li>

<li>Slijkerman Frederik: <strong>"Ultra Fractal (fractal generator for Windows)"</strong>,<br>
<a href="http://www.ultrafractal.com">
http://www.ultrafractal.com</a><br />
<i>Ultra Fractal is the best tool to create fractal artwork and fractal animations. Whether you are a graphics designer, a professional fractal artist, a video producer, or a complete beginner, Ultra Fractal 4 makes it easy to create beautiful fractal pictures, animated textures, and moving fractal backgrounds.</i>
</li>

<li>Thornton Sterling: <strong>"XenoDream (Interactive IFS Editor)"</strong>,<br />
<a href="http://xenodream.com">
http://xenodream.com</a><br />
<i>XenoDream is a 3-D graphics program that combines standard shapes with 3-D IFS fractal methods for interactive modeling with a difference. Browse through our galleries for some examples, and the XenoDream pages to learn more.</i>
</li>

<li>Tyler Bert, Wegner Tim a kol.:<br />
<strong>"Fractint (fractal generator for DOS, Windows and Unix)",</strong><br />
<a href="http://www.fractint.org">
http://www.fractint.org</a><br />
<i>Fractint is a freeware fractal generator created for IBMPC's and compatible computers to run under DOS and ported to Linux. This page is for developers who wish to keep up with the latest source changes and users who would like to try the current developer's version. This page is under development by a one-finger typist entering html in a text editor, so it may not get much fancier than this for a while.</i>
</li>

<li><strong>Mandelbrot Explorer</strong> (prohlížeč Mandelbrotovy množiny jako jednoduchá webová aplikace):<br />
<a href="http://www.softlab.ece.ntua.gr/miscellaneous/mandel/mandel.html">
http://www.softlab.ece.ntua.gr/miscellaneous/mandel/mandel.html</a></li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

