<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">3. Vizualizace dynamického chování Lorenzova systému: klíč k&nbsp;jeho pochopení</a></p>
<p><a href="#k04">4. Vývoj Lorenzova systému pro některé typické vstupní parametry</a></p>
<p><a href="#k05">5. Zobrazení fázového prostoru ve formě 3D grafu popř.&nbsp;průmětů do vybraných rovin</a></p>
<p><a href="#k06">6. Vliv parametru <strong>r</strong> na chování Lorenzova systému: mez stability</a></p>
<p><a href="#k07">7. Chování Lorenzova systému na mezí stability: výběr mezi dvěma budoucnostmi vesmíru</a></p>
<p><a href="#k08">8. Chování Lorenzova systému za mezí stability: animace podivného Lorenzova atraktoru</a></p>
<p><a href="#k09">9. Výsledná animace a vybrané snímky</a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

nadoba s vodou
zespodu ohrivana
ohriva se voda, zmensuje hustota, stoupa
nahore se ochladi
a cirkuluje
zjednodusene podminky (nezavisle na horizontalnim smeru)

state space:
x: motion - rychlost cirkulace a jeji smer
y: left-to-right teplota (gradient)
z: gradient up-down, vymena tepla

(donut)
jednoducha cirkulace:

-> dynamic
phase space: de fakto vektorove pole
pro kazdou souradnici vektor, ktery urcuje rychlost a smer vyvoje systemu


1963
jeden z prvnich clanku, kde byl zobrazen vypocitany (simulovany) chaos
pro r=28 s=10 a b=8/3

puvodne stabilni
takze zvysujeme teplotu



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

pomale simulace
fix points: 0,0,0
(x,y,z) = +- sqrt(b(r-1)), +- sqrt(b(r-1)), r-1)
pokud b>0, pak r>1



<p><a name="k03"></a></p>
<h2 id="k03">3. Vizualizace dynamického chování Lorenzova systému: klíč k&nbsp;jeho pochopení</h2>

<p>Lorenzův systém je možné zkoumat několika způsoby. Samozřejmě je možná jeho
matematická analýza, tedy například zjištění pevných bodů (<i>fixed
points</i>), to, zda systém obsahuje nějaké stabilní atraktory či naopak
&bdquo;odpuzovače&ldquo;, to, zda se postupným vývojem systému (jde o dynamický
systém vyvíjející se v&nbsp;čase) dosáhne nějakého stabilního stavu,
periodického chování či chování chaotického atd. Taktéž je možné se pokusit o
nějakou formu numerické analýzy, kterou je však v&nbsp;tomto případě velmi
vhodné doplnit i vhodnou formou vizualizace, protože (jak si ukážeme dále) nám
právě vizualizace poskytnou ucelenější pohled na chování celého Lorenzova
systému.</p>

<p>Nejjednodušší formou vizualizace je výpočet a zobrazení postupného vývoje
(resp.&nbsp;možná přesněji řečeno postupných změn) hodnot <strong>x</strong>,
<strong>y</strong> a <strong>z</strong> v&nbsp;čase. Necháme se tedy zobrazit
trojici grafů s&nbsp;funkcemi <i>x(t)</i>, <i>y(t)</i> a <i>z(t)</i>, protože
na postupnou změnu hodnot se skutečně můžeme dívat jako na nějakou funkci,
kterou s&nbsp;určitými nepřesnostmi numericky počítáme. Realizace zobrazení
takových průběhů je s&nbsp;využitím knihovny <i>Matplotlib</i> poměrně
přímočará:</p>

<pre>
<i># import všech potřebných knihoven - Numpy a Matplotlibu</i>
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
&nbsp;
def <strong>lorenz</strong>(x, y, z, s=10, r=28, b=2.667):
    <i>"""Výpočet dalšího bodu Lorenzova atraktoru."""</i>
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 2000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet bodů x, y, z, z nichž se postupně</i>
<i># vytváří Lorenzův systém</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># konstrukce 2D grafu s nastavením rozlišení výsledného obrázku</i>
fig = plt.figure(figsize=(8, 6))
&nbsp;
<i># vykreslení grafu</i>
&nbsp;
ax = fig.add_subplot(3, 1, 1)
ax.plot(x)
&nbsp;
ax = fig.add_subplot(3, 1, 2)
ax.plot(y)
&nbsp;
ax = fig.add_subplot(3, 1, 3)
ax.plot(z)
&nbsp;
<i># změna velikosti komponent v grafu.</i>
plt.tight_layout()
&nbsp;
<i># uložení grafu</i>
plt.savefig("lorenz_x_y_z.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto demonstračního
příkladu naleznete na adrese <a
href="https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_x_y_z.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_x_y_z.py</a>.</div></p>

<p>Po spuštění tohoto skriptu by se měl zobrazit následují obrázek
s&nbsp;vývojem trojice hodnot <strong>x</strong>, <strong>y</strong> a
<strong>z</strong>.</p>

*** image ***
<p><i>Obrázek 1: Trojice průběhů s&nbsp;postupným vývojem hodnot
<strong>x</strong>, <strong>y</strong> a <strong>z</strong>.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Vývoj Lorenzova systému pro některé typické vstupní parametry</h2>

<p>I poměrně triviální až primitivní způsob vizualizace Lorenzova systému,
který jsme si popsali <a href="#k03">v&nbsp;předchozí kapitole</a>, nám ovšem
může poskytnout dosti důležité informace o některých vlastnostech tohoto
dynamického systému. Například můžeme zjistit, jak se systém chová pro různě
nastavené parametry <strong>&sigma;</strong>, <strong>r</strong> a
<strong>b</strong> (už složitěji si však ověříme kombinace parametrů, o tom se
však ještě budeme bavit v&nbsp;dalším textu). Podívejme se alespoň na pět
průběhů získaných pro takové parametry, pro které se systém chová typickými
způsoby (ovšem nejzajímavější je stále první obrázek s&nbsp;chaotickým
chováním):</p>

*** image ***
<p><i>Obrázek 2: Pro <strong>b=0</strong> lze dosáhnout zdánlivě periodického
chování.</i></p>

*** image ***
<p><i>Obrázek 3: Systém směřující do pevného bodu (<strong>x</strong> a
<strong>y</strong> tedy konvergují ke stejné hodnotě a můžeme odhadnout hodnotu
parametru <strong>r</strong>).</i></p>

*** image ***
<p><i>Obrázek 4: Systém blízko meze jeho chaotického chování pro
<strong>r=13,92</strong>.</i></p>

*** image ***
<p><i>Obrázek 5: Opět stav, ve kterém systém směřuje k&nbsp;jednomu ze tří
pevných bodů (a opět lze odhadnout, že hodnota <strong>r=28</strong>).</i></p>

*** image ***
<p><i>Obrázek 6: Pro <strong>r=1</strong> se systém musí ustálit na pevném bodu
<strong>[0, 0, 0]</strong> (viz úvodní kapitoly).</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Zobrazení fázového prostoru ve formě 3D grafu popř.&nbsp;průmětů do vybraných rovin</h2>

<p>Některé vlastnosti Lorenzova systému je skutečně možné vysledovat ze
samostatných průběhů hodnot <strong>x</strong>, <strong>y</strong> a
<strong>z</strong>, ovšem mnohé důležité vlastnosti a stavy tímto způsobem
neodhalíme. Proto se &ndash; právě v&nbsp;oblasti studia podivných atraktorů
&ndash; používá odlišný způsob vizualizace založený na zobrazení postupně se
měnících hodnot <strong>x</strong>, <strong>y</strong> a <strong>z</strong> ve
formě bodů v&nbsp;takzvaném <i>fázovém prostoru</i> (<i>phase space</i>),
v&nbsp;němž neexistuje osa (dimenze) s&nbsp;explicitně vymezeným časem. Tento
způsob vizualizace nám umožní rozlišit mezi periodickým, kvaziperiodickým a
chaotickým chováním atd.</p>

<p>Knihovna <i>Matplotlib</i> nám umožňuje jak zobrazení 3D grafu, tak i
například &bdquo;sploštění&ldquo; 3D grafu o 2D plochy tak, že vždy odstraníme
jednu sadu souřadnic (<strong>x</strong>, <strong>y</strong> nebo
<strong>z</strong>):</p>

<pre>
<i># Lorenz attractor</i>
&nbsp;
<i># import všech potřebných knihoven - Numpy a Matplotlibu</i>
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
&nbsp;
def lorenz(x, y, z, s=10, r=28, b=2.667):
    """Výpočet dalšího bodu Lorenzova atraktoru."""
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># konstrukce 3D grafu</i>
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(projection="3d")
&nbsp;
<i># změna velikosti komponent v grafu.</i>
plt.tight_layout()
&nbsp;
<i># vykreslení grafu</i>
ax.plot(x, y, z)
&nbsp;
<i># uložení grafu</i>
plt.savefig("lorenz_1.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
&nbsp;
<i># grafy s více pohledy na atraktor</i>
ch_3d = np.stack((x, y, z))
lim_xyz = [(np.min(ch_3d[ii]), np.max(ch_3d[ii])) for ii in range(3)]
&nbsp;
fig2 = plt.figure("3D Coordinates", figsize=(8, 6))
plt.subplot(2, 2, 1)
plt.plot(y, x, linewidth=0.75)
plt.grid()
plt.xlabel("X")
plt.ylabel("Y")
plt.xlim(lim_xyz[1])
plt.ylim(lim_xyz[0])
&nbsp;
plt.subplot(2, 2, 2)
plt.plot(y, z, linewidth=0.75)
plt.grid()
plt.xlabel("Z")
plt.ylabel("Y")
plt.xlim(lim_xyz[1])
plt.ylim(lim_xyz[2])
&nbsp;
plt.subplot(2, 2, 3)
plt.plot(z, x, linewidth=0.75)
plt.grid()
plt.xlabel("X")
plt.ylabel("Z")
plt.xlim(lim_xyz[2])
plt.ylim(lim_xyz[0])
&nbsp;
ax = fig2.add_subplot(2, 2, 4, projection="3d")
ax.plot(x, y, z, linewidth=0.7)
ax.set_xlabel("X")
ax.set_ylabel("Y")
ax.set_zlabel("Z")
&nbsp;
plt.tight_layout()
&nbsp;
<i># uložení grafu</i>
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu naleznete
na adrese <a
href="https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz.py</a>.</div></p>

*** image ***
<p><i>Obrázek 7: 3D graf se zobrazením fázového prostoru Lorenzova systému.</i></p>

*** image ***
<p><i>Obrázek 8: Průměty do jednotlivých os.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vliv parametru <strong>r</strong> na chování Lorenzova systému: mez stability</h2>

<p>Největší vliv na chování Lorenzova dynamického systému má parametr
<strong>r</strong>. Nejmenší možná (praktická) hodnota tohoto parametru je
rovna jedné. V&nbsp;takovém případě se systém dříve či později ustálí, protože
dojde do stabilního bodu [0, 0, 0], resp.&nbsp;ve skutečnosti v&nbsp;tomto
případě do &bdquo;trojitého&ldquo; stabilního bodu splňujícího tyto
vlastnosti:</p>

<ul>
<li>x=0, y=0, z=0</li>
<li>x=+√b(r−1), y=+√b(r−1), z=r-1 (což je stejné jako u 1, tento bod označme C1)</li>
<li>x=-√b(r−1), y=-√b(r−1), z=r-1 (což je stejné jako u 1, tento bod označme C2)</li>
</ul>

*** image ***
<p><i>Obrázek 9: Pro <strong>r=1</strong> se Lorenzův systém ustálí v&nbsp;atraktoru 0, 0, 0.</i></p>

*** image ***
<p><i>Obrázek 10: Dtto, ale v&nbsp;2D provedení (průběhy směřují do levého dolního rohu).</i></p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti je konvergence poměrně
pomalá, což je ostatně z&nbsp;obrázků 9 a 10 (pro 10000 iterací) poměrně dobře
patrné.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Chování Lorenzova systému na mezí stability: výběr mezi dvěma budoucnostmi vesmíru</h2>

<p>Pro <strong>r=2</strong> již neexistuje jediný fixní bod, ale tři body
(v&nbsp;počátku a dva symetricky umístěné body závisející na parametrech
<strong>b</strong> a <strong>r</strong>). Na základě počátečních hodnot [x, y,
z] pak systém směřuje k&nbsp;jednomu z&nbsp;těchto bodů a systém se dříve či
později (mnohdy mnohem později) stane stabilním. Mnohem důležitější je však
chování Lorenzova systému na mezi stability, která se nachází v&nbsp;oblasti
<strong>r=13.92</strong>. Zde již systém nebude stabilní, ale jeho chování se
stává chaotické. Podívejme se však nejprve na chování pro hodnotu
<strong>r</strong> ležící těsně pod touto hranicí. Na základě počáteční
podmínky se systém ustálí v&nbsp;bodě C1 nebo C2, což si nejlépe zobrazíme
právě ve fázovém prostoru:</p>

*** image ***
<p><i>Obrázek 11: Postupný vývoj k&nbsp;bodu C1 (3D graf).</i></p>

*** image ***
<p><i>Obrázek 12: Postupný vývoj k&nbsp;bodu C2 (3D graf).</i></p>

*** image ***
<p><i>Obrázek 13: Postupný vývoj k&nbsp;bodu C1 (2D průměty).</i></p>

*** image ***
<p><i>Obrázek 14: Postupný vývoj k&nbsp;bodu C2 (2D průměty).</i></p>

<p><div class="rs-tip-major">Poznámka: počáteční stav se může lišit jen
nepatrně, například hodnota <strong>x</strong> o 10<sup>-10</sup>, a stále
uvidíme toto chování.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Chování Lorenzova systému za mezí stability: animace podivného Lorenzova atraktoru</h2>

<p>Pro zjištění, jak se Lorenzův dynamický systém chová za mezí stability, bude
nejlepší si vše ukázat na jednoduché animaci, v&nbsp;níž se postupně vyvíjí
<i>tři</i> Lorenzovy systémy, které se od sebe liší pouze odlišnými počátečními
hodnotami [x, y, z]. Takovou animaci vytvoříme následujícím skriptem, který se
vlastně příliš neodlišuje od původního kódu, ovšem do 3D grafu vykresluje tři
průběhy a nikoli průběh jediný:</p>

<pre>
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    """Výpočet dalšího bodu Lorenzova atraktoru."""
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 1000
&nbsp;
&nbsp;
def <strong>draw_lorenz_for_input_values</strong>(ax, dt, n, x0, y0, z0):
    """Vykreslení Lorenzova atraktoru."""
    <i># prozatím prázdné pole připravené pro výpočet</i>
    x = np.zeros((n,))
    y = np.zeros((n,))
    z = np.zeros((n,))
&nbsp;
    <i># počáteční hodnoty</i>
    x[0], y[0], z[0] = (x0, y0, z0)
&nbsp;
    <i># vlastní výpočet atraktoru</i>
    for i in range(n - 1):
        x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
        x[i + 1] = x[i] + x_dot * dt
        y[i + 1] = y[i] + y_dot * dt
        z[i + 1] = z[i] + z_dot * dt
&nbsp;
    <i># vykreslení grafu</i>
    ax.plot(x.copy(), y.copy(), z.copy())
&nbsp;
&nbsp;
def <strong>draw_butterfly_effect</strong>(n):
    <i># konstrukce 3D grafu</i>
    fig = plt.figure(figsize=(8, 6))
    ax = fig.add_subplot(projection="3d")
    ax.set_xlim(-20, 20)
    ax.set_ylim(-20, 20)
&nbsp;
    <i># změna velikosti komponent v grafu.</i>
    plt.tight_layout()
&nbsp;
    draw_lorenz_for_input_values(ax, dt, n, 0.0, 0.9, 1.05)
    draw_lorenz_for_input_values(ax, dt, n, 0.0, 0.8, 1.05)
    draw_lorenz_for_input_values(ax, dt, n, 0.0, 0.7, 1.05)
&nbsp;
    <i># uložení grafu</i>
    plt.savefig(f"butterfly_{n:04d}.png")
&nbsp;
    <i># zobrazení grafu</i>
    <i># plt.show()</i>
    plt.close()
&nbsp;
&nbsp;
for n in np.linspace(50, 1500, 100):
    draw_butterfly_effect(int(n))
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu naleznete
na adrese <a
href="https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_butterfly_effect.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_butterfly_effect.py</a>.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Výsledná animace a vybrané snímky</h2>

<p>Výsledná animace převedená do GIFu vypadá následovně:</p>

*** image ***
<p><i>Obrázek 15: Animace chování Lorenzova systému pro tři různé vstupní podmínky.</i></p>

<p>Podívejme se navíc na jednotlivé snímky, které ukazují charakter Lorenzova systému:</p>

*** image ***
<p><i>Obrázek 16: Systémy byly zpočátku prakticky totožné, zde se ovšem již jejich cesty rozdělují.</i></p>

*** image ***
<p><i>Obrázek 17: Tři různé trajektorie, nyní již zcela odlišné.</i></p>

*** image ***
<p><i>Obrázek 18: Ani jeden z&nbsp;průběhů se nestabilizuje v&nbsp;jednom
z&nbsp;bodů C1 či C2, neustále se nemohou &bdquo;rozhodnout&ldquo;.</i></p>

*** image ***
<p><i>Obrázek 19: Navíc se křivky nikdy neprotnou; to by totiž znamenalo, že se
jejich křivky opět spojí (fázový prostor je zde totožný s&nbsp;vektorovým
prostorem).</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Studie tvarů atraktoru při změně parametrů &sigma; i <strong>r</strong></h2>

<pre>
<i># Vykreslení Lorenzova atraktoru s různými parametry s a r</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
&nbsp;
def lorenz(x, y, z, s=10, r=28, b=2.667):
    """Výpočet dalšího bodu Lorenzove mod2 atraktoru."""
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 1000
&nbsp;
&nbsp;
def draw_lorenz_for_input_values(ax, dt, n, x0, y0, z0, s, r, b):
    <i># prozatím prázdné pole připravené pro výpočet</i>
    x = np.zeros((n,))
    y = np.zeros((n,))
    z = np.zeros((n,))
&nbsp;
    <i># počáteční hodnoty</i>
    x[0], y[0], z[0] = (x0, y0, z0)
&nbsp;
    <i># vlastní výpočet atraktoru</i>
    for i in range(n - 1):
        x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i], s, r, b)
        x[i + 1] = x[i] + x_dot * dt
        y[i + 1] = y[i] + y_dot * dt
        z[i + 1] = z[i] + z_dot * dt
&nbsp;
    <i># vykreslení grafu</i>
    ax.plot(y.copy(), z.copy())
&nbsp;
&nbsp;
<i># konstrukce 2D grafu</i>
fig = plt.figure(figsize=(8, 6))
&nbsp;
b = 2.667
&nbsp;
<i># vykreslení Lorenzova atraktoru s různými parametry s a r</i>
for si in range(5):
    for ri in range(5):
        ax = fig.add_subplot(5, 5, si + 1 + ri * 5)
        ax.axes.get_xaxis().set_visible(False)
        ax.axes.get_yaxis().set_visible(False)
        draw_lorenz_for_input_values(
            ax, dt, n, 0.0, 1.0, 1.05, si * 2.0 + 1.0, 4.0 + ri * 4, b
        )
&nbsp;
<i># změna velikosti komponent v grafu.</i>
plt.tight_layout()
&nbsp;
<i># uložení grafu</i>
plt.savefig("variable_s_r_params_multiplot.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu naleznete na adrese <a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/lorenz_change_params_multiplot.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/lorenz_change_params_multiplot.py</a>.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Vliv počátečních podmínek na tvar Lorenzova systému</h2>

<pre>
</pre>

<p><div class="rs-tip-major">Poznámka: zdrojový kód tohoto příkladu naleznete na adrese <a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a>.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny skripty, které byly v&nbsp;předchozích kapitolách použity pro tvorbu
obrázků a animací, jsou uloženy v&nbsp;Git repositáři dostupném na adrese <a
href="https://github.com/tisnik/fractals/">https://github.com/tisnik/fractals/</a>.
Následují odkazy na jednotlivé příklady:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis příkladu</th><th>Cesta ke zdrojovému kódu příkladu</th></tr>
<tr><td> 1</td><td>Lorenz_x_y_z.py</td><td>zobrazení vývoje hodnot x, y a z v&nbsp;trojici samostatných grafů</td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_x_y_z.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_x_y_z.py</a></td></tr>
<tr><td> 2</td><td>Lorenz.py</td><td>zobrazení fázového prostoru ve formě 3D grafu popř.&nbsp;průmětů do vybraných rovin</td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz.py</a></td></tr>
<tr><td> 3</td><td>Lorenz_butterfly_effect.py</td><td>animace efektu motýlích křídel</td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_butterfly_effect.py">https://github.com/tisnik/fractals/blob/master/attractors/3D/Lorenz_butterfly_effect.py</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/fractals/blob/master/attractors/3D/">https://github.com/tisnik/fractals/blob/master/attractors/3D/</a></td></tr>
</table>

lorenz_2d_dynamic_multiplot.py
lorenz_2d_dynamic.py
lorenz_change_params_multiplot.py
lorenz_change_params.py
lorenz_map.py
Lorenz-mod-2.py
Pickover.py
rossler_map.py
Rossler.py
Wang-Sun.py

lorenz_change_params_anim_2.py
lorenz_change_params_anim.py



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Lorenz Attractor by Dr. Bruce Stewart<br />
<a href="https://www.youtube.com/watch?v=YS_xtBMUrJg">https://www.youtube.com/watch?v=YS_xtBMUrJg</a>
</li>

<li>Welcome - Dynamical Systems | Intro Lecture<br />
<a href="https://www.youtube.com/watch?v=41P4vFP7RWo">https://www.youtube.com/watch?v=41P4vFP7RWo</a>
</li>

<li>The Lorenz Equations - Dynamical Systems | Lecture 27<br />
<a href="https://www.youtube.com/watch?v=0Rpy-xSsAo8">https://www.youtube.com/watch?v=0Rpy-xSsAo8</a>
</li>

<li>Phase space<br />
<a href="https://en.wikipedia.org/wiki/Phase_space">https://en.wikipedia.org/wiki/Phase_space</a>
</li>

<li>Fázový prostor<br />
<a href="https://cs.wikipedia.org/wiki/F%C3%A1zov%C3%BD_prostor">https://cs.wikipedia.org/wiki/F%C3%A1zov%C3%BD_prostor</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03</a>
</li>

<li>Lorenz system<br />
<a href="https://en.wikipedia.org/wiki/Lorenz_system">https://en.wikipedia.org/wiki/Lorenz_system</a>
</li>

<li>The Lorenz system - An introduction to chaos<br />
<a href="https://www.math.toronto.edu/kzhang/teaching/courses/mat332-2022/_8-lorenz-system/">https://www.math.toronto.edu/kzhang/teaching/courses/mat332-2022/_8-lorenz-system/</a>
</li>

<li>Dynamical system<br />
<a href="https://en.wikipedia.org/wiki/Dynamical_system">https://en.wikipedia.org/wiki/Dynamical_system</a>
</li>

<li>What are Dynamical Systems?<br />
<a href="https://math.libretexts.org/Bookshelves/Scientific_Computing_Simulations_and_Modeling/Introduction_to_the_Modeling_and_Analysis_of_Complex_Systems_(Sayama)/03%3A_Basics_of_Dynamical_Systems/3.01%3A_What_are_Dynamical_Systems%3F">https://math.libretexts.org/Bookshelves/Scientific_Computing_Simulations_and_Modeling/Introduction_to_the_Modeling_and_Analysis_of_Complex_Systems_(Sayama)/03%3A_Basics_of_Dynamical_Systems/3.01%3A_What_are_Dynamical_Systems%3F</a>
</li>

<li>TEACHING MATHEMATICS WITH A HISTORICAL PERSPECTIVE: Lecture 11: Dynamical systems<br />
<a href="https://abel.math.harvard.edu/~knill/teaching/mathe320_2022/handouts/10-dynamics.pdf">https://abel.math.harvard.edu/~knill/teaching/mathe320_2022/handouts/10-dynamics.pdf</a>
</li>

<li>Emergence (Wikipedia CS)<br />
<a href="https://cs.wikipedia.org/wiki/Emergence">https://cs.wikipedia.org/wiki/Emergence</a>
</li>

<li>Emergence (Wikipedia EN)<br />
<a href="https://en.wikipedia.org/wiki/Emergence">https://en.wikipedia.org/wiki/Emergence</a>
</li>

<li>Particle Life: Vivid structures from rudimentary rules<br />
<a href="https://particle-life.com/">https://particle-life.com/</a>
</li>

<li>Self-organization<br />
<a href="https://en.wikipedia.org/wiki/Self-organization">https://en.wikipedia.org/wiki/Self-organization</a>
</li>

<li>Samoorganizace<br />
<a href="https://cs.wikipedia.org/wiki/Samoorganizace">https://cs.wikipedia.org/wiki/Samoorganizace</a>
</li>

<li>Spontaneous order<br />
<a href="https://en.wikipedia.org/wiki/Spontaneous_order">https://en.wikipedia.org/wiki/Spontaneous_order</a>
</li>

<li>NumPy Home Page<br />
<a href="http://www.numpy.org/">http://www.numpy.org/</a>
</li>

<li>NumPy v1.10 Manual<br />
<a href="http://docs.scipy.org/doc/numpy/index.html">http://docs.scipy.org/doc/numpy/index.html</a>
</li>

<li>NumPy (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/NumPy">https://en.wikipedia.org/wiki/NumPy</a>
</li>

<li>Matplotlib Home Page<br />
<a href="http://matplotlib.org/">http://matplotlib.org/</a>
</li>

<li>matplotlib (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Matplotlib">https://en.wikipedia.org/wiki/Matplotlib</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

