<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Čipy dsPIC a instrukce specifické pro jejich DSP modul</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Čipy dsPIC a instrukce specifické pro jejich DSP modul</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V&nbsp;dnešním článku téma šestnáctibitových mikrořadičů řady PIC24 a dsPIC dokončíme. Budeme se zabývat převážně těmi instrukcemi, které jsou specifické pro čipy dsPIC a pro jejich DSP modul, nejprve si však pro úplnost popíšeme zbývající instrukce společné pro PIC24 i dsPIC.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Přímé a nepřímé skoky</a></p>
<p><a href="#k02">2. Skoky do podprogramů a výskoky z&nbsp;podprogramů</a></p>
<p><a href="#k03">3. Práce se zásobníkem, vytvoření a zrušení zásobníkového rámce</a></p>
<p><a href="#k04">4. Instrukce specifické pro DSP modul mikrořadičů dsPIC</a></p>
<p><a href="#k05">5. Formáty numerických hodnot zpracovávaných v&nbsp;DSP modulu</a></p>
<p><a href="#k06">6. MCU násobička</a></p>
<p><a href="#k07">7. DSP násobička</a></p>
<p><a href="#k08">7. Instrukce určené pro práci s&nbsp;akumulátory DSP modulu</a></p>
<p><a href="#k09">8. Akumulátory a podmíněné skoky</a></p>
<p><a href="#k10">10. Instrukce <strong>REPEAT</strong> &ndash; jednoduchá forma počítané programové smyčky</a></p>
<p><a href="#k12">11. Implementace programové smyčky s&nbsp;využitím instrukce <strong>DO</strong></a></p>
<p><a href="#k12">12. Zásobník umožňující vnořování smyček <strong>DO</strong></a></p>
<p><a href="#k13">13. Registry použité ve smyčkách</a></p>
<p><a href="#k14">14. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Přímé a nepřímé skoky</h2>

<p><a
href="https://www.root.cz/clanky/instrukcni-soubor-cipu-pic24-a-dspic/">V&nbsp;předchozí
části</a> tohoto seriálu jsme si mj.&nbsp;popsali i skupinu skokových instrukcí
<strong>BRA</strong>. Základní instrukce provádí nepodmíněný skok, další
instrukce pak skok podmíněný. Všechny skoky <strong>BRA</strong> jsou však
relativní, což zde konkrétně znamená, že pokud je podmínka splněna, je
k&nbsp;obsahu registru <strong>PC</strong> přičtena šestnáctibitová konstanta
se znaménkem, která je součástí instrukčního slova a která je navíc vynásobena
dvěma:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>BRA</td><td>nepodmíněný skok</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>BRA C</td><td>skok při Carry=1</td></tr>
<tr><td>BRA NC</td><td>skok při Carry=0</td></tr>
<tr><td>BRA Z</td><td>skok při Zero=1</td></tr>
<tr><td>BRA NZ</td><td>skok při Zero=0</td></tr>
<tr><td>BRA N</td><td>skok při Negative=1</td></tr>
<tr><td>BRA NN</td><td>skok při Negative=0</td></tr>
<tr><td>BRA OV</td><td>skok při Overflow=1</td></tr>
<tr><td>BRA NOV</td><td>skok při Overflow=0</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>BRA GE</td><td>skok při podmínce &ge; (signed)</td></tr>
<tr><td>BRA GEU</td><td>skok při podmínce &ge; (unsigned)</td></tr>
<tr><td>BRA GT</td><td>skok při podmínce &gt; (signed)</td></tr>
<tr><td>BRA GTU</td><td>skok při podmínce &gt; (unsigned)</td></tr>
<tr><td>BRA LE</td><td>skok při podmínce &le; (signed)</td></tr>
<tr><td>BRA LEU</td><td>skok při podmínce &le; (unsigned)</td></tr>
<tr><td>BRA LT</td><td>skok při podmínce &lt; (signed)</td></tr>
<tr><td>BRA LTU</td><td>skok při podmínce &lt; (unsigned)</td></tr>
</table>

<p>Kromě toho však v&nbsp;instrukčním souboru nalezneme i několik instrukcí pro
provedení přímých či nepřímých absolutních skoků. Tyto instrukce se mj.&nbsp;i
z&nbsp;historických důvodů (osmibitové PICy) jmenují <strong>GOTO</strong> a
mohou být použity buď s&nbsp;absolutní adresou či s&nbsp;adresou uloženou do
buňky paměti adresované vybraným pracovním registrem (nepřímý skok). Poslední
instrukce <strong>GOTO.L</strong> je zvláštní tím, že provádí skok na 24bitovou
adresu uloženou v&nbsp;pracovním registru Wn (spodních šestnáct bitů adresy) a
v&nbsp;registru Wn+1 (spodní polovina tohoto registru tvoří bity adresy
s&nbsp;indexy 16 až 23):</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>GOTO ...</td><td>přímý skok na zadanou adresu</td></tr>
<tr><td>GOTO Wn</td><td>nepřímý skok na adresu uloženou v&nbsp;pracovním registru Wn</td></tr>
<tr><td>GOTO.L Wn</td><td>nepřímý &bdquo;dlouhý&ldquo; skok na adresu uloženou v&nbsp;pracovním registru Wn a Wn+1</td></tr>
</table>



<p><a name="k02"></a></p>
<h2 id="k02">2. Skoky do podprogramů a výskoky z&nbsp;podprogramů</h2>

<p>V&nbsp;instrukčním souboru nalezneme i několik instrukcí určených pro
provedení skoku do podprogramu (zavolání podprogramu) a pro návrat z&nbsp;něj.
Návratová adresa je samozřejmě ukládána na zásobník, a to konkrétně ve dvou
slovech: nejdříve spodních šestnáct bitů návratové adresy následované osmi
nejvyššími bity doplněnými nulami. Ukazatel na vrchol zásobníku je tvořen
pracovním registrem <strong>W15</strong>. První tři instrukce pro zavolání
podprogramu jsou vlastně obdobou instrukcí, o nichž jsme se zmínili <a
href="#k01">v&nbsp;předchozí kapitole</a>, samozřejmě s&nbsp;tím rozdílem, že
se ještě před skokem uloží návratová hodnota na zásobník. Za zmínku stojí i
instrukce <strong>RETLW</strong>, která je pro procesory PIC typická, protože
podobná instrukce (návrat ze subrutiny s&nbsp;naplněním pracovního registru
konstantou), se používala i u osmibitových čipů PIC (tam ovšem existoval jen
jediný pracovní registr <strong>W</strong>):</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>CALL ...</td><td>přímý skok do podprogramu na zadanou adresu</td></tr>
<tr><td>CALL Wn</td><td>nepřímý skok do podprogramu na adresu uloženou v&nbsp;pracovním registru Wn</td></tr>
<tr><td>CALL.L Wn</td><td>nepřímý &bdquo;dlouhý&ldquo; skok do podprogramu na adresu uloženou v&nbsp;pracovním registru Wn a Wn+1</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>RCALL ...</td><td>relativní skok vůči PC</td></tr>
<tr><td>RCALL Wn</td><td>relativní skok na adresu PC+Wn</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>RETURN</td><td>návrat z&nbsp;podprogramu</td></tr>
<tr><td>RETLW #konstanta, Wn</td><td>návrat z&nbsp;podprogramu s&nbsp;uložením konstanty do registru Wn</td></tr>
</table>



<p><a name="k03"></a></p>
<h2 id="k03">3. Práce se zásobníkem, vytvoření a zrušení zásobníkového rámce</h2>

<p>Další skupina osmi instrukcí slouží pro ukládání běžných dat na zásobník.
Buď se ukládají jednotlivá slova do jediného prvku zásobníku, nebo je možné
jedinou instrukcí uložit (popř.&nbsp;obnovit) dva po sobě následující pracovní
registry. Připomeňme si, že termínem &bdquo;file register&ldquo; je
v&nbsp;kontextu mikrořadičů PIC24 a dsPIC myšlena libovolná přímá adresa 0x0000
až 0x1fff:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>PUSH f</td><td>uložení &bdquo;file registru&ldquo; na zásobník</td></tr>
<tr><td>PUSH Wn</td><td>uložení pracovního registru na zásobník</td></tr>
<tr><td>PUSH.D Wn</td><td>uložení dvou pracovních registrů na zásobník</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>POP f</td><td>obnovení &bdquo;file registru&ldquo; ze zásobníku</td></tr>
<tr><td>POP Wn</td><td>obnovení pracovního registru ze zásobníku</td></tr>
<tr><td>POP.D Wn</td><td>obnovení dvou pracovních registrů ze zásobníku</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>LNK</td><td>vytvoření zásobníkového rámce</td></tr>
<tr><td>ULNK</td><td>zrušení zásobníkového rámce</td></tr>
</table>

<p>Poslední dvě instrukce si zaslouží bližší popis. Tyto instrukce totiž
umožňují vytvořit s&nbsp;použitím pracovního registru <strong>W14</strong>
takzvaný &bdquo;zásobníkový rámec&ldquo; (<i>stack frame</i>) využívaný při
volání funkcí prakticky všemi vyššími programovacími jazyky. Instrukce
<strong>LNK</strong> je zavolána s&nbsp;konstantou (operandem) určující, jak
velký zásobníkový rámec se má vytvořit, tj.&nbsp;o kolik prvků se má posunout
ukazatel na vrchol zásobníku. Opakem je funkce <strong>ULNK</strong>, která
obnoví původní adresu ukazatele na vrchol zásobníku (z&nbsp;registru
<strong>W14</strong>).</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Instrukce specifické pro DSP modul mikrořadičů dsPIC</h2>

<p>V&nbsp;následujících kapitolách se budeme zabývat převážně těmi instrukcemi,
které se používají pro práci s&nbsp;DSP modulem. Ten nalezneme jen u čipů řady
dsPIC30F, dsPIC33F a dsPIC33E, nikoli u řad PIC24F, PIC24H či PIC24E.</p>

<p>U čipů dsPIC30F, dsPIC33F a dsPIC33E se kromě pracovních registrů setkáme i
s&nbsp;akumulátory pojmenovanými <strong>ACCA</strong> a <strong>ACCB</strong>,
které se používají u mnoha operací pro zpracování signálu. Tyto akumulátory
jsou dva a každý z&nbsp;nich má šířku 40 bitů, což je v&nbsp;oblasti DSP
poměrně obvyklá hodnota (stačí si připomenout články o slavném digitálním
signálovém procesoru TMS320C10). Z&nbsp;pohledu programátora je každý
akumulátor složen ze tří registrů mapovaných do RAM:</p>

<table>
<tr><th>Akumulátor</th><th>Horních 8 bitů</th><th>Prostředních 16 bitů</th><th>Spodních 16 bitů</th></tr>
<tr><td>ACCA</td><td>ACCAU</td><td>ACCAH</td><td>ACCAL</td></tr>
<tr><td>ACCB</td><td>ACCBU</td><td>ACCBH</td><td>ACCBL</td></tr>
</table>

<p>Poznámka: akumulátory jsou mapovány do operační paměti, takže k&nbsp;nim lze
přistupovat i nepřímo přes jejich adresu.</p>

<p>Navíc je u všech čipů dsPIC rozšířen i registr <strong>CORCON</strong>, a to
konkrétně o následující bity:</p>

<ul>
<li>Řízení režimu saturace u akumulátorů <strong>ACCA</strong> a <strong>ACCB</strong>.</li>
<li>Řízení zaokrouhlovacího režimu.</li>
<li>Nastavení násobičky u DSP operací.</li>
<li>Okamžité ukončení smyčky <strong>DO</strong>.</li>
<li>Získání informací o počtu zanoření smyčky <strong>DO</strong> (jen u těch čipů, které to podporují).</li>
</ul>



<p><a name="k05"></a></p>
<h2 id="k05">5. Formáty numerických hodnot zpracovávaných v&nbsp;DSP modulu</h2>

<p>V&nbsp;mnoha DSP operacích jsou podporovány dva formáty numerických hodnot a
tři šířky zpracovávaných slov. Lze používat 16bitová slova, 32bitová slova i
40bitová slova (což přesně odpovídá šířce akumulátorů a jejich částí
<strong>ACCAU</strong>+<strong>ACCAH</strong>+<strong>ACCAL</strong>).
Jednodušší a všeobecně známý je samozřejmě celočíselný formát, při jehož
použití jsou numerické hodnoty reprezentovány v&nbsp;systému dvojkového
doplňku. U 16bitových a 32bitových slov je navíc podporován i formát čísel
nazvaný <i>fractional</i>. Nejedná se vlastně o nic jiného, než o jednu
z&nbsp;možností reprezentace hodnot v&nbsp;systému pevné řádové čárky (<i>fixed
point</i>), ovšem tak, že čárka není ve slově umístěna libovolně, ale je
vložena ihned za znaménkový bit (používá se běžný dvojkový doplněk).</p>

<pre>
15 14 13 12 11 10 9  8  7  6  5  4  3  2  1  0
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|s ,                                         |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
</pre>

<p>40bitový formát s&nbsp;pevnou řádovou čárkou je poněkud odlišný, neboť
nejvyšších osm bitů je celočíselných. Těchto horních osm bitů se někdy nazývá
<i>guard bits</i>, protože skutečně slouží k&nbsp;tomu, aby nedošlo
k&nbsp;přetečení u mnoha operací ani k&nbsp;saturaci.</p>

<p>Podívejme se nyní na rozsahy a přesnosti u jednotlivých způsobů
reprezentace:</p>

<table>
<tr><th>Šířka</th><th>Rozsah (integer)</th><th>Rozsah (fractional)</th><th>Rozlišení (fractional)</th></tr>
<tr><td>16 bitů</td><td>-32768 až 32767</td><td>-1,0 až 1,0-2<sup>-15</sup></td><td>3.052 &times; 10<sup>-5</sup></td></tr>
<tr><td>32 bitů</td><td>-2147483648 až 2147483647</td><td>-1,0 až 1,0-2<sup>-31</sup></td><td>4.657 &times; 10<sup>-10</sup></td></tr>
<tr><td>40 bitů</td><td>-549755813888 až 549755813887</td><td>-256,0 až 256,0-2<sup>-31</sup></td><td>4.657 &times; 10<sup>-10</sup></td></tr>
</table>



<p><a name="k06"></a></p>
<h2 id="k06">6. MCU násobička</h2>

<p>Jedním z&nbsp;nejdůležitějších částí DSP modulu je, podobně jako u prakticky
všech dalších digitálních signálových procesorů, násobička. Kromě toho lze
použít i násobičku, která je součástí MCU (všech řad). I z&nbsp;tohoto důvodu
mají programátoři k&nbsp;dispozici následující čtveřici instrukcí (pro MCU
násobičku), které vynásobí dva šestnáctibitové operandy a uloží výsledek (který
může být až 32bitový) do jednoho z&nbsp;akumulátorů <strong>ACCA</strong> či
<strong>ACCB</strong>:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>MUL.SS</td><td>vynásobení dvou operandů se znaménkem s&nbsp;uložením výsledku do akumulátoru</td></tr>
<tr><td>MUL.SU</td><td>vynásobení operandu se znaménkem s&nbsp;operandem bez znaménka s&nbsp;uložením výsledku do akumulátoru</td></tr>
<tr><td>MUL.US</td><td>vynásobení operandu bez znaménka s&nbsp;operandem se znaménkem s&nbsp;uložením výsledku do akumulátoru</td></tr>
<tr><td>MUL.UU</td><td>vynásobení dvou operandů bez znaménka s&nbsp;uložením výsledku do akumulátoru</td></tr>
</table>

<p>Prvním z&nbsp;operandů je vždy pracovní registr <strong>Wn</strong>, druhým
z&nbsp;operandů pak buď další pracovní registr nebo hodnota adresovaná
následovně:</p>

<table>
<tr><th>Zápis</th><th>Význam</th></tr>
<tr><td>[Ws]  </td><td>buňka paměti adresovaná registrem Ws</td></tr>
<tr><td>[Ws++]</td><td>dtto s&nbsp;post-inkrementem adresy (práce s&nbsp;poli)</td></tr>
<tr><td>[Ws--]</td><td>dtto s&nbsp;post-dekrementem adresy (práce s&nbsp;poli)</td></tr>
<tr><td>[++Ws]</td><td>dtto s&nbsp;pre-inkrementem adresy (práce s&nbsp;poli)</td></tr>
<tr><td>[--Ws]</td><td>dtto s&nbsp;pre-dekrementem adresy (práce s&nbsp;poli)</td></tr>
</table>



<p><a name="k07"></a></p>
<h2 id="k07">7. DSP násobička</h2>

<p>Mezi instrukce prováděné na DSP násobičce patří především tato trojice:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>MPY</td><td>vynásobení dvou operandů s&nbsp;uložením výsledku do akumulátoru</td></tr>
<tr><td>MPY.N</td><td>vynásobení dvou operandů (u jednoho z&nbsp;operandů se otočí znaménko) s&nbsp;uložením výsledku do akumulátoru</td></tr>
<tr><td>MAC</td><td>operace typu multiply &amp; accumulate</td></tr>
<tr><td>MSC</td><td>operace typu multiply &amp; subtract</td></tr>
</table>



<p><a name="k08"></a></p>
<h2 id="k08">8. Instrukce určené pro práci s&nbsp;akumulátory DSP modulu</h2>

<p>Další skupina instrukcí slouží pro manipulaci s&nbsp;obsahem akumulátorů.
Jedná se jak o běžné aritmetické operace, tak o operace typické pouze pro DSP
modul:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>ADD  </td><td>součet obou akumulátorů</td></tr>
<tr><td>ADD  </td><td>přičtení 16bitové hodnot k&nbsp;akumulátor</td></tr>
<tr><td>SUB  </td><td>rozdíl obou akumulátorů</td></tr>
<tr><td>NEG  </td><td>negace hodnoty uložené v&nbsp;akumulátoru</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>LAC  </td><td>načtení hodnoty do akumulátor</td></tr>
<tr><td>SAC  </td><td>uložení hodnoty z&nbsp;akumulátoru</td></tr>
<tr><td>SAC.R</td><td>dtto ale se zaokrouhlením</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>SFTAC Acc, #konstanta</td><td>aritmetický posun hodnoty uložené v&nbsp;akumulátoru</td></tr>
<tr><td>SFTAC Acc, Wn</td><td>aritmetický posun hodnoty uložené v&nbsp;akumulátoru</td></tr>
</table>

<p>Poznámka: instrukce <strong>SFTAC</strong> se sice jmenuje <i>Arithmetic
Shift Accumulator</i>, ve skutečnosti však leží konstanta udávající posun
v&nbsp;rozsahu -16 až 16, takže ve skutečnosti lze provést posun jak doprava
tak i doleva. Totéž platí při použití pracovního registru Wn.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Akumulátory a podmíněné skoky</h2>

<p>Další skupina instrukcí je poměrně malá. Nalezneme zde totiž podmíněné
skoky, které jsou provedeny či naopak neprovedeny na základě výsledku poslední
operace s&nbsp;vybraným akumulátorem. Lze otestovat přetečení hodnoty (pokud je
povoleno) či fakt, že při poslední operaci došlo k&nbsp;saturaci:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>BRA OA, ...</td><td>skok v&nbsp;případě, že došlo k&nbsp;přetečení hodnoty akumulátoru ACCA</td></tr>
<tr><td>BRA OB, ...</td><td>skok v&nbsp;případě, že došlo k&nbsp;přetečení hodnoty akumulátoru ACCB</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>BRA SA, ...</td><td>skok v&nbsp;případě, že došlo k&nbsp;saturaci hodnoty akumulátoru ACCA</td></tr>
<tr><td>BRA SB, ...</td><td>skok v&nbsp;případě, že došlo k&nbsp;saturaci hodnoty akumulátoru ACCB</td></tr>
</table>

<p>Poznámka: všechny tyto skokové instrukce jsou opět relativní, podobně jako
další varianty instrukce <strong>BRA</strong>.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Instrukce <strong>REPEAT</strong> &ndash; jednoduchá forma počítané programové smyčky</h2>

<p>Další dvě instrukce ve skutečnosti nepatří do DSP modulu, protože jsou
k&nbsp;dispozici i na mikrořadičích řady PIC24. Tyto instrukce slouží
k&nbsp;opakování následující instrukce, přičemž počet opakování je buď
specifikován konstantou či obsahem vybraného pracovního registru Wn. Počet
opakování je přitom vždy o jedničku větší než hodnota konstanty nebo hodnota
získaná z&nbsp;pracovního registru:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>REPEAT #konstanta</td><td>opakování další instrukce (konstanta+1)&times;</td></tr>
<tr><td>REPEAT Wn</td><td>opakování další instrukce (Wn+1)&times;</td></tr>
</table>

<p>Poznámka: s&nbsp;těmito instrukcemi jsme se již setkali při popisu instrukcí
<strong>DIVF</strong>, <strong>DIV.S</strong>, <strong>DIV.SD</strong>,
<strong>DIV.U</strong> a <strong>DIV.UD</strong>, které je nutné volat
osmnáctkrát, protože výpočet je iterativní.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Implementace programové smyčky s&nbsp;využitím instrukce <strong>DO</strong></h2>

<p>Kromě instrukce <strong>REPEAT</strong> umožňující opakovat jen jedinou
instrukci lze použít i instrukci nazvanou <strong>DO</strong> sloužící
k&nbsp;realizaci skutečné programové smyčky, v&nbsp;jejímž těle se může
nacházet hned několik jiných instrukcí. Instrukce <strong>DO</strong> se od
<strong>REPEAT</strong> odlišuje především tím, že kromě specifikace počtu
opakování obsahuje tato instrukce i druhý operand určující velikost těla
programové smyčky. Tento operand se používá stejně jako operand u instrukce
<strong>BRA</strong> &ndash; jeho hodnota se přičte k&nbsp;registru
<strong>PC</strong> a výsledkem je adresa poslední instrukce ve smyčce:</p>

<table>
<tr><th>Instrukce</th><th>Stručný popis</th></tr>
<tr><td>DO #konstanta, ...</td><td>opakování kódu mezi touto instrukcí a PC+offset (#konstanta+1)&times;</td></tr>
<tr><td>DO Wn, ...</td><td>opakování kódu mezi touto instrukcí a PC+offset (Wn)&times;</td></tr>
</table>

<p>Poznámka: tyto instrukce využívají pomocné registry <strong>DCOUNT</strong>,
<strong>DOSTART</strong> a <strong>DOEND</strong>, jejichž hodnoty
&bdquo;přežijí&ldquo; i vstup do přerušovací rutiny. To znamená, že smyčku
<strong>DO</strong> je možné přerušit a poté se vrátit k&nbsp;jejímu
provádění.</p>

<p>Příklad použití:</p>

<pre>
01C000 LOOP12: <strong>DO #0x160, END12</strong>
01C004         DEC W1, W2; First instruction in loop
01C006 ...
01C008 ...
01C00A ...
01C00C ...
01C00E ...
01C012 NOP
01C014 END12: NOP
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Zásobník umožňující vnořování smyček <strong>DO</strong></h2>

<p>Na čipech dsPIC33E (ovšem nikoli na ostatních řadách) je kromě registrů
<strong>DOSTART</strong>, <strong>DOEND</strong> a <strong>DCOUNT</strong>
k&nbsp;dispozici minizásobník s&nbsp;několika úrovněmi (maximálně sedmi). Tento
minizásobník je použit pro uložení zmíněných tří speciálních registrů a slouží
tak k&nbsp;implementaci vnořených smyček <strong>DO</strong>. Vzhledem
k&nbsp;tomu, že tento zásobník může obsahovat jen sedm prvků, je ukazatel na
jeho vrchol pouze tříbitový (hodnota 000 značí, že je zásobník prázdný a
mikrořadič tedy žádnou smyčku <strong>DO</strong> neprovádí). Jeho struktura je
jednoduchá:</p>

<pre>
DL
000        prázdný
001  DOSTART  DOEND  DCOUNT
010  DOSTART  DOEND  DCOUNT
011  DOSTART  DOEND  DCOUNT
...
</pre>

<p>Poznámka: DL je ve skutečnosti tříbitové pole stavového registru
<strong>CORCON</strong>, viz též následující kapitolu.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Registry použité ve smyčkách</h2>

<p>V&nbsp;programových smyčkách implementovaných na úrovni zdrojového kódu se
používají tyto registry či jejich části (mnohé jsme si již popsali
v&nbsp;předchozích kapitolách):</p>

<table>
<tr><th>Registr</th><th>Šířka</th><th>Význam</th></tr>
<tr><td>RCOUNT</td><td>14b</td><td>počet opakování instrukce za <strong>REPEAT</strong></td></tr>
<tr><td>DCOUNT</td><td>14b</td><td>počet opakování smyčky <strong>DO</strong></td></tr>
<tr><td>DOSTART</td><td>24b</td><td>naplněn adresou první instrukce za <strong>DO</strong> (tj.&nbsp;první instrukce ve smyčce)</td></tr>
<tr><td>DOEND</td><td>24b</td><td>naplněn adresou <strong>PC</strong>+expr při vykonání instrukce <strong>DO</strong></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>CORCON.DA</td><td>1b</td><td>pokud je nastaven na 1, provádí se smyčka <strong>DO</strong></td></tr>
<tr><td>CORCON.RA</td><td>1b</td><td>pokud je nastaven na 1, provádí se smyčka <strong>REPEAT</strong></td></tr>
<tr><td>CORCON.DL</td><td>3b</td><td>ukazatel na vrchol minizásobníku s&nbsp;obsahem DCOUNT, DOSTART a DOEND</td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Odkazy na Internetu</h2>

<ol>

<li>Stránky společnosti Microchip<br />
<a href="http://www.microchip.com/">http://www.microchip.com/</a>
</li>

<li>Mikrořadiče řady PIC10<br />
<a href="http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1009">http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1009</a>
</li>

<li>Mikrořadiče řady PIC12<br />
<a href="http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1001">http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1001</a>
</li>

<li>Mikrořadiče řady PIC16<br />
<a href="http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1002">http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1002</a>
</li>

<li>Mikrořadiče řady PIC18<br />
<a href="http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1004">http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=1004</a>
</li>

<li>Šestnáctibitové mikrořadiče PIC<br />
<a href="http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=20">http://www.microchip.com/ParamChartSearch/chart.aspx?branchID=20</a>
</li>

<li>Microchip's 32-bit MCUs<br />
<a href="http://www.microchip.com/design-centers/32-bit">http://www.microchip.com/design-centers/32-bit</a>
</li>

<li>Development Tools (oficiálně dostupné nástroje pro PIC)<br />
<a href="http://www.microchip.com/development-tools/">http://www.microchip.com/development-tools/</a>
</li>

<li>Vývojové nástroje pro osmibitové mikrořadiče PIC<br />
<a href="https://www.root.cz/clanky/vyvojove-nastroje-pro-osmibitove-mikroradice-pic/">https://www.root.cz/clanky/vyvojove-nastroje-pro-osmibitove-mikroradice-pic/</a>
</li>

<li>Mikroprocesory s&nbsp;architekturou MIPS<br />
<a href="https://www.root.cz/clanky/procesory-s-architekturou-risc-v-pracovnich-stanicich-a-serverech/">https://www.root.cz/clanky/procesory-s-architekturou-risc-v-pracovnich-stanicich-a-serverech/</a>
</li>

<li>gpsim Home Page<br />
<a href="http://gpsim.sourceforge.net/gpsim.html">http://gpsim.sourceforge.net/gpsim.html</a>
</li>

<li>Gpsim (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Gpsim">https://en.wikipedia.org/wiki/Gpsim</a>
</li>

<li>Digital Signal Processors (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/overview.page">http://www.ti.com/lsds/ti/processors/dsp/overview.page</a>
</li>

<li>C674x Low Power DSP (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page">http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page</a>
</li>

<li>TMS320C30 (stránky TI)<br />
<a href="http://www.ti.com/product/tms320c30">http://www.ti.com/product/tms320c30</a>
</li>

<li>TMS320C6722B<br />
<a href="http://www.ti.com/product/tms320c6722b/description">http://www.ti.com/product/tms320c6722b/description</a>
</li>

<li>Introduction to DSP<br />
<a href="http://www.ti.com/lit/wp/spry281/spry281.pdf">http://www.ti.com/lit/wp/spry281/spry281.pdf</a>
</li>

<li>The Evolution of TMS (Family of DSPs)<br />
<a href="http://www.slideshare.net/moto_modx/theevo1">http://www.slideshare.net/moto_modx/theevo1</a>
</li>

<li>ST10 16-bit MCUs<br />
<a href="http://www.st.com/en/microcontrollers/st10-16-bit-mcus.html?querycriteria=productId=LN1111">http://www.st.com/en/microcontrollers/st10-16-bit-mcus.html?querycriteria=productId=LN1111</a>
</li>

<li>XC800 family<br />
<a href="https://en.wikipedia.org/wiki/XC800_family">https://en.wikipedia.org/wiki/XC800_family</a>
</li>

<li>C166 (stránky společnosti Infineon)<br />
<a href="https://www.infineon.com/cms/en/product/microcontroller/16-bit-c166-microcontroller/channel.html?channel=ff80808112ab681d0112ab6b2eaf0759#ispnTab3">https://www.infineon.com/cms/en/product/microcontroller/16-bit-c166-microcontroller/channel.html?channel=ff80808112ab681d0112ab6b2eaf0759#ispnTab3</a>
</li>

<li>C166 Family<br />
<a href="https://en.wikipedia.org/wiki/C166_family">https://en.wikipedia.org/wiki/C166_family</a>
</li>

<li>Zero-power Microcontrollers for Low-power and High-temperature Applications<br />
<a href="http://en.wikichip.org/w/images/1/17/Atmel_MARC4_brochure.pdf">http://en.wikichip.org/w/images/1/17/Atmel_MARC4_brochure.pdf</a>
</li>

<li>MARC4 Micro-Controller (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/MARC4_Micro-Controller">https://en.wikipedia.org/wiki/MARC4_Micro-Controller</a>
</li>

<li>MARC4 - Atmel<br />
<a href="https://en.wikichip.org/wiki/atmel/marc4">https://en.wikichip.org/wiki/atmel/marc4</a>
</li>

<li>MARC 4bit Microcontrollers Programmer's Guide<br />
<a href="https://en.wikichip.org/w/images/4/44/MARC4_4-bit_Microcontrollers_Programmer%27s_Guide.pdf">https://en.wikichip.org/w/images/4/44/MARC4_4-bit_Microcontrollers_Programmer%27s_Guide.pdf</a>
</li>

<li>MARC4 User's Guide qFORTH Compiler<br />
<a href="https://en.wikichip.org/w/images/2/25/MARC4_User%27s_Guide_qFORTH_Compiler.pdf">https://en.wikichip.org/w/images/2/25/MARC4_User%27s_Guide_qFORTH_Compiler.pdf</a>
</li>

<li>Programovací jazyk Forth a zásobníkové procesory<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-forth-a-zasobnikove-procesory/">http://www.root.cz/clanky/programovaci-jazyk-forth-a-zasobnikove-procesory/</a>
</li>

<li>Seriál Programovací jazyk Forth<br />
<a href="http://www.root.cz/serialy/programovaci-jazyk-forth/">http://www.root.cz/serialy/programovaci-jazyk-forth/</a>
</li>

<li>Programovací jazyk Factor<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-factor/">http://www.root.cz/clanky/programovaci-jazyk-factor/</a>
</li>

<li>PMOS<br />
<a href="https://en.wikipedia.org/wiki/PMOS_logic">https://en.wikipedia.org/wiki/PMOS_logic</a>
</li>

<li>NMOS<br />
<a href="https://en.wikipedia.org/wiki/NMOS_logic">https://en.wikipedia.org/wiki/NMOS_logic</a>
</li>

<li>CMOS<br />
<a href="https://en.wikipedia.org/wiki/CMOS">https://en.wikipedia.org/wiki/CMOS</a>
</li>

<li>Computer History Museum: TMS 1000 4-Bit microcontroller<br />
<a href="http://www.computerhistory.org/collections/catalog/102711697">http://www.computerhistory.org/collections/catalog/102711697</a>
</li>

<li>Texas Instruments TMS1000 microcontroller family<br />
<a href="http://www.cpu-world.com/CPUs/TMS1000/">http://www.cpu-world.com/CPUs/TMS1000/</a>
</li>

<li>Invention History of Microcontroller<br />
<a href="http://www.circuitstoday.com/microcontroller-invention-history">http://www.circuitstoday.com/microcontroller-invention-history</a>
</li>

<li>TMS1000 Series - TI<br />
<a href="https://en.wikichip.org/wiki/ti/tms1000">https://en.wikichip.org/wiki/ti/tms1000</a>
</li>

<li>TMX1795 - TI<br />
<a href="https://en.wikichip.org/wiki/ti/tmx1795">https://en.wikichip.org/wiki/ti/tmx1795</a>
</li>

<li>Milton Bradley Microvision (U.S.) (1979, LCD, 9 Volt (1 or 2), Model# 4952)<br />
<a href="http://www.handheldmuseum.com/MB/uVUS.htm">http://www.handheldmuseum.com/MB/uVUS.htm</a>
</li>

<li>8051 Microcontroller<br />
<a href="http://www.circuitstoday.com/8051-microcontroller">http://www.circuitstoday.com/8051-microcontroller</a>
</li>

<li>4-bit (computer architectures)<br />
<a href="https://en.wikipedia.org/wiki/4-bit">https://en.wikipedia.org/wiki/4-bit</a>
</li>

<li>TMS 1000 Data Manual<br />
<a href="http://blog.kevtris.org/blogfiles/TMS_1000_Data_Manual.pdf">http://blog.kevtris.org/blogfiles/TMS_1000_Data_Manual.pdf</a>
</li>

<li>Considerations for 4-bit processing<br />
<a href="http://www.embeddedinsights.com/channels/2010/12/10/considerations-for-4-bit-processing/">http://www.embeddedinsights.com/channels/2010/12/10/considerations-for-4-bit-processing/</a>
</li>

<li>Are you, or would you consider, using a 4-bit microcontroller?<br />
<a href="http://www.embeddedinsights.com/channels/2010/11/24/are-you-or-would-you-consider-using-a-4-bit-microcontroller/">http://www.embeddedinsights.com/channels/2010/11/24/are-you-or-would-you-consider-using-a-4-bit-microcontroller/</a>
</li>

<li>MARC4 Micro-Controller<br />
<a href="https://en.wikipedia.org/wiki/MARC4_Micro-Controller">https://en.wikipedia.org/wiki/MARC4_Micro-Controller</a>
</li>

<li>The Texas Instruments TMX 1795: the (almost) first, forgotten microprocessor <br />
<a href="http://www.righto.com/2015/05/the-texas-instruments-tmx-1795-first.html">http://www.righto.com/2015/05/the-texas-instruments-tmx-1795-first.html</a>
</li>

<li>O2 Homepage<br />
<a href="http://www.the-nextlevel.com/odyssey2/">http://www.the-nextlevel.com/odyssey2/</a>
</li>

<li>Magnavox Odyssey2 (1978), Philips Videopac G7000 / C52 (1979)<br />
<a href="http://www.mess.org/sysinfo:odyssey2">http://www.mess.org/sysinfo:odyssey2</a>
</li>

<li>The Video Game Critic's Odyssey 2 Reviews <br />
<a href="http://videogamecritic.net/odd.htm">http://videogamecritic.net/odd.htm</a>
</li>

<li>Computer Closet Collection: Magnavox Odyssey^2<br />
<a href="http://www.computercloset.org/MagnavoxOdyssey2.htm">http://www.computercloset.org/MagnavoxOdyssey2.htm</a>
</li>

<li>PHILIPS Videopac C52<br />
<a href="http://old-computers.com/museum/computer.asp?c=1060">http://old-computers.com/museum/computer.asp?c=1060</a>
</li>

<li>O2 Tech. Manual V.1.1 (PDF dokument)<br />
<a href="http://www.atarihq.com/danb/files/o2doc.pdf">http://www.atarihq.com/danb/files/o2doc.pdf</a>
</li>

<li>Magnavox Odyssey<sup>2</sup><br />
<a href="http://www.game-machines.com/consoles/odyssey2.php">http://www.game-machines.com/consoles/odyssey2.php</a>
</li>

<li>Magnavox Odyssey<sup>2</sup> (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Odyssey_2">http://en.wikipedia.org/wiki/Odyssey_2</a>
</li>

<li>Magnavox Odyssey<sup>2</sup> Games (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/List_of_Videopac_games">http://en.wikipedia.org/wiki/List_of_Videopac_games</a>
</li>

<li>TI 16-bit and 32-bit microcontrollers<br />
<a href="http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page">http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page</a>
</li>

<li>TMS 32010 Assembly Language Programmer's Guide (kniha na Amazonu)<br />
<a href="https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423">https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

