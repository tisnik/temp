<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovny pro tvorbu grafického uživatelského rozhraní v Pythonu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovny pro tvorbu grafického uživatelského rozhraní v Pythonu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Knihovny pro tvorbu grafického uživatelského rozhraní v&nbsp;Pythonu</a></p>
<p><a href="#k02">*** 2. Tkinter</a></p>
<p><a href="#k03">*** 3. PyGTK</a></p>
<p><a href="#k04">*** 4. PyQT</a></p>
<p><a href="#k05">*** 5. wx</a></p>
<p><a href="#k06">*** 6. Úvodní informace o knihovně Tk a rozhraní Tkinter</a></p>
<p><a href="#k07">*** 7. Widgety a kontejnery</a></p>
<p><a href="#k08">*** 8. Základní typy widgetů v&nbsp;knihovně Tk/Tkinter</a></p>
<p><a href="#k09">*** 9. Vlastnosti widgetů</a></p>
<p><a href="#k10">*** 10. První demonstrační příklad: zobrazení okna s&nbsp;textem &bdquo;Hello world!&ldquo;</a></p>
<p><a href="#k11">*** 11. Události</a></p>
<p><a href="#k12">*** 12. Druhý příklad: tlačítko reagující na stlačení</a></p>
<p><a href="#k13">*** 13. Třetí příklad: použití anonymní funkce pro reakci na stlačení tlačítka</a></p>
<p><a href="#k14">*** 14. Správci umístění (geometrie)</a></p>
<p><a href="#k15">*** 15. Čtvrtý příklad: umístění čtyř tlačítek do mřížky</a></p>
<p><a href="#k16">*** 16. Pátý příklad: prázdná místa v&nbsp;mřížce</a></p>
<p><a href="#k17">*** 17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">*** 18. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Knihovny pro tvorbu grafického uživatelského rozhraní v&nbsp;Pythonu</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Tkinter</h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. PyGTK</h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. PyQT</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. Úvodní informace o knihovně Tk a rozhraní Tkinter</h2>

<p><strong>Tk</strong> je takzvaný <i>toolkit</i> (z&nbsp;pohledu programovacího jazyka se přitom jedná o knihovnu) určený pro jednoduchý a rychlý vývoj programů obsahujících grafické uživatelské rozhraní. Autorem tohoto toolkitu je, podobně jako v&nbsp;případě programovacího jazyka <strong>Tcl</strong>, John Ousterhout, mezi jehož zájmy v&nbsp;minulosti patřila automatizace (skriptovatelnost) aplikací a právě tvorba grafických uživatelských rozhraní. V&nbsp;minulosti byl tento toolkit velmi oblíbený, proto se dodával (a stále dodává) spolu s&nbsp;instalací programovacího jazyka <strong>Tcl</strong> a &ndash; což nás dnes zajímá mnohem více &ndash; i s&nbsp;jazykem Python společně s&nbsp;rozhraním <strong>Tkinter</strong>. I z&nbsp;tohoto důvodu se také v&nbsp;různých materiálech a dokumentech často setkáme se společným názvem <strong>Tcl/Tk</strong>. Samotný název <strong>Tk</strong> jednoduše znamená zkratku slova <strong>ToolKit</strong>.</p>

<p>Důležitou vlastností <strong>Tk</strong>, která zůstala zachována i v&nbsp;<strong>Tkinteru</strong>, je úsporný, flexibilní a přitom čitelný zápis programu se specifikací ovládacích prvků, jejich vlastností i <i>callback funkcí</i> volaných v&nbsp;důsledku uživatelské činnosti. Udává se, že poměr psaného kódu v&nbsp;<strong>Tcl/Tk</strong> je vůči <strong>Motifu</strong> na hodnotách 1:20 a vůči základnímu <strong>Xlibu</strong> dokonce 1:100! (vše se samozřejmě týká tvorby grafického uživatelského rozhraní). Na tomto místě je však nutné podotknout, že Motif je z&nbsp;dnešního pohledu již zastaralá knihovna a navíc dnes mnoho toolkitů pro GUI podporuje deklaraci grafického uživatelského rozhraní v&nbsp;konfiguračních souborech, nikoli tedy programem (což má své výhody, ale samozřejmě i zápory). Nicméně i dnes představuje Tcl+Tk či ještě lépe Python+Tkinter poměrně dobrou volbu pro mnoho typů aplikací s&nbsp;GUI.</p>

<p>V&nbsp;průběhu postupného vývoje novějších (avšak ne nutně dokonalejších) programovacích nástrojů byla knihovna <strong>Tk</strong> použita v&nbsp;mnoha dalších programovacích jazycích. Pravděpodobně nejznámější je, samozřejmě kromě samotné dvojice <strong>Tcl/Tk</strong>, modul pro programovací jazyk <strong>Perl</strong> (Perl/Tk) a <strong>Python</strong> (Tkinter - Tk Interface, což je téma druhé poloviny dnešního článku). Knihovnu <strong>Tk</strong> je však samozřejmě možné použít i v dalších programovacích jazycích, i když v mnoha případech ne tak snadně a efektivně, jako ze samotného <strong>Tcl</strong>. V&nbsp;praxi se často s&nbsp;výhodou používá či používalo spojení programů napsaných v&nbsp;programovacím jazyku <strong>C</strong> či s&nbsp;<strong>C++</strong> s&nbsp;grafickým uživatelským rozhraním, které je vytvořeno pomocí <strong>Tcl</strong> a <strong>Tk</strong>.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Widgety a kontejnery</h2>

<p>Základem prakticky všech v&nbsp;současnosti používaných grafických uživatelských rozhraní jsou takzvané <strong>widgety</strong>, které jsou někdy poněkud nepřesně označovány také jako <strong>komponenty</strong>. Z&nbsp;pohledu uživatele aplikací s&nbsp;grafickým uživatelským rozhraním se jedná o grafické prvky zobrazené na obrazovce, které mají předem známé chování a předvídatelnou funkci. V&nbsp;mnoha případech je chování <strong>widgetů</strong> standardizováno či alespoň doporučováno &ndash; viz například doporučení pro Motif, Microsoft Windows, Mac OS a v&nbsp;neposlední řadě také doporučení pro poměrně nové Gnome a KDE. Velká část widgetů se snaží svým vzhledem reflektovat objekty z&nbsp;reálného světa (tlačítka, &bdquo;teploměry&ldquo;, přepínače programů, objekty známé z&nbsp;papírových formulářů apod.). Z&nbsp;pohledu programátora je naproti tomu <strong>widget</strong> objektem, kterému lze nastavit určitý stav a který reaguje na události, které při své práci generuje uživatel (přesouvání objektů na obrazovce, stlačování obrazů tlačítek pomocí myši či stylusu, psaní textu atd.).</p>

<p>Samotné widgety nejsou na obrazovce prakticky nikdy zcela osamocené. Ve skutečnosti se téměř vždy nachází v&nbsp;nějakém okně, dialogu či dalším nadřazeném widgetu. Programátoři grafických uživatelských rozhraní se často setkají s&nbsp;pojmem <strong>kontejner</strong>. Jedná se o komponentu, na kterou lze vkládat různé <strong>widgety</strong> a mnohdy i další kontejnery. Obecně tak interně vzniká stromová datová struktura jejíž kořen je představován plochou na obrazovce, na které jsou umístěna okna aplikací (dnes je ovšem i samotná plocha obrazovky součástí větší virtuální plochy zobrazované obecně na více monitorech). V&nbsp;těchto oknech se dále nachází kontejnery a widgety. V&nbsp;mnoha grafických uživatelských rozhraních přitom mohou být vybrané widgety (zdaleka ne však všechny) současně i kontejnery. Kontejnery kromě jiného řeší i rozmístění widgetů na své ploše.</p>

<p>Způsobů pro rozmisťování existuje více, základní dělení je na kontejnery, kde jsou widgety umisťovány absolutně (do této kategorie patří WinAPI, MFC, OWL a VCL) a naopak kontejnery, které widgety většinou umisťují podle své velikosti a vzájemných vztahů (zde se nachází AWT, Swing, GTK, Qt, Tk a mnoho dalších). V toolkitu <strong>Tk</strong> se mohou widgety umisťovat několika různými způsoby (pack, place a grid).</p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Základní typy widgetů v&nbsp;knihovně Tk/Tkinter</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Vlastnosti widgetů</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. První demonstrační příklad: zobrazení okna s&nbsp;textem &bdquo;Hello world!&ldquo;</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Události</h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Druhý příklad: tlačítko reagující na stlačení</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Třetí příklad: použití anonymní funkce pro reakci na stlačení tlačítka</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Správci umístění (geometrie)</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Čtvrtý příklad: umístění čtyř tlačítek do mřížky</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Pátý příklad: prázdná místa v&nbsp;mřížce</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Odkazy na Internetu</h2>

<ol>
</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

