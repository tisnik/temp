<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Použití Vimu a jeho pluginů pro porovnávání a slučování souborů</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Použití Vimu a jeho pluginů pro porovnávání a slučování souborů</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve třetím článku o nástrojích určených pro porovnání a popř. i sloučení dvou nebo tří verzí textových souborů se budeme zabývat popisem možností nabízených textovým editorem Vim. Popíšeme si i tři velmi užitečné pluginy nazvané DirDiff, DiffChar a Fugitive.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Použití Vimu a jeho pluginů pro porovnávání a slučování souborů</a></p>
<p><a href="#k02">2. Otestování, zda byl Vim přeložen s&nbsp;podporou technologie pro porovnání bufferů</a></p>
<p><a href="#k03">3. Alternativní způsob zjištění, zda Vim dokáže porovnat dva buffery</a></p>
<p><a href="#k04">4. Porovnání dvou textových souborů ve Vimu</a></p>
<p><a href="#k05">*** 5. Užitečné klávesové zkratky použitelné v&nbsp;průběhu porovnávání</a></p>
<p><a href="#k06">*** 6. Aplikace záplaty (patche)</a></p>
<p><a href="#k07">*** 7. Porovnání tří verzí textového souboru ve Vimu</a></p>
<p><a href="#k08">*** 8. Provedení třícestného sloučení (merge)</a></p>
<p><a href="#k09">9. Přídavné moduly pro Vim, které zjednodušují porovnávání a slučování souborů</a></p>
<p><a href="#k10">10. Plugin <i>DirDiff</i></a></p>
<p><a href="#k11">11. Postup při ruční instalaci přídavného modulu <i>DirDiff</i></a></p>
<p><a href="#k12">12. Instalace s&nbsp;využitím správce balíčků <i>Pathogen</i></a></p>
<p><a href="#k13">*** 13. Instalace s&nbsp;využitím správce balíčků <i>Vundle</i></a></p>
<p><a href="#k14">*** 14. Základní použití přídavného modulu <i>DirDiff</i></a></p>
<p><a href="#k15">15. Plugin <i>DiffChar</i></a></p>
<p><a href="#k16">*** 16. Ukázka použití modulu <i>DiffChar</i></a></p>
<p><a href="#k17">*** 17. Plugin <i>Fugitive</i></a></p>
<p><a href="#k18">*** 18. Příklad použití pluginu <i>Fugitive</i></a></p>
<p><a href="#k19">*** 19. Další možnosti pluginu Fugitive, zobrazení rozdílů mezi soubory, slučování verzí</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Použití Vimu a jeho pluginů pro porovnávání a slučování souborů</h2>

<p>Na dvojici článků, v&nbsp;nichž jsme si popsali různé nástroje a aplikace
určené <a
href="https://www.root.cz/clanky/nastroje-pro-porovnani-obsahu-dvou-textovych-souboru/">jak
pro porovnání dvou textových souborů</a>, tak i složitější nástroje umožňující
<a
href="https://www.root.cz/clanky/nastroje-pro-porovnani-obsahu-tri-ruznych-verzi-textovych-souboru/">porovnání
tří variant souboru s&nbsp;následným sloučením změn</a>, dnes navážeme. Ovšem
již (alespoň ne dnes) se nebude jednat o popis většího množství různých
nástrojů, protože se zaměříme pouze na popis možností programátorského
textového editoru Vim. Tento editor totiž podporuje takzvaný &bdquo;režim
diff&ldquo;, který je konfigurovatelný a lze ho tak použít jak pro porovnání
dvou verzí souborů, tak i pro porovnání verzí tří, samozřejmě s&nbsp;možností
sloučení změn. Kromě toho pro Vim vzniklo hned několik přídavných modulů, které
&bdquo;režim diff&ldquo; dále rozšiřují o další užitečné funkce. Jedná se
například o moduly <a href="#k10">DirDiff</a>, <a href="#k15">DiffChar</a> a
v&nbsp;neposlední řadě <a href="#k17">Fugitive</a>, jenž ocení především
uživatelé Gitu.</p>

<a href="https://www.root.cz/obrazek/319582/"><img src="https://i.iinfo.cz/images/227/diff2-14-prev.png" class="image-319582" alt="&#160;" height="228" width="370" /></a>
<p><i>Obrázek 1: Nástroj Meld, který jsme si popsali <a
href="https://www.root.cz/clanky/nastroje-pro-porovnani-obsahu-tri-ruznych-verzi-textovych-souboru/">v&nbsp;předchozím
článku</a>.</i></p>

<p>Poznámka: tento článek nepřímo navazuje na seriály <a
href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">Textový editor
Vim jako IDE</a> a <a
href="https://www.root.cz/serialy/jak-si-prizpusobit-vim/">Jak si přizpůsobit
Vim</a>. To mj.&nbsp;znamená, že se například zde nebudeme podrobněji zabývat
popisem přepínání mezi režimy Vimu, použitím oken a tabů atd.</p>

<a href="https://www.root.cz/obrazek/319575/"><img src="https://i.iinfo.cz/images/227/diff2-7-prev.png" class="image-319575" alt="&#160;" height="253" width="370" /></a>
<p><i>Obrázek 2: Nástroj KDiff3, který byl taktéž popsaný minule.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Otestování, zda byl Vim přeložen s&nbsp;podporou technologie pro porovnání bufferů</h2>

<p>Ještě předtím, než se pokusíte o použití &bdquo;režimu diff&ldquo; ve Vimu,
je vhodné zjistit, jestli varianta Vimu, kterou máte ve svém operačním systému
nainstalovanou, vůbec obsahuje subsystém, který vizuální porovnání souborů
implementuje. Můžeme se totiž setkat s&nbsp;instalací minimalistické varianty
Vimu přeložené takovým způsobem, aby výsledný binární soubor při svém spuštění
nevyžadoval příliš mnoho systémových prostředků a tudíž režim
&bdquo;diff&ldquo; vůbec neobsahuje.</p>

<p>Příkladem může být Rasbian, kde v&nbsp;adresáři <strong>/usr/bin</strong>
většinou nalezneme hned dvě varianty Vimu:</p>

<ol>
<li>vim.tiny</li>
<li>vim.basic</li>
</ol>

<p>I v&nbsp;Mintu (a dalších distribucích založených na Debianu) lze najít hned
několik variant Vimu, typicky minimalistický <strong>vim.tiny</strong>,
standardní <strong>vim.basic</strong> a popř.&nbsp;i <strong>vim.gtk</strong>
přeložený s&nbsp;podporou GUI:</p>

<pre>
$ <strong>ls -1sh /usr/bin/vim.*</strong>
&nbsp;
2,1M /usr/bin/vim.basic
2,5M /usr/bin/vim.gtk
864K /usr/bin/vim.tiny
</pre>

*** image ***
<p><i>Obrázek 3: Gvim aneb Vim přeložený s&nbsp;podporou pro GUI.</i></p>

<p>Na jednu z&nbsp;těchto variant ukazuje symbolický odkaz umístěný
v&nbsp;adresáři <strong>/etc/alternatives/</strong>, takže je nutné si dát
pozor na to, která verze se skutečně spouští.</p>

<p>Pro otestování přítomnosti subsystému pro porovnání obsahů dvou či tří
bufferů zadejte přímo ve Vimu tento příkaz (dvojtečka značí přepnutí do
příkazového režimu z&nbsp;režimu normálního):</p>

<pre>
:echo has("diff")
</pre>

<p>Tento příkaz by měl na posledním řádku zobrazit číslo <strong>1</strong>.
Pokud se však zobrazí <strong>0</strong>, nebo se dokonce vypíše chybové
hlášení oznamující, že příkaz <strong>echo</strong> nebyl rozpoznán, znamená
to, že je potřeba nainstalovat balíček, který se většinou jmenuje
<strong>vim-enhanced</strong> (jméno se však může na různých distribucích
Linuxu lišit). Bližší informace o funkci <strong>has</strong> získáte přímo
z&nbsp;nápovědy Vimu:</p>

<pre>
:help has
</pre>

<p>Poznámka: pokud si instalujete Vim ze standardního instalačního balíčku
určeného pro systémy Microsoft Windows, bude podpora pro režim
&bdquo;diff&ldquo; ve spustitelném souboru dostupná (ve skutečnosti se při
překladu této verze povolují prakticky všechny důležité subsystémy).</p>

<p>Dále jen pro jistotu otestujte, jestli se náhodou Vim nenachází
v&nbsp;režimu kompatibility s&nbsp;editorem <strong>vi</strong>:</p>

<pre>
:set compatible?
</pre>

<p>Výše uvedený příkaz by měl vypsat hodnotu:</p>

<pre>
nocompatible
</pre>

<p>Pokud se vypíše jiná hodnota, zadejte do vašeho konfiguračního souboru
<strong>.vimrc</strong> na začátek řádek:</p>

<pre>
set nocompatible
</pre>

<p>V&nbsp;režimu kompatibility totiž přestane pracovat velká část příkazů
přidaných jen do Vimu, nikoli už do původního <strong>vi</strong>.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Alternativní způsob zjištění, zda Vim dokáže porovnat dva buffery</h2>

<p>Alternativně je možné pro otestování, zda je subsystém pro porovnávání
obsahu bufferů součástí vaší varianty Vimu, použít příkaz:</p>

<pre>
:version
</pre>

<p>nebo jeho zkrácenou podobu:</p>

<pre>
:ver
</pre>

<p>Po spuštění tohoto příkazu se zobrazí přesné informace o verzi Vimu, dále
pak všechny subsystémy, které byly zahrnuty do výsledného binárního souboru a
nakonec se vypíšou i parametry překladu (ty ovšem v&nbsp;tuto chvíli nejsou tak
důležité). Po spuštění příkazu <strong>:version</strong> může okno s&nbsp;Vimem
(dnes již postarší/stabilní verze 7.4) vypadat například takto:</p>

<a href="https://www.root.cz/obrazek/319764/"><img src="https://i.iinfo.cz/images/524/vimdiff1-1-prev.png" class="image-319764" alt="&#160;" height="232" width="370" /></a>
<p><i>Obrázek 4: První obrazovka se zobrazením voleb použitých při kompilaci Vimu.</i></p>

<a href="https://www.root.cz/obrazek/319765/"><img src="https://i.iinfo.cz/images/524/vimdiff1-2-prev.png" class="image-319765" alt="&#160;" height="232" width="370" /></a>
<p><i>Obrázek 5: Druhá obrazovka se zobrazením voleb použitých při kompilaci
Vimu. Červeně je označena volba <strong>+diff</strong> značící, že je
&bdquo;režim diff&ldquo; podporován.</i></p>

<p>Vim verze 8.x zobrazí například následující informace:</p>

<a href="https://www.root.cz/obrazek/319766/"><img src="https://i.iinfo.cz/images/524/vimdiff1-3-prev.png" class="image-319766" alt="&#160;" height="232" width="370" /></a>
<p><i>Obrázek 6: První obrazovka se zobrazením voleb u Vimu 8.0</i></p>

<a href="https://www.root.cz/obrazek/319767/"><img src="https://i.iinfo.cz/images/524/vimdiff1-4-prev.png" class="image-319767" alt="&#160;" height="232" width="370" /></a>
<p><i>Obrázek 7: Druhá obrazovka se zobrazením voleb u Vimu 8.0. Opět je
zvýrazněna volba <strong>+diff</strong>.</i></p>

<p>U <strong>vim.tiny</strong> se ovšem volba <strong>+diff</strong>
nevyskytuje (přesněji řečeno je vypnutá):</p>

<a href="https://www.root.cz/obrazek/319768/"><img src="https://i.iinfo.cz/images/524/vimdiff1-5-prev.png" class="image-319768" alt="&#160;" height="232" width="370" /></a>
<p><i>Obrázek 8: Druhá obrazovka se zobrazením voleb u varianty
<strong>vim.tiny</strong>. Povšimněte si, že volba <strong>-diff</strong>
začíná znakem minus.</i></p>

<p>Podobně i minimalisticky pojatá a dnes již vlastně z&nbsp;doby kamenné
pocházející šestá verze Vimu pro DOS (v&nbsp;reálném režimu!) subsystém pro
porovnání souborů neobsahuje. Zde to ovšem není příliš překvapivé, protože tato
varianta má k&nbsp;dispozici pouze 640 kB RAM:</p>

<a href="https://www.root.cz/obrazek/319769/"><img src="https://i.iinfo.cz/images/524/vimdiff1-6-prev.png" class="image-319769" alt="&#160;" height="231" width="370" /></a>
<p><i>Obrázek 9: DOSová varianta Vimu pracující v&nbsp;reálném režimu je velmi
kompaktní, a to zejména kvůli chybějícím funkcím (16bitový kód nemá tak velký
vliv).</i></p>

<a href="https://www.root.cz/obrazek/319770/"><img src="https://i.iinfo.cz/images/524/vimdiff1-7-prev.png" class="image-319770" alt="&#160;" height="231" width="370" /></a>
<p><i>Obrázek 10: Jediná obrazovka se zobrazením voleb u DOSové verze Vimu.
Opět si povšimněte, že volba <strong>-diff</strong> začíná znakem
minus.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Porovnání dvou textových souborů ve Vimu</h2>

<p>Podívejme se nyní na způsob porovnání dvou textových souborů ve Vimu. Jedná
se o nejjednodušší způsob porovnání, který je možné nastavit několika způsoby.
Pokud se tento textový editor spustí s&nbsp;parametrem <strong>-d</strong>,
očekávají se za tímto parametrem jména dvou souborů pro porovnání,
popř.&nbsp;jméno souboru a jméno adresáře, v&nbsp;němž se nachází soubor
stejného jména:</p>

<pre>
vim -d test_old.c test_new.c
vim -d test.c ../test-sources/
</pre>

<p>Popř.&nbsp;při použití Vimu s&nbsp;GUI:</p>

<pre>
gvim -d test_old.c test_new.c
gvim -d test.c ../test-sources/
</pre>

<p>Stejného cíle většinou dosáhnete použitím příkazu <strong>vimdiff</strong>
namísto <strong>vim -d</strong>:</p>

<pre>
vimdiff test_old.c test_new.c
vimdiff test.c ../test-sources/
</pre>

<p>Popř.&nbsp;při použití GUI:</p>

<pre>
gvimdiff test_old.c test_new.c
gvimdiff test.c ../test-sources/
</pre>

<p>Poznámka: příkaz <strong>vimdiff</strong> je většinou symbolickým linkem na
<strong>vim</strong> popř.&nbsp;<strong>vim-vim</strong>. Podobně je příkaz
<strong>gvimdiff</strong> symbolickým linkem na <strong>vim.gtk</strong>.</p>

<a href="http://i.iinfo.cz/images/308/vim1-12.png"><img src="http://i.iinfo.cz/images/308/vim1-12-prev.png" alt="" height="232" width="370" /></a>
<p><i>Obrázek 11: Porovnávání dvou souborů při vertikálním rozdělení oken. Toto
rozdělení je vhodné použít v&nbsp;případě, že se jedná o zdrojové soubory
s&nbsp;krátkými řádky, popř.&nbsp;pokud máte širokoúhlý monitor.</i></p>

<p>Ve všech případech textový editor <i>Vim</i> oba soubory skutečně načte do
dvojice bufferů, ovšem režim zobrazení se změní takovým způsobem, že se pomocí
různých barev zvýrazní ty části souborů, které jsou odlišné. Navíc je možné
delší části, jež jsou v&nbsp;obou souborech stejné, &bdquo;zabalit&ldquo;
(klávesová zkratka <strong>zc</strong>).</p>

<p>Interně dojde k&nbsp;dalším změnám konfigurace:</p>

<ol>

<li>Pro obě otevřená okna se nastaví volba <strong>diff</strong> (implicitně je
vypnuta, tedy <strong>nodiff</strong>). Okna, která mají tuto volbu nastavenou,
se stávají součástí skupiny, na kterou se vztahují příkazy popsané
v&nbsp;navazující kapitole.</li>

<li>Volba <strong>foldmethod</strong> se nastaví na hodnotu
<strong>diff</strong>. To znamená, že se implicitně skryjí ty části textu,
které jsou v&nbsp;obou oknech shodné. I volba <strong>foldmethod</strong> je
lokální a vztažená k&nbsp;oknům.</li>

<li>Pro obě otevřená okna se nastaví volba <strong>scrollbind</strong>.
Povolení této volby zajistí, že vertikální posun textu v&nbsp;oknech bude
synchronizován, ovšem jen v&nbsp;těch oknech, kde je tato volba nastavena. To
znamená, že pokud si například otevřete další okno s&nbsp;nápovědou příkazem
<strong>:help</strong>, nebude se tohoto okna synchronizace vertikálního posunu
nijak týkat.</li>

<li>Pro obě otevřená okna se nastaví volba <strong>cursorbind</strong>. Tato
volba zajišťuje, že pohyb kurzoru v&nbsp;jednom okně se promítne i do druhého
okna i když je v&nbsp;daný okamžik viditelný pouze jeden kurzor. Teoreticky je
možné nastavit <strong>cursorbind</strong> a nikoli
<strong>scrollbind</strong>, ovšem při přechodu do druhého okna dojde ke skoku
na novou pozici kurzoru, což je matoucí.</li>

</ol>

<p>Poznámka: všechny čtyři výše uvedené volby jsou vztaženy k&nbsp;oknům;
nejedná se tedy o volby globální. To znamená, že Vim může být v&nbsp;jeden
okamžik použit jak pro porovnávání souborů, tak i pro další operace
s&nbsp;jinými okny a/nebo taby.</p>

<a href="http://i.iinfo.cz/images/308/vim1-13.png"><img src="http://i.iinfo.cz/images/308/vim1-13-prev.png" alt="" height="232" width="370" /></a>
<p><i>Obrázek 12: Porovnávání dvou souborů při horizontálním rozdělení oken,
které je vhodné využít v&nbsp;případě, že porovnávané zdrojové kódy (nebo jiné
texty) obsahují dlouhé řádky.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Užitečné klávesové zkratky použitelné v&nbsp;průběhu porovnávání</h2>

<p>Barevné zvýraznění změn je sice pěkná a užitečná vlastnost, ovšem to není
zdaleka vše, co <i>Vim</i> v&nbsp;&bdquo;režimu diff&ldquo; programátorům
nabízí. V&nbsp;tomto režimu jsou totiž k&nbsp;dispozici některé nové příkazy
určené pro řízenou synchronizaci mezi soubory. Mezi tyto příkazy patří
především:</p>

<table>
<tr><th>Příkaz</th><th>Význam</th></tr>
<tr><td>[c</td><td>skok na začátek předchozího bloku se změnami</td></tr>
<tr><td>]c</td><td>skok na začátek následujícího bloku se změnami</td></tr>
<tr><td>dp</td><td>pokud se kurzor nachází na řádcích, které se v obou souborech odlišují, je změna z aktuálního souboru přenesena do souboru druhého</td></tr>
<tr><td>do</td><td>opak předchozího příkazu – získání změny z druhého souboru a přenesení této změny do souboru aktuálního (tj. do souboru, v němž se nachází textový kurzor)</td></tr>
<tr><td>:diffupdate</td><td>tento příkaz provede nové vyhodnocení rozdílů mezi oběma soubory, vhodné v případech, kdy se oba buffery rozsynchronizují</td></tr>
</table>

<p>Příkazy <strong>dp</strong> a <strong>do</strong> lze použít i ve chvíli,
kdy je vybraný blok textu. V&nbsp;tomto případě se změna aplikuje pouze na
vybrané řádky, nikoli na celý blok změn.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Aplikace záplaty (patche)</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. Porovnání tří verzí textového souboru ve Vimu</h2>

<p>Jak jsme mohli vidět v&nbsp;předchozích kapitolách, je porovnání dvou verzí
souborů poměrně snadné a většinou zde nenarazíme na vážnější problémy (snad jen
na nutnost občasné synchronizace). Zajímavější a také poněkud složitější je
postup, který se používá při porovnání tří verzí textového souboru a následně
pro provedení třícestného sloučení změn (<i>three-way merge</i>). Víme již, že
nutnost třícestného sloučení vznikne ve chvíli, kdy byla původní verze souboru
modifikována jak lokálním autorem, tak i někým jiným. Naším úkolem je tedy
zpracovat obě nezávisle na sobě vzniklé varianty a sloučit je do nové
verze:</p>

*** image ***
<i>Obrázek XX: .</i>

<p>Vim je v&nbsp;tomto případě nutné spustit následujícím způsobem:</p>


<p><a name="k08"></a></p>
<h2 id="k08">8. Provedení třícestného sloučení (merge)</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Přídavné moduly pro Vim, které zjednodušují porovnávání a slučování souborů</h2>

<p>V&nbsp;navazujících kapitolách se zaměříme na popis některých užitečných
pluginů, kterými je možné rozšířit základní (a nutno říci, že už tak velmi
rozsáhlou) funkcionalitu Vimu při porovnávání a slučování souborů. Jedná se o
tyto pluginy:</p>

<ol>
<li><a href="#10">DirDiff</a></li>
<li><a href="#15">DiffChar</a></li>
<li><a href="#17">Fugitive</a></li>
</ol>

<p>Poznámka: vzhledem k&nbsp;tomu, že přídavné moduly je možné instalovat
různými způsoby, ukážeme si u prvního pluginu (konkrétně u modulu pojmenovaného
<i>DirDiff</i>) ruční instalaci (bez použití správce balíčků), dále instalaci
za předpokladu, že pro správu balíčků používáte manažer <a
href="https://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim/#k02">Pathogen</a>
a samozřejmě nezapomeneme ani na ty uživatele, kteří dávají přednost použití
správce balíčků <i>Vundle</i>. U dalších popisovaných pluginů se již nebudeme
instalací do takovýchto podrobností zabývat, neboť se jedná stále o stejnou
činnost.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Plugin <i>DirDiff</i></h2>

<p>První plugin naprogramovaný pro textový editor Vim, s&nbsp;nímž se
v&nbsp;dnešním článku podrobněji seznámíme, je přídavný modul pojmenovaný
<i>DirDiff</i>. Stránku s&nbsp;podrobnějšími informacemi o tomto modulu
naleznete na adrese <a
href="http://www.vim.org/scripts/script.php?script_id=102">http://www.vim.org/scripts/script.php?script_id=102</a>.
Jméno pluginu <i>DirDiff</i> poměrně přesně vystihuje jeho hlavní činnost,
neboť se skutečně jedná o modul, jenž je možné použít pro porovnání obsahu dvou
vybraných adresářů, přesněji řečeno souborů uložených v&nbsp;těchto adresářích.
Důležitý a užitečný je především fakt, že se porovnání provádí rekurzivně,
tj.&nbsp;zpracovány jsou i případné podadresáře.</p>

<p>To se může hodit v&nbsp;mnoha situacích, například ve chvíli, kdy má
uživatel na disku uložen pracovní adresář s&nbsp;nějakým projektem a na jiném
médiu zálohu tohoto adresáře a potřebuje zjistit, které soubory se od poslední
zálohy změnily (lze kombinovat například i s&nbsp;velmi užitečným příkazem
<i>rsync</i>, to však již přesahuje téma tohoto článku). Pokud se nějaké
soubory změnily, lze si prohlédnout jednotlivé rozdíly, podobně jako při
explicitním volání <strong>vim -d soubor1 soubor2</strong> nebo <strong>vimdiff
soubor1 soubor2</strong> a navíc má uživatel k&nbsp;dispozici několik příkazů
určených pro synchronizaci souborů v&nbsp;obou porovnávaných adresářích (ty si
popíšeme za chvíli).</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Postup při ruční instalaci přídavného modulu <i>DirDiff</i></h2>

<p>Ruční instalaci pluginu <i>DirDiff</i> je nutné použít ve chvíli, kdy
nepoužíváte žádný správce balíčků, což je sice možné, ovšem už při současné
instalaci dvou a více pluginů se správce balíčků (Pathogen nebo Vundle) začíná
vyplácet. Nicméně se i přesto podívejme, jak lze instalaci provést i bez
správce balíčků. Do libovolného pracovního adresáře si nejdříve naklonujte
repositář s&nbsp;obsahem pluginu:</p>

<pre>
$ <strong>git clone https://github.com/will133/vim-dirdiff</strong>
</pre>

<p>Následně je nutné ručně zkopírovat soubor <strong>dirdiff.txt</strong> do
adresáře <strong>~/.vim/doc</strong> a soubor <strong>dirdiff.vim</strong> do
adresáře <strong>~/.vim/plugin</strong>. Výsledek může vypadat například
následovně (jedná se o strom souborů, který momentálně používám na Raspberry
Pi, bez správce balíčků):</p>

<pre>
.vim
├── colors
│   └── vo_dark.vim
├── diffchar.vim
├── doc
│   ├── bufexplorer.txt
│   ├── <strong>dirdiff.txt</strong>
│   ├── help.vim
│   ├── NERD_tree.txt
│   └── tags
├── ftdetect
│   └── vo_base.vim
├── ftplugin
│   ├── vo_base.vim
│   ├── vo_checkbox.vim
│   └── vo_hoist.vim
├── indent
├── plugin
│   ├── bufexplorer.vim
│   ├── <strong>dirdiff.vim</strong>
│   └── NERD_tree.vim
├── spell
│   ├── cs.utf-8.add
│   └── cs.utf-8.add.spl
└── syntax
    ├── asciidoc.vim
    ├── clojure.vim
    ├── nerdtree.vim
    └── vo_base.vim
</pre>

<p>Při dalším spuštění Vimu bude plugin aktivní.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Instalace s&nbsp;využitím správce balíčků <i>Pathogen</i></h2>

<p>Nyní si ukažme častěji používaný postup při instalaci přídavného modulu
<i>DirDiff</i>, a to konkrétně s&nbsp;využitím některého ze správců balíčků
(Vim8 má navíc vlastního správce). V&nbsp;případě, že se pro konfiguraci,
instalaci a inicializaci pluginů používá správce balíčků <i>Pathogen</i>, je
instalace velmi jednoduchá, protože pouze stačí přejít do adresáře
<strong>~/.vim/bundle</strong> a v&nbsp;něm naklonovat repositář obsahující
všechny důležité souboru pluginu <i>DirDiff</i>:</p>

<pre>
$ <strong>cd ~/.vim/bundle</strong>
&nbsp;
$ <strong>git clone https://github.com/will133/vim-dirdiff</strong>
Cloning into 'vim-dirdiff'...
remote: Counting objects: 72, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 72 (delta 0), reused 0 (delta 0), pack-reused 67
Unpacking objects: 100% (72/72), done.
Checking connectivity... done.
</pre>

<p>Struktura adresáře <strong>~/.vim</strong> může vypadat například
následovně. Pro nás je v&nbsp;tuto chvíli důležitý zejména obsah podadresáře
<strong>bundle</strong> s&nbsp;naklonovaným repositářem:</p>

<pre>
~/.vim
├── after
│   └── syntax
├── autoload
│   ├── help.vim
│   └── pathogen.vim
├── bundle
│   └── vim-dirdiff
│       ├── doc
│       │   └── dirdiff.txt
│       ├── plugin
│       │   └── dirdiff.vim
│       ├── README.md
│       └── screenshot.png
├── doc
│   └── 
├── ftdetect
├── indent
├── macros
├── plugin
│   └── calendar.vim
├── spell
│   ├── cs.utf-8.add
│   ├── cs.utf-8.add.spl
│   ├── cs.utf-8.spl
│   ├── en.utf-8.add
│   └── en.utf-8.add.spl
└── syntax
    └── otl.vim
</pre>

<p>Po dalším spuštění Vimu by mělo dojít k&nbsp;automatickému načtení všech
nainstalovaných pluginů, samozřejmě včetně pluginu <i>DirDiff</i>.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Instalace s&nbsp;využitím správce balíčků <i>Vundle</i></h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Základní použití přídavného modulu <i>DirDiff</i></h2>

<p>Použití přídavného modulu <i>DirDiff</i> je ve skutečnosti velmi jednoduché.
Po spuštění textového editoru <i>Vim</i> stačí v&nbsp;normálním režimu použít
příkaz:</p>

<pre>
:DirDiff cesta_k_prvnímu_adresáři cesta_ke_druhému_adresáři
</pre>

<p>Po spuštění tohoto příkazu se okno textového editoru <i>Vim</i> rozdělí na
několik částí (předpokládáme přitom, že původně byl v&nbsp;okně zobrazen jen
jediný buffer). V&nbsp;části spodní je zobrazen seznam porovnávaných souborů a
v&nbsp;části horní pak výsledky porovnání (<i>vim diff</i>) vybraného souboru
ve verzi získané z&nbsp;prvního adresáře i z&nbsp;adresáře druhého. Navíc je
v&nbsp;tomto speciálním režimu přepsán význam některých klávesových zkratek,
zejména:</p>

<table>
<tr><th>#</th><th>Zkratka</th><th>Význam</th></tr>
<tr><td>1</td><td>Enter</td><td>zobrazí se rozdíl pro vybraný soubor (na němž se v&nbsp;daný okamžik nachází kurzor)</td></tr>
<tr><td>2</td><td>o</td><td>má stejný význam jako předchozí zkratka (mnemotechnická pomůcka - <i>o=open</i>)</td></tr>
<tr><td>3</td><td>s</td><td>provedení synchronizace s&nbsp;výběrem vhodné metody (kopie z&nbsp;prvního adresáře atd.)</td></tr>
<tr><td>4</td><td>u</td><td>má stejný význam jako příkaz <strong>:diffupdate</strong> zadaný v&nbsp;příkazovém režimu</td></tr>
<tr><td>5</td><td>q</td><td>ukončení režimu DirDiff a návrat do normálního režimu (<i>normal mode</i>)</td></tr>
</table>

<p>Při synchronizaci klávesovou zkratkou <strong>s</strong> se zobrazí dotaz,
jakým způsobem se má vlastně synchronizace provést. Pokud je Vim spuštěn
v&nbsp;terminálu, je dotaz zobrazen samozřejmě taktéž v&nbsp;terminálu, ovšem
v&nbsp;případě použití GVimu nebo KVimu se zobrazí plnohodnotný dialog.</p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Plugin <i>DiffChar</i></h2>

<p>V&nbsp;mnoha případech je způsob zobrazení změn nabízený režimem <i>diff</i>
poněkud nepřehledný, a to z&nbsp;toho důvodu, že se sice správně zobrazí změny
provedené na jednom řádku, ovšem již se nezvýrazní, jakých znaků se tyto změny
týkají. Tato užitečná funkcionalita, kterou jsme již mohli vidět <a
href="https://www.root.cz/clanky/nastroje-pro-porovnani-obsahu-tri-ruznych-verzi-textovych-souboru/#k16">minule</a>
u nástrojů vybavených grafickým uživatelským rozhraním, je implementována
v&nbsp;přídavném modulu nazvaném jednoduše <i>DiffChar</i>. Zdrojové kódy
tohoto pluginu naleznete na GitHubu, konkrétně na adrese <a
href="https://github.com/rickhowe/diffchar.vim">https://github.com/rickhowe/diffchar.vim</a>.
Instalace se provádí stejně, jako tomu bylo u předchozího pluginu &ndash; modul
je možné nainstalovat ručně, lze použít správce balíčků <i>Pathogen</i>
popř.&nbsp;správce balíčků <i>Vundle</i>.</p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Ukázka použití modulu <i>DiffChar</i></h2>

<p>Pokud instalace proběhla bez chyby, měl by být plugin po opětovném spuštění
Vimu korektně inicializován a použit ve chvíli, kdy přejdeme do režimu
<i>diff</i>. Plugin <i>DiffChar</i>, pokud je povolen, definuje některé nové
klávesové zkratky, které jsou vypsány v&nbsp;následující tabulce:</p>

<table>
<tr><th>Režim</th><th>Zkratka</th><th>Význam klávesové zkratky</th></tr>
<tr><td>normal</td><td>F7</td><td>zapne nebo naopak vypne zvýraznění rozdílů pro všechny řádky</td></tr>
<tr><td>normal</td><td>F8</td><td>zapne nebo naopak vypne zvýraznění rozdílů pro řádek, na kterém se nachází kurzor</td></tr>
<tr><td>visual</td><td>F7</td><td>zapne nebo naopak vypne zvýraznění rozdílů pro vybrané řádky</td></tr>
<tr><td>visual</td><td>F8</td><td>zapne nebo naopak vypne zvýraznění rozdílů pro vybrané řádky</td></tr>
<tr><td>normal</td><td>[b</td><td>skok na předchozí detekovanou změnu</td></tr>
<tr><td>normal</td><td>]b</td><td>skok na následující detekovanou změnu</td></tr>
<tr><td>normal</td><td>[e</td><td>skok na konec předchozí detekované změny</td></tr>
<tr><td>normal</td><td>]e</td><td>skok na konec následující detekované změny</td></tr>
<tr><td>normal</td><td>&lt;Leader&gt;g</td><td>synchronizace změny operací &bdquo;get&ldquo; (tj. změna se získá ze druhého/neaktivního bufferu)</td></tr>
<tr><td>normal</td><td>&lt;Leader&gt;p</td><td>synchronizace změny operací &bdquo;put&ldquo;</td></tr>
</table>

<p>Použití znaků [ a ] pro příkazy určené pro přesun kurzoru by nemělo být
překvapivé, protože se tyto příkazy používají i ve standardním Vimu pro přesuny
kurzoru po textových objektech (například na předchozí či následující metodu
v&nbsp;Javě atd.).</p>

<p>Poznámka: za &lt;Leader&gt; si v&nbsp;předchozí tabulce doplňte klávesu
nastavenou příkazem:</p>

<pre>
let mapleader=...
</pre>

<p>Typicky se <strong>mapleader</strong> nastavuje v&nbsp;souboru
<strong>.vimrc</strong>. Výchozí klávesa je \, někteří uživatelé však používají
čárku nebo dokonce mezerník (což vlastně není až tak špatný nápad).</p>

<p>Kromě klávesových zkratek je možné použít i nové příkazy, před nimiž je
možné uvést rozsah (od, do, %, vizuální výběr bloku atd.):</p>

<table>
<tr><th>Příkaz</th><th>Význam příkazu</th></tr>
<tr><td>:[rozsah]SDChar</td><td>zobrazení změn (<i>Show/Set Diff Char</i>)</td></tr>
<tr><td>:[rozsah]RDChar</td><td>vypnutí zobrazení změn (<i>Reset Diff Char</i>)</td></tr>
<tr><td>:[rozsah]TDChar</td><td>přepnutí mezi stavem zobrazení změn (zapnuto/vypnuto) (<i>Toggle...</i>)</td></tr>
<tr><td>:[rozsah]EDChar</td><td>výpis změn na výstup, tj. do terminálu Vimu (<i>Echo...</i>)</td></tr>
</table>

<p>Jen pro úplnost si ukažme možnosti nastavení pluginu <i>DiffChar</i>:</p>

<table>
<tr><th>Volba (globální)</th><th>Volba (pro tab)</th><th>Stručný popis volby</th></tr>
<tr><td>g:DiffUnit</td><td>t:DiffUnit</td><td>specifikace, jaké jednotky se mají porovnávat (slova, jednotlivé znaky...)</td></tr>
<tr><td>g:DiffColors</td><td>t:DiffColors</td><td>konfigurace barev, lze zvolit 4, 8, 16 barev nebo dokonce náhodný výběr</td></tr>
<tr><td>g:DiffPairVisible</td><td>t:DiffPairVisible</td><td>způsob zobrazení změn ve druhém okně ve chvíli, kdy se na změně nachází textový kurzor</td></tr>
<tr><td>g:DiffUpdate</td><td>t:DiffUpdate</td><td>povolení automatické synchronizace souborů v&nbsp;průběhu editace (viz <strong>:help diffupdate</strong>)</td></tr>
<tr><td>g:DiffSplitTime</td><td>t:DiffSplitTime</td><td>timeout pro interní algoritmus pro detekci změn (ten může být někdy pomalý)</td></tr>
<tr><td>g:DiffExpr</td><td>&nbsp;</td><td>určuje, zda se má použít volba <strong>diffexpr</strong> (ve výchozím stavu povoleno)</td></tr>
</table>

<p>Povšimněte si, že většinu voleb je možné nastavit buď globálně nebo pro
aktivní tab. To je užitečné, protože je například možné na každém tabu použít
odlišný algoritmus atd.</p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Plugin <i>Fugitive</i></h2>

<p>Druhým dnes popisovaným rozšiřujícím modulem určeným pro textový editor
<i>Vim</i> je plugin nazvaný <i>Fugitive</i>. Tento rozšiřující modul slouží
pro usnadnění práce s&nbsp;Gitem, resp.&nbsp;přesněji řečeno k&nbsp;práci se
soubory uloženými v&nbsp;naklonovaných Git repositářích. A vzhledem
k&nbsp;tomu, že se při spolupráci většího množství autorů nevyhneme konfliktům
ve verzích souborů, kooperuje <i>Fugitive</i> s&nbsp;režimem <i>diff</i>.
Plugin <i>Fugitive</i> je dostupný na adrese <a
href="http://www.vim.org/scripts/script.php?script_id=2975">http://www.vim.org/scripts/script.php?script_id=2975</a>,
jeho vlastní Git repositář pak naleznete na adrese <a
href="https://github.com/tpope/vim-fugitive">https://github.com/tpope/vim-fugitive</a>.</p>

<p>Instalace při použití správce balíčků <i>Pathogen</i> je triviální:</p>

<pre>
$ <strong>cd ~/.vim/bundle</strong>
&nbsp;
$ <strong>$ git clone https://github.com/tpope/vim-fugitive</strong>
Cloning into 'vim-fugitive'...
remote: Counting objects: 2501, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 2501 (delta 0), reused 2 (delta 0), pack-reused 2496
Receiving objects: 100% (2501/2501), 897.06 KiB | 400.00 KiB/s, done.
Resolving deltas: 100% (969/969), done.
Checking connectivity... done.
</pre>

<p>Po instalaci tohoto pluginu by měla struktura adresáře
<strong>~/.vim</strong> vypadat přibližně následovně (samozřejmě je možné, že
již budete mít nainstalovány nějaké další pluginy, například ty popsané
v&nbsp;předchozích kapitolách):</p>

<pre>
~/.vim
├── after
│   └── syntax
├── autoload
│   ├── help.vim
│   └── pathogen.vim
├── bundle
│   ├── vim-dirdiff
│   │   ├── doc
│   │   │   └── dirdiff.txt
│   │   ├── plugin
│   │   │   └── dirdiff.vim
│   │   ├── README.md
│   │   └── screenshot.png
│   └── vim-fugitive
│       ├── CONTRIBUTING.markdown
│       ├── doc
│       │   └── fugitive.txt
│       ├── plugin
│       │   └── fugitive.vim
│       └── README.markdown
├── doc
│   └── 
├── ftdetect
├── indent
├── macros
├── plugin
│   └── calendar.vim
├── spell
│   ├── cs.utf-8.add
│   ├── cs.utf-8.add.spl
│   ├── cs.utf-8.spl
│   ├── en.utf-8.add
│   └── en.utf-8.add.spl
└── syntax
    └── otl.vim
</pre>

<p>Po instalaci pluginu <i>Fugitive</i> a po spuštění nové instance <i>Vimu</i>
je pro každý buffer, který je součástí naklonovaného Git repositáře,
k&nbsp;dispozici několik nových příkazů popsaných v&nbsp;navazujících dvou
kapitolách. Důležité přitom je, že tyto příkazy jsou skutečně aktivní pouze pro
buffery odpovídající souborům uloženým v&nbsp;Git repositáři.</p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Příklad použití pluginu <i>Fugitive</i></h2>

<p>Otestování funkčnosti rozšiřujícího modulu <i>Fugitive</i> lze provést
jednoduše. Nejprve je nutné přejít do adresáře, v&nbsp;němž se nachází soubory
naklonované z&nbsp;Git repositáře; může se klidně jednat přímo o adresář
s&nbsp;naklonovaným pluginem <i>Fugitive</i>. Následně se spustí Vim, GVim či
KVim a otevře se buffer obsahující nějaký soubor, který je již součástí
repositáře:</p>

<pre>
vim libovolny_soubor_z_gitu
</pre>

<p>Nyní by uživatel textového editoru Vim měl mít k&nbsp;dispozici velké
množství nových příkazů, které všechny začínají na písmeno <strong>G</strong>
(jedná se skutečně o velké G). Jak je však možné si tyto příkazy vypsat?
Postačuje nepatrně změnit nastavení Vimu následujícím způsobem:</p>

<pre>
set wildmenu
set wildmode=list:longest,full
</pre>

<p>Posléze se všechny příkazy začínající na písmeno <strong>G</strong> zobrazí
takto:</p>

<pre>
:G&lt;Tab&gt;
</pre>

<a href="http://www.root.cz/obrazek/201485/"><img src="http://i.iinfo.cz/images/410/vim20-3-prev.png" class="image-201485" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek XX: V&nbsp;závislosti na nastavení Vimu je možné si jednoduše
vypsat všechny příkazy začínající na písmeno G s&nbsp;využitím
<strong>:G[Tab]</strong>.</i></p>

<p>Základní čtyři příkazy poskytované pluginem <i>Fugitive</i> jsou uvedeny
v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Příkaz</th><th>Význam</th></tr>
<tr><td>1</td><td>:Gpull</td><td>zavolá příkaz <strong>git pull</strong></td></tr>
<tr><td>2</td><td>:Gpush</td><td>zavolá příkaz <strong>git push</strong>, případné chyby se vypisují do speciálního okna nazvaného <i>quick window</i> (stejně jako chyby při překladu atd.)</td></tr>
<tr><td>3</td><td>:Gcommit</td><td>zavolá příkaz <strong>git commit</strong> (pokud došlo ke změnám) popř.&nbsp;<strong>git status</strong> (pokud nedošlo k&nbsp;žádným změnám). Při commitu se otevře nové okno pro zadání zprávy.</td></tr>
<tr><td>4</td><td>:Gmerge</td><td>zavolá příkaz <strong>git merge</strong>, chyby se vypisují do speciálního okna nazvaného <i>quick window</i> (stejně jako chyby při překladu atd.)</td></tr>
</table>

<p>Předností využití těchto příkazů oproti jejich ekvivalentům zadávaným
z&nbsp;příkazové řádky je fakt, že se veškeré zprávy budou vypisovat přímo do
bufferů/oken textového editoru <i>Vim</i>, při commitu se navíc zadání zprávy
(<i>commit message</i>) provede v&nbsp;novém okně &ndash; to vše bez nutnosti
opuštění prostředí Vimu. Pokud dojde k&nbsp;chybě, což se samozřejmě může stát,
zejména v&nbsp;případě příkazu <strong>:Gmerge</strong>, jsou tyto chyby
zobrazeny v&nbsp;okně <i>quick window</i> a navíc uloženy v&nbsp;paměti Vimu
takovým způsobem, že je lze zpracovat tzv.<i>quickfix</i> příkazy,
například:</p>

<table>
<tr><th>Příkaz</th><th>Stručný popis příkazu</th></tr>
<tr><td>:cc</td><td>zobrazení chyby</td></tr>
<tr><td>:cn</td><td>zobrazení další chyby</td></tr>
<tr><td>:cp</td><td>zobrazení předchozí chyby</td></tr>
</table>

<a href="http://www.root.cz/obrazek/201486/"><img src="http://i.iinfo.cz/images/410/vim20-4-prev.png" class="image-201486" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek XX: Takto vypadá výsledek příkazu <strong>:Glog</strong>.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Další možnosti pluginu Fugitive, zobrazení rozdílů mezi soubory, slučování verzí</h2>

<p>Přídavný modul <i>Fugitive</i> ve skutečnosti uživatelům nabízí i poměrně
velké množství dalších příkazů, které v&nbsp;menší či větší míře využívají
faktu, že jsou spuštěny přímo v&nbsp;prostředí Vimu a nikoli na příkazové
řádce. Pojďme si některé tyto příkazy alespoň ve stručnosti popsat:</p>

<table>
<tr><th> #</th><th>Příkaz</th><th>Stručný popis příkazu</th></tr>
<tr><td>1</td><td>:Glog</td><td>do takzvaného <i>quickfix listu</i> uloží informace o všech revizích aktuálně editovaného souboru. Mezi revizemi se lze přepínat například s&nbsp;využitím příkazů <strong>:cn</strong> a <strong>:cp</strong>, vypsat změny přes <strong>:clist</strong></td></tr>
<tr><td>2</td><td>:Gllog</td><td>podobný příkaz jako <strong>:Glog</strong>, ale používá seznam lokací, zde se používají příkazy <strong>:lprev</strong> a <strong>:lnext</strong> pro procházení revizemi</td></tr>
<tr><td>3</td><td>:Gstatus</td><td>zobrazí aktuální stav Git repositáře, odpovídá <strong>git status</strong></td></tr>
<tr><td>4</td><td>:Gblame</td><td>aktuální okno se vertikálně rozdělí a v&nbsp;levém (novém) okně se pro každý řádek zobrazí autor poslední změny</td></tr>
<tr><td>5</td><td>:Gfetch</td><td>odpovídá příkazu <strong>git fetch</strong>, opět se zapamatováním chybových zpráv</td></tr>
<tr><td>6</td><td>:Gdiff</td><td>aktuální okno se rozdělí a zobrazí se změny v&nbsp;bufferu (používá se přitom režim <i>vimdiff</i>, takže dochází k&nbsp;synchronizaci při skrolování rozděleného okna atd.)</td></tr>
<tr><td>7</td><td>:Gsdiff</td><td>stejné jako předchozí příkaz, ale okno je vždy rozděleno horizontálně</td></tr>
<tr><td>8</td><td>:Gvdiff</td><td>stejné jako předchozí příkaz, ale okno je vždy rozděleno vertikálně (užitečnější, zejména na moderních širokoúhlých monitorech)</td></tr>
<tr><td>9</td><td>:Gread</td><td>umožňuje do aktuálního bufferu načíst libovolnou revizi souboru</td></tr>
</table>

<p><strong>Pozor:</strong> některé výše popsané příkazy nefungují korektně,
pokud máte ve <strong>.vimrc</strong> nastaveno <strong>:set
shellpipe=2&gt;</strong>. Bližší informace o této volbě naleznete
v&nbsp;nápovědě Vimu:</p>

<pre>
:help 'shellpipe'
</pre>

<p>nebo v&nbsp;tomto případě (nedochází kolizi s&nbsp;názvem příkazu) jen:</p>

<pre>
:help shellpipe
</pre>

<a href="http://www.root.cz/obrazek/201487/"><img src="http://i.iinfo.cz/images/410/vim20-5-prev.png" class="image-201487" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek XX: Pomocí příkazu <strong>:Gcommit</strong> lze provést commit, a
to bez nutnosti opuštění Vimu.</i></p>

<p>Velmi užitečný je v&nbsp;mnoha případech příkaz <strong>:Gread</strong>,
který částečně odpovídá chování externího příkazu <strong>git
checkout</strong>, ovšem provedeného jen pro aktuálně editovaný soubor/buffer
(ve skutečnosti jsou možnosti <strong>:Gread</strong> mnohem větší, více je
uvedeno v&nbsp;nápovědě). Tento příkaz se volá následovně:</p>

<pre>
:Gread revize
</pre>

<p>Po provedení tohoto příkazu se obsah bufferu změní takovým způsobem, že
odpovídá zadané revizi. Revizi lze zadat mnoha způsoby, například:</p>

<table>
<tr><th>Revize</th><th>Význam</th></tr>
<tr><td>^</td><td>předchozí commit</td></tr>
<tr><td>~1</td><td>dtto</td></tr>
<tr><td>~2</td><td>verze před dvěma commity</td></tr>
<tr><td>~3</td><td>verze před třemi commity</td></tr>
</table>

<a href="http://www.root.cz/obrazek/201488/"><img src="http://i.iinfo.cz/images/410/vim20-6-prev.png" class="image-201488" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek XX: Užitečný je taktéž příkaz <strong>:Gblame</strong>.</i></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Plugin Diffchar<br />
<a href="https://github.com/vim-scripts/diffchar.vim">https://github.com/vim-scripts/diffchar.vim</a>
</li>

<li>DirDiff.vim : A plugin to diff and merge two directories recursively.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=102">http://www.vim.org/scripts/script.php?script_id=102</a>
</li>

<li>vim-dirdiff na GitHubu<br />
<a href="https://github.com/will133/vim-dirdiff">https://github.com/will133/vim-dirdiff</a>
</li>

<li>Vim-fugitive na GitHubu<br />
<a href="https://github.com/tpope/vim-fugitive">https://github.com/tpope/vim-fugitive</a>
</li>

<li>Vim-fugitive na www.vim.org<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2975">http://www.vim.org/scripts/script.php?script_id=2975</a>
</li>

<li>vimdiff, nástroj drsňáků<br />
<a href="http://www.sw-samuraj.cz/2017/11/vimdiff-nastroj-drsnaku.html">http://www.sw-samuraj.cz/2017/11/vimdiff-nastroj-drsnaku.html</a>
</li>

<li>Comparing and Merging Files<br />
<a href="https://www.gnu.org/software/diffutils/manual/diffutils.html">https://www.gnu.org/software/diffutils/manual/diffutils.html</a>
</li>

<li>Three-way merge<br />
<a href="https://en.wikipedia.org/wiki/Merge_(version_control)#Three-way_merge">https://en.wikipedia.org/wiki/Merge_(version_control)#Three-way_merge</a>
</li>

<li>diff (1) - Linux Man Pages<br />
<a href="https://www.systutorials.com/docs/linux/man/1-diff/">https://www.systutorials.com/docs/linux/man/1-diff/</a>
</li>

<li>diff utility (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Diff_utility">https://en.wikipedia.org/wiki/Diff_utility</a>
</li>

<li>GNU Wdiff<br />
<a href="https://www.gnu.org/software/wdiff/">https://www.gnu.org/software/wdiff/</a>
</li>

<li>GNU wdiff Manual<br />
<a href="https://www.gnu.org/software/wdiff/manual/">https://www.gnu.org/software/wdiff/manual/</a>
</li>

<li>wdiff (1) - Linux Man Pages<br />
<a href="https://www.systutorials.com/docs/linux/man/1-wdiff/">https://www.systutorials.com/docs/linux/man/1-wdiff/</a>
</li>

<li>diff3 (1) - Linux Man Pages<br />
<a href="https://www.systutorials.com/docs/linux/man/1-diff3/">https://www.systutorials.com/docs/linux/man/1-diff3/</a>
</li>

<li>sdiff (1) - Linux Man Pages<br />
<a href="https://www.systutorials.com/docs/linux/man/1-sdiff/">https://www.systutorials.com/docs/linux/man/1-sdiff/</a>
</li>

<li>Stránky nástroje Meld<br />
<a href="http://meldmerge.org/">http://meldmerge.org/</a>
</li>

<li>Meld na stránkách GNOME<br />
<a href="https://wiki.gnome.org/Apps/Meld">https://wiki.gnome.org/Apps/Meld</a>
</li>

<li>Stránky nástroje TkDiff<br />
<a href="https://sourceforge.net/projects/tkdiff/">https://sourceforge.net/projects/tkdiff/</a>
</li>

<li>Zdrojové kódy TkDiffu<br />
<a href="https://sourceforge.net/projects/tkdiff/files/tkdiff/4.2/">https://sourceforge.net/projects/tkdiff/files/tkdiff/4.2/</a>
</li>

<li>Poslední verze nástroje TkDiff<br />
<a href="https://sourceforge.net/projects/tkdiff/files/latest/download">https://sourceforge.net/projects/tkdiff/files/latest/download</a>
</li>

<li>Manuálová stránka k&nbsp;nástroji TkDiff<br />
<a href="http://linux.math.tifr.res.in/manuals/man/tkdiff.html">http://linux.math.tifr.res.in/manuals/man/tkdiff.html</a>
</li>

<li>diffh: Make your diff easier to see<br />
<a href="https://inconsolation.wordpress.com/2013/10/07/diffh-make-your-diff-easier-to-see/">https://inconsolation.wordpress.com/2013/10/07/diffh-make-your-diff-easier-to-see/</a>
</li>

<li>Stránky projektu diffh<br />
<a href="https://sourceforge.net/projects/diffh/">https://sourceforge.net/projects/diffh/</a>
</li>

<li>Pretty Diff (implementovaný v&nbsp;JavaScriptu)<br />
<a href="http://prettydiff.com/">http://prettydiff.com/</a>
</li>

<li>Nástroje pro diff textů<br />
<a href="https://en.wikipedia.org/wiki/Diff-Text">https://en.wikipedia.org/wiki/Diff-Text</a>
</li>

<li>Pretty Diff (implementovaný v&nbsp;JavaScriptu)<br />
<a href="https://en.wikipedia.org/wiki/Pretty_Diff">https://en.wikipedia.org/wiki/Pretty_Diff</a>
</li>

<li>Stránky projektu colordiff<br />
<a href="https://www.colordiff.org/">https://www.colordiff.org/</a>
</li>

<li>Skript idiff<br />
<a href="http://www.pixelbeat.org/scripts/idiff">http://www.pixelbeat.org/scripts/idiff</a>
</li>

<li>Three way git merging with Meld<br />
<a href="https://lukas.zapletalovi.com/2012/09/three-way-git-merging-with-meld.html">https://lukas.zapletalovi.com/2012/09/three-way-git-merging-with-meld.html</a>
</li>

<li>xxdiff na serveru SourceForge<br />
<a href="https://sourceforge.net/projects/xxdiff/">https://sourceforge.net/projects/xxdiff/</a>
</li>

<li>Stránka nástroje KDiff3<br />
<a href="http://kdiff3.sourceforge.net/">http://kdiff3.sourceforge.net/</a>
</li>

<li>Seriál o programovacím jazyku TCL a GUI knihovně Tk<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-tcl/">https://www.root.cz/serialy/programovaci-jazyk-tcl/</a>
</li>

<li>ActiveTcl<br />
<a href="https://www.activestate.com/activetcl">https://www.activestate.com/activetcl</a>
</li>

<li>Tiobe: žebříček popularity programovacích jazyků<br />
<a href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

