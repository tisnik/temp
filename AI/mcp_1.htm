<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. Instalace balíčku <strong>mcp</strong> i nástrojů nutných pro spuštění MCP Inspectora</a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace balíčku <strong>mcp</strong> i nástrojů nutných pro spuštění MCP Inspectora</h2>

<pre>
Collecting mcp
  Downloading mcp-1.5.0-py3-none-any.whl.metadata (20 kB)
Requirement already satisfied: anyio&gt;4.5 in /home/ptisnovs/.local/lib/python3.12/site-packages (from mcp) (4.6.2.post1)
Collecting httpx-sse&gt;0.4 (from mcp)
  Downloading httpx_sse-0.4.0-py3-none-any.whl.metadata (9.0 kB)
Requirement already satisfied: httpx&gt;0.27 in /home/ptisnovs/.local/lib/python3.12/site-packages (from mcp) (0.28.0)
Collecting pydantic-settings&gt;2.5.2 (from mcp)
  Downloading pydantic_settings-2.8.1-py3-none-any.whl.metadata (3.5 kB)
Requirement already satisfied: pydantic&lt;3.0.0,&gt;2.7.2 in /home/ptisnovs/.local/lib/python3.12/site-packages (from mcp) (2.10.5)
Collecting sse-starlette&gt;1.6.1 (from mcp)
  Downloading sse_starlette-2.2.1-py3-none-any.whl.metadata (7.8 kB)
Requirement already satisfied: starlette&gt;0.27 in /home/ptisnovs/.local/lib/python3.12/site-packages (from mcp) (0.41.3)
Requirement already satisfied: uvicorn&gt;0.23.1 in /home/ptisnovs/.local/lib/python3.12/site-packages (from mcp) (0.34.0)
Requirement already satisfied: idna&gt;2.8 in /usr/lib/python3.12/site-packages (from anyio&gt;4.5-&gt;mcp) (3.7)
Requirement already satisfied: sniffio&gt;1.1 in /home/ptisnovs/.local/lib/python3.12/site-packages (from anyio&gt;4.5-&gt;mcp) (1.3.1)
Requirement already satisfied: certifi in /home/ptisnovs/.local/lib/python3.12/site-packages (from httpx&gt;0.27-&gt;mcp) (2024.8.30)
Requirement already satisfied: httpcore==1.* in /home/ptisnovs/.local/lib/python3.12/site-packages (from httpx&gt;0.27-&gt;mcp) (1.0.7)
Requirement already satisfied: h11&lt;0.15,&gt;0.13 in /home/ptisnovs/.local/lib/python3.12/site-packages (from httpcore==1.*-&gt;httpx&gt;0.27-&gt;mcp) (0.14.0)
Requirement already satisfied: annotated-types&gt;0.6.0 in /home/ptisnovs/.local/lib/python3.12/site-packages (from pydantic&lt;3.0.0,&gt;2.7.2-&gt;mcp) (0.7.0)
Requirement already satisfied: pydantic-core==2.27.2 in /home/ptisnovs/.local/lib/python3.12/site-packages (from pydantic&lt;3.0.0,&gt;2.7.2-&gt;mcp) (2.27.2)
Requirement already satisfied: typing-extensions&gt;4.12.2 in /usr/lib/python3.12/site-packages (from pydantic&lt;3.0.0,&gt;2.7.2-&gt;mcp) (4.12.2)
Requirement already satisfied: python-dotenv&gt;0.21.0 in /home/ptisnovs/.local/lib/python3.12/site-packages (from pydantic-settings&gt;2.5.2-&gt;mcp) (1.0.1)
Collecting anyio&gt;4.5 (from mcp)
  Downloading anyio-4.9.0-py3-none-any.whl.metadata (4.7 kB)
Requirement already satisfied: click&gt;7.0 in /home/ptisnovs/.local/lib/python3.12/site-packages (from uvicorn&gt;0.23.1-&gt;mcp) (8.1.8)
Downloading mcp-1.5.0-py3-none-any.whl (73 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 73.7/73.7 kB 1.6 MB/s eta 0:00:00
Downloading httpx_sse-0.4.0-py3-none-any.whl (7.8 kB)
Downloading pydantic_settings-2.8.1-py3-none-any.whl (30 kB)
Downloading sse_starlette-2.2.1-py3-none-any.whl (10 kB)
Downloading anyio-4.9.0-py3-none-any.whl (100 kB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100.9/100.9 kB 4.4 MB/s eta 0:00:00
Installing collected packages: httpx-sse, anyio, sse-starlette, pydantic-settings, mcp
  Attempting uninstall: anyio
    Found existing installation: anyio 4.6.2.post1
    Uninstalling anyio-4.6.2.post1:
      Successfully uninstalled anyio-4.6.2.post1
Successfully installed anyio-4.9.0 httpx-sse-0.4.0 mcp-1.5.0 pydantic-settings-2.8.1 sse-starlette-2.2.1
</pre>

<pre>
 Usage: mcp [OPTIONS] COMMAND [ARGS]...

 MCP development tools

╭─ Options ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ --help          Show this message and exit.                                                                                          │
╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
╭─ Commands ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│ version   Show the MCP version.                                                                                                      │
│ dev       Run a MCP server with the MCP Inspector.                                                                                   │
│ run       Run a MCP server.                                                                                                          │
│ install   Install a MCP server in the Claude desktop app.                                                                            │
╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
Help on class FastMCP in module mcp.server.fastmcp.server:

class FastMCP(builtins.object)
 |  FastMCP(name: 'str | None' = None, instructions: 'str | None' = None, **settings: 'Any')
 |
 |  Methods defined here:
 |
 |  __init__(self, name: 'str | None' = None, instructions: 'str | None' = None, **settings: 'Any')
 |      Initialize self.  See help(type(self)) for accurate signature.
 |
 |  add_prompt(self, prompt: 'Prompt') -&gt; 'None'
 |      Add a prompt to the server.
 |
 |      Args:
 |          prompt: A Prompt instance to add
 |
 |  add_resource(self, resource: 'Resource') -&gt; 'None'
 |      Add a resource to the server.
 |
 |      Args:
 |          resource: A Resource instance to add
 |
 ...
 ...
 ...
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

$ mcp dev mcp_server_1.py
Need to install the following packages:
@modelcontextprotocol/inspector@0.7.0
Ok to proceed? (y) y

Starting MCP inspector...
Proxy server listening on port 3000

🔍 MCP Inspector is up and running at http://localhost:5173 🚀


{
  "contents": [
    {
      "uri": "pozdrav://Pavel",
      "mimeType": "text/plain",
      "text": "Hello, Pavel"
    }
  ]
}

{
  "contents": [
    {
      "uri": "pozdrav://",
      "mimeType": "text/plain",
      "text": "Hello, dear client"
    }
  ]
}


<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
"""Jednoduchý MCP server s jediným definovaným zdrojem."""

from mcp.server.fastmcp import FastMCP

# konstrukce serveru
mcp = FastMCP("Test")


@mcp.resource("pozdrav://")
def pozdrav() -> str:
    """Odpověď s pozdravem."""
    return f"Hello, dear client"
</pre>

<pre>
"""Jednoduchý MCP server s jediným definovaným dynamickým zdrojem."""

from mcp.server.fastmcp import FastMCP

# konstrukce serveru
mcp = FastMCP("Test")


@mcp.resource("pozdrav://{name}")
def pozdrav(name: str) -> str:
    """Odpověď s osobním pozdravem."""
    return f"Hello, {name}"
</pre>

<pre>
"""MCP server s dynamickým zdrojem a definicí nástroje (tool)."""

from mcp.server.fastmcp import FastMCP

# konstrukce serveru
mcp = FastMCP("Test")


@mcp.tool()
def factorial(n: int) -> int:
    """Výpočet faktoriálu ve smyčce."""
    f = 1
    for x in range(1, n + 1):
        f *= x
    return f


@mcp.resource("pozdrav://{name}")
def pozdrav(name: str) -> str:
    """Odpověď s osobním pozdravem."""
    return f"Hello, {name}"
</pre>

<pre>
"""Jednoduchý MCP server s jediným definovaným dynamickým zdrojem."""

import os
from mcp.server.fastmcp import FastMCP
from datetime import datetime

# konstrukce serveru
mcp = FastMCP("Test")

pid = os.getpid()

# při každém spuštění serveru se vytvoří nový soubor
with open(f"{pid}.txt", "w") as fout:
    fout.write(str(datetime.now()))


@mcp.resource("pozdrav://")
def pozdrav() -> str:
    """Odpověď s pozdravem."""
    return f"Hello, dear client"
</pre>

<pre>
"""MCP server se zdrojem,  dynamickým zdrojem a definicí nástroje (tool)."""

from mcp.server.fastmcp import FastMCP

# konstrukce serveru
mcp = FastMCP("Test")


@mcp.tool()
def factorial(n: int) -> int:
    """Výpočet faktoriálu ve smyčce."""
    f = 1
    for x in range(1, n + 1):
        f *= x
    return f


@mcp.resource("pozdrav://")
def pozdrav1() -> str:
    """Odpověď s pozdravem."""
    return f"Hello, dear client"


@mcp.resource("pozdrav://{name}")
def pozdrav2(name: str) -> str:
    """Odpověď s osobním pozdravem."""
    return f"Hello, {name}"


# přímé spuštění serveru v režimu STDIO
if __name__ == "__main__":
    mcp.run()
</pre>

<pre>
"""MCP server se zdrojem,  dynamickým zdrojem a definicí nástroje (tool)."""

from mcp.server.fastmcp import FastMCP

# konstrukce serveru
mcp = FastMCP("Test")


@mcp.tool()
def factorial(n: int) -> int:
    """Výpočet faktoriálu ve smyčce."""
    f = 1
    for x in range(1, n + 1):
        f *= x
    return f


@mcp.resource("pozdrav://")
def pozdrav1() -> str:
    """Odpověď s pozdravem."""
    return f"Hello, dear client"


@mcp.resource("pozdrav://{name}")
def pozdrav2(name: str) -> str:
    """Odpověď s osobním pozdravem."""
    return f"Hello, {name}"


# přímé spuštění serveru v režimu SSE (Server-Sent Events)
if __name__ == "__main__":
    mcp.run(transport="sse")
</pre>

<pre>
"""MCP klient, který spustí server, se kterým se komunikuje přes STDIO."""

from mcp import ClientSession, StdioServerParameters, types
from mcp.client.stdio import stdio_client

# parametry pro spuštění MCP serveru
server_params = StdioServerParameters(
    command="python",  # spustí se tento příkaz
    args=["mcp_server_5.py"],  # a předají se mu následující parametry
    env=None,  # lze definovat i proměnné prostředí
)


async def run():
    """Realizace klienta."""
    async with stdio_client(server_params) as (read, write):
        async with ClientSession(read, write) as session:
            await session.initialize()

            prompts = await session.list_prompts()
            print(prompts)

            resources = await session.list_resources()
            print(resources)

            templates = await session.list_resource_templates()
            print(templates)

            tools = await session.list_tools()
            print(tools)


# přímé spuštění klienta
if __name__ == "__main__":
    import asyncio

    asyncio.run(run())
</pre>

<pre>
"""MCP klient, který spustí server, se kterým se komunikuje přes SSE."""

from mcp import ClientSession, types
from mcp.client.sse import sse_client


async def run():
    """Realizace klienta."""
    async with sse_client(url="http://localhost:8000/sse") as (read, write):
        async with ClientSession(read, write) as session:
            await session.initialize()

            prompts = await session.list_prompts()
            print(prompts)

            resources = await session.list_resources()
            print(resources)

            templates = await session.list_resource_templates()
            print(templates)

            tools = await session.list_tools()
            print(tools)


# přímé spuštění klienta
if __name__ == "__main__":
    import asyncio

    asyncio.run(run())
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
Python a balíček <a
href="https://github.com/modelcontextprotocol/python-sdk">mcp</a> byly uloženy
do repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;tabulce zobrazené níže jsou odkazy na jednotlivé příklady:</p>

<table>
<tr><th>#</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td>1</td><td>mcp_server_1.py</td><td>jednoduchý MCP server s&nbsp;jediným definovaným zdrojem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_1.py</a></td></tr>
<tr><td>2</td><td>mcp_server_2.py</td><td>jednoduchý MCP server s&nbsp;jediným definovaným dynamickým zdrojem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_2.py</a></td></tr>
<tr><td>3</td><td>mcp_server_3.py</td><td>MCP server s&nbsp;dynamickým zdrojem a definicí nástroje (tool)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_3.py</a></td></tr>
<tr><td>4</td><td>mcp_server_4.py</td><td>MCP server s jediným definovaným dynamickým zdrojem, zápis informací o spuštění</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_4.py</a></td></tr>
<tr><td>5</td><td>mcp_server_5.py</td><td>MCP server, který se přímo spustí v&nbsp;režimu STDIO</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_5.py</a></td></tr>
<tr><td>6</td><td>mcp_server_6.py</td><td>MCP server, který se přímo spustí v&nbsp;režimu SSE</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_server_6.py</a></td></tr>
<tr><td>7</td><td>mcp_client_1.py</td><td>MCP klient, který spustí server, se kterým se komunikuje přes STDIO</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_client_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_client_1.py</a></td></tr>
<tr><td>8</td><td>mcp_client_2.py</td><td>MCP klient, který spustí server, se kterým se komunikuje přes SSE</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_client_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mcp/mcp_client_2.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>MCP Python SDK<br />
<a href="https://github.com/modelcontextprotocol/python-sdk?tab=readme-ov-file#running-your-server">https://github.com/modelcontextprotocol/python-sdk?tab=readme-ov-file#running-your-server</a>
</li>

<li>MCP protocol: Resources<br />
<a href="https://modelcontextprotocol.info/docs/concepts/resources/">https://modelcontextprotocol.info/docs/concepts/resources/</a>
</li>

<li>Example Servers<br />
<a href="https://modelcontextprotocol.io/examples">https://modelcontextprotocol.io/examples</a>
</li>

<li>Core architecture<br />
<a href="https://modelcontextprotocol.io/docs/concepts/architecture">https://modelcontextprotocol.io/docs/concepts/architecture</a>
</li>

<li>Unleashing the Power of Model Context Protocol (MCP): A Game-Changer in AI Integration<br />
<a href="https://techcommunity.microsoft.com/blog/educatordeveloperblog/unleashing-the-power-of-model-context-protocol-mcp-a-game-changer-in-ai-integrat/4397564">https://techcommunity.microsoft.com/blog/educatordeveloperblog/unleashing-the-power-of-model-context-protocol-mcp-a-game-changer-in-ai-integrat/4397564</a>
</li>

<li>MPC inspector<br />
<a href="https://github.com/modelcontextprotocol/inspector">https://github.com/modelcontextprotocol/inspector</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

