<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovny pro tvorbu grafického uživatelského rozhraní v Pythonu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovny pro tvorbu grafického uživatelského rozhraní v Pythonu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Python v&nbsp;současnosti patří mezi nejpopulárnější programovací jazyky vůbec, a to zejména ve světě otevřeného software. Tento programovací jazyk se používá jak pro tvorbu různých nástrojů ovládaných z&nbsp;příkazového řádku, tak i pro psaní serverových aplikací a v&nbsp;neposlední řadě se setkáme i s&nbsp;aplikacemi vybavenými plnohodnotným grafickým uživatelským rozhraním. A právě knihovnám a popřípadě i celým uceleným frameworkům určeným pro tvorbu GUI se budeme věnovat v&nbsp;dnešním článku.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Knihovny pro tvorbu grafického uživatelského rozhraní v&nbsp;Pythonu</a></p>
<p><a href="#k02">2. Tkinter</a></p>
<p><a href="#k03">3. appJar</a></p>
<p><a href="#k04">4. PyGTK</a></p>
<p><a href="#k05">5. PyGObject</a></p>
<p><a href="#k06">6. PyQt</a></p>
<p><a href="#k07">7. PySide</a></p>
<p><a href="#k08">8. wxPython</a></p>
<p><a href="#k09">9. Wax</a></p>
<p><a href="#k10">10. Kivy</a></p>
<p><a href="#k11">11. Pyforms</a></p>
<p><a href="#k12">12. PyjamasDesktop (pyjs Desktop)</a></p>
<p><a href="#k13">13. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k14">14. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Knihovny pro tvorbu grafického uživatelského rozhraní v&nbsp;Pythonu</h2>

<p>Pro programovací jazyk Python, kterému se na tomto serveru <a href="https://mojefedora.cz/stitek/python/">pravidelně věnujeme</a>, vzniklo poměrně velké množství knihoven i celých (mnohdy velmi rozsáhlých) frameworků určených pro tvorbu grafického uživatelského rozhraní. Jednotlivé knihovny se od sebe samozřejmě v&nbsp;mnoha směrech odlišují, ať již se to týká způsobu modelování grafického uživatelského rozhraní a specifikace reakcí na události vyvolané uživatelem, tak i tím, jaká (většinou nativní) knihovna je použita pro vykreslování celých oken, dialogů i jednotlivých ovládacích prvků. Ve světě Linuxu se dnes setkáme především s&nbsp;nativními knihovnami <i>GTK+</i> (použito zejména v&nbsp;desktopovém prostředí GNOME Shell) a Qt (použito v&nbsp;desktopovém prostředí KDE), ale nesmíme zapomenout ani na multiplatformní knihovnu pojmenovanou <i>wxWidgets</i> (dříve se nazývala <i>wxWindows</i>) nebo taktéž multiplatformní knihovnu <i>Tk</i>. Relativně nedávno se pro Python objevily i zcela nové knihovny určené pro tvorbu GUI umožňující používat webové technologie (<i>PyjamasDesktop</i>) popř.&nbsp;mobilní platformy (<i>Kivy</i>). S&nbsp;jednotlivými GUI knihovnami se ve stručnosti seznámíme v&nbsp;dnešním článku, ve článcích navazujících se pak již budeme podrobněji věnovat vybraným knihovnám.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Tkinter</h2>

<p>Popis první knihovny určené pro tvorbu GUI začneme poněkud zeširoka, protože pythonovská knihovna nazvaná <i>Tkinter</i> tvoří rozhraní ke knihovně <i>Tk</i>, přičemž <i>Tk</i> je takzvaný <i>toolkit</i> (z&nbsp;pohledu programovacího jazyka se přitom jedná o knihovnu) určený pro jednoduchý a rychlý vývoj programů obsahujících grafické uživatelské rozhraní. Autorem tohoto toolkitu je, podobně jako v&nbsp;případě programovacího jazyka <i>Tcl</i>, <a href="https://en.wikipedia.org/wiki/John_Ousterhout">John Ousterhout</a>, mezi jehož zájmy v&nbsp;minulosti patřila automatizace (skriptovatelnost) aplikací a právě tvorba grafických uživatelských rozhraní. V&nbsp;minulosti byl tento toolkit velmi oblíbený, proto se dodával (a stále dodává) spolu s&nbsp;instalací programovacího jazyka <i>Tcl</i> a &ndash; což nás dnes zajímá mnohem více &ndash; i s&nbsp;jazykem Python společně s&nbsp;rozhraním <i>Tkinter</i>. I z&nbsp;tohoto důvodu se také v&nbsp;různých materiálech a dokumentech často setkáme se společným názvem <i>Tcl/Tk</i>. Samotný název <i>Tk</i> jednoduše znamená zkratku slova <i>ToolKit</i>.</p>

<p>Důležitou vlastností knihovny <i>Tk</i>, která zůstala zachována i v&nbsp;<i>Tkinteru</i>, je úsporný, flexibilní a přitom čitelný zápis programu se specifikací ovládacích prvků, jejich umístění v&nbsp;oknech, vlastností i <i>callback funkcí</i> volaných v&nbsp;důsledku uživatelské činnosti. Udává se, že poměr psaného kódu v&nbsp;<i>Tcl/Tk</i> je vůči dnes již obstarožnímu a prakticky zapomenutému <i>Motifu</i> na hodnotách 1:20 a vůči základnímu <i>Xlibu</i> dokonce 1:100! (vše se samozřejmě týká tvorby grafického uživatelského rozhraní). Na tomto místě je však nutné podotknout, že Motif je z&nbsp;dnešního pohledu již zastaralá knihovna a navíc dnes mnoho moderních knihoven pro GUI podporuje deklaraci grafického uživatelského rozhraní v&nbsp;konfiguračních souborech, nikoli tedy programem (což má své výhody, ale samozřejmě i zápory). Nicméně i dnes představuje kombinace Tcl+Tk či ještě lépe Python+Tkinter poměrně dobrou volbu pro mnoho typů aplikací s&nbsp;GUI.</p>

<p>V&nbsp;průběhu postupného vývoje novějších (avšak ne nutně dokonalejších) programovacích nástrojů byla knihovna <i>Tk</i> kromě Tcl použita i v&nbsp;mnoha dalších programovacích jazycích. Pravděpodobně nejznámější je, samozřejmě kromě samotné dvojice <i>Tcl/Tk</i>, modul určený pro programovací jazyk <i>Perl</i> (Perl/Tk) a <i>Python</i> (Tkinter &ndash; Tk Interface, což je téma navazujícího článku). Knihovnu <i>Tk</i> je však samozřejmě možné použít i v dalších programovacích jazycích, i když v&nbsp;mnoha případech ne tak snadně a efektivně, jako ze samotného <i>Tcl</i>. V&nbsp;praxi se často s&nbsp;výhodou používá či používalo spojení programů napsaných v&nbsp;programovacím jazyku <i>C</i> či s&nbsp;<i>C++</i> s&nbsp;grafickým uživatelským rozhraním, které je vytvořeno pomocí <i>Tcl</i> a <i>Tk</i>.</p>

<p>S&nbsp;knihovnou <i>Tkinter</i> se blíže seznámíme v&nbsp;dalším pokračování tohoto článku, kde si uvedeme větší množství příkladů. Dnes si pouze pro ilustraci ukážeme, jak jednoduchá může být (značně primitivní) aplikace s&nbsp;jedním oknem a textovým návěštím umístěným do tohoto okna. Podobný příklad si posléze upravíme i pro některé další knihovny popsané v&nbsp;navazujících kapitolách:</p>

<pre>
#!/usr/bin/env python

from tkinter import *

root = Tk()

label = Label(root, text="Hello world!")

label.pack()

root.mainloop()
</pre>

<p>Ve skutečnosti se však v&nbsp;současnosti používá takzvané <i>TTk</i> neboli <i>Themed Tk)</i> a program bude muset být nepatrně upraven (přidá se import a namísto <strong>Label()</strong> se zavolá konstruktor <strong>ttk.Label()</strong>):</p>

<pre>
#!/usr/bin/env python

from tkinter import *
from tkinter import ttk

root = Tk()

label = ttk.Label(root, text="Hello world!")

label.pack()

root.mainloop()
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. appJar</h2>

<p>Nad rozhraním <i>Tkinter</i> zmíněným <a href="#k02">v&nbsp;předchozí kapitole</a> je postaveno další programové rozhraní nazvané jednoduše <i>appJar</i>. Tvůrcem tohoto rozhraní je Richard Jarvis, který pracuje jako učitel. Richardovým cílem bylo navrhnout <i>appJar</i> takovým způsobem, aby byla programová tvorba grafického uživatelského rozhraní co nejjednodušší a aby tak bylo možné knihovnu <i>appJar</i> použít ve výuce. Tento cíl se skutečně podařilo splnit, takže v&nbsp;současnosti představuje <i>appJar</i> s&nbsp;velkou pravděpodobností ten nejrychlejší a současně i nejjednodušší způsob, jak v&nbsp;Pythonu vytvořit aplikaci s&nbsp;grafickým uživatelským rozhraním, i když je nutné poznamenat, že některé pokročilejší ovládací prvky nejsou k&nbsp;dispozici (některé nejsou k&nbsp;dispozici ani v&nbsp;původním Tkinteru). Navíc vlastně ani není nutné <i>appJar</i> instalovat, což je na školách obecně problematické, neboť to vyžaduje koordinaci učitele s&nbsp;administrátorem. Namísto instalace je pouze nutné z&nbsp;projektových stránek <a href="http://appjar.info/">http://appjar.info/</a> stáhnout ZIP archiv a ten rozbalit do adresáře s&nbsp;projektem (a popřípadě nastavit <strong>.gitignore</strong>, aby se vzniklý podadresář neukládal do repositáře).</p>

<p>Demonstrační příklad, v&nbsp;němž se vytvoří okno obsahující textové návěští, bude při použití knihovny <i>appJar</i> ještě jednodušší a kratší, než tomu bylo výše zmíněné u knihovny <i>Tkinter</i>. Ostatně se můžete přesvědčit sami porovnáním obou zdrojových kódů &ndash; nyní se jedná o pouhé čtyři programové řádky:</p>

<pre>
#!/usr/bin/env python

from appJar import gui

app = gui()

app.addLabel("title", "Hello world!")

app.go()
</pre>

<p>Poznámka: úvodní řádek se <a href="https://en.wikipedia.org/wiki/Shebang_%28Unix%29">shebangem</a> je možné vynechat, pokud se bude skript spouštět přes interpret Pythonu.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. PyGTK</h2>

<p>Další knihovnou určenou pro tvorbu grafického uživatelského prostředí v&nbsp;programovacím jazyku Python, s&nbsp;níž se dnes alespoň ve stručnosti seznámíme, je knihovna nazvaná <i>PyGTK</i>. Název této knihovny již velmi přesně prozrazuje, že je určena pro desktopová prostředí založená na GTK+, konkrétně ovšem na GTK+ 2.x. Jedná se tedy o dnes již poněkud zastaralou knihovnu, která se však stále používá, a to zejména u aplikací portovaných na operační systémy Microsoft Windows. Pokud budete potřebovat vytvořit grafické uživatelské rozhraní pro desktopová prostředí založená na novější GTK+ 3.x, použijte raději <a href="#k05">dále zmíněnou</a> knihovnu nazvanou <i>PyGObject</i>. S&nbsp;využitím <i>PyGTK</i> vzniklo relativně <a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK">velké množství aplikací</a>, například Gedit, Ubiquity, Gnome Software Center, Gajim, starší verze PyChess, OpenEV apod. Tyto aplikace jsou nebo budou upraveny takovým způsobem, aby využily novější knihovnu <i>PyGObject</i>.</p>

<p>Demonstrační příklad, který po svém spuštění otevře okno a v&nbsp;něm vykreslí textové návěští, bude při použití knihovny PyGTK vypadat následovně:</p>

<pre>
import pygtk
pygtk.require('2.0')
import gtk


def delete_event(widget, event, data=None):
    print "delete event occurred"
    return False


def destroy(widget, data=None):
    print "destroy signal occurred"
    gtk.main_quit()


window = gtk.Window(gtk.WINDOW_TOPLEVEL)
window.connect("delete_event", delete_event)
window.connect("destroy", destroy)

label = gtk.Label("Hello world!")
window.add(label)
label.show()

window.show()
gtk.main()
</pre>

<p>Povšimněte si, že se již jedná o relativně složitý kód, v&nbsp;němž se explicitně řeší způsob reakce na událost, která vznikne při zavírání okna. V&nbsp;předchozích knihovnách bylo toto chování stanoveno implicitně.</p>

<p>Pokud z&nbsp;aplikace odstraníme kód pro reakci na zavření okna, bude nutné aplikaci zastavit z&nbsp;příkazového řádku nebo oblíbeným příkazem <strong>xkill</strong>:</p>

<pre>
import pygtk
pygtk.require('2.0')
import gtk


window = gtk.Window(gtk.WINDOW_TOPLEVEL)

label = gtk.Label("Hello world!")
window.add(label)
label.show()

window.show()
gtk.main()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. PyGObject</h2>

<p>Knihovna PyGtk, která byla zmíněná <a href="#k04">v&nbsp;předchozí kapitole</a>, je postupně nahrazována novější knihovnou nazvanou PyGObject. Tato knihovna poskytuje programátorům používajícím jazyk Python rozhraní k&nbsp;nativní knihovně <a href="https://developer.gnome.org/gobject/stable/">GObject</a> využívané v&nbsp;systému GNOME. Díky tomu lze přímo z&nbsp;Pythonu pracovat nejenom s&nbsp;prvky grafického uživatelského rozhraní, ale i s&nbsp;<a href="https://developer.gnome.org/gio/stable/">GIO</a> či s&nbsp;multimediálním frameworkem <a href="https://gstreamer.freedesktop.org/">GStreamer</a>. Mezi užitečné aplikace, které již dnes knihovnu <i>PyGObject</i> používají, patří například Meld, PyChess či video editor OpenShot. Seznam aplikací založených na PyGObjectu lze nalézt například na Wikipedii: <a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject</a>. I knihovnou PyGObject se budeme podrobněji zabývat v&nbsp;navazujících článcích.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. PyQt</h2>

<p>Podobně jako knihovna PyGTK, která vývojářům zajišťovala rozhraní mezi programovacím jazykem Python a knihovnou GTK+, je tomu i u knihovny nazvané PyQt, samozřejmě ovšem s&nbsp;tím &bdquo;nepatrným&ldquo; rozdílem, že PyQt představuje rozhraní pro Qt, která je používána (nejenom) v&nbsp;desktopovém prostředí KDE (ve skutečnosti se s&nbsp;Qt setkáme i iOS či Androidu). Ve skutečnosti však Qt není pouze knihovna určená pro tvorbu grafického uživatelského rozhraní, ale ucelený framework, což mj.&nbsp;znamená, že v&nbsp;PyQt mají vývojáři k&nbsp;dispozici rozhraní se zhruba 440 třídami a 6000 funkcemi i metodami, s&nbsp;jejichž využitím je možné vytvářet grafické uživatelské rozhraní (i s&nbsp;použitím deklarativního jazyka <a href="http://doc.qt.io/qt-5/qmlapplications.html">QML</a>), používat známý widget <i>QScintilla</i> používaný v&nbsp;textových editorech a procesorech, pracovat s&nbsp;relačními databázemi, používat vektorový grafický formát <a href="https://www.root.cz/clanky/vektorovy-graficky-format-svg/">SVG</a>, pracovat se soubory XML apod.</p>

<p>Demonstrační příklad, který po svém spuštění vytvoří okno a umístí do něho textové návěští, se s&nbsp;využitím knihovny PyQt může napsat následujícím způsobem:</p>

<pre>
import sys

# zajisteni importu noveho rozhrani
import sip

sip.setapi('QDate', 2)
sip.setapi('QDateTime', 2)
sip.setapi('QString', 2)
sip.setapi('QTextStream', 2)
sip.setapi('QTime', 2)
sip.setapi('QUrl', 2)
sip.setapi('QVariant', 2)

from PyQt4.Qt import *

qt_application = QApplication(sys.argv)

label = QLabel('Hello world!')

label.show()

qt_application.exec_()
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. PySide</h2>

<p>Druhá knihovna zajišťující rozhraní mezi Qt a Pythonem se jmenuje PySide. Jedná se vlastně o fork výše zmíněného rozhraní PyQt, ovšem PySide používá odlišné licencování, konkrétně licenci <a href="https://www.gnu.org/copyleft/lesser.html">LGPL</a>. Díky tomu lze PySide bez problémů použít jak v&nbsp;uzavřených komerčních aplikacích, tak i v&nbsp;open source programech. Opět si ukažme, jak by náš demonstrační příklad mohl vypadat, kdybychom pro grafické uživatelské rozhraní použili knihovnu PySide:</p>

<pre>
import sys

from PySide.QtCore import *
from PySide.QtGui import *

qt_application = QApplication(sys.argv)

label = QLabel('Hello world!')

label.show()

qt_application.exec_()
</pre>

<pre>
import sys

from PySide.QtCore import *
from PySide.QtGui import *

qt_application = QApplication(sys.argv)


class HelloWorldLabel(QLabel):
    def __init__(self):
        QLabel.__init__(self, "Hello world!")

        self.setMinimumSize(QSize(600, 400))
        self.setAlignment(Qt.AlignCenter)
        self.setWindowTitle('Hello world!')

    def run(self):
        self.show()
        qt_application.exec_()


HelloWorldLabel().run()
</pre>

<p>I touto knihovnou se budeme podrobněji zabývat v&nbsp;dalších pokračováních tohoto článku.</p>



<p><a name="k08"></a></p>
<h2 id="k08">8. wxPython</h2>

<p>Další knihovnou určenou pro tvorbu grafického uživatelského rozhraní v&nbsp;Pythonu, je knihovna nazvaná <i>wxPython</i>, která zajišťuje rozhraní k&nbsp;populární GUI knihovně <i>wxWidgets</i> (možná ji znáte ještě pod starším jménem <i>wxWindows</i>, ovšem autor byl v&nbsp;roce 2004 společností Microsoft v&nbsp;podstatě donucen k&nbsp;přejmenování). Díky existenci knihovny <i>wxPython</i> je možné tvořit multiplatformní aplikace, které lze bez nutnosti dalších úprav používat jak na Linuxu, tak i na Mac OS X, Microsoft Windows (od XP do Windows 10), ale i na AmigaOS (prozatím v&nbsp;beta fázi). Navíc se jedná o stabilní a relativně snadno použitelnou knihovnu; ostatně i Guido van Rossum, tedy autor programovacího jazyka Python, <a href="https://wxpython.org/quotes.php">prohlásil</a>: &bdquo;wxPython is the best and most mature cross-platform GUI toolkit, given a number of constraints. The only reason wxPython isn't the standard Python GUI toolkit is that Tkinter was there first.&ldquo;. Kromě <i>wxPython</i> existuje ke knihovně <i>wxWidgets</i> rozhraní pro <a href="https://en.wikipedia.org/wiki/List_of_language_bindings_for_wxWidgets">mnoho dalších jazyků</a>, což jen svědčí o její popularitě.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Wax</h2>

<p>Jen krátce se zmíním o knihovně <i>Wax</i>, která ovšem v&nbsp;současnosti není aktivně vyvíjena &ndash; její poslední verze byla vydána již v&nbsp;roce 2006. Tato knihovna je postavena nad wxPython a měla sloužit ke zjednodušení tvorby GUI. Navíc mělo být celé rozhraní více &bdquo;pythonovské&ldquo;, protože u wxPython je patrné, že wxWidgets je knihovna primárně určená pro programovací jazyk C++ a nikoli pro Python.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Kivy</h2>

<p>Další knihovnou pro tvorbu grafického uživatelského prostředí, s&nbsp;níž se dnes alespoň ve stručnosti seznámíme, je knihovna nazvaná <i>Kivy</i>. Jedná se vlastně o ucelenou platformu určenou především pro tvorbu aplikací pro mobilní platformy, tedy pro Android a iOS. Ve skutečnosti je ale možné Kivy použít i na běžných desktopech s&nbsp;operačními systémy Mac OS X, Microsoft Windows a samozřejmě (a to v&nbsp;neposlední řadě) i s&nbsp;Linuxem. V&nbsp;tomto případě však nebudou k&nbsp;dispozici všechny možnosti ovládání, především rozhraní multitouch určené primárně pro dotykové obrazovky. Už z&nbsp;této poznámky je asi zřejmé, že se Kivy bude v&nbsp;mnoha ohledech odlišovat od všech výše uvedených knihoven a frameworků, které jsou určeny především pro běžné desktopy ovládané kombinací klávesnice a myši. Kivy však jde ještě dále, protože programátorům nabízí prakticky všechny technologie, které jsou pro moderní GUI aplikace vyžadovány. A protože se jedná o knihovnu určenou především pro mobilní zařízení, je podporována i OpenGL ES 2, takže vykreslování ovládacích prvků je akcelerováno. Navíc je možné pro deklaraci GUI použít speciální jazyk nazvaný Kv, který zde hraje podobnou roli jako například QML (Qt Modeling Language).</p>

<p>Opět se podívejme na to, jak by mohl vypadat příklad s&nbsp;oknem (plochou), do něhož je umístěno jednoduché textové návěští. Celá aplikace se skládá z&nbsp;jediné třídy obsahující v&nbsp;našem případě jedinou funkci vytvářející textové návěští. Chování aplikace je v&nbsp;tomto případě řízeno implicitními pravidly:</p>

<pre>
from kivy.app import App
from kivy.uix.label import Label

class TestApp(App):
    def build(self):
        return Label(text='Hello World')

TestApp().run()
</pre>

<p>Touto velmi zajímavou knihovnou se budeme podrobněji zabývat v&nbsp;dalších částech seriálu.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Pyforms</h2>

<p>Pyforms je poměrně zajímavá knihovna, která umožňuje tvorbu aplikací jak s&nbsp;klasickým &bdquo;desktopovým&ldquo; grafickým uživatelským rozhraním, tak i s&nbsp;rozhraním webovým a navíc s&nbsp;volitelným terminálem. Pyforms lze samozřejmě používat na Linuxu, ale i na Mac OS X i na Microsoft Windows, a to mj.&nbsp;i díky tomu, že se pro samotné GUI využívá nativní knihovna Qt a interně se používají třídy z&nbsp;PyQt.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. PyjamasDesktop (pyjs Desktop)</h2>

<p>Projekt nazvaný <i>PyjamasDesktop</i> vznikl z&nbsp;projektu <i>Pyjamas</i>, který možná čtenáři tohoto článku znají. Tento projekt zajišťuje, aby se webová aplikace naprogramovaná v&nbsp;Pythonu mohla spouštět podobně jako běžná desktopová aplikace, což je ostatně postup, který můžeme znát z&nbsp;mnoha úspěšných desktopových aplikací, například z&nbsp;textového editoru Atom založeného na frameworku Electron. Na rozdíl od většiny podobných knihoven, které primárně používají JavaScript, je ovšem Pyjamas i PyjamasDesktop zaměřen na Python, protože transkripce do JavaScriptu je prováděna automaticky a většinou bez vědomí programátora.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech demonstračních příkladů, v&nbsp;nichž se vytvořilo jednoduché GUI s&nbsp;oknem a textovým návěštím s&nbsp;použitím různých knihoven a frameworků, naleznete na následujících odkazech:</p>

<table>
<tr><th>Příklad používající:</th><th>Odkaz</th></tr>
<tr><td>Knihovnu Tkinter</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/hello_world.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/hello_world.py</a></td></tr>
<tr><td>Knihovnu Tkinter a TTk (Themed Tk)</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/hello_world_no_ttk.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/hello_world_no_ttk.py</a></td></tr>
<tr><td>Knihovnu appJar</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/appJar/hello_world.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/appJar/hello_world.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Modul PyGTK</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PyGtk/hello_world.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PyGtk/hello_world.py</a></td></tr>
<tr><td>Modul PyGTK (bez událostí)</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PyGtk/hello_world_no_events.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PyGtk/hello_world_no_events.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Modul PyQt</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PyQt/hello_world.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PyQt/hello_world.py</a></td></tr>
<tr><td>Moduly PyQt a PySide</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/hello_world.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/hello_world.py</a></td></tr>
<tr><td>Moduly PyQt a PySide, druhá verze</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/hello_world2.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/hello_world2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Framework Kivy</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Kivy/hello_world.py"></a>https://github.com/tisnik/presentations/blob/master/Python_GUI/Kivy/hello_world.py</td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Odkazy na Internetu</h2>

<ol>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>appJar<br />
<a href="http://appjar.info/">http://appjar.info/</a>
</li>

<li>appJar (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/AppJar">https://en.wikipedia.org/wiki/AppJar</a>
</li>

<li>appJar na Pythonhosted<br />
<a href="http://pythonhosted.org/appJar/">http://pythonhosted.org/appJar/</a>
</li>

<li>Stránky projektu PyGTK<br />
<a href="http://www.pygtk.org/">http://www.pygtk.org/</a>
</li>

<li>PyGTK (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PyGObject<br />
<a href="https://wiki.gnome.org/Projects/PyGObject">https://wiki.gnome.org/Projects/PyGObject</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Stránky projektu PyQt<br />
<a href="https://riverbankcomputing.com/software/pyqt/intro">https://riverbankcomputing.com/software/pyqt/intro</a>
</li>

<li>PyQt (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PySide<br />
<a href="https://wiki.qt.io/PySide">https://wiki.qt.io/PySide</a>
</li>

<li>PySide (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PySide">https://en.wikipedia.org/wiki/PySide</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>

<li>Kivy (framework, Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Kivy_(framework)">https://en.wikipedia.org/wiki/Kivy_(framework)</a>

<li>QML Applications<br />
<a href="http://doc.qt.io/qt-5/qmlapplications.html">http://doc.qt.io/qt-5/qmlapplications.html</a>
</li>

<li>KDE<br />
<a href="https://www.kde.org/">https://www.kde.org/</a>
</li>

<li>Qt<br />
<a href="https://www.qt.io/">https://www.qt.io/</a>
</li>

<li>GNOME<br />
<a href="https://en.wikipedia.org/wiki/GNOME">https://en.wikipedia.org/wiki/GNOME</a>
</li>

<li>Category:Software that uses PyGTK<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK</a>
</li>

<li>Category:Software that uses PyGObject<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject</a>
</li>

<li>Category:Software that uses wxWidgets<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets">https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets</a>
</li>

<li>GIO<br />
<a href="https://developer.gnome.org/gio/stable/">https://developer.gnome.org/gio/stable/</a>
</li>

<li>GStreamer<br />
<a href="https://gstreamer.freedesktop.org/">https://gstreamer.freedesktop.org/</a>
</li>

<li>GStreamer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GStreamer">https://en.wikipedia.org/wiki/GStreamer</a>
</li>

<li>Wax Gui Toolkit<br />
<a href="https://wiki.python.org/moin/Wax">https://wiki.python.org/moin/Wax</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

