<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Evil: kombinace editačních příkazů Vimu a síly Emacsu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V článku se seznámíme s přídavným modulem Evil určeným pro slavný textový editor Emacs. Díky tomuto modulu je možné v Emacsu používat editační příkazy a režimy (stavy) neméně slavného editoru Vim, takže uživatelé mohou synergicky využít výhody obou těchto zdánlivě nepřátelských světů.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Evil: kombinace editačních příkazů Vimu a síly Emacsu</a></p>
<p><a href="#k02">2. Proč by měl být Emacs zajímavý i pro Vimaře?</a></p>
<p><a href="#k03">3. Emacs není jediný editor s&nbsp;emulací Vimu</a></p>
<p><a href="#k04">4. Instalace balíčku Evil do Emacsu</a></p>
<p><a href="#k05">5. Povolení režimu Evil, přepínání režimů Emacs/Vim</a></p>
<p><a href="#k06">6. Základní editační příkazy</a></p>
<p><a href="#k07">7. Práce s&nbsp;registry (<i>registers</i>)</a></p>
<p><a href="#k08">8. Použití značek (<i>marks</i>)</a></p>
<p><a href="#k09">9. Uživatelská makra</a></p>
<p><a href="#k10">10. Další přizpůsobení Emacsu pro skalní Vimaře</a></p>
<p><a href="#k11">11. Modifikace funkce klávesy <strong>Y</strong></a></p>
<p><a href="#k12">12. Balíček <strong>evil-numbers</strong></a></p>
<p><a href="#k13">13. Instalace a konfigurace balíčku <strong>evil-numbers</strong></a></p>
<p><a href="#k14">14. Ostatní užitečná nastavení</a></p>
<p><a href="#k15">15. Mapování kláves ve Vimu</a></p>
<p><a href="#k16">16. Mapování kláves v&nbsp;Emacsu</a></p>
<p><a href="#k17">17. Evil a Elisp</a></p>
<p><a href="#k18">18. Využití funkcí <strong>evil-*</strong></a></p>
<p><a href="#k19">19. Obsah navazujícího článku &ndash; projekt <strong>Spacemacs</strong></i></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Evil: kombinace editačních příkazů Vimu a síly Emacsu</h2>

<p>V&nbsp;dnešním článku se seznámíme s&nbsp;pluginem určeným pro slavný
textový editor Emacs. Tento plugin se jmenuje <i>Evil</i> a umožňuje ovládat
Emacs pomocí klávesových zkratek emulujících (a to velmi důkladně) další slavný
textový editor Vim. Díky tomuto pluginu je tak umožněna synergie schopností
Vimu s&nbsp;univerzálností Emacsu. Se samotným Emacsem jsme se na Rootu již
setkali, a to dokonce několikrát. Především vyšly dva seriály [<a
href="https://www.root.cz/serialy/emacs-viac-nez-len-editor/">1</a>] [<a
href="https://www.root.cz/serialy/emacs-pro-mirne-pokrocile/">2</a>] věnované
použití Emacsu, poměrně podrobně jsme si popsali i <a
href="https://www.root.cz/clanky/historie-vyvoje-textovych-editoru-eine-zwei-emacs/">historii
vzniku tohoto textového editoru</a> a taktéž jsme si ukázali schopnosti Emacsu
při <a
href="https://www.root.cz/clanky/graficka-nadstavba-nad-gnu-debuggerem-gdbgui-a-jeji-alternativy/#k07">ladění
nativních aplikací</a> (samotné ladění je prováděno GNU Debuggerem, Emacs zde
slouží především jako inteligentní front end). Prozatím <a
href="https://www.root.cz/clanky/pouziti-emacsu-pro-porovnavani-a-slucovani-souboru/">poslední
článek</a> se věnoval režimu interaktivního porovnávání souborů.</p>

<img src="https://i.iinfo.cz/images/325/evil1-1.png" class="image-337456" alt="&#160;" width="754" height="741" />
<p><i>Obrázek 1: Spuštění textového editoru Emacs se zobrazením hypertextového
souboru s&nbsp;nápovědou.</i></p>

<p>I přesto, že v&nbsp;současnosti existuje poměrně velké množství
programátorských textových editorů postavených na moderních technologiích
(jmenujme například <a
href="https://www.root.cz/clanky/atom-moderni-textovy-editor/">Atom</a>, <a
href="https://www.root.cz/clanky/sublime-text-2-pokrocily-editor-vychazejici-z-vimu/">Sublime
Text 2</a>, <a
href="https://www.root.cz/clanky/light-table-interaktivni-vyvojove-prostredi/">Light
Table</a> či projekt Kakoune), stále mnoho uživatelů &ndash; ať již se jedná o
programátory, administrátory, testery atd. &ndash; používá dnes již klasické
editory <a href="https://www.root.cz/n/vim/">Vim</a> a <a
href="https://www.root.cz/n/emacs/">Emacs</a>. Ostatně není se čemu divit,
protože jak ve Vimu, tak i v&nbsp;Emacsu lze s&nbsp;texty pracovat velmi
efektivně a navíc je možné si mnohé úlohy plně zautomatizovat, například
prostým opakováním příkazu, použitím uživatelských maker, mapování kláves či
dokonce vytvořením složitějších skriptu/pluginu.</p>

<img src="https://i.iinfo.cz/images/325/evil1-2.png" class="image-337457" alt="&#160;" width="754" height="741" />
<p><i>Obrázek 2: GNU Emacs přepnutý do takzvaného ediff režimu.</i></p>

<p><div class="rs-tip-major">Důležité upozornění: v&nbsp;současnosti se používá
několik typů textových editorů, v&nbsp;jejichž názvu objevíme slovo Emacs.
Jedná se například o <a
href="https://en.wikipedia.org/wiki/MicroEMACS">MicroEMACS</a> a jeho varianty,
z&nbsp;nichž jedna je používána a <a
href="https://git.kernel.org/pub/scm/editors/uemacs/uemacs.git">udržována</a>
Linusem Torvaldsem. Dnes se ovšem zaměříme na popis možností GNU Emacsu, i když
popisovaný režim by měl být funkční i v&nbsp;XEmacsu (pokud ho ještě někdo
používá namísto GNU Emacsu). Všechny popisované funkce je samozřejmě možné
použít jak tehdy, když je GNU Emacs spuštěn s&nbsp;plnohodnotným grafickým
uživatelským rozhraním, tak i v&nbsp;případě, že používáte GNU Emacs spuštěný
v&nbsp;terminálu, například s&nbsp;využitím balíčku <strong>emacs-nox</strong>
(nox = no X).</div></p>

<a href="https://www.root.cz/obrazek/337458/"><img src="https://i.iinfo.cz/images/325/evil1-3-prev.png" class="image-337458" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 3: Pokud vám grafické uživatelské rozhraní u textových editorů
z&nbsp;nějakého důvodu nevyhovuje a dáváte přednost použití terminálu, je možné
Emacs startovat s&nbsp;volbou <strong>-nw</strong> nebo
<strong>--no-window-system</strong>. Pokud se Emacs spouští z&nbsp;textové
konzole, samozřejmě se přepne do čistě textového rozhraní.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Proč by měl být Emacs zajímavý i pro Vimaře?</h2>

<p>Pokud tento článek čte dlouholetý příznivce Vimu, asi si klade otázku, zda
mu použití Emacsu skutečně může přinést nějaké výhody a jestli má smysl si
Emacs + Evil vyzkoušet. Samozřejmě jsou požadavky uživatelů různé, ale
vyzkoušení Evilu může být přínosné, zejména ve chvíli, kdy se použije ještě
nějaký další plugin měnící Emacs v&nbsp;integrované vývojové prostředí (navíc
je vždy vhodné znát možnosti &bdquo;nepřítele&ldquo; :-). Vim je samozřejmě
taktéž rozšiřitelný díky existenci <i>Vim Scriptu</i>, ovšem například
integrace dynamicky typovaných jazyků je v&nbsp;Emacsu (podle mých zkušeností)
lepší. Díky tomu, že je tento programátorský editor relativně snadno
rozšiřitelný s&nbsp;využitím skriptů a modulů naprogramovaných <a
href="https://www.root.cz/clanky/programovaci-jazyk-lisp-a-lisp-machines/">v&nbsp;jazyce
Lisp</a>, přesněji řečeno v&nbsp;jeho dialektu nazvaném <a
href="https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html">Emacs
Lisp</a> (též <i>Elisp</i>), existuje v&nbsp;současnosti poměrně velké množství
propracovaných modulů, které z&nbsp;<i>Emacsu</i> vytváří sofistikované
integrované vývojové prostředí (IDE), jež se navíc v&nbsp;případě potřeby
dokáže přizpůsobit mnoha programovacím jazykům (překladačům ale i
interpretrům).</p>

<p><div class="rs-tip-major">Jen pro upřesnění: všech cca 1400 článků, které
jsem pro Root napsal, bylo vytvořeno ve Vimu. První články ještě ve starodávném
Vimu 5, poměrně dlouho jsem používal Vim 6 a dnes používám Vim 7 (starší
notebook) a samozřejmě Vim 8.</div></p>

<img src="https://i.iinfo.cz/images/325/evil1-4.png" class="image-337459" alt="&#160;" width="754" height="741" />
<p><i>Obrázek 4: Porovnání tří variant zdrojového kódu v&nbsp;ediff
režimu.</i></p>

<p>Textový editor <i>Emacs</i> je možné v&nbsp;závislosti na tom, jaký typ
souboru je právě otevřený, přepínat mezi různými režimy, přičemž v&nbsp;každém
režimu mohou být použity jiné klávesové zkratky, zobrazena odlišná okna
(nejenom klasická okna s&nbsp;editovaným textem) apod. Příkladem může být režim
ladění programů s&nbsp;využitím GNU Debuggeru. O propojení debuggeru
s&nbsp;Emacsem se stará knihovna <i>GUD</i> neboli <i>Grand Unified
Debugger</i>, s&nbsp;níž se můžete seznámit v&nbsp;článku <a
href="https://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-5-ladeni-aplikaci-v-editorech-emacs-a-vim/">Debuggery
a jejich nadstavby v Linuxu (5): ladění aplikací v editorech Emacs a Vim</a>.
Zapomenout nesmíme ani na slavný <i>Org-mode</i> nabízející možnosti plánovače
úloh, tvorbu strukturovaných dokumentů, přípravu programů schůzek, práci
s&nbsp;tabulkami (v&nbsp;čistě textových dokumentech). Ostatně znám několik
lidí (neprogramátorů), kteří přešli na Emacs právě kvůli existenci
<i>Org-mode</i>.</p>

<img src="https://i.iinfo.cz/images/325/evil1-5.png" class="image-337460" alt="&#160;" width="767" height="572" />
<p><i>Obrázek 5: Podpora ladění přímo z&nbsp;prostředí Emacsu &ndash;
inicializace knihovny GUD a připojení Emacsu ke GNU Debuggeru.</i></p>

*** image ***
<p><i>Obrázek 4: Porovnání tří variant zdrojového kódu v&nbsp;ediff režimu.</i></p>

<p><div class="rs-tip-major">Poznámka: mimochodem, výše zmíněný editor Kakoune je modální, takže Vi a jeho deriváty nejsou jedinými v&nbsp;současnosti používanými modálními editory.</div></p>

<p>Textový editor <i>Emacs</i> je možné v&nbsp;závislosti na tom, jaký typ souboru je právě otevřený, přepínat mezi různými režimy, přičemž v&nbsp;každém režimu mohou být použity jiné klávesové zkratky, zobrazena odlišná okna (nejenom klasická okna s&nbsp;editovaným textem) apod. Příkladem může být režim ladění programů s&nbsp;využitím GNU Debuggeru. O propojení debuggeru s&nbsp;Emacsem se stará knihovna <i>GUD</i> neboli <i>Grand Unified Debugger</i>, s&nbsp;níž se můžete seznámit v&nbsp;článku <a href="https://mojefedora.cz/debuggery-a-jejich-nadstavby-v-linuxu-5-ladeni-aplikaci-v-editorech-emacs-a-vim/">Debuggery a jejich nadstavby v Linuxu (5): ladění aplikací v editorech Emacs a Vim</a>. Zapomenout nesmíme ani na slavný <i>Org-mode</i> nabízející možnosti plánovače úloh, tvorbu strukturovaných dokumentů, přípravu programů schůzek, práci s&nbsp;tabulkami (v&nbsp;čistě textových dokumentech). Ostatně znám několik lidí, kteří přešli na Emacs právě kvůli existenci <i>Org-mode</i>.</p>

<p>Ve skutečnosti není textový editor Emacs jedinou aplikací, pro kterou byl
vytvořen plugin emulující možnosti Vimu. Například pro textový editor Atom
existuje zásuvný modul pojmenovaný <a
href="https://github.com/t9md/atom-vim-mode-plus">atom-vim-mode-plus</a>. Na
stránkách serveru <a href="https://mojefedora.cz">mojefedora.cz</a> [<a
href="https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse/">1</a>]
[<a
href="https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse-cast-2-vyhledavani-a-nahrazovani-textu/">2</a>]
jste se mohli se seznámit s&nbsp;projektem <i>Vrapper</i> přidávajícím
klávesové zkratky Vimu do integrovaného vývojového prostředí Eclipse a emulace
Vimu je dokonce dostupná o pro Libre Office díky pluginu <a
href="https://github.com/seanyeh/vibreoffice">vibreoffice</a> (ten ovšem
podporuje jen ty nejzákladnější příkazy, ze všech zmíněných pluginů je
v&nbsp;nejhorším stavu).</p>

<a href="https://www.root.cz/obrazek/337461/"><img src="https://i.iinfo.cz/images/325/evil1-6-prev.png" class="image-337461" alt="&#160;" width="370" height="238" /></a>
<p><i>Obrázek 6: Integrované vývojové prostředí Eclipse s&nbsp;nainstalovaným
pluginem Vrapper.</i></p>

<p><div class="rs-tip-major">Poznámka: mimochodem, <a href="#k01">výše
zmíněný</a> editor Kakoune je modální, takže Vi a jeho deriváty (především tedy
Vim) nejsou jedinými v&nbsp;současnosti používanými modálními
editory.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace balíčku Evil do Emacsu</h2>

<pre>
Alt+X list-packages
</pre>

*** image ***
<p><i>Obrázek 7: V&nbsp;případě, že repositář MELPA není povolen, budou
dostupné pouze balíčky z&nbsp;výchozího repositáře ELPA (Emacs Lisp Package
Archive).</i></p>

*** image ***
<p><i>Obrázek 8: V&nbsp;případě, že je repositář MELPA povolen, měl by se
v&nbsp;seznamu balíčků objevit i plugin <strong>evil</strong>.</i></p>

*** image ***
<p><i>Obrázek 9: Výběr pluginu <strong>evil</strong> pro instalaci.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Povolení režimu Evil, přepínání režimů Emacs/Vim</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. Základní editační příkazy</h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. Základní editační příkazy</h2>

<p><div class="rs-tip-major">Poznámka: v&nbsp;této kapitole i v&nbsp;dalších
kapitolách se setkáme s&nbsp;jedním problémem &ndash; různou terminologií
používanou ve Vimu a v&nbsp;Emacsu. Týká se to převážně termínů <i>režim
(mode)</i> a <i>stav (status)</i>. Ve Vimu se totiž používá termín režim
(<i>mode</i>) pro rozlišení mezi zadáváním základních editačních příkazů
(<i>normal mode)</i>, vkládáním příkazů na příkazovou řádku (<i>command
mode</i>), vkládáním nového textu (<i>insert mode</i>) atd. &ndash; viz
následující obrázek. V&nbsp;Emacsu je však slovo režim/mode použito pro jiné
účely (například samotný plugin Evil přináší nový <i>evil-mode</i>, blíže viz
například <a
href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Major-Modes.html">Major-Modes</a>),
takže se namísto toho pro označení režimu Vi/Vimu používá slovo stav/state
(<i>normal state</i>, <i>insert state</i>, ...).</div></p>

<img src="https://i.iinfo.cz/images/325/evil1-11.png" class="image-337466" alt="&#160;" width="541" height="371" />
<p><i>Obrázek 11: Režimy Vimu a způsob přechodu mezi nimi.</i></p>

<p>Ihned po povolení <strong>režimu</strong> evil (<i>evil mode</i>) se textový
editor Emacs přepne do normálního stavu (<i>normal state</i>), tj.&nbsp;je
možné zadávat prakticky všechny editační příkazy, které znáte z&nbsp;Vimu
(emulace je skutečně na velmi dobré úrovni). Podporovány jsou samozřejmě i
všechny operátory Vimu, dokonce včetně ROT13:</p>

<table>
<tr><th>Operátor</th><th>Význam</th><th>Stručný popis</th></tr>
<tr><td>c</td><td>change</td><td>změna textu (delete a následný přechod do vkládacího režimu)</td></tr>
<tr><td>d</td><td>delete</td><td>vymazání textu</td></tr>
<tr><td>y</td><td>yank</td><td>kopie textu do registru</td></tr>
<tr><td>!</td><td>filter</td><td>filtrace přes externí příkaz</td></tr>
<tr><td>&gt;</td><td>shift right</td><td>posun textu doprava o shiftwidth</td></tr>
<tr><td>&lt;</td><td>shift left</td><td>posun textu doleva o shiftwidth</td></tr>
<tr><td>g~</td><td>swap case</td><td>změna malých písmen na velké a naopak</td></tr>
<tr><td>gu</td><td>lowercase</td><td>změna na malá písmena (mínusky)</td></tr>
<tr><td>gU</td><td>Uppercase</td><td>změna na velká písmena (verzálky)</td></tr>
<tr><td>gq</td><td>format</td><td>zformátování textu</td></tr>
<tr><td>g?</td><td>ROT13</td><td>rotace ASCII znaků o 13 pozic dopředu (režim modulo)</td></tr>
<tr><td>=</td><td>indent</td><td>změna zarovnání textu</td></tr>
</table>

<p>Pro přepnutí do stavu vkládání se používají běžné příkazy
<strong>a</strong>, <strong>A</strong>, <strong>i</strong>, <strong>I</strong>,
<strong>o</strong>, <strong>O</strong>, <strong>c</strong>, <strong>R</strong>
(stav přepisu) atd. Aktuálně nastavený stav je zobrazen na stavovém řádku
každého bufferu. Jedná se o zápis [N], [V], [I], [R] atd. Při zapnutí stavu
psaní nového textu se navíc objeví zpráva &bdquo;-- INSERT --&ldquo;, podobně
jako v&nbsp;samotném Vimu.</p>

<p>Klávesová zkratka <strong>C-SPC</strong> (neboli
<strong>Ctrl+Space</strong>), která v&nbsp;Emacsu slouží pro nastavení značky,
dostala poněkud odlišný význam &ndash; zapíná režim vizuálního výběru bloku. Je
to vlastně logické, protože typické editační operace v&nbsp;Emacsu probíhají
mezi pozicí kurzoru a nastavenou značkou (tzv. <i>region</i>) a ve Vimu pro
vizuálně vybraný blok (tj.&nbsp;mezi začátkem bloku a pozicí kurzoru).</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Použití značek (<i>marks</i>)</h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. Další přizpůsobení Emacsu pro skalní Vimaře</h2>

Výchozí konfigurace používaná balíčkem Evil samozřejmě nemusí všem vyhovovat. V&nbsp;této kapitole se zmíním o některých nastaveních, která osobně považuji za užitečná, i když se chování Evil-u bude odlišovat od standardního chování Vimu (přesněji řečeno Vimu s&nbsp;nastavením <strong>nocompatible</strong>). Podobná nastavení mám ovšem provedena i v&nbsp;klasickém Vimu, takže se oba editory budou z&nbsp;tohoto pohledu chovat velmi podobně.


<p><a name="k09"></a></p>
<h2 id="k09">9. Modifikace funkce klávesy <strong>Y</strong></h2>

První nastavení se týká operátoru <strong>Y</strong>. Standardní chování tohoto příkazu znamená: vlož celý řádek (popř.&nbsp;více řádků při zadání čísla) do registru. To ovšem logicky koliduje s&nbsp;dalšími operátory, zejména Change a Delete. Tyto operátory totiž existují v&nbsp;kombinacích:

<table>
<tr><th></th><th></th></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
</table>

(setq evil-want-Y-yank-to-eol t)

(setq evil-move-beyond-eol nil)

(setq evil-backspace-join-lines t)

(setq evil-cross-line t)

(setq evil-symbol-word-search t)

ctrl+space
ctrl+e
copy Alt+w

ctrl-u ctrl-space

(push-mark)
(set-mark-command)
(move-end-of-line)
(kill-ring-save)
(set-mark-command number?)

‘exchange-point-and-mark

