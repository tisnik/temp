<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů určených pro
spuštění v&nbsp;prostředí Common Lispu byly uloženy do Git repositáře, který je
dostupný na adrese <a
href="https://github.com/tisnik/lisp-families.git">https://github.com/tisnik/lisp-families.git</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, můžete
namísto toho použít odkazy na jednotlivé příklady, které naleznete
v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/lisp-families/blob/master/biwa_scheme/">https://github.com/tisnik/lisp-families/blob/master/common-lisp/biwa_scheme/</a></td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Předchozí části seriálu</h2>

<p>V&nbsp;této kapitole jsou uvedeny odkazy na všechny předchozí části seriálu
o světě programovacích jazyků LISP a Scheme (kromě samostatného seriálu, který
se věnoval programovacímu jazyku Clojure):</p>

<ol>

<li>Jemný úvod do rozsáhlého světa jazyků LISP a Scheme<br />
<a href="https://www.root.cz/clanky/jemny-uvod-do-rozsahleho-sveta-jazyku-lisp-a-scheme/">https://www.root.cz/clanky/jemny-uvod-do-rozsahleho-sveta-jazyku-lisp-a-scheme/</a>
</li>

<li>PicoLisp: minimalistický a přitom překvapivě výkonný interpret Lispu<br />
<a href="https://www.root.cz/clanky/picolisp-minimalisticky-a-pritom-prekvapive-vykonny-interpret-lispu/">https://www.root.cz/clanky/picolisp-minimalisticky-a-pritom-prekvapive-vykonny-interpret-lispu/</a>
</li>

<li>PicoLisp: užitečné funkce a speciální formy používané při tvorbě aplikací<br />
<a href="https://www.root.cz/clanky/picolisp-uzitecne-funkce-a-specialni-formy-pouzivane-pri-tvorbe-aplikaci/">https://www.root.cz/clanky/picolisp-uzitecne-funkce-a-specialni-formy-pouzivane-pri-tvorbe-aplikaci/</a>
</li>

<li>PicoLisp: dokončení popisu a několik praktických rad na závěr<br />
<a href="https://www.root.cz/clanky/picolisp-dokonceni-popisu-a-nekolik-praktickych-rad-na-zaver/">https://www.root.cz/clanky/picolisp-dokonceni-popisu-a-nekolik-praktickych-rad-na-zaver/</a>
</li>

<li>GNU Guile – interpret Scheme vestavitelný do nativních aplikací<br />
<a href="https://www.root.cz/clanky/gnu-guile-interpret-scheme-vestavitelny-do-nativnich-aplikaci/">https://www.root.cz/clanky/gnu-guile-interpret-scheme-vestavitelny-do-nativnich-aplikaci/</a>
</li>

<li>TinyScheme aneb další interpret jazyka Scheme vestavitelný do dalších aplikací<br />
<a href="https://www.root.cz/clanky/tinyscheme-aneb-dalsi-interpret-jazyka-scheme-vestavitelny-do-dalsich-aplikaci/">https://www.root.cz/clanky/tinyscheme-aneb-dalsi-interpret-jazyka-scheme-vestavitelny-do-dalsich-aplikaci/</a>
</li>

<li>Kawa: překvapivě silný a výkonný dialekt Scheme pro JVM<br />
<a href="https://www.root.cz/clanky/kawa-prekvapive-silny-a-vykonny-dialekt-scheme-pro-jvm/">https://www.root.cz/clanky/kawa-prekvapive-silny-a-vykonny-dialekt-scheme-pro-jvm/</a>
</li>

<li>Jazyk Kawa v&nbsp;ekosystému virtuálního stroje Javy<br />
<a href="https://www.root.cz/clanky/jazyk-kawa-v-ekosystemu-virtualniho-stroje-javy/">https://www.root.cz/clanky/jazyk-kawa-v-ekosystemu-virtualniho-stroje-javy/</a>
</li>

<li>Zpracování vektorů, matic a N-rozměrných polí v&nbsp;programovacím jazyku Kawa<br />
<a href="https://www.root.cz/clanky/zpracovani-vektoru-matic-a-n-rozmernych-poli-v-programovacim-jazyku-kawa/">https://www.root.cz/clanky/zpracovani-vektoru-matic-a-n-rozmernych-poli-v-programovacim-jazyku-kawa/</a>
</li>

<li>Racket: programovací jazyk a současně i platforma pro vývoj nových jazyků<br />
<a href="https://www.root.cz/clanky/racket-programovaci-jazyk-a-soucasne-i-platforma-pro-vyvoj-novych-jazyku/">https://www.root.cz/clanky/racket-programovaci-jazyk-a-soucasne-i-platforma-pro-vyvoj-novych-jazyku/</a>
</li>

<li>Makra v&nbsp;Racketu i v&nbsp;dalších lispovských jazycích<br />
<a href="https://www.root.cz/clanky/makra-v-racketu-i-v-dalsich-lispovskych-jazycich/">https://www.root.cz/clanky/makra-v-racketu-i-v-dalsich-lispovskych-jazycich/</a>
</li>

<li>Základní knihovna jazyka Racket<br />
<a href="https://www.root.cz/clanky/zakladni-knihovna-jazyka-racket/">https://www.root.cz/clanky/zakladni-knihovna-jazyka-racket/</a>
</li>

<li>Jazyk Joker: dialekt Clojure naprogramovaný v&nbsp;Go<br />
<a href="https://www.root.cz/clanky/jazyk-joker-dialekt-clojure-naprogramovany-v-go/">https://www.root.cz/clanky/jazyk-joker-dialekt-clojure-naprogramovany-v-go/</a>
</li>

<li>Chicken Scheme – další interpret a především překladač programovacího jazyka Scheme<br />
<a href="https://www.root.cz/clanky/chicken-scheme-dalsi-interpret-a-predevsim-prekladac-programovaciho-jazyka-scheme/">https://www.root.cz/clanky/chicken-scheme-dalsi-interpret-a-predevsim-prekladac-programovaciho-jazyka-scheme/</a>
</li>

<li>Projekt Gambit – další kvalitní interpret i překladač programovacího jazyka Scheme<br />
<a href="https://www.root.cz/clanky/projekt-gambit-dalsi-kvalitni-interpret-i-prekladac-programovaciho-jazyka-scheme/">https://www.root.cz/clanky/projekt-gambit-dalsi-kvalitni-interpret-i-prekladac-programovaciho-jazyka-scheme/</a>
</li>

<li>Interlisp aneb oživujeme dinosaura<br />
<a href="https://www.root.cz/clanky/interlisp-aneb-ozivujeme-dinosaura/">https://www.root.cz/clanky/interlisp-aneb-ozivujeme-dinosaura/</a>
</li>

<li>Propojení světa LISPu se světem JavaScriptu s&nbsp;využitím transpřekladače Wisp<br />
<a href="https://www.root.cz/clanky/propojeni-sveta-lispu-se-svetem-javascriptu-s-vyuzitim-transprekladace-wisp/">https://www.root.cz/clanky/propojeni-sveta-lispu-se-svetem-javascriptu-s-vyuzitim-transprekladace-wisp/</a>
</li>

<li>Propojení světa LISPu se světem JavaScriptu s&nbsp;využitím transpřekladače Wisp (2.část)<br />
<a href="https://www.root.cz/clanky/propojeni-sveta-lispu-se-svetem-javascriptu-s-vyuzitim-transprekladace-wisp-2-cast/">https://www.root.cz/clanky/propojeni-sveta-lispu-se-svetem-javascriptu-s-vyuzitim-transprekladace-wisp-2-cast/</a>
</li>

<li>Common Lisp: žralok mezi programovacími jazyky<br />
<a href="https://www.root.cz/clanky/common-lisp-zralok-mezi-programovacimi-jazyky/">https://www.root.cz/clanky/common-lisp-zralok-mezi-programovacimi-jazyky/</a>
</li>

<li>Common Lisp: žralok mezi programovacími jazyky (2.část)<br />
<a href="https://www.root.cz/clanky/common-lisp-zralok-mezi-programovacimi-jazyky-2-cast/">https://www.root.cz/clanky/common-lisp-zralok-mezi-programovacimi-jazyky-2-cast/</a>
</li>

</ol>

<p>Články o Elispu:</p>

<ol>

<li>Úpravy Emacsu a tvorba nových modulů s&nbsp;využitím Emacs Lispu<br />
<a href="https://www.root.cz/clanky/upravy-emacsu-a-tvorba-novych-modulu-s-vyuzitim-emacs-lispu/">https://www.root.cz/clanky/upravy-emacsu-a-tvorba-novych-modulu-s-vyuzitim-emacs-lispu/</a>
</li>

<li>Úpravy Emacsu s&nbsp;Emacs Lisp: základní konstrukce jazyka<br />
<a href="https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-zakladni-konstrukce-jazyka/">https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-zakladni-konstrukce-jazyka/</a>
</li>

<li>Úpravy Emacsu s&nbsp;Emacs Lisp: všemocné makro cl-loop a knihovna dash<br />
<a href="https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-vsemocne-makro-cl-loop-a-knihovna-dash/">https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-vsemocne-makro-cl-loop-a-knihovna-dash/</a>
</li>

<li>Úpravy Emacsu s&nbsp;Emacs Lisp: možnosti nabízené knihovnou Dash<br />
<a href="https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-moznosti-nabizene-knihovnou-dash/">https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-moznosti-nabizene-knihovnou-dash/</a>
</li>

<li>Úpravy Emacsu s&nbsp;Emacs Lisp: dokončení popisu Emacs Lispu<br />
<a href="https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-dokonceni-popisu-emacs-lispu/">https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-dokonceni-popisu-emacs-lispu/</a>
</li>

<li>Úpravy Emacsu s&nbsp;Emacs Lisp: manipulace se základními datovými strukturami Emacsu<br />
<a href="https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-manipulace-se-zakladnimi-datovymi-strukturami-emacsu/">https://www.root.cz/clanky/upravy-emacsu-s-emacs-lisp-manipulace-se-zakladnimi-datovymi-strukturami-emacsu/</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Literatura</h2>

<p>O Common Lispu, Scheme či Clojure, tedy o třech (s&nbsp;velkou
pravděpodobností) nejpoužívanějších dialektech LISPu, vyšlo poměrně velké
množství literatury. Pro Common Lisp je typická jeho velká stabilita, a to
minimálně od roku 1994, což mj.&nbsp;znamená, že i původní vydaní prvních dvou
dále zmíněných knih je zcela bez problémů použitelné i dnes (a obě knihy jsou
navíc dobře čitelné):</p>

<ol>

<li>Peter Seibel<br />
<i>&bdquo;Practical Common Lisp&ldquo;</i><br />
2009
</li>

<li>Paul Graham<br />
<i>&bdquo;ANSI Common Lisp&ldquo;</i><br />
1995
</li>

<li>Gerald Gazdar<br />
<i>&bdquo;Natural Language Processing in Lisp: An Introduction to Computational Linguistics&ldquo;</i><br />
1989
</li>

<li>Peter Norvig<br />
<i>&bdquo;Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp&ldquo;</i><br />
1991
</li>

<li>Alex Mileler et.al.<br />
<i>&bdquo;Clojure Applied: From Practice to Practitioner&ldquo;</i><br />
2015
</li>

<li>
<i>&bdquo;Living Clojure: An Introduction and Training Plan for Developers&ldquo;</i><br />
2015
</li>

<li>Dmitri Sotnikov<br />
<i>&bdquo;Web Development with Clojure: Build Bulletproof Web Apps with Less Code&ldquo;</i><br />
2016
</li>

<li>McCarthy<br />
<i>&bdquo;Recursive functions of symbolic expressions and their computation by machine, part I&ldquo;</i><br />
1960
</li>

<li>R. Kent Dybvig<br />
<i>&bdquo;The Scheme Programming Language&ldquo;</i><br />
2009
</li>

<li>Max Hailperin<br />
<i>&bdquo;Concrete Abstractions&ldquo;</i><br />
1998
</li>

<li>Guy L. Steele<br />
<i>&bdquo;History of Scheme&ldquo;</i><br />
2006, Sun Microsystems Laboratories
</li>

<li>Kolář J., Muller K.:<br />
<i>&bdquo;Speciální programovací jazyky&ldquo;</i><br />
Praha 1981
</li>

<li>
<i>&bdquo;AutoLISP Release 9, Programmer's reference&ldquo;</i><br />
Autodesk Ltd., October 1987
</li>

<li>
<i>&bdquo;AutoLISP Release 10, Programmer's reference&ldquo;</i><br />
Autodesk Ltd., September 1988
</li>

<li>McCarthy, John; Abrahams, Paul W.; Edwards, Daniel J.; Hart, Timothy P.; Levin, Michael I.<br />
<i>&bdquo;LISP 1.5 Programmer's Manual&ldquo;</i><br />
MIT Press. ISBN 0 262 130 1 1 4
</li>

<li>Carl Hewitt; Peter Bishop and Richard Steiger<br />
<i>&bdquo;A Universal Modular Actor Formalism for Artificial Intelligence&ldquo;</i><br />
1973
</li>

<li>Feiman, J.<br />
<i>&bdquo;The Gartner Programming Language Survey (October 2001)&ldquo;</i><br />
Gartner Advisory
</li>

<li>Harold Abelson, Gerald Jay Sussman, Julie Sussman:<br />
<i>Structure and Interpretation of Computer Programs</i><br />
MIT Press. 1985, 1996 (a možná vyšel i další přetisk)
</li>

<li>Paul Graham<br />
<i>On Lisp</i><br />
Prentice Hall, 1993<br />
Dostupné online na adrese <a href="http://www.paulgraham.com/onlisptext.html">http://www.paulgraham.com/onlisptext.html</a>
</li>

<li>David S. Touretzky<br />
<i>Common LISP: A Gentle Introduction to Symbolic Computation (Dover Books on Engineering)</i><br />
</li>

<li>Peter Norvig<br />
<i>Paradigms of Artificial Intelligence Programming: Case Studies in Common Lisp</i>
</li>

<li>Patrick Winston, Berthold Horn<br />
<i>Lisp (3rd Edition)</i><br />
ISBN-13: 978-0201083194, ISBN-10: 0201083191
</li>

<li>Matthias Felleisen, David Van Horn, Dr. Conrad Barski<br>
<i>Realm of Racket: Learn to Program, One Game at a Time!</i><br />
ISBN-13: 978-1593274917, ISBN-10: 1593274912 
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Common Lisp<br />
<a href="https://lisp-lang.org/">https://lisp-lang.org/</a>
</li>

<li>Why You Should Learn Lisp In 2022?<br />
<a href="https://www.youtube.com/watch?v=GWdf1flcLoM">https://www.youtube.com/watch?v=GWdf1flcLoM</a>
</li>

<li>LOOP Common Lisps Superior For<br />
<a href="https://www.youtube.com/watch?v=i4tmF_1nZng">https://www.youtube.com/watch?v=i4tmF_1nZng</a>
</li>

<li>Lisp VS C benchmarks<br />
<a href="https://programming-language-benchmarks.vercel.app/lisp-vs-c">https://programming-language-benchmarks.vercel.app/lisp-vs-c</a>
</li>

<li>Common Lisp: An elegant design pattern<br />
<a href="https://www.youtube.com/watch?v=9597LFlvMuE">https://www.youtube.com/watch?v=9597LFlvMuE</a>
</li>

<li>Common Lisp Macros By Example Tutorial<br />
<a href="https://lisp-journey.gitlab.io/blog/common-lisp-macros-by-example-tutorial/">https://lisp-journey.gitlab.io/blog/common-lisp-macros-by-example-tutorial/</a>
</li>

<li>The Common Lisp Cookbook<br />
<a href="https://lispcookbook.github.io/cl-cookbook/">https://lispcookbook.github.io/cl-cookbook/</a>
</li>

<li>The Evolution of Lisp<br />
<a href="https://www.csee.umbc.edu/courses/331/resources/papers/Evolution-of-Lisp.pdf">https://www.csee.umbc.edu/courses/331/resources/papers/Evolution-of-Lisp.pdf</a>
</li>

<li>Awesome CL<br />
<a href="https://github.com/CodyReichert/awesome-cl">https://github.com/CodyReichert/awesome-cl</a>
</li>

<li>LISP<br />
<a href="https://taoofmac.com/space/dev/lisp">https://taoofmac.com/space/dev/lisp</a>
</li>

<li>Repositář projektu femtolisp<br />
<a href="https://github.com/JeffBezanson/femtolisp">https://github.com/JeffBezanson/femtolisp</a>
</li>

<li>Femtolisp - lightweight, robust lisp interpreter built on reusable C libraries<br />
<a href="https://www.findbestopensource.com/product/femtolisp">https://www.findbestopensource.com/product/femtolisp</a>
</li>

<li>YCombinator: Femtolisp: A lightweight, robust, scheme-like Lisp implementation<br />
<a href="https://news.ycombinator.com/item?id=22094722">https://news.ycombinator.com/item?id=22094722</a>
</li>

<li>Learning Julia by Anshul Joshi, Rahul Lakhanpal: Femtolisp<br />
<a href="https://www.oreilly.com/library/view/learning-julia/9781785883279/2e85442f-d100-4b53-b8f7-7d20d62f0255.xhtml">https://www.oreilly.com/library/view/learning-julia/9781785883279/2e85442f-d100-4b53-b8f7-7d20d62f0255.xhtml</a>
</li>

<li>The role of femtolisp in Julia?<br />
<a href="https://discourse.julialang.org/t/the-role-of-femtolisp-in-julia/1902">https://discourse.julialang.org/t/the-role-of-femtolisp-in-julia/1902</a>
</li>

<li>LispSyntax.jl: A clojure-like lisp syntax for julia<br />
<a href="https://github.com/swadey/LispSyntax.jl">https://github.com/swadey/LispSyntax.jl</a>
</li>

<li>What exactly code lowering is an how to do “unlowering”?<br />
<a href="https://discourse.julialang.org/t/what-exactly-code-lowering-is-an-how-to-do-unlowering/1315">https://discourse.julialang.org/t/what-exactly-code-lowering-is-an-how-to-do-unlowering/1315</a>
</li>

<li>Interlisp.org: Dedicated to Restoring and Preserving the Interlisp experience<br />
<a href="https://github.com/Interlisp">https://github.com/Interlisp</a>
</li>

<li>Warren Teitelman<br />
<a href="https://en.wikipedia.org/wiki/Warren_Teitelman">https://en.wikipedia.org/wiki/Warren_Teitelman</a>
</li>

<li>InterLISP/65<br />
<a href="http://www.atarimania.com/utility-atari-400-800-xl-xe-interlisp-65_12477.html">http://www.atarimania.com/utility-atari-400-800-xl-xe-interlisp-65_12477.html</a>
</li>

<li>Lisp Editing in the 80s - Interlisp SEdit (Video)<br />
<a href="https://www.youtube.com/watch?v=2qsmF8HHskg">https://www.youtube.com/watch?v=2qsmF8HHskg</a>
</li>

<li>Inter-LISP<br />
<a href="http://www.atarimania.com/utility-atari-400-800-xl-xe-inter-lisp_29354.html">http://www.atarimania.com/utility-atari-400-800-xl-xe-inter-lisp_29354.html</a>
</li>

<li>InterLISP 65 Editing (video)<br />
<a href="https://www.youtube.com/watch?v=nY_hcazo86A">https://www.youtube.com/watch?v=nY_hcazo86A</a>
</li>

<li>Datasoft INTER-LISP/65 (Atari Age, chat)<br />
<a href="https://atariage.com/forums/topic/116093-datasoft-inter-lisp65/">https://atariage.com/forums/topic/116093-datasoft-inter-lisp65/</a>
</li>

<li>Marvin Minsky - The beauty of the Lisp language (44/151)<br />
<a href="https://www.youtube.com/watch?v=YaWVHyIBVeI">https://www.youtube.com/watch?v=YaWVHyIBVeI</a>
</li>

<li>History of LISP (Interlisp)<br />
<a href="http://www.softwarepreservation.org/projects/LISP/index.html#INTERLISP_">http://www.softwarepreservation.org/projects/LISP/index.html#INTERLISP_</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

