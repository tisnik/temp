<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Použití mikrořadičů s jádrem Cortex-M na reálných čipech</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Použití mikrořadičů s jádrem Cortex-M na reálných čipech</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Na předchozí články, v nichž jsme si popsali základní vlastnosti jader Cortex-M, navážeme článkem dnešním, v němž se budeme věnovat stručnému popisu vlastností některých reálných čipů, které tato jádra obsahují. Začneme samozřejmě těmi čipy, v nichž je použito jádro Cortex-M0 či novější Cortex-M0+.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Použití mikrořadičů s&nbsp;jádrem Cortex-M na reálných čipech</a></p>
<p><a href="#k02">2. Mikrořadiče řady LPC81xM</a></p>
<p><a href="#k03">3. Základní součásti čipů LPC81xM</a></p>
<p><a href="#k04">4. GPIO</a></p>
<p><a href="#k05">5. USART</a></p>
<p><a href="#k06">6. Rozhraní sběrnice SPI</a></p>
<p><a href="#k07">7. Sběrnice I<sup>2</sup>C</a></p>
<p><a href="#k08">8. Mikrořadiče firmy Freescale založené na jádrech Cortex-M</a></p>
<p><a href="#k09">9. Mikrořadiče Kinetis KL02</a></p>
<p><a href="#k10">10. Moduly mikrořadiče Kinetis KL02</a></p>
<p><a href="#k11">11. Obsah následující části seriálu</a></p>
<p><a href="#k12">12. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Použití mikrořadičů s&nbsp;jádrem Cortex-M na reálných čipech</h2>

<p>V&nbsp;prvních třech částech miniseriálu o mikroprocesorech a mikrořadičích
s&nbsp;architekturou ARM jsme si popsali základní vlastnosti mikrořadičových
jader <a
href="http://www.root.cz/clanky/architektura-mikroradicu-s-jadry-arm-cortex-m0-a-arm-cortex-m0/">Cortex-M0,
Cortex-M0+</a>, dále pak poněkud výkonnější jádra <a
href="http://www.root.cz/clanky/architektura-mikroradicu-s-jadry-arm-cortex-m3/">Cortex-M3</a>
a nakonec i prozatím nejvýkonnější řadu mikroprocesorových jader <a
href="http://www.root.cz/clanky/nejvykonnejsi-mcu-aneb-architektura-mikroradicu-s-jadry-arm-cortex-m7/">Cortex-M7</a>
(příště si navíc popíšeme i řadu <i>Cortex-M4</i>, která se v&nbsp;mnoha
ohledech podobá jádrům <i>Cortex-M7</i>).</p>

<p>Nicméně jsme se prozatím podrobněji nezabývali tím, kde se vlastně tato
jádra používají. Připomeňme si, že společnost ARM namísto výroby vlastních
mikroprocesorů a mikrořadičů prodává licence dalším výrobcům, kteří tak mohou
jádra ARM relativně snadno (a především rychle) použít na čipech s&nbsp;dalšími
zařízeními, což mohou být v&nbsp;případě mikrořadičů různé převodníky (A/D,
D/A, zejména pak PWM jako jedna z&nbsp;variant D/A převodníku), sběrnice (SPI,
I<sup>2</sup>C), porty (sériový port <i>UART</i> či jeho varianta <i>USART</i>)
a samozřejmě taktéž <i>GPIO</i>, tj.&nbsp;sada vstupně-výstupních pinů
ovladatelných přímo z&nbsp;aplikace.</p>

<p>Popis mikrořadičů založených na jádrech <i>Cortex-M</i> samozřejmě musí
začít u těch nejmenších jader, tedy konkrétně u jader <i>Cortex-M0</i> a dnes
taktéž u <i>Cortex-M0+</i>. Tato jádra nalezneme hned v&nbsp;několika čipech,
z&nbsp;nichž jsem si pro ilustraci možností vybral čip <i>Kinetis KL02</i>
vyráběný společností <i>Freescale Semiconductor</i> a dále pak čipy řady
<i>LPC81xM</i> (za <i>x</i> se doplňuje číslice), za jejichž návrhem a výrobou
stojí další známá společnost <i>NXP Semiconductors</i>. Na tomto místě je
vhodné poznamenat, že pochopitelně existují i další výrobci mikrořadičů
používajících jádra <i>Cortex-M0</i> či <i>Cortex-M0+</i>, například
<i>Atmel</i> s&nbsp;čipy <i>SAM D20</i>. <i>Kinetis KL02</i> byl vybrán
z&nbsp;toho důvodu, že se má (alespoň podle reklamy :-) jednat o zcela nejmenší
integrovaný obvod s&nbsp;jádrem ARM (což už dnes pravděpodobně neplatí),
<i>LPC81xM</i> zase proto, že jedna z&nbsp;variant tohoto čipu se dodává
v&nbsp;pouzdru DIL s&nbsp;pouhými osmi vývody, což zdárně konkuruje některým
variantám osmibitových mikrořadičů PIC (ty dokonce existují i ve verzi se šesti
vývody, takže se vlastně jedná spíše o programovatelnou elektronickou
součástku).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Mikrořadiče řady LPC81xM</h2>

<p>Nejprve se budeme zabývat stručným popisem mikrořadičů řady <i>LPC81xM</i>,
které jsou založeny na ARMovském jádře <i>Cortex-M0+</i> s&nbsp;maximální
hodinovou frekvencí 30 MHz. Od hodinové frekvence jsou odvozeny i vlastnosti
dalších modulů na mikrořadiči, například maximální přenosová rychlost
dosažitelná při použití sběrnice <i>SPI</i> atd. V&nbsp;současnosti v&nbsp;řadě
<i>LPC81xM</i> existuje hned několik mikrořadičů, jejichž základní vlatnosti
jsou vypsány v&nbsp;tabulce pod tímto odstavcem:</p>

<table>
<tr><th>Označení</th><th>SRAM</th><th>Flash</th><th>USART</th><th>I<sup>2</sup>C</th><th>SPI</th><th>Komparátor</th><th>GPIO</th><th>Pouzdro</th></tr>
<tr><td>LPC810M021FN8  </td><td>1kB</td><td> 4kB</td><td>2&times;</td><td>1&times;</td><td>1&times;</td><td>1&times;</td><td> 6</td><td>DIP8</td></tr>
<tr><td>LPC811M001JDH16</td><td>2kB</td><td> 8kB</td><td>2&times;</td><td>1&times;</td><td>1&times;</td><td>1&times;</td><td>14</td><td>TSSOP16</td></tr>
<tr><td>LPC812M101JDH16</td><td>4kB</td><td>16kB</td><td>3&times;</td><td>1&times;</td><td>2&times;</td><td>1&times;</td><td>14</td><td>TSSOP16</td></tr>
<tr><td>LPC812M101JD20 </td><td>4kB</td><td>16kB</td><td>2&times;</td><td>1&times;</td><td>1&times;</td><td>1&times;</td><td>18</td><td>SO20</td></tr>
<tr><td>LPC812M101JDH20</td><td>4kB</td><td>16kB</td><td>3&times;</td><td>1&times;</td><td>2&times;</td><td>1&times;</td><td>18</td><td>TSSOP20</td></tr>
<tr><td>LPC812M101JTB16</td><td>4kB</td><td>16kB</td><td>3&times;</td><td>1&times;</td><td>2&times;</td><td>1&times;</td><td>14</td><td>XSON16</td></tr>
</table>

<p>Poznámka: to, že se například do pouzdra DIL8 (tedy pouzdra s&nbsp;pouhými
osmi piny) dokázal vměstnat mikrořadič se šesti GPIO, sériovým portem, SPI atd.
je umožněno díky sdílení funkce pinů. Programátor si tedy může zvolit, zda
například &bdquo;obětuje&ldquo; tři piny pro realizaci SPI či zda tyto tři piny
bude ovládat programově přes GPIO.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Základní součásti čipů LPC81xM</h2>

<p>Přímo na mikrořadičích <i>LPC81xM</i> jsou umístěny tři typy pamětí
mapovaných do jediného 32bitového adresního prostoru (což ostatně u
mikroprocesorů ARM očekáváme). Jedná se o statickou RAM s&nbsp;kapacitou jeden
kilobajt až čtyři kilobajty (což je pro mnoho aplikací více než dostatečné),
dále pak o Flash paměť s&nbsp;kapacitou od čtyř kilobajtů do 16kB a nesmíme
zapomenout ani na paměť ROM s&nbsp;kapacitou osmi kilobajtů. Obsah této paměti
je neměnný (nejde o Flash, EPROM ani o EEPROM) a již od výrobce se zde nachází
bootloader a další důležité a často používané rutiny pro ovládání sériových
portů a sběrnic. Dále se do 32bitového adresního prostoru mapují i řídicí
registry periferních zařízení (zde se konkrétně využívá již <a
href="http://www.root.cz/clanky/architektura-mikroradicu-s-jadry-arm-cortex-m3/#k09">v&nbsp;tomto
seriálu zmíněná</a> podpora pro bitové operace). Nesmíme zapomenout ani na
další typický prvek rodiny <i>Cortex-M</i>: 24bitový časovač SysTick, který při
správně naprogramované přerušovací rutině může být použit pro relativně přesné
ovládání GPIO atd.</p>

<p>Čipy <i>LPC81xM</i> obsahují i několik rozhraní a sběrnic určených pro
sériový přenos dat:</p>

<table>
<tr><th>Rozhraní</th><th>Počet</th><th>Popsáno v&nbsp;kapitole</th></tr>
<tr><td>USART         </td><td>max 3&times;</td><td><a href="#k05">5</a></td></tr>
<tr><td>SPI           </td><td>2&times;</td><td><a href="#k06">6</a></td></tr>
<tr><td>I<sup>2</sup>C</td><td>1&times;</td><td><a href="#k07">7</a></td></tr>
</table>



<p><a name="k04"></a></p>
<h2 id="k04">4. GPIO</h2>

<p>Podle zvoleného typu čipu z&nbsp;řady <i>LPC81xM</i> má programátor
k&nbsp;dispozici šest až osmnáct <i>GPIO</i>. Jedná se o piny, u nichž je možné
nastavit režim jejich práce, tj.&nbsp;to, zda se jedná skutečně o <i>GPIO</i>
či zda budou piny součástí USARTu, SPI či I<sup>2</sup>C. Pokud je zvoleno, že
pin bude používán jako <i>GPIO</i>, lze programově zvolit směr přenosu dat
(čtení/zápis), připnout k&nbsp;pinu rezistor pull-up či naopak pull-down a
pokud má změna stavu vstupního pinu generovat přerušení, lze nakonfigurovat,
zda se má detekovat hrana (náběžná, sestupná) či naopak úroveň (nula,
jednička).</p>

<p>Piny, resp.&nbsp;přesněji řečeno jejich stav, jsou mapovány přes interní IO
sběrnici přímo do jádra mikrořadiče, což umožňuje provést přečtení či změnu
hodnoty vybraného pinu v&nbsp;jediném hodinovém cyklu. Teoretická rychlost
přepínání úrovně na vybraném pinu je tedy 15 MHz při použití hodinové frekvence
30 MHz, samozřejmě za předpokladu, že nebude docházet k&nbsp;přerušení atd.
Ovšem i když je reálná rychlost čtení/přepínání stavu poněkud nižší, stále je
dostatečně velká na to, aby se daly čistě programově ovládat i složitější
zařízení (krokové motory, teoreticky i PWM apod).</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. USART</h2>

<p>Kromě <i>GPIO</i> je možné vybrané piny nakonfigurovat takovým způsobem, že
budou tvořit sériový port USART, což je vlastně klasický UART, který je však
možné nakonfigurovat i do synchronního režimu (používají se vodiče TXD, RXD,
volitelně i RTS a CTS). V&nbsp;asynchronním režimu dosahuje maximální přenosová
rychlost 1,875 Mbit/s, v&nbsp;režimu synchronním až 10 Mbit/s. Programátor si
může zvolit formát přenosu dat, zejména počet bitů (7, 8, 9), počet stop bitů
v&nbsp;asynchronním režimu (1 či 2) a navíc lze použít i konfigurovatelný
generátor paritního bitu (žádná parita, sudá parita, lichá parita). Buffery pro
čtení a zápis jsou od sebe oddělené a v&nbsp;paměti ROM jsou uloženy rutiny,
které dokážou s&nbsp;portem UART či USART pracovat (není tedy zapotřebí psát
posté tu samou rutinu pro příjem bajtů :-). Všechny čipy <i>LPC81xM</i>
obsahují dva USARTy (USART0 a USART1), poslední dva čipy s&nbsp;14 či 18 vývody
(<i>LPC812M101JDH16</i> a <i>LPC812M101JDH20</i>) pak navíc ještě třetí sériový
port USART2.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Rozhraní sběrnice SPI</h2>

<p>Sběrnice <i>SPI</i> (celým názvem <i>Serial Peripheral Interface</i>)
představuje jednu z&nbsp;forem sériových externích sběrnic sloužících pro
vzájemné propojení dvou či většího množství komunikujících uzlů, přičemž jeden
uzel obvykle vystupuje v&nbsp;roli takzvaného řadiče sběrnice (<i>master</i>) a
ostatní uzly pracují v&nbsp;režimu <i>slave</i>. Uzel, který pracuje jako
<i>master</i>, obsahuje generátor hodinového signálu, který je rozveden do
všech ostatních uzlů, čímž je umožněn zcela synchronní (navíc ještě obousměrný)
přenos dat. Hodinový signál je rozváděn vodičem označovaným symbolem
<i>SCK</i>.</p>

<p>Kromě vodiče s&nbsp;hodinovým signálem jsou komunikující uzly propojeny
dvojicí vodičů označovaných většinou symboly <i>MISO</i> (Master In, Slave Out)
a <i>MOSI</i> (Master Out, Slave In), pomocí nichž se obousměrně (full duplex)
přenáší data. Posledním signálem, který se u této sběrnice používá, je signál
<i>SSEL</i> (Slave Select), jenž slouží &ndash; jak již jeho název napovídá
&ndash; k&nbsp;výběru některého uzlu pracujícího v&nbsp;režimu <i>slave</i>.
Všechny čtyři signály &ndash; <i>SCK</i>, <i>MISO</i>, <i>MOSI</i> i
<i>SSEL</i>, pro svoji funkci vyžadují pouze jednosměrné porty, což přispívá
k&nbsp;jednoduché a především levné implementaci této sběrnice (ovšem u dnes
popisovaných čipů jsou všechny I/O piny obousměrné).</p>

<p>Poznámka: u popisovaných mikrořadičů se nachází rozhraní pro dvě od sebe
oddělené sběrnice <i>SPI</i> a z&nbsp;tohoto důvodu se příslušné piny označují
<strong>SPI0_CLK</strong>, <strong>SPI0_MOSI</strong>,
<strong>SPI0_MISO</strong>, <strong>SPI0_SSEL</strong> pro první sběrnici a
<strong>SPI1_CLK</strong>, <strong>SPI1_MOSI</strong>,
<strong>SPI1_MISO</strong> a <strong>SPI1_SSEL</strong> pro sběrnici
druhou.</p>

<p>Sběrnice <i>SPI</i> se kvůli své implementační jednoduchosti používá
v&nbsp;mnoha různých systémech, například pro komunikaci s&nbsp;některými typy
pamětí <i>EEPROM</i> (označovanými také jako &bdquo;sériové&ldquo; paměti),
textovými i grafickými LCD panely, A/D a D/A převodníky, hodinami reálného času
(<i>RTC</i>) atd. Podpora pro <i>SPI</i> je zabudována také do mnoha
mikrořadičů, zejména se to týká známé a populární řady mikrořadičů <i>Motorola
68HC11</i>, <i>AVR</i> a <i>PIC16xxx</i> (například se jedná o <i>PIC16F873</i>
a jeho varianty). Pro jednosměrnou komunikaci, při které se do uzlu pouze
vysílají či naopak čtou data, však lze použít i pouhopouhý posuvný registr či
sériově zapojenou sadu několika posuvných registrů, což je velmi jednoduchá a
také levná metoda, jak pomocí mikrořadiče ovládat okolní zařízení (před mnoha
lety jsme pomocí již zmíněného mikrořadiče <i>Motorola 68HC11</i>, dvou
osmibitových posuvných sérioparalelních registrů a čtyř sedmisegmentových LED
číslic vytvořili poměrně přesný digitální otáčkoměr pro Škodu 105 a 120, na
vstupu <i>SPI</i> byly naopak zapojeny přepínače, které funkci otáčkoměru
řídily).</p>

<p>Mezi největší přednost sběrnice <i>SPI</i> patří její značná jednoduchost a
tím i snadnost implementace. Jednoduché je jak elektrické rozhraní sběrnice
(jednosměrné piny kompatibilní s&nbsp;technologií TTL, čemuž dnes odpovídají i
integrované obvody využívající technologii CMOS), tak i přenosový protokol. Ve
své podstatě totiž není <i>SPI</i> nic jiného než několik externě propojených
posuvných registrů, přičemž posun je řízen jednotným hodinovým signálem.
Jednoduchost přenosového protokolu vyplývá i z&nbsp;toho, že data jsou
přenášena obousměrně po samostatných vodičích, takže není nutné řešit přepínání
mezi vysíláním a příjmem, jako tomu bylo u některých sběrnic používajících
poloduplexní přenos dat, i u dále popsané sběrnice <i>I<sup>2</sup>C</i>. I
přenosová rychlost je pro mnoho účelů dostatečně vysoká. Hodinová frekvence,
z&nbsp;níž se odvozuje bitová rychlost (bitrate), se v&nbsp;běžných případech
pohybuje v&nbsp;rozsahu 1 MHz až 10 MHz, při dodržení dostatečně malé kapacity
spoje je však možné použít i poměrně vysokou frekvenci až 70 MHz, což odpovídá
140&times;10<sup>6</sup> obousměrně přeneseným bitům za sekundu.</p>

<p>Jak tedy vypadá konkrétní řešení sběrnice <i>SPI</i> v&nbsp;čipech
<i>LPC81xM</i>? Jak jsme si již naznačili v&nbsp;předchozích odstavcích, je
možné použít dvě od sebe oddělené sběrnice <strong>SPI0</strong> a
<strong>SPI1</strong>, přičemž lze zvolit, zda mikrořadič bude pracovat
v&nbsp;roli řadiče sběrnice (mastera) či v&nbsp;režimu slave. Při použití
režimu master může maximální přenosová rychlost dosáhnout hodnoty až 30Mbit/s,
v&nbsp;režimu slave pak stále slušných 25 Mbit/s. Zajímavá je i možnost volby
počtu bitů posuvného registru: programátor může zvolit jakoukoli hodnotu mezi
jedním až šestnácti bity, přičemž pro mnoho aplikací se používá osm bitů (proč
je tato volba důležitá? po přijetí zvoleného počtu bitů se vyvolá přerušení a
uživatelský program může přečíst načtená data a současně do registru uložit
slovo, které se má přenést). Podobně, jako je tomu v&nbsp;případě USARTu či
I<sup>2</sup>C, je i sběrnice <i>SPI</i> podporována rutinami uloženými
v&nbsp;ROM.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Sběrnice I<sup>2</sup>C</h2>

<p>Další populární sběrnicí použitou mj.&nbsp;i na čipech <i>LPC81xM</i>, je
sběrnice označovaná poněkud neobvykle symbolem <i>I<sup>2</sup>C</i>, což je
zkratka z&nbsp;celého názvu <i>Inter-Integrated Circuit</i>. V&nbsp;určitých
ohledech se jedná o sběrnici podobnou <i>SPI</i> (existence hodinového signálu,
jediný uzel typu <i>master</i>), ovšem některé vlastnosti těchto sběrnic jsou
odlišné. Zatímco u sběrnice <i>SPI</i> byl umožněn obousměrný přenos dat díky
použití dvojice vodičů <i>MISO</i> a <i>MOSI</i>, je sběrnice
<i>I<sup>2</sup>C</i> vybavena &bdquo;pouze&ldquo; jedním datovým vodičem
označeným <i>SDA</i>, z&nbsp;čehož vyplývá, že se data přenáší poloduplexně.
Také to znamená poněkud složitější interní strukturu všech připojených
zařízení, protože příslušné piny musí být možné přepínat ze vstupního režimu na
režim výstupní.</p>

<p>Zajímavostí a současně i dalším rozdílem oproti <i>SPI</i> je, že
v&nbsp;<i>I<sup>2</sup>C</i> není použit výběr zařízení typu <i>slave</i>
pomocí zvláštních signálů, protože každému uzlu je přiřazena jednoznačná adresa
&ndash; kromě elektrických charakteristik je totiž přesně stanoven i
komunikační protokol, což je další rozdíl oproti výše popsané sběrnici
<i>SPI</i>. Obecně je možné říci, že <i>I<sup>2</sup>C</i> je sice poněkud
složitější, ale zato flexibilnější sběrnice, která se velmi často používá i pro
komunikaci na delší vzdálenosti (řádově metry, viz například <i>DDC</i> u
monitorů), než tomu je u sběrnice <i>SPI</i>.</p>

<p>Na čipech <i>LPC81xM</i> je realizována jedna sběrnice
<i>I<sup>2</sup>C</i>, přičemž její maximální přenosová rychlost může dosahovat
až 400 kbit/s. Programátor si může zvolit režim práce mikrořadiče při použití
této sběrnice, především to, zda bude pracovat v&nbsp;roli master či slave. Je
podporováno i adresování s&nbsp;využitím desetibitové adresy (adresní prostor
je v&nbsp;referenční implementaci buď sedmibitový nebo právě desetibitový).
Možná ještě důležitější však je možnost využití již odladěných programových
rutin určených pro práci s&nbsp;<i>I<sup>2</sup>C</i>; tyto rutiny jsou
součástí ROM s&nbsp;kapacitou 8kB, o níž jsme se zmínili výše.</p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Mikrořadiče firmy Freescale založené na jádrech Cortex-M</h2>

<p>Společnost <i>Freescale Semiconductor</i>, která mimochodem patří mezi jednu
z&nbsp;nejstarších firem zabývajících se výrobou polovodičových elektronických
součástek, má s&nbsp;výrobou mikroprocesorů a mikrořadičů dlouhodobé
zkušenosti, ostatně právě zde se vyráběl slavný osmibitový mikroprocesor
<i>Motorola 6800</i> či ještě slavnější 32bitový čip <i>Motorola 68000
(68k)</i>. Tato firma má dnes ve svém portfoliu hned několik ucelených sérií
čipů založených na jádrech <i>Cortex-M</i>. Tyto série spadají do skupiny
integrovaných výrobků s&nbsp;názvem <i>Kinetis Cortex-M</i>. Jedná se například
o sérii označenou písmenem &bdquo;L&ldquo; obsahující čipy s&nbsp;jádrem
<i>Cortex-M0+</i> (&bdquo;L&ldquo; znamená <i>Ultra-Low Power</i>), dále pak o
sérii &bdquo;EA&ldquo; určenou pro automobilový průmysl (taktéž je zde použito
jádro <i>Cortex-M0+</i>), sérii &bdquo;V&ldquo; s&nbsp;čipy určenými pro řízení
motorů, sérii &bdquo;W&ldquo; s&nbsp;různě výkonnými čipy nabízejícími
bezdrátovou komunikaci a v&nbsp;neposlední řadě taktéž sérii
&bdquo;MINI&ldquo;, v&nbsp;níž se nachází nejmenší čipy s&nbsp;jádry
<i>Cortex</i> (menší velikost byla dosažena použitím odlišných pouzder bez
pinů).</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Mikrořadiče Kinetis KL02</h2>

<p>Zaměřme se nyní podrobněji na sérii &bdquo;L&ldquo; obsahující celkem pět
řad mikrořadičů, které se liší jak kapacitami RAM a Flash (ROM), tak i
nabízenými rozhraními. I přesto, že se u těchto mikrořadičů dbá na co nejmenší
spotřebu, se jedná o poměrně výkonné čipy, protože jejich jádro
<i>Cortex-M0+</i> používá maximální hodinovou frekvenci 48 MHz. Další parametry
těchto mikrořadičů taktéž naznačují, že tyto čipy se budou používat
v&nbsp;náročnějších aplikacích, než například osmibitové mikrořadiče PIC (10,
12, 16, 18) či řada 8051. Ostatně se podívejme na následující tabulku
s&nbsp;parametry mikrořadičů spadajících do zmíněných pěti řad <i>KL0x</i> až
<i>KL4x</i>:</p>

<table>
<tr><th>Řada</th><th>SRAM</th><th>Flash</th><th>I<sup>2</sup>S</th><th>USB</th><th>LCD</th><th>A/D</th><th>D/A</th></tr>
<tr><td>KL0x</td><td>  1-4kB</td><td>   8-32kB</td><td> ne</td><td> ne</td><td> ne</td><td>12bit</td><td>12bit</td></tr>
<tr><td>KL1x</td><td> 4-32kB</td><td> 32-256kB</td><td>ano</td><td> ne</td><td> ne</td><td>16bit</td><td>12bit</td></tr>
<tr><td>KL2x</td><td> 4-32kB</td><td> 32-256kB</td><td>ano</td><td>ano</td><td> ne</td><td>16bit</td><td>12bit</td></tr>
<tr><td>KL3x</td><td> 4-32kB</td><td> 32-256kB</td><td>ano</td><td> ne</td><td>ano</td><td>16bit</td><td>12bit</td></tr>
<tr><td>KL4x</td><td>16-32kB</td><td>128-256kB</td><td>ano</td><td>ano</td><td>ano</td><td>16bit</td><td>12bit</td></tr>
</table>

<p>Z&nbsp;tabulky je patrné, že řada <i>KL0x</i> obsahuje čipy
s&nbsp;nejmenšími kapacitami statické RAM i paměti Flash. Navíc tyto čipy
neobsahují piny sběrnice I<sup>2</sup>S (pozor, nejedná se o I<sup>2</sup>C,
ale skutečně o rozdílnou sběrnici používanou zejména při přenosu audio signálů)
a analogovo-digitální převodník je jen dvanáctibitový (což ovšem pro mnoho
aplikací plně dostačuje). Naproti tomu je zajímavé sledovat rozdíly mezi řadami
<i>KL1x</i>, <i>KL2x</i> a <i>KL3x</i>: ty spočívají v&nbsp;rozdílné podpoře
rozhraní pro USB a pro LCD, ostatní parametry zůstávají zachovány.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Moduly mikrořadiče Kinetis KL02</h2>

<p>Kromě statické RAM a paměti Flash obsahují čipy řady <i>KL02</i> (tedy
nejnižší řady zmíněné v&nbsp;předchozí tabulce) následující moduly a periferní
zařízení:</p>

<ol>
<li>Až 18 pinů, které je možné nakonfigurovat jako programově řízené
<i>GPIO</i>, pokud jsou piny vstupní, může změna úrovně vyvolat přerušení (viz
též <a href="#k04">kapitolu číslo 4</a> popisující piny s&nbsp;podobnou
charakteristikou).</li>
<li>Jednu sběrnici SPI (viz též <a href="k06">kapitolu číslo 6</a>).</li>
<li>Dvě sběrnice I<sup>2</sup>C (viz též <a href="k07">kapitolu číslo 7</a>)</li>
<li>Jeden sériový port UART.</li>
<li>Dvanáctibitový A/D převodník.</li>
<li>(Analogový) napěťový komparátor.</li>
<li>Modul umožňující realizovat PWM (pulzně-šířkovou modulaci).</li>
<li>Šestnáctibiový čítač (ten na vstupu děličky používá frekvenci 24 MHz, tj.&nbsp;polovinu frekvence jádra CPU).</li>
<li>Watchdog.</li>
<li>Interní zdroj hodinového signálu.</li>
</ol>

<p>Poznámka: technická specifikace uvádí 28 pinů a nikoli 18 pinů, ovšem to
platí pouze pro mikrořadiče umístěné v&nbsp;pouzdru 32 <a
href="https://en.wikipedia.org/wiki/Quad_Flat_No-leads_package">QFN</a>, můžeme
se ovšem setkat i s&nbsp;mikrořadiči v&nbsp;pouzdrech 16 QFN a 24 QFN.</p>

<p>Poznámka<sub>2</sub>: pro bastlíře se může hodit tento konvertor: <a
href="http://www.instrumentcenter.se/en/motorolafreescale-mcu/elnec-dil48qfn24-zif-kinetis-1-70-3207.php">http://www.instrumentcenter.se/en/motorolafreescale-mcu/elnec-dil48qfn24-zif-kinetis-1-70-3207.php</a>,
pokud tedy nedají přednost jiným čipům umístěným v&nbsp;DIL.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Obsah následující části seriálu</h2>

<p>V&nbsp;navazující části seriálu o jádrech ARM patřících do rodiny
<i>Cortex-M</i> se zaměříme na popis jader <i>Cortex-M4</i>, které se
v&nbsp;mnoha ohledech podobají již popsaným jádrům <i>Cortex-M7</i>. Dále se
seznámíme s&nbsp;dalšími konkrétními mikrořadiči založenými na těchto jádrech a
kromě toho si popíšeme i některé jednodeskové mikropočítače s&nbsp;Cortexy.
Uvidíme, že soudobá nabídka je v&nbsp;této oblasti skutečně velká a kromě čistě
komerčně zaměřených výrobků mířících například do průmyslu zde nalezneme
například i mikropočítače směřující do segmentu &bdquo;domácích bastličů&ldquo;
či dokonce mikropočítače, které se používají ve výuce. Dobrým příkladem
posledních dvou zmíněných skupin může být populární <i>Arduino Due</i> či další
britský příspěvek školství: počítač Micro Bit (taktéž známý pod jménem BBC
Micro Bit či micro:bit).</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Odkazy na Internetu</h2>

<ol>

<li>Freescale Semiconductor (oficiální stránky)<br />
<a href="http://www.freescale.com/">http://www.freescale.com/</a>
</li>

<li>Freescale Semiconductor (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Freescale_Semiconductor">https://en.wikipedia.org/wiki/Freescale_Semiconductor</a>
</li>

<li>Blokový diagram čipů řady KL0x<br />
<a href="http://www.freescale.com/webapp/sps/components/hot.jsp?image=http://cache.freescale.com/files/graphic/block_diagram/KL0_BD.jpg&amp;code=KL0&amp;imgType=ProductBlock&amp;fasp=undefined&amp;fpsp=true">http://www.freescale.com/webapp/sps/components/hot.jsp?image=http://cache.freescale.com/files/graphic/block_diagram/KL0_BD.jpg&amp;code=KL0&amp;imgType=ProductBlock&amp;fasp=undefined&amp;fpsp=true</a>
</li>

<li>A tour of the Cortex-M3 core:<br />
<a href="http://community.arm.com/groups/processors/blog/2013/11/04/a-tour-of-the-cortex-m3-core">http://community.arm.com/groups/processors/blog/2013/11/04/a-tour-of-the-cortex-m3-core</a>
</li>

<li>Five things you may not know about ARM Cortex-M:<br />
<a href="http://community.arm.com/docs/DOC-6912">http://community.arm.com/docs/DOC-6912</a>
</li>

<li>Divide and Conquer:<br />
<a href="http://community.arm.com/docs/DOC-8059">http://community.arm.com/docs/DOC-8059</a>
</li>

<li>MCU market turns to 32-bits and ARM<br />
<a href="http://www.eetimes.com/document.asp?doc_id=1280803">http://www.eetimes.com/document.asp?doc_id=1280803</a>
</li>

<li>Cortex-M0 Processor (ARM Holdings)<br />
<a href="http://www.arm.com/products/processors/cortex-m/cortex-m0.php">http://www.arm.com/products/processors/cortex-m/cortex-m0.php</a>
</li>

<li>Cortex-M0+ Processor (ARM Holdings)<br />
<a href="http://www.arm.com/products/processors/cortex-m/cortex-m0plus.php">http://www.arm.com/products/processors/cortex-m/cortex-m0plus.php</a>
</li>

<li>ARM Processors in a Mixed Signal World<br />
<a href="http://www.eeweb.com/blog/arm/arm-processors-in-a-mixed-signal-world">http://www.eeweb.com/blog/arm/arm-processors-in-a-mixed-signal-world</a>
</li>

<li>ARM Architecture (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/ARM_architecture">https://en.wikipedia.org/wiki/ARM_architecture</a>
</li>

<li>Cortex-M0 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/ARM_Cortex-M0">https://en.wikipedia.org/wiki/ARM_Cortex-M0</a>
</li>

<li>Cortex-M0+ (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M0.2B">https://en.wikipedia.org/wiki/ARM_Cortex-M#Cortex-M0.2B</a>
</li>

<li>Improving ARM Code Density and Performance<br />
<a href="New Thumb Extensions to the ARM Architecture Richard Phelan">New Thumb Extensions to the ARM Architecture Richard Phelan</a>
</li>

<li>The ARM Processor Architecture<br />
<a href="http://www.arm.com/products/processors/technologies/instruction-set-architectures.php">http://www.arm.com/products/processors/technologies/instruction-set-architectures.php</a>
</li>

<li>Thumb-2 instruction set<br />
<a href="http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0344c/Beiiegaf.html">http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0344c/Beiiegaf.html</a>
</li>

<li>Introduction to ARM thumb<br />
<a href="http://www.eetimes.com/discussion/other/4024632/Introduction-to-ARM-thumb">http://www.eetimes.com/discussion/other/4024632/Introduction-to-ARM-thumb</a>
</li>

<li>ARM, Thumb, and ThumbEE instruction sets<br />
<a href="http://www.keil.com/support/man/docs/armasm/armasm_CEGBEIJB.htm">http://www.keil.com/support/man/docs/armasm/armasm_CEGBEIJB.htm</a>
</li>

<li>An Introduction to ARM Assembly Language<br />
<a href="http://dev.emcelettronica.com/introduction-to-arm-assembly-language">http://dev.emcelettronica.com/introduction-to-arm-assembly-language</a>
</li>

<li>Processors - ARM<br />
<a href="http://www.arm.com/products/processors/index.php">http://www.arm.com/products/processors/index.php</a>
</li>

<li>The ARM Instruction Set<br />
<a href="http://simplemachines.it/doc/arm_inst.pdf">http://simplemachines.it/doc/arm_inst.pdf</a>
</li>

<li>SPI interface tutorial<br />
<a href="http://www.best-microcontroller-projects.com/spi-interface.html">http://www.best-microcontroller-projects.com/spi-interface.html</a></li>

<li>Serial Peripheral Interface Bus<br />
<a href="http://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus">http://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus</a></li>

<li>EUSB to SPI bus Kit<br />
<a href="http://www.eidusa.com/Electronics_Kits_EUSB_To_SPI_BUS.htm">http://www.eidusa.com/Electronics_Kits_EUSB_To_SPI_BUS.htm</a></li>

<li>SPI Block Guide V03.06, Freescale Semiconductor<br />
<a href="http://www.freescale.com/files/microcontrollers/doc/ref_manual/S12SPIV3.pdf">http://www.freescale.com/files/microcontrollers/doc/ref_manual/S12SPIV3.pdf</a></li>

<li>What is SPI?<br />
<a href="http://www.fpga4fun.com/SPI1.html">http://www.fpga4fun.com/SPI1.html</a></li>

<li>SPI - A simple implementation<br />
<a href="http://www.fpga4fun.com/SPI2.html">http://www.fpga4fun.com/SPI2.html</a></li>

<li>Bit-banging<br />
<a href="http://en.wikipedia.org/wiki/Bit-banging">http://en.wikipedia.org/wiki/Bit-banging</a></li>

<li>Joint Test Action Group<br />
<a href="http://en.wikipedia.org/wiki/JTAG">http://en.wikipedia.org/wiki/JTAG</a></li>

<li>I<sup>2</sup>C<br />
<a href="http://en.wikipedia.org/wiki/I2C">http://en.wikipedia.org/wiki/I2C</a></li>

<li>Display Data Channel<br />
<a href="http://en.wikipedia.org/wiki/Display_Data_Channel">http://en.wikipedia.org/wiki/Display_Data_Channel</a></li>

<li>I<sup>2</sup> Background<br />
<a href="http://www.microport.tw/blognew.php?blog_no=7#theory">http://www.microport.tw/blognew.php?blog_no=7#theory</a></li>

<li>PIC16F87X, 28/40-pin 8-Bit CMOS FLASH Microcontrollers<br />
Microchip Technology Inc.<br />
<a href="http://www.microchip.com">http://www.microchip.com</a></li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2015</small></p>
</body>
</html>

