<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>VisiData - švýcarský nožík pro prohlížení a konverzi dat</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>VisiData - švýcarský nožík pro prohlížení a konverzi dat</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku se seznámíme s aplikací nazvanou VisiData. Jedná se o velmi užitečný program určený pro prohlížení a konverzi mnoha typů datových souborů, včetně formátů CSV, XLS, JSONu, XML, ale i databázových souborů (SQLite...), binárních obrázků apod.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. VisiData &ndash; švýcarský nožík pro prohlížení a konverzi dat</a></p>
<p><a href="#k02">2. Instalace nástroje VisiData</a></p>
<p><a href="#k03">3. První spuštění aplikace VisiData</a></p>
<p><a href="#k04">4. Načítání a prohlížení dat reprezentovaných dvourozměrnými tabulkami (CSV atd.)</a></p>
<p><a href="#k05">5. Pohyb po zobrazené tabulce</a></p>
<p><a href="#k06">6. Přidání metainformací o typech sloupců</a></p>
<p><a href="#k07">7. Základní práce s&nbsp;databázovými soubory</a></p>
<p><a href="#k08">8. Načtení souborů se strukturovanými daty (JSON atd.)</a></p>
<p><a href="#k09">9. Rozdělení sloupců na základě regulárního výrazu</a></p>
<p><a href="#k10">10. Rozdělení sloupců na základě skupin definovaných v&nbsp;regulárním výrazu</a></p>
<p><a href="#k11">11. Konverze a export dat</a></p>
<p><a href="#k12">12. Příklady provedené konverze</a></p>
<p><a href="#k13">13. Vykreslování grafů v&nbsp;nástroji VisiData</a></p>
<p><a href="#k14">14. Vykreslení grafu z&nbsp;tabulky s&nbsp;jediným sloupcem s&nbsp;hodnotami</a></p>
<p><a href="#k15">15. Zobrazení grafů s&nbsp;více řadami hodnot</a></p>
<p><a href="#k16">16. Graf typu X-Y</a></p>
<p><a href="#k17">17. Práce s&nbsp;rastrovými obrázky PNG</a></p>
<p><a href="#k18">18. Malý výlet do historie výpočetní techniky - aplikace VisiCalc</a></p>
<p><a href="#k19">19. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. VisiData &ndash; švýcarský nožík pro prohlížení a konverzi dat</h2>

<p>Aplikaci <i>VisiData</i>, s&nbsp;níž se alespoň ve stručnosti seznámíme
v&nbsp;dnešním článku, je skutečně možné považovat v&nbsp;oblasti prohlížení,
základního zpracování a popř.&nbsp;i v&nbsp;oblasti konverze dat za jakýsi
univerzální a v&nbsp;mnoha situacích užitečný švýcarský nožík. <i>VisiData</i>
lze v&nbsp;první řadě použít pro prohlížení různých typů souborů, zejména
souborů obsahujících data ve formě dvourozměrných tabulek (CSV, TSV, textové
soubory s&nbsp;volitelnými oddělovači, XLS), dále souborů s&nbsp;obecně
vnořenými datovými strukturami (zde jsou podporovány formáty JSON, XML, YAML) a
zapomenout nesmíme ani na možnost prohlížení databázových souborů (například
lze přímo otevřít soubory databáze SQLite). Pracovat lze, i když v&nbsp;omezené
míře, i s&nbsp;rastrovými obrázky a v&nbsp;případě potřeby je možné si dopsat
konvertor pro vlastní datové soubory. Tento program pro svůj běh vyžaduje pouze
prakticky jakýkoli emulátor terminálu, a to i přesto, že dokáže (samozřejmě
s&nbsp;různými omezeními) zobrazit i grafy s&nbsp;jedním či několika průběhy.
Lze ho tedy používat i vzdáleně přes SSH atd. atd.</p>

<a href="https://www.root.cz/obrazek/357050/"><img src="https://i.iinfo.cz/images/280/visidata-1-prev.png" class="image-357050" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 1: Vestavěná nápověda v&nbsp;aplikaci VisiData je strukturována
naprosto stejně, jako klasické manuálové stránky.</i></p>

<p>Nezávisle na typu souboru obsahujícího zkoumané informace se nástroj
<i>VisiData</i> snaží o to, aby se pro zobrazení dat používala stejná metoda
připomínající tabulkové procesory (ostatně název <i>VisiData</i> připomíná
starodávný tabulkový procesor <i>VisiCalc</i>, který taktéž pracoval
v&nbsp;textovém režimu). Díky tomu, že je celý program primárně řízen
klávesovými zkratkami, je práce s&nbsp;ním velmi rychlá, ovšem samozřejmě se
předpokládá, že si uživatel osvojí alespoň základní příkazy pro ovládání.
V&nbsp;případě potřeby je samozřejmě součástí <i>VisiData</i> i vestavěná
nápověda.</p>

<p><div class="rs-tip-major">Poznámka: mnohé příkazy jsou odvozeny od Vi/Vimu,
takže uživatelé těchto textových editorů mají určitou výhodu.</div></p>

<p>Kromě interaktivní práce s&nbsp;aplikací <i>VisiData</i> je ovšem možné
provádět i konverze dat, a to přímo z&nbsp;příkazového řádku, bez spuštění
celoobrazovkového textového uživatelského rozhraní. I s&nbsp;tímto konceptem se
samozřejmě seznámíme v&nbsp;navazujících kapitolách.</p>

<p><div class="rs-tip-major">Poznámka: vzhledem k&nbsp;tomu, že se
<i>VisiData</i> používá mj.&nbsp;i pro interaktivní práci, je možné (a vhodné)
si informace z&nbsp;článku doplnit i několika videi, v&nbsp;nichž jsou některé
možnosti tohoto nástroje názorně ukázány. Tato videa naleznete na adrese <a
href="https://www.youtube.com/playlist?list=PLxu7QdBkC7drrAGfYzatPGVHIpv4Et46W">https://www.youtube.com/playlist?list=PLxu7QdBkC7drrAGfYzatPGVHIpv4Et46W</a>.</div></p>

<a href="https://www.root.cz/obrazek/357051/"><img src="https://i.iinfo.cz/images/280/visidata-2-prev.png" class="image-357051" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 2: Prakticky celá aplikace VisiData je naprogramována
v&nbsp;Pythonu, takže (pokud nebudeme používat nějaké přídavné moduly) by
s&nbsp;její instalací neměl být problém (předpokládá se použití Pythonu
3).</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace nástroje VisiData</h2>

<p>Instalace nástroje <i>VisiData</i> může proběhnout dvěma způsoby.
V&nbsp;případě, že je tato aplikace dostupná ve formě balíčku určeného přímo
pro vaši distribuci, stačí si tento balíček nainstalovat. Pokud tomu tak není,
můžeme využít již výše zmíněného faktu, že <i>VisiData</i> je naprogramován
v&nbsp;Pythonu a že je <a href="https://pypi.org/project/visidata/">dostupný na
PyPi</a>. Pro instalaci v&nbsp;tomto případě použijeme nástroj
<strong>pip</strong> resp.&nbsp;<strong>pip3</strong>. Instalaci provedeme pro
aktuálně přihlášeného uživatele, takže se program nainstaluje do adresáře
<strong>~/.local/</strong>, což mj.&nbsp;znamená, že pro instalaci nebudeme
potřebovat oprávnění administrátora:</p>

<pre>
$ <strong>pip3 install --user visidata</strong>
&nbsp;
Collecting visidata
  Downloading https://files.pythonhosted.org/packages/a6/f3/e16712dc1d51e59c3e1f925b3375c6774c135ea7f5c39597c976bd2ef991/visidata-1.5.2.tar.gz (123kB)
      100% |████████████████████████████████| 133kB 1.4MB/s 
      Requirement already satisfied: python-dateutil in ./.local/lib/python3.6/site-packages (from visidata)
      Requirement already satisfied: six&gt;=1.5 in ./.local/lib/python3.6/site-packages (from python-dateutil-&gt;visidata)
      Installing collected packages: visidata
        Running setup.py install for visidata ... done
        Successfully installed visidata-1.5.2
</pre>

<p><div class="rs-tip-major">Poznámka: pro instalaci pro všechny uživatele
vynechejte přepínač <strong>--user</strong> a spouštějte správce balíčků
s&nbsp;právy administrátora.</div></p>

<p>Pro plnou podporu práce s&nbsp;rastrovými obrázky uloženými ve formátu PNG
však budeme potřebovat nainstalovat ještě další Pythonovskou knihovnu nazvanou
<i>Pypng</i>. I tato knihovna, která je mimochodem naprogramována
v&nbsp;Pythonu a nezávisí tedy na <strong>libpng</strong>, je <a
href="https://pypi.org/project/pypng/">dostupná na PyPi</a>, takže instalaci
provedeme naprosto stejným způsobem, jako u předchozího balíčku:</p>

<pre>
$ <strong>pip3 install --user pypng</strong>
Collecting pypng
  Downloading https://files.pythonhosted.org/packages/0e/39/993a5feea8ed9c2eebd70c6e7c20cb4b0823588f5ab0afab4b0be95ebc23/pypng-0.0.19.tar.gz (293kB)
      100% |████████████████████████████████| 296kB 1.4MB/s 
      Installing collected packages: pypng
        Running setup.py install for pypng ... done
        Successfully installed pypng-0.0.19
</pre>

<p><div class="rs-tip-major">Poznámka: podobně jako některé další přídavné
moduly je i výše zmíněna knihovna <i>pypng</i> pouze nepovinným doplněním
aplikace <i>VisiData</i>. Proto ji musíme instalovat explicitně; nejedná se o
povinnou závislost.</div></p>

<p>Po (doufejme, že úspěšné) instalaci se přesvědčíme, že je aplikace
<i>VisiData</i> spustitelná. Pro její spuštění se používá příkaz
<strong>vd</strong>, který by měl být umístěn v&nbsp;adresáři, jenž je součástí
obsahu proměnné prostředí <strong>PATH</strong> (pokud tomu tak není, upravte
si tuto proměnnou):</p>

<p>Zjištění, zda se nástroj <strong>vd</strong> nachází na očekávaném místě
v&nbsp;adresářové struktuře:</div></p>

<pre>
$ <strong>whereis vd</strong>
&nbsp;
vd: /home/tester/.local/bin/vd
</pre>

<p>Poslední stabilní verze programu <i>VisiData</i> by měla být 1.5.2, což
taktéž pro jistotu ověříme:</p>

<pre>
$ <strong>vd --version</strong>
&nbsp;
saul.pw/VisiData v1.5.2
</pre>

<p><div class="rs-tip-major">Poznámka: pokud budete potřebovat načítat i
tabulky z&nbsp;Microsoft Excelu uložené ve formátu XLSX, nainstalujte si navíc
balíček pojmenovaný <i>openpyxl</i>, který samozřejmě <a
href="https://pypi.org/project/openpyxl/">opět naleznete na PyPi</a>. Podobně
pro práci s&nbsp;tabulkami uloženými v&nbsp;databázi Postgres budete potřebovat
balíček <a href="https://pypi.org/project/psycopg2/">psycopg2</a></div>.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. První spuštění aplikace VisiData</h2>

<p>V&nbsp;případě, že spustíte příkaz <strong>vd</strong> bez uvedení dalších
přepínačů, zobrazí se jeho celoobrazovkové textové uživatelské rozhraní, do
kterého se aplikace <i>VisiData</i> pokusí načíst seznam všech souborů (včetně
jejich typu), který bude sestaven i rekurzivně z&nbsp;obsahu všech podadresářů,
jenž budou nalezeny.  Potenciálně se tedy může jednat o časově poměrně náročnou
operaci, zejména pokud máte připojený síťový disk. Na druhou stranu je však
tato vlastnost velmi užitečná ve chvíli, kdy máme adresář obsahující velké
množství datových souborů, které je zapotřebí prozkoumat a popř.&nbsp;nějakým
způsobem zpracovat.</p>

<a href="https://www.root.cz/obrazek/357052/"><img src="https://i.iinfo.cz/images/280/visidata-3-prev.png" class="image-357052" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 3: Zobrazení seznamu souborů ve formě tabulky (ostatně naprostá
většina informací se zobrazuje právě ve formě tabulky).</i></p>

<p>Ve chvíli, kdy se pokusíte otevřít soubory s&nbsp;koncovkami
<strong>.zip</strong>, <strong>.gz</strong>, <strong>.bz2</strong>, popř.
<strong>.xz</strong>, pokusí se nástroj <i>VisiData</i> nejprve rozbalit obsah
těchto souborů a následně zobrazit přímo získaná (.gz) data popř.&nbsp;seznam
nalezených souborů v&nbsp;archivu (.zip atd.).</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Načítání a prohlížení dat reprezentovaných dvourozměrnými tabulkami (CSV atd.)</h2>

<p>Nyní si již můžeme ukázat některé základní možnosti, které nám nástroj
<i>VisiData</i> nabízí. Začneme sice tou nejjednodušší, ale velmi užitečnou
vlastností &ndash; načítáním a prohlížením dat reprezentovaných dvourozměrnými
tabulkami. Tato data bývají typicky uložena v&nbsp;těchto formátech
(v&nbsp;žádném případě se nejedná o vyčerpávající výčet):</p>

<ul>

<li><i>CSV</i> neboli <i>Comma-Separated Values</i> [<a
href="https://en.wikipedia.org/wiki/Comma-separated_values">1</a>] je jedním
z&nbsp;nejčastěji používaných souborových formátů v&nbsp;této oblasti, a to
přesto, že je export a import CSV v&nbsp;některých případech problematický
(například některé české mutace Excelu namísto čárek používají středníky,
problémy nastávají s&nbsp;buňkami obsahujícími znaky pro konec řádku atd.).
Tyto soubory jsou mnohdy obrovské, ovšem s&nbsp;jejich zobrazením ve VisiData
nebývají ani v&nbsp;tomto případě problémy. Pokud máte při importu či exportu
potíže se zpracováním CSV, můžete použít několik přepínačů příkazového řádku
s&nbsp;přesnou specifikací, jak se má konverze provést.</li>

<li><i>TSV</i> neboli <i>Tab-Separated Values</i> [<a
href="https://en.wikipedia.org/wiki/Tab-separated_values">2</a>] [<a
href="http://jkorpela.fi/TSV.html">3</a>] je velmi podobným formátem, ovšem
s&nbsp;tím rozdílem, že oddělovačem jednotlivých buněk je znak tabulátoru.
Podobně jako v&nbsp;případě CSV i zde existuje několik voleb zadávaných na
příkazovém řádku, které ovlivňují způsob importu (zda tabulka obsahuje hlavičky
sloupců atd.).</li>

<li>Existuje i mnoho aplikací, v&nbsp;nichž jsou tabulková data uložena ve
formě běžných textových souborů s&nbsp;nějakými oddělovači odlišnými od výše
zmíněného tabulátoru (relativně často se jedná o středníky, dvojtečky nebo o
znak |). Buď se jedná o zobecnění formátů CSV a TSV [<a
href="https://en.wikipedia.org/wiki/Delimiter-separated_values">4</a>], nebo
může mít textový soubor podobu naformátovaných sloupců s&nbsp;pevnou délkou (a
tedy bez problémů čitelných uživatelem). V&nbsp;tomto případě se VisiData
pokusí soubor analyzovat (přesněji řečeno při výchozím nastavení analyzovat
prvních 1000 řádků) a na základě toho navrhnout, kde se nachází jednotlivé
sloupce. Příkladem takového souboru je například <a
href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>.</li>

</ul>

<p>Se všemi výše zmíněnými typy souborů dokáže aplikace <i>VisiData</i>
pracovat, i když v&nbsp;některých případech může dojít k&nbsp;určitým problémům
(například se mi nepodařilo bez chyb načíst mé daňové přiznání vyexportované
z&nbsp;formátu Excelu do CSV :-). Důležité je, že všechny tři skupiny formátů
slouží pouze pro přenos surových dat, bez dalších informací o typech sloupců
atd. Tyto informace ovšem můžeme interaktivně doplnit po načtení příslušné
tabulky do programu <i>VisiData</i>. Podívejme se nyní na několik ukázek:</p>

<a href="https://www.root.cz/obrazek/357053/"><img src="https://i.iinfo.cz/images/280/visidata-4-prev.png" class="image-357053" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 4: Zobrazení souboru s&nbsp;daty reprezentovanými tabulkou a
uloženými ve formátu CSV. Po načtení není zřejmé, jaké jsou typy dat
v&nbsp;jednotlivých sloupcích, takže se předpokládá, že se jedná o texty
(řetězce). Tomu odpovídá i zarovnání a chybějící příznak v&nbsp;popisu
sloupců.</i></p>

<a href="https://www.root.cz/obrazek/357054/"><img src="https://i.iinfo.cz/images/280/visidata-5-prev.png" class="image-357054" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 5: Samotné příkazy programu VisiData jsou uloženy ve formátu TSV,
takže si je můžeme velmi snadno zobrazit a popř.&nbsp;vhodným způsobem
modifikovat.</i></p>

<a href="https://www.root.cz/obrazek/357055/"><img src="https://i.iinfo.cz/images/280/visidata-6-prev.png" class="image-357055" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 6: Pokus o načtení textového souboru
<strong>/etc/passwd</strong>, který používá vlastní oddělovače jednotlivých
prvků v&nbsp;záznamech. V&nbsp;tomto případě se načetla tabulka s&nbsp;jediným
sloupcem.</i></p>

<a href="https://www.root.cz/obrazek/357056/"><img src="https://i.iinfo.cz/images/280/visidata-7-prev.png" class="image-357056" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 7: Stejný soubor, ovšem načtený s&nbsp;volbou
<strong>--delimiter=:</strong>. Nyní se sloupce rozpoznaly správně, ovšem
VisiData předpokládá, že první řádek obsahuje popisu sloupců. I tato možnost je
samozřejmě konfigurovatelná.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Pohyb po zobrazené tabulce</h2>

<p>Pro pohyb v&nbsp;zobrazených tabulkách je možné použít několik klávesových
zkratek, které jsou vypsány v&nbsp;tabulce pod odstavcem:</p>

<table>
<tr><th>Klávesová zkratka</th><th>Význam</th></tr>
<tr><td>šipky</td><td>pohyb po sloupcích a řádcích naprosto stejným způsobem, jako v&nbsp;tabulkových procesorech</td></tr>
<tr><td>h, l</td><td>přesun na předchozí/následující sloupec (převzato z&nbsp;Vi/Vimu)</td></tr>
<tr><td>j, k</td><td>přesun na další/předchozí řádek (opět převzato z&nbsp;Vi/Vimu)</td></tr>
<tr><td>gh, gl</td><td>přesun na první/poslední sloupec</td></tr>
<tr><td>gj, gk</td><td>přesun na poslední/první řádek</td></tr>
<tr><td>G</td><td>přesun na první řádek (převzato z&nbsp;Vi/Vimu)</td></tr>
<tr><td>gg</td><td>přesun na poslední řádek (opět převzato z&nbsp;Vi/Vimu)</td></tr>
</table>

<p>Velmi užitečné jsou i funkce určené pro vyhledávání v&nbsp;datových
souborech a pro přeskok kurzoru na nalezenou buňku. Tyto funkce jsou založeny
na běžných regulárních výrazech:</p>

<table>
<tr><th>Klávesová zkratka</th><th>Význam</th></tr>
<tr><td>/</td><td>vyhledání směrem ke konci tabulky, ovšem jen v&nbsp;aktuálním sloupci</td></tr>
<tr><td>?</td><td>vyhledání směrem &nbsp;začátku tabulky, ovšem jen v&nbsp;aktuálním sloupci</td></tr>
<tr><td>g/</td><td>jako příkaz /, ovšem pro všechny sloupce</td></tr>
<tr><td>g?</td><td>jako příkaz ?, ovšem pro všechny sloupce</td></tr>
<tr><td>n</td><td>přechod na další nalezený řetězec (regulární výraz se znovu nezadává)</td></tr>
<tr><td>N</td><td>přechod na další nalezený řetězec v&nbsp;opačném směru</td></tr>
</table>

<p>Při zadávání regulárních výrazů můžete používat i znaky &bdquo;^&ldquo; a
&bdquo;$&ldquo; v&nbsp;případě, že potřebujete najít text na začátku nebo na
konci buněk.</p>

<a href="https://www.root.cz/obrazek/357057/"><img src="https://i.iinfo.cz/images/280/visidata-8-prev.png" class="image-357057" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 8: Začátek vyhledání řetězce &bdquo;2000&ldquo; (řetězec se
zapisuje na spodním řádku terminálu).</i></p>

<a href="https://www.root.cz/obrazek/357058/"><img src="https://i.iinfo.cz/images/280/visidata-9-prev.png" class="image-357058" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 9: Vyhledání řetězce &bdquo;2000&ldquo; v&nbsp;tabulce.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Přidání metainformací o typech sloupců</h2>

<p>V&nbsp;předchozích odstavcích jsme si řekli, že zejména u textově
orientovaných formátů CSV a TSV nemáme k&nbsp;dispozici žádnou informaci o
typech dat, tj.&nbsp;například informaci o tom, že první sloupec obsahuje celá
čísla, druhý řetězce, další reálná čísla, čtvrtý data atd. Tyto metainformace
je možné po načtení souboru doplnit, a to zcela jednoduchým a především rychlým
způsobem &ndash; s&nbsp;využitím kurzorových šipek nebo kláves
<strong>h</strong> a <strong>l</strong> vybereme příslušný sloupec a následně
stiskem jedné klávesy určíme typ dat. K&nbsp;dispozici přitom máme tyto
klávesové zkratky:</p>

<table>
<tr><th>Klávesová zkratka</th><th>Význam</th></tr>
<tr><td>~</td><td>sloupec obsahuje obecné řetězce</td></tr>
<tr><td>#</td><td>sloupec obsahuje celá čísla</td></tr>
<tr><td>%</td><td>sloupec obsahuje reálná čísla (resp.&nbsp;přesněji řečeno hodnoty s&nbsp;řádovou tečkou)</td></tr>
<tr><td>$</td><td>sloupec obsahuje peněžní částky</td></tr>
<tr><td>@</td><td>sloupec obsahuje datum (jak asi předpokládáte, tato volba ne vždy funguje k&nbsp;plné spokojenosti)</td></tr>
<tr><td>z#</td><td>přepnutí zobrazení: délka dat (ve znacích), nikoli jejich hodnota</td></tr>
</table>

<p>Podívejme se na způsob použití těchto zkratek:</p>

<a href="https://www.root.cz/obrazek/357059/"><img src="https://i.iinfo.cz/images/280/visidata-10-prev.png" class="image-357059" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 10: Tabulka ihned po načtení souboru s&nbsp;tabulárními daty
uloženými ve formátu CSV.</i></p>

<a href="https://www.root.cz/obrazek/357060/"><img src="https://i.iinfo.cz/images/280/visidata-11-prev.png" class="image-357060" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 11: Změna typu dat prvního sloupce &ndash; celá čísla. To, jaký
typ dat je ve sloupci uložen, je patrné ze znaku zobrazeného za názvem sloupce
(zde #).</i></p>

<a href="https://www.root.cz/obrazek/357061/"><img src="https://i.iinfo.cz/images/280/visidata-12-prev.png" class="image-357061" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 12: Změna typu dat druhého sloupce &ndash; čísla s&nbsp;řádovou
tečkou. Povšimněte si změny zobrazení (zarovnání doprava) i značky
v&nbsp;záhlaví sloupce.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Základní práce s&nbsp;databázovými soubory</h2>

<p>Nyní se dostáváme k&nbsp;velmi zajímavému a potenciálně užitečnému tématu,
protože nástroj <i>VisiData</i> dokáže načítat a zobrazit obsah souborů
používaných některými typy relačních databází. Především je podporován formát
databáze <i>SQLite</i>. Soubory používané touto databází máte pravděpodobně na
svém počítači v&nbsp;hojném množství, protože <i>SQLite</i> je používána
například Firefoxem či některými správci balíčků.</p>

<p><i>VisiData</i> dokáže formát rozpoznat na základě jeho obsahu a koncovky.
Pokud se to z&nbsp;nějakého důvodu nepodaří, můžete použít přepínač <strong>-f
sqlite</strong>:</p>

<pre>
$ <strong>vd -f sqlite foo_bar_baz.db</strong>
</pre>

<p>Kromě toho je možné přistoupit i k&nbsp;obsahu běžící databáze Postgresu, a
to následujícím způsobem (potřebujete přitom výše zmíněný balíček
<i>Psycopg2</i>):</p>

<pre>
$ <strong>vd postgres://username:password@hostname:port/database</strong>
</pre>

<p>Základní práce s&nbsp;databázovými soubory je relativně jednoduchá, což je
ostatně patrné i při pohledu na následující screenshoty. Ty vznikly prohlížením
databáze používané systémem DNF/YUM/RPM:</p>

<a href="https://www.root.cz/obrazek/357062/"><img src="https://i.iinfo.cz/images/280/visidata-13-prev.png" class="image-357062" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 13: Po otevření databázového souboru se nejdříve zobrazí seznam
objektů, které jsou v&nbsp;tomto souboru uloženy. Vidíme, že se kromě tabulek
zobrazí i informace o triggerech či o indexech. Ve sloupci SQL je zobrazen
příkaz DDL (Data Definition Language), kterým se daný objekt (samozřejmě
prázdný) vytvoří.</i></p>

<a href="https://www.root.cz/obrazek/357063/"><img src="https://i.iinfo.cz/images/280/visidata-14-prev.png" class="image-357063" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 14: Zobrazení obsahu jedné vybrané tabulky. Jedná se o běžnou
tabulku se třemi sloupci. Pro návrat do předchozího pohledu použijte klávesovou
zkratku <strong>q</strong>.</i></p>

<a href="https://www.root.cz/obrazek/357064/"><img src="https://i.iinfo.cz/images/280/visidata-15-prev.png" class="image-357064" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 15: Jeden z&nbsp;nejlepších způsobů zobrazení neexistující
hodnoty (<strong>NULL</strong>) v&nbsp;jiné tabulce pocházející ze stejné
databáze.</i></p>

<p><div class="rs-tip-major">Poznámka: podobným způsobem se pracuje i
s&nbsp;Excelovskými sešity, protože sešit se taktéž (obecně) skládá
z&nbsp;několika tabulek, z&nbsp;nichž jednu je nutné na začátku
vybrat.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Načtení souborů se strukturovanými daty (JSON atd.)</h2>

<p>Jak jsme si již řekli v&nbsp;úvodním odstavci, dokáže nástroj
<i>VisiData</i> pracovat i se strukturovanými daty, které bývají uloženy ve
formátech JSON, YAML či XML (částečně i v&nbsp;HTML). S&nbsp;těmito formáty se
pracuje prakticky stejným způsobem, takže si tuto funkcionalitu předvedeme na
JSONu, konkrétně na metainformacích o javascriptovém balíčku <a
href="https://www.root.cz/clanky/propojeni-sveta-lispu-se-svetem-javascriptu-s-vyuzitim-transprekladace-wisp/">Wisp</a>.
Tento soubor má následující obsah:</p>

<pre>
{
  "name": "wisp",
  "id": "wisp",
  "version": "0.10.0",
  "description": "Homoiconic JS with clojure syntax, s-expressions &amp; macros",
  "author": {
    "name": "Irakli Gozalishvili",
    "email": "rfobic@gmail.com",
    "url": "http:\/\/jeditoolkit.com"
  },
  "homepage": "https:\/\/github.com\/Gozala\/wisp",
  "keywords": [
    "compiler",
    "language",
    "transpiler",
    "javascript",
    "lisp",
    "clojure",
    "maros",
    "s-expression",
    "homoiconicity",
    "functional"
  ],
  "repository": {
    "type": "git",
    "url": "https:\/\/github.com\/Gozala\/wisp.git",
    "web": "https:\/\/github.com\/Gozala\/wisp"
  },
  "bugs": {
    "url": "https:\/\/github.com\/Gozala\/wisp\/issues\/"
  },
  "licenses": [
    {
      "type": "BSD New",
      "url": "http:\/\/opensource.org\/licenses\/BSD-3-Clause"
    }
  ],
  "devDependencies": {
    "browserify": "2.35.2",
    "wisp": "0.9.0-beta2"
  },
  "engines": {
    "node": "&gt;=0.4.0"
  },
  "main": ".\/wisp.js",
  "bin": {
    "wisp": ".\/bin\/wisp.js"
  },
  "scripts": {
    "prepublish": "make all",
    "test": "make all &amp;&amp; make test"
  },
  "dependencies": {
    "escodegen": "git:\/\/github.com\/Constellation\/escodegen.git#master",
    "base64-encode": "~1.0.1",
    "commander": "&gt;=2.2.0"
  },
  "_id": "wisp@0.10.0",
  "_shasum": "22ad07beec62b236bb869b2e7990a2c7336c9e01",
  "_from": "wisp@latest",
  "_npmVersion": "1.4.9",
  "_npmUser": {
    "name": "gozala",
    "email": "rfobic@gmail.com"
  },
  "maintainers": [
    {
      "name": "gozala",
      "email": "rfobic@gmail.com"
    }
  ],
  "dist": {
    "shasum": "22ad07beec62b236bb869b2e7990a2c7336c9e01",
    "tarball": "https:\/\/registry.npmjs.org\/wisp\/-\/wisp-0.10.0.tgz"
  },
  "directories": {
    
  },
  "_resolved": "https:\/\/registry.npmjs.org\/wisp\/-\/wisp-0.10.0.tgz"
}
</pre>

<p>Povšimněte si, že se jedná o slovník (asociativní pole) obsahující jako
prvky buď další slovníky nebo pole. Jak vypadá práce s&nbsp;takovým souborem
v&nbsp;aplikaci VisiData, která primárně pracuje s&nbsp;tabulkami:</p>

<a href="https://www.root.cz/obrazek/357065/"><img src="https://i.iinfo.cz/images/280/visidata-16-prev.png" class="image-357065" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 16: Načtení souboru ve formátu JSON. Vidět můžeme pouze klíče a
hodnoty na nejvyšší úrovni v&nbsp;hierarchii objektů. Každá dvojice
klíč+hodnota představuje jeden sloupec tabulky.</i></p>

<a href="https://www.root.cz/obrazek/357066/"><img src="https://i.iinfo.cz/images/280/visidata-17-prev.png" class="image-357066" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 17: Samozřejmě se můžeme podívat i na obsah jednotlivých hodnot
(což jsou mnohdy další objekty popř.&nbsp;pole).</i></p>

<a href="https://www.root.cz/obrazek/357067/"><img src="https://i.iinfo.cz/images/280/visidata-18-prev.png" class="image-357067" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 18: V&nbsp;případě, že některá z&nbsp;prohlížených hodnot
obsahuje pole, je toto pole zobrazeno jako běžná tabulka (typicky
s&nbsp;jediným sloupcem, protože se v&nbsp;JSONu často setkáme právě
s&nbsp;jednorozměrnými poli).</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Rozdělení sloupců na základě regulárního výrazu</h2>

<p>Zmínit se musíme i o další užitečné funkci. Jedná se o možnost rozdělení
aktivního sloupce, tj.&nbsp;sloupce, na němž se nachází vybraná buňka, na
několik nových sloupců, a to na základě uživatelem zadaného regulárního výrazu.
Tímto výrazem se specifikuje znak či sekvence znaků použitá pro oddělení
jednotlivých částí textu takovým způsobem, aby ho bylo možné rozdělit do
několika buněk. Příkaz, který tuto funkci provádí, se spouští klávesovou
zkratkou <strong>:</strong> (dvojtečka). Po zadání dvojtečky se očekává
specifikace regulárního výrazu potvrzeného klávesou <strong>Enter</strong>.</p>

<p>Opět se podívejme na celý postup, který není příliš složitý:</p>

<a href="https://www.root.cz/obrazek/357068/"><img src="https://i.iinfo.cz/images/280/visidata-19-prev.png" class="image-357068" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 19: Znovu jsme načetli obsah souboru
<strong>/etc/passwd</strong>. VisiData v&nbsp;tomto případě automaticky
nerozeznal oddělovače sloupců, ovšem to nevadí, protože v&nbsp;tomto můžeme
použít regulární výraz.</i></p>

<a href="https://www.root.cz/obrazek/357069/"><img src="https://i.iinfo.cz/images/280/visidata-20-prev.png" class="image-357069" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 20: Zadání regulárního výrazu. V&nbsp;tomto případě je výraz
tvořen pouze dvojtečkou, která je pravým oddělovačem. Uživatelem zapsanou
dvojtečku jsem pro jistotu zvýraznil světlemodrým obdélníkem.</i></p>

<a href="https://www.root.cz/obrazek/357070/"><img src="https://i.iinfo.cz/images/280/visidata-21-prev.png" class="image-357070" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 21: Výsledek rozdělení sloupce na základě zadaného regulárního
výrazu.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Rozdělení sloupců na základě skupin definovaných v&nbsp;regulárním výrazu</h2>

<p>Aktivní sloupec je ovšem možné rozdělit na více sloupců i další užitečnou
operací, která se spouští klávesovou zkratkou <strong>;</strong> (středník). Po
zadání této klávesové zkratky se opět očekává regulární výraz, který však má
v&nbsp;tomto okamžiku odlišný význam &ndash; neurčuje ty znaky, které slouží
k&nbsp;oddělení buněk, ale měl by obsahovat skupiny (podvýrazy v&nbsp;kulatých
závorkách), přičemž po akceptaci textu regulárním výrazem se z&nbsp;obsahu
každé skupiny stane buňka v&nbsp;novém sloupci (sloupcích).</p>

<p>Podívejme se na praktický příklad; opět přitom využijeme soubor
<strong>/etc/passwd</strong>. Budeme chtít z&nbsp;(jediného) sloupce se všemi
hodnotami vytvořit dva nové sloupce, přičemž v&nbsp;prvním sloupci bude pouze
login a další sloupec bude obsahovat zbytek řádku, ovšem kromě oddělovače,
kterým je dvojtečka. V&nbsp;příslušném regulárním výrazu tedy budou dvě skupiny
uzavřené ho kulatých závorek. V&nbsp;první skupině je očekáváno jméno složené
ze znaků malé abecedy, druhá skupina může obsahovat libovolné znaky (ovšem
nesmí být prázdná):</p>

<pre>
([a-z]+):(.+)
</pre>

<p>Postup i výsledek je patrný z&nbsp;dalších dvou screenshotů:</p>

<a href="https://www.root.cz/obrazek/357071/"><img src="https://i.iinfo.cz/images/280/visidata-22-prev.png" class="image-357071" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 22: Zadání regulárního výrazu se skupinami (spodní řádek
terminálu).</i></p>

<a href="https://www.root.cz/obrazek/357072/"><img src="https://i.iinfo.cz/images/280/visidata-23-prev.png" class="image-357072" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 23: Výsledkem bude tabulka se dvěma novými sloupci, z&nbsp;nichž
první obsahuje část odpovídající <strong>([a-z]+)</strong> a druhá zbývající
znaky kromě rozdělovací dvojtečky.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Konverze a export dat</h2>

<p>Nástroj <i>VisiData</i> je možné použít i pro konverzi, kterou je možné
provádět přímo na příkazovém řádku. Podporovány jsou přitom následující
výstupní formáty:</p>

<table>
<tr><th>Formát</th><th>Význam</th></tr>
<tr><td>csv</td><td>Comma-separated values, viz předchozí text</td></tr>
<tr><td>tsv</td><td>Tab-separated values, viz předchozí text</td></tr>
<tr><td>json</td><td>jeden objekt se všemi řádky</td></tr>
<tr><td>md</td><td>tabulka kompatibilní s&nbsp;<a href="https://www.root.cz/clanky/zaklady-pouziti-rezimu-org-mode-v-emacsu/">org-mode</a></td></tr>
<tr><td>htm/html</td><td>výstup do HTML</td></tr>
<tr><td>png</td><td>výstup do rastrového formátu PNG (potřebuje již zmíněnou knihovnu <i>pypng</i>)</td></tr>
</table>

<p>Konverzi si otestujeme na souboru <strong>/etc/passwd</strong>, který ovšem
poněkud zkrátíme, aby se článek zbytečně nenatahoval:</p>

<pre>
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
nobody:x:99:99:Nobody:/:/sbin/nologin
apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Příklady provedené konverze</h2>

<p>Konverze do formátu CSV:</p>

<pre>
$ <strong>vd --delimiter=: -o passwd.csv -b passwd</strong>
&nbsp;
root,x,0,0,root,/root,/bin/bash
bin,x,1,1,bin,/bin,/sbin/nologin
daemon,x,2,2,daemon,/sbin,/sbin/nologin
adm,x,3,4,adm,/var/adm,/sbin/nologin
lp,x,4,7,lp,/var/spool/lpd,/sbin/nologin
sync,x,5,0,sync,/sbin,/bin/sync
shutdown,x,6,0,shutdown,/sbin,/sbin/shutdown
halt,x,7,0,halt,/sbin,/sbin/halt
mail,x,8,12,mail,/var/spool/mail,/sbin/nologin
operator,x,11,0,operator,/root,/sbin/nologin
games,x,12,100,games,/usr/games,/sbin/nologin
ftp,x,14,50,FTP User,/var/ftp,/sbin/nologin
nobody,x,99,99,Nobody,/,/sbin/nologin
apache,x,48,48,Apache,/usr/share/httpd,/sbin/nologin
</pre>

<p>Konverze do formátu JSON:</p>

<pre>
$ <strong>vd --delimiter=: -o passwd.json -b passwd</strong>
&nbsp;
[{"/bin/bash": "/sbin/nologin", "/root": "/bin", "0": "1", "root": "bin", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/sbin", "0": "2", "root": "daemon", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/var/adm", "0": "4", "root": "adm", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/var/spool/lpd", "0": "7", "root": "lp", "x": "x"},
 {"/bin/bash": "/bin/sync", "/root": "/sbin", "0": "0", "root": "sync", "x": "x"},
 {"/bin/bash": "/sbin/shutdown", "/root": "/sbin", "0": "0", "root": "shutdown", "x": "x"},
 {"/bin/bash": "/sbin/halt", "/root": "/sbin", "0": "0", "root": "halt", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/var/spool/mail", "0": "12", "root": "mail", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/root", "0": "0", "root": "operator", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/usr/games", "0": "100", "root": "games", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/var/ftp", "0": "50", "root": "FTP User", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/", "0": "99", "root": "Nobody", "x": "x"},
 {"/bin/bash": "/sbin/nologin", "/root": "/usr/share/httpd", "0": "48", "root": "Apache", "x": "x"}]
</pre>

<p>Konverze do formátu kompatibilního s&nbsp;<i>org-mode</i>:</p>

<pre>
$ <strong>vd --delimiter=: -o passwd.md -b passwd</strong>
&nbsp;
|root                |x                   |0                   |0                   |root                |/root               |/bin/bash           |
|--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------|
|bin                 |x                   |1                   |1                   |bin                 |/bin                |/sbin/nologin       |
|daemon              |x                   |2                   |2                   |daemon              |/sbin               |/sbin/nologin       |
|adm                 |x                   |3                   |4                   |adm                 |/var/adm            |/sbin/nologin       |
|lp                  |x                   |4                   |7                   |lp                  |/var/spool/lpd      |/sbin/nologin       |
|sync                |x                   |5                   |0                   |sync                |/sbin               |/bin/sync           |
|shutdown            |x                   |6                   |0                   |shutdown            |/sbin               |/sbin/shutdown      |
|halt                |x                   |7                   |0                   |halt                |/sbin               |/sbin/halt          |
|mail                |x                   |8                   |12                  |mail                |/var/spool/mail     |/sbin/nologin       |
|operator            |x                   |11                  |0                   |operator            |/root               |/sbin/nologin       |
|games               |x                   |12                  |100                 |games               |/usr/games          |/sbin/nologin       |
|ftp                 |x                   |14                  |50                  |FTP User            |/var/ftp            |/sbin/nologin       |
|nobody              |x                   |99                  |99                  |Nobody              |/                   |/sbin/nologin       |
|apache              |x                   |48                  |48                  |Apache              |/usr/share/httpd    |/sbin/nologin       |
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Vykreslování grafů v&nbsp;nástroji VisiData</h2>

<p>V&nbsp;programu <i>VisiData</i> nalezneme i možnost zobrazení několika typů
grafů. Jelikož se však jedná o aplikaci primárně určenou pro spuštění
v&nbsp;terminálu, která nemá (alespoň prozatím) žádnou přímou vazbu na
specializované aplikace pro vykreslování grafů (GNUPlot, <a
href="https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/">Matplotlib</a>,
...), je i vykreslování grafů omezeno na možnosti, které běžné terminály
podporují (možnosti <a
href="https://invisible-island.net/xterm/manpage/xterm.html">Xtermu</a> <a
href="http://physics.oregonstate.edu/~landaur/nacphy/coping-with-unix/node140.html">vykreslovat
vektorovou grafiku</a> s&nbsp;využitím escape sekvencí jsou dnes  již prakticky
zapomenuty, což je možná škoda). Nicméně se vraťme k&nbsp;vykreslování grafů
programem <i>VisiData</i>. Aby bylo možné i na běžném terminálu dosáhnout
relativně dobrého &bdquo;rozlišení&ldquo;, vykreslují se grafy s&nbsp;využitím
Braillova písma, které nalezneme v&nbsp;Unicode, konkrétně na pozicích <a
href="https://www.fileformat.info/info/unicode/char/2800/index.htm">0x2800</a>
až <a
href="https://www.fileformat.info/info/unicode/char/28ff/index.htm">0x28ff</a>.
Braillovo písmo je totiž složeno z&nbsp;kombinací několika teček umožňujících
zvýšit horizontální rozlišení dvakrát a vertikální rozlišení dokonce čtyřikrát
&ndash; viz též následující obrázek:</p>

<a href="https://www.root.cz/obrazek/357073/"><img src="https://i.iinfo.cz/images/280/visidata-24-prev.png" class="image-357073" alt="&#160;" width="370" height="244" /></a>
<p><i>Obrázek 24: Braillovo písmo.</i></p>

<p>A právě fakt, že nástroj <i>VisiData</i> používá pro zobrazení grafů znaky
z&nbsp;Braillova písma, vede k&nbsp;nutnosti použít font, který tyto znaky
skutečně obsahuje. Pokud tomu tak není, graf se zdánlivě nevykreslí, i když se
po výběru myší ukáže, že minimálně barva popředí znaků je změněná. Můžete se
pokusit malým patchem dosáhnout toho, aby se namísto znaků z&nbsp;Braillova
písma použily například hvězdičky, ale rozlišení bude v&nbsp;naprosté většině
případů skutečně nedostačující:</p>

<a href="https://www.root.cz/obrazek/357074/"><img src="https://i.iinfo.cz/images/280/visidata-25-prev.png" class="image-357074" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 25: Úprava programu VisiData takovým způsobem, aby se namísto
znaků Braillova písma použily hvězdičky.</i></p>

<p><div class="rs-tip-major">Poznámka: princip vykreslování rastrové grafiky
s&nbsp;využitím znaků z&nbsp;Braillova písma není v&nbsp;aplikaci
<i>VisiData</i> ani zdaleka ojedinělý. Je totiž inspirován relativně populární
knihovnou pojmenovanou <a
href="https://github.com/asciimoo/drawille">Drawille</a>, která byla záhy po
svém vzniku portována i pro mnoho dalších platforem a programovacích jazyků
&ndash; viz též příslušné odkazy na různé implementace, které naleznete na <a
href="https://github.com/asciimoo/drawille#other-implementations--similar-projects">této
stránce</a>.</div></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Vykreslení grafu z&nbsp;tabulky s&nbsp;jediným sloupcem s&nbsp;hodnotami</h2>

<p>V&nbsp;případě, že používáte emulátor terminálu podporující Unicode (což
jsou prakticky všechny dnes využívané emulátory, a to včetně Xtermu) a máte
k&nbsp;dispozici font s&nbsp;definicemi všech znaků Braillova písma, můžete si
vyzkoušet vykreslení jednoduchého grafu. Postup je popsán v&nbsp;následujících
odstavcích.</p>

<p>Nejprve v&nbsp;aplikaci <i>VisiData</i> otevřeme vhodný soubor s&nbsp;daty.
Pro demonstrační účely jsem použil soubor
<strong>percent_bachelors_degrees_women_usa.csv</strong>, který si můžete
stáhnout z&nbsp;adresy <a
href="https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/mpl-data/sample_data/percent_bachelors_degrees_women_usa.csv">https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/mpl-data/sample_data/percent_bachelors_degrees_women_usa.csv</a>.
Otevření tohoto souboru zajistí příkaz:</p>

<pre>
$ <strong>vd</strong>
</pre>

<p>Po zadání tohoto příkazu by se měla zobrazit tabulka ve formátu:</p>

<a href="https://www.root.cz/obrazek/357075/"><img src="https://i.iinfo.cz/images/280/visidata-26-prev.png" class="image-357075" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 26: Původní tabulka s&nbsp;daty.</i></p>

<p>Povšimněte si, že <i>VisiData</i> nezná typ jednotlivých sloupců, takže u
všech sloupců používá datový typ řetězec/text. To snadno napravíme. První
sloupec obsahuje roky, takže se jedná o celá čísla. Vybereme tento sloupec a
stlačením klávesy <strong>#</strong> určíme jeho typ. Současně ještě stlačením
klávesy <strong>!</strong> určíme, že tento sloupec obsahuje nezávislé hodnoty
vynášené na horizontální osu grafu. Po stisku <strong>!</strong> by se měl
sloupec zvýraznit odlišnou barvou.</p>

<p>Podobně budeme postupovat i u dalších sloupců, které ovšem obsahují reálné
hodnoty, resp.&nbsp;přesněji řečeno procenta studujících daný obor. Stlačením
klávesy <strong>%</strong> na každém z&nbsp;těchto sloupců určíme, že se
skutečně jedná o reálná čísla, což je signalizováno mj.&nbsp;i změnou zobrazení
(zarovnání doprava atd.)</p>

<p>Pokud budeme chtít některé sloupce odstranit, postačuje po jejich výběru
stisknout klávesu <strong>-</strong>.</p>

<a href="https://www.root.cz/obrazek/357076/"><img src="https://i.iinfo.cz/images/280/visidata-27-prev.png" class="image-357076" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 27: Příprava pro vykreslení grafu.</i></p>

<p>Jakmile je výběr proveden, je systém <i>VisiData</i> připraven
k&nbsp;zobrazení grafu. To provedeme stiskem klávesy <strong>.</strong>
(tečka). Graf, který se vykreslí, bude obsahovat hodnoty z&nbsp;toho sloupce,
který byl při stisku tečky právě vybrán.</p>

<a href="https://www.root.cz/obrazek/357077/"><img src="https://i.iinfo.cz/images/280/visidata-28-prev.png" class="image-357077" alt="&#160;" width="354" height="270" /></a>
<p><i>Obrázek 28: Výsledný graf.</i></p>

<p>K&nbsp;předchozímu pohledu se dostaneme stejným příkazem, který již známe
&ndash; klávesou <strong>q</strong>.</p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Zobrazení grafů s&nbsp;více řadami hodnot</h2>

<p>K&nbsp;dispozici je však i složitější typ grafu, v&nbsp;němž je možné
zobrazit více průběhů. Tento graf se vykreslí s&nbsp;využitím příkazu
<strong>g.</strong>. V&nbsp;tomto případě nezáleží na tom, který sloupec byl
právě vybrán, protože se zobrazí sloupce všechny:</p>

<a href="https://www.root.cz/obrazek/357078/"><img src="https://i.iinfo.cz/images/280/visidata-29-prev.png" class="image-357078" alt="&#160;" width="354" height="270" /></a>
<p><i>Obrázek 29: Graf s&nbsp;několika průběhy.</i></p>

<p>V&nbsp;tomto typu grafu lze (ve chvíli, kdy je zobrazen) použít klávesy
<strong>0</strong> až <strong>9</strong> ke skrytí popř.&nbsp;ke zpětnému
zobrazení určitého průběhu, tj.&nbsp;dal ze sloupce 1 až 10.</p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Graf typu X-Y</h2>

<p>Ve skutečnosti však systém <i>VisiData</i> podporuje i složitější typ grafu.
Jedná se o graf se dvěma nezávislými veličinami a třetí veličinou závislou.
V&nbsp;tabulkových procesorech se většinou tento typ grafu označuje jménem
<i>X-Y chart</i> či jen <i>X-Y</i>. Aby bylo možné tento graf použít, budete
potřebovat tabulku s&nbsp;minimálně třemi sloupci, přičemž hodnoty ze dvou
sloupců budou použity pro určení souřadnice bodu v&nbsp;rovině a třetí sloupec
pro určení hodnoty (množina hodnot se rozdělí do osmi kategorií, protože
k&nbsp;dispozici je pouze osm barev při vykreslování). Sloupce, které mají
určovat x-ovou a y-ovou souřadnici, je nutné označit klávesovou zkratkou
<strong>!</strong>; pokud takto označíte jen jeden sloupec, bude pochopitelně
vykreslen graf s&nbsp;jedinou nezávislou proměnnou, tj.&nbsp;graf popsaný <a
href="#k15">v&nbsp;předchozí kapitole</a>.</p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Práce s&nbsp;rastrovými obrázky PNG</h2>

<p>Tento typ grafu můžeme použít pro zobrazení &ndash; i když ve velmi
primitivní podobě &ndash; rastrových obrázků ve formátu PNG. Pokud totiž takový
obrázek do aplikace <i>VisiData</i> načteme, bude reprezentován formou tabulky,
v&nbsp;níž každý řádek odpovídá jedinému pixelu. První sloupec bude obsahovat
x-ovou souřadnici pixelu, druhý y-ovou souřadnici a další sloupce pak hodnoty
jednotlivých barvových složek, průhlednost popř.&nbsp;celý barvový atribut.
Dokonce se automaticky vyplní typy všech sloupců a první dva sloupce se označí
příznakem nezávislé veličiny. Nám již tedy postačuje vybrat libovolný další
sloupec a stiskem klávesy <strong>.</strong> si zobrazit hodnoty příslušné
barvové složky.</p>

<a href="https://www.root.cz/obrazek/357079/"><img src="https://i.iinfo.cz/images/280/visidata-30-prev.png" class="image-357079" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 30: Tabulka získaná po načtení rastrového obrázku ve formátu
PNG.</i></p>

<a href="https://www.root.cz/obrazek/357080/"><img src="https://i.iinfo.cz/images/280/visidata-31-prev.png" class="image-357080" alt="&#160;" width="348" height="270" /></a>
<p><i>Obrázek 31: Výsledný &bdquo;obrázek&ldquo; získaný grafem typu
X-Y.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Malý výlet do historie výpočetní techniky - aplikace VisiCalc</h2>

<p>Na závěr se jen ve stručnosti zmiňme o možném původu názvu <i>VisiData</i>.
Ten totiž připomíná tabulkový procesor <i>VisiCalc</i>. Jednalo se o první
interaktivní aplikaci typu &bdquo;tabulkový procesor&ldquo;
(<i>spreadsheet</i>), která v&nbsp;době svého vzniku bezesporu patřila mezi
takzvané &bdquo;killer app&ldquo;, tj.&nbsp;mezi programy, jenž samy o sobě
některé uživatele přesvědčily k&nbsp;tomu, aby si pořídili osobní mikropočítač
(a to se bavíme o začátku osmdesátých let minulého století, kdy byly
mikropočítače velmi drahé) [<a
href="https://en.wikipedia.org/wiki/Killer_application">1</a>]. <i>VisiCalc</i>
byl portován na mnoho typů mikropočítačů, mj.&nbsp;i na slavné počítače Apple
II, na počítače kompatibilní s&nbsp;IBM PC atd. Oproti jiným nástrojům určeným
pro zpracování dat měl <i>VisiCalc</i> obrovskou výhodu &ndash; byl
interaktivní a používal paradigma, kterému mnoho uživatelů velmi dobře rozumělo
(data byla uložena v&nbsp;dvourozměrných tabulkách, ovšem bez nutnosti přesné
specifikace jejich struktury, navíc bylo umožněno jednotlivé buňky
adresovat).</p>

<p><div class="rs-tip-major">Jen pro představu: i na kdysi malém IT trhu se
prodalo přes 700000 kopií VisiCalcu, nepočítaje v&nbsp;to samozřejmě pirátské
kopie.</div></p>

<a href="http://i.iinfo.cz/images/192/gui10-10.png"><img src="http://i.iinfo.cz/images/192/gui10-10-prev.png" width="370" height="231" alt=" " /></a>
<p><i>Obrázek 32: Tabulkový procesor VisiCalc spuštěný v&nbsp;DOSu
(resp.&nbsp;přesněji řečeno v&nbsp;jeho emulátoru).</i></p>

<p><i>VisiCalc</i> byl natolik úspěšný, že jeho vydavatel, společnost
<i>Personal Software</i> později přejmenovaná na <i>VisiCorp</i>, měla
z&nbsp;prodeje <i>VisiCalcu</i> na svoji dobu takřka neuvěřitelné zisky, které
se snažila použít pro vývoj dalších softwarových produktů. Jednalo se například
o program <i>VisiPlot</i> (kreslení grafů) nebo o relativně jednoduchý textový
procesor <i>VisiWord</i>. V&nbsp;roce 1981 se vývojáři <i>VisiCorpu</i>
zamýšleli nad tím, jak zlepšit interoperabilitu svých jednotlivých produktů,
což by mohlo ve svém důsledku zvýšit jejich oblibu a tím pádem i prodejnost.
Došli k&nbsp;tomu, že by bylo vhodné provést tři poměrně zásadní změny:
vytvořit jednotné datové struktury, aby spolu programy mohly jednoduše
komunikovat (dříve se data musela například exportovat z&nbsp;<i>VisiCalcu</i>
a následně importovat do <i>VisiPlotu</i>), umožnit rychlejší přepínání mezi
jednotlivými programy bez nutnosti jeden program ukončit a nastartovat druhý a
taktéž sjednotit ovládání programů takovým způsobem, aby se uživatelé nemuseli
učit rozdílné klávesové zkratky, jiné názvy položek v&nbsp;menu atd.</p>

<a href="http://i.iinfo.cz/images/192/gui10-11.png"><img src="http://i.iinfo.cz/images/192/gui10-11-prev.png" width="360" height="270" alt=" " /></a>
<p><i>Obrázek 33: Slavný tabulkový kalkulátor Lotus 1-2-3
s&nbsp;charakteristickým řádkovým menu.</i></p>

<p>Vzhledem k&nbsp;tomu, že DOS byl a vlastně dodnes je jednoúlohový a
jednouživatelský systém, rozhodlo se vedení společnosti <i>VisiCorp</i>
vytvořit vlastní plnohodnotný operační systém s&nbsp;GUI nazvaný <i>Visi
On</i>, který měl být dokončen v&nbsp;létě roku 1983, tedy například ještě
předtím, než byl představen <i>Macintosh</i>.</p>

<a href="http://i.iinfo.cz/images/192/gui10-12.png"><img src="http://i.iinfo.cz/images/192/gui10-12-prev.png" width="370" height="231" alt=" " /></a>
<p><i>Obrázek 34: Úvodní (textová &ndash; jak jinak :-) obrazovka programu
Lotus 1-2-3.</i></p>

<p>Později byl tabulkový procesor <i>VisiCalc</i> překonán programy, které
nabízely lepší uživatelské prostředí, popř.&nbsp;více funkcí či větší
výkonnost. Mezi tyto aplikace patřilo především <i>QuattroPro</i> a taktéž
slavný <i>Lotus 1-2-3</i>. Ten byl mj.&nbsp;naprogramován v&nbsp;assembleru,
právě s&nbsp;ohledem na co největší výkonnosti při zpracování rozsáhlých
tabulek (paradoxní možná je, že i první verze VisiCalcu byla naprogramována
v&nbsp;assembleru, konkrétně assembleru <a
href="https://www.root.cz/clanky/jak-se-zrodil-procesor/#k07">osmibitových
mikroprocesorů MOS 6502</a>)</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na Internetu</h2>

<ol>

<li>VisiData<br />
<a href="http://visidata.org/">http://visidata.org/</a>
</li>

<li>VisiData na GitHubu<br />
<a href="https://github.com/saulpw/visidata">https://github.com/saulpw/visidata</a>
</li>

<li>Balíček visidata 1.5.2 na PyPi<br />
<a href="https://pypi.org/project/visidata/">https://pypi.org/project/visidata/</a>
</li>

<li>Balíček pypng 0.0.19 na PyPi<br />
<a href="https://pypi.org/project/pypng/">https://pypi.org/project/pypng/</a>
</li>

<li>An Introduction to VisiData<br />
<a href="https://jsvine.github.io/intro-to-visidata/">https://jsvine.github.io/intro-to-visidata/</a>
</li>

<li>VisiData Lightning Demo at PyCascades 2018<br />
<a href="https://www.youtube.com/watch?v=N1CBDTgGtOU&amp;t=134">https://www.youtube.com/watch?v=N1CBDTgGtOU&amp;t=134</a>
</li>

<li>User Documentation<br />
<a href="https://visidata.org/docs/">https://visidata.org/docs/</a>
</li>

<li>Pixel graphics in terminal with unicode braille characters<br />
<a href="https://github.com/asciimoo/drawille">https://github.com/asciimoo/drawille</a>
</li>

<li>Drawing graphs<br />
<a href="https://visidata.org/docs/graph/">https://visidata.org/docs/graph/</a>
</li>

<li>Videa o aplikaci VisiData<br />
<a href="https://www.youtube.com/playlist?list=PLxu7QdBkC7drrAGfYzatPGVHIpv4Et46W">https://www.youtube.com/playlist?list=PLxu7QdBkC7drrAGfYzatPGVHIpv4Et46W</a>
</li>

<li>Manuálová stránka aplikace VisiData<br />
<a href="https://visidata.org/man/">https://visidata.org/man/</a>
</li>

<li>Comma-separated values<br />
<a href="https://en.wikipedia.org/wiki/Comma-separated_values">https://en.wikipedia.org/wiki/Comma-separated_values</a>
</li>

<li>Tab-separated values<br />
<a href="https://en.wikipedia.org/wiki/Tab-separated_values">https://en.wikipedia.org/wiki/Tab-separated_values</a>
</li>

<li>Tab Separated Values (TSV): a format for tabular data exchange<br />
<a href="http://jkorpela.fi/TSV.html">http://jkorpela.fi/TSV.html</a>
</li>

<li>Delimiter-separated values<br />
<a href="https://en.wikipedia.org/wiki/Delimiter-separated_values">https://en.wikipedia.org/wiki/Delimiter-separated_values</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib<br />
<a href="https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/">https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib (2.část)<br />
<a href="https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/">https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib (dokončení)<br />
<a href="https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-dokonceni/">https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-dokonceni/</a>
</li>

<li>Openpyxl na PyPi<br />
<a href="https://pypi.org/project/openpyxl/">https://pypi.org/project/openpyxl/</a>
</li>

<li>Psycopg2 na PyPi<br />
<a href="https://pypi.org/project/psycopg2/">https://pypi.org/project/psycopg2/</a>
</li>

<li>Xterm<br />
<a href="https://invisible-island.net/xterm/manpage/xterm.html">https://invisible-island.net/xterm/manpage/xterm.html</a>
</li>

<li>xterm: Tektronix 4014 Emulator<br />
<a href="http://physics.oregonstate.edu/~landaur/nacphy/coping-with-unix/node140.html">http://physics.oregonstate.edu/~landaur/nacphy/coping-with-unix/node140.html</a>
</li>

<li>Visi On (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Visi_On">http://en.wikipedia.org/wiki/Visi_On</a>
</li>

<li>VisiCorp's VisiOn Graphical User Interface System for IBM and compatible PCs<br />
<a href="http://www.digibarn.com/collections/software/VisiOn/index.html">http://www.digibarn.com/collections/software/VisiOn/index.html</a>
</li>

<li>Obrazem: Operační systémy od roku 1981<br />
<a href="http://digitalne.centrum.cz/obrazem-operacni-systemy-od-roku-1981/diskuze/undefined/undefined/?pid=6150">http://digitalne.centrum.cz/obrazem-operacni-systemy-od-roku-1981/diskuze/undefined/undefined/?pid=6150</a>
</li>

<li>VisiCorp Visi On<br />
<a href="http://toastytech.com/guis/vision.html">http://toastytech.com/guis/vision.html</a>
</li>

<li>A Guided Tour of Visi On<br />
<a href="http://www.guidebookgallery.org/articles/aguidedtourofvision">http://www.guidebookgallery.org/articles/aguidedtourofvision</a>
</li>

<li>VisiCalc Executable for the IBM PC<br />
<a href="http://www.bricklin.com/history/vcexecutable.htm">http://www.bricklin.com/history/vcexecutable.htm</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

