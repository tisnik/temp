<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Helix - nový modální textový editor inspirovaný Vimem a Kakoune</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Helix - nový modální textový editor inspirovaný Vimem a Kakoune</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Dnes se setkáme s dalším programátorským textovým editorem nazvaným Helix, jehož způsob ovládání je do značné míry inspirován textovým editorem Vim popř. editorem Kakoune, s nímž jsme se již na stránkách Roota setkali. I Helix je modálním editorem běžícím v terminálu s podporou LSP.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Helix &ndash; nový modální textový editor inspirovaný Vimem a Kakoune</a></p>
<p><a href="#k02">2. Instalace editoru Helix</a></p>
<p><a href="#k03">3. Struktura adresáře s&nbsp;Helixem</a></p>
<p><a href="#k04">4. Spuštění textového editoru, první krůčky začínajícího uživatele</a></p>
<p><a href="#k05">5. Režimy textového editoru Helix</a></p>
<p><a href="#k06">6. Kontextová menu</a></p>
<p><a href="#k07">7. Příkazy dostupné v&nbsp;normálním režimu</a></p>
<p><a href="#k08">8. Režim výběru textu (<i>selection</i>)</a></p>
<p><a href="#k09">9. Manipulace s&nbsp;výběrem</a></p>
<p><a href="#k10">10. Vícenásobné změny ve vybraném textu</a></p>
<p><a href="#k11">11. Přechod z&nbsp;normálního režimu do vkládacího režimu (<i>insert</i>)</a></p>
<p><a href="#k12">12. Manipulace s&nbsp;okny</a></p>
<p><a href="#k13">13. Vícenásobný kurzor</a></p>
<p><a href="#k14">14. Pomůcky při manipulaci se zdrojovými kódy</a></p>
<p><a href="#k15">15. Podpora Language Server Protokolu (LSP)</a></p>
<p><a href="#k16">16. Základní informace o projektu LSP</a></p>
<p><a href="#k17">17. LSP a textový editor Helix</a></p>
<p><a href="#k18">18. Barvová témata</a></p>
<p><a href="#k19">19. Závěrečné subjektivní zhodnocení</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Helix &ndash; nový modální textový editor inspirovaný Vimem a Kakoune</h2>

<p>Dnes se setkáme s&nbsp;dalším programátorským textovým editorem, jehož
způsob ovládání je do značné míry inspirován textovým editorem Vim
popř.&nbsp;(do snad ještě větší míry) editorem <a
href="https://kakoune.org/">Kakoune</a>, s&nbsp;nímž jsme se již na stránkách
<a href="https://www.root.cz/">Roota</a> <a
href="https://www.root.cz/clanky/kakoune-moderni-textovy-editor-s-modalnim-ovladanim/">
setkali</a>. Helix patří mezi <i>modální</i> editory a navíc dokáže pracovat
s&nbsp;větším množstvím dokumentů zobrazených v&nbsp;jednotlivých oknech
(v&nbsp;rámci plochy terminálu), podporuje použití vícenásobných kurzorů (a tím
pádem i editaci textu na více místech), samozřejmě podporuje zarovnání
zdrojových kódů i zvýraznění syntaxe a v&nbsp;neposlední míře je podporován i
<i>Language Server Protokol</i>, jenž umožňuje realizovat například automatické
doplňování kódu, refaktoring atd. Z&nbsp;technologického hlediska je zajímavé,
že například zvýraznění syntaxe není řešeno přes Vim skripty, ale nativním
kódem (konfigurace je napsána ve Scheme), což je .</p>

<a href="https://www.root.cz/obrazek/572129/"><img src="https://i.iinfo.cz/images/323/helix-1-prev.png" class="image-572129" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="211" /></a>
<p><i>Obrázek 1: Textový editor Helix po spuštění. V&nbsp;levém dolním rohu je
zobrazen právě používaný režim, zde konkrétně režim
<strong>Normal</strong>.</i></p>

<p><div class="rs-tip-major">Poznámka: modální ovládání použité
v&nbsp;současnosti vyvíjených editorech Kakoune a Helix (z&nbsp;nichž druhý se
označuje jako postmoderní editor, ať již to znamená cokoli) ve skutečnosti není
žádná novinka, protože bylo použito již v&nbsp;původním editoru Vi i
z&nbsp;něho odvozeném slavném editoru Vim, s&nbsp;nímž jsme se již na stránkách
Rootu <a href="https://www.root.cz/n/vim/">mnohokrát setkali</a>, mj.&nbsp;i <a
href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">v&nbsp;samostatném
seriálu</a>. I díky modálnímu ovládání jsou úpravy textu v&nbsp;Helix velmi
rychlé a efektivní (a to například i na klávesnicích se špatně umístěnými
kurzorovými šipkami, což je případ mnoha typů notebooků), ovšem efektivní a
rychlé editace se pochopitelně dosáhne až poté, co se uživatel naučí alespoň
základní sadu příkazů nabízených tímto editorem.</div></p>

<a href="https://www.root.cz/obrazek/572130/"><img src="https://i.iinfo.cz/images/323/helix-2-prev.png" class="image-572130" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="211" /></a>
<p><i>Obrázek 2: Způsob zobrazení kontextových menu v&nbsp;editoru Helix.</i></p>

<p>Již v&nbsp;úvodní části dnešního článku je však nutné zdůraznit, že ani
<i>Helix</i> ani <i>Kakoune</i> nejsou (i přes použité modální ovládání a
mnohdy podobné klávesové zkratky) &bdquo;pouhým&ldquo; dalším klony textového
editoru Vi či Vim (zkratka &bdquo;Vim&ldquo; původně znamenala &bdquo;Vi
iMitation&ldquo;, dnes již pochopitelně &bdquo;Vi iMproved&ldquo;). Ve
skutečnosti se jedná o zcela nové aplikace (jak na úrovni zdrojového kódu, tak
i vnitřních datových struktur a rozdělení ovládání), které přebírají dobré
myšlenky modálního editoru a současně používají i <i>některé</i> klávesové
zkratky Vimu popř.&nbsp;Vimovské příkazy. Ovšem zdaleka ne všechny zkratky a
příkazy fungují v&nbsp;Helixu stejně jako ve Vimu, což znamená, že přechod není
ani zdaleka tak přímočarý jako (poněkud paradoxně) například přechod na <a
href="https://www.root.cz/clanky/spacemacs-to-nejlepsi-z-editoru-emacs-a-vim/">Spacemacs</a>.</p>

<p>Příkladem může být typický příkaz <strong>dw</strong>, který ve Vi i Vimu
znamená &bdquo;smaž slovo&ldquo;, resp.&nbsp;přesněji &bdquo;smaž text od
pozice kurzoru do začátku následujícího slova&ldquo;. V&nbsp;editoru
<i>Helix</i> tento příkaz nebude fungovat, protože v&nbsp;tomto editoru nejsou
podporovány operátory (<i>delete</i>) spojené s&nbsp;přesunem kurzoru
(<i>word</i>). Ovšem namísto toho bude fungovat příkaz <strong>wd</strong>
s&nbsp;odlišným významem &bdquo;vyber slovo a to následně smaž&ldquo;. Základní
rozdíl tedy spočívá v&nbsp;odlišné filozofii práce s&nbsp;textem: text,
s&nbsp;nímž se má nějaká operace provést, se nejdříve vybere (a je vizuálně
zvýrazněn) a teprve poté se s&nbsp;ním provede zvolená operace (což umí i Vim,
i když v&nbsp;poněkud omezenější míře).</p>

<a href="https://www.root.cz/obrazek/572131/"><img src="https://i.iinfo.cz/images/323/helix-3-prev.png" class="image-572131" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="211" /></a>
<p><i>Obrázek 3: U (téměř) každého příkazu z&nbsp;kontextového menu se zobrazí
i krátká nápověda.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace editoru Helix</h2>

<p>Helix je naprogramován v&nbsp;Rustu, což mj.&nbsp;znamená, že je přeložen do
jediného spustitelného souboru, který lze na dané kombinaci
architektura+operační systém většinou bez problémů spustit (nezávisí na
uživatelských knihovnách). Číslování verzí je poněkud neobvyklé (postmoderní?),
takže poslední verze již nese číslo 22. Tarball této verze jak se spustitelným
Helixem, tak i s&nbsp;podpůrnými soubory (gramatika, barvová schémata atd.) lze
získat následovně:</p>

<pre>
$ <strong>wget https://github.com/helix-editor/helix/releases/download/22.03/helix-22.03-x86_64-linux.tar.xz</strong>
&nbsp;
--2022-03-31 14:40:19--  https://github.com/helix-editor/helix/releases/download/22.03/helix-22.03-x86_64-linux.tar.xz
Resolving github.com (github.com)... 140.82.121.4
Connecting to github.com (github.com)|140.82.121.4|:443... connected.
HTTP request sent, awaiting response... 302 Found
Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/268424739/d49facff-2a7c-410d-9b22-02ab13c649b7?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220331%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20220331T124019Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=303e43b54e56c0145d5e88aae148f791164f9303126374ec69b5dca98b77c72e&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=268424739&amp;response-content-disposition=attachment%3B%20filename%3Dhelix-22.03-x86_64-linux.tar.xz&amp;response-content-type=application%2Foctet-stream [following]
--2022-03-31 14:40:19--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/268424739/d49facff-2a7c-410d-9b22-02ab13c649b7?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220331%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20220331T124019Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=303e43b54e56c0145d5e88aae148f791164f9303126374ec69b5dca98b77c72e&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=268424739&amp;response-content-disposition=attachment%3B%20filename%3Dhelix-22.03-x86_64-linux.tar.xz&amp;response-content-type=application%2Foctet-stream
Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.110.133, ...
Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.111.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 7540728 (7.2M) [application/octet-stream]
Saving to: ‘helix-22.03-x86_64-linux.tar.xz’
&nbsp;
helix-22.03-x86_64- 100%[===================&gt;]   7.19M  --.-KB/s    in 0.1s    
&nbsp;
2022-03-31 14:40:20 (55.3 MB/s) - ‘helix-22.03-x86_64-linux.tar.xz’ saved [7540728/7540728]
&nbsp;
tar xvfx helix-22.03-x86_64-linux.tar.xz
</pre>

<p>Po rozbalení získáme mj.&nbsp;i soubor <strong>hx</strong>,který by měl být
spustitelný:</p>

<pre>
$ <strong>./hx -V</strong>
&nbsp;
helix 22.03 (d4e45fd4)
</pre>

<p>Samozřejmě je však možné provést překlad přímo ze zdrojových kódů projektu
Helix. Vyžadována je instalace <a
href="https://www.root.cz/serialy/programovaci-jazyk-rust/">Rustu</a> i Carga
(balíčkovacího systému Rustovského ekosystému):</p>

<pre>
$ <strong>git clone https://github.com/helix-editor/helix</strong>
$ <strong>cd helix</strong>
$ <strong>cargo install --path helix-term</strong>
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Struktura adresáře s&nbsp;Helixem</h2>

<p>Pro zajímavost se nyní podívejme na strukturu adresáře s&nbsp;Helixem po
rozbalení tarballu zmíněného v&nbsp;<a href="#k02">předchozí kapitole</a>:</p>

<pre>
.
├── hx
├── LICENSE
├── README.md
├── runtime
│   ├── grammars
│   │   ├── bash.so
│   │   ├── cmake.so
│   │   ├── typescript.so
            ...
            ...
            ...
│   │   ├── vue.so
│   │   ├── wgsl.so
│   │   ├── yaml.so
│   │   └── zig.so
│   ├── queries
│   │   ├── bash
│   │   │   ├── highlights.scm
│   │   │   └── injections.scm
│   │   ├── c
│   │   │   ├── highlights.scm
│   │   │   ├── indents.toml
│   │   │   ├── injections.scm
│   │   │   └── textobjects.scm
│   │   ├── cmake
│   │   │   ├── highlights.scm
│   │   │   ├── indents.toml
│   │   │   ├── injections.scm
│   │   │   └── textobjects.scm
            ...
            ...
            ...
│   │   ├── wgsl
│   │   │   ├── highlights.scm
│   │   │   └── injections.scm
│   │   ├── yaml
│   │   │   ├── highlights.scm
│   │   │   ├── indents.toml
│   │   │   └── injections.scm
│   │   └── zig
│   │       ├── highlights.scm
│   │       ├── indents.toml
│   │       └── injections.scm
│   ├── themes
│   │   ├── base16_default_dark.toml
│   │   ├── base16_default_light.toml
│   │   ├── base16_terminal.toml
            ...
            ...
            ...
│   │   ├── solarized_dark.toml
│   │   ├── solarized_light.toml
│   │   └── spacebones_light.toml
│   └── tutor.txt
└── tree
&nbsp;
67 directories, 281 files
</pre>

<p>Kromě spustitelného souboru <strong>hx</strong> a třech textových dokumentů
<strong>LICENSE</strong>, <strong>README.md</strong> a
<strong>tutor.txt</strong> obsahuje adresář s&nbsp;editorem tyto
podadresáře:</p>

<ol>
<li><strong>runtime/grammars</strong> obsahuje nativní knihovny(!) s&nbsp;gramatikami podporovaných značkovacích a programovacích jazyků</li>
<li><strong>runtime/queries</strong> obsahuje konfiguraci pro jednotlivé jazyky zapsanou ve Scheme</li>
<li><strong>runtime/themes</strong> obsahuje definici barvových schémat</li>
</ol>

<p>Největší diskový prostor zabírají nativní knihovny s&nbsp;gramatikami
(naproti tomu ve Vimu adresář s&nbsp;gramatikami zabírá 5 MB pro přibližně 600
jazyků):</p>

<pre>
$ <strong>du -h -d 1 .</strong>
&nbsp;
328K    ./themes
64M     ./grammars
2,5M    ./queries
67M     .
</pre>

<a href="https://www.root.cz/obrazek/572132/"><img src="https://i.iinfo.cz/images/323/helix-4-prev.png" class="image-572132" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="211" /></a>
<p><i>Obrázek 4: Tutoriál dodávaný společně s&nbsp;Helixem v&nbsp;souboru
<strong>tutor.txt</strong>.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Spuštění textového editoru, první krůčky začínajícího uživatele</h2>

<p>Textový editor <i>Helix</i> se v&nbsp;tom nejjednodušším případě spouští
příkazem <strong>hx</strong>, tedy následujícím způsobem:</p>

<pre>
$ <strong>hx</strong>
</pre>

<p>Po spuštění se editor nachází v&nbsp;takzvaném normálním režimu (<i>normal
mode</i>), který má naprosto stejný význam jako v&nbsp;textovém editoru Vim.
V&nbsp;normálním režimu se typicky pracuje s&nbsp;textovým kurzorem (jeho
přesun v&nbsp;rámci editovaného textu), volají se základní editační operace a
taktéž se přechází do dalších režimů s&nbsp;využitím k&nbsp;tomu určených
klávesových zkratek (výběrový režim, vkládací režim atd.). Aktuálně vybraný
režim je zobrazen v&nbsp;levém dolním rohu &ndash; jedná se o text
&bdquo;NOR&ldquo; (za ním je název editovaného bufferu).</p>

<p>Pochopitelně je možné textovému editoru předat i jméno souboru, který se
následně načte a zobrazí v&nbsp;okně editoru:</p>

<pre>
$ <strong>hx cesta_k_souboru</strong>
</pre>

<p>V&nbsp;případě hledání chyb, ke kterým může během činnosti Helixu dojít
(například se neinicializuje LSP server atd.), lze editor spustit
s&nbsp;přepínačem <strong>-v</strong>, jenž povoluje výpis podrobnějších
informací do logovacího souboru:</p>

<pre>
$ <strong>hx -v</strong>
</pre>

<p>Vytvořený soubor s&nbsp;logovacími zprávami Helixu je umístěn
v&nbsp;adresáři &bdquo;~/.cache/helix&ldquo; a jeho obsah může vypadat
následovně:</p>

<pre>
$ <strong>cat ~/.cache/helix/helix.log</strong>
&nbsp;
2022-03-31T17:27:26.544 helix_view::theme [WARN] Theme: malformed hexcode: fg
2022-03-31T17:27:26.544 helix_view::theme [WARN] Theme: malformed hexcode: form
2022-03-31T17:27:54.877 helix_view::editor [ERROR] Failed to initialize the LSP for `source.python` { cannot find binary path }
2022-03-31T17:29:01.754 helix_view::editor [ERROR] Failed to initialize the LSP for `source.python` { cannot find binary path }
2022-03-31T17:29:44.520 helix_view::editor [ERROR] Failed to initialize the LSP for `source.go` { cannot find binary path }
2022-04-08T15:17:39.791 helix_view::editor [ERROR] Failed to initialize the LSP for `source.toml` { LSP not defined }
</pre>

<p><div class="rs-tip-major">Poznámka: konfigurace Helixu se ukládá do adresáře
&bdquo;~/.config/helix&ldquo;.</div></p>

<a href="https://www.root.cz/obrazek/572133/"><img src="https://i.iinfo.cz/images/323/helix-5-prev.png" class="image-572133" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="211" /></a>
<p><i>Obrázek 5: Změna barvového schématu editoru Helix.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Režimy textového editoru Helix</h2>

<p>Jak jsme si již řekli <a href="#k01">v&nbsp;úvodní kapitole</a>, patří Helix
mezi takzvané <i>modální textové editory</i>, tj.&nbsp;jedná se o aplikaci,
která se v&nbsp;daný okamžik nachází vždy v&nbsp;jednom uživatelem zvoleném
režimu (módu). Výchozím režimem je takzvaný normální režim (<i>normal mode</i>,
zkráceně indikováno jako <i>NOR</i>), ve kterém editor očekává příkazy pro
pohyb kurzoru v&nbsp;textu, pro výběr určité části textu (<i>selection</i>, což
je zvláštní vedlejší režim), další editační operace a popř.&nbsp;i příkazy,
které provedou přepnutí režimu. V&nbsp;následující tabulce jsou jednotlivé
režimy vypsány. Povšimněte si, že se seznam režimů v&nbsp;některých ohledech
odlišuje od editoru Vi/Vim, ovšem dva základní režimy (<i>normal</i> a
<i>insert</i>) jsou zachovány a navíc <i>command mode</i> do značné míry
odpovídá Vimovskému <i>command mode</i> spojeného s&nbsp;podrežimy pro
vyhledávání a pro manipulaci s&nbsp;okny:</p>

<table>
<tr><th>Název režimu</th><th>Stručný popis</th></tr>
<tr><td>normal</td><td>výchozí režim, v&nbsp;němž lze přesouvat kurzor v&nbsp;rámci bufferu, provádět základní editaci a přecházet do dalších režimů</td></tr>
<tr><td>insert</td><td>režim zápisu (většinou vkládání) textu do aktivního bufferu</td></tr>
<tr><td>command</td><td>odpovídá kombinaci Vimovského příkazového a vyhledávacího režimu (příkazy začínají dvojtečkou, vyhledávání typicky lomítkem)</td></tr>
<tr><td>select (extend)</td><td>režim výběru takzvaných <i>textových objektů</i></td></tr>
<tr><td>goto</td><td>přesuny v&nbsp;rámci bufferu či mezi buffery</td></tr>
<tr><td>view</td><td>ovládání textového a výběrového kurzoru, práce s&nbsp;oknem, skrolování atd.</td></tr>
<tr><td>match</td><td>vyhledávání a doskok na odpovídající závorky atd.</td></tr>
<tr><td>window</td><td>manipulace s&nbsp;okny zobrazenými v&nbsp;ploše editoru</td></tr>
<tr><td>space</td><td>operace dostupné přes LSP apod.</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: v&nbsp;dokumentaci se rozlišuje mezi
hlavními a vedlejšími režimy, to však v&nbsp;daný okamžik není tak
důležité.</div></p>

<a href="https://www.root.cz/obrazek/572134/"><img src="https://i.iinfo.cz/images/323/helix-6-prev.png" class="image-572134" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 6: Normální režim je označen zkratkou <strong>NOR</strong>.</i></p>

<p>Podívejme se ještě na klávesové zkratky určené pro přechod do vedlejších
režimů (tedy vlastně do všech režimů s&nbsp;výjimkou režimu normálního a
vkládacího):</p>

<table>
<tr><th>Název režimu</th><th>Klávesová zkratka</th></tr>
<tr><td>command</td><td>:</td></tr>
<tr><td>select (extend)</td><td>v</td></tr>
<tr><td>goto</td><td>g</td></tr>
<tr><td>view</td><td>z</td></tr>
<tr><td>match</td><td>m</td></tr>
<tr><td>sticky view</td><td>Z</td></tr>
<tr><td>window</td><td>Ctrl+W</td></tr>
<tr><td>space</td><td>Space</td></tr>
</table>

<a href="https://www.root.cz/obrazek/572135/"><img src="https://i.iinfo.cz/images/323/helix-7-prev.png" class="image-572135" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 7: Výběrový režim je označen zkratkou <strong>SEL</strong> (a
část textu je již vybrána).</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Kontextová menu</h2>

<p>Při přepnutí do některého z&nbsp;vedlejších režimů se (ve výchozím nastavení
editoru) zobrazí kontextové menu s&nbsp;nabídkou dalších příkazů, které je
možné ve zvoleném vedlejším režimu provést. Podívejme se pro zajímavost, jak
taková vedlejší menu vypadají pro jednotlivé režimy:</p>

<a href="https://www.root.cz/obrazek/572136/"><img src="https://i.iinfo.cz/images/323/helix-8-prev.png" class="image-572136" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 8: Kontextové menu vedlejšího režimu <strong>goto</strong>.</i></p>

<a href="https://www.root.cz/obrazek/572137/"><img src="https://i.iinfo.cz/images/323/helix-9-prev.png" class="image-572137" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 9: Kontextové menu vedlejšího režimu <strong>view</strong>.</i></p>

<a href="https://www.root.cz/obrazek/572138/"><img src="https://i.iinfo.cz/images/323/helix-10-prev.png" class="image-572138" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 10: Kontextové menu vedlejšího režimu <strong>match</strong>.</i></p>

<a href="https://www.root.cz/obrazek/572139/"><img src="https://i.iinfo.cz/images/323/helix-11-prev.png" class="image-572139" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 11: Kontextové menu vedlejšího režimu <strong>view</strong>.</i></p>

<a href="https://www.root.cz/obrazek/572140/"><img src="https://i.iinfo.cz/images/323/helix-12-prev.png" class="image-572140" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 12: Kontextové menu vedlejšího režimu <strong>window</strong>.</i></p>

<a href="https://www.root.cz/obrazek/572141/"><img src="https://i.iinfo.cz/images/323/helix-13-prev.png" class="image-572141" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="264" /></a>
<p><i>Obrázek 13: Kontextové menu vedlejšího režimu <strong>space</strong>.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Příkazy dostupné v&nbsp;normálním režimu</h2>

<p>V&nbsp;normálním režimu (který v&nbsp;Helixu je, jak již víme, výchozí) je
možné specifikovat příkazy pro pohyby v&nbsp;textu, tj.&nbsp;pro přesuny
textového kurzoru po editovaném dokumentu (resp.&nbsp;přesněji řečeno
v&nbsp;rámci bufferu, protože jeden dokument může být otevřen ve větším
množství bufferů). Některé základní příkazy jsou zadávány jediným znakem
popř.&nbsp;kombinací klávesy <strong>Ctrl</strong> s&nbsp;jinou klávesou.
V&nbsp;první tabulce jsou vypsány základní příkazy, které jsou většinou
kompatibilní s&nbsp;Vimem:</p>

<table>
<tr><th>#</th><th>Příkaz/zkratka</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>h</td><td>přesun textového kurzoru o jeden znak doleva (jako ve Vimu)</td></tr>
<tr><td>2</td><td>j</td><td>přesun textového kurzoru o jeden řádek dolů (jako ve Vimu)</td></tr>
<tr><td>3</td><td>k</td><td>přesun textového kurzoru o jeden řádek nahoru (jako ve Vimu)</td></tr>
<tr><td>4</td><td>l</td><td>přesun textového kurzoru o jeden znak doprava (jako ve Vimu)</td></tr>
<tr><td>5</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>6</td><td>Page Up</td><td>přesun o celou viditelnou stránku nahoru</td></tr>
<tr><td>7</td><td>Ctrl+B</td><td>dtto, přesun o celou viditelnou stránku nahoru</td></tr>
<tr><td>8</td><td>Page Down</td><td>přesun o celou viditelnou stránku dolů</td></tr>
<tr><td>9</td><td>Ctrl+F</td><td>dtto, přesun o celou viditelnou stránku dolů</td></tr>
<tr><td>10</td><td>Ctrl+U</td><td>přesun o polovinu viditelné stránky nahoru</td></tr>
<tr><td>11</td><td>Ctrl+D</td><td>přesun o polovinu viditelné stránky dolů</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: před jednotlivé příkazy určené pro pohyb
kurzoru můžete přidat počet opakování. Tj.&nbsp;pokud se například potřebujete
v&nbsp;rámci aktuálně editovaného bufferu posunout o deset řádků níže,
postačuje použít příkaz <strong>10j</strong> (zde není oproti Vimu žádný
podstatný rozdíl &ndash; pouze počet opakování není dostupný pro zkratky Ctrl+D
a Ctrl+U, které mají ve Vimu odlišný význam).</div></p>

<p>To však samozřejmě není zdaleka vše, protože po zadání prefixu
<strong>g</strong> (mnemotechnická zkratka od <i>goto</i>) je možné zadat
specifikovat příkazy určené pro pohyb kurzoru (v&nbsp;této chvíli se nacházíme
v&nbsp;režimu <i>goto</i>). Tyto příkazy jsou sice odlišné od Vimu, ovšem
(zejména pro začínající uživatele) mohou být snadněji zapamatovatelné:</p>

<table>
<tr><th>#</th><th>Příkaz/zkratka</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>gg</td><td>přechod na začátek bufferu (první textový řádek, jako ve Vimu, popř.&nbsp;n-tý řádek)</td></tr>
<tr><td>3</td><td>ge</td><td>přechod na poslední řádek bufferu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>4</td><td>gh</td><td>přechod na začátek řádku, na němž se nachází kurzor (tedy &bdquo;ultimátní&ldquo; příkaz <strong>h</strong>)</td></tr>
<tr><td>5</td><td>gl</td><td>přechod na konec řádku, na němž se nachází kurzor (tedy &bdquo;ultimátní&ldquo; příkaz <strong>l</strong>)</td></tr>
<tr><td>6</td><td>gs</td><td>přechod na první znak na řádku, který není mezerou nebo TABem<strong>l</strong>)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>gt</td><td>přechod na první viditelný řádek (<i>top</i>) nebo n-tý řádek od začátku obrazovky</td></tr>
<tr><td>8</td><td>gb</td><td>přechod na poslední viditelný řádek (<i>bottom</i>) nebo n-tý řádek od konce obrazovky</td></tr>
<tr><td>9</td><td>gc</td><td>přechod na prostřední viditelný řádek (<i>center</i>)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>g.</td><td>přechod na text, který byl naposledy změněn či editován</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>gd</td><td>skok na definici symbolu (přes LSP)</td></tr>
<tr><td>12</td><td>gy</td><td>skok na definici typu (přes LSP)</td></tr>
<tr><td>13</td><td>gr</td><td>skok na referenci (přes LSP)</td></tr>
<tr><td>14</td><td>gi</td><td>skok na implementaci funkce/metody (přes LSP)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>gn</td><td>přechod na další buffer</td></tr>
<tr><td>16</td><td>gp</td><td>přechod na předchozí buffer</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: u těchto příkazů se většinou nezadává
počet opakování.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Režim výběru textu (<i>selection</i>)</h2>

<p>Textový editor Vim nabízí uživatelům takzvaný <i>vizuální režim</i>
spouštěný klávesou <strong>v</strong>, <strong>V</strong> či
<strong>Ctrl+V</strong>.  V&nbsp;tomto režimu je možné nejprve vybrat určitý
text a posléze s&nbsp;tímto textem provádět další operace (vymazání,
změna/náhrada atd.). V&nbsp;editoru Helix je výběr textu jednou
z&nbsp;nejdůležitějších operací, protože zde neexistuje (jak již víme)
kombinace operátor+příkaz_pro_pohyb_kurzoru. Z&nbsp;tohoto důvodu zde také
kromě vizuálního režimu, který vyžaduje stisk jedné klávesy navíc, nalezneme
celou skupinu příkazů sloužících pro výběr části textu (vizuální režim je však
stále podporován, minimálně jeho základní verze zapnutá příkazem
<strong>v</strong>):</p>

<table>
<tr><th>#</th><th>Příkaz/zkratka</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>b</td><td>výběr od pozice kurzoru na začátek předchozího slova</td></tr>
<tr><td>2</td><td>e</td><td>výběr od pozice kurzoru do konce slova</td></tr>
<tr><td>3</td><td>w</td><td>výběr od pozice kurzoru na začátek dalšího slova</td></tr>
<tr><td>4</td><td>x</td><td>výběr celého řádku</td></tr>
<tr><td>5</td><td>f</td><td>výběr včetně specifikovaného znaku (<i>find</i>)</td></tr>
<tr><td>6</td><td>F</td><td>dtto, ovšem v&nbsp;opačném směru</td></tr>
<tr><td>7</td><td>t</td><td>výběr až do specifikovaného znaku (kromě tohoto znaku &ndash; <i>till</i>)</td></tr>
<tr><td>8</td><td>T</td><td>dtto, ovšem v&nbsp;opačném směru</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: další výběrové operace již (na rozdíl od
editoru Kakoune, kterým se Helix inspiroval) provádí po stisku
<strong>v</strong> &ndash; zde mají všechny příkazy pro pohyb kurzoru odlišný
význam, protože rozšiřují výběr). Kupodivu prozatím nejsou podporovány <a
href="https://www.root.cz/obrazek/355959/">textové objekty</a>.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Manipulace s&nbsp;výběrem</h2>

<p>Ve chvíli, kdy je nějaký text vybraný, je možné s&nbsp;ním různým způsobem
manipulovat. Nabídka příkazů je v&nbsp;režimu <i>selection</i> poměrně
široká:</p>

<table>
<tr><th> #</th><th>Příkaz/zkratka</th><th>Stručný popis</th></tr>
<tr><td> 1</td><td>d</td><td>vymazání vybraného textu, přesun vymazaného textu do schránky editoru</td></tr>
<tr><td> 2</td><td>Alt+d</td><td>vymazání, ovšem bez přesunu do schránky editoru</td></tr>
<tr><td> 3</td><td>c</td><td>přepis vybraného textu, přesun změněného textu do schránky editoru</td></tr>
<tr><td> 4</td><td>Alt+c</td><td>přepis vybraného textu, ovšem bez přesunu původního textu do schránky editoru</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>~</td><td>změna velikosti písmen (<i>upper case</i> a zpět)</td></tr>
<tr><td> 6</td><td>`</td><td>změna velikosti písmen (<i>lower case</i>)</td></tr>
<tr><td> 7</td><td>Alt+`</td><td>změna velikosti písmen (<i>upper case</i>)</td></tr>
<tr><td> 8</td><td>&gt;</td><td>posun vybraného textu doprava (podle zvyklostí jazyka)</td></tr>
<tr><td> 9</td><td>&lt;</td><td>posun vybraného textu doleva (podle zvyklostí jazyka)</td></tr>
<tr><td>10</td><td>=</td><td>naformátování vybraného textu (opět podle zvyklostí jazyka a přes LSP)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>|</td><td>filtrace textu přes zvolený externí nástroj (například <strong>grep</strong>)</td></tr>
<tr><td>12</td><td>Alt+|</td><td>dtto, ale text se nepřepíše</td></tr>
<tr><td>13</td><td>!</td><td>spuštění příkazu v&nbsp;shellu, vložení výsledku před vybraný text</td></tr>
<tr><td>14</td><td>Alt+!</td><td>spuštění příkazu v&nbsp;shellu, vložení výsledku za vybraný text</td></tr>
</table>



<p><a name="k10"></a></p>
<h2 id="k10">10. Vícenásobné změny ve vybraném textu</h2>

<p>V&nbsp;případě, že v&nbsp;režimu výběru použijeme příkaz <strong>s</strong>,
zeptá se editor na text či regulární výraz, který má vyhledat a označit. Pokud
najde více výskytů textu, budou označeny všechny tyto výskyty. Další operace,
typicky změna (<strong>c</strong>hange) textu, bude provedena současně se všemi
výskyty nalezeného textu, což bude i vizuálně patrné v&nbsp;okně textového
editoru:</p>

<a href="https://www.root.cz/obrazek/572142/"><img src="https://i.iinfo.cz/images/323/helix-14-prev.png" class="image-572142" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="302" height="270" /></a>
<p><i>Obrázek 14: Vícenásobné změny ve vybraném textu.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Přechod z&nbsp;normálního režimu do vkládacího režimu (<i>insert</i>)</h2>

<p>V&nbsp;normálním (a současně i ve výchozím) režimu nalezneme i mnohé další
užitečné příkazy. Poměrně velké množství příkazů (převzatých z&nbsp;Vimu)
slouží pro přechod do vkládajícího režimu, ovšem ještě před tímto přechodem se
typicky provede nějaká operace, například pohyb kurzoru, vložení nového řádku
do bufferu atd.:</p>

<table>
<tr><th>#</th><th>Příkaz/zkratka</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>a</td><td>přechod do vkládacího režimu za pozicí kurzoru (<i>append</i>)</td></tr>
<tr><td>2</td><td>i</td><td>přechod do vkládacího režimu před pozicí kurzoru (<i>insert</i>)</td></tr>
<tr><td>3</td><td>A</td><td>přechod do vkládacího režimu na začátku řádku</td></tr>
<tr><td>4</td><td>I</td><td>přechod do vkládacího režimu na konci řádku</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>5</td><td>o</td><td>přechod do vkládacího režimu na začátku nově vytvořeného řádku pod kurzorem</td></tr>
<tr><td>6</td><td>O</td><td>přechod do vkládacího režimu na začátku nově vytvořeného řádku nad kurzorem</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>c</td><td>změna/modifikace vybraného textu</td></tr>
</table>

<p>V&nbsp;případě, že je text již vybrán, tedy když se editor nachází
v&nbsp;režimu <i>selection</i>, je význam prvních dvou zkratek odlišný:</p>

<table>
<tr><th>#</th><th>Příkaz/zkratka</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>a</td><td>přechod do vkládacího režimu za vybraným textem (<i>append</i>) + rozšíření výběru o zapsaný text</td></tr>
<tr><td>2</td><td>i</td><td>přechod do vkládacího režimu před vybraným textem (<i>insert</i>)</td></tr>
</table>



<p><a name="k12"></a></p>
<h2 id="k12">12. Manipulace s&nbsp;okny</h2>

<p>Editor <i>Helix</i>, ostatně podobně jako <i>Vim</i>, obsahuje podporu pro
rozdělení plochy terminálu na několik samostatných oblastí, v&nbsp;nichž je
možné zobrazit jednotlivé editované buffery (a liší se od <i>Kakoune</i>, který
tuto operaci ponechává na nástrojích <strong>screen</strong> nebo
<strong>tmux</strong>. Podporovány jsou zejména příkazy dostupné z&nbsp;menu
zobrazeného klávesovou zkratkou <strong>Ctrl+W</strong> (W jako window):</p>

<table>
<tr><th>Klávesa</th><th>Příkaz</th></tr>
<tr><td>n</td><td>nové okno (získané vertikálním či horizontálním rozdělením)</td></tr>
<tr><td>s</td><td>rozdělení aktivního okna horizontálně na dvě samostatná okna</td></tr>
<tr><td>v</td><td>rozdělení aktivního okna vertikálně na dvě samostatná okna</td></tr>
<tr><td>q</td><td>zavření aktivního okna</td></tr>
<tr><td>o</td><td>zavření všech oken kromě aktivního okna</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>w</td><td>přechod do další okno v&nbsp;pořadí</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>h</td><td>přechod do okna nalevo</td></tr>
<tr><td>j</td><td>přechod do okna dole</td></tr>
<tr><td>k</td><td>přechod do okna nahoře</td></tr>
<tr><td>l</td><td>přechod do okna napravo</td></tr>
<tr><td>Ctrl+h</td><td>přechod do okna nalevo</td></tr>
<tr><td>Ctrl+j</td><td>přechod do okna dole</td></tr>
<tr><td>Ctrl+k</td><td>přechod do okna nahoře</td></tr>
<tr><td>Ctrl+l</td><td>přechod do okna napravo</td></tr>
</table>



<p><a name="k13"></a></p>
<h2 id="k13">13. Vícenásobný kurzor</h2>

<p>Další zajímavou vlastností textového editoru <i>Helix</i> je podpora
takzvaného vícenásobného kurzoru, kterou (v&nbsp;různých obměnách) nalezneme i
v&nbsp;některých dalších moderních textových editorech, například <a
href="https://atom.io/packages/multi-cursor">v&nbsp;Atomu</a> atd. Kurzor je
možné zduplikovat klávesou <strong>C</strong> a veškeré další operace (změna,
smazání, přidání, dokonce i zvýšení či snížení hodnoty klávesami
<strong>Ctrl+A</strong> a <strong>Ctrl+D</strong>) se provede na všech místech,
kde se zduplikované kurzory nachází, současně. V&nbsp;tomto případě ovšem
poměrně citelně chybí možnost duplikovat kurzor pomocí myši, protože možnosti
příkazu <strong>C</strong> jsou omezeny na sousední řádky (popř.&nbsp;na řádky,
mezi nimiž se nachází prázdné řádky).</p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Pomůcky při manipulaci se zdrojovými kódy</h2>

<p>Zdrojové kódy podporovaných programovacích popř.&nbsp;značkovacích jazyků
jsou v&nbsp;Helixu &ndash; jak je dnes nepsaným standardem &ndash; barevně
zvýrazněny na základě analýzy syntaxe. Pro každý jazyk je přitom připravena
nativní knihovna s&nbsp;gramatikou, takže práce i s&nbsp;rozsáhlými zdrojovými
kódy je velmi rychlá a navíc se zvýraznění syntaxe u delších souborů
&bdquo;nerozhodí&ldquo; tak, jak je tomu ve Vimu (ve Vimu se totiž
z&nbsp;důvodu urychlení práce syntaktické prvky hledají jen v&nbsp;určitém
rozsahu). Podobně je na základě použitého jazyka řešeno odsazování atd. Všechny
další složitější operace, tj.&nbsp;zejména automatické doplňování kódu, je
řešeno přes LSP, což je téma navazujících kapitol.</p>

<a href="https://www.root.cz/obrazek/572143/"><img src="https://i.iinfo.cz/images/323/helix-15-prev.png" class="image-572143" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="231" /></a>
<p><i>Obrázek 15: Zvýraznění syntaxe zdrojových kódů.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Podpora Language Server Protokolu (LSP)</h2>

<p>Textový editor <i>Helix</i> podporuje, ostatně podobně jako mnoho dalších
v&nbsp;současnosti používaných programátorských textových editorů (Vim, Emacs,
VSCode, Atom, ...), podporu pro <i>Language Server Protocol</i> neboli zkráceně
<i>LSP</i>, což umožňuje provádění takových operací, jako je kontextové
doplňování názvů funkcí, atributů či metod, refaktoring, propojení
s&nbsp;debuggerem (ale i automatické doplňování kódu přes AI) atd.</p>

<p>Language Server Protocol je otevřený standard navržený takovým způsobem, aby
umožňoval komunikaci mezi textovými editory popř.&nbsp;mezi integrovanými
vývojovými prostředími (IDE) na jedné straně a různými typy programátorských
nástrojů na straně druhé. Mezi nástroje, které je díky existenci LSP možné
z&nbsp;editoru/IDE použít, mohou patřit zejména různé <a
href="https://en.wikipedia.org/wiki/Lint_%28software%29">lintery</a>, statické
analyzátory kódu, programy pro kontrolu stylu zápisu programů, nástroje
umožňující refaktoring zdrojového kódu, teoreticky i profilery atd. Nesmíme
samozřejmě zapomenout na dnes již všemi programátory očekávané nástroje pro
automatické doplňování jmen funkcí, metod, objektů atd.,
&bdquo;inteligentní&ldquo; vyhledávání ve zdrojovém kódu, doskoky na definici
funkce, objektu nebo proměnné apod. Všechny tyto nástroje mohou komunikovat
s&nbsp;editorem/IDE přímo (pokud obsahují podporu pro LSP), nebo je možné
využít nějaký obecnější nástroj, který je většinou nazývaný Language Server a
který podporuje větší množství funkcí (typicky vyhledání definic, refaktoring a
automatické doplňování; samozřejmě v&nbsp;závislosti na konkrétní
implementaci).</p>

<img src="https://i.iinfo.cz/images/420/jedi2-17.png" class="image-337221" alt="&#160;" width="754" height="741" />
<p><i>Obrázek 16: Textový editor Emacs ve funkci integrovaného vývojového prostředí.</i></p>

<p><div class="rs-tip-major">Poznámka: samotný protokol je nezávislý na tom,
jestli Language Server běží na stejném počítači jako samotný editor/IDE, či zda
běží na nějakém vzdáleném serveru (jako služba). V&nbsp;prvním případě
samozřejmě budou odezvy rychlejší a doba odezvy by v&nbsp;ideálním případě
neměla být uživatelem vůbec zaznamenána (tj.&nbsp;prostředí musí reagovat do
max.&nbsp;jedné sekundy, spíše však rychleji). Ve druhém případě se může jednat
o sofistikovanější nástroje, které například používají vlastní databázi, AI
modul atd.</div></p>

<p>Myšlenka, na které je <i>language server protocol</i> postaven, samozřejmě
není nijak nová ani převratná, protože se podobný princip využíval již dříve,
například v&nbsp;textových editorech <a
href="https://www.root.cz/n/vim/">Vim</a> a <a
href="https://www.root.cz/n/emacs/">Emacs</a>, které takto mohly komunikovat
s&nbsp;nástroji běžícími na pozadí (daemons), viz též <a
href="https://github.com/Microsoft/language-server-protocol/wiki/Protocol-History">https://github.com/Microsoft/language-server-protocol/wiki/Protocol-History</a>.
Příkladem může být integrace nástroje Jedi do Vimu, o níž jsme se relativně
nedávno zmínili v&nbsp;článku <a
href="https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu/#k15">Knihovna
Jedi: doplňování kódu a statická analýza kódu v Pythonu</a>.</p>

<p><div class="rs-tip-major">Poznámka: to, že je LSP vůbec reálně využitelný,
je do značné míry zajištěno díky vysokému výpočetnímu výkonu současných
(desktopových) počítačů. Dříve byly podobné nástroje velmi úzce propojeny se
samotným editorem právě z&nbsp;toho důvodu, aby byla odezva editoru/IDE
dostatečně rychlá. Na druhou stranu se samozřejmě nejedná o univerzální řešení
a dnes již například IDE specializované na jediný jazyk nebývají tolik
oblíbena, jako v&nbsp;minulosti, což je kvůli rostoucí složitosti a
provázanosti technologií v&nbsp;IT pochopitelné.</div></p>

<a href="https://www.root.cz/obrazek/304891/"><img src="https://i.iinfo.cz/images/373/fp-nubmers-9-prev.png" class="image-304891" alt="&#160;" width="370" height="231" /></a>
<p><i>Obrázek 17: Dnes již historické IDE Turbo Pascalu určené pouze pro jediný
jazyk. Prakticky všechny nástroje jsou nedílnou součástí tohoto IDE
(s&nbsp;výjimkou externích nástrojů <strong>grep</strong> a <strong>Turbo
Debugger</strong>).</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Základní informace o projektu LSP</h2>

<p>Samotný protokol je založen na formátu JSON, přesněji řečeno na protokolu
JSON-RPC. Při použití Language Server Protokolu je textový editor či IDE
považován za klienta a language server pochopitelně vystupuje v&nbsp;roli
serveru, který klientovi poskytuje takzvané &bdquo;language service(s)&ldquo;.
Mezi klientem a serverem probíhá komunikace s&nbsp;využitím tří typů zpráv:</p>

<ul>

<li>Požadavek (<i>request</i>) je posílán klientem (tedy v&nbsp;našem případě
Helixem) na server. Server musí na tento požadavek odpovědět. Pro tento účel se
používá <a href="https://en.wikipedia.org/wiki/JSON-RPC">protokol
JSON-RPC</a>.</li>

<li>Odpověď (<i>response</i>) serveru na požadavek klienta (Helixu). Klient
vždy dokáže spárovat svůj požadavek s&nbsp;odpovědí serveru (to je základ
JSON-RPC).</li>

<li>Oznamovací zprávy (<i>notification</i>) může posílat jak klient, tak i
server, přičemž se na tyto zprávy nemusí posílat odpověď. Klient (editor) může
například serveru ohlásit, že uživatel posunul kurzor na další funkci, ale
prozatím od něj neočekává žádnou další službu a záleží jen na serveru, zda tuto
operaci nějakým způsobem zpracuje či nikoli.</li>

</ul>

<p>Uveďme si příklad jednoduché komunikace mezi klientem a serverem. Na levé
straně je klient/editor, na straně pravé language server:</p>

<pre>
textDocument/didOpen -&gt;
textDocument/didChange -&gt;
&lt;- textDocument/publishDiagnostics
&lt;- textDocument/didClose
</pre>

<p>Konkrétní tvar dotazu může vypadat takto:</p>

<pre>
{'method': 'textDocument/hover', 'jsonrpc': '2.0', 'id': 4,
 'params': {'textDocument': {'uri': 'file:///home/ptisnovs/t.py'},
 'position': {'character': 0, 'line': 21}}}
</pre>

<p>Jeden typ notifikace vrácené serverem klientovi:</p>

<pre>
textDocument/publishDiagnostics {'uri': 'file:///home/ptisnovs/t.py',
'diagnostics': [{'source': 'pycodestyle',
'range': {'start': {'line': 3, 'character': 19},
          'end': {'line': 3, 'character': 21}},
          'message': 'W291 trailing whitespace', 'code': 'W291', 'severity': 2}]}
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. LSP a textový editor Helix</h2>

<p>Textový editor <i>Helix</i> dokáže při otevření zdrojového kódu automaticky
spustit příslušný <i>language server</i>, pochopitelně ovšem za předpokladu, že
je nainstalován. Například v&nbsp;případě jazyka Go se Helix pokouší spustit
<strong>gopls</strong>, který je nutné nejdříve nainstalovat (žádná další
konfigurace již není zapotřebí):</p>

<pre>
$ <strong>go get golang.org/x/tools/gopls@latest</strong>
</pre>

<p>Pokud se LSP nespustí, je vhodné Helix spusit příkazem:</p>

<pre>
$ <strong>hx -v</strong>
</pre>

<p>a prohlédnout si chybová hlášení v&nbsp;logu.</p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Barvová témata</h2>

<p>Na závěr se ještě podívejme na způsob změny stylu zobrazení Helixu.
K&nbsp;dispozici je poměrně velké množství barevných témat, která <a
href="#k03">jsou součástí instalace tohoto textového editoru</a>. Barvové téma
je možné změnit příkazem <strong>:theme</strong>. Po stisku klávesy
<strong>Tab</strong> se zobrazí menu se všemi dostupnými schématy, z&nbsp;něhož
je možné si vybrat. Mnohá témata jsou přitom nabízena ve dvou variantách podle
toho, zda je pozadí terminálu světlé či naopak tmavé.</p>

<a href="https://www.root.cz/obrazek/572144/"><img src="https://i.iinfo.cz/images/323/helix-16-prev.png" class="image-572144" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="370" height="231" /></a>
<p><i>Obrázek 18: Barvové schéma.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Závěrečné subjektivní zhodnocení</h2>

<p>Helix se i přes vysoké číslo verze (22.03) prozatím nachází spíše ve fázi
vývoje a i když obsahuje některé zajímavé nápady (celý koncept výběr+příkaz,
částečně převzatý z&nbsp;Emacsu a Kakoune, multivýběry a multikurzory), ještě
podle mého skromného názoru není plnohodnotnou náhradou Vimu či nějakého
dalšího modálního editoru (Spacemacs, Doom Emacs nebo i běžný Evil
v&nbsp;Emacsu). Nicméně bude zajímavé sledovat, kam se oba zmíněné editory,
tedy jak Helix, tak i Kakoune, posunou v&nbsp;dalších měsících a letech.
Prozatím však (opět &ndash; subjektivně) nepřináší tolik užitečných vlastností,
aby byly vhodné pro každodenní použití.</p>

<p><div class="rs-tip-major">Poznámka: asi by Helixu neuškodila větší
modularita, plně konfigurovatelné klávesové zkratky atd.</div></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Představení Helixu<br />
<a href="https://helix-editor.com/">https://helix-editor.com/</a>
</li>

<li>Helix: A post-modern modal text editor<br />
<a href="https://githubplus.com/helix-editor/helix">https://githubplus.com/helix-editor/helix</a>
</li>

<li>Helix na GitHubu<br />
<a href="https://github.com/helix-editor/helix">https://github.com/helix-editor/helix</a>
</li>

<li>Helix: dokumentace<br />
<a href="https://docs.helix-editor.com/">https://docs.helix-editor.com/</a>
</li>

<li>Helix: troubleshooting<br />
<a href="https://github.com/helix-editor/helix/wiki/Troubleshooting">https://github.com/helix-editor/helix/wiki/Troubleshooting</a>
</li>

<li>Klávesové zkratky Helixu<br />
<a href="https://docs.helix-editor.com/keymap.html">https://docs.helix-editor.com/keymap.html</a>
</li>

<li>gopls<br />
<a href="https://www.getman.io/posts/gopls/">https://www.getman.io/posts/gopls/</a>
</li>

<li>Kakoune: A Better Code Editor Heavily Inspired by Vim<br />
<a href="https://www.tecmint.com/kakoune-better-code-editor-for-linux/">https://www.tecmint.com/kakoune-better-code-editor-for-linux/</a>
</li>

<li>Kakoune demo<br />
<a href="https://vimeo.com/82711574">https://vimeo.com/82711574</a>
</li>

<li>6 Best Vi/Vim-Inspired Code Editors for Linux<br />
<a href="https://www.tecmint.com/vi-vim-inspired-code-editors-for-linux/">https://www.tecmint.com/vi-vim-inspired-code-editors-for-linux/</a>
</li>

<li>Why Kakoune — The quest for a better code editor<br />
<a href="https://kakoune.org/why-kakoune/why-kakoune.html">https://kakoune.org/why-kakoune/why-kakoune.html</a>
</li>

<li>Kakoune design<br />
<a href="https://github.com/mawww/kakoune/blob/master/doc/design.asciidoc">https://github.com/mawww/kakoune/blob/master/doc/design.asciidoc</a>
</li>

<li>Kakoune (modální textový editor)<br />
<a href="http://kakoune.org/">http://kakoune.org/</a>
</li>

<li>Kakoune: Selections<br />
<a href="https://github.com/mawww/kakoune/wiki/Selections">https://github.com/mawww/kakoune/wiki/Selections</a>
</li>

<li>Migrating from Vim<br />
<a href="https://github.com/mawww/kakoune/wiki/Migrating-from-Vim">https://github.com/mawww/kakoune/wiki/Migrating-from-Vim</a>
</li>

<li>kakoune-vertical-selections<br />
<a href="https://github.com/occivink/kakoune-vertical-selection">https://github.com/occivink/kakoune-vertical-selection</a>
</li>

<li>Langserver.org<br />
<a href="https://langserver.org/">https://langserver.org/</a>
</li>

<li>Language Server Protocol<br />
<a href="https://microsoft.github.io/language-server-protocol/">https://microsoft.github.io/language-server-protocol/</a>
</li>

<li>Language Server Protocol Specification<br />
<a href="https://microsoft.github.io/language-server-protocol/specification">https://microsoft.github.io/language-server-protocol/specification</a>
</li>

<li>Implementations Language Servers<br />
<a href="https://microsoft.github.io/language-server-protocol/implementors/servers">https://microsoft.github.io/language-server-protocol/implementors/servers</a>
</li>

<li>JSON-RPC 2.0 Specification<br />
<a href="https://www.jsonrpc.org/specification">https://www.jsonrpc.org/specification</a>
</li>

<li>Why You Should Know the Language Server Protocol<br />
<a href="https://tomassetti.me/what-is-the-language-server-protocol/">https://tomassetti.me/what-is-the-language-server-protocol/</a>
</li>

<li>Language Server Protocol: A Language Server For DOT With Visual Studio Code<br />
<a href="https://tomassetti.me/language-server-dot-visual-studio/">https://tomassetti.me/language-server-dot-visual-studio/</a>
</li>

<li>Python Language Server<br />
<a href="https://github.com/palantir/python-language-server">https://github.com/palantir/python-language-server</a>
</li>

<li>Jedi - an awesome autocompletion/static analysis library for Python<br />
<a href="https://github.com/davidhalter/jedi">https://github.com/davidhalter/jedi</a>
</li>

<li>What is lsp<br />
<a href="https://www.reddit.com/r/vim/comments/7lnhrt/which_lsp_plugin_should_i_use/">https://www.reddit.com/r/vim/comments/7lnhrt/which_lsp_plugin_should_i_use/</a>
</li>

<li>Evil (Emacs Wiki)<br />
<a href="https://www.emacswiki.org/emacs/Evil">https://www.emacswiki.org/emacs/Evil</a>
</li>

<li>Evil (na GitHubu)<br />
<a href="https://github.com/emacs-evil/evil">https://github.com/emacs-evil/evil</a>
</li>

<li>Evil (na stránkách repositáře MELPA)<br />
<a href="https://melpa.org/#/evil">https://melpa.org/#/evil</a>
</li>

<li>Evil Mode: How I Switched From VIM to Emacs<br />
<a href="https://blog.jakuba.net/2014/06/23/evil-mode-how-to-switch-from-vim-to-emacs.html">https://blog.jakuba.net/2014/06/23/evil-mode-how-to-switch-from-vim-to-emacs.html</a>
</li>

<li>Vrapper aneb spojení možností Vimu a Eclipse<br />
<a href="https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse/">https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse/</a>
</li>

<li>Vrapper aneb spojení možností Vimu a Eclipse (část 2: vyhledávání a nahrazování textu)<br />
<a href="https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse-cast-2-vyhledavani-a-nahrazovani-textu/">https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse-cast-2-vyhledavani-a-nahrazovani-textu/</a>
</li>

<li>Emacs/Evil-mode - A basic reference to using evil mode in Emacs<br />
<a href="http://www.aakarshnair.com/posts/emacs-evil-mode-cheatsheet">http://www.aakarshnair.com/posts/emacs-evil-mode-cheatsheet</a>
</li>

<li>From Vim to Emacs+Evil chaotic migration guide<br />
<a href="https://juanjoalvarez.net/es/detail/2014/sep/19/vim-emacsevil-chaotic-migration-guide/">https://juanjoalvarez.net/es/detail/2014/sep/19/vim-emacsevil-chaotic-migration-guide/</a>
</li>

<li>Introduction to evil-mode {video)<br />
<a href="https://www.youtube.com/watch?v=PeVQwYUxYEg">https://www.youtube.com/watch?v=PeVQwYUxYEg</a>
</li>

<li>Vim-style keybinding in Emacs/Evil-mode<br />
<a href="https://gist.github.com/troyp/6b4c9e1c8670200c04c16036805773d8">https://gist.github.com/troyp/6b4c9e1c8670200c04c16036805773d8</a>
</li>

<li>Evil-surround<br />
<a href="https://github.com/emacs-evil/evil-surround">https://github.com/emacs-evil/evil-surround</a>
</li>

<li>Spacemacs<br />
<a href="http://spacemacs.org/">http://spacemacs.org/</a>
</li>

<li>Neovim: literally the future of vim<br />
<a href="https://neovim.io/">https://neovim.io/</a>
</li>

<li>AMP – A Vi/Vim Inspired Text Editor for Linux Terminal<br />
<a href="https://www.tecmint.com/amp-vi-vim-inspired-text-editor-for-linux/">https://www.tecmint.com/amp-vi-vim-inspired-text-editor-for-linux/</a>
</li>

<li>Amp: A text editor for your terminal<br />
<a href="https://github.com/jmacdonald/amp">https://github.com/jmacdonald/amp</a>
</li>

<li>Stránky projektu Amp.rs<br />
<a href="https://amp.rs/">https://amp.rs/</a>
</li>

<li>Dokumentace k editoru Amp<br />
<a href="https://amp.rs/docs/">https://amp.rs/docs/</a>
</li>

<li>Vis: a vi-like editor based on Plan 9's structural regular expressions <br />
<a href="https://github.com/martanne/vis">https://github.com/martanne/vis</a>
</li>

<li>Very opinionated Node.JS VI clone<br />
<a href="https://github.com/mikesmullin/nvi">https://github.com/mikesmullin/nvi</a>
</li>

<li>PyVim: Pure Python Vim clone<br />
<a href="https://github.com/prompt-toolkit/pyvim">https://github.com/prompt-toolkit/pyvim</a>
</li>

<li>pyvim 2.0.24 na PyPi<br />
<a href="https://pypi.org/project/pyvim/">https://pypi.org/project/pyvim/</a>
</li>

<li>vim2elvis (1)<br />
<a href="https://www.root.cz/clanky/vim2elvis-1/">https://www.root.cz/clanky/vim2elvis-1/</a>
</li>

<li>vim2elvis (2)<br />
<a href="https://www.root.cz/clanky/vim2elvis-2/">https://www.root.cz/clanky/vim2elvis-2/</a>
</li>

<li>Seriál Textový editor Vim jako IDE<br />
<a href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">https://www.root.cz/serialy/textovy-editor-vim-jako-ide/</a>
</li>

<li>Obsah Rootu označený nálepkou Vim<br />
<a href="https://www.root.cz/n/vim/">https://www.root.cz/n/vim/</a>
</li>

<li>Atom: moderní textový editor<br />
<a href="https://www.root.cz/clanky/atom-moderni-textovy-editor/">https://www.root.cz/clanky/atom-moderni-textovy-editor/</a>
</li>

<li>Atom: moderní textový editor (dokončení)<br />
<a href="https://www.root.cz/clanky/atom-moderni-textovy-editor-dokonceni/">https://www.root.cz/clanky/atom-moderni-textovy-editor-dokonceni/</a>
</li>

<li>Why I switched to VIM from Visual Studio Code<br />
<a href="https://freshman.tech/from-vscode-to-vim/">https://freshman.tech/from-vscode-to-vim/</a>
</li>

<li>VSCodeVim<br />
<a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim">https://marketplace.visualstudio.com/items?itemName=vscodevim.vim</a>
</li>

<li>VSCodeVim/Vim na GitHubu<br />
<a href="https://github.com/VSCodeVim/Vim">https://github.com/VSCodeVim/Vim</a>
</li>

<li>How Vim killed Atom and VSCode on my Machine<br />
<a href="https://medium.com/@aswinmohanme/how-vim-killed-atom-and-vscode-723a68ad59dc">https://medium.com/@aswinmohanme/how-vim-killed-atom-and-vscode-723a68ad59dc</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

<!--
    07:00 - 08:00  41000
    08:00 - 09:00  42000
    09:00 - 10:00  43000
    10:00 - 11:00  44000
    11:00 - 12:00  45000
    12:00 - 13:00  46000
    13:00 - 14:00  47000
    14:00 - 15:00  48000
    15:00 - 16:00  49000
    16:00 - 17:00  50000
    -->
