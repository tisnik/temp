<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. Inspirace Algolem 60?</a></p>
<p><a href="#k04">*** 4. Nástroj <i>noweb</i></a></p>
<p><a href="#k05">*** 5. Ukázky vstupního textu pro nástroj <i>noweb</i></a></p>
<p><a href="#k06">*** 6. Moderní přístupy k&nbsp;literate programmingu</a></p>
<p><a href="#k07">*** 7. Literate programming v&nbsp;podání Jupyter Notebooku</a></p>
<p><a href="#k08">*** 8. Ukázka diáře s&nbsp;popisem všech kroků</a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">*** 19. Vygenerované soubory s&nbsp;vysvětlením zdrojového kódu i vlastním kódem</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Literate programming</h2>

<p><i>&bdquo;"Změňme náš tradiční pohled na tvorbu programů. Místo toho abychom
předepsali počítači co má dělat, zkusme vysvětlovat lidským bytostem co chceme,
aby počítač dělal. 'Literární' programátor může být srovnáván s esejistou,
jehož hlavním cílem je srozumitelné vysvětlení a vybroušený styl. Takový autor
vybírá s tezaurem v ruce názvy proměnných a vysvětluje účel každé z nich. Snaží
se napsat program, který je srozumitelný, protože jeho principy jsou popsány
způsobem, který odpovídá lidskému myšlení a používá k tomu formální i
neformální prostředky, které se navzájem doplňují."&ldquo;<br />
Donald Knuth</i></p>

<p><div class="rs-tip-major">Poznámka: původní Knuthův název &bdquo;literate programming&ldquo; se někdy překládá jako &bdquo;literální programování&ldquo;, &bdquo;kultivované programování&ldquo; nebo dokonce &bdquo;dobře dokumentované programy&ldquo;. Podle mého skromného názoru se nejedná o dobré a přesné překlady, už jen z&nbsp;toho důvodu, že slovo <i>literate</i> by se mělo raději překládat z&nbsp;latiny a ne z&nbsp;angličtiny, kde došlo k&nbsp;posunu jeho významu. Proto se v&nbsp;dnešním článku budu držet původního termínu (což je ostatně v&nbsp;oblasti IT stále více využívaný přístup).</div></p>

<p>Dobrým příkladem použití tohoto paradigma jsou texty, v&nbsp;nichž se nějaký algoritmus vysvětluje způsobem &bdquo;shora dolů&ldquo; nebo naopak &bdquo;zdola nahoru&ldquo;. Oba dva přístupy mají své přednosti a pochopitelně i omezení. Způsob &bdquo;shora dolů&ldquo; se nejdříve zaměřuje na celý řešený problém na nejvyšší (rozumné) úrovni abstrakce, takže může dát čtenáři dobrý vhled do toho, jaký problém se řeší a jakým způsobem. Detaily jsou vysvětleny (a současně i implementovány!) později. Naproti tomu způsob vysvětlování a programování označovaný termínem &bdquo;zdola nahoru&ldquo; je typický při použití jazyků typu <a href="">Forth</a>, v&nbsp;nichž se nejdříve skládají jednotlivé základní (a značně primitivní) bloky do bloků větších, které provádí činnost na poněkud vyšší úrovni abstrakce. A z&nbsp;těchto bloků se opět skládají další větší celky až k&nbsp;celkové aplikaci.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p><i>&bdquo;Literate programming is not a documentation system per ce, it's a programming paradigm.&ldquo;</i></p>

Weaving: Generating a comprehensive document about the program and its maintenance.
Tangling: Generating machine executable code



<p><a name="k03"></a></p>
<h2 id="k03">3. Inspirace Algolem 60?</h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. Nástroj <i>noweb</i></h2>

<p>Jedním z&nbsp;(relativně) novějších nástrojů inspirovaných původním <i>webem</i> je nástroj nazvaný <i>noweb</i>. Tento nástroj je navržen takovým způsobem, aby byl nezávislý na použitém jazyku &ndash; a to jak programovacím jazyku (C, Python, Perl atd.), tak i do jisté míry na jazyku použitém pro vygenerování dokumentace. Noweb totiž podporuje výstup do formátů TeXu, LaTeXu, HTML a troffu. Ovšem právě kvůli tomu, že je tento nástroj do značné míry nezávislý na použitém programovacím jazyku, není jeho praktické použití příliš uživatelsky přívětivé (už jen z&nbsp;toho důvodu, že většina programátorských textových editorů nedokáže zvýraznit syntaxi jednotlivých částí). O tom, jak vypadá zdrojový text, se přesvědčíme <a href="#k05">v&nbsp;navazující kapitole</a>.</p>

<p>Podobně jako v&nbsp;případě původního <i>webu</i> se i v&nbsp;<i>nowebu</i> používá dvojí zpracování vstupního textu. O první zpracování se stará filtr <i>notangle</i>, který vygeneruje zdrojový kód (nezávisle na jazyku) a o zpracování druhé nástroj <i>noweave</i>, jenž vygeneruje dokumentaci připravenou pro tisk (resp.&nbsp;přesněji řečeno připravenou například pro zpracování LaTeXem do tiskové podoby).</p>

<p><div class="rs-tip-major">Poznámka: existují i další varianty tohoto nástroje, například <strong>noweb.py</strong> naprogramovaná (jak její jméno ostatně velmi dobře napovídá) v&nbsp;Pythonu. Najdete ji na adrese <a href="https://github.com/JonathanAquino/noweb.py">https://github.com/JonathanAquino/noweb.py</a>.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Ukázky vstupního textu pro nástroj <i>noweb</i></h2>

<p>Podívejme se nyní na to, jak vypadá vstupní text, který má být zpracován nástrojem <i>noweb</i>. Nejprve si uvedeme úplnou podobu textu, poté ho ve stručnosti okomentujeme:</p>

<pre>
\section{Hello world}
&nbsp;
Today I awoke and decided to write
some code, so I started to write Hello World in \textsf C.
&nbsp;
&lt;&lt;hello.c&gt;&gt;=
/*
  &lt;&lt;license&gt;&gt;
*/
#include &lt;stdio.h&gt;
&nbsp;
int main(int argc, char *argv[]) {
  printf("Hello World!\n");
  return 0;
}
@
\noindent \ldots then I did the same in PHP.
&nbsp;
&lt;&lt;hello.php&gt;&gt;=
&lt;?php
  /*
  &lt;&lt;license&gt;&gt;
  */
  echo "Hello world!\n";
?&gt;
@
\section{License}
Later the same day some lawyer reminded me about licenses.
So, here it is:
&nbsp;
&lt;&lt;license&gt;&gt;=
This work is placed in the public domain.
</pre>

<p>V&nbsp;předchozím textu byly použity tři jazyky &ndash; LaTeX, C a PHP, přičemž LaTeX by (pochopitelně) použit pro dokumentační část. Jednotlivé bloky psané v&nbsp;programovacích jazycích začínají jednoznačným označením (<i>chunk</i>), které je zapsáno ve dvojitých lomených závorkách. Příkladem je:</p>

<pre>
&lt;&lt;hello.c&gt;&gt;=
</pre>

<p>Naproti tomu bloky s&nbsp;dokumentací jméno nemají (neodkazuje se na ně). Začínají řádkem obsahujícím pouze znak @, za nímž následuje vlastní dokumentace, v&nbsp;našem případě založená na TeXu a v&nbsp;případě druhého bloku LaTeXu:</p>

<pre>
@
\noindent \ldots then I did the same in PHP.
</pre>

<p>Typickou ukázkou toho, jak vypadá vstupní text pro nástroj <i>noweb</i>, je zdrojový kód unixové utility <strong>wc</strong>, který byl upravený do výstupu, jehož HTML varianta je dostupná na adrese <a href="https://www.cs.tufts.edu/~nr/noweb/examples/wc.html">https://www.cs.tufts.edu/~nr/noweb/examples/wc.html</a>. Na tomto výstupu je patrné stáří <i>nowebu</i>, který nedokáže dobře využít všech možností nabízených moderním HTML a kaskádovými styly. Část upraveného zdrojového kódu utility <strong>wc</strong> vypadá následovně:</p>

<pre>
The present chunk, which does the counting, was actually one of
the simplest to write. We look at each character and change state if it begins or ends
a word.
&nbsp;
    &lt;&lt;Scan file&gt;&gt;=
    while (1) {
      &lt;&lt;Fill buffer if it is empty; break at end of file&gt;&gt;
      c = *ptr++;
      if (c &gt; ' ' &amp;&amp; c &lt; 0177) {
        /* visible ASCII codes */
        if (!in_word) {
          word_count++;
          in_word = 1;
        }
        continue;
      }
      if (c == '\n') line_count++;
      else if (c != ' ' &amp;&amp; c != '\t') continue;
      in_word = 0;
        /* c is newline, space, or tab */
    }
    @
</pre>

<p>Na závěr se podívejme na ještě složitější kód, který tentokrát kombinuje dokumentaci se zdrojovým kódem napsaným v&nbsp;Perlu. Začátky jednotlivých <i>chunků</i> jsou zvýrazněny:</p>

<pre>
\documentclass[10pt]{article}
\usepackage{noweb}
\noweboptions{smallcode,longchunks}
\begin{document}
\pagestyle{noweb}
<strong>@</strong>
\paragraph{Introduction}
This is [[autodefs.perl]]\footnote{Copyright 1997, Andrew L.
Johnson and Brad C. Johnson,  All rights reserved.},
a Perl script to be used as an [[autodefs]] filter
in the [[noweb]] pipeline to identify and index
some common Perl definitions.  Since this
file is also meant to show off some of the
features of [[noweb]] it is purposely verbose
and contorted.
Perl does not require the formal declaration or typing of
variables which makes it difficult to
differentiate between declarations and usages of
variables.  We may however find definitions of [[sub]]’s and
[[package]]’s with little difficulty and that is the purpose of
this module.  Before we begin we need to know
some facts about [[noweb]]’s pipeline structure.\footnote{Noweb’s
pipeline structure is described in the \textit{Noweb Hackers
Guide} which is included in the [[noweb]] distribution.}
Actual code in the pipeline lie between lines
of the form [[@begin code]] and [[@end code]].
In Perl these are easily recognized by the following regular
expressions.
<strong>&lt;&lt;Global variables&gt;&gt;=</strong>
$begin_code_pat = "^\@begin code";
$end_code_pat   = "^\@end code";
<strong>@ %def $begin_code_pat $end_code_pat</strong>
&nbsp;
<strong>@ \paragraph{autodefs.perl}</strong>
Our actual Perl script has the following simple shape:
&lt;&lt;autodefs.perl&gt;&gt;=
#!/usr/bin/perl
<strong>&lt;&lt;Global variables&gt;&gt;</strong>
<strong>&lt;&lt;[[process_code_chunk]] subroutine&gt;&gt;</strong>
while ( &lt;&gt; ) {
print $_;
if (/$begin_code_pat/o) {
process_code_chunk;
}
}
<strong>@</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: z&nbsp;předchozích ukázek je patrné, že <i>noweb</i> sice může být použitelný, ale nejedná se o jednoduchý a snadno použitelný nástroj. To je do značné míry způsobeno tím, že <i>noweb</i> je nezávislý na použitém programovacím jazyku a nedovede tedy například vůbec pracovat s&nbsp;běžnými komentáři, dokumentačními řetězci apod. V&nbsp;navazujících kapitolách si ukážeme odlišné přístupy, které jsou založeny na poněkud posunutém chápání tohoto paradigma, jež je (alespoň podle mého názoru) bližší běžné současné programátorské praxi.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Moderní přístupy k&nbsp;literate programmingu</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. Literate programming v&nbsp;podání Jupyter Notebooku</h2>

<p>Jupyter Notebook a podobné nástroje jsou pro použití paradigmatu literate programování velmi dobře připraveny. Díky tomu, že v&nbsp;Jupyter Notebooku lze kombinovat buňky s&nbsp;textem s&nbsp;buňkami obsahujícími kód a jeho výsledky, je možné i v&nbsp;běžných diářích tento styl používat, což se ostatně poměrně často používá při přípravě materiálů pro výuku (takových diářů existuje celá řada a jsou z&nbsp;různých oborů &ndash; od IT přes zpracování signálů až po chemii).</p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Ukázka diáře s&nbsp;popisem všech kroků</h2>

<p>Diář, který kromě vlastních kroků pro s&nbsp;analýzami a výpočty obsahuje i okomentovaný postup, lze nalézt na adrese <a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/consumer_benchmarks.ipynb">https://github.com/tisnik/jupyter-notebook-examples/blob/master/consumer_benchmarks.ipynb</a>.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady s&nbsp;nimiž jsme se seznámili
v&nbsp;předchozích kapitolách, byly uloženy do Git repositáře umístěného na
GitHubu (<a
href="https://github.com/tisnik/literate-programming-examples">https://github.com/tisnik/literate-programming-examples</a>).
Poslední verze souborů s&nbsp;diáři naleznete pod odkazy uvedenými
v&nbsp;tabulce pod tímto odstavcem.</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Stručný popis</th><th>Zdrojový kód</th></tr>
<tr><td>1</td><td>consumer_benchmarks.py</td><td>zkonvertovaný diář s&nbsp;benchmarky</td><td><a href="https://github.com/tisnik/literate-programming-examples/blob/master/consumer_benchmarks.py">https://github.com/tisnik/literate-programming-examples/blob/master/consumer_benchmarks.py</a></td></tr>
<tr><td>2</td><td>gonum.go</td><td>úvodní informace o knihovně Gonumúvodní informace o knihovně Gonum</td><td><a href="https://github.com/tisnik/literate-programming-examples/blob/master/gonum.go">https://github.com/tisnik/literate-programming-examples/blob/master/gonum.go</a></td></tr>
<tr><td>3</td><td>gonum_output_as_comments.go</td><td>úvodní informace o knihovně Gonum, výstup ve formě komentářů</td><td><a href="https://github.com/tisnik/literate-programming-examples/blob/master/gonum_output_as_comments.go">https://github.com/tisnik/literate-programming-examples/blob/master/gonum_output_as_comments.go</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Vygenerované soubory s&nbsp;vysvětlením zdrojového kódu i vlastním kódem</h2>

<p>S&nbsp;využitím nástrojů zmíněných v&nbsp;předchozích kapitolách
(<strong>pycco</strong>, <strong>docgo</strong>) byly vygenerovány následující
soubory (z&nbsp;nichž dva prošly nepatrnými ručními úpravami), které
v&nbsp;jednom sloupci obsahují popis algoritmu a ve sloupci druhém vlastní
zdrojový kód:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Stručný popis</th><th>Lze si prohlédnout na adrese</th></tr>
<tr><td>1</td><td>consumer_benchmarks.html</td><td>zkonvertovaný diář s&nbsp;benchmarky</td><td><a href="https://tisnik.github.io/literate-programming-examples/consumer_benchmarks.html">https://tisnik.github.io/literate-programming-examples/consumer_benchmarks.html</a></td></tr>
<tr><td>2</td><td>gonum_std.html</td><td>úvodní informace o knihovně Gonum, nezměněná varianta</td><td><a href="https://tisnik.github.io/literate-programming-examples/gonum_std.html">https://tisnik.github.io/literate-programming-examples/gonum_std.html</a></td></tr>
<tr><td>3</td><td>gonum_changed_width.html</td><td>úvodní informace o knihovně Gonum, změna šířky sloupců</td><td><a href="https://tisnik.github.io/literate-programming-examples/gonum_changed_width.html">https://tisnik.github.io/literate-programming-examples/gonum_changed_width.html</a></td></tr>
<tr><td>4</td><td>gonum_output_as_comments.html</td><td>úvodní informace o knihovně Gonum, výstup ve formě komentářů</td><td><a href="https://tisnik.github.io/literate-programming-examples/gonum_output_as_comments.html">https://tisnik.github.io/literate-programming-examples/gonum_output_as_comments.html</a></td></tr>
<tr><td>5</td><td>gonum_output_as_comments_changed_width.html</td><td>předchozí příklad s&nbsp;upravenou šířkou sloupců</td><td><a href="https://tisnik.github.io/literate-programming-examples/gonum_output_as_comments_changed_width.html">https://tisnik.github.io/literate-programming-examples/gonum_output_as_comments_changed_width.html</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>literateprogramming<br />
<a href="http://www.literateprogramming.com/">http://www.literateprogramming.com/</a>
</li>

<li>Literate programing: Kolokviální práce Pavla Starého<br />
<a href="https://www.fi.muni.cz/usr/jkucera/pv109/starylp.htm">https://www.fi.muni.cz/usr/jkucera/pv109/starylp.htm</a>
</li>

<li>Ladislav Kašpárek: Literate Programming na střední škole<br />
<a href="http://www.ceskaskola.cz/2006/05/ladislav-kasparek-literate-programming.html">http://www.ceskaskola.cz/2006/05/ladislav-kasparek-literate-programming.html</a>
</li>

<li>anansi: A NoWeb-inspired literate programming preprocessor<br />
<a href="https://john-millikin.com/software/anansi">https://john-millikin.com/software/anansi</a>
</li>

<li>Literate programming<br />
<a href="https://en.wikipedia.org/wiki/Literate_programming">https://en.wikipedia.org/wiki/Literate_programming</a>
</li>

<li>Noweb — A Simple, Extensible Tool for Literate Programming<br />
<a href="https://www.cs.tufts.edu/~nr/noweb/">https://www.cs.tufts.edu/~nr/noweb/</a>
</li>

<li>Literate Programming using noweb<br />
<a href="https://www.cs.tufts.edu/~nr/noweb/johnson-lj.pdf">https://www.cs.tufts.edu/~nr/noweb/johnson-lj.pdf</a>
</li>

<li>An Example of noweb<br />
<a href="https://www.cs.tufts.edu/~nr/noweb/examples/wc.html">https://www.cs.tufts.edu/~nr/noweb/examples/wc.html</a>
</li>

<li>PyWeb<br />
<a href="https://github.com/slott56/py-web-tool">https://github.com/slott56/py-web-tool</a>
</li>

<li>Noweb (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Noweb">https://en.wikipedia.org/wiki/Noweb</a>
</li>

<li>Notangle<br />
<a href="https://archive.is/20151215221108/http://dev.man-online.org/man1/notangle/">https://archive.is/20151215221108/http://dev.man-online.org/man1/notangle/</a>
</li>

<li>noweb.py<br />
<a href="https://github.com/JonathanAquino/noweb.py">https://github.com/JonathanAquino/noweb.py</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

