<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textový editor Helix ve funkci vývojového prostředí</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textový editor Helix ve funkci vývojového prostředí</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Textový editor Helix ve funkci vývojového prostředí</a></p>
<p><a href="#k02">*** 2. Prostředky a technologie určené pro programátory</a></p>
<p><a href="#k03">*** 3. Obarvení textů na základě syntaxe: klasický Vim vs. Helix</a></p>
<p><a href="#k04">*** 4. GLR parser</a></p>
<p><a href="#k05">5. Instalace nejnovější stabilní verze Helixu</a></p>
<p><a href="#k06">6. Instalace z&nbsp;předpřipravených balíčků pro různé distribuce Linuxu</a></p>
<p><a href="#k07">7. Zjištění podpory programovacích jazyků Helixem</a></p>
<p><a href="#k08">8. Instalace LSP a dalších nástrojů pro zvolený programovací jazyk</a></p>
<p><a href="#k09">9. Konfigurace editoru a LSP</a></p>
<p><a href="#k10">10. Nové zjištění stavu LSP pro zvolený programovací jazyk</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Nastavení xtermu pro Helix</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

https://www.root.cz/clanky/helix-novy-modalni-textovy-editor-inspirovany-vimem-a-kakoune/



<p><a name="k02"></a></p>
<h2 id="k02">2. Prostředky a technologie určené pro programátory</h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. Obarvení textů na základě syntaxe: klasický Vim vs. Helix</h2>

<p>Zastavme se nyní u jedné technologie, která poměrně dobře ilustruje rozdíl v&nbsp;přístupu Vimu a Helixu k&nbsp;řešení dennodenních úkolů.</p>

<p>Společně s&nbsp;textovým editorem <i>Vim</i> je dodáváno několik stovek
(více než 500) konfiguračních souborů obsahujících syntaktická pravidla pro
různé programovací jazyky, značkovací jazyky (HTML, XML, TeX) i některé typy
konfiguračních souborů. I přes velké úsilí, které mnoho programátorů do tvorby
konfiguračních souborů se syntaktickými pravidly vkládá, se však může stát, že
je nutné vytvořit nová pravidla a/nebo zcela nový konfigurační soubor. Veškeré
vytváření, nastavení či mazání syntaktických pravidel se provádí pomocí příkazu
<strong>:syntax</strong>, jenž se obvykle zkracuje na <strong>:syn</strong>
nebo méně často na <strong>:sy</strong>. Pokud je tento příkaz pouze spuštěn
bez dalších parametrů, vypíše právě aktivní syntaktická pravidla, která se
samozřejmě liší podle toho, jaký soubor je právě editován.</p>

<p>Za příkazem <strong>:syntax</strong> lze uvést poměrně velké množství
dalších modifikátorů a atributů, nás však budou v&nbsp;tomto článku zajímat
pouze čtyři modifikátory, které jsou vypsány v&nbsp;následující tabulce:</p>

<table>
<tr><th>Příkaz</th><th>Význam</th></tr>
<tr><td>:syntax clear</td><td>vymazání všech syntaktických kategorií</td></tr>
<tr><td>:syntax clear kategorie</td><td>vymazání jedné syntaktické kategorie (užitečné především při postupném ladění různých možností)</td></tr>
<tr><td>:syntax keyword kategorie ...</td><td>vytvoření nové syntaktické kategorie obsahující klíčová slova</td></tr>
<tr><td>:syntax match kategorie ...</td><td>vytvoření nové syntaktické kategorie zadané regulárním výrazem</td></tr>
<tr><td>:syntax region kategorie ...</td><td>vytvoření nové syntaktické kategorie zadané regulárním výrazem označujícím začátek kategorie a druhým výrazem označujícím její konec</td></tr>
</table>




inc.parsing
error recovery
lightweight


<p><a name="k04"></a></p>
<h2 id="k04">4. GLR parser</h2>

LR parser
GLR parser (generalized LR parser)

https://tree-sitter.github.io/tree-sitter/playground
def add(x: int, y: int):
    return x + y


print(add(1, 2))



module [0, 0] - [5, 0]
  function_definition [0, 0] - [1, 16]
    name: identifier [0, 4] - [0, 7]
    parameters: parameters [0, 7] - [0, 23]
      typed_parameter [0, 8] - [0, 14]
        identifier [0, 8] - [0, 9]
        type: type [0, 11] - [0, 14]
          identifier [0, 11] - [0, 14]
      typed_parameter [0, 16] - [0, 22]
        identifier [0, 16] - [0, 17]
        type: type [0, 19] - [0, 22]
          identifier [0, 19] - [0, 22]
    body: block [1, 4] - [1, 16]
      return_statement [1, 4] - [1, 16]
        binary_operator [1, 11] - [1, 16]
          left: identifier [1, 11] - [1, 12]
          right: identifier [1, 15] - [1, 16]
  expression_statement [4, 0] - [4, 16]
    call [4, 0] - [4, 16]
      function: identifier [4, 0] - [4, 5]
      arguments: argument_list [4, 5] - [4, 16]
        call [4, 6] - [4, 15]
          function: identifier [4, 6] - [4, 9]
          arguments: argument_list [4, 9] - [4, 15]
            integer [4, 10] - [4, 11]
            integer [4, 13] - [4, 14]


func add(x, y int) int {
    return x + y
}


println(add(1, 2))



source_file [0, 0] - [6, 0]
  function_declaration [0, 0] - [2, 1]
    name: identifier [0, 5] - [0, 8]
    parameters: parameter_list [0, 8] - [0, 18]
      parameter_declaration [0, 9] - [0, 17]
        name: identifier [0, 9] - [0, 10]
        name: identifier [0, 12] - [0, 13]
        type: type_identifier [0, 14] - [0, 17]
    result: type_identifier [0, 19] - [0, 22]
    body: block [0, 23] - [2, 1]
      return_statement [1, 4] - [1, 16]
        expression_list [1, 11] - [1, 16]
          binary_expression [1, 11] - [1, 16]
            left: identifier [1, 11] - [1, 12]
            right: identifier [1, 15] - [1, 16]
  call_expression [5, 0] - [5, 18]
    function: identifier [5, 0] - [5, 7]
    arguments: argument_list [5, 7] - [5, 18]
      call_expression [5, 8] - [5, 17]
        function: identifier [5, 8] - [5, 11]
        arguments: argument_list [5, 11] - [5, 17]
          int_literal [5, 12] - [5, 13]
          int_literal [5, 15] - [5, 16]

$ ls -l runtime/grammars/python.so 
-rw-r--r-- 1 ptisnovs ptisnovs 394072 May 18 09:48 runtime/grammars/python.so



<p><a name="k05"></a></p>
<h2 id="k05">5. Instalace nejnovější stabilní verze Helixu</h2>

<p>Textový editor <i>Helix</i> je naprogramován v&nbsp;jazyku Rust, což
mj.&nbsp;znamená, že je přeložen do jediného spustitelného souboru, který je
možné na dané kombinaci architektura+operační systém většinou bez problémů
spustit (nezávisí na uživatelských knihovnách, jen na základních knihovnách
systémových &ndash; o čemž se zmíníme dále). Číslování verzí je poněkud
neobvyklé (postmoderní?), takže poslední verze již nese číslo 23 (23.05).
Tarball této verze jak se spustitelným Helixem, tak i s&nbsp;podpůrnými soubory
(gramatiky pro podporované jazyky, barvová schémata atd.) lze získat následovně
(příkaz byl spuštěn pro Linux na architektuře x86-64):</p>

<pre>
$ <strong>wget https://github.com/helix-editor/helix/releases/download/23.05/helix-23.05-x86_64-linux.tar.xz</strong>
&nbsp;
--2023-06-24 15:27:12--  https://github.com/helix-editor/helix/releases/download/23.05/helix-23.05-x86_64-linux.tar.xz
Resolving github.com (github.com)... 140.82.121.4
Connecting to github.com (github.com)|140.82.121.4|:443... connected.
HTTP request sent, awaiting response... 302 Found
Location: https://objects.githubusercontent.com/github-production-release-asset-2e65be/268424739/8d0a1a55-4be3-4cb4-be07-7de7ede57fd5?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKI****************************%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230624T132712Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=7ab3*********************************************************772&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=268424739&amp;response-content-disposition=attachment%3B%20filename%3Dhelix-23.05-x86_64-linux.tar.xz&amp;response-content-type=application%2Foctet-stream [following]
--2023-06-24 15:27:12--  https://objects.githubusercontent.com/github-production-release-asset-2e65be/268424739/8d0a1a55-4be3-4cb4-be07-7de7ede57fd5?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKI*************************624%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20230624T132712Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=7ab**********************************************************772&amp;X-Amz-SignedHeaders=host&amp;actor_id=0&amp;key_id=0&amp;repo_id=268424739&amp;response-content-disposition=attachment%3B%20filename%3Dhelix-23.05-x86_64-linux.tar.xz&amp;response-content-type=application%2Foctet-stream
Resolving objects.githubusercontent.com (objects.githubusercontent.com)... 185.199.110.133, 185.199.111.133, 185.199.108.133, ...
Connecting to objects.githubusercontent.com (objects.githubusercontent.com)|185.199.110.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 10690132 (10M) [application/octet-stream]
Saving to: ‘helix-23.05-x86_64-linux.tar.xz’
&nbsp;
helix-23.05-x86_64-linux.tar.xz         100%[==============================================================================&gt;]  10,19M  2,40MB/s    in 4,1s    
&nbsp;
2023-06-24 15:27:17 (2,46 MB/s) - ‘helix-23.05-x86_64-linux.tar.xz’ saved [10690132/10690132]
</pre>

<p>Rozbalení staženého archivu (tar + xz) se následně provede příkazem:</p>

<pre>
$ <strong>tar xvfx helix-23.05-x86_64-linux.tar.xz</strong>
</pre>

<p>Po rozbalení získáme mj.&nbsp;i soubor nazvaný <strong>hx</strong>, který by
měl být spustitelný. Ovšem na starších systémech může být se spuštěním problém,
protože je vyžadována poměrně nová verze knihovny glibc (povšimněte si &ndash;
jedná se o jedinou závislost na dynamické knihovně a i tato jediná závislost se
ukazuje být problematická):</p>

<pre>
$ <strong>./hx</strong>
&nbsp;
./hx: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by ./hx)
./hx: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.33' not found (required by ./hx)
./hx: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by ./hx)
</pre>

<p>Samozřejmě je však možné provést překlad Helixu přímo ze zdrojových kódů
projektu Helix (potom problém s&nbsp;glibc nenastane). V&nbsp;takovém případě
je vyžadována instalace <a
href="https://www.root.cz/serialy/programovaci-jazyk-rust/">Rustu</a> i Carga
(balíčkovacího systému Rustovského ekosystému) a samotný překlad je
přímočarý:</p>

<pre>
$ <strong>git clone https://github.com/helix-editor/helix</strong>
$ <strong>cd helix</strong>
$ <strong>cargo install --path helix-term</strong>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Instalace z&nbsp;předpřipravených balíčků pro různé distribuce Linuxu</h2>

<p>Další možnost instalace spočívá ve využití balíčků určených pro většinu
populárních distribucí Linuxu, ale i pro další systémy (pozor na to, že balíčky
mohou být zastaralé &ndash; o jednu či více minoritních verzí). Jednotlivé
postupy jsou popsány na stránce <a
href="https://docs.helix-editor.com/install.html">https://docs.helix-editor.com/install.html</a>.
Ukažme si například instalaci na Mintu. Ten sice není na stránce zmíněn, ale
použijeme postup pro Ubuntu:</p>

<pre>
$ <strong>sudo add-apt-repository ppa:maveonair/helix-editor</strong>
&nbsp;
[sudo] password for ptisnovs: <i>top secret</i>
Sorry, try again.
You are about to add the following PPA:
 A post-modern text editor.
&nbsp;
The source code used to build the package can be found here: https://github.com/maveonair/helix-ppa.
 More info: https://launchpad.net/~maveonair/+archive/ubuntu/helix-editor
Press Enter to continue or Ctrl+C to cancel
&nbsp;
Executing: /tmp/apt-key-gpghome.CYWSmOkP6D/gpg.1.sh --keyserver hkps://keyserver.ubuntu.com:443 --recv-keys 27642B9FD7F1A161FC2524E3355A4FA515D7C855
gpg: key 355A4FA515D7C855: public key "Launchpad PPA for Fabian Mettler" imported
gpg: Total number processed: 1
gpg:               imported: 1
&nbsp;
&nbsp;
&nbsp;
$ <strong>sudo apt update</strong>
&nbsp;
...
...
...
&nbsp;
&nbsp;
&nbsp;
$ <strong>sudo apt install helix</strong>
&nbsp;
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  helix
0 upgraded, 1 newly installed, 0 to remove and 92 not upgraded.
Need to get 10,6 MB of archives.
After this operation, 133 MB of additional disk space will be used.
Get:1 http://ppa.launchpad.net/maveonair/helix-editor/ubuntu focal/main amd64 helix amd64 23.05-8~ubuntu20.04~ppa1 [10,6 MB]
Fetched 10,6 MB in 12s (912 kB/s)                                              
Selecting previously unselected package helix.
(Reading database ... 291696 files and directories currently installed.)
Preparing to unpack .../helix_23.05-8~ubuntu20.04~ppa1_amd64.deb ...
Unpacking helix (23.05-8~ubuntu20.04~ppa1) ...
Setting up helix (23.05-8~ubuntu20.04~ppa1) ...
Processing triggers for mime-support (3.64ubuntu1) ...
Processing triggers for hicolor-icon-theme (0.17-2) ...
Processing triggers for gnome-menus (3.36.0-1ubuntu1) ...
Processing triggers for desktop-file-utils (0.24+linuxmint1) ...
</pre>

<p>Na konec si vyzkoušíme, zda je Helix skutečně nainstalován:</p>

<pre>
$ <strong>whereis hx</strong>
hx: /usr/lib/hx
&nbsp;
$ <strong>hx --version</strong>
helix 23.05 (7f5940be)
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Zjištění podpory programovacích jazyků Helixem</h2>

<p>Jednou z&nbsp;předností Helixu je možnost velmi snadného propojení
s&nbsp;LSP pro různé programovací jazyky a v&nbsp;mnoha případech i na
debuggery pro tyto jazyky. V&nbsp;naprosté většině případů postačuje pouze LSP
nainstalovat a Helix bez potřeby další instalace tento LSP začne používat.
Ostatně můžeme se o tom snadno přesvědčit spuštěním příkazu:</p>

<pre>
$ <strong>hx --health</strong>
</pre>

<p>Helix vypíše, které LSP podporuje a ke kterým má skutečně přístup (výstup je
ve skutečnosti obarvený, takže i lépe čitelný):</p>

<pre>
Config file: /home/user/.config/helix/config.toml
Language file: /home/user/.config/helix/languages.toml
Log file: /home/user/.cache/helix/helix.log
Runtime directories: /home/user/.config/helix/runtime;/home/user/helix/runtime
Runtime directory does not exist: /home/user/.config/helix/runtime
Clipboard provider: xclip
System clipboard provider: xclip
&nbsp;
Language     LSP          DAP          Highlight    Textobject   Indent
astro        None         None         ✓            ✘            ✘
awk          ✘ awk-lan…   None         ✓            ✓            ✘
bash         ✘ bash-la…   None         ✓            ✘            ✓
bass         ✘ bass       None         ✓            ✘            ✘
beancount    None         None         ✓            ✘            ✘
bibtex       ✘ texlab     None         ✓            ✘            ✘
bicep        ✘ bicep-l…   None         ✓            ✘            ✘
c            ✘ clangd     ✘ lldb-vs…   ✓            ✓            ✓
c-sharp      ✘ OmniSha…   ✘ netcore…   ✓            ✓            ✘
cabal        None         None         ✘            ✘            ✘
cairo        None         None         ✓            ✘            ✘
capnp        None         None         ✓            ✘            ✓
clojure      ✘ clojure…   None         ✓            ✘            ✘
cmake        ✘ cmake-l…   None         ✓            ✓            ✓
comment      None         None         ✓            ✘            ✘
common-lisp… ✘ cl-lsp     None         ✓            ✘            ✘
cpon         None         None         ✓            ✘            ✓
cpp          ✘ clangd     ✘ lldb-vs…   ✓            ✓            ✓
crystal      ✘ crystal…   None         ✓            ✓            ✘
css          ✘ vscode-…   None         ✓            ✘            ✘
cue          ✘ cuelsp     None         ✓            ✘            ✘
d            ✘ serve-d…   None         ✓            ✓            ✓
dart         ✘ dart       None         ✓            ✘            ✓
devicetree   None         None         ✓            ✘            ✘
dhall        ✘ dhall-l…   None         ✓            ✓            ✘
diff         None         None         ✓            ✘            ✘
dockerfile   ✘ docker-…   None         ✓            ✘            ✘
dot          ✘ dot-lan…   None         ✓            ✘            ✘
dtd          None         None         ✓            ✘            ✘
edoc         None         None         ✓            ✘            ✘
eex          None         None         ✓            ✘            ✘
ejs          None         None         ✓            ✘            ✘
elixir       ✘ elixir-…   None         ✓            ✓            ✓
elm          ✘ elm-lan…   None         ✓            ✓            ✘
elvish       ✘ elvish     None         ✓            ✘            ✘
env          None         None         ✓            ✘            ✘
erb          None         None         ✓            ✘            ✘
erlang       ✘ erlang_…   None         ✓            ✓            ✘
esdl         None         None         ✓            ✘            ✘
fish         None         None         ✓            ✓            ✓
fortran      ✘ fortls     None         ✓            ✘            ✓
gdscript     None         None         ✓            ✓            ✓
git-attribu… None         None         ✓            ✘            ✘
git-commit   None         None         ✓            ✓            ✘
git-config   None         None         ✓            ✘            ✘
git-ignore   None         None         ✓            ✘            ✘
git-rebase   None         None         ✓            ✘            ✘
gleam        ✘ gleam      None         ✓            ✓            ✘
glsl         None         None         ✓            ✓            ✓
go           ✘ gopls      ✘ dlv        ✓            ✓            ✓
godot-resou… None         None         ✓            ✘            ✘
gomod        ✘ gopls      None         ✓            ✘            ✘
gotmpl       ✘ gopls      None         ✓            ✘            ✘
gowork       ✘ gopls      None         ✓            ✘            ✘
graphql      None         None         ✓            ✘            ✘
hare         None         None         ✓            ✘            ✘
haskell      ✘ haskell…   None         ✓            ✓            ✘
hcl          ✘ terrafo…   None         ✓            ✘            ✓
heex         ✘ elixir-…   None         ✓            ✓            ✘
hosts        None         None         ✓            ✘            ✘
html         ✘ vscode-…   None         ✓            ✘            ✘
hurl         None         None         ✓            ✘            ✓
idris        ✘ idris2-…   None         ✘            ✘            ✘
iex          None         None         ✓            ✘            ✘
ini          None         None         ✓            ✘            ✘
java         ✘ jdtls      None         ✓            ✓            ✘
javascript   ✘ typescr…   ✘            ✓            ✓            ✓
jsdoc        None         None         ✓            ✘            ✘
json         ✘ vscode-…   None         ✓            ✘            ✓
jsonnet      ✘ jsonnet…   None         ✓            ✘            ✘
jsx          ✘ typescr…   None         ✓            ✓            ✓
julia        ✘ julia      None         ✓            ✓            ✓
just         None         None         ✓            ✓            ✓
kdl          None         None         ✓            ✘            ✘
kotlin       ✘ kotlin-…   None         ✓            ✘            ✘
latex        ✘ texlab     None         ✓            ✓            ✘
lean         ✘ lean       None         ✓            ✘            ✘
ledger       None         None         ✓            ✘            ✘
llvm         None         None         ✓            ✓            ✓
llvm-mir     None         None         ✓            ✓            ✓
llvm-mir-ya… None         None         ✓            ✘            ✓
lua          ✘ lua-lan…   None         ✓            ✓            ✓
make         None         None         ✓            ✘            ✘
markdoc      ✘ markdoc…   None         ✓            ✘            ✘
markdown     ✘ marksma…   None         ✓            ✘            ✘
markdown.in… None         None         ✓            ✘            ✘
matlab       None         None         ✓            ✘            ✘
mermaid      None         None         ✓            ✘            ✘
meson        None         None         ✓            ✘            ✓
mint         ✘ mint       None         ✘            ✘            ✘
msbuild      None         None         ✓            ✘            ✓
nasm         None         None         ✓            ✓            ✘
nickel       ✘ nls        None         ✓            ✘            ✓
nim          ✘ nimlang…   None         ✓            ✓            ✓
nix          ✘ nil        None         ✓            ✘            ✘
nu           None         None         ✓            ✘            ✘
ocaml        ✘ ocamlls…   None         ✓            ✘            ✓
ocaml-inter… ✘ ocamlls…   None         ✓            ✘            ✘
odin         ✘ ols        None         ✓            ✘            ✓
opencl       ✘ clangd     None         ✓            ✓            ✓
openscad     ✘ opensca…   None         ✓            ✘            ✘
org          None         None         ✓            ✘            ✘
pascal       ✘ pasls      None         ✓            ✓            ✘
passwd       None         None         ✓            ✘            ✘
pem          None         None         ✓            ✘            ✘
perl         ✘ perlnav…   None         ✓            ✓            ✓
php          ✘ intelep…   None         ✓            ✓            ✓
po           None         None         ✓            ✓            ✘
ponylang     None         None         ✓            ✓            ✓
prisma       ✘ prisma-…   None         ✓            ✘            ✘
prolog       ✘ swipl      None         ✘            ✘            ✘
protobuf     None         None         ✓            ✘            ✓
prql         None         None         ✓            ✘            ✘
purescript   ✘ purescr…   None         ✓            ✘            ✘
python       ✘ pylsp      None         ✓            ✓            ✓
qml          ✘ qmlls      None         ✓            ✘            ✓
r            ✘ R          None         ✓            ✘            ✘
racket       ✘ racket     None         ✓            ✘            ✘
regex        None         None         ✓            ✘            ✘
rego         ✘ regols     None         ✓            ✘            ✘
rescript     ✘ rescrip…   None         ✓            ✓            ✘
rmarkdown    ✘ R          None         ✓            ✘            ✓
robot        ✘ robotfr…   None         ✓            ✘            ✘
ron          None         None         ✓            ✘            ✓
rst          None         None         ✓            ✘            ✘
ruby         ✘ solargr…   None         ✓            ✓            ✓
rust         ✘ rust-an…   ✘ lldb-vs…   ✓            ✓            ✓
sage         None         None         ✓            ✓            ✘
scala        ✘ metals     None         ✓            ✘            ✓
scheme       None         None         ✓            ✘            ✘
scss         ✘ vscode-…   None         ✓            ✘            ✘
slint        ✘ slint-l…   None         ✓            ✘            ✓
smithy       ✘ cs         None         ✓            ✘            ✘
sml          None         None         ✓            ✘            ✘
solidity     ✘ solc       None         ✓            ✘            ✘
sql          None         None         ✓            ✘            ✘
sshclientco… None         None         ✓            ✘            ✘
starlark     None         None         ✓            ✓            ✘
svelte       ✘ sveltes…   None         ✓            ✘            ✘
sway         ✘ forc       None         ✓            ✓            ✓
swift        ✘ sourcek…   None         ✓            ✘            ✘
tablegen     None         None         ✓            ✓            ✓
task         None         None         ✓            ✘            ✘
tfvars       ✘ terrafo…   None         ✓            ✘            ✓
toml         ✘ taplo      None         ✓            ✘            ✘
tsq          None         None         ✓            ✘            ✘
tsx          ✘ typescr…   None         ✓            ✓            ✓
twig         None         None         ✓            ✘            ✘
typescript   ✘ typescr…   None         ✓            ✓            ✓
ungrammar    None         None         ✓            ✘            ✘
uxntal       None         None         ✓            ✘            ✘
v            ✘ v          None         ✓            ✓            ✓
vala         ✘ vala-la…   None         ✓            ✘            ✘
verilog      ✘ svlangs…   None         ✓            ✓            ✘
vhdl         ✘ vhdl_ls…   None         ✓            ✘            ✘
vhs          None         None         ✓            ✘            ✘
vue          ✘ vls        None         ✓            ✘            ✘
wast         None         None         ✓            ✘            ✘
wat          None         None         ✓            ✘            ✘
wgsl         ✘ wgsl_an…   None         ✓            ✘            ✘
wit          None         None         ✓            ✘            ✓
xit          None         None         ✓            ✘            ✘
xml          None         None         ✓            ✘            ✓
yaml         ✘ yaml-la…   None         ✓            ✘            ✓
yuck         None         None         ✓            ✘            ✘
zig          ✘ zls        ✘ lldb-vs…   ✓            ✓            ✓
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Instalace LSP a dalších nástrojů pro zvolený programovací jazyk</h2>

<p>Zkontrolujme si stav podpory pro nějaký programovací jazyk. V&nbsp;první
polovině článku se zaměříme na Python:</p>

<pre>
$ <strong>hx --health |grep python</strong>
&nbsp;
python       ✘ pylsp      None         ✓            ✓            ✓
</pre>

<p>Python je sice Helixem podporován, ovšem LSP pro něj nebyl nalezen, takže se
ve skutečnosti plná podpora nevyužije. Zobrazit si můžeme i podrobnější
informace:</p>

<pre>
$ <strong>hx --health python</strong>
&nbsp;
Configured language server: pylsp
Binary for language server: 'pylsp' not found in $PATH
Configured debug adapter: None
Highlight queries: ✓
Textobject queries: ✓
Indent queries: ✓
</pre>

<p>Náprava tohoto stavu je ve skutečnosti snadná. Jméno LSP známe &ndash;
zobrazil ho sám Helix, takže vyžadované LSP nainstalujeme. V&nbsp;případě
Pythonu se instalace provede přes <strong>pip</strong>:</p>

<pre>
$ <strong>pip3 install --user pylsp</strong>
</pre>

<p>Průběh instalace:</p>

<pre>
Defaulting to user installation because normal site-packages is not writeable
Collecting python-lsp-server
  Downloading python_lsp_server-1.7.3-py3-none-any.whl (68 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 69.0/69.0 KB 1.5 MB/s eta 0:00:00
Requirement already satisfied: jedi&lt;0.19.0,&gt;=0.17.2 in /home/user/.local/lib/python3.10/site-packages (from python-lsp-server) (0.18.1)
Collecting docstring-to-markdownf):
  Downloading docstring_to_markdown-0.12-py3-none-any.whl (18 kB)nd self.b+self.c&gt;self.a:
Collecting python-lsp-jsonrpc&gt;=1.0.0
  Downloading python_lsp_jsonrpc-1.0.0-py3-none-any.whl (8.5 kB)
Requirement already satisfied: setuptools&gt;=39.0.0 in /usr/lib/python3.10/site-packages (from python-lsp-server) (57.4.0)
Collecting ujson&gt;=3.0.0
  Downloading ujson-5.8.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (53 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 53.9/53.9 KB 4.4 MB/s eta 0:00:00
Collecting pluggy&gt;=1.0.0n True
  Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)
Requirement already satisfied: parso&lt;0.9.0,&gt;=0.8.0 in /home/user/.local/lib/python3.10/site-packages (from jedi&lt;0.19.0,&gt;=0.17.2-&gt;python-lsp-server) (0.8.3)
Installing collected packages: ujson, pluggy, docstring-to-markdown, python-lsp-jsonrpc, python-lsp-server
Successfully installed docstring-to-markdown-0.12 pluggy-1.2.0 python-lsp-jsonrpc-1.0.0 python-lsp-server-1.7.3 ujson-5.8.0
</pre>

<p>Navíc si nainstalujeme i podporu pro kontrolu typů, která je realizována
nástrojem Mypy:</p>

<pre>
$ <strong>pip3 install --user pylsp-mypy</strong>
&nbsp;
Collecting pylsp-mypy
  Downloading pylsp_mypy-0.6.7-py3-none-any.whl (10 kB)
Requirement already satisfied: mypy&gt;=0.981 in /usr/lib/python3.10/site-packages (from pylsp-mypy) (0.982)
Requirement already satisfied: tomli&gt;=1.1.0 in /usr/lib/python3.10/site-packages (from pylsp-mypy) (1.2.3)
Requirement already satisfied: python-lsp-server&gt;=1.7.0 in /home/user/.local/lib/python3.10/site-packages (from pylsp-mypy) (1.7.3)
Requirement already satisfied: typing_extensions&gt;=3.10 in /usr/lib/python3.10/site-packages (from mypy&gt;=0.981-&gt;pylsp-mypy) (3.10.0.2)
Requirement already satisfied: mypy_extensions&gt;=0.4.3 in /usr/lib/python3.10/site-packages (from mypy&gt;=0.981-&gt;pylsp-mypy) (0.4.3)
Requirement already satisfied: jedi&lt;0.19.0,&gt;=0.17.2 in /home/user/.local/lib/python3.10/site-packages (from python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (0.18.1)
Requirement already satisfied: docstring-to-markdown in /home/user/.local/lib/python3.10/site-packages (from python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (0.12)
Requirement already satisfied: ujson&gt;=3.0.0 in /home/user/.local/lib/python3.10/site-packages (from python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (5.8.0)
Requirement already satisfied: pluggy&gt;=1.0.0 in /home/user/.local/lib/python3.10/site-packages (from python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (1.2.0)
Requirement already satisfied: python-lsp-jsonrpc&gt;=1.0.0 in /home/user/.local/lib/python3.10/site-packages (from python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (1.0.0)
Requirement already satisfied: setuptools&gt;=39.0.0 in /usr/lib/python3.10/site-packages (from python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (57.4.0)
Requirement already satisfied: parso&lt;0.9.0,&gt;=0.8.0 in /home/user/.local/lib/python3.10/site-packages (from jedi&lt;0.19.0,&gt;=0.17.2-&gt;python-lsp-server&gt;=1.7.0-&gt;pylsp-mypy) (0.8.3)
Installing collected packages: pylsp-mypy
Successfully installed pylsp-mypy-0.6.7
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Konfigurace editoru a LSP</h2>

<p>Konfigurace editoru Helix je uložena v&nbsp;adresáři
<strong>~/.config/helix/config.toml</strong>. Jak název tohoto souboru
napovídá, je použit formát TOML, s&nbsp;nímž jsme se již na Rootu setkali.
Výchozí konfigurace Helixu umožňuje konformní práci (proto tento soubor ani
nemusí existovat), ovšem ukažme si, jak by mohlo vypadat například nastavení
kurzorů pro různé režimy editoru:</p>

<pre>
[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"
</pre>

<p>Nastavení editoru pro různé programovací jazyky je uloženo v&nbsp;tomtéž
adresáři, ovšem v&nbsp;souboru s&nbsp;názvem <strong>languages.toml</strong>.
Podívejme se, jak by mohlo vypadat nastavení pro Python, kde explicitně
povolujeme kontrolu typů přes Mypy:</p>

<pre>
[[language]]
name = "python"
language-server = { command = "pylsp"}
auto-format = true
&nbsp;
[language.config.pylsp.plugins]
mypy = {enabled = true, live_mode = true, strict = true}
</pre>

<p>Je ovšem možná i odlišná konfigurace postavená nikoli na
<strong>pylsp</strong> ale na <strong>pyright-langserver</strong>:</p>

<pre>
[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py"]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "Poetry.lock"]
comment-token = "#"
language-server = { command = "pyright-langserver", args = ["--stdio"] }
auto-format = false
indent = { tab-width = 4, unit = "    " }
config = {}
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Nové zjištění stavu LSP pro zvolený programovací jazyk</h2>

<p>Poté, co byl nainstalován LSP pro námi zvolený programovací jazyk
(v&nbsp;našem případě se jedná o Python), je vhodné zjistit, jestli textový
editor Helix skutečné daný LSP dokáže najít a začít používat. Pro tento účel
použijeme následující příkaz:</p>

<pre>
$ <strong>hx --health |grep python</strong>
&nbsp;
python       ✓ pylsp      None         ✓            ✓            ✓
</pre>

<p>Podrobnější informace se zjistí příkazem:</p>

<pre>
$ <strong>hx --health python</strong>
</pre>

<p>Helix by nyní na konzoli (terminál) měl vypsat informace o tom, že podpora
pro Python závisí na <strong>pylsp</strong> a v&nbsp;jakém adresáři byl tento
server nalezen:</p>

<pre>
Configured language server: pylsp
Binary for language server: /home/user/.local/bin/pylsp
Configured debug adapter: None
Highlight queries: ✓
Textobject queries: ✓
Indent queries: ✓
</pre>

<p>V&nbsp;případě, že na konzoli skutečně uvidíte podobnou zprávu, je velmi
pravděpodobné, že všechny &bdquo;programátorské&ldquo; funkce pro Python budou
v&nbsp;Helixu již bez problémů dostupné.</p>

<p><div class="rs-tip-major">Poznámka: podpora pro debugger není nainstalována;
k&nbsp;tomuto problému se ovšem ještě vrátíme.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Nastavení xtermu pro Helix</h2>

$ export COLORTERM=24bit
$ export  TERM=xterm-256color



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Helix: nový modální textový editor inspirovaný Vimem a Kakoune<br />
<a href="https://www.root.cz/clanky/helix-novy-modalni-textovy-editor-inspirovany-vimem-a-kakoune/">https://www.root.cz/clanky/helix-novy-modalni-textovy-editor-inspirovany-vimem-a-kakoune/</a>
</li>

<li>Představení Helixu<br />
<a href="https://helix-editor.com/">https://helix-editor.com/</a>
</li>

<li>Helix: A post-modern modal text editor<br />
<a href="https://githubplus.com/helix-editor/helix">https://githubplus.com/helix-editor/helix</a>
</li>

<li>Helix na GitHubu<br />
<a href="https://github.com/helix-editor/helix">https://github.com/helix-editor/helix</a>
</li>

<li>Helix: dokumentace<br />
<a href="https://docs.helix-editor.com/">https://docs.helix-editor.com/</a>
</li>

<li>Helix: troubleshooting<br />
<a href="https://github.com/helix-editor/helix/wiki/Troubleshooting">https://github.com/helix-editor/helix/wiki/Troubleshooting</a>
</li>

<li>Klávesové zkratky Helixu<br />
<a href="https://docs.helix-editor.com/keymap.html">https://docs.helix-editor.com/keymap.html</a>
</li>

<li>How to install the default language servers<br />
<a href="https://github.com/helix-editor/helix/wiki/How-to-install-the-default-language-servers">https://github.com/helix-editor/helix/wiki/How-to-install-the-default-language-servers</a>
</li>

<li>Taking a look at the Helix editor (Nov 5th, 2022)<br />
<a href="https://www.youtube.com/watch?v=8L308PdmhMY">https://www.youtube.com/watch?v=8L308PdmhMY</a>
</li>

<li>Helix &ndash; the Rust Powered Development Environment<br />
<a href="https://www.youtube.com/watch?v=xHebvTGOdH8">https://www.youtube.com/watch?v=xHebvTGOdH8</a>
</li>

<li>Python LSP setups for productive coding<br />
<a href="https://www.reddit.com/r/HelixEditor/comments/13wpa72/python_lsp_setups_for_productive_coding/">https://www.reddit.com/r/HelixEditor/comments/13wpa72/python_lsp_setups_for_productive_coding/</a>
</li>

<li>Helix documentation: Configuration<br />
<a href="https://docs.helix-editor.com/configuration.html">https://docs.helix-editor.com/configuration.html</a>
</li>

<li>Helix documentation: Languages<br />
<a href="https://docs.helix-editor.com/master/languages.html">https://docs.helix-editor.com/master/languages.html</a>
</li>

<li>Looking to try Helix. How is support for Python?<br />
<a href="https://www.reddit.com/r/HelixEditor/comments/119mhch/looking_to_try_helix_how_is_support_for_python/">https://www.reddit.com/r/HelixEditor/comments/119mhch/looking_to_try_helix_how_is_support_for_python/</a>
</li>

<li>Python LSP Server (GitHub)<br />
<a href="https://github.com/python-lsp/python-lsp-server#configuration">https://github.com/python-lsp/python-lsp-server#configuration</a>
</li>

<li>(dot file): Helix<br />
<a href="https://github.com/gerlacdt/dotfiles/blob/e50ea089dbfd5e71e2cb6c10abfde305bf4a5b6e/helix/.config/helix/languages.toml#L2">https://github.com/gerlacdt/dotfiles/blob/e50ea089dbfd5e71e2cb6c10abfde305bf4a5b6e/helix/.config/helix/languages.toml#L2</a>
</li>

<li>gopls<br />
<a href="https://www.getman.io/posts/gopls/">https://www.getman.io/posts/gopls/</a>
</li>

<li>Kakoune: A Better Code Editor Heavily Inspired by Vim<br />
<a href="https://www.tecmint.com/kakoune-better-code-editor-for-linux/">https://www.tecmint.com/kakoune-better-code-editor-for-linux/</a>
</li>

<li>Kakoune demo<br />
<a href="https://vimeo.com/82711574">https://vimeo.com/82711574</a>
</li>

<li>6 Best Vi/Vim-Inspired Code Editors for Linux<br />
<a href="https://www.tecmint.com/vi-vim-inspired-code-editors-for-linux/">https://www.tecmint.com/vi-vim-inspired-code-editors-for-linux/</a>
</li>

<li>Why Kakoune — The quest for a better code editor<br />
<a href="https://kakoune.org/why-kakoune/why-kakoune.html">https://kakoune.org/why-kakoune/why-kakoune.html</a>
</li>

<li>Kakoune design<br />
<a href="https://github.com/mawww/kakoune/blob/master/doc/design.asciidoc">https://github.com/mawww/kakoune/blob/master/doc/design.asciidoc</a>
</li>

<li>Kakoune (modální textový editor)<br />
<a href="http://kakoune.org/">http://kakoune.org/</a>
</li>

<li>Kakoune: Selections<br />
<a href="https://github.com/mawww/kakoune/wiki/Selections">https://github.com/mawww/kakoune/wiki/Selections</a>
</li>

<li>Migrating from Vim<br />
<a href="https://github.com/mawww/kakoune/wiki/Migrating-from-Vim">https://github.com/mawww/kakoune/wiki/Migrating-from-Vim</a>
</li>

<li>kakoune-vertical-selections<br />
<a href="https://github.com/occivink/kakoune-vertical-selection">https://github.com/occivink/kakoune-vertical-selection</a>
</li>

<li>Langserver.org<br />
<a href="https://langserver.org/">https://langserver.org/</a>
</li>

<li>Language Server Protocol<br />
<a href="https://microsoft.github.io/language-server-protocol/">https://microsoft.github.io/language-server-protocol/</a>
</li>

<li>Language Server Protocol Specification<br />
<a href="https://microsoft.github.io/language-server-protocol/specification">https://microsoft.github.io/language-server-protocol/specification</a>
</li>

<li>Implementations Language Servers<br />
<a href="https://microsoft.github.io/language-server-protocol/implementors/servers">https://microsoft.github.io/language-server-protocol/implementors/servers</a>
</li>

<li>JSON-RPC 2.0 Specification<br />
<a href="https://www.jsonrpc.org/specification">https://www.jsonrpc.org/specification</a>
</li>

<li>Why You Should Know the Language Server Protocol<br />
<a href="https://tomassetti.me/what-is-the-language-server-protocol/">https://tomassetti.me/what-is-the-language-server-protocol/</a>
</li>

<li>Language Server Protocol: A Language Server For DOT With Visual Studio Code<br />
<a href="https://tomassetti.me/language-server-dot-visual-studio/">https://tomassetti.me/language-server-dot-visual-studio/</a>
</li>

<li>Python Language Server<br />
<a href="https://github.com/palantir/python-language-server">https://github.com/palantir/python-language-server</a>
</li>

<li>Jedi - an awesome autocompletion/static analysis library for Python<br />
<a href="https://github.com/davidhalter/jedi">https://github.com/davidhalter/jedi</a>
</li>

<li>What is lsp<br />
<a href="https://www.reddit.com/r/vim/comments/7lnhrt/which_lsp_plugin_should_i_use/">https://www.reddit.com/r/vim/comments/7lnhrt/which_lsp_plugin_should_i_use/</a>
</li>

<li>Evil (Emacs Wiki)<br />
<a href="https://www.emacswiki.org/emacs/Evil">https://www.emacswiki.org/emacs/Evil</a>
</li>

<li>Evil (na GitHubu)<br />
<a href="https://github.com/emacs-evil/evil">https://github.com/emacs-evil/evil</a>
</li>

<li>Evil (na stránkách repositáře MELPA)<br />
<a href="https://melpa.org/#/evil">https://melpa.org/#/evil</a>
</li>

<li>Evil Mode: How I Switched From VIM to Emacs<br />
<a href="https://blog.jakuba.net/2014/06/23/evil-mode-how-to-switch-from-vim-to-emacs.html">https://blog.jakuba.net/2014/06/23/evil-mode-how-to-switch-from-vim-to-emacs.html</a>
</li>

<li>Vrapper aneb spojení možností Vimu a Eclipse<br />
<a href="https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse/">https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse/</a>
</li>

<li>Vrapper aneb spojení možností Vimu a Eclipse (část 2: vyhledávání a nahrazování textu)<br />
<a href="https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse-cast-2-vyhledavani-a-nahrazovani-textu/">https://mojefedora.cz/vrapper-aneb-spojeni-moznosti-vimu-a-eclipse-cast-2-vyhledavani-a-nahrazovani-textu/</a>
</li>

<li>Emacs/Evil-mode - A basic reference to using evil mode in Emacs<br />
<a href="http://www.aakarshnair.com/posts/emacs-evil-mode-cheatsheet">http://www.aakarshnair.com/posts/emacs-evil-mode-cheatsheet</a>
</li>

<li>From Vim to Emacs+Evil chaotic migration guide<br />
<a href="https://juanjoalvarez.net/es/detail/2014/sep/19/vim-emacsevil-chaotic-migration-guide/">https://juanjoalvarez.net/es/detail/2014/sep/19/vim-emacsevil-chaotic-migration-guide/</a>
</li>

<li>Introduction to evil-mode {video)<br />
<a href="https://www.youtube.com/watch?v=PeVQwYUxYEg">https://www.youtube.com/watch?v=PeVQwYUxYEg</a>
</li>

<li>Vim-style keybinding in Emacs/Evil-mode<br />
<a href="https://gist.github.com/troyp/6b4c9e1c8670200c04c16036805773d8">https://gist.github.com/troyp/6b4c9e1c8670200c04c16036805773d8</a>
</li>

<li>Evil-surround<br />
<a href="https://github.com/emacs-evil/evil-surround">https://github.com/emacs-evil/evil-surround</a>
</li>

<li>Spacemacs<br />
<a href="http://spacemacs.org/">http://spacemacs.org/</a>
</li>

<li>Neovim: literally the future of vim<br />
<a href="https://neovim.io/">https://neovim.io/</a>
</li>

<li>AMP – A Vi/Vim Inspired Text Editor for Linux Terminal<br />
<a href="https://www.tecmint.com/amp-vi-vim-inspired-text-editor-for-linux/">https://www.tecmint.com/amp-vi-vim-inspired-text-editor-for-linux/</a>
</li>

<li>Amp: A text editor for your terminal<br />
<a href="https://github.com/jmacdonald/amp">https://github.com/jmacdonald/amp</a>
</li>

<li>Stránky projektu Amp.rs<br />
<a href="https://amp.rs/">https://amp.rs/</a>
</li>

<li>Dokumentace k editoru Amp<br />
<a href="https://amp.rs/docs/">https://amp.rs/docs/</a>
</li>

<li>Vis: a vi-like editor based on Plan 9's structural regular expressions <br />
<a href="https://github.com/martanne/vis">https://github.com/martanne/vis</a>
</li>

<li>Very opinionated Node.JS VI clone<br />
<a href="https://github.com/mikesmullin/nvi">https://github.com/mikesmullin/nvi</a>
</li>

<li>PyVim: Pure Python Vim clone<br />
<a href="https://github.com/prompt-toolkit/pyvim">https://github.com/prompt-toolkit/pyvim</a>
</li>

<li>pyvim 2.0.24 na PyPi<br />
<a href="https://pypi.org/project/pyvim/">https://pypi.org/project/pyvim/</a>
</li>

<li>vim2elvis (1)<br />
<a href="https://www.root.cz/clanky/vim2elvis-1/">https://www.root.cz/clanky/vim2elvis-1/</a>
</li>

<li>vim2elvis (2)<br />
<a href="https://www.root.cz/clanky/vim2elvis-2/">https://www.root.cz/clanky/vim2elvis-2/</a>
</li>

<li>Seriál Textový editor Vim jako IDE<br />
<a href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">https://www.root.cz/serialy/textovy-editor-vim-jako-ide/</a>
</li>

<li>Obsah Rootu označený nálepkou Vim<br />
<a href="https://www.root.cz/n/vim/">https://www.root.cz/n/vim/</a>
</li>

<li>Atom: moderní textový editor<br />
<a href="https://www.root.cz/clanky/atom-moderni-textovy-editor/">https://www.root.cz/clanky/atom-moderni-textovy-editor/</a>
</li>

<li>Atom: moderní textový editor (dokončení)<br />
<a href="https://www.root.cz/clanky/atom-moderni-textovy-editor-dokonceni/">https://www.root.cz/clanky/atom-moderni-textovy-editor-dokonceni/</a>
</li>

<li>Why I switched to VIM from Visual Studio Code<br />
<a href="https://freshman.tech/from-vscode-to-vim/">https://freshman.tech/from-vscode-to-vim/</a>
</li>

<li>VSCodeVim<br />
<a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim">https://marketplace.visualstudio.com/items?itemName=vscodevim.vim</a>
</li>

<li>VSCodeVim/Vim na GitHubu<br />
<a href="https://github.com/VSCodeVim/Vim">https://github.com/VSCodeVim/Vim</a>
</li>

<li>How Vim killed Atom and VSCode on my Machine<br />
<a href="https://medium.com/@aswinmohanme/how-vim-killed-atom-and-vscode-723a68ad59dc">https://medium.com/@aswinmohanme/how-vim-killed-atom-and-vscode-723a68ad59dc</a>
</li>

<li>tree-sitter<br />
<a href="https://github.com/tree-sitter/tree-sitter">https://github.com/tree-sitter/tree-sitter</a>
</li>

<li>Introduction: tree-siter<br />
<a href="https://tree-sitter.github.io/tree-sitter/">https://tree-sitter.github.io/tree-sitter/</a>
</li>

<li>tree-siter: Queries<br />
<a href="https://tree-sitter.github.io/tree-sitter/syntax-highlighting#queries">https://tree-sitter.github.io/tree-sitter/syntax-highlighting#queries</a>
</li>

<li>Textový editor Vim jako IDE<br />
<a href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide/">https://www.root.cz/clanky/textovy-editor-vim-jako-ide/</a>
</li>

<li>Textový editor Vim jako IDE (2.část)<br />
<a href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide-2-cast/">https://www.root.cz/clanky/textovy-editor-vim-jako-ide-2-cast/</a>
</li>

<li>Textový editor Vim jako IDE (3.část) <br />
<a href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide-3-cast/">https://www.root.cz/clanky/textovy-editor-vim-jako-ide-3-cast/</a>
</li>

<li>Textový editor Vim jako IDE (4.část)<br />
<a href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide-4-cast/">https://www.root.cz/clanky/textovy-editor-vim-jako-ide-4-cast/</a>
</li>

<li>Textový editor Vim jako IDE (5.část)<br />
<a href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide-5-cast/">https://www.root.cz/clanky/textovy-editor-vim-jako-ide-5-cast/</a>
</li>

<li>A Comprehensive Introduction to Tree-sitter<br />
<a href="https://derek.stride.host/posts/comprehensive-introduction-to-tree-sitter">https://derek.stride.host/posts/comprehensive-introduction-to-tree-sitter</a>
</li>

<li>Guide to your first Tree-sitter grammar<br />
<a href="https://gist.github.com/Aerijo/df27228d70c633e088b0591b8857eeef">https://gist.github.com/Aerijo/df27228d70c633e088b0591b8857eeef</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

