<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Rozsáhlý svět značkovacích jazyků</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Rozsáhlý svět značkovacích jazyků</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Rozsáhlý svět značkovacích jazyků</a></p>
<p><a href="#k02">*** 2. Stručná historie značkovacích jazyků</a></p>
<p><a href="#k03">*** 3. Nástroj <strong>roff</strong></a></p>
<p><a href="#k04">*** 4. Následovníci <strong>roffu</strong> &ndash; <strong>troff</strong> a <strong>nroff</strong></a></p>
<p><a href="#k05">*** 5. Makra pro <strong>troff</strong></a></p>
<p><a href="#k06">*** 6. Preprocesory pro <strong>troff</strong></a></p>
<p><a href="#k07">*** 7. Rodina značkovacích jazyků založená na TeXu</a></p>
<p><a href="#k08">*** 8. SGML, XML a DocBook</a></p>
<p><a href="#k09">*** 9. HTML a HTMLBook</a></p>
<p><a href="#k10">*** 10. Postmoderní značkovací jazyky &ndash; cesta ke zjednodušení a minimalismu</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. Značkovací jazyky vs. řídicí kódy</a></p>
<p><a href="#k17">*** 17. WordStar</a></p>
<p><a href="#k18">*** 18. WordPerfect</a></p>
<p><a href="#k19">*** 19. Text602</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Rozsáhlý svět značkovacích jazyků</h2>

<p>V&nbsp;dnešním článku</p>

<p>Původně byly značkovací jazyky skutečně používány především pro vkládání různých formátovacích nebo sémantických značek do víceméně lineárních textů, ovšem později došlo k&nbsp;rozšíření použití specializovaných značkovacích jazyků i do dalších oblastí. Například se jedná o jazyky určené pro popis uživatelských rozhraní, vektorových kreseb (SVG, <a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/#k06">DOT</a>), služeb (typicky webových služeb), výtahu obsahu (RSS, Atom, JSON Feed), vizualizaci diagramů (<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/#k03">PlantUML</a>) atd. V&nbsp;některých případech se ale již nejedná o klasické značkovací jazyky, ale o doménově specifické jazyky se složitější syntaxí a sémantikou. Dobrým příkladem může být například jazyk a současně i souborový formát používaný <a href="https://www.root.cz/serialy/vykreslujeme-3d-sceny-s-pov-ray/">známým raytracerem POV-Ray</a> (poslední varianty jazyka POV-Raye podporují makra, tvorbu programových smyček atd.).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Stručná historie značkovacích jazyků</h2>

<p></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Nástroj <strong>roff</strong></h2>

<p></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Následovníci <strong>roffu</strong> &ndash; <strong>troff</strong> a <strong>nroff</strong></h2>

<p></p>

<p></p>

<p><i>&bdquo;Can you imagine anyone rewriting troff from scratch, in what ended up as about 60,000 lines of C++? Wow, I am impressed. If it were not for James' freely available reimplementation, troff would be dead by now.&ldquo;</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Makra pro <strong>troff</strong></h2>

<p></p>

<table>
<tr><th></th><th></th></tr>
<tr><td>man</td><td>manuálové stránky</td></tr>
<tr><td>mdoc</td><td>sémanticky anotované manuálové stránky</td></tr>
<tr><td>me</td><td>vědecké články</td></tr>
<tr><td>mm</td><td>memoranda</td></tr>
<tr><td>ms</td><td>knihy a technická dokumentace</td></tr>
<tr><td>rfc</td><td>psaní RFC</td></tr>
<tr><td>present</td><td>prezentace</td></tr>
</table>



<p><a name="k06"></a></p>
<h2 id="k06">6. Preprocesory pro <strong>troff</strong></h2>

<p>Pro systém <strong>troff</strong> vzniklo i poměrně velké množství různých <i>preprocesorů</i>, tedy nástrojů, které získají vstupní data, nějakým způsobem je zpracují a výsledkem jsou data ve formátu zpracovatelném právě <strong>troffem</strong>. Tato architektura velmi dobře zapadá do konceptu Unixu, tedy do způsobu tvorby rozsáhlejších aplikací z&nbsp;menších částí propojených s&nbsp;využitím rour (<i>pipes</i>).</p>

<table>
<tr><th></th><th></th></tr>
<tr><td>eqn</td><td>matematické vzorce</td></tr>
<tr><td>tbl</td><td>tabulky</td></tr>
<tr><td>refer</td><td>citace</td></tr>
<tr><td>pic</td><td>základní kreslící funkce</td></tr>
<tr><td>ideal</td><td>deklarativní specifikace grafiky</td></tr>
<tr><td>grn</td><td>tvorba obrázků kreslením základních grafických elementů</td></tr>
</table>

<p>To však není vše, protože myšlenku propojení více nástrojů pomocí rour lze ještě dále rozšířit.</p>

<table>
<tr><th></th><th></th></tr>
<tr><td>grap</td><td>grafy, diagramy a histogramy</td></tr>
<tr><td>chem</td><td><a href="https://en.wikipedia.org/wiki/Structural_formula">molekulární struktury</a></td></tr>
<tr><td>dformat</td><td>datové struktury</td></tr>
</table>



<p><a name="k07"></a></p>
<h2 id="k07">7. Rodina značkovacích jazyků založená na TeXu</h2>

<p></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. SGML, XML a DocBook</h2>

<p></p>

<p>Dalším důležitým značkovacím jazykem, o němž se v&nbsp;dnešním článku musíme zmínit, je <i>DocBook</i>. Jak již název tohoto jazyka napovídá, je jeho primárním účelem ukládání strukturovaných dokumentů. Všechny DocBookové značky jsou navíc čistě sémantické, tj.&nbsp;označují, o jaký text se jedná a nikoli jakým způsobem má být zobrazen. To je velmi důležité v&nbsp;oblastech, ve kterých se DocBook nasazuje &ndash; poloautomatická tvorba manuálů, dokumentace k&nbsp;API (mnohdy taktéž automaticky či poloautomaticky generovaná) atd. Samotné vysázení dokumentu se provádí například transformací pomocí XSL-FO (<i>XSL Formatting Objects</i>) nebo převodem do jiného formátu (včetně HTML). Ovšem právě proto, že DocBook obsahuje čistě sémantické značky, může být jeho použití pro některé autory problematické (celkový počet značek <a href="https://tdg.docbook.org/tdg/5.0/chunk-part-d64e8789.html">dosahuje několika set</a>). Z&nbsp;tohoto důvodu byl navržen upravený jazyk nazvaný příznačně <i>Simplified DocBook</i> určený převážně pro tvorbu článků (značka &bdquo;book&ldquo; zde vůbec není povolena).</p>

<p></p>

<pre>
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;book xml:id="simple_book" xmlns="http://docbook.org/ns/docbook" version="5.0"&gt;
   &lt;title&gt;Very simple book&lt;/title&gt;
   &lt;chapter xml:id="chapter_1"&gt;
     &lt;title&gt;Chapter 1&lt;/title&gt;
     &lt;para&gt;Hello world!&lt;/para&gt;
     &lt;para&gt;I hope that your day is proceeding &lt;emphasis&gt;splendidly&lt;/emphasis&gt;!&lt;/para&gt;
   &lt;/chapter&gt;
   &lt;chapter xml:id="chapter_2"&gt;
     &lt;title&gt;Chapter 2&lt;/title&gt;
     &lt;para&gt;Hello again, world!&lt;/para&gt;
   &lt;/chapter&gt;
 &lt;/book&gt;
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. HTML a HTMLBook</h2>

<p></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Postmoderní značkovací jazyky &ndash; cesta ke zjednodušení a minimalismu</h2>

<ul>
<li>AsciiDoc</li>
<li>atx</li>
<li>BBCode</li>
<li>Creole</li>
<li>Crossmark</li>
<li>Epytext</li>
<li>Haml</li>
<li>JsonML</li>
<li>MakeDoc</li>
<li>Markdown</li>
<li>Org</li>
<li>ode</li>
<li>POD</li>
<li>reST</li>
<li>RD</li>
<li>Setext</li>
<li>SiSU</li>
<li>SPIP</li>
<li>Xupl</li>
<li>Texy</li>
<li>Textile</li>
<li>txt2tags</li>
<li>UDO</li>
<li>nd</li>
<li>wikitext</li>
</ul>



<p><a name="k11"></a></p>
<h2 id="k11">11. POD a RD</h2>

Plain Old Documentation

<p></p>

<pre>
=head1 NAME

emend - a command-line interface for Emender

=head1 SYNOPSIS

B<emend> [B<-clsvDT>] [B<-o> I<output_file>] [I<test_file>...]

B<emend> B<-h>|B<-V>|B<-L>

=head1 DESCRIPTION

The B<emend> utility runs tests stored in the local file system and prints
a detailed report to standard output. By default, the utility looks for
tests in the F<test> directory, but you can specify individual tests on the
command line.

=head1 OPTIONS

=over

=item B<-o> I<output_file>, B<--output> I<output_file>

Stores a detailed report to the file named I<output_file>. The B<emend>
utility deduces the format of the output file form the file extension:
currently recognized file extensions are B<.txt> (plain text), B<.html>
(HTML), B<.xml> (XML as described in B<emender_xml>(5)), and B<.junit>
(JUnit XML output). Note that you can specify the B<-o> option more than
once to generate the report in multiple formats.
</pre>

https://github.com/emender/emender/blob/master/doc/man/man1/emend.1.pod

Ruby Document format

<pre>
=begin
= NAME
RD sample - A sample RD document

= SYNOPSIS
 here.is_a?(Piece::Of::Code)
 print <<"END"
 This indented block will not be scanned for formatting
 codes or directives, and spacing will be preserved.
 END

= DESCRIPTION
Here's some normal text.  It includes text that is
((*emphasized*)), ((%keyboard%)), (({code}))-formatted,
((|variable part|)), ((:indexed:)), and (('as-is'))((-footnote-)).

== An Example List
* This is a bulleted list.
* Here's another item.
  * Nested list item.

== An ordered List
(1) This is the first item
(2) second
    * Nested unordered list.
(3) third
    (1) Nested ordered list
    (2) its second item

=end
</pre>

https://ruby.github.io/rdoc/



<p><a name="k12"></a></p>
<h2 id="k12">12. AsciiDoc</h2>

<p></p>

<pre>
# Technical Accuracy Tests

## What it is

This is a test for [Emender](https://github.com/emender/emender) framework. It checks all the links in documentation and analyzes their behavior. For example, it reports non-functional or blacklisted external links.

## How to run it
To run the test locally, follow these steps.
1. Download the repository to your local machine. You don't need to have the test and documentation in the same folder. In fact, it's advisable not to.
2. Download Emender framework [here](https://github.com/emender/emender).
3. Install Emender by navigating into the source code directory and running `sudo make install`.
4. Download documentation files into a separate folder. This folder must either include a publican.cfg file with documentation config (DocBook format) or master.adoc (AsciiDoc format).
5. Before running the tests, make sure to install these dependencies:
~~~~~~~~
sudo dnf install curl wget lua; gem install asciidoctor
~~~~~~~~
6. You're ready to run the test! Through command line navigate to the documentation folder (or the folder where you want to store the results). From this folder run the following command:
~~~~~~~~
PATH_TO_TEST_DIR/run.sh --XdocDir=PATH_TO_DOC_DIR
Only provide "docDir" argument if the documentation folder is different from the folder you're currently in.
~~~~~~~~
This will run a shell script that basically does all the dirty work before running the actual test. After running it you should see the test output on the screen, as well as a bunch of results.* files in the current folder. These files provide the results in various formats.
7. Add any extra parameters to Emender by using them as shell script arguments. Consult [this](https://github.com/emender/emender/blob/master/doc/man/man1/emend.1.pod) page for more info.
8. Add extra parameters to the test itself by using them as shell script arguments. Use this construct to do so: `--XparamName=paramValue`
You can, for example, add "blacklistedLinks", "exampleList" and "internalList" in this manner: `--XblacklistedLinks="link1, link2, link3, ..."`

## License

*technical-accuracy-tests* is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published by the
Free Software Foundation; version 3 of the License.

*technical-accuracy-tests* is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the [GNU General Public
License](http://www.gnu.org/licenses/) for more details.
</pre>

https://github.com/emender/technical-accuracy-tests/blob/master/README.md



<p><a name="k13"></a></p>
<h2 id="k13">13. reST</h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Markdown</h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Texy!</h2>

<p></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Značkovací jazyky vs. řídicí kódy</h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. WordStar</h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. WordPerfect</h2>

<p>Klíčové vlastnosti svého textového procesoru &ndash; použití implicitního vkládacího režimu, automatické reformátování textu a řízené skrývání či zobrazování řídicích značek (<i>reveal codes</i>) &ndash; popsal <i>Alan Ashton</i> ve specifikaci o délce cca padesáti stránek, která byla dokončena již na konci prázdnin roku 1977. Ovšem kromě &bdquo;pouhé&ldquo; specifikace měl již naprogramovány některé nejdůležitější a nejzajímavější algoritmy, především vlastní vkládací režim a podprogramy pro automatické přeformátování textu po každé editační operaci. Přitom se nejedná o zcela primitivní záležitost, protože zejména na pomalejších počítačích bylo nutné provádět různé optimalizace (například při vložení znaku na začátek dokumentu je neefektivní posouvat celým dokumentem v&nbsp;paměti, takže se používají gap buffery atd.).</p>

<p>Z&nbsp;pohledu dnešního článku je nejdůležitější právě skutečnost, že tento textový procesor dokázal na požádání rozbrazovat řídicí značky vkládané do textu (funkce <i>reveal codes</i> zmíněná v&nbsp;předchozím odstavci). To naznačuje, jakým způsobem vlastně byly dokumenty interně organizovány &ndash; jako sekvence znaků doplněná o řídicí značky (sekvence bajtů), tedy vlastně velmi podobným způsobem, jako je tomu ve značkovacích jazycích.</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Text602</h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Text Processor for Typesetters<br />
<a href="https://troff.org/">https://troff.org/</a>
</li>

<li>The history of troff<br />
<a href="https://troff.org/history.html">https://troff.org/history.html</a>
</li>

<li>Macro packages (for troff)<br />
<a href="https://troff.org/macros.html">https://troff.org/macros.html</a>
</li>

<li>Markup language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Markup_language">https://en.wikipedia.org/wiki/Markup_language</a>
</li>

<li>roff (software)<br />
<a href="https://en.wikipedia.org/wiki/Roff_(software)">https://en.wikipedia.org/wiki/Roff_(software)</a>
</li>

<li>Troff Resources<br />
<a href="http://www.kohala.com/start/troff/troff.html">http://www.kohala.com/start/troff/troff.html</a>
</li>

<li>List of markup languages (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/List_of_markup_languages">https://en.wikipedia.org/wiki/List_of_markup_languages</a>
</li>

<li>Lightweight markup language<br />
<a href="https://en.wikipedia.org/wiki/Lightweight_markup_language">https://en.wikipedia.org/wiki/Lightweight_markup_language</a>
</li>

<li>WordPerfect<br />
<a href="http://texteditors.org/cgi-bin/wiki.pl?WordPerfect">http://texteditors.org/cgi-bin/wiki.pl?WordPerfect</a>
</li>

<li>RSS (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/RSS">https://en.wikipedia.org/wiki/RSS</a>
</li>

<li>XML RSS<br />
<a href="https://www.w3schools.com/XML/xml_rss.asp">https://www.w3schools.com/XML/xml_rss.asp</a>
</li>

<li>Atom (Web standard)<br />
<a href="https://en.wikipedia.org/wiki/Atom_(Web_standard)">https://en.wikipedia.org/wiki/Atom_(Web_standard)</a>
</li>

<li>JSON feed<br />
<a href="https://jsonfeed.org/">https://jsonfeed.org/</a>
</li>

<li>Nástroje pro tvorbu grafů a diagramů z příkazové řádky (root.cz)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z příkazové řádky (root.cz)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z příkazové řádky (II) (root.cz)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/</a>
</li>

<li>Making Pictures With GNU PIC<br />
<a href="http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/pic.html">http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/pic.html</a>
</li>

<li>What is Texy<br />
<a href="https://texy.info/en/">https://texy.info/en/</a>
</li>

<li>Texy AJAX Editor<br />
<a href="https://editor.texy.info/en/try/">https://editor.texy.info/en/try/</a>
</li>

<li>Texy help<br />
<a href="https://editor.texy.info/help/">https://editor.texy.info/help/</a>
</li>

<li>Texy syntax<br />
<a href="https://texy.info/en/syntax">https://texy.info/en/syntax</a>
</li>

<li>Atlas<br />
<a href="https://docs.atlas.oreilly.com/index.html">https://docs.atlas.oreilly.com/index.html</a>
</li>

<li>Atlas &ndash; Writing in Markdown<br />
<a href="https://docs.atlas.oreilly.com/writing_in_markdown.html">https://docs.atlas.oreilly.com/writing_in_markdown.html</a>
</li>

<li>Atlas &ndash; Writing in AsciiDoc<br />
<a href="https://docs.atlas.oreilly.com/writing_in_asciidoc.html">https://docs.atlas.oreilly.com/writing_in_asciidoc.html</a>
</li>

<li>HTMLBook<br />
<a href="https://github.com/oreillymedia/HTMLBook">https://github.com/oreillymedia/HTMLBook</a>
</li>

<li>HTMLBook (Draft)<br />
<a href="http://oreillymedia.github.io/HTMLBook/">http://oreillymedia.github.io/HTMLBook/</a>
</li>

<li>HTMLBook schema<br />
<a href="https://github.com/oreillymedia/HTMLBook/tree/master/schema">https://github.com/oreillymedia/HTMLBook/tree/master/schema</a>
</li>

<li>DocBook<br />
<a href="https://en.wikipedia.org/wiki/DocBook">https://en.wikipedia.org/wiki/DocBook</a>
</li>

<li>An introduction to DocBook, a flexible markup language worth learning<br />
<a href="https://opensource.com/article/17/9/docbook">https://opensource.com/article/17/9/docbook</a>
</li>

<li>DocBook 5: The Definitive Guide<br />
<a href="https://tdg.docbook.org/tdg/5.0/docbook.html">https://tdg.docbook.org/tdg/5.0/docbook.html</a>
</li>

<li>CommonMark<br />
<a href="https://commonmark.org/">https://commonmark.org/</a>
</li>

<li>XSL Formatting Objects<br />
<a href="https://en.wikipedia.org/wiki/XSL_Formatting_Objects">https://en.wikipedia.org/wiki/XSL_Formatting_Objects</a>
</li>

Ruby Document format
https://en.wikipedia.org/wiki/Ruby_Document_format

RDoc - Ruby Documentation System
https://ruby.github.io/rdoc/

Plain Old Documentation
https://en.wikipedia.org/wiki/Plain_Old_Documentation

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

