<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Rozsáhlý svět značkovacích jazyků</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Rozsáhlý svět značkovacích jazyků</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Rozsáhlý svět značkovacích jazyků</a></p>
<p><a href="#k02">2. Stručná historie značkovacích jazyků</a></p>
<p><a href="#k03">3. Nástroj <strong>roff</strong></a></p>
<p><a href="#k04">4. Následovníci <strong>roffu</strong> &ndash; <strong>troff</strong> a <strong>nroff</strong></a></p>
<p><a href="#k05">5. Makra pro <strong>troff</strong></a></p>
<p><a href="#k06">6. Preprocesory pro <strong>troff</strong> a preprocesory preprocesorů</a></p>
<p><a href="#k07">7. Rodina značkovacích jazyků založená na TeXu</a></p>
<p><a href="#k08">*** 8. SGML, XML a DocBook</a></p>
<p><a href="#k09">*** 9. HTML a HTMLBook</a></p>
<p><a href="#k10">10. Postmoderní značkovací jazyky &ndash; cesta ke zjednodušení a minimalismu</a></p>
<p><a href="#k11">*** 11. POD a RD</a></p>
<p><a href="#k12">*** 12. AsciiDoc</a></p>
<p><a href="#k13">*** 13. reST (reStructuredText)</a></p>
<p><a href="#k14">*** 14. Markdown a CommonMark</a></p>
<p><a href="#k15">*** 15. Texy!</a></p>
<p><a href="#k16">16. Značkovací jazyky vs. řídicí kódy</a></p>
<p><a href="#k17">*** 17. WordStar</a></p>
<p><a href="#k18">*** 18. WordPerfect</a></p>
<p><a href="#k19">*** 19. Text602</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Rozsáhlý svět značkovacích jazyků</h2>

<p>V&nbsp;dnešním článku se seznámíme s&nbsp;takzvanými značkovacími jazyky
(<i>markup language</i>). V&nbsp;současnosti se jedná o dosti rozsáhlou skupinu
jazyků, které se od sebe mnohdy velmi výrazným způsobem odlišují, a to jak
vyjadřovacími schopnostmi, tak například tím, jakým způsobem (a zda vůbec) je
formálně popsána jejich syntaxe a sémantika, popř.&nbsp;zda definované značky
umožňují specifikaci významu textu či &bdquo;pouze&ldquo; způsobu jeho výsledné
reprezentace (na obrazovce či vytištěné stránce) po vysázení. <a
href="#k16">V&nbsp;závěru článku</a> se ve stručnosti zmíníme o základních
rozdílech mezi značkovacími jazyky určenými mj.&nbsp;i pro přímé použití lidmi
a řídicími kódy vkládanými do některých souborových formátů používaných
(zejména staršími) textovými editory a procesory. V&nbsp;obou případech se dnes
zaměříme zejména na ty značkovací jazyky popř.&nbsp;formáty s&nbsp;řídicími
kódy určenými primárně pro zápis strukturovaných textových dokumentů.</p>

<p>Původně byly značkovací jazyky skutečně používány především pro vkládání
různých formátovacích nebo sémantických značek do víceméně lineárních textů,
ovšem později došlo k&nbsp;rozšíření použití specializovaných značkovacích
jazyků i do dalších oblastí. Například se jedná o jazyky určené pro popis
uživatelských rozhraní, vektorových kreseb (<a
href="https://www.root.cz/clanky/vektorovy-graficky-format-svg/">SVG</a>, <a
href="https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/#k06">DOT</a>),
služeb (typicky webových služeb), výtahu obsahu (RSS, Atom, JSON Feed),
vizualizaci diagramů (<a
href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/#k03">PlantUML</a>)
atd. V&nbsp;některých případech se ale již nejedná o klasické značkovací
jazyky, ale o doménově specifické jazyky se složitější syntaxí a sémantikou.
Dobrým příkladem může být například jazyk a současně i souborový formát
používaný <a
href="https://www.root.cz/serialy/vykreslujeme-3d-sceny-s-pov-ray/">známým
raytracerem POV-Ray</a> (poslední varianty jazyka POV-Raye podporují makra,
tvorbu programových smyček atd.).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Stručná historie značkovacích jazyků</h2>

<p>Myšlenka použít nějaké značky vkládané do textu uloženého v&nbsp;počítači
není nijak nová, ostatně nějaká forma značek se používala již u běžného psaného
písma (poznámky, opravy chyb, speciální značky pro tiskaře a v&nbsp;neposlední
řadě i běžné školní diktáty poškrtané červenou propiskou učitelem :-). Již
v&nbsp;roce 1967 byla tato myšlenka konkrétně popsána <a
href="https://en.wikipedia.org/wiki/William_W._Tunnicliffe">Williamem W.
Tunnicliffem</a> (což je v&nbsp;této oblasti důležité jméno) a v&nbsp;roce 1970
realizována v&nbsp;systému pojmenovaném <strong>GenCode</strong> neboli
<i>generic coding</i>. Právě v&nbsp;tomto systému se objevil důležitý prvek
používaný (a taktéž porušovaný) dodnes &ndash; oddělení obsahu od prezentace.
William Tunnicliffe následně vedl i výbor, který později vytvořil jazyk SGML,
ke kterému se ještě vrátíme.</p>

<p>Mezitím byl Charlesem Goldfarbem v&nbsp;roce 1969 vytvořen jazyk <i>IBM
GML</i> neboli <strong>IBM Generalized Markup Language</strong>. Opět se jedná
o jednoho z&nbsp;předchůdců rodiny SGML/HTML, o čemž se ostatně můžete
relativně snadno přesvědčit pohledem na kód psaný v&nbsp;GML:</p>

<pre>
:h1.Chapter 1:  Introduction
:p.GML supported hierarchical containers, such as
:ol.
:li.Ordered lists (like this one),
:li.Unordered lists, and
:li.Definition lists
:eol.
as well as simple structures.
:p.Markup minimization (later generalized and formalized in SGML),
allowed the end-tags to be omitted for the "h1" and "p" elements.
</pre>

<p><div class="rs-tip-major">Poznámka: konkrétní syntaxe zápisu značek je sice
odlišná, ale základní struktura zůstává zachována (pokud pomineme zápis pomocí
dvojtečka+značka+tečka, což je sice na první pohled méně čitelné, to je ovšem
dáno naším tréninkem ve čtení XML a HTML). Zajímavé je mj.&nbsp;i řešení
uzavírání některých bloků, zde konkrétně seznamů značkou
<strong>:eol.</strong>.</div></p>

<p>Pojďme dále. V&nbsp;roce 1980 dokončil Brian Reid svoji disertační práci o
značkovacích jazycích a vytvořil taktéž jazyk nazvaný <i>Scribe</i>. Zde použil
nejenom oddělení obsahu od formy (formátování, sazby), ale dokonce i myšlenku
oddělení vlastního stylu do k&nbsp;tomu určených sekcí. Jedná se tedy o
prakticky dalšího přímého předchůdce SGML a HTML (systém byl převzat výborem
pro SGML) a nepřímo taktéž LaTeXu.</p>

<p>Paralelně s&nbsp;tímto úsilím o jediný (a ve výsledku i nesnadno
pochopitelný) standard SGML ovšem probíhal vývoj nástroje <strong>roff</strong>
popsaného <a href="#k03">v&nbsp;navazující kapitole</a> a samozřejmě i <a
href="#k07">TeXu</a> s&nbsp;vlastním jazykem určeným pro popis struktury
dokumentů a současně i pro deklaraci vlastních nových příkazů a maker.</p>

<p>Do IT historie zapadá i značkovací jazyk určený pro popis dokumentů
s&nbsp;hypertextovými odkazy, jehož první teoretický popis vznikl v&nbsp;roce
1989. Z&nbsp;této základní myšlenky se postupně vyvinula první varianta <a
href="http://info.cern.ch/hypertext/WWW/MarkUp/MarkUp.html#4">jazyka HTML</a>,
jehož první verze obsahovala <a
href="http://info.cern.ch/hypertext/WWW/MarkUp/Tags.html">pouze tyto
značky</a>. Schválně se na odkazovaný seznam značek podívejte a porovnejte si
ho <a
href="https://techspirited.com/all-html-tags-list-of-all-html-tags">s&nbsp;moderním
HTML</a>.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Nástroj <strong>roff</strong></h2>

<p>Prvním nástrojem založeným na značkovacím jazyku, s&nbsp;nímž se
v&nbsp;tomto článku setkáme, je nástroj nazvaný <strong>roff</strong>. Pokud
vám připadá jméno této utility přinejmenším podivné, nejste sami. Jedná se
totiž o jméno odvozené od ještě staršího programu nazvaného
<strong>runoff</strong>, který byl společně s&nbsp;dalším nástrojem
<strong>typset</strong> používán na Multicsu, což je předchůdce Unixu
(předchůdce ve smyslu, že se u Multicsu ukázalo, jak operační systém
<i>nemá</i> vypadat). Zatímco program <strong>typset</strong> byl editor,
zajišťoval program <strong>runoff</strong> formátování, stránkování atd. A
právě tuto funkci &bdquo;formátovače&ldquo; na Unixu převzal program
<strong>roff</strong>. Jen pro zajímavost se podívejme, jak vlastně vypadaly
zdrojové kódy určené pro formátování programem <strong>runoff</strong>:</p>

<pre>
When you're ready to order,
call us at our toll free number:
.BR
.CENTER
1-800-555-xxxx
.BR
Your order will be processed
within two working days and shipped
</pre>

<p>Po naformátování vypadal výsledný dokument na obrazovce terminálu,
popř.&nbsp;po vytištění následovně:</p>

<pre>
   When you're ready to order, call us at our toll free number:
&nbsp;
                             1-800-555-xxxx
&nbsp;
   Your order will be processed within two working days and shipped
</pre>

<p>Vidíme tedy, že <strong>runoff</strong> dokázal porozumět značkám pro konce
odstavce, značce pro vycentrování řádku atd.</p>

<p>Vraťme se však k&nbsp;utilitě <strong>roff</strong>. V&nbsp;době vzniku
Unixu se jednalo o jednu z&nbsp;nejdůležitějších aplikací, která byla
provozována na úplně prvním počítači zakoupeném speciálně pro provozování
tohoto operačního systému. A důvodem pro koupi tohoto (tehdy pochopitelně velmi
drahého) stroje byla &ndash; sazba textů resp.&nbsp;obecněji systém pro
zpracování textů. <i>Roff</i> se používal mj.&nbsp;i pro vytváření manuálových
stránek pro Unixy verze 1 až 3. Ostatně i samotný <strong>roff</strong> stále
má svoji manuálovou stránku &ndash; <a
href="https://linux.die.net/man/7/roff">https://linux.die.net/man/7/roff</a>.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Následovníci <strong>roffu</strong> &ndash; <strong>troff</strong> a <strong>nroff</strong></h2>

<p>V&nbsp;dnešních Unixech i na Linuxu se většinou setkáme s&nbsp;nějakou
formou následovníka původní utility <strong>roff</strong>. Prvním z&nbsp;těchto
programů je utilita nazvaná <strong>troff</strong>, což je jméno vzniklé ze
sousloví <i>typesetter roff</i>. A je to jméno velmi příhodné, protože se
v&nbsp;případě <strong>troffu</strong> skutečně jedná o program určený pro
počítačovou sazbu, a to nejenom na terminály či tiskárny s&nbsp;pevnými šířkami
znaků. Při použití <strong>troffu</strong> je možné specifikovat písma (fonty),
okraje, umístění poznámek, styly odstavců atd.</p>

<p>Nástroj <strong>troff</strong> se používal (a možná ještě v&nbsp;některých
případech používá) pro sazbu knih. Jejich pravděpodobně neúplný seznam je
dostupný na adrese <a
href="https://troff.org/pubs.html">https://troff.org/pubs.html</a>.</p>

<p>Podívejme se nyní na poměrně složitý dokument obsahující mnoho značek
specifikujících vzhled dokumentu. Povšimněte si, že tyto značky začínají tečkou
a jsou dvojpísmenné (takže se jejich mnemotechnické zkratky mnohdy pamatují
poměrně špatně):</p>

<pre>
.nf
.ll 5.0i
.pl 8.0i
.in 2.5i
101 Main Street
Morristown, NJ  07960
15 March, 1997
.in 0
.sp 1i
Dear Sir,
&nbsp;
.fi
.ti 0.5i
I just wanted to drop you a note to thank you for spending the
time to give me a tour of your facilities. I found the experience
both educational and enjoyable. I hope that we can work together
to produce a product we can sell.
.pn 4
I am sending a copy of our proposal on the next page. I look forward
to hearing from you.
.sp 2
.in 2.5i
Yours,
.sp 0.5i
Joe Smith, President Any Corp.
.bp
.in 0
We propose to build our widget tools with your widget makers.
</pre>

<p>Sazbu můžeme provést na běžný terminál s&nbsp;neproporcionálním písmem.
Výsledek bude vypadat následovně:</p>

<pre>
&lt;beginning of page&gt;
 101 Main Street
 Morristown, NJ 07960
 15 March, 1997
Dear Sir,
 I just wanted to drop you a note to thank you for spending the time to give me a
tour of your facilities. I found the experience both educational and enjoyable. I hope that
we can work together to produce a product we can sell. I am sending a copy of our pro<hy>
posal on the next page. I look forward to hearing from you.
 Yours,
 Joe Smith, President Any Corp.
&lt;beginning of page&gt;
We propose to build our widget tools with your widget makers.
</pre>

<p>Nová GNU varianta <strong>troffu</strong> se jmenuje <strong>groff</strong>
a kromě jiného dokáže vygenerovat výstup do PostScriptu, který lze snadno
převést do PDF:</p>

*** image ***
<p><i>Obrázek 1: Sazba do PDF provedená groffem společně s&nbsp;ps2pdf.</i></p>

<p>Kromě nástroje <strong>troff</strong> (resp.&nbsp;jeho varianty
<strong>groff</strong>) se velmi často setkáme s&nbsp;nástrojem
<strong>nroff</strong>, který je určen pro sazbu na zařízení s&nbsp;fonty
s&nbsp;pevnou šířkou (neproporcionální písma), tj.&nbsp;například na terminály.
<strong>nroff</strong> byl původně naprogramován v&nbsp;assembleru (autorem
této varianty je Joe Ossanna), později byl <a
href="https://github.com/joyent/illumos-joyent/tree/master/usr/src/cmd/troff/nroff.d">přepsán
do programovacího jazyka C</a>. Typické použití <strong>nroffu</strong> spočívá
v&nbsp;zobrazování manuálových stránek &ndash; viz též <a
href="#k05">navazující kapitolu</a>.</p>

<p>GNU verze se <strong>troffu</strong> jmenuje, jak již ostatně víme,
<strong>groff</strong> a na Linuxu se setkáme právě s&nbsp;touto variantou.
Ostatně i <strong>nroff</strong> je implementován v&nbsp;rámci
<strong>groffu</strong> (jako skript spouštějící <strong>groff</strong>).</p>

<p><i>&bdquo;Can you imagine anyone rewriting troff from scratch, in what ended
up as about 60,000 lines of C++? Wow, I am impressed. If it were not for James'
freely available reimplementation, troff would be dead by now.&ldquo;</i></p>

<p><div class="rs-tip-major">Poznámka: <strong>troff</strong>, na rozdíl od
jazyků odvozených od SGML, nekontroluje kontext, v&nbsp;němž jsou formátovací
značky použity. Záleží tedy na pečlivosti autora dokumentu, aby například dbal
na to, aby se značka .<strong>.LE</strong> (konec seznamu) umístila až za
značku <strong>.LS</strong> (začátek seznamu) a aby značky <strong>.LI</strong>
byly umístěny mezi <strong>.LS</strong> a <strong>.LE</strong>.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Makra pro <strong>troff</strong></h2>

<p>Systém <strong>troff</strong> obsahuje i sadu příkazů, které se zde nazývají
makra (<i>macros</i>). Tato makra se spouští na začátku zpracování dokumentu a
umožňují nastavit prakticky všechny parametry sazby, tj.&nbsp;hlavičky stránek,
patičky, styl zápisu poznámek, zarovnání atd. Kromě toho definují i nové
specializované příkazy, které jsou mnohdy sémantické (pro danou oblast
použití). Mezi podporovaná makra patří zejména:</p>

<table>
<tr><th>Jméno makra</th><th>stručný popis</th></tr>
<tr><td>man</td><td>manuálové stránky</td></tr>
<tr><td>mdoc</td><td>sémanticky anotované manuálové stránky</td></tr>
<tr><td>me</td><td>vědecké články</td></tr>
<tr><td>mm</td><td>memoranda</td></tr>
<tr><td>ms</td><td>knihy a technická dokumentace</td></tr>
<tr><td>rfc</td><td>psaní <a href="https://www.rfc-editor.org/rfc-index.html">RFC</a></td></tr>
<tr><td>present</td><td>prezentace</td></tr>
</table>

<p>Následuje příklad zápisu dokumentu, který tvoří zdroj pro sazbu manuálové
stránky Vimu:</p>

<pre>
.TH VIM 1 "2006 Apr 11"
.SH NAME
vim \- Vi IMproved, a programmers text editor
.SH SYNOPSIS
.br
.B vim
[options] [file ..]
.br
.B vim
[options] \-
.br
.B vim
[options] \-t tag
.br
.B vim
[options] \-q [errorfile]
.PP
.br
.B ex
.br
...
...
...
.SH SEE ALSO
vimtutor(1)
.SH AUTHOR
Most of
.B Vim
was made by Bram Moolenaar, with a lot of help from others.
See ":help credits" in
.B Vim.
.br
.B Vim
is based on Stevie, worked on by: Tim Thompson,
Tony Andrews and G.R. (Fred) Walter.
Although hardly any of the original code remains.
.SH BUGS
Probably.
See ":help todo" for a list of known problems.
.PP
Note that a number of things that may be regarded as bugs by some, are in fact
caused by a too-faithful reproduction of Vi's behaviour.
And if you think other things are bugs "because Vi does it differently",
you should take a closer look at the vi_diff.txt file (or type :help
vi_diff.txt when in Vim).
Also have a look at the 'compatible' and 'cpoptions' options.
</pre>

<p>Příklad výstupu (sazby) na obrazovku:</p>

*** image ***
<p><i>Obrázek 2: Sazba manuálové stránky přímo na obrazovku terminálu.</i></p>

<p></p>

<pre>
$ <strong>man -t vim  | ps2pdf - vim.pdf</strong>
</pre>

*** image ***
<p><i>Obrázek 3: Sazba manuálové stránky do PDF.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Preprocesory pro <strong>troff</strong> a preprocesory preprocesorů</h2>

<p>Pro systém <strong>troff</strong> vzniklo i poměrně velké množství různých
<i>preprocesorů</i>, tedy nástrojů, které získají vstupní data, nějakým
způsobem je zpracují a výsledkem jsou data ve formátu zpracovatelném právě
<strong>troffem</strong>. Tato architektura velmi dobře zapadá do konceptu
Unixu, tedy do způsobu tvorby rozsáhlejších aplikací z&nbsp;menších částí
propojených s&nbsp;využitím rour (<i>pipes</i>). Dokonce je možné říci, že
právě ekosystém vyvinutý okolo systému <strong>troff</strong> poprvé prakticky
ukázal možnosti a výhody Unixu.</p>

<p>Mezi známé (a mnohdy doposud používané) preprocesory patří:</p>

<table>
<tr><th>Jméno</th><th>Způsob použití</th></tr>
<tr><td>eqn</td><td>matematické vzorce</td></tr>
<tr><td>tbl</td><td>tabulky</td></tr>
<tr><td>refer</td><td>citace</td></tr>
<tr><td>pic</td><td>základní kreslící funkce (viz dále)</td></tr>
<tr><td>ideal</td><td>deklarativní specifikace grafiky</td></tr>
<tr><td>grn</td><td>tvorba obrázků kreslením základních grafických elementů</td></tr>
</table>

<p>Podívejme se například na obsah, který má být zpracovatelný preprocesorem
<strong>pic</strong>:</p>

<pre>
.PS
# Draw a demonstration up left arrow with grid box overlay
define gridarrow
{
    move right 0.1
    [
        {arrow up left $1;}
        box wid 0.5 ht 0.5 dotted with .nw at last arrow .end;
        for i = 2 to ($1 / 0.5) do
        {
            box wid 0.5 ht 0.5 dotted with .sw at last box .se;
        }
        move down from last arrow .center;
        [
            if ( $1 == boxht ) \
            then { "\fBline up left\fP" } \
            else { sprintf("\fBarrow up left %g\fP", $1) };
        ]
    ]
    move right 0.1 from last [] .e;
}
gridarrow(0.5);
gridarrow(1);
gridarrow(1.5);
gridarrow(2);
undef gridarrow
.PE
</pre>

<p>Výsledkem může být (zkráceno):</p>

<pre>
.if !dPS .ds PS
.if !dPE .ds PE
.lf 1 -
.lf 1
.PS 0.750i 5.800i
.\" 0 -0.375 5.8 0.375
.\" 0.000i 0.750i 5.800i 0.000i
.nr 00 \n(.u
.nf
.nr 0x 1
...
...
...
\h'5.200i'\v'0.150i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.200i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.250i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.300i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.350i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.400i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.450i'\D'l 0.000i 0.000i'
.sp -1
\h'5.200i'\v'0.500i'\D'l 0.000i 0.000i'
.sp -1
.lf 25
\h'4.700i-(\w'\fBarrow up left 2\fP'u/2u)'\v'0.750i-(0v/2u)+0v+0.22m'\fBarrow up left 2\fP
.sp -1
.sp 0.750i+1
.if \n(00 .fi
.br
.nr 0x 0
.lf 27
.PE
.lf 28
</pre>

<p>To však není zdaleka vše, protože myšlenku propojení více nástrojů pomocí
rour lze ještě dále rozšířit. Pokud existuje například preprocesor
<strong>pic</strong>, jenž umožňuje práci se základními kreslícími funkcemi, je
zajisté možné vytvořit další pre-preprocesor, který zajistí tvorbu grafů,
diagramů, histogramů, vizualizaci datových struktur aj. Výsledkem práce tohoto
preprocesoru by byla data kompatibilní s&nbsp;preprocesorem
<strong>pic</strong>, jenž by posléze mohl vytvořit data použitelná přímo
utilitou <strong>troff</strong>. A takové preprocesory skutečně vznikly,
například:</p>

<table>
<tr><th></th><th></th></tr>
<tr><td>grap</td><td>grafy, diagramy a histogramy</td></tr>
<tr><td>chem</td><td><a href="https://en.wikipedia.org/wiki/Structural_formula">molekulární struktury</a></td></tr>
<tr><td>dformat</td><td>datové struktury</td></tr>
</table>



<p><a name="k07"></a></p>
<h2 id="k07">7. Rodina značkovacích jazyků založená na TeXu</h2>

<p>Samostatnou kapitolou (v&nbsp;tomto článku to platí doslova) je systém TeX a
nad ním postavené nadstavby (LaTeX atd.). První verze TeXu byla jeho autorem <a
href="https://www-cs-faculty.stanford.edu/~knuth/">Donaldem Knuthem</a> vydána
již v&nbsp;roce 1978. Jedná se o systém určený pro počítačovou sazbu textů a
v&nbsp;tomto článku se o něm zmiňujeme především z&nbsp;toho důvodu, že vstupem
pro sazbu jsou textové dokumenty obsahující jak samotný text, který má být
vysázen, tak i příkazy (řekněme značky) ovlivňující sazbu. Tyto dokumenty
většinou využívají soubor maker nazvaných <i>PlainTeX</i>, existují ovšem i
komplikovanější nadstavby nad samotným TeXem, které mj.&nbsp;přidávají i
sémantické značky (tj.&nbsp;označení textu podle jeho významu, ne podle toho,
jakým způsobem se má vysázet). Nejznámější nadstavbou tohoto typu je
<i>LaTeX</i>, dnes ve verzi <i>LaTeX 2ε</i>, ovšem oblibu si postupně získává i
novější <i>ConTeXt</i> a <a href="http://tug.org/xetex/">XeTeX</a>.</p>

<p><div class="rs-tip-major">Poznámka: zajímavé je, že LaTeX se sémantickými
značkami byl vydán již v&nbsp;roce 1984 a předběhl tak například
HTML.</div></p>

<p>Podívejme se nyní, jak může vypadat (zde neúplný) dokument, který má být
zpracovaný LaTeXem a následně vysázený samotným TeXem. V&nbsp;tomto dokumentu
jsou dva běžné odstavce, vzorec, seznam a několik vzorců vložených přímo do
textu (odstavce):</p>

<pre>
Při aproximaci exponenciální funkce a s~požadavkem na  průchod  funkce  nulou,
lze s~výhodou použít polynomů.  Přesnější  aproximaci  lze  provést  polynomem
šestého stupně.  Jeho nevýhodou jsou poměrně složité výpočty, které  se  mohou
projevit například při  vykreslování  implicitních  ploch  sníženou  rychlostí
vykreslování.  Tvar tohoto polynomu je následující:
&nbsp;
\begin{equation}
D_i(r_i)=-\frac{4}{9}\frac{r_i^6}{R_i^6}+\frac{17}{9}\frac{r_i^4}{R_i^4}-\frac{22}{9}\frac{r_i^2}{R_i^2}+1
\label{impl_0}
\end{equation}
kde:
&nbsp;
\begin{itemize}
\item $R_i$ je poloměr prvku kostry
\item $r_i$ je vzdálenost vyšetřovaného bodu v~prostoru od středu prvku kostry
\item $D_i(r_i)$ je výsledná intenzita v~daném bodě
\end{itemize}
&nbsp;
Tato funkce je pro $r_i \geq R_i$ nulová.   Při  výpočtu  nemusíme  vyšetřovat
všechny body v~prostoru, ale pouze ty, které  leží  ve~vzdálenosti  menší  než
$R_i$. Mezi další výhodné vlastnosti této funkce patří to, že má pro $r_i=0$ a
$r_i=R_i$ nulové derivace a že je  symetrická  pro  hodnotu  $r=\frac{R_i}{2}$
(viz též obrázek \ref{obr_funkce_polynom_6}).
</pre>

<p>Výsledek po vysázení, převodu do PDF a rasterizaci v&nbsp;PDF prohlížeči
může vypadat následovně (veškeré chyby typu &bdquo;poskakujícího písma&ldquo;
má na svědomí prohlížeč PDF, nikoli samotný TeX, který sází písmena na samotné
hranici optické přesnosti):</p>

*** image ***
<p><i>Obrázek 4: Část stránky vysázené programem TeX.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. SGML, XML a DocBook</h2>

<p>O jazyku <i>SGML</i> neboli <i>Standard Generalized Markup Language</i> jsme se krátce zmínili v&nbsp;úvodních kapitolách. Jedná se o značkovací <i>metajazyk</i>, tj.&nbsp;o jazyk určený pro definici dalších značkovacích jazyků, které jsou jeho podmnožinou a sdílí s&nbsp;ním společné vlastnosti (zejména syntaxi zápisu s&nbsp;využitím pojmenovaných elementů a značek zapisovaných se špičatými závorkami). Součástí SGML je i metajazyk pro popis elementů a atributů &ndash; jedná se o známý DTD (<i>Document Type Description</i>). SGML je bezkontextový jazyk (viz <a href="https://cs.wikipedia.org/wiki/Chomsk%C3%A9ho_hierarchie">Chomského hierarchie</a>), což mj.&nbsp;znamená, že se jednotlivé značky mohou vzájemně vnořovat, ale nikoli překrývat (samotný termín <i>context</i> je ovšem v&nbsp;SGML používán &ndash; je to text, jenž je uložen do nějaké značky). V&nbsp;důsledku se můžeme na dokument založený na nějaké podmnožině SGML dívat jako na strukturovaný zápis stromové struktury, což se ostatně využívá v&nbsp;DOMu založeném na HTML (což byla jedna z&nbsp;podmnožin SGML). </p>

<pre>
<recipe>

<title>
Haupia (Coconut Pudding)
</title>
<ingredient-list>
<ingredient>
12 ounces coconut milk
</ingredient>
<ingredient>
4 to 6 tablespoons sugar
</ingredient>
</ingredient-list>
<instruction-list>
<step>
Pour coconut milk into saucepan.
</step>
<step>
Combine sugar and cornstarch;
stir in water and blend well.
</step>
<step>
Stir sugar mixture into coconut milk;
cook and stir over low heat until thickened.
</step>
</instruction-list>
</recipe>
</pre>

<p>Dalším důležitým značkovacím jazykem (odvozeným ze SGML), o němž se v&nbsp;dnešním článku musíme zmínit, je <i>DocBook</i>. Jak již název tohoto jazyka napovídá, je jeho primárním účelem ukládání strukturovaných dokumentů. Všechny DocBookové značky jsou navíc čistě sémantické, tj.&nbsp;označují, o jaký text se jedná a nikoli jakým způsobem má být zobrazen. To je velmi důležité v&nbsp;oblastech, ve kterých se DocBook nasazuje &ndash; poloautomatická tvorba manuálů, dokumentace k&nbsp;API (mnohdy taktéž automaticky či poloautomaticky generovaná) atd. Samotné vysázení dokumentu se provádí například transformací pomocí XSL-FO (<i>XSL Formatting Objects</i>) nebo převodem do jiného formátu (včetně HTML). Ovšem právě proto, že DocBook obsahuje čistě sémantické značky, může být jeho použití pro některé autory problematické (celkový počet značek <a href="https://tdg.docbook.org/tdg/5.0/chunk-part-d64e8789.html">dosahuje několika set</a>). Z&nbsp;tohoto důvodu byl navržen upravený jazyk nazvaný příznačně <i>Simplified DocBook</i> určený převážně pro tvorbu článků (značka &bdquo;book&ldquo; zde vůbec není povolena).</p>

<p></p>

<pre>
 &lt;?xml version="1.0" encoding="UTF-8"?&gt;
 &lt;book xml:id="simple_book" xmlns="http://docbook.org/ns/docbook" version="5.0"&gt;
   &lt;title&gt;Very simple book&lt;/title&gt;
   &lt;chapter xml:id="chapter_1"&gt;
     &lt;title&gt;Chapter 1&lt;/title&gt;
     &lt;para&gt;Hello world!&lt;/para&gt;
     &lt;para&gt;I hope that your day is proceeding &lt;emphasis&gt;splendidly&lt;/emphasis&gt;!&lt;/para&gt;
   &lt;/chapter&gt;
   &lt;chapter xml:id="chapter_2"&gt;
     &lt;title&gt;Chapter 2&lt;/title&gt;
     &lt;para&gt;Hello again, world!&lt;/para&gt;
   &lt;/chapter&gt;
 &lt;/book&gt;
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. HTML a HTMLBook</h2>

http://info.cern.ch/hypertext/WWW/MarkUp/Tags.html

<p></p>

HTMLBook
http://oreillymedia.github.io/HTMLBook/

O’Reilly Media, Inc


    Books are timeless. The basic “book” structure has persisted for hundreds of years and will continue to persist for our lifetimes, be it in digital or print form.
    HTML is the markup language of the world for the foreseeable future.
    Single-source document processing will remain valuable for the foreseeable future.

As such, HTMLBook can be characterized in the following ways:

    HTMLBook is a subset of XHTML5. All HTMLBook is XHTML5, but not all XHTML5 is HTMLBook.
    HTMLBook contains no additional elements or attributes outside of the XHTML5 specification.
    HTMLBook is semantically tailored to the structure of a book, including more complex content used in technical and reference documents.
    HTMLBook is defined with and can be validated against an XML schema.
    HTMLBook stylesheets are written in CSS.



<p><a name="k10"></a></p>
<h2 id="k10">10. Postmoderní značkovací jazyky &ndash; cesta ke zjednodušení a minimalismu</h2>

<p>Všechny značkovací jazyky popsané v&nbsp;předchozích kapitolách jsou
bezpochyby velmi mocné (z&nbsp;pohledu vyjadřovacích schopností), ovšem mají i
několik nevýhod. Především mnohdy vyžadují poměrně značnou počáteční časovou
investici nutnou do zaučení (DocBook, TeX, nemluvě o troff) a některé
z&nbsp;výše uvedených jazyků vyžadují pro tisk (resp.&nbsp;pro sazbu) i
netriviální sadu pomocných nástrojů. Proto vlastně není ani velkým překvapením,
že se zejména na začátku tisíciletí &ndash; společně s&nbsp;nástupem nové
generace aplikací (založených na Webu 2.0, což je ostatně jen obecné označení
trendu, ovšem zahrnuje například i fenomén wiki) &ndash; objevily i nové
značkovací jazyky s&nbsp;mnohdy se značně zjednodušeným způsobem zápisu, který
navíc většinou stíral rozdíl mezi běžným <i>plain textem</i> a značkovacím
jazykem. Mezi takto navržené značkovací jazyky patří například:</p>

<ul>
<li>AsciiDoc</li>
<li>atx</li>
<li>BBCode</li>
<li>Creole</li>
<li>Crossmark</li>
<li>Epytext</li>
<li>Haml</li>
<li>JsonML</li>
<li>MakeDoc</li>
<li>Markdown</li>
<li>Org</li>
<li>ode</li>
<li>POD</li>
<li>reST</li>
<li>RD</li>
<li>Setext</li>
<li>SiSU</li>
<li>SPIP</li>
<li>Xupl</li>
<li>Texy</li>
<li>Textile</li>
<li>txt2tags</li>
<li>UDO</li>
<li>nd</li>
<li>wikitext</li>
</ul>

<p><div class="rs-tip-major">Poznámka: některé z&nbsp;výše uvedených jazyků
vznikly již před rokem 2000, ovšem svojí syntaxí a významem spadají do stejné
kategorie, stejně jako mnohé ad-hoc jazyky (těch existují stovky) vytvořené
mnohdy pro potřeby jediné aplikace.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. POD a RD</h2>

<p>Zejména ve světě programovacího jazyka Perl se setkáme se soubory označovanými <i>POD</i> neboli <i>Plain Old Documentation</i>. Jedná se o značkovací jazyk</p>

<p>Podívejme se nyní na dokument vytvořený právě v&nbsp;PODu. Jedná se o
zdrojový kód určený pro zpracování a zkonvertování do podoby manuálové
stránky:</p>

<pre>
=head1 NAME
&nbsp;
emend - a command-line interface for Emender
&nbsp;
=head1 SYNOPSIS
&nbsp;
B&lt;emend&gt; [B&lt;-clsvDT&gt;] [B&lt;-o&gt; I&lt;output_file&gt;] [I&lt;test_file&gt;...]
&nbsp;
B&lt;emend&gt; B&lt;-h&gt;|B&lt;-V&gt;|B&lt;-L&gt;
&nbsp;
=head1 DESCRIPTION
&nbsp;
The B&lt;emend&gt; utility runs tests stored in the local file system and prints
a detailed report to standard output. By default, the utility looks for
tests in the F&lt;test&gt; directory, but you can specify individual tests on the
command line.
&nbsp;
=head1 OPTIONS
&nbsp;
=over
&nbsp;
=item B&lt;-o&gt; I&lt;output_file&gt;, B&lt;--output&gt; I&lt;output_file&gt;
&nbsp;
Stores a detailed report to the file named I&lt;output_file&gt;. The B&lt;emend&gt;
utility deduces the format of the output file form the file extension:
currently recognized file extensions are B&lt;.txt&gt; (plain text), B&lt;.html&gt;
(HTML), B&lt;.xml&gt; (XML as described in B&lt;emender_xml&gt;(5)), and B&lt;.junit&gt;
(JUnit XML output). Note that you can specify the B&lt;-o&gt; option more than
once to generate the report in multiple formats.
</pre>

https://github.com/emender/emender/blob/master/doc/man/man1/emend.1.pod

Ruby Document format

<pre>
=begin
= NAME
RD sample - A sample RD document

= SYNOPSIS
 here.is_a?(Piece::Of::Code)
 print <<"END"
 This indented block will not be scanned for formatting
 codes or directives, and spacing will be preserved.
 END

= DESCRIPTION
Here's some normal text.  It includes text that is
((*emphasized*)), ((%keyboard%)), (({code}))-formatted,
((|variable part|)), ((:indexed:)), and (('as-is'))((-footnote-)).

== An Example List
* This is a bulleted list.
* Here's another item.
  * Nested list item.

== An ordered List
(1) This is the first item
(2) second
    * Nested unordered list.
(3) third
    (1) Nested ordered list
    (2) its second item

=end
</pre>

https://ruby.github.io/rdoc/



<p><a name="k12"></a></p>
<h2 id="k12">12. AsciiDoc</h2>

2002
Stuart Rackham
http://asciidoc.org/
asciidoc’ and ‘a2x’ v Pythonu
Asciidoctor v Ruby (špagetový kód)
https://www.root.cz/clanky/atom-moderni-textovy-editor/#k06
<p></p>

<pre>
# Technical Accuracy Tests

## What it is

This is a test for [Emender](https://github.com/emender/emender) framework. It checks all the links in documentation and analyzes their behavior. For example, it reports non-functional or blacklisted external links.

## How to run it
To run the test locally, follow these steps.
1. Download the repository to your local machine. You don't need to have the test and documentation in the same folder. In fact, it's advisable not to.
2. Download Emender framework [here](https://github.com/emender/emender).
3. Install Emender by navigating into the source code directory and running `sudo make install`.
4. Download documentation files into a separate folder. This folder must either include a publican.cfg file with documentation config (DocBook format) or master.adoc (AsciiDoc format).
5. Before running the tests, make sure to install these dependencies:
~~~~~~~~
sudo dnf install curl wget lua; gem install asciidoctor
~~~~~~~~
6. You're ready to run the test! Through command line navigate to the documentation folder (or the folder where you want to store the results). From this folder run the following command:
~~~~~~~~
PATH_TO_TEST_DIR/run.sh --XdocDir=PATH_TO_DOC_DIR
Only provide "docDir" argument if the documentation folder is different from the folder you're currently in.
~~~~~~~~
This will run a shell script that basically does all the dirty work before running the actual test. After running it you should see the test output on the screen, as well as a bunch of results.* files in the current folder. These files provide the results in various formats.
7. Add any extra parameters to Emender by using them as shell script arguments. Consult [this](https://github.com/emender/emender/blob/master/doc/man/man1/emend.1.pod) page for more info.
8. Add extra parameters to the test itself by using them as shell script arguments. Use this construct to do so: `--XparamName=paramValue`
You can, for example, add "blacklistedLinks", "exampleList" and "internalList" in this manner: `--XblacklistedLinks="link1, link2, link3, ..."`

## License

*technical-accuracy-tests* is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published by the
Free Software Foundation; version 3 of the License.

*technical-accuracy-tests* is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the [GNU General Public
License](http://www.gnu.org/licenses/) for more details.
</pre>

https://github.com/emender/technical-accuracy-tests/blob/master/README.md



<p><a name="k13"></a></p>
<h2 id="k13">13. reST (reStructuredText)</h2>

2002
David Goodger

castecne z StructuredText (Zope)

<p></p>
https://docutils.readthedocs.io/en/sphinx-docs/user/rst/quickstart.html
https://fangohr.github.io/computing/rst/rst.txt
https://fangohr.github.io/computing/rst/rst.html

Sphinx od roku 2008 masivne v Python svete



<p><a name="k14"></a></p>
<h2 id="k14">14. Markdown a CommonMark</h2>

<p></p>
John Gruber a Aaron Swartz 2004

<pre>
# Description

Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.

Fixes # (issue)

## Type of change

Please delete options that are not relevant.

- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] This change requires a documentation update
</pre>

https://www.root.cz/clanky/atom-moderni-textovy-editor/

John MacFarlane
2014

<div class="rs-img-center" style="width: 370px"><a href="https://www.root.cz/obrazek/190900/"><img src="https://i.iinfo.cz/images/391/atom1-15-prev.png" class="image-190900" alt="" height="234" width="370"></a></div>
<p><i>Obrázek x: </i></p>

<div class="rs-img-center" style="width: 370px"><a href="https://www.root.cz/obrazek/190901/"><img src="https://i.iinfo.cz/images/391/atom1-16-prev.png" class="image-190901" alt="" height="234" width="370"></a></div>
<p><i>Obrázek y: </i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Texy!</h2>

<p></p>

<pre>
Titulek
**********

Lorem ipsum


Nadpis první úrovně
==========

Lorem ipsum

Nadpis druhé úrovně
----------------

Lorem ipsum **tučný text** a samozřejmě i *kurzíva*

Podporován je i `text s pevnou šířkou znaků`, podobně jako v dalších podobně koncipovaných jazycích.

Odkazy vypadají takto: "Root":https://www.root.cz

Seznamy s odrážkami
========

* prvek
* prvek
* prvek
- prvek
- prvek
- prvek

Číslované seznamy
================
1. prvek
1. prvek
1. prvek

Programový kód
===============

/--php
x = 0
y = 2
\--
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Značkovací jazyky vs. řídicí kódy</h2>

<p>V&nbsp;souvislosti se značkovacími jazyky se musíme zmínit i o vlastně velmi
podobném systému. Jedná se o souborové formáty používané některými (vetšinou
staršími) textovými editory a procesory. Některé z&nbsp;těchto formátů byly
založeny na jednoduché myšlence &ndash; do zapisovaného textu se budou vkládat
speciální řídicí znaky určující, jak se text bude při sazbě formátovat. Takovým
znakem mohl v&nbsp;jednoduchém případě být znak (či dvojice znaků)
s&nbsp;významem &bdquo;zapni sazbu tučného písma&ldquo;, &bdquo;měkký konec
řádku v&nbsp;rámci odstavce&ldquo;, &bdquo;nedělitelná mezera&ldquo;,
&bdquo;vypni sazbu vysokého písma&ldquo; apod. K&nbsp;těmto znakům se postupně
přidávaly i složitější řídicí kódy nebo (většinou) jejich sekvence, které
například umožňovaly vkládání obrázků či byly určený k&nbsp;takzvanému <i>mail
merge</i>, což je systém použitelný například pro tisk obálek, vysvědčení,
obchodních dopisů atd. (stejná šablona, odlišný obsah). V&nbsp;navazujících
třech kapitolách se ve stručnosti seznámíme se třemi takto koncipovanými
formáty.</p>



<p><a name="k17"></a></p>
<h2 id="k17">17. WordStar</h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. WordPerfect</h2>

<p>Klíčové vlastnosti svého textového procesoru &ndash; použití implicitního vkládacího režimu, automatické reformátování textu a řízené skrývání či zobrazování řídicích značek (<i>reveal codes</i>) &ndash; popsal <i>Alan Ashton</i> ve specifikaci o délce cca padesáti stránek, která byla dokončena již na konci prázdnin roku 1977. Ovšem kromě &bdquo;pouhé&ldquo; specifikace měl již naprogramovány některé nejdůležitější a nejzajímavější algoritmy, především vlastní vkládací režim a podprogramy pro automatické přeformátování textu po každé editační operaci. Přitom se nejedná o zcela primitivní záležitost, protože zejména na pomalejších počítačích bylo nutné provádět různé optimalizace (například při vložení znaku na začátek dokumentu je neefektivní posouvat celým dokumentem v&nbsp;paměti, takže se používají gap buffery atd.).</p>

<p>Z&nbsp;pohledu dnešního článku je nejdůležitější právě skutečnost, že tento textový procesor dokázal na požádání rozbrazovat řídicí značky vkládané do textu (funkce <i>reveal codes</i> zmíněná v&nbsp;předchozím odstavci). To naznačuje, jakým způsobem vlastně byly dokumenty interně organizovány &ndash; jako sekvence znaků doplněná o řídicí značky (sekvence bajtů), tedy vlastně velmi podobným způsobem, jako je tomu ve značkovacích jazycích.</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Text602</h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Text Processor for Typesetters<br />
<a href="https://troff.org/">https://troff.org/</a>
</li>

<li>The history of troff<br />
<a href="https://troff.org/history.html">https://troff.org/history.html</a>
</li>

<li>Macro packages (for troff)<br />
<a href="https://troff.org/macros.html">https://troff.org/macros.html</a>
</li>

<li>Markup language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Markup_language">https://en.wikipedia.org/wiki/Markup_language</a>
</li>

<li>roff (software)<br />
<a href="https://en.wikipedia.org/wiki/Roff_(software)">https://en.wikipedia.org/wiki/Roff_(software)</a>
</li>

<li>Troff Resources<br />
<a href="http://www.kohala.com/start/troff/troff.html">http://www.kohala.com/start/troff/troff.html</a>
</li>

<li>List of markup languages (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/List_of_markup_languages">https://en.wikipedia.org/wiki/List_of_markup_languages</a>
</li>

<li>Lightweight markup language<br />
<a href="https://en.wikipedia.org/wiki/Lightweight_markup_language">https://en.wikipedia.org/wiki/Lightweight_markup_language</a>
</li>

<li>WordPerfect<br />
<a href="http://texteditors.org/cgi-bin/wiki.pl?WordPerfect">http://texteditors.org/cgi-bin/wiki.pl?WordPerfect</a>
</li>

<li>RSS (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/RSS">https://en.wikipedia.org/wiki/RSS</a>
</li>

<li>XML RSS<br />
<a href="https://www.w3schools.com/XML/xml_rss.asp">https://www.w3schools.com/XML/xml_rss.asp</a>
</li>

<li>Atom (Web standard)<br />
<a href="https://en.wikipedia.org/wiki/Atom_(Web_standard)">https://en.wikipedia.org/wiki/Atom_(Web_standard)</a>
</li>

<li>JSON feed<br />
<a href="https://jsonfeed.org/">https://jsonfeed.org/</a>
</li>

<li>Nástroje pro tvorbu grafů a diagramů z příkazové řádky (root.cz)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z příkazové řádky (root.cz)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z příkazové řádky (II) (root.cz)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/</a>
</li>

<li>Making Pictures With GNU PIC<br />
<a href="http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/pic.html">http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/pic.html</a>
</li>

<li>What is Texy<br />
<a href="https://texy.info/en/">https://texy.info/en/</a>
</li>

<li>Texy AJAX Editor<br />
<a href="https://editor.texy.info/en/try/">https://editor.texy.info/en/try/</a>
</li>

<li>Texy help<br />
<a href="https://editor.texy.info/help/">https://editor.texy.info/help/</a>
</li>

<li>Texy syntax<br />
<a href="https://texy.info/en/syntax">https://texy.info/en/syntax</a>
</li>

<li>Atlas<br />
<a href="https://docs.atlas.oreilly.com/index.html">https://docs.atlas.oreilly.com/index.html</a>
</li>

<li>Atlas &ndash; Writing in Markdown<br />
<a href="https://docs.atlas.oreilly.com/writing_in_markdown.html">https://docs.atlas.oreilly.com/writing_in_markdown.html</a>
</li>

<li>Atlas &ndash; Writing in AsciiDoc<br />
<a href="https://docs.atlas.oreilly.com/writing_in_asciidoc.html">https://docs.atlas.oreilly.com/writing_in_asciidoc.html</a>
</li>

<li>HTMLBook<br />
<a href="https://github.com/oreillymedia/HTMLBook">https://github.com/oreillymedia/HTMLBook</a>
</li>

<li>HTMLBook (Draft)<br />
<a href="http://oreillymedia.github.io/HTMLBook/">http://oreillymedia.github.io/HTMLBook/</a>
</li>

<li>HTMLBook schema<br />
<a href="https://github.com/oreillymedia/HTMLBook/tree/master/schema">https://github.com/oreillymedia/HTMLBook/tree/master/schema</a>
</li>

<li>DocBook<br />
<a href="https://en.wikipedia.org/wiki/DocBook">https://en.wikipedia.org/wiki/DocBook</a>
</li>

<li>An introduction to DocBook, a flexible markup language worth learning<br />
<a href="https://opensource.com/article/17/9/docbook">https://opensource.com/article/17/9/docbook</a>
</li>

<li>DocBook 5: The Definitive Guide<br />
<a href="https://tdg.docbook.org/tdg/5.0/docbook.html">https://tdg.docbook.org/tdg/5.0/docbook.html</a>
</li>

<li>CommonMark<br />
<a href="https://commonmark.org/">https://commonmark.org/</a>
</li>

<li>XSL Formatting Objects<br />
<a href="https://en.wikipedia.org/wiki/XSL_Formatting_Objects">https://en.wikipedia.org/wiki/XSL_Formatting_Objects</a>
</li>

<li>Ruby Document format<br />
<a href="https://en.wikipedia.org/wiki/Ruby_Document_format">https://en.wikipedia.org/wiki/Ruby_Document_format</a>
</li>

<li>RDoc - Ruby Documentation System<br />
<a href="https://ruby.github.io/rdoc/">https://ruby.github.io/rdoc/</a>
</li>

<li>Plain Old Documentation<br />
<a href="https://en.wikipedia.org/wiki/Plain_Old_Documentation">https://en.wikipedia.org/wiki/Plain_Old_Documentation</a>
</li>

<li>CommonMark Spec<br />
<a href="https://spec.commonmark.org/">https://spec.commonmark.org/</a>
</li>

<li>William W. Tunnicliffe<br />
<a href="https://en.wikipedia.org/wiki/William_W._Tunnicliffe">https://en.wikipedia.org/wiki/William_W._Tunnicliffe</a>
</li>

<li>roff(7) - Linux man page<br />
<a href="https://linux.die.net/man/7/roff">https://linux.die.net/man/7/roff</a>
</li>

<li>Basic Formatting with troff/nroff<br />
<a href="http://cmd.inp.nsk.su/old/cmd2/manuals/unix/UNIX_Unleashed/ch08.htm">http://cmd.inp.nsk.su/old/cmd2/manuals/unix/UNIX_Unleashed/ch08.htm</a>
</li>

<li>Publications that use troff<br />
<a href="https://troff.org/pubs.html">https://troff.org/pubs.html</a>
</li>

<li>Making Pictures With GNU PIC<br />
<a href="http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/pic.html">http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/web/pic.html</a>
</li>

<li>Atom: moderní textový editor <br />
<a href="https://www.root.cz/clanky/atom-moderni-textovy-editor/">https://www.root.cz/clanky/atom-moderni-textovy-editor/</a>
</li>

<li>A ReStructuredText Primer<br />
<a href="https://docutils.readthedocs.io/en/sphinx-docs/user/rst/quickstart.html">https://docutils.readthedocs.io/en/sphinx-docs/user/rst/quickstart.html</a>
</li>

<li>reStructuredText Markup Specification<br />
<a href="https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html">https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html</a>
</li>

<li>Web 2.0<br />
<a href="https://en.wikipedia.org/wiki/Web_2.0">https://en.wikipedia.org/wiki/Web_2.0</a>
</li>

<li>Creole (markup)<br />
<a href="https://en.wikipedia.org/wiki/Creole_(markup)">https://en.wikipedia.org/wiki/Creole_(markup)</a>
</li>

<li>AsciiDoc Syntax Quick Reference<br />
<a href="https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/">https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/</a>
</li>

<li>Basic Syntax<br />
<a href="https://www.markdownguide.org/basic-syntax">https://www.markdownguide.org/basic-syntax</a>
</li>

<li>LaTeX – A document preparation system<br />
<a href="https://www.latex-project.org/">https://www.latex-project.org/</a>
</li>

<li>Standard Generalized Markup Language (SGML)<br />
<a href="https://www.techopedia.com/definition/1898/standard-generalized-markup-language-sgml">https://www.techopedia.com/definition/1898/standard-generalized-markup-language-sgml</a>
</li>

<li>A brief SGML tutorial<br />
<a href="https://www.w3.org/TR/WD-html40-970708/intro/sgmltut.html">https://www.w3.org/TR/WD-html40-970708/intro/sgmltut.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

