<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Kouzelné funkce a využití dalších skriptovacích jazyků v IPythonu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Kouzelné funkce a využití dalších skriptovacích jazyků v IPythonu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve druhém článku o IPythonu se zaměříme na popis dalších užitečných magických funkcí nabízených tímto nástrojem. Popíšeme si i možnost přidání vlastních kouzelných funkcí, využití dalších skriptovacích jazyků a kombinaci IPythonu s textovými editory popř. s IDE.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Kouzelné funkce vestavěné do IPythonu</a></p>
<p><a href="#k02">2. Zobrazení historie zadaných příkazů</a></p>
<p><a href="#k03">3. Uložení a obnova obsahu proměnných z&nbsp;diskového úložiště</a></p>
<p><a href="#k04">4. Výpis proměnných popř.&nbsp;jejich typů</a></p>
<p><a href="#k05">5. Zjištění doby běhu určité funkce či části kódu</a></p>
<p><a href="#k06">6. Spuštění vybrané funkce v&nbsp;profileru</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Příloha: seznam standardních kouzelných funkcí IPythonu</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Kouzelné funkce vestavěné do IPythonu</h2>

<p>Ve druhém článku o IPythonu navážeme na <a
href="https://www.root.cz/clanky/ipython-jedno-z-nejpropracova-nejsich-interaktivnich-prostredi-pro-praci-s-pythonem/">článek
úvodní</a>. Zaměříme se na popis dalších užitečných magických funkcí nabízených
tímto nástrojem. Popíšeme si i možnost přidání vlastních kouzelných funkcí
(<i>magic functions</i>), využití dalších skriptovacích jazyků přímo
z&nbsp;prostředí IPythonu a kombinaci IPythonu s&nbsp;programátorskými
textovými editory popř.&nbsp;s&nbsp;integrovanými vývojovými prostředími.
Nezapomeneme ani na zmínku o integraci IPythonu do pokročilého debuggeru
<i>pudb</i>, s&nbsp;nímž jsme se již na stránkách Roota <a
href="https://www.root.cz/clanky/pudb-vykonny-debugger-pro-python-s-retro-uzivatelskym-rozhranim/">seznámili
v&nbsp;samostatném článku</a>.</p>

<img src="https://i.iinfo.cz/images/536/ipython1-1-3.png" class="image-443464" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 1: Prostředí IPythonu je založeno na konceptu takzvaných buněk
(cells), k&nbsp;jejichž obsahu i vypočteným výsledkům je možné se
v&nbsp;případě potřeby vrátit.</i></p>

<p>Již <a
href="https://www.root.cz/clanky/ipython-jedno-z-nejpropracova-nejsich-interaktivnich-prostredi-pro-praci-s-pythonem/">v&nbsp;předchozím
článku</a> jsme se seznámili s&nbsp;některými kouzelnými funkcemi IPythonu
(<i>magic functions</i>). Připomeňme si ve stručnosti, o jakých funkcích jsme
se bavili. Především se jednalo o funkce pojmenované <strong>%cpaste</strong> a
<strong>%edit</strong>. Díky jejich existenci lze do prostředí IPythonu buď
přenést celý blok přes schránku (bez snahy o jeho přeformátování),
popř.&nbsp;spustit externí editor a upravit v&nbsp;něm zvolenou část kódu.
Výběr textového editoru se provádí přes proměnné prostředí
<strong>$EDITOR</strong> popř.&nbsp;<strong>$VISUAL</strong>. V&nbsp;případě
funkce <strong>%cpaste</strong> se vkládání ukončuje klávesovou zkratkou
<strong>Ctrl+D</strong>. Kouzelná funkce <strong>%edit</strong> (lze ji vyvolat
i přes klávesu <strong>F2</strong>) nám umožní spustit editor s&nbsp;možností
úpravy vybraného objektu či vytvoření objektu nového. Pro načtení souboru se
zdrojovými kódy se používá kouzelná funkce nazvaná <strong>%load</strong>. Pro
opačnou operaci, tedy pro uložení obsahu <i>vybraných</i> buněk slouží kouzelná
funkce se jménem <strong>%save</strong>. Té se předává jak jméno souboru, tak i
buňky, které se do něho mají uložit.</p>

<p><div class="rs-tip-major">Poznámka: kouzelnou funkci <strong>%save</strong>
si ovšem nesmíme plést s&nbsp;funkcí <strong>%store</strong>, která má poněkud
odlišný význam popsaný níže.</div></p>

<img src="https://i.iinfo.cz/images/536/ipython1-1-4.png" class="image-443465" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 2: Vestavěná nápověda IPythonu. Ta je pochopitelně
k&nbsp;dispozici i pro všechny kouzelné funkce popisované v&nbsp;dnešním
článku.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Zobrazení historie zadaných příkazů</h2>

<p>První kouzelnou funkcí, s&nbsp;níž se v&nbsp;dnešním článku seznámíme, je
funkce nazvaná <strong>%history</strong> (připomeňme si, že jména kouzelných
funkcí začínají znakem procenta či v&nbsp;některých případech dvěma procenty).
Funkce <strong>%history</strong> dokáže zobrazit historii dříve zadaných
příkazů, přičemž přístup do historie je možný hned několika způsoby, typicky
ovšem zadáním rozsahu:</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-1.png" class="image-443669" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 3: Nápověda zobrazená ke kouzelné funkci
<strong>%history</strong>.</i></p>

<p>Ukažme si nyní jedno z&nbsp;možných použití této funkce. Zobrazíme
posledních dvacet příkazů, a to včetně čísel řádků (přepínač
<strong>-n</strong>) a taktéž vlastních příkazů (přepínač
<strong>-o</strong>):</p>

<pre>
In [63]: <strong>%history -n -o 1-20</strong>
&nbsp;
   1: os.*dir*
   2: os.*dir*?
   3: import os
   4: os.*dir*
   5: os.*dir*?
   6: import os
   7: os.*dir*?
   8: os.chdir?
   9: os.chdir?
  10: os.chdir??
  11: ??os.chdir
  12: ??os.chdir??
  13: import math
  14: math.*?
  15: math.*a?
  16: math.*r?
  17: math.*r*?
  18: math.*rand*?
  19: *rand*?
  20: *rand*?
</pre>

<p>Užitečný je i přepínač <strong>-g</strong>, který nám umožňuje specifikovat
vzorek (<i>pattern</i>), který je následně vyhledáván v&nbsp;historii příkazů.
Vzorek ovšem v&nbsp;tomto případě není běžným regulárním výrazem, ale
&bdquo;globem&ldquo; využívaným například v&nbsp;shellu při specifikaci jmen
souborů. Podporovány jsou tedy zejména žolíkové znaky &bdquo;*&ldquo; a
&bdquo;?&ldquo;. Podívejme se nyní na využití tohoto přepínače:</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-2.png" class="image-443670" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 4: Několik běžných příkazů, které se zapíšou do historie IPythonu
(pro aktivní sezení).</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-3.png" class="image-443671" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 5: Výpis celé historie příkazů.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-4.png" class="image-443672" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 6: Výpis příkazů obsahujících řetězec
&bdquo;foobar&ldquo;.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-5.png" class="image-443673" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 7: Výpis příkazů obsahujících vzorek &bdquo;oo&ldquo; následovaný
libovolnými znaky.</i></p>

<p><div class="rs-tip-major">Poznámka: s&nbsp;historií zapsaných příkazů jsme
se již seznámili v&nbsp;úvodním článku o IPythonu. Za připomenutí stojí zejména
možnost programového přístupu k&nbsp;historii přes seznamy pojmenované
<strong>In</strong> a <strong>Out</strong>. Historie zapsaných řádků je
dostupná po stisku klávesové zkratky <strong>Ctrl+R</strong>, která spustí
režim prohledávání v&nbsp;historii. Jednoduchý průchod historií nabízí i
kurzorové šipky nahoru a dolů.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Uložení a obnova obsahu proměnných z&nbsp;diskového úložiště</h2>

<p>Minule jsme se seznámili i s&nbsp;kouzelnou funkcí pojmenovanou
<strong>%save</strong>, kterou je možné použít pro uložení zdrojového textu či
jeho části (popř.&nbsp;i jednotlivých příkazů) do specifikovaného souboru.
Existuje ovšem i možnost uložení obsahu vybraných proměnných, které tak dokážou
&bdquo;přežít&ldquo; ukončení IPythonu. Pro tento účel slouží magická funkce
nazvaná <strong>%store</strong>, která slouží pro uložení vybraných (explicitně
zapsaných) proměnných na disk. Po opětovném spuštění IPythonu se tyto proměnné
mohou obnovit příkazem <strong>%store</strong> s&nbsp;přepínačem
<strong>-r</strong>:</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-6.png" class="image-443674" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 8: Nápověda zobrazená ke kouzelné funkci
<strong>%history</strong>.</i></p>

<p>Opět si ukažme použití této velmi užitečné kouzelné funkce na jednoduchém
příkladě:</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-7.png" class="image-443675" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 9: Definice několika proměnných globálních v&nbsp;rámci
aktuálního jmenného prostoru.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-8.png" class="image-443676" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 10: Explicitní uložení proměnných na disk kouzelnou funkcí
%store.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-9.png" class="image-443677" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 11: Po opětovném startu IPythonu nejsou dříve uložené proměnné
dostupné (začíná se tedy pracovat &bdquo;na zelené louce&ldquo;).</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-10.png" class="image-443678" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 12: Načtení obsahu proměnných z&nbsp;disku &ndash; proměnné i
jejich obsah (včetně typu) byly obnoveny.</i></p>

<p><div class="rs-tip-major">Poznámka: hodnoty proměnných jsou uloženy
v&nbsp;podadresáři &bdquo;~/.ipython/profile_default/db/autorestore&ldquo;. Pro
serializaci a deserializaci se používá modul <i>pickle</i>, takže uložit lze
jen ty proměnné, jejichž obsah je skutečně serializovatelný (může se jednat i o
objekty atd.):</div></p>

<pre>
$ <strong>ls -1 ~/.ipython/profile_default/db/autorestore/</strong>
&nbsp;
a
b
c
d
e
f
g
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Výpis proměnných popř.&nbsp;jejich typů</h2>

<p>Další dvě kouzelné funkce vestavěné do IPythonu, s&nbsp;nimiž se
v&nbsp;dnešním článku ve stručnosti seznámíme, se jmenují <strong>%who</strong>
a <strong>%whos</strong>. První z&nbsp;těchto funkcí vypíše obsah všech
manuálně definovaných globálních proměnných popř.&nbsp;proměnných, které
odpovídají zadanému vzoru (viz též kouzelnou funkci <strong>%history</strong>
<a href="#k02">zmíněnou výše</a>):</p>

<img src="https://i.iinfo.cz/images/620/ipython1-6-7.png" class="image-443489" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 13: Nápověda zobrazená ke kouzelné funkci
<strong>%who</strong>.</i></p>

<p>Funkce <strong>%whos</strong> provádí podobnou činnost, ovšem s&nbsp;tím,
rozdílem, že se o proměnných vypíše větší množství informací (typ i
hodnotu):</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-11.png" class="image-443679" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 14: Nápověda zobrazená ke kouzelné funkci
<strong>%whos</strong>.</i></p>

<p>Základní použití těchto dvou funkcí je ukázáno na dvojici screenshotů:</p>

<img src="https://i.iinfo.cz/images/620/ipython1-6-8.png" class="image-443490" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 15: Použití kouzelné funkce <strong>%whos</strong>.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-12.png" class="image-443680" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 16: Použití kouzelných funkcí <strong>%who</strong> a
<strong>%whos</strong> v&nbsp;jiném sezení (session) s&nbsp;odlišnými
proměnnými.</i></p>

<p><div class="rs-tip-major">Poznámka: důležité je, že se vypíšou <i>manuálně
zadané</i> proměnné, nikoli všechny globálně viditelné proměnné. To by
v&nbsp;praxi totiž nemuselo být příliš užitečné, neboť po načtení několika
balíčků může být počet všech globálně viditelných proměnných
obrovský.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Zjištění doby běhu určité funkce či části kódu</h2>

<p>Mnohdy je zapotřebí zjistit dobu trvání běhu nějaké Pythonovské funkce
popř.&nbsp;části kódu. K&nbsp;tomuto účelu je možné v&nbsp;IPythonu použít
kouzelnou funkci nazvanou příznačně <strong>%timeit</strong>, která dokonce
umožňuje opakované měření (což zlepší přesnost a eliminuje případný čas nutný
pro &bdquo;zahřátí&ldquo; daného kusu kódu):</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-13.png" class="image-443681" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 17: Nápověda zobrazená ke kouzelné funkci
<strong>%timeit</strong>.</i></p>

<p>Použití této magické funkce je ve skutečnosti velmi snadné, což je ostatně
patrné i z&nbsp;následující čtveřice screenshotů s&nbsp;popisem prováděných
operací:</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-14.png" class="image-443682" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 18: Přenos zdrojového kódu funkce pro (dosti neefektivní) výpočet
faktoriálu do prostředí IPythonu přes schránku s&nbsp;využitím již dříve
popsané magické funkce <strong>%cpaste</strong>.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-15.png" class="image-443683" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 19: Změření doby výpočtu faktoriálu ze sedmi měření, z&nbsp;nichž
každé výpočet spustilo 10000&times;.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-16.png" class="image-443684" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 20: Změna počtu spuštění měřené funkce pro každé ze sedmi
měření.</i></p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-17.png" class="image-443685" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 21: Modifikovat je možné v&nbsp;případě potřeby i samotný počet
měření (ve výchozím nastavení se provádí sedm měření).</i></p>

<p><div class="rs-tip-major">Poznámka: zmenšení počtu měření popř.&nbsp;to,
kolik výpočtů se má v&nbsp;každém měření provést, do značné míry záleží na
časové složitosti měřeného kódu. Výpočet faktoriálu probíhá (z&nbsp;lidského
pohledu) velmi rychle, takže pro rozumnou přesnost měření času bylo zapotřebí
provést v&nbsp;každém měření 10000 výpočtů. U déletrvajících funkcí to však
mohou být pouze jednotky výpočtů.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Spuštění vybrané funkce v&nbsp;profileru</h2>

<p>Kromě jednoduchého měření času lze vybranou funkci spustit
v&nbsp;pythonovském <i>profileru</i>, a to konkrétně s&nbsp;využitím kouzelné
funkce nazvané <strong>%prun</strong> (neboli <i>profiler run</i>). Výsledkem
budou podrobnější informace o tom, jaké funkce byly v&nbsp;průběhu sledování a
měření volány a co se v&nbsp;průběhu měření vlastně dělo (přístupy do databáze,
čisté výpočty atd.):</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-18.png" class="image-443686" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 22: Nápověda zobrazená ke kouzelné funkci
<strong>%prun</strong>.</i></p>

<p>Ukázka výsledků získaných funkcí <strong>%prun</strong> při zavolání
jednoduché funkce pro výpočet faktoriálu (která je rekurzivní a interně nevolá
další funkce kromě vyhodnocování konstrukce <strong>assert</strong>):</p>

<img src="https://i.iinfo.cz/images/246/ipython2-1-19.png" class="image-443687" alt="&#160;" width="644" height="429" />
<p><i>Obrázek 23: Výsledky získané profilerem přes magickou funkci
<strong>%prun</strong>.</i></p>

<p>Následuje další demonstrační příklad ukazující, která část funkce pro převod
celočíselné hodnoty na římské číslice je časově nejsložitější (pro daný
vstup):</p>

<pre>
In [2]: # <strong>%load roman_test.py </strong>
   ...: def roman(number): 
   ...:     return ( 
   ...:             (number * 'I') 
   ...:             .replace('IIIII', 'V') 
   ...:             .replace('IIII', 'IV') 
   ...:             .replace('VV', 'X') 
   ...:             .replace('VIV', 'IX') 
   ...:             .replace('XXXXX', 'L') 
   ...:             .replace('XXXX', 'XL') 
   ...:             .replace('LL', 'C') 
   ...:             .replace('LXL', 'XC') 
   ...:             .replace('CCCCC', 'D') 
   ...:             .replace('CCCC', 'CD') 
   ...:             .replace('DD', 'M') 
   ...:             .replace('DCD', 'CM') 
   ...:     ) 
   ...:  
&nbsp;
In [3]: %prun roman(999999)
         16 function calls in 0.016 seconds
&nbsp;
   Ordered by: internal time
&nbsp;
   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
       12    0.015    0.001    0.015    0.001 {method 'replace' of 'str' objects}
        1    0.001    0.001    0.016    0.016 &lt;ipython-input-2-e61a7f8b7a92&gt;:2(roman)
        1    0.000    0.000    0.016    0.016 {built-in method builtins.exec}
        1    0.000    0.000    0.016    0.016 &lt;string&gt;:1(&lt;module&gt;)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}

</pre>

<p><div class="rs-tip-major">Poznámka: nejedná se o můj algoritmus, ale uvádím
ho zde mj.&nbsp;i proto, že je velmi elegantní, i když možná nikoli
nejrychlejší.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

%%python2
%%bash

<img src="https://i.iinfo.cz/images/620/ipython1-6-6.png" class="image-443488" alt="&#160;" width="644" height="429" />
<p><i>Obrázek xx: </i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Příloha: seznam standardních kouzelných funkcí IPythonu</h2>

<p>V&nbsp;následující tabulce jsou vypsány standardní kouzelné funkce IPythonu,
které pracují s&nbsp;jediným vstupním řádkem, nikoli tedy s&nbsp;celou
několikařádkovou buňkou:</p>

<table>
<tr><th> #</th><th>Kouzelná funkce</th></tr>
<tr><td> 1</td><td>%alias</td></tr>
<tr><td> 2</td><td>%alias_magic</td></tr>
<tr><td> 3</td><td>%autoawait</td></tr>
<tr><td> 4</td><td>%autocall</td></tr>
<tr><td> 5</td><td>%autoindent</td></tr>
<tr><td> 6</td><td>%automagic</td></tr>
<tr><td> 7</td><td>%bookmark</td></tr>
<tr><td> 8</td><td>%cat</td></tr>
<tr><td> 9</td><td>%cd</td></tr>
<tr><td>10</td><td>%clear</td></tr>
<tr><td>11</td><td>%colors</td></tr>
<tr><td>12</td><td>%conda</td></tr>
<tr><td>13</td><td>%config</td></tr>
<tr><td>14</td><td>%cp</td></tr>
<tr><td>15</td><td>%cpaste</td></tr>
<tr><td>16</td><td>%debug</td></tr>
<tr><td>17</td><td>%dhist</td></tr>
<tr><td>18</td><td>%dirs</td></tr>
<tr><td>19</td><td>%doctest_mode</td></tr>
<tr><td>20</td><td>%ed</td></tr>
<tr><td>21</td><td>%edit</td></tr>
<tr><td>22</td><td>%env</td></tr>
<tr><td>23</td><td>%gui</td></tr>
<tr><td>24</td><td>%hist</td></tr>
<tr><td>25</td><td>%history</td></tr>
<tr><td>26</td><td>%killbgscripts</td></tr>
<tr><td>27</td><td>%ldir</td></tr>
<tr><td>28</td><td>%less</td></tr>
<tr><td>29</td><td>%lf</td></tr>
<tr><td>30</td><td>%lk</td></tr>
<tr><td>31</td><td>%ll</td></tr>
<tr><td>32</td><td>%load</td></tr>
<tr><td>33</td><td>%load_ext</td></tr>
<tr><td>34</td><td>%loadpy</td></tr>
<tr><td>35</td><td>%logoff</td></tr>
<tr><td>36</td><td>%logon</td></tr>
<tr><td>37</td><td>%logstart</td></tr>
<tr><td>38</td><td>%logstate</td></tr>
<tr><td>39</td><td>%logstop</td></tr>
<tr><td>40</td><td>%ls</td></tr>
<tr><td>41</td><td>%lsmagic</td></tr>
<tr><td>42</td><td>%lx</td></tr>
<tr><td>43</td><td>%macro</td></tr>
<tr><td>44</td><td>%magic</td></tr>
<tr><td>45</td><td>%man</td></tr>
<tr><td>46</td><td>%matplotlib</td></tr>
<tr><td>47</td><td>%mkdir</td></tr>
<tr><td>48</td><td>%more</td></tr>
<tr><td>49</td><td>%mv</td></tr>
<tr><td>50</td><td>%notebook</td></tr>
<tr><td>51</td><td>%page</td></tr>
<tr><td>52</td><td>%paste</td></tr>
<tr><td>53</td><td>%pastebin</td></tr>
<tr><td>54</td><td>%pdb</td></tr>
<tr><td>55</td><td>%pdef</td></tr>
<tr><td>56</td><td>%pdoc</td></tr>
<tr><td>57</td><td>%pfile</td></tr>
<tr><td>58</td><td>%pinfo</td></tr>
<tr><td>59</td><td>%pinfo2</td></tr>
<tr><td>60</td><td>%pip</td></tr>
<tr><td>61</td><td>%popd</td></tr>
<tr><td>62</td><td>%pprint</td></tr>
<tr><td>63</td><td>%precision</td></tr>
<tr><td>64</td><td>%prun</td></tr>
<tr><td>65</td><td>%psearch</td></tr>
<tr><td>66</td><td>%psource</td></tr>
<tr><td>67</td><td>%pushd</td></tr>
<tr><td>68</td><td>%pwd</td></tr>
<tr><td>69</td><td>%pycat</td></tr>
<tr><td>70</td><td>%pylab</td></tr>
<tr><td>71</td><td>%quickref</td></tr>
<tr><td>72</td><td>%recall</td></tr>
<tr><td>73</td><td>%rehashx</td></tr>
<tr><td>74</td><td>%reload_ext</td></tr>
<tr><td>75</td><td>%rep</td></tr>
<tr><td>76</td><td>%rerun</td></tr>
<tr><td>77</td><td>%reset</td></tr>
<tr><td>78</td><td>%reset_selective</td></tr>
<tr><td>79</td><td>%rm</td></tr>
<tr><td>80</td><td>%rmdir</td></tr>
<tr><td>81</td><td>%run</td></tr>
<tr><td>82</td><td>%save</td></tr>
<tr><td>83</td><td>%sc</td></tr>
<tr><td>84</td><td>%set_env</td></tr>
<tr><td>85</td><td>%store</td></tr>
<tr><td>86</td><td>%sx</td></tr>
<tr><td>87</td><td>%system</td></tr>
<tr><td>88</td><td>%tb</td></tr>
<tr><td>89</td><td>%time</td></tr>
<tr><td>90</td><td>%timeit</td></tr>
<tr><td>91</td><td>%unalias</td></tr>
<tr><td>92</td><td>%unload_ext</td></tr>
<tr><td>93</td><td>%who</td></tr>
<tr><td>94</td><td>%who_ls</td></tr>
<tr><td>95</td><td>%whos</td></tr>
<tr><td>96</td><td>%xdel</td></tr>
<tr><td>97</td><td>%xmode</td></tr>
</table>

<p>Samozřejmě jsou k&nbsp;dispozici i magické funkce určené pro zpracování celé
buňky, jejíž obsah může přesáhnout několik řádků a typicky obsahuje blok kódu
(celou funkci atd.):</p>

<table>
<tr><th> #</th><th>Kouzelná funkce</th></tr>
<tr><td> 1</td><td>%%!</td></tr>
<tr><td> 2</td><td>%%HTML</td></tr>
<tr><td> 3</td><td>%%SVG</td></tr>
<tr><td> 4</td><td>%%bash</td></tr>
<tr><td> 5</td><td>%%capture</td></tr>
<tr><td> 6</td><td>%%debug</td></tr>
<tr><td> 7</td><td>%%file</td></tr>
<tr><td> 8</td><td>%%html</td></tr>
<tr><td> 9</td><td>%%javascript</td></tr>
<tr><td>10</td><td>%%js</td></tr>
<tr><td>11</td><td>%%latex</td></tr>
<tr><td>12</td><td>%%markdown</td></tr>
<tr><td>13</td><td>%%perl</td></tr>
<tr><td>14</td><td>%%prun</td></tr>
<tr><td>15</td><td>%%pypy</td></tr>
<tr><td>16</td><td>%%python</td></tr>
<tr><td>17</td><td>%%python2</td></tr>
<tr><td>18</td><td>%%python3</td></tr>
<tr><td>19</td><td>%%ruby</td></tr>
<tr><td>20</td><td>%%script</td></tr>
<tr><td>21</td><td>%%sh</td></tr>
<tr><td>22</td><td>%%svg</td></tr>
<tr><td>23</td><td>%%sx</td></tr>
<tr><td>24</td><td>%%system</td></tr>
<tr><td>25</td><td>%%time</td></tr>
<tr><td>26</td><td>%%timeit</td></tr>
<tr><td>27</td><td>%%writefile</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: všechny kouzelné funkce je možné vypsat
opět kouzelnou funkcí, konkrétně funkcí nazvanou
<strong>%lsmagic</strong>.</div></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Use IPython REPL in VS Code<br />
<a href="https://stackoverflow.com/questions/52310689/use-ipython-repl-in-vs-code">https://stackoverflow.com/questions/52310689/use-ipython-repl-in-vs-code</a>
</li>

<li>IPython for VSCode<br />
<a href="https://marketplace.visualstudio.com/items?itemName=pancho111203.vscode-ipython">https://marketplace.visualstudio.com/items?itemName=pancho111203.vscode-ipython</a>
</li>

<li>Domovská stránka projektu IPython<br />
<a href="https://ipython.org/">https://ipython.org/</a>
</li>

<li>IPython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IPython">https://en.wikipedia.org/wiki/IPython</a>
</li>

<li>Projekt IPython na PyPi<br />
<a href="https://pypi.org/project/ipython/">https://pypi.org/project/ipython/</a>
</li>

<li>Dokumentace k IPythonu<br />
<a href="http://ipython.org/documentation.html#">http://ipython.org/documentation.html#</a>
</li>

<li>IPython Documentation (na ReadTheDocs)<br />
<a href="https://ipython.readthedocs.io/en/stable/">https://ipython.readthedocs.io/en/stable/</a>
</li>

<li>IPython Tutorial<br />
<a href="http://ipython.readthedocs.org/en/stable/interactive/tutorial.html">http://ipython.readthedocs.org/en/stable/interactive/tutorial.html</a>
</li>

<li>IPython Tips &amp; Tricks<br />
<a href="https://ipython.readthedocs.io/en/stable/interactive/tips.html">https://ipython.readthedocs.io/en/stable/interactive/tips.html</a>
</li>

<li>IPython cookbook<br />
<a href="https://github.com/ipython/ipython/wiki?path=Cookbook">https://github.com/ipython/ipython/wiki?path=Cookbook</a>
</li>

<li>Cookbook: Index<br />
<a href="https://github.com/ipython/ipython/wiki/Cookbook%3A-Index">https://github.com/ipython/ipython/wiki/Cookbook%3A-Index</a>
</li>

<li>Projects using IPython<br />
<a href="https://github.com/ipython/ipython/wiki/Projects-using-IPython">https://github.com/ipython/ipython/wiki/Projects-using-IPython</a>
</li>

<li>Sebastian Witowski - Wait, IPython can do that?!<br />
<a href="https://www.youtube.com/watch?v=3i6db5zX3Rw">https://www.youtube.com/watch?v=3i6db5zX3Rw</a>
</li>

<li>vim-ipython<br />
<a href="https://github.com/ivanov/vim-ipython">https://github.com/ivanov/vim-ipython</a>
</li>

<li>IPython Frequently asked questions<br />
<a href="https://github.com/ipython/ipython/wiki/Frequently-asked-questions">https://github.com/ipython/ipython/wiki/Frequently-asked-questions</a>
</li>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>Read-eval-print loop (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop</a>
</li>

<li>Domovská stránka programovacího jazyka Python<br />
<a href="https://www.python.org/">https://www.python.org/</a>
</li>

<li>Domovská stránka projektu bpython<br />
<a href="https://bpython-interpreter.org/">https://bpython-interpreter.org/</a>
</li>

<li>Projekt bpython na PyPi<br />
<a href="https://pypi.org/project/bpython/">https://pypi.org/project/bpython/</a>
</li>

<li>Git repositář projektu bpython<br />
<a href="https://github.com/bpython/bpython">https://github.com/bpython/bpython</a>
</li>

<li>Projekt ptpython na PyPi<br />
<a href="https://pypi.org/project/ptpython/">https://pypi.org/project/ptpython/</a>
</li>

<li>Git repositář projektu ptpython<br />
<a href="https://github.com/prompt-toolkit/ptpython">https://github.com/prompt-toolkit/ptpython</a>
</li>

<li>Domovská stránka projektu DreamPie<br />
<a href="http://www.dreampie.org/">http://www.dreampie.org/</a>
</li>

<li>Projekt DreamPie na PyPi<br />
<a href="https://pypi.org/project/dreampie/">https://pypi.org/project/dreampie/</a>
</li>

<li>Git repositář projektu DreamPie<br />
<a href="https://github.com/noamraph/dreampie">https://github.com/noamraph/dreampie</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: praktické použití IPython Notebooku a knihovny Numpy<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: praktické použití IPython Notebooku a knihovny Numpy (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy-2-cast/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/</a>
</li>

<li>Is IPython Notebook ever used as an IDE, or merely for presentations?<br />
<a href="https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/">https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/</a>
</li>

<li>The IDE as a Bad Programming Language Enabler <br />
<a href="https://dzone.com/articles/ide-bad-programming-language">https://dzone.com/articles/ide-bad-programming-language</a>
</li>

<li>Enhanced Interactive Python with IPython<br />
<a href="http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html">http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html</a>
</li>

<li>Příkazový řádek – přítel nejvěrnější<br />
<a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi/">https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi/</a>
</li>

<li>Příkazový řádek - přítel nejvěrnější (2)<br />
<a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/">https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/</a>
</li>

<li>Picking a Python Interpreter (3 vs 2)<br />
<a href="https://docs.python-guide.org/starting/which-python/">https://docs.python-guide.org/starting/which-python/</a>
</li>

<li>Využití knihovny Pygments (nejenom) pro obarvení zdrojových kódů<br />
<a href="https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu/">https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu/</a>
</li>

<li>Využití knihovny Pygments (nejenom) pro obarvení zdrojových kódů: vlastní filtry a lexery<br />
<a href="https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu-vlastni-filtry-a-lexery/">https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu-vlastni-filtry-a-lexery/</a>
</li>

<li>Knihovna Jedi: doplňování kódu a statická analýza kódu v Pythonu<br />
<a href="https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu/">https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu/</a>
</li>

<li>Knihovna Jedi: doplňování kódu a statická analýza kódu v Pythonu (dokončení)<br />
<a href="https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu-dokonceni/">https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu-dokonceni/</a>
</li>

<li>Pygments – Python syntax highlighter<br />
<a href="http://pygments.org/">http://pygments.org/</a>
</li>

<li>Pygments (dokumentace)<br />
<a href="http://pygments.org/docs/">http://pygments.org/docs/</a>
</li>

<li>Write your own lexer<br />
<a href="http://pygments.org/docs/le­xerdevelopment/">http://pygments.org/docs/le­xerdevelopment/</a>
</li>

<li>Jazyky podporované knihovnou Pygments<br />
<a href="http://pygments.org/languages/">http://pygments.org/languages/</a>
</li>

<li>Pygments FAQ<br />
<a href="http://pygments.org/faq/">http://pygments.org/faq/</a>
</li>

<li>Pygments 2.2.0 (na PyPi)<br />
<a href="https://pypi.org/project/Pygments/">https://pypi.org/project/Pygments/</a>
</li>

<li>Syntax highlighting<br />
<a href="https://en.wikipedia.org/wi­ki/Syntax_highlighting">https://en.wikipedia.org/wi­ki/Syntax_highlighting</a>
</li>

<li>Jedi – an awesome autocompletion/static analysis library for Python<br />
<a href="https://jedi.readthedocs.i­o/en/latest/index.html">https://jedi.readthedocs.i­o/en/latest/index.html</a>
</li>

<li>Jedi API Overview<br />
<a href="https://jedi.readthedocs.i­o/en/latest/docs/api.html">https://jedi.readthedocs.i­o/en/latest/docs/api.html</a>
</li>

<li>jedi-vim<br />
<a href="https://github.com/davidhalter/jedi-vim">https://github.com/davidhalter/jedi-vim</a>
</li>

<li>Tvorba textového rozhraní s knihovnou prompt_toolkit: základní prvky TUI<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/">https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/</a>
</li>

<li>Tvorba TUI s knihovnou prompt_toolkit: aplikace s celoobrazovkovým rozhraním<br />
<a href="https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/">https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/</a>
</li>

<li>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-uzivatelskeho-rozhrani-s-knihovnou-prompt-toolkit-ovladaci-prvky-widgety/">https://www.root.cz/clanky/tvorba-textoveho-uzivatelskeho-rozhrani-s-knihovnou-prompt-toolkit-ovladaci-prvky-widgety/</a>
</li>

<li>ØMQ: knihovna pro asynchronní předávání zpráv<br />
<a href="https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/">https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/</a>
</li>

<li>Další možnosti poskytované knihovnou ØMQ<br />
<a href="https://www.root.cz/clanky/dalsi-moznosti-poskytovane-knihovnou-mq/">https://www.root.cz/clanky/dalsi-moznosti-poskytovane-knihovnou-mq/</a>
</li>

<li>What is the difference between Jupyter and IPython Notebook?<br />
<a href="https://www.quora.com/What-is-the-difference-between-Jupyter-and-IPython-Notebook">https://www.quora.com/What-is-the-difference-between-Jupyter-and-IPython-Notebook</a>
</li>

<li>Jupyter kernels<br />
<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a>
</li>

<li>Keyboard Shortcuts in the IPython Shell<br />
<a href="https://jakevdp.github.io/PythonDataScienceHandbook/01.02-shell-keyboard-shortcuts.html">https://jakevdp.github.io/PythonDataScienceHandbook/01.02-shell-keyboard-shortcuts.html</a>
</li>

<li>New terminal interface<br />
<a href="https://ipython.readthedocs.io/en/stable/whatsnew/version5.html#new-terminal-interface">https://ipython.readthedocs.io/en/stable/whatsnew/version5.html#new-terminal-interface</a>
</li>

<li>prompt-toolkit<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/stable/">https://python-prompt-toolkit.readthedocs.io/en/stable/</a>
</li>

<li>Tvorba aplikací s&nbsp;příkazovým řádkem v&nbsp;Pythonu s&nbsp;knihovnami GNU Readline a prompt_toolkit<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/">https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/</a>
</li>

<li>Tvorba aplikací s&nbsp;textovým uživatelským rozhraním založeným na knihovně prompt_toolkit<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/">https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/</a>
</li>

<li>Tvorba textového rozhraní s&nbsp;knihovnou prompt_toolkit: základní prvky TUI<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/">https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/</a>
</li>

<li>Tvorba TUI s&nbsp;knihovnou prompt_toolkit: aplikace s&nbsp;celoobrazovkovým rozhraním<br />
<a href="https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/">https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

