<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>PDM: moderní správce balíčků a virtuálních prostředí Pythonu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>PDM: moderní správce balíčků a virtuálních prostředí Pythonu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. PDM: moderní správce balíčků a virtuálních prostředí Pythonu</a></p>
<p><a href="#k02">2. Instalace nástroje PDM</a></p>
<p><a href="#k03">3. První spuštění nástroje PDM</a></p>
<p><a href="#k04">*** 4. Vytvoření kostry projektu bez dalších závislostí</a></p>
<p><a href="#k05">*** 5. Struktura nově vytvořeného projektu, soubor <strong>pyproject.toml</strong></a></p>
<p><a href="#k06">*** 6. Přidání dalšího balíčku do projektu</a></p>
<p><a href="#k07">*** 7. Soubor <strong>pdm.lock</strong></a></p>
<p><a href="#k08">*** 8. Projekt s&nbsp;více závislostmi</a></p>
<p><a href="#k09">*** 9. Nová podoba souboru <strong>pdm.lock</strong></a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. PDM: moderní správce balíčků a virtuálních prostředí Pythonu</h2>


Pipenv
kombinuje pip a venv

Poetry
zalozeno na pyproject.toml, ovsem neodpovida PEP-621

Hatch
pep 621

https://github.com/pdm-project/pdm




<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace nástroje PDM</h2>

<p>Existuje hned několik variant instalace nástroje <i>PDM</i>. Jedna
z&nbsp;nabízených možností spočívá ve stažení instalačního skriptu
(naprogramovaného v&nbsp;Pythonu) z&nbsp;webové stránky projektu <i>PDM</i> a
v&nbsp;jeho následném spuštění. Tuto operaci lze provést jediným příkazem:</p>

<pre>
$ <strong>curl -sSL https://pdm.fming.dev/install-pdm.py | python3 -</strong>
</pre>

<p>Lepší je však si nejprve ověřit kontrolní součet stahovaného instalačního
skriptu. Postup je snadný a nalezneme ho na stránkách samotného projektu
PDM:</p>

<pre>
$ <strong>curl -sSLO https://pdm.fming.dev/install-pdm.py</strong>
$ <strong>curl -sSL https://pdm.fming.dev/install-pdm.py.sha256 | shasum -a 256 -c -</strong>
$ <strong>python3 install-pdm.py [options]</strong>
</pre>

<p>Jelikož je balíček <i>PDM</i> dostupný i na <a
href="https://pypi.org/project/pdm/">PyPi</a>, je jeho instalace možná i přes
nástroj <strong>pip</strong> resp.&nbsp;<strong>pip3</strong>. Podívejme se,
jak může tato forma instalace vypadat v&nbsp;praxi. Instalaci můžeme provést
buď pro celý systém (PDM bude dostupný pro všechny uživatele) nebo pouze pro
aktuálně přihlášeného uživatele:</p>

<pre>
$ <strong>pip3 install --user pdm</strong>
</pre>

<p>Jak je z&nbsp;následujícího výpisu prováděných operací patrné, závisí
<i>PDM</i> na poměrně velkém množství dalších balíčků. Ovšem celková velikost
nainstalovaných souborů nepřesáhne několik megabajtů:</p>

<pre>
Collecting pdm
  Downloading pdm-2.9.3-py3-none-any.whl (238 kB)
     |████████████████████████████████| 238 kB 2.1 MB/s 
Collecting resolvelib&gt;=1.0.1
  Downloading resolvelib-1.0.1-py2.py3-none-any.whl (17 kB)
Collecting pyproject-hooks
  Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)
Collecting unearth&gt;=0.10.0
  Downloading unearth-0.11.1-py3-none-any.whl (41 kB)
     |████████████████████████████████| 41 kB 585 kB/s 
Collecting importlib-metadata&gt;=3.6; python_version &lt; "3.10"
  Downloading importlib_metadata-6.8.0-py3-none-any.whl (22 kB)
Collecting findpython&lt;1.0.0a0,&gt;=0.4.0
  Downloading findpython-0.4.0-py3-none-any.whl (20 kB)
Collecting rich&gt;=12.3.0
  Downloading rich-13.6.0-py3-none-any.whl (239 kB)
     |████████████████████████████████| 239 kB 11.2 MB/s 
Collecting requests-toolbelt
  Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)
     |████████████████████████████████| 54 kB 1.5 MB/s 
Collecting cachecontrol[filecache]&gt;=0.13.0
  Downloading cachecontrol-0.13.1-py3-none-any.whl (22 kB)
Collecting installer&lt;0.8,&gt;=0.7
  Downloading installer-0.7.0-py3-none-any.whl (453 kB)
     |████████████████████████████████| 453 kB 2.4 MB/s 
Collecting python-dotenv&gt;=0.15
  Downloading python_dotenv-1.0.0-py3-none-any.whl (19 kB)
Requirement already satisfied: blinker in /usr/lib/python3/dist-packages (from pdm) (1.4)
Requirement already satisfied: importlib-resources&gt;=5; python_version &lt; "3.9" in ./.local/lib/python3.8/site-packages (from pdm) (6.1.0)
Requirement already satisfied: tomli&gt;=1.1.0; python_version &lt; "3.11" in ./.local/lib/python3.8/site-packages (from pdm) (2.0.1)
Requirement already satisfied: certifi in /usr/lib/python3/dist-packages (from pdm) (2019.11.28)
Collecting shellingham&gt;=1.3.2
  Downloading shellingham-1.5.3-py2.py3-none-any.whl (9.7 kB)
Collecting tomlkit&lt;1,&gt;=0.11.1
  Downloading tomlkit-0.12.1-py3-none-any.whl (37 kB)
Collecting platformdirs
  Downloading platformdirs-3.11.0-py3-none-any.whl (17 kB)
Collecting virtualenv&gt;=20
  Downloading virtualenv-20.24.5-py3-none-any.whl (3.7 MB)
     |████████████████████████████████| 3.7 MB 6.6 MB/s 
Collecting packaging!=22.0,&gt;=20.9
  Downloading packaging-23.2-py3-none-any.whl (53 kB)
     |████████████████████████████████| 53 kB 1.9 MB/s 
Collecting requests&gt;=2.25
  Downloading requests-2.31.0-py3-none-any.whl (62 kB)
     |████████████████████████████████| 62 kB 1.2 MB/s 
Requirement already satisfied: zipp&gt;=0.5 in ./.local/lib/python3.8/site-packages (from importlib-metadata&gt;=3.6; python_version &lt; "3.10"-&gt;pdm) (3.17.0)
Collecting markdown-it-py&gt;=2.2.0
  Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)
     |████████████████████████████████| 87 kB 2.6 MB/s 
Requirement already satisfied: typing-extensions&lt;5.0,&gt;=4.0.0; python_version &lt; "3.9" in ./.local/lib/python3.8/site-packages (from rich&gt;=12.3.0-&gt;pdm) (4.7.1)
Collecting pygments&lt;3.0.0,&gt;=2.13.0
  Downloading Pygments-2.16.1-py3-none-any.whl (1.2 MB)
     |████████████████████████████████| 1.2 MB 8.9 MB/s 
Collecting msgpack&gt;=0.5.2
  Downloading msgpack-1.0.7-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (534 kB)
     |████████████████████████████████| 534 kB 6.7 MB/s 
Collecting filelock&gt;=3.8.0; extra == "filecache"
  Downloading filelock-3.12.4-py3-none-any.whl (11 kB)
Collecting distlib&lt;1,&gt;=0.3.7
  Downloading distlib-0.3.7-py2.py3-none-any.whl (468 kB)
     |████████████████████████████████| 468 kB 5.7 MB/s 
Requirement already satisfied: urllib3&lt;3,&gt;=1.21.1 in /usr/lib/python3/dist-packages (from requests&gt;=2.25-&gt;unearth&gt;=0.10.0-&gt;pdm) (1.25.8)
Requirement already satisfied: idna&lt;4,&gt;=2.5 in /usr/lib/python3/dist-packages (from requests&gt;=2.25-&gt;unearth&gt;=0.10.0-&gt;pdm) (2.8)
Collecting charset-normalizer&lt;4,&gt;=2
  Downloading charset_normalizer-3.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (137 kB)
     |████████████████████████████████| 137 kB 14.2 MB/s 
Collecting mdurl~=0.1
  Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)
Installing collected packages: resolvelib, pyproject-hooks, packaging, charset-normalizer, requests, unearth, importlib-metadata, findpython, mdurl, markdown-it-py, pygments, rich, requests-toolbelt, msgpack, filelock, cachecontrol, installer, python-dotenv, shellingham, tomlkit, platformdirs, distlib, virtualenv, pdm
Successfully installed cachecontrol-0.13.1 charset-normalizer-3.3.0 distlib-0.3.7 filelock-3.12.4 findpython-0.4.0 importlib-metadata-6.8.0 installer-0.7.0 markdown-it-py-3.0.0 mdurl-0.1.2 msgpack-1.0.7 packaging-23.2 pdm-2.9.3 platformdirs-3.11.0 pygments-2.16.1 pyproject-hooks-1.0.0 python-dotenv-1.0.0 requests-2.31.0 requests-toolbelt-1.0.0 resolvelib-1.0.1 rich-13.6.0 shellingham-1.5.3 tomlkit-0.12.1 unearth-0.11.1 virtualenv-20.24.5
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. První spuštění nástroje PDM</h2>

<p>Po doufejme že úspěšné instalaci by mělo být možné spustit příkaz
<strong>pdm</strong>. Nejnovější a v&nbsp;době vydání článku aktuální verze PDM
je 2.9.3, což si můžeme velmi snadno ověřit (ostatně tato verze se vypisovala
již při instalaci balíčků provedené v&nbsp;rámci předchozí kapitoly):</p>

<pre>
$ <strong>pdm --version</strong>
&nbsp;
PDM, version 2.9.3
&nbsp;
Usage: pdm [-h] [-V] [-c CONFIG] [-v] [-I] [--pep582 [SHELL]] ...
&nbsp;
    ____  ____  __  ___
   / __ \/ __ \/  |/  /
  / /_/ / / / / /|_/ /
 / ____/ /_/ / /  / /
/_/   /_____/_/  /_/
&nbsp;
Options:
  -h, --help            Show this help message and exit.
  -V, --version         Show the version and exit
  -c CONFIG, --config CONFIG
                        Specify another config file path [env var:
                        PDM_CONFIG_FILE]
  -v, --verbose         Use `-v` for detailed output and `-vv` for more
                        detailed
  -I, --ignore-python   Ignore the Python path saved in .pdm-python. [env var:
                        PDM_IGNORE_SAVED_PYTHON]
  --pep582 [SHELL]      Print the command line to be eval'd by the shell
&nbsp;
Commands:
  add                   Add package(s) to pyproject.toml and install them
  build                 Build artifacts for distribution
  cache                 Control the caches of PDM
  completion            Generate completion scripts for the given shell
  config                Display the current configuration
  export                Export the locked packages set to other formats
  fix                   Fix the project problems according to the latest
                        version of PDM
  import                Import project metadata from other formats
  info                  Show the project information
  init                  Initialize a pyproject.toml for PDM
  install               Install dependencies from lock file
  list                  List packages installed in the current working set
  lock                  Resolve and lock dependencies
  publish               Build and publish the project to PyPI
  remove                Remove packages from pyproject.toml
  run                   Run commands or scripts with local packages loaded
  search                Search for PyPI packages
  self (plugin)         Manage the PDM program itself (previously known as
                        plugin)
  show                  Show the package information
  sync                  Synchronize the current working set with lock file
  update                Update package(s) in pyproject.toml
  use                   Use the given python version or path as base
                        interpreter
  venv                  Virtualenv management
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Vytvoření kostry projektu bez dalších závislostí</h2>

<p>Podívejme se nyní, jakým způsobem můžeme s&nbsp;využitím nástroje PDM
vytvořit kostru jednoduchého Pythonovského projektu. První projekt nebude mít
žádné závislosti, ovšem jeho ostatní nastavení a metadata budou odpovídat
skutečnému projektu.</p>

<p>Kostru projektu lze vytvořit interaktivně, tj.&nbsp;odpovědmi na několik
otázek, které PDM položí. Pro tento účel v&nbsp;novém (prázdném) adresáři
zavoláme následující příkaz:</p>

<pre>
$ <strong>pdm init</strong>
</pre>

<p>Nástroj PDM se v&nbsp;prvním kroku pokusí nalézt všechny nainstalované verze
Pythonu a následně se zeptá, na které verzi bude projekt postaven
(resp.&nbsp;na které bude závislý). Na mém nově nainstalovaném systému je
nalezen pouze Python 3.11 (jediná verze), kterou ovšem PDM kvůli použití
symlinků nabídne jako tři nezávislé verze:</p>

<pre>
Creating a pyproject.toml for PDM...
Please enter the Python interpreter to use
0. /usr/bin/python (3.11)
1. /usr/bin/python3.11 (3.11)
2. /usr/bin/python3 (3.11)
Please select (0): <strong>2</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: skutečně se jedná o jedinou instalaci
Pythonu, o čemž se ostatně můžeme snadno přesvědčit pohledem na všechny tři
soubory zmíněné v&nbsp;prvním dotazu (jedná se o dvojici symlinků na stejný
skript):</div></p>

<pre>
<strong>$ ls -l /usr/bin/python*</strong>
&nbsp;
lrwxrwxrwx. 1 root root     9 Aug 28 02:00 /usr/bin/python -&gt; ./python3
lrwxrwxrwx. 1 root root    10 Aug 28 02:00 /usr/bin/python3 -&gt; python3.11
-rwxr-xr-x. 1 root root 16040 Aug 28 02:00 /usr/bin/python3.11
</pre>

<p>Mimochodem: na systému s&nbsp;Pythonem 2.x i Pythonem 3.x může výběr vypadat
například následovně:</p>

<pre>
0. /usr/bin/python (3.8)
1. /usr/bin/python3.8 (3.8)
2. /usr/bin/python2.7 (2.7)
</pre>


<pre>
Python requires('*' to allow any) (&gt;=3.11): &gt;=<strong>3.7</strong>
Project is initialized successfully
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;případě, že používáte nástroj
<strong>pyenv</strong> pro správu verzí Pythonu, budou i tyto verze nástrojem
<i>PDM</i> detekovány a můžete si z&nbsp;nich vybrat konkrétní požadovanou
verzi.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Struktura nově vytvořeného projektu, soubor <strong>pyproject.toml</strong></h2>

<p></p>

<pre>
.
├── __pycache__
├── pyproject.toml
├── README.md
├── src
│   └── example_package
│       ├── __init__.py
│       └── __pycache__
└── tests
    ├── __init__.py
    └── __pycache__

7 directories, 4 files
</pre>

<pre>
[project]
name = ""
version = ""
description = ""
authors = [
    {name = "Pavel", email = "pavel@nowhere.com"},
]
dependencies = []
requires-python = "&gt;=3.7"
readme = "README.md"
license = {text = "MIT"}
</pre>

<p><div class="rs-tip-major">Poznámka: formát <i>TOML</i> (neboli <i>Tom's
Obvious, Minimal Language</i>) sice zdánlivě (alespoň na první pohled) vychází
ze souborů typu INI, ovšem ve skutečnosti se jedná o odlišný, v&nbsp;mnoha
ohledech vylepšený a především promyšlený formát, v&nbsp;němž byly odstraněny
prakticky všechny nevýhody INI a přitom byla zachována čitelnost a snadnost
úprav. I proto se za posledních několik let stal velmi populární. Ve formátu
TOML jsou kromě řetězců, celých čísel a seznamů podporovány i další datové typy
&ndash; pravdivostní typ, čísla s&nbsp;plovoucí řádovou čárkou a zejména pak,
což je v&nbsp;praxi velmi užitečné, typ &bdquo;datum+čas&ldquo; neboli časové
razítko.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Přidání dalšího balíčku do projektu</h2>

<pre>
$ pdm add sympy
</pre>

<pre>
Adding packages to default dependencies: sympy
🔒 Lock successful
Changes are written to pyproject.toml.
All packages are synced to date, nothing to do.
&nbsp;
🎉 All complete!
</pre>

<pre>
[project]
name = ""
version = ""
description = ""
authors = [
    {name = "Pavel", email = "pavel@nowhere.com"},
]
dependencies = [
    "sympy>=1.10.1",
]
requires-python = ">=3.7"
readme = "README.md"
license = {text = "MIT"}
</pre>

<pre>
pdm list
</pre>

<pre>
[ptisnovs@ptisnovs-thinkpadt14gen3 project2]$ pdm list
╭────────┬─────────┬──────────╮
│ name   │ version │ location │
├────────┼─────────┼──────────┤
│ mpmath │ 1.3.0   │          │
│ sympy  │ 1.10.1  │          │
╰────────┴─────────┴──────────╯
</pre>

$ pdm list --graph
sympy 1.10.1 [ required: >=1.10.1 ]
└── mpmath 1.3.0 [ required: >=0.19 ]



<p><a name="k07"></a></p>
<h2 id="k07">7. Soubor <strong>pdm.lock</strong></h2>

<p></p>

<pre>
# This file is @generated by PDM.
# It is not intended for manual editing.

[metadata]
groups = ["default"]
cross_platform = true
static_urls = false
lock_version = "4.3"
content_hash = "sha256:c19bb0a4a0a179b5e92d875ea3704d5564d319483f9497918302f97aa96a7d83"

[[package]]
name = "mpmath"
version = "1.3.0"
summary = "Python library for arbitrary-precision floating-point arithmetic"
files = [
    {file = "mpmath-1.3.0-py3-none-any.whl", hash = "sha256:a0b2b9fe80bbcd81a6647ff13108738cfb482d481d826cc0e02f5b35e5c88d2c"},
    {file = "mpmath-1.3.0.tar.gz", hash = "sha256:7a28eb2a9774d00c7bc92411c19a89209d5da7c4c9a9e227be8330a23a25b91f"},
]

[[package]]
name = "sympy"
version = "1.10.1"
requires_python = ">=3.7"
summary = "Computer algebra system (CAS) in Python"
dependencies = [
    "mpmath>=0.19",
]
files = [
    {file = "sympy-1.10.1-py3-none-any.whl", hash = "sha256:df75d738930f6fe9ebe7034e59d56698f29e85f443f743e51e47df0caccc2130"},
    {file = "sympy-1.10.1.tar.gz", hash = "sha256:5939eeffdf9e152172601463626c022a2c27e75cf6278de8d401d50c9d58787b"},
]
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Projekt s&nbsp;více závislostmi</h2>

<pre>
$ pdm add requests
</pre>

<pre>
Adding packages to default dependencies: requests
🔒 Lock successful
Changes are written to pyproject.toml.
Synchronizing working set with resolved packages: 5 to add, 0 to update, 0 to
remove

  ✔ Install idna 3.4 successful
  ✔ Install requests 2.31.0 successful
  ✔ Install certifi 2023.7.22 successful
  ✔ Install urllib3 2.0.6 successful
  ✔ Install charset-normalizer 3.3.0 successful

🎉 All complete!

[project]
name = ""
version = ""
description = ""
authors = [
    {name = "Pavel", email = "pavel@nowhere.com"},
]
dependencies = [
    "sympy>=1.10.1",
    "requests>=2.31.0",
]
requires-python = ">=3.7"
readme = "README.md"
license = {text = "MIT"}
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Nová podoba souboru <strong>pdm.lock</strong></h2>

<pre>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>


[ptisnovs@ptisnovs-thinkpadt14gen3 project3]$ pdm info
PDM version:
  2.9.3
Python Interpreter:
  /home/ptisnovs/project1/.venv/bin/python (3.11)
Project Root:
  /home/ptisnovs/project3
Local Packages:

[ptisnovs@ptisnovs-thinkpadt14gen3 project3]$ pdm list
╭────────────────────┬───────────┬──────────╮
│ name               │ version   │ location │
├────────────────────┼───────────┼──────────┤
│ charset-normalizer │ 3.3.0     │          │
│ mpmath             │ 1.3.0     │          │
│ sympy              │ 1.10.1    │          │
│ idna               │ 3.4       │          │
│ requests           │ 2.31.0    │          │
│ certifi            │ 2023.7.22 │          │
│ urllib3            │ 2.0.6     │          │
╰────────────────────┴───────────┴──────────╯

$ pdm list --graph

requests 2.31.0 [ required: >=2.31.0 ]
├── certifi 2023.7.22 [ required: >=2017.4.17 ]
├── charset-normalizer 3.3.0 [ required: <4,>=2 ]
├── idna 3.4 [ required: <4,>=2.5 ]
└── urllib3 2.0.6 [ required: <3,>=1.21.1 ]
sympy 1.10.1 [ required: >=1.10.1 ]
└── mpmath 1.3.0 [ required: >=0.19 ]

[ptisnovs@ptisnovs-thinkpadt14gen3 project1]$ pdm venv list
Virtualenvs created with this project:

*  in-project: /home/ptisnovs/x/project1/.venv
[ptisnovs@ptisnovs-thinkpadt14gen3 project1]$ pdm venv remove in-project
Virtualenvs created with this project:
Will remove: /home/ptisnovs/x/project1/.venv, continue? [y/n] (y): y
Removed successfully!



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

delete __pypackages__
then pdm install


<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
├── __pycache__
├── src
│   └── example_package
│       └── __pycache__
├── tests
│   └── __pycache__
└── .venv
    ├── bin
    ├── lib
    │   └── python3.11
    │       └── site-packages
    │           ├── mpmath
    │           ├── mpmath-1.3.0.dist-info
    │           ├── __pycache__
    │           ├── sympy
    │           └── sympy-1.10.1.dist-info
    ├── lib64
    │   └── python3.11
    │       └── site-packages
    └── share
        └── man
            └── man1
</pre>

<pre>
$ tree -d -L 4
.
├── __pycache__
├── __pypackages__
│   └── 3.11
│       ├── bin
│       ├── include
│       ├── lib
│       │   ├── mpmath
│       │   ├── mpmath-1.3.0.dist-info
│       │   ├── sympy
│       │   └── sympy-1.12.dist-info
│       └── share
│           └── man
├── src
│   └── example_package
│       └── __pycache__
└── tests
    └── __pycache__
</pre>

rm -rf __pypackages__

$ tree -a -d -L 4
.
├── __pycache__
├── src
│   └── example_package
│       └── __pycache__
└── tests
    └── __pycache__

$ pdm install -v
STATUS: Resolving packages from lockfile...
STATUS: Fetching hashes for resolved packages...
Synchronizing working set with resolved packages: 2 to add, 0 to update, 0 to remove

unearth.preparer: Using cached <Link https://files.pythonhosted.org/packages/43/e3/7d92a15f894aa0c9c4b49b8ee9ac9850d6e63b03c9c32c0367a13ae62209/mpmath-1.3.0-py3-none-any.whl (from https://pypi.org/simple/mpmath/)>
unearth.preparer: Using cached <Link https://files.pythonhosted.org/packages/d2/05/e6600db80270777c4a64238a98d442f0fd07cc8915be2a1c16da7f2b9e74/sympy-1.12-py3-none-any.whl (from https://pypi.org/simple/sympy/)>
  ✔ Install mpmath 1.3.0 successful
  ✔ Install sympy 1.12 successful

.
├── __pycache__
├── __pypackages__
│   └── 3.11
│       ├── bin
│       ├── include
│       ├── lib
│       │   ├── mpmath
│       │   ├── mpmath-1.3.0.dist-info
│       │   ├── sympy
│       │   └── sympy-1.12.dist-info
│       └── share
│           └── man
├── src
│   └── example_package
│       └── __pycache__
└── tests
    └── __pycache__



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>


dev dependencies
pdm add -d pytest



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny Pythonovské projekty, které jsme si vytvořili, naleznete na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady (pro jejich spuštění je nutné mít
nainstalovánu některou z&nbsp;podporovaných verzí Pythonu 3 a pochopitelně
taktéž PDM:</p>

<table>
<tr><th>#</th><th>Projekt</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td>1</td><td>project1/</td><td>nově vytvořený projekt bez závislostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project1/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project1/</a></td></tr>
<tr><td>2</td><td>project2/</td><td>projekt s&nbsp;jednou explicitně zapsanou závislostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project2/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project2/</a></td></tr>
<tr><td>3</td><td>project3/</td><td>projekt s&nbsp;dvojicí explicitně zapsaných závislostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project3/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project3/</a></td></tr>
<tr><td>4</td><td>project4/</td><td>projekt se závislostí na knihovně <strong>requests</strong> ve verzi 2.0.0</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project4/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project4/</a></td></tr>
<tr><td>5</td><td>project5/</td><td>projekt se závislostí na knihovně <strong>requests</strong> v&nbsp;nejnovější dostupné verzi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project5/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project5/</a></td></tr>
<tr><td>6</td><td>project6/</td><td>kostra Pythonovské knihovny (balíčku)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project6/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project6/</a></td></tr>
<tr><td>7</td><td>project7/</td><td>specifikace příkazu spuštěného po zadání <strong>pdm start</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project7/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project7/</a></td></tr>
<tr><td>8</td><td>project8/</td><td>projekt se závislostmi pro vývojáře (nikoli pro výslednou aplikaci či knihovnu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project8/">https://github.com/tisnik/most-popular-python-libs/blob/master/pdm/project8/</a></td></tr>
<table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Stránka projektu PDM<br />
<a href="https://pdm.fming.dev/latest/">https://pdm.fming.dev/latest/</a>
</li>

<li>PDF na GitHubu<br />
<a href="https://github.com/pdm-project/pdm">https://github.com/pdm-project/pdm</a>
</li>

<li>PEP 582 &ndash; Python local packages directory<br />
<a href="https://peps.python.org/pep-0582/">https://peps.python.org/pep-0582/</a>
</li>

<li>PDM na PyPi<br />
<a href="https://pypi.org/project/pdm/">https://pypi.org/project/pdm/</a>
</li>

<li>Which Python package manager should you use?<br />
<a href="https://towardsdatascience.com/which-python-package-manager-should-you-use-d0fd0789a250">https://towardsdatascience.com/which-python-package-manager-should-you-use-d0fd0789a250</a>
</li>

<li>How to Use PDM to Manage Python Dependencies without a Virtual Environment<br />
<a href="https://www.youtube.com/watch?v=qOIWNSTYfcc">https://www.youtube.com/watch?v=qOIWNSTYfcc</a>
</li>

<li>What are the best Python package managers?<br />
<a href="https://www.slant.co/topics/2666/~best-python-package-managers">https://www.slant.co/topics/2666/~best-python-package-managers</a>
</li>

<li>PEP 621 &ndash; Storing project metadata in pyproject.toml<br />
<a href="https://peps.python.org/pep-0621/">https://peps.python.org/pep-0621/</a>
</li>

<li>Pick a Python Lockfile and Improve Security<br />
<a href="https://blog.phylum.io/pick-a-python-lockfile-and-improve-security/">https://blog.phylum.io/pick-a-python-lockfile-and-improve-security/</a>
</li>

<li>PyPA specifications<br />
<a href="https://packaging.python.org/en/latest/specifications/">https://packaging.python.org/en/latest/specifications/</a>
</li>

<li>Creation of virtual environments<br />
<a href="https://docs.python.org/3/library/venv.html">https://docs.python.org/3/library/venv.html</a>
</a>

<li>How to Use virtualenv in Python<br />
<a href="https://learnpython.com/blog/how-to-use-virtualenv-python/">https://learnpython.com/blog/how-to-use-virtualenv-python/</a>
</a>

<li>Python Virtual Environments: A Primer<br />
<a href="https://realpython.com/python-virtual-environments-a-primer/">https://realpython.com/python-virtual-environments-a-primer/</a>
</a>

<li>virtualenv Cheatsheet<br />
<a href="https://aaronlelevier.github.io/virtualenv-cheatsheet/">https://aaronlelevier.github.io/virtualenv-cheatsheet/</a>
</a>

<li>Installing Python Modules<br />
<a href="https://docs.python.org/3/installing/index.html">https://docs.python.org/3/installing/index.html</a>
</a>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

