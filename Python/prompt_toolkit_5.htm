<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Pátá část miniseriálu o tvorbě aplikací s&nbsp;textovým uživatelským rozhraním založeným na knihovně prompt_toolkit je věnována popisu všech zbývajících ovládacích prvků TUI, a to samozřejmě včetně menu a nástrojových pruhů.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)</a></p>
<p><a href="#k02">*** 2. Ovládací prvek typu <strong>Checkbox</strong></a></p>
<p><a href="#k03">*** 3. Reálné použití zaškrtávacích tlačítek <strong>Checkbox</strong></a></p>
<p><a href="#k04">*** 4. Pomocný prvek <strong>HorizontalLine</strong></a></p>
<p><a href="#k05">*** 5. Pomocný prvek <strong>VerticalLine</strong></a></p>
<p><a href="#k06">*** 6. Skupina přepínacích tlačítek (<strong>RadioList</strong>)</a></p>
<p><a href="#k07">*** 7. Vytvoření hlavního menu pro aplikaci s&nbsp;TUI</a></p>
<p><a href="#k08">*** 8. Rozbalovací menu navázaná na hlavní menu</a></p>
<p><a href="#k09">*** 9. Horizontální oddělovač v&nbsp;menu</a></p>
<p><a href="#k10">*** 10. Klávesové zkratky, využití podmenu</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)</h2>

*** image ***
<p><i>Obrázek 1: </i></p>

*** image ***
<p><i>Obrázek 2: </i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Ovládací prvek typu <strong>Checkbox</strong></h2>

<p>První nový ovládací prvek, s&nbsp;nímž se v&nbsp;dnešním článku setkáme, se
jmenuje <strong>Checkbox</strong> neboli zaškrtávací tlačítko. Jedná se
skutečně o variantu tlačítka, které si pamatuje svůj stav
(zaškrtnuto/nezaškrtnuto) a tento stav je na tlačítku vizuálně zvýrazněn.
Ukažme si nyní <a
href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui18_basic_checkbox.py">nejjednodušší
možný příklad</a>, v&nbsp;němž je zaškrtávací tlačítko použito. Bude se jednat
o jediný prvek textového uživatelského rozhraní, který je přímo předán správci
rozložení (<strong>Layout</strong>). Zaškrtávací tlačítko, jakožto jediný prvek
TUI, získá zaměření (<i>fokus</i>), což znamená, že jeho stav bude možné měnit
klávesami Enter, Space atd. Aplikace se uzavře klávesou Esc (je na ní navázána
callback funkce pojmenovaná <strong>exit_clicked</strong>):</p>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import Checkbox
&nbsp;
&nbsp;
def exit_clicked():
    get_app().exit()
&nbsp;
&nbsp;
checkbox = Checkbox('Checkbox')
&nbsp;
layout = Layout(checkbox)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on_escape_press</strong>(event):
    <i>"""Callback funkce volaná při stisku klávesy Esc."""</i>
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    <i># vytvoření aplikace s textovým uživatelským rozhraním</i>
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    <i># spuštění aplikace</i>
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>

*** image ***
<p><i>Obrázek 3: Výchozí stav zaškrtávacího tlačítka.</i></p>

*** image ***
<p><i>Obrázek 4: Změněný stav zaškrtávacího tlačítka.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Reálné použití zaškrtávacích tlačítek <strong>Checkbox</strong></h2>

<p>Ve druhém příkladu je ukázáno, jakým způsobem se mohou zaškrtávací tlačítka
použít v&nbsp;reálných aplikacích. Nejprve je vytvořena sada tří na sobě
nezávislých zaškrtávacích tlačítek, dvě běžná tlačítka s&nbsp;příslušnou
obsluhou události (<i>handler</i>) a následně jsou všechny tyto prvky seskupeny
pod sebe s&nbsp;využitím správce rozvržení <strong>HSplit</strong>:</p>

<pre>
checkbox1 = Checkbox('Checkbox 1')
checkbox2 = Checkbox('Checkbox 2')
checkbox3 = Checkbox('Checkbox 3')
button1 = Button('Show status', handler=show_status)
button2 = Button('Exit', handler=exit_clicked)
&nbsp;
buttons = HSplit([checkbox1,
                  checkbox2,
                  checkbox3,
                  button1,
                  button2])
</pre>

<p>Dále vytvoříme textové pole, které nebude uživatelem měnitelné, neboť nebude
moci získat zaměření (<i>fokus</i>). Sada tlačítek a textové pole se do TUI
umístí vedle sebe, tentokrát s&nbsp;použitím správce rozvržení
<strong>VSplit</strong>:</p>

<pre>
text_area = TextArea(focusable=False)
&nbsp;
<i># správce rozvržení</i>
root = VSplit([Box(Frame(buttons, style="bg:#ansiblue #ansiwhite"), padding=2),
               Box(Frame(text_area, title="Events"), padding=2)])
&nbsp;
layout = Layout(root)
</pre>

<p>Po stisku běžného tlačítka [Show status] se zavolá callback funkce
<strong>show()</strong>, jejímž úkolem bude zobrazit stav všech tří
zaškrtávacích tlačítek:</p>

<pre>
def <strong>show</strong>_status():
    print_checkbox_status(checkbox1, 1)
    print_checkbox_status(checkbox2, 2)
    print_checkbox_status(checkbox3, 3)
</pre>

<p>Pro přečtení stavu zaškrtávacího tlačítka postačuje získat hodnotu atributu
<strong>checked</strong> a do textového pole se stav zapíše změnou jeho
atributu <strong>text</strong>, takže výpis stavu vybraného zaškrtávacího
tlačítka obslouží tato pomocná funkce:</p>

<pre>
def <strong>print</strong>_checkbox_status(checkbox, n):
    checked = "checked" if checkbox.checked else "unchecked"
    msg = "Checkbox {n} {s}\n".format(n=n, s=checked)
    text_area.text += msg
</pre>

<p>Podívejme se nyní na chování takto upraveného příkladu:</p>

*** image ***
<p><i>Obrázek 5: Demonstrační příklad ihned po svém spuštění.</i></p>

*** image ***
<p><i>Obrázek 6: Změna stavu zaškrtávacích tlačítek s&nbsp;následným výpisem
aktuálního stavu.</i></p>

<p><a
href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui19_checkbox_real_usage.py">Zdrojový
kód dnešního druhého demonstračního příkladu</a> vypadá následovně:</p>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
def <strong>exit</strong>_clicked():
    get_app().exit()
&nbsp;
&nbsp;
def <strong>print</strong>_checkbox_status(checkbox, n):
    checked = "checked" if checkbox.checked else "unchecked"
    msg = "Checkbox {n} {s}\n".format(n=n, s=checked)
    text_area.text += msg
&nbsp;
&nbsp;
def <strong>print</strong>_hr():
    text_area.text += "-" * 40
    text_area.text += "\n"
&nbsp;
&nbsp;
def <strong>show</strong>_status():
    print_checkbox_status(checkbox1, 1)
    print_checkbox_status(checkbox2, 2)
    print_checkbox_status(checkbox3, 3)
    print_hr()
&nbsp;
&nbsp;
checkbox1 = Checkbox('Checkbox 1')
checkbox2 = Checkbox('Checkbox 2')
checkbox3 = Checkbox('Checkbox 3')
button1 = Button('Show status', handler=show_status)
button2 = Button('Exit', handler=exit_clicked)
&nbsp;
buttons = HSplit([checkbox1,
                  checkbox2,
                  checkbox3,
                  button1,
                  button2])
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
<i># správce rozvržení</i>
root = VSplit([Box(Frame(buttons, style="bg:#ansiblue #ansiwhite"), padding=2),
               Box(Frame(text_area, title="Events"), padding=2)])
&nbsp;
layout = Layout(root)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('up')(focus_previous)
key_bindings.add('down')(focus_next)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on</strong>_escape_press(event):
    <i>"""Callback funkce volaná při stisku klávesy Esc."""</i>
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    <i># vytvoření aplikace s textovým uživatelským rozhraním</i>
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    <i># spuštění aplikace</i>
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Pomocný prvek <strong>HorizontalLine</strong></h2>

<p></p>

<pre>
hl = HorizontalLine()
</pre>

<pre>
buttons = HSplit([checkbox1,
                  checkbox2,
                  checkbox3,
                  hl,
                  button1,
                  hl,
                  button2])
</pre>

<p><a
href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui20_checkbox_and_hline.py">Zdrojový
kód dnešního třetího demonstračního příkladu</a> vypadá následovně:</p>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
def <strong>exit</strong>_clicked():
    get_app().exit()
&nbsp;
&nbsp;
def <strong>print</strong>_checkbox_status(checkbox, n):
    checked = "checked" if checkbox.checked else "unchecked"
    msg = "Checkbox {n} {s}\n".format(n=n, s=checked)
    text_area.text += msg
&nbsp;
&nbsp;
def <strong>print</strong>_hr():
    text_area.text += "-" * 40
    text_area.text += "\n"
&nbsp;
&nbsp;
def <strong>show</strong>_status():
    print_checkbox_status(checkbox1, 1)
    print_checkbox_status(checkbox2, 2)
    print_checkbox_status(checkbox3, 3)
    print_hr()
&nbsp;
&nbsp;
checkbox1 = Checkbox('Checkbox 1')
checkbox2 = Checkbox('Checkbox 2')
checkbox3 = Checkbox('Checkbox 3')
hl = HorizontalLine()
button1 = Button('Show status', handler=show_status)
button2 = Button('Exit', handler=exit_clicked)
&nbsp;
buttons = HSplit([checkbox1,
                  checkbox2,
                  checkbox3,
                  hl,
                  button1,
                  hl,
                  button2])
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
<i># správce rozvržení</i>
root = VSplit([Box(Frame(buttons, style="bg:#ansiblue #ansiwhite"), padding=2),
               Box(Frame(text_area, title="Events"), padding=2)])
&nbsp;
layout = Layout(root)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('up')(focus_previous)
key_bindings.add('down')(focus_next)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on</strong>_escape_press(event):
    <i>"""Callback funkce volaná při stisku klávesy Esc."""</i>
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    # vytvoření aplikace s textovým uživatelským rozhraním
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    # spuštění aplikace
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Pomocný prvek <strong>VerticalLine</strong></h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
def <strong>exit_clicked</strong>():
    get_app().exit()
&nbsp;
&nbsp;
def <strong>print_checkbox_status</strong>(checkbox, n):
    checked = "checked" if checkbox.checked else "unchecked"
    msg = "Checkbox {n} {s}\n".format(n=n, s=checked)
    text_area.text += msg
&nbsp;
&nbsp;
def <strong>print_hr</strong>():
    text_area.text += "-" * 40
    text_area.text += "\n"
&nbsp;
&nbsp;
def <strong>show_status</strong>():
    print_checkbox_status(checkbox1, 1)
    print_checkbox_status(checkbox2, 2)
    print_checkbox_status(checkbox3, 3)
    print_hr()
&nbsp;
&nbsp;
checkbox1 = Checkbox('Checkbox 1')
checkbox2 = Checkbox('Checkbox 2')
checkbox3 = Checkbox('Checkbox 3')
hl = HorizontalLine()
button1 = Button('Show status', handler=show_status)
button2 = Button('Exit', handler=exit_clicked)
&nbsp;
buttons = HSplit([checkbox1,
                  checkbox2,
                  checkbox3,
                  hl,
                  button1,
                  hl,
                  button2])
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
<i># správce rozvržení</i>
root = VSplit([Box(Frame(buttons, style="bg:#ansiblue #ansiwhite"), padding=2),
               VerticalLine(),
               Box(Frame(text_area, title="Events"), padding=2)])
&nbsp;
layout = Layout(root)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('up')(focus_previous)
key_bindings.add('down')(focus_next)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on_escape_press</strong>(event):
    """Callback funkce volaná při stisku klávesy Esc."""
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    # vytvoření aplikace s textovým uživatelským rozhraním
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    # spuštění aplikace
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Skupina přepínacích tlačítek (<strong>RadioList</strong>)</h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
def <strong>exit_clicked</strong>():
    get_app().exit()
&nbsp;
&nbsp;
def <strong>print_checkbox_status</strong>(checkbox, n):
    checked = "checked" if checkbox.checked else "unchecked"
    msg = "Checkbox {n} {s}\n".format(n=n, s=checked)
    text_area.text += msg
&nbsp;
&nbsp;
def <strong>print_radiolist_status</strong>(radiolist):
    text_area.text += "Radiolist: {v}\n".format(v=radiolist.current_value)
&nbsp;
&nbsp;
def <strong>print_hr</strong>():
    text_area.text += "-" * 40
    text_area.text += "\n"
&nbsp;
&nbsp;
def <strong>show_status</strong>():
    print_checkbox_status(checkbox1, 1)
    print_checkbox_status(checkbox2, 2)
    print_checkbox_status(checkbox3, 3)
    print_radiolist_status(radiolist)
    print_hr()
&nbsp;
&nbsp;
radiolist = RadioList([('python_val', 'Python'),
                       ('java_val', 'Java'),
                       ('clojure_val', 'Clojure'),
                       ('perl_val', 'Perl')])
&nbsp;
checkbox1 = Checkbox('Checkbox 1')
checkbox2 = Checkbox('Checkbox 2')
checkbox3 = Checkbox('Checkbox 3')
hl = HorizontalLine()
button1 = Button('Show status', handler=show_status)
button2 = Button('Exit', handler=exit_clicked)
&nbsp;
buttons = HSplit([radiolist,
                  hl,
                  checkbox1,
                  checkbox2,
                  checkbox3,
                  hl,
                  button1,
                  hl,
                  button2])
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
<i># správce rozvržení</i>
root = VSplit([Box(Frame(buttons, style="bg:#ansiblue #ansiwhite"), padding=2),
               Box(Frame(text_area, title="Events"), padding=2)])
&nbsp;
layout = Layout(root)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('s-tab')(focus_previous)
key_bindings.add('tab')(focus_next)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on_escape_press</strong>(event):
    """Callback funkce volaná při stisku klávesy Esc."""
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    # vytvoření aplikace s textovým uživatelským rozhraním
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    # spuštění aplikace
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vytvoření hlavního menu pro aplikaci s&nbsp;TUI</h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
file_menu = MenuItem("File")
edit_menu = MenuItem("Edit")
format_menu = MenuItem("Format")
view_menu = MenuItem("View")
help_menu = MenuItem("Help")
&nbsp;
main_menu = [file_menu,
             edit_menu,
             format_menu,
             view_menu,
             help_menu]
&nbsp;
menu = MenuContainer(text_area, menu_items=main_menu)
&nbsp;
&nbsp;
layout = Layout(menu)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('s-tab')(focus_previous)
key_bindings.add('tab')(focus_next)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on_escape_press</strong>(event):
    """Callback funkce volaná při stisku klávesy Esc."""
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    # vytvoření aplikace s textovým uživatelským rozhraním
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    # spuštění aplikace
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Rozbalovací menu navázaná na hlavní menu</h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
def <strong>message</strong>(msg):
    text_area.text += msg + "\n"
&nbsp;
&nbsp;
def <strong>on_new_selected</strong>():
    message("'New' menu item selected")
&nbsp;
&nbsp;
def <strong>on_open_selected</strong>():
    message("'Open' menu item selected")
&nbsp;
&nbsp;
def <strong>on_save_selected</strong>():
    message("'Save' menu item selected")
&nbsp;
&nbsp;
def <strong>on_exit_selected</strong>():
    get_app().exit()
&nbsp;
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
file_menu = MenuItem("File", children=[MenuItem("New", handler=on_new_selected),
                                       MenuItem("Open", handler=on_open_selected),
                                       MenuItem("Save", handler=on_save_selected),
                                       MenuItem(disabled=True),
                                       MenuItem("Exit", handler=on_exit_selected)])
&nbsp;
edit_menu = MenuItem("Edit", children=[MenuItem("Cut"),
                                       MenuItem("Copy"),
                                       MenuItem("Paste"),
                                       MenuItem(disabled=True),
                                       MenuItem("Select all")])
&nbsp;
format_menu = MenuItem("Format", children=[MenuItem("Word wrap")])
&nbsp;
view_menu = MenuItem("View", children=[MenuItem("Status bar"),
                                       MenuItem("Line numbers")])
&nbsp;
help_menu = MenuItem("Help", children=[MenuItem("Content"),
                                       MenuItem(disabled=True),
                                       MenuItem("About")])
&nbsp;
main_menu = [file_menu,
             edit_menu,
             format_menu,
             view_menu,
             help_menu]
&nbsp;
menu = MenuContainer(text_area, menu_items=main_menu)
&nbsp;
&nbsp;
layout = Layout(menu)
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('s-tab')(focus_previous)
key_bindings.add('tab')(focus_next)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on_escape_press</strong>(event):
    """Callback funkce volaná při stisku klávesy Esc."""
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    # vytvoření aplikace s textovým uživatelským rozhraním
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    # spuštění aplikace
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Horizontální oddělovač v&nbsp;menu</h2>

<pre>
file_menu = MenuItem("File", children=[MenuItem("New", handler=on_new_selected),
                                       MenuItem("Open", handler=on_open_selected),
                                       MenuItem("Save", handler=on_save_selected),
                                       MenuItem("-", disabled=True),
                                       MenuItem("Exit", handler=on_exit_selected)])
&nbsp;
edit_menu = MenuItem("Edit", children=[MenuItem("Cut"),
                                       MenuItem("Copy"),
                                       MenuItem("Paste"),
                                       MenuItem("-", disabled=True),
                                       MenuItem("Select all")])
&nbsp;
format_menu = MenuItem("Format", children=[MenuItem("Word wrap")])
&nbsp;
view_menu = MenuItem("View", children=[MenuItem("Status bar"),
                                       MenuItem("Line numbers")])
&nbsp;
help_menu = MenuItem("Help", children=[MenuItem("Content"),
                                       MenuItem("-", disabled=True),
                                       MenuItem("About")])
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Klávesové zkratky, využití podmenu</h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from prompt_toolkit import Application
from prompt_toolkit.layout import Layout, HSplit, VSplit
from prompt_toolkit.key_binding import KeyBindings
from prompt_toolkit.key_binding.bindings.focus import focus_next, focus_previous
from prompt_toolkit.application.current import get_app
from prompt_toolkit.widgets import *
&nbsp;
&nbsp;
<i># napojení na klávesové zkratky</i>
key_bindings = KeyBindings()
key_bindings.add('s-tab')(focus_previous)
key_bindings.add('tab')(focus_next)
&nbsp;
&nbsp;
def <strong>message</strong>(msg):
    text_area.text += msg + "\n"
&nbsp;
&nbsp;
@key_bindings.add('c-n')
def <strong>on_new_selected</strong>(event=None):
    message("'New' menu item selected")
&nbsp;
&nbsp;
@key_bindings.add('c-o')
def <strong>on_open_selected</strong>(event=None):
    message("'Open' menu item selected")
&nbsp;
&nbsp;
@key_bindings.add('c-s')
def <strong>on_save_selected</strong>(event=None):
    message("'Save' menu item selected")
&nbsp;
&nbsp;
@key_bindings.add('c-x')
def <strong>on_exit_selected</strong>(event=None):
    get_app().exit()
&nbsp;
&nbsp;
text_area = TextArea(focusable=False)
&nbsp;
main_menu = [MenuItem("File", children=[MenuItem("New   <Ctrl-N>", handler=on_new_selected),
                                        MenuItem("Open  <Ctrl-O>", handler=on_open_selected),
                                        MenuItem("Save  <Ctrl-S>", handler=on_save_selected),
                                        MenuItem("-", disabled=True),
                                        MenuItem("Exit  <Ctrl-X>", handler=on_exit_selected)]),
             MenuItem("Edit", children=[MenuItem("Cut"),
                                        MenuItem("Copy"),
                                        MenuItem("Paste"),
                                        MenuItem("-", disabled=True),
                                        MenuItem("Select all")]),
             MenuItem("Format", children=[MenuItem("Word wrap")]),
             MenuItem("View", children=[MenuItem("Status bar", children=[MenuItem("Enabled"),
                                                                         MenuItem("Disabled")]),
                                        MenuItem("Line numbers", children=[MenuItem("Yes"),
                                                                           MenuItem("No")])]),
             MenuItem("Help", children=[MenuItem("Content"),
                                        MenuItem("-", disabled=True),
                                        MenuItem("About")])]
&nbsp;
menu = MenuContainer(text_area, menu_items=main_menu)
&nbsp;
layout = Layout(menu)
&nbsp;
&nbsp;
@key_bindings.add('escape')
def <strong>on_escape_press</strong>(event):
    """Callback funkce volaná při stisku klávesy Esc."""
    print("\n\n[escape]\n\n")
    event.app.exit()
&nbsp;
&nbsp;
def <strong>main</strong>():
    # vytvoření aplikace s textovým uživatelským rozhraním
    application = Application(layout=layout,
                              key_bindings=key_bindings,
                              full_screen=True)
&nbsp;
    # spuštění aplikace
    application.run()
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny dnes popisované demonstrační příklady byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Příklady si můžete v&nbsp;případě potřeby stáhnout i jednotlivě bez nutnosti
klonovat celý (dnes již poměrně rozsáhlý) repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis</th><th>Odkaz</th></tr>
<tr><td> 1</td><td>tui18_basic_checkbox.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui18_basic_checkbox.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui18_basic_checkbox.py</a></td></tr>
<tr><td> 2</td><td>tui19_checkbox_real_usage.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui19_checkbox_real_usage.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui19_checkbox_real_usage.py</a></td></tr>
<tr><td> 3</td><td>tui20_checkbox_and_hline.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui20_checkbox_and_hline.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui20_checkbox_and_hline.py</a></td></tr>
<tr><td> 4</td><td>tui21_checkbox_and_hline_and_vline.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui21_checkbox_and_hline_and_vline.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui21_checkbox_and_hline_and_vline.py</a></td></tr>
<tr><td> 5</td><td>tui22_radiolist.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui22_radiolist.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui22_radiolist.py</a></td></tr>
<tr><td> 6</td><td>tui23_toplevel_menu.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui23_toplevel_menu.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui23_toplevel_menu.py</a></td></tr>
<tr><td> 7</td><td>tui24_basic_structured_menu.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui24_basic_structured_menu.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui24_basic_structured_menu.py</a></td></tr>
<tr><td> 8</td><td>tui25_hline_in_menu.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui25_hline_in_menu.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui25_hline_in_menu.py</a></td></tr>
<tr><td> 9</td><td>tui26_keyboard_binding_submenu.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui26_keyboard_binding_submenu.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/tui26_keyboard_binding_submenu.py</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/tui/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Správce rozvržení (Layout)<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#layout">https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#layout</a>
</li>

<li>Popis všech ovládacích prvků (Widgetů)<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#module-prompt_toolkit.widgets">https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#module-prompt_toolkit.widgets</a>
</li>

<li>Prvek TUI MenuContainer<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#prompt_toolkit.widgets.MenuContainer">https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#prompt_toolkit.widgets.MenuContainer</a>
</li>

<li>Prvek TUI RadioList<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#prompt_toolkit.widgets.RadioList">https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#prompt_toolkit.widgets.RadioList</a>
</li>

<li>Třída Application<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#module-prompt_toolkit.application">https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#module-prompt_toolkit.application</a>
</li>

<li>Třída KeyBindings<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#prompt_toolkit.key_binding.KeyBindings">https://python-prompt-toolkit.readthedocs.io/en/master/pages/reference.html#prompt_toolkit.key_binding.KeyBindings</a>
</li>

<li>UTF-8 encoded sample plain-text file<br />
<a href="http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt">http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt</a>
</li>

<li>4 Python libraries for building great command-line user interfaces<br />
<a href="https://opensource.com/article/17/5/4-practical-python-libraries">https://opensource.com/article/17/5/4-practical-python-libraries</a>
</li>

<li>prompt_toolkit 2.0.3 na PyPi<br />
<a href="https://pypi.org/project/prompt_toolkit/">https://pypi.org/project/prompt_toolkit/</a>
</li>

<li>python-prompt-toolkit na GitHubu<br />
<a href="https://github.com/jonathanslenders/python-prompt-toolkit">https://github.com/jonathanslenders/python-prompt-toolkit</a>
</li>

<li>The GNU Readline Library<br />
<a href="https://tiswww.case.edu/php/chet/readline/rltop.html">https://tiswww.case.edu/php/chet/readline/rltop.html</a>
</li>

<li>GNU Readline (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GNU_Readline">https://en.wikipedia.org/wiki/GNU_Readline</a>
</li>

<li>readline — GNU readline interface (Python 3.x)<br />
<a href="https://docs.python.org/3/library/readline.html">https://docs.python.org/3/library/readline.html</a>
</li>

<li>readline — GNU readline interface (Python 2.x)<br />
<a href="https://docs.python.org/2/library/readline.html">https://docs.python.org/2/library/readline.html</a>
</li>

<li>GNU Readline Library - command line editing<br />
<a href="https://tiswww.cwru.edu/php/chet/readline/readline.html">https://tiswww.cwru.edu/php/chet/readline/readline.html</a>
</li>

<li>gnureadline 6.3.8 na PyPi<br />
<a href="https://pypi.org/project/gnureadline/">https://pypi.org/project/gnureadline/</a>
</li>

<li>Editline Library (libedit)<br />
<a href="http://thrysoee.dk/editline/">http://thrysoee.dk/editline/</a>
</li>

<li>Comparing Python Command-Line Parsing Libraries – Argparse, Docopt, and Click<br />
<a href="https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/">https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/</a>
</li>

<li>libedit or editline<br />
<a href="http://www.cs.utah.edu/~bigler/code/libedit.html">http://www.cs.utah.edu/~bigler/code/libedit.html</a>
</li>

<li>WinEditLine<br />
<a href="http://mingweditline.sourceforge.net/">http://mingweditline.sourceforge.net/</a>
</li>

<li>rlcompleter — Completion function for GNU readline<br />
<a href="https://docs.python.org/3/library/rlcompleter.html">https://docs.python.org/3/library/rlcompleter.html</a>
</li>

<li>rlwrap na GitHubu<br />
<a href="https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</a>
</li>

<li>rlwrap(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/rlwrap">https://linux.die.net/man/1/rlwrap</a>
</li>

<li>readline(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/readline">https://linux.die.net/man/3/readline</a>
</li>

<li>history(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/history">https://linux.die.net/man/3/history</a>
</li>

<li>vi(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/vi">https://linux.die.net/man/1/vi</a>
</li>

<li>emacs(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/emacs">https://linux.die.net/man/1/emacs</a>
</li>

<li>Pygments - Python syntax highlighter<br />
<a href="http://pygments.org/">http://pygments.org/</a>
</li>

<li>Write your own lexer<br />
<a href="http://pygments.org/docs/lexerdevelopment/">http://pygments.org/docs/lexerdevelopment/</a>
</li>

<li>Jazyky podporované knihovnou Pygments<br />
<a href="http://pygments.org/languages/">http://pygments.org/languages/</a>
</li>

<li>Pygments FAQ<br />
<a href="http://pygments.org/faq/">http://pygments.org/faq/</a>
</li>

<li>TUI &ndash; Text User Interface<br />
<a href="https://en.wikipedia.org/wiki/Text-based_user_interface">https://en.wikipedia.org/wiki/Text-based_user_interface</a>
</li>

<li>PuDB: výkonný debugger pro Python s retro uživatelským rozhraním (nástroj s&nbsp;plnohodnotným TUI)<br />
<a href="https://www.root.cz/clanky/pudb-vykonny-debugger-pro-python-s-retro-uzivatelskym-rozhranim/">https://www.root.cz/clanky/pudb-vykonny-debugger-pro-python-s-retro-uzivatelskym-rozhranim/</a>
</li>

<li>Historie vývoje textových editorů: krkolomná cesta k moderním textovým procesorům<br />
<a href="https://www.root.cz/clanky/historie-vyvoje-textovych-editoru-krkolomna-cesta-k-modernim-textovym-procesorum/">https://www.root.cz/clanky/historie-vyvoje-textovych-editoru-krkolomna-cesta-k-modernim-textovym-procesorum/</a>
</li>

<li>Rosetta Code<br />
<a href="http://rosettacode.org/wiki/Rosetta_Code">http://rosettacode.org/wiki/Rosetta_Code</a>
</li>

<li>Mandelbrot set: Sinclair ZX81 BASIC<br />
<a href="http://rosettacode.org/wiki/Mandelbrot_set#Sinclair_ZX81_BASIC">http://rosettacode.org/wiki/Mandelbrot_set#Sinclair_ZX81_BASIC</a>
</li>

<li>Nástroj Dialog<br />
<a href="http://invisible-island.net/dialog/">http://invisible-island.net/dialog/</a>
</li>

<li>Projekt Zenity<br />
<a href="https://wiki.gnome.org/Projects/Zenity">https://wiki.gnome.org/Projects/Zenity</a>
</li>

<li>Xterm256 color names for console Vim<br />
<a href="http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim">http://vim.wikia.com/wiki/Xterm256_color_names_for_console_Vim</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

