<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Práce s jednotkami a veličinami: aby se nesčítaly hrušky s jablky</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Práce s jednotkami a veličinami: aby se nesčítaly hrušky s jablky</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Práce s&nbsp;jednotkami a veličinami: aby se nesčítaly hrušky s&nbsp;jablky</a></p>
<p><a href="#k02">2. Instalace knihovny <i>Pint</i></a></p>
<p><a href="#k03">3. Základní práce s&nbsp;jednotkami</a></p>
<p><a href="#k04">4. Operace s&nbsp;hodnotami s&nbsp;veličinami</a></p>
<p><a href="#k05">5. Výpočty s&nbsp;různými veličinami</a></p>
<p><a href="#k06">6. Nekorektní kombinace veličin</a></p>
<p><a href="#k07">7. Konverze jednotek</a></p>
<p><a href="#k08">*** 8. Plocha a rychlost</a></p>
<p><a href="#k09">*** 9. Zrychlení a síla</a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. Převod na základní jednotky</a></p>
<p><a href="#k16">*** 16. Formátování hodnot s&nbsp;jednotkami</a></p>
<p><a href="#k17">*** 17. Příloha 1: výpis všech jednotek nabízených knihovnou <i>Pint</i></a></p>
<p><a href="#k18">18. Příloha 2: podpora pro práci s&nbsp;jednotkami v&nbsp;jazyku Kawa</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Práce s&nbsp;jednotkami a veličinami: aby se nesčítaly hrušky s&nbsp;jablky</h2>

<p>V&nbsp;mnoha aplikacích a informačních systémech se provádí jednodušší i
složitější výpočty. A právě při vývoji algoritmů, které výpočty provádí, se
používají hodnoty s&nbsp;různými jednotkami (metr, sekunda, Kč, ...), které
odpovídají různým veličinám (délka, čas, měna atd.). Nabízí se tedy otázka,
jakým způsobem dokáže programovací jazyk zajistit, aby se &bdquo;nesčítaly
hrušky s&nbsp;jablky&ldquo;, tj.&nbsp;aby se při výpočtech používaly proměnné a
konstanty se správnou veličinou. Příkladem může být výpočet rychlosti ze dvou
hodnot představujících odlišné veličiny: vzdálenosti a času.</p>

<p>Tento problém se mnohdy na úrovni programovacího jazyka vůbec neřeší,
protože informace o použité jednotce nebývá součástí informace o datovém typu
(hodnoty či proměnné &ndash; podle toho, zda je jazyk typovaný staticky či
dynamicky). Jinými slovy pouze například víme, že proměnná obsahuje hodnotu
typu <i>float</i>, ale již nevíme, zda tato hodnota představuje vzdálenost
v&nbsp;metrech, čas v&nbsp;sekundách, čas v&nbsp;rocích, teplotu apod.
Samozřejmě je možné v&nbsp;objektově orientovaných jazycích namísto běžných
hodnot používat pouze objekty různých typů, to však většinou vyžaduje
explicitně naprogramovat všechny možné kombinace operací (tedy že můžeme sčítat
délky, že výsledkem podílu délky a času bude rychlost atd.).</p>

<p>Alternativní způsob, jak pracovat s&nbsp;hodnotami, ke kterým jsou nějakým
způsobem přiřazeny jednotky, spočívá ve využití knihoven, které tuto
funkcionalitu již poskytují. Předností těchto knihoven bývá to, že již obsahují
mnoho předdefinovaných jednotek, pravidla pro operace s&nbsp;hodnotami
s&nbsp;různými jednotkami (viz již výše zmíněný podíl vzdálenosti a času atd.)
a taktéž většinou možnost převodu mezi jednotkami (z&nbsp;milimetrů na palce,
ze sekund na hodiny, mezi různými variantami specifikace úhlů či teploty...).
Pro <a href="https://www.root.cz/n/python/">programovací jazyk Python</a>
takových knihoven existuje větší množství. V&nbsp;dnešním článku si popíšeme
základní vlastnosti knihovny nazvané <i>Pint</i> (což je mimochodem taktéž
označení jednotky &bdquo;pinta&ldquo; pro veličinu &bdquo;objem&ldquo;), ovšem
v&nbsp;navazujících textech se seznámíme i s&nbsp;některými dalšími podobně
koncipovanými knihovnami.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace knihovny <i>Pint</i></h2>

<p>Instalace knihovny <i>Pint</i> je velmi snadná, protože tato knihovna je
dostupná přes PyPi a navíc nevyžaduje žádné další závislosti. Instalaci tedy
provedeme standardním nástrojem <strong>pip</strong> pro právě přihlášeného
uživatele:</p>

<pre>
$ <strong>pip3 install --user pint</strong>
</pre>

<p>Ze zpráv vypisovaných v&nbsp;průběhu instalace knihovny <i>Pint</i> je
patrné, že se skutečně neinstalují žádné další tranzitivní závislosti:</p>

<pre>
Collecting pint
  Downloading Pint-0.23-py3-none-any.whl (305 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 305.0/305.0 kB 2.1 MB/s eta 0:00:00
Requirement already satisfied: typing-extensions in /usr/local/lib/python3.11/site-packages (from pint) (4.8.0)
Installing collected packages: pint
Successfully installed pint-0.23
</pre>

<p>Otestování, že je možné knihovnu naimportovat:</p>

<pre>
$ <strong>python3</strong>
&nbsp;
&gt;&gt;&gt; <strong>import pint</strong>
&gt;&gt;&gt; <strong>help(pint)</strong>
&nbsp;
Help on package pint:
&nbsp;
NAME
    pint
&nbsp;
DESCRIPTION
    pint
    ~~~~
&nbsp;
    Pint is Python module/package to define, operate and manipulate
    **physical quantities**: the product of a numerical value and a
    unit of measurement. It allows arithmetic operations between them
    and conversions from and to different units.
&nbsp;
    :copyright: 2016 by Pint Authors, see AUTHORS for more details.
    :license: BSD, see LICENSE for more details.
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Základní práce s&nbsp;jednotkami</h2>

<p>Podívejme se nyní na zcela základní možnosti, která nám knihovna <i>Pint</i>
poskytuje. V&nbsp;prvním příkladu nadeklarujeme novou proměnnou nazvanou
<strong>t1</strong>, která obsahuje hodnotu &bdquo;10 sekund&ldquo;. Nejde tedy
o pouhé bezrozměrné číslo 10, ale k&nbsp;číslu je přiřazena i jednotka:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
t1 = 10 * ureg.second
&nbsp;
print(t1)
</pre>

<p>Výsledek je zobrazen ve formě hodnoty + jednotky:</p>

<pre>
10 second
</pre>

<p>Zobrazit si můžeme i příslušnou veličinu a to přečtením atributu
<strong>dimensionality</strong>:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
t1 = 10 * ureg.second
&nbsp;
print(t1.dimensionality)
</pre>

<p>Opět se podívejme na výsledek:</p>

<pre>
[time]
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Operace s&nbsp;hodnotami s&nbsp;veličinami</h2>

<p>Samozřejmě je umožněno, aby se s&nbsp;hodnotami, ke kterým jsou přiřazeny
veličiny, prováděly obvyklé operace. Vyzkoušejme si například operace prováděné
s&nbsp;dvojicí časových údajů:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
t1 = 10 * ureg.second
t2 = 1 * ureg.minute
&nbsp;
print(t1)
print(t2)
print(t1*t1)
print(1/t1)
print(t1+t2)
print(t1-t2)
print(t2/t1)
</pre>

<p>Výsledky:</p>

<pre>
10 second
1 minute
100 second ** 2
0.1 / second
70 second
-50 second
0.1 minute / second
</pre>

<p><div class="rs-tip-major">Poznámka: poslední výsledek je ve skutečnosti
bezrozměrnou hodnotou. K&nbsp;této problematice se ještě vrátíme.</div></p>

<p>A opět je možné si u všech výsledků zobrazit příslušnou veličinu:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
t1 = 10 * ureg.second
t2 = 1 * ureg.minute
&nbsp;
x = t1*t1
y = 1/t1
z = t1 + t2
w = t1/t2
&nbsp;
print(x.dimensionality)
print(y.dimensionality)
print(z.dimensionality)
print(w.dimensionality)
</pre>

<p>Nyní je již korektně uvedeno, že poslední hodnota je bezrozměrná:</p>

<pre>
[time] ** 2
1 / [time]
[time]
dimensionless
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Výpočty s&nbsp;různými veličinami</h2>

<p>Prozatím jsme výpočty prováděli pouze s&nbsp;dvojicí časových údajů nebo
bezrozměrné hodnoty a časového údaje. Pochopitelně však můžeme ve výpočtu
použít i rozdílné veličiny. Asi nejjednodušším případem je výpočet rychlosti na
základě zadané vzdálenosti a času:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
s = 100 * ureg.meter
t = 20 * ureg.second
&nbsp;
print(s/t)
</pre>

<p>Vypočtený výsledek bude mít korektní hodnotu i jednotku:</p>

<pre>
5.0 meter / second
</pre>

<p>A opět si můžeme nechat odvodit i veličinu výsledku:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
s = 100 * ureg.meter
t = 20 * ureg.second
&nbsp;
v = s / t
print(v.dimensionality)
</pre>

<p>Výsledek by měl v&nbsp;tomto případě vypadat následovně:</p>

<pre>
[length] / [time]
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Nekorektní kombinace veličin</h2>

<p>Mnohé kombinace veličin nejsou korektní &ndash; jednalo by se totiž o ono
pověstné sčítání hrušek s&nbsp;jablky. Zkusme například sečíst 10 sekund
s&nbsp;jedním metrem:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
a = 10 * ureg.second
b = 1 * ureg.meter
&nbsp;
c = a + b
&nbsp;
print(a.dimensionality)
print(b.dimensionality)
print(c.dimensionality)
</pre>

<p>Tento skript skončí chybou, protože při sčítání je vyhozena výjimka typu
<strong>DimensionalityError</strong>:</p>

<pre>
  File "07_wrong_op.py", line 8, in &lt;module&gt;
    c = a + b
  File "/home/ptisnovs/.local/lib/python3.11/site-packages/pint/facets/plain/quantity.py", line 1188, in __add__
    return self._add_sub(other, operator.add)
  File "/home/ptisnovs/.local/lib/python3.11/site-packages/pint/facets/plain/quantity.py", line 108, in wrapped
    return f(self, *args, **kwargs)
  File "/home/ptisnovs/.local/lib/python3.11/site-packages/pint/facets/plain/quantity.py", line 1090, in _add_sub
    raise DimensionalityError(
pint.errors.DimensionalityError: Cannot convert from 'second' ([time]) to 'meter' ([length])
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Konverze jednotek</h2>

<p>Knihovna Pint podporuje i konverze jednotek. Tato operace se pochopitelně
provádí pro jednotky stejné veličiny a realizuje se metodou nazvanou
<strong>to</strong>, které se předá kýžená jednotka. Je to vlastně velmi
jednoduché:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
t1 = 1800 * ureg.second
t2 = t1.to(ureg.minute)
t3 = t1.to(ureg.hour)
&nbsp;
print(t1, t1.dimensionality)
print(t2, t2.dimensionality)
print(t3, t3.dimensionality)
</pre>

<p>Výsledkem bude stejná hodnota, ovšem pokaždé reprezentovaná odlišnými
jednotkami:</p>

<pre>
1800 second [time]
30.0 minute [time]
0.5 hour [time]
</pre>

<p>Nejvíce jednotek nalezneme u veličiny délka (a možná objem), takže si to
vyzkoušejme:</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
s1 = 1000 * ureg.meter
s2 = s1.to(ureg.millimetre)
s3 = s1.to(ureg.nautical_mile)
s4 = s1.to(ureg.inch)
s5 = s1.to(ureg.ly)
&nbsp;
print(s1, s1.dimensionality)
print(s2, s2.dimensionality)
print(s3, s3.dimensionality)
print(s4, s4.dimensionality)
print(s5, s5.dimensionality)
</pre>

<p>Výsledky:</p>

<pre>
1000000.0 millimeter [length]
0.5399568034557236 nautical_mile [length]
39370.07874015748 inch [length]
1.0570008340246153e-13 light_year [length]
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Plocha a rychlost</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Zrychlení a síla</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Explicitní zobrazení jednotek a veličin</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Prefixy jednotek</h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Binární prefixy, převody bajtů a bity</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Práce s&nbsp;úhly</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Redukce jednotek</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Převod na základní jednotky</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Formátování hodnot s&nbsp;jednotkami</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Příloha 1: výpis všech jednotek nabízených knihovnou <i>Pint</i></h2>

<p>Knihovna <i>Pint</i> má nadefinováno velké množství jednotek, které si
můžeme snadno vypsat. Výpis všech jednotek do formy HTML tabulky zajišťuje
následující krátký skript (který by možná bylo lepší přepsat s&nbsp;využitím
<strong>filter</strong> a <strong>partition</strong> do více funkcionální
podoby):</p>

<pre>
from pint import UnitRegistry
&nbsp;
ureg = UnitRegistry()
&nbsp;
print("&lt;tr&gt;", end="")
&nbsp;
c = 0
for item in dir(ureg):
    if item[0] != "_":
        print(f"&lt;td&gt;{item}&lt;/td&gt;", end="")
        c += 1
        if c == 6:
            print("&lt;/tr&gt;\n&lt;tr&gt;", end="")
            c=0
</pre>

<p>Povšimněte si, že některé jednotky mohou být zapsány poměrně čitelně pomocí
Unicode znaků:</p>

<table>
<tr><td>%</td><td>A</td><td>A_90</td><td>A_US</td><td>A_it</td><td>Ah</td></tr>
<tr><td>At</td><td>B</td><td>BDFT</td><td>BF</td><td>BTU</td><td>Ba</td></tr>
<tr><td>Bd</td><td>Bi</td><td>Bq</td><td>Btu</td><td>Btu_iso</td><td>Btu_it</td></tr>
<tr><td>Btu_th</td><td>C</td><td>C_90</td><td>Ci</td><td>Cl</td><td>Context</td></tr>
<tr><td>D</td><td>DPI</td><td>Da</td><td>ECC</td><td>EC_therm</td><td>E_h</td></tr>
<tr><td>Eh</td><td>F</td><td>FBM</td><td>F_90</td><td>Fr</td><td>G</td></tr>
<tr><td>G_0</td><td>Gal</td><td>Gb</td><td>Group</td><td>Gy</td><td>H</td></tr>
<tr><td>H2O</td><td>H_90</td><td>Hg</td><td>Hg_0C</td><td>Hg_32F</td><td>Hg_60F</td></tr>
<tr><td>Hz</td><td>J</td><td>K</td><td>KPH</td><td>K_J</td><td>K_J90</td></tr>
<tr><td>K_alpha_Cu_d_220</td><td>K_alpha_Mo_d_220</td><td>K_alpha_W_d_220</td><td>L</td><td>Ly</td><td>M</td></tr>
<tr><td>MPH</td><td>Measurement</td><td>Mx</td><td>N</td><td>N_A</td><td>Ne</td></tr>
<tr><td>NeC</td><td>Nm</td><td>Np</td><td>Oe</td><td>P</td><td>PPCM</td></tr>
<tr><td>PPI</td><td>PSH</td><td>Pa</td><td>Phi_0</td><td>Quantity</td><td>R</td></tr>
<tr><td>RKM</td><td>R_K</td><td>R_K90</td><td>R_inf</td><td>R_∞</td><td>Rd</td></tr>
<tr><td>Ry</td><td>S</td><td>SPL</td><td>St</td><td>Sv</td><td>System</td></tr>
<tr><td>T</td><td>Ta</td><td>Td</td><td>Tj</td><td>Tt</td><td>U</td></tr>
<tr><td>UK_bbl</td><td>UK_bushel</td><td>UK_cup</td><td>UK_cwt</td><td>UK_fluid_ounce</td><td>UK_force_ton</td></tr>
<tr><td>UK_gallon</td><td>UK_gill</td><td>UK_horsepower</td><td>UK_hundredweight</td><td>UK_pint</td><td>UK_pk</td></tr>
<tr><td>UK_quart</td><td>UK_ton</td><td>UK_ton_force</td><td>US_cwt</td><td>US_dry_barrel</td><td>US_dry_gallon</td></tr>
<tr><td>US_dry_pint</td><td>US_dry_quart</td><td>US_fluid_dram</td><td>US_fluid_ounce</td><td>US_force_ton</td><td>US_hundredweight</td></tr>
<tr><td>US_international_ampere</td><td>US_international_ohm</td><td>US_international_volt</td><td>US_liquid_cup</td><td>US_liquid_dram</td><td>US_liquid_fifth</td></tr>
<tr><td>US_liquid_gallon</td><td>US_liquid_gill</td><td>US_liquid_ounce</td><td>US_liquid_quart</td><td>US_pint</td><td>US_shot</td></tr>
<tr><td>US_therm</td><td>US_ton</td><td>US_ton_force</td><td>Unit</td><td>UnitsContainer</td><td>V</td></tr>
<tr><td>VA</td><td>V_90</td><td>V_US</td><td>V_it</td><td>W</td><td>W_90</td></tr>
<tr><td>Wb</td><td>Wh</td><td>Xu_Cu</td><td>Xu_Mo</td><td>Z_0</td><td>a</td></tr>
<tr><td>a0</td><td>a_0</td><td>a_u_action</td><td>a_u_current</td><td>a_u_electric_field</td><td>a_u_energy</td></tr>
<tr><td>a_u_force</td><td>a_u_intensity</td><td>a_u_length</td><td>a_u_mass</td><td>a_u_temp</td><td>a_u_time</td></tr>
<tr><td>abA</td><td>abC</td><td>abF</td><td>abH</td><td>abS</td><td>abV</td></tr>
<tr><td>abampere</td><td>abcoulomb</td><td>aberdeen</td><td>abfarad</td><td>abhenry</td><td>abmho</td></tr>
<tr><td>abohm</td><td>absiemens</td><td>abvolt</td><td>abΩ</td><td>acre</td><td>acre_feet</td></tr>
<tr><td>acre_foot</td><td>add_context</td><td>alpha</td><td>amp</td><td>ampere</td><td>ampere_hour</td></tr>
<tr><td>ampere_turn</td><td>amu</td><td>angstrom</td><td>angstrom_star</td><td>angular_degree</td><td>angular_minute</td></tr>
<tr><td>angular_second</td><td>ap_dr</td><td>ap_lb</td><td>ap_oz</td><td>apothecary_dram</td><td>apothecary_ounce</td></tr>
<tr><td>apothecary_pound</td><td>arc_minute</td><td>arc_second</td><td>arcdeg</td><td>arcdegree</td><td>arcmin</td></tr>
<tr><td>arcminute</td><td>arcsec</td><td>arcsecond</td><td>are</td><td>astronomical_unit</td><td>at</td></tr>
<tr><td>atm</td><td>atm_l</td><td>atmosphere</td><td>atmosphere_liter</td><td>atomic_mass_constant</td><td>atomic_unit_of_action</td></tr>
<tr><td>atomic_unit_of_current</td><td>atomic_unit_of_electric_field</td><td>atomic_unit_of_energy</td><td>atomic_unit_of_force</td><td>atomic_unit_of_intensity</td><td>atomic_unit_of_length</td></tr>
<tr><td>atomic_unit_of_mass</td><td>atomic_unit_of_temperature</td><td>atomic_unit_of_time</td><td>au</td><td>auto_reduce_dimensions</td><td>autoconvert_offset_to_baseunit</td></tr>
<tr><td>avdp_dram</td><td>avdp_ounce</td><td>avdp_pound</td><td>avogadro_constant</td><td>avogadro_number</td><td>avoirdupois_dram</td></tr>
<tr><td>avoirdupois_ounce</td><td>avoirdupois_pound</td><td>b</td><td>bag</td><td>bar</td><td>barad</td></tr>
<tr><td>barie</td><td>barn</td><td>barrel</td><td>barrie</td><td>baryd</td><td>barye</td></tr>
<tr><td>baud</td><td>bbl</td><td>becquerel</td><td>beer_barrel</td><td>beer_bbl</td><td>big_point</td></tr>
<tr><td>biot</td><td>biot_turn</td><td>bit</td><td>bits_per_pixel</td><td>blob</td><td>board_feet</td></tr>
<tr><td>board_foot</td><td>bohr</td><td>bohr_magneton</td><td>bohr_radius</td><td>boiler_horsepower</td><td>boltzmann_constant</td></tr>
<tr><td>bp</td><td>bpp</td><td>bps</td><td>british_thermal_unit</td><td>bu</td><td>buckingham</td></tr>
<tr><td>bushel</td><td>byte</td><td>c</td><td>c_0</td><td>c_1</td><td>c_2</td></tr>
<tr><td>cables_length</td><td>cache_folder</td><td>cal</td><td>cal_15</td><td>cal_it</td><td>cal_th</td></tr>
<tr><td>calorie</td><td>candela</td><td>candle</td><td>carat</td><td>case_sensitive</td><td>cc</td></tr>
<tr><td>cd</td><td>celsius</td><td>centimeter</td><td>centimeter_H2O</td><td>centimeter_Hg</td><td>centimeter_Hg_0C</td></tr>
<tr><td>centipoise</td><td>centuries</td><td>century</td><td>chain</td><td>characteristic_impedance_of_vacuum</td><td>check</td></tr>
<tr><td>cicero</td><td>circle</td><td>circular_mil</td><td>classical_electron_radius</td><td>clausius</td><td>cmH2O</td></tr>
<tr><td>cmHg</td><td>cm_1</td><td>cm_H2O</td><td>cm_Hg</td><td>cmil</td><td>common_year</td></tr>
<tr><td>conductance_quantum</td><td>context</td><td>conventional_ampere_90</td><td>conventional_coulomb_90</td><td>conventional_farad_90</td><td>conventional_henry_90</td></tr>
<tr><td>conventional_josephson_constant</td><td>conventional_mercury</td><td>conventional_ohm_90</td><td>conventional_volt_90</td><td>conventional_von_klitzing_constant</td><td>conventional_water</td></tr>
<tr><td>conventional_watt_90</td><td>convert</td><td>cooling_tower_ton</td><td>coulomb</td><td>coulomb_constant</td><td>count</td></tr>
<tr><td>counts_per_second</td><td>cp</td><td>cps</td><td>css_pixel</td><td>ct</td><td>cu_ft</td></tr>
<tr><td>cu_in</td><td>cu_yd</td><td>cubic_centimeter</td><td>cubic_feet</td><td>cubic_foot</td><td>cubic_inch</td></tr>
<tr><td>cubic_yard</td><td>cup</td><td>curie</td><td>cwt</td><td>cycle</td><td>d</td></tr>
<tr><td>dB</td><td>dBm</td><td>dBu</td><td>d_220</td><td>dalton</td><td>darcy</td></tr>
<tr><td>day</td><td>debye</td><td>decade</td><td>decibel</td><td>decibelmicrowatt</td><td>decibelmilliwatt</td></tr>
<tr><td>decimeter</td><td>decitex</td><td>default_as_delta</td><td>default_format</td><td>default_system</td><td>define</td></tr>
<tr><td>deg</td><td>degC</td><td>degF</td><td>degK</td><td>degR</td><td>degRe</td></tr>
<tr><td>degree</td><td>degreeC</td><td>degreeF</td><td>degreeK</td><td>degreeR</td><td>degreeRe</td></tr>
<tr><td>degree_Celsius</td><td>degree_Fahrenheit</td><td>degree_Kelvin</td><td>degree_Rankine</td><td>degree_Reaumur</td><td>degree_Réaumur</td></tr>
<tr><td>delta_celsius</td><td>delta_degC</td><td>delta_degF</td><td>delta_degRe</td><td>delta_degreeC</td><td>delta_degreeF</td></tr>
<tr><td>delta_degreeRe</td><td>delta_degree_Celsius</td><td>delta_degree_Fahrenheit</td><td>delta_degree_Reaumur</td><td>delta_degree_Réaumur</td><td>delta_fahrenheit</td></tr>
<tr><td>delta_reaumur</td><td>delta_réaumur</td><td>den</td><td>denier</td><td>dgal</td><td>didot</td></tr>
<tr><td>dirac_constant</td><td>disable_contexts</td><td>dot</td><td>dots_per_inch</td><td>dpi</td><td>dqt</td></tr>
<tr><td>dr</td><td>drachm</td><td>dram</td><td>dry_barrel</td><td>dry_gallon</td><td>dry_pint</td></tr>
<tr><td>dry_quart</td><td>dtex</td><td>dwt</td><td>dyn</td><td>dyne</td><td>e</td></tr>
<tr><td>eV</td><td>electric_constant</td><td>electrical_horsepower</td><td>electron_g_factor</td><td>electron_mass</td><td>electron_volt</td></tr>
<tr><td>elementary_charge</td><td>enable_contexts</td><td>entropy_unit</td><td>enzyme_unit</td><td>enzymeunit</td><td>eon</td></tr>
<tr><td>eps0</td><td>eps_0</td><td>epsilon_0</td><td>erg</td><td>esu</td><td>eu</td></tr>
<tr><td>eulers_number</td><td>fahrenheit</td><td>farad</td><td>faraday</td><td>faraday_constant</td><td>fathom</td></tr>
<tr><td>feet</td><td>feet_H2O</td><td>femtometer</td><td>fermi</td><td>fifteen_degree_calorie</td><td>fifth</td></tr>
<tr><td>fine_structure_constant</td><td>first_radiation_constant</td><td>fldr</td><td>floz</td><td>fluid_dram</td><td>fluid_ounce</td></tr>
<tr><td>fluidram</td><td>fm</td><td>fmt_locale</td><td>foot</td><td>foot_H2O</td><td>foot_per_second</td></tr>
<tr><td>foot_pound</td><td>footpound</td><td>force_gram</td><td>force_kilogram</td><td>force_long_ton</td><td>force_metric_ton</td></tr>
<tr><td>force_ndarray</td><td>force_ndarray_like</td><td>force_ounce</td><td>force_pound</td><td>force_short_ton</td><td>force_t</td></tr>
<tr><td>force_ton</td><td>fortnight</td><td>fps</td><td>franklin</td><td>ft</td><td>ftH2O</td></tr>
<tr><td>ft_lb</td><td>fur</td><td>furlong</td><td>g</td><td>g0</td><td>g_0</td></tr>
<tr><td>g_e</td><td>g_n</td><td>gal</td><td>galileo</td><td>gallon</td><td>gamma</td></tr>
<tr><td>gamma_mass</td><td>gauss</td><td>get_base_units</td><td>get_compatible_units</td><td>get_dimensionality</td><td>get_group</td></tr>
<tr><td>get_name</td><td>get_root_units</td><td>get_symbol</td><td>get_system</td><td>gf</td><td>gi</td></tr>
<tr><td>gilbert</td><td>gill</td><td>gon</td><td>gr</td><td>grad</td><td>grade</td></tr>
<tr><td>grain</td><td>gram</td><td>gram_force</td><td>gravitational_constant</td><td>gravity</td><td>gray</td></tr>
<tr><td>gregorian_year</td><td>h</td><td>ha</td><td>hand</td><td>hartree</td><td>hartree_energy</td></tr>
<tr><td>hbar</td><td>hectare</td><td>henry</td><td>hertz</td><td>hogshead</td><td>horsepower</td></tr>
<tr><td>hour</td><td>hp</td><td>hr</td><td>hundredweight</td><td>hydraulic_horsepower</td><td>impedance_of_free_space</td></tr>
<tr><td>imperial_barrel</td><td>imperial_bbl</td><td>imperial_bu</td><td>imperial_bushel</td><td>imperial_cp</td><td>imperial_cup</td></tr>
<tr><td>imperial_fldr</td><td>imperial_floz</td><td>imperial_fluid_drachm</td><td>imperial_fluid_dram</td><td>imperial_fluid_ounce</td><td>imperial_fluid_scruple</td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Příloha 2: podpora pro práci s&nbsp;jednotkami v&nbsp;jazyku Kawa</h2>

<p>Python není prvním programovacím jazykem, do něhož byla přidána podpora pro
práci s&nbsp;veličinami a jednotkami. Velmi pěkně je integrace jednotek řešena
v&nbsp;jazyku <i>Kawa</i>, což je jedna z&nbsp;variant <i>Scheme</i>, která
běží nad JVM a s&nbsp;níž jsme se již na stránkách Roota poměrně do podrobností
seznámili (viz odkazy uvedené <a href="#k20">ve dvacáté kapitole</a>). Mezi
vymoženosti jazyka <i>Kawa</i> patří možnost přiřadit libovolné číselné hodnotě
i její jednotku. Jednotka je k&nbsp;číselné hodnotě přiřazena v&nbsp;čase běhu
aplikace a zúčastní se i operací prováděných s&nbsp;danou hodnotou (součet,
součin, rozdíl, podíl). Můžeme tak například používat konstanty
s&nbsp;přiřazenými jednotkami:</p>

<pre>
1A
0.5V
32cm
120s
</pre>

<p><div class="rs-tip-major">Poznámka: zápis je tedy přirozenější, než
v&nbsp;případě Pint.</div></p>

<p>Nebo též z&nbsp;běžné hodnoty:</p>

<pre>
<strong>(make-quantity 10 "cm")</strong>
10cm
&nbsp;
<strong>(make-quantity 10 unit:cm)</strong>
10cm
</pre>

<p><div class="rs-tip-major">Poznámka: dané jednotky ovšem musí být nejdříve
definovány &ndash; viz další text.</div></p>

<p>Pochopitelně lze vytvořit i proměnné a inicializovat je hodnotou i
s&nbsp;uvedením jednotky. To se provádí následujícím způsobem:</p>

<pre>
(<strong>define</strong> MAX_CURRENT 1A)
(<strong>define</strong> AVERAGE_DISTANCE 32cm)
(<strong>define</strong> TIMEOUT 120s)
</pre>

<p>Je však možné použít libovolnou jednotku? Resp.&nbsp;přesněji řečeno,
kontroluje se, zda je uvedená jednotka známá a nedopustíme se například omylem
přepisu, jako v&nbsp;následujícím příkladu?</p>

<pre>
(<strong>define</strong> AVERAGE_DISTANCE 32cn)
</pre>

<p>Jednotky (jejich identifikátory) se skutečně kontrolují. Přímo
v&nbsp;základních knihovnách programovacího jazyka <i>Kawa</i> jsou některé
jednotky definovány, další je možné definovat podle toho, jaký konkrétní
problém vyvíjená aplikace řeší. Definice nové jednotky může vypadat
následovně:</p>

<pre>
<strong>(define-base-unit meter "distance")</strong>
<strong>(define-unit stadion 176meter)</strong>
</pre>

<p>Vytvořili jsme jednotku &bdquo;metr&ldquo; a &bdquo;stadion&ldquo;, který
měří přibližně 176 metrů.</p>

<p>S&nbsp;novou jednotkou můžeme provést například součin s&nbsp;bezrozměrnou
konstantou, což jednotku (ani veličinu) nijak nezmění:</p>

<pre>
<strong>(* 2stadion 3)</strong>
6.0stadion
</pre>

<p>To však není vše &ndash; jazyk <i>Kawa</i> totiž do určité míry dokáže
odvodit i jednotku výsledku nějaké operace. U součtu a rozdílu je to
jednoduché, ovšem podobně se odvozuje i jednotka při násobení a dělení:</p>

<pre>
<strong>(* 10cm 2)</strong>
20.0cm
&nbsp;
<strong>(* 10cm 10)</strong>
100.0cm
&nbsp;
<strong>(* 10cm 10cm)</strong>
100.0cm^2
&nbsp;
</pre>

<p>Dělení hodnot s&nbsp;různými jednotkami:</p>

<pre>
<strong>(/ 10s 5cm)</strong>
2.0s*cm^-1
&nbsp;
<strong>(/ 5cm 10s)</strong>
0.5cm*s^-1
</pre>

<p><div class="rs-tip-major">Poznámka: toto je skutečně <strong>velmi</strong>
užitečná vlastnost, která nám pomůže odhalit mnohé chyby v&nbsp;algoritmu. Na
konci výpočtu se totiž můžeme přesvědčit i o jednotce výsledku a zjistit tak,
že se neprovádí &bdquo;podivné&ldquo; operace, které například ani nemají
obdobu v&nbsp;reálném světě. Ostatně můžeme si uvést příklad či příklady
dalších výpočtů:</div></p>

<pre>
<strong>(define-base-unit A "electric current")</strong>
<strong>3A</strong>
3.0A
&nbsp;
<strong>(define-base-unit V "voltage")</strong>
<strong>5V</strong>
5.0V
&nbsp;
<strong>(* 3A 5V)</strong>
15.0A*V
&nbsp;
<strong>(define power (* 3A 5V))</strong>
<strong>(define resistance (/ 5V 3A))</strong>
<strong>power</strong>
15.0A*V
&nbsp;
<strong>resistance</strong>
1.6666666666666667V*A^-1
&nbsp;
<strong>(define wrong-power (* 3A 5cm))</strong>
<strong>wrong-power</strong>
15.0A*cm
&nbsp;
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_time.py</td><td>základní použití časových jednotek</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/01_time.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/01_time.py</a></td></tr>
<tr><td> 2</td><td>02_dimensionality.py</td><td>získání veličiny</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/02_dimensionality.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/02_dimensionality.py</a></td></tr>
<tr><td> 3</td><td>03_time.py</td><td>operace s&nbsp;časovými jednotkami</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/03_time.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/03_time.py</a></td></tr>
<tr><td> 4</td><td>04_time_dimensionality.py</td><td>získání veličiny</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/04_time_dimensionality.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/04_time_dimensionality.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>05_velocity.py</td><td>rychlostní jednotky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/05_velocity.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/05_velocity.py</a></td></tr>
<tr><td> 6</td><td>06_velocity_dimensionality.py</td><td>získání veličiny (nebo jejího přiblížení)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/06_velocity_dimensionality.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/06_velocity_dimensionality.py</a></td></tr>
<tr><td> 7</td><td>07_wrong_op.py</td><td>detekce nekorektních operací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/07_wrong_op.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/07_wrong_op.py</a></td></tr>
<tr><td> 8</td><td>08_conversion.py</td><td>konverze jednotek, první příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/08_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/08_conversion.py</a></td></tr>
<tr><td> 9</td><td>09_conversion.py</td><td>konverze jednotek, druhý příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/09_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/09_conversion.py</a></td></tr>
<tr><td>10</td><td>10_area.py</td><td>výpočet plochy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/10_area.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/10_area.py</a></td></tr>
<tr><td>11</td><td>11_velocity.py</td><td>výpočet rychlosti</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/11_velocity.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/11_velocity.py</a></td></tr>
<tr><td>12</td><td>12_acceleration.py</td><td>výpočet zrychlení</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/12_acceleration.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/12_acceleration.py</a></td></tr>
<tr><td>13</td><td>13_force.py</td><td>výpočet síly</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/13_force.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/13_force.py</a></td></tr>
<tr><td>14</td><td>14_units_and_dimensionality.py</td><td>veličiny a jednotky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/14_units_and_dimensionality.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/14_units_and_dimensionality.py</a></td></tr>
<tr><td>15</td><td>15_prefixes.py</td><td>použití prefixů u jednotek, první příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/15_prefixes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/15_prefixes.py</a></td></tr>
<tr><td>16</td><td>16_prefixes.py</td><td>použití prefixů u jednotek, druhý příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/16_prefixes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/16_prefixes.py</a></td></tr>
<tr><td>17</td><td>17_prefixes.py</td><td>použití prefixů u jednotek, třetí příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/17_prefixes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/17_prefixes.py</a></td></tr>
<tr><td>18</td><td>18_binary_prefixes.py</td><td>binární prefixy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/18_binary_prefixes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/18_binary_prefixes.py</a></td></tr>
<tr><td>19</td><td>19_byte_to_bites.py</td><td>binární prefixy a převod bajtů na bity</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/19_byte_to_bites.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/19_byte_to_bites.py</a></td></tr>
<tr><td>20</td><td>20_angle.py</td><td>úhlové jednotky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/20_angle.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/20_angle.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>21_list_units.py</td><td>výpis všech dostupných jednotek</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/21_list_units.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/21_list_units.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>22</td><td>22_reduced_units.py</td><td>redukce dimensionality</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/22_reduced_units.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/22_reduced_units.py</a></td></tr>
<tr><td>23</td><td>23_to_base_units.py</td><td>redukce na základní jednotky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/23_to_base_units.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/23_to_base_units.py</a></td></tr>
<tr><td>24</td><td>24_to_base_units.py</td><td>redukce na základní jednotky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/24_to_base_units.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/24_to_base_units.py</a></td></tr>
<tr><td>25</td><td>25_formatting.py</td><td>formátovaný výstup</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pint/25_formatting.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pint/25_formatting.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Units and Quantities<br />
<a href="https://uomresearchit.github.io/programming_with_python/06-units_and_quantities/index.html">https://uomresearchit.github.io/programming_with_python/06-units_and_quantities/index.html</a>
</li>

<li>Fyzikální veličina (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Fyzik%C3%A1ln%C3%AD_veli%C4%8Dina">https://cs.wikipedia.org/wiki/Fyzik%C3%A1ln%C3%AD_veli%C4%8Dina</a>
</li>

<li>Fyzikální jednotka (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Fyzik%C3%A1ln%C3%AD_jednotka">https://cs.wikipedia.org/wiki/Fyzik%C3%A1ln%C3%AD_jednotka</a>
</li>

<li>Soustava SI (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Soustava_SI">https://cs.wikipedia.org/wiki/Soustava_SI</a>
</li>

<li>Dokumentace ke knihovně Pint<br />
<a href="https://pint.readthedocs.io/en/stable/index.html">https://pint.readthedocs.io/en/stable/index.html</a>
</li>

<li>Knihovna astropy na PyPi<br />
<a href="https://pypi.org/project/astropy/">https://pypi.org/project/astropy/</a>
</li>

<li>Knihovna Pint na PyPi<br />
<a href="https://pypi.org/project/Pint/">https://pypi.org/project/Pint/</a>
</li>

<li>Repositář knihovny Pint<br />
<a href="https://github.com/hgrecco/pint">https://github.com/hgrecco/pint</a>
</li>

<li>Knihovna units na PyPi (nevyvíjený projekt)<br />
<a href="https://pypi.org/project/units/">https://pypi.org/project/units/</a>
</li>

<li>Knihovna quantity na PyPi<br />
<a href="https://pypi.org/project/quantity/">https://pypi.org/project/quantity/</a>
</li>

<li>Repositář s&nbsp;knihovnou quantity<br />
<a href="https://github.com/mamrhein/quantity">https://github.com/mamrhein/quantity</a>
</li>

<li>Knihovna xarray-units na PyPi<br />
<a href="https://pypi.org/project/xarray-units/">https://pypi.org/project/xarray-units/</a>
</li>

<li>Kawa: překvapivě silný a výkonný dialekt Scheme pro JVM<br />
<a href="https://www.root.cz/clanky/kawa-prekvapive-silny-a-vykonny-dialekt-scheme-pro-jvm/">https://www.root.cz/clanky/kawa-prekvapive-silny-a-vykonny-dialekt-scheme-pro-jvm/</a>
</li>

<li>Jazyk Kawa v&nbsp;ekosystému virtuálního stroje Javy<br />
<a href="https://www.root.cz/clanky/jazyk-kawa-v-ekosystemu-virtualniho-stroje-javy/">https://www.root.cz/clanky/jazyk-kawa-v-ekosystemu-virtualniho-stroje-javy/</a>
</li>

<li>Zpracování vektorů, matic a N-rozměrných polí v&nbsp;programovacím jazyku Kawa<br />
<a href="https://www.root.cz/clanky/zpracovani-vektoru-matic-a-n-rozmernych-poli-v-programovacim-jazyku-kawa/">https://www.root.cz/clanky/zpracovani-vektoru-matic-a-n-rozmernych-poli-v-programovacim-jazyku-kawa/</a>
</li>

<li>Kawa: Compiling Scheme to Java<br />
<a href="https://www.mit.edu/afs.new/sipb/project/kawa/doc/kawa-tour.html">https://www.mit.edu/afs.new/sipb/project/kawa/doc/kawa-tour.html</a>
</li>

<li>Kawa in Languages shootout<br />
<a href="http://per.bothner.com/blog/2010/Kawa-in-shootout/">http://per.bothner.com/blog/2010/Kawa-in-shootout/</a>
</li>

<li>Kawa 2.0 Supports Scheme R7RS<br />
<a href="https://developers.slashdot.org/story/14/12/13/2259225/kawa-20-supports-scheme-r7rs/">https://developers.slashdot.org/story/14/12/13/2259225/kawa-20-supports-scheme-r7rs/</a>
</li>

<li>Kawa — fast scripting on the Java platform<br />
<a href="https://lwn.net/Articles/623349/">https://lwn.net/Articles/623349/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

