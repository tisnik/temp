<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. IPython pro různé verze programovacího jazyka Python</a></p>
<p><a href="#k03">*** 3. První seznámení s&nbsp;IPythonem</a></p>
<p><a href="#k04">*** 4. Volba způsobu ovládání IPythonu</a></p>
<p><a href="#k05">*** 5. Standardní klávesové zkratky v&nbsp;režimu emulace Emacsu</a></p>
<p><a href="#k06">*** 6. Standardní klávesové zkratky v&nbsp;režimu emulace Vi/Vimu</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. Vybrané &bdquo;konkurenční&ldquo; projekty</a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Obsah druhé části článku</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>Pravděpodobně všichni vývojáři, kteří jazyk Python používají, se seznámili s&nbsp;interaktivním režimem Pythonu. Tento režim, který se taktéž někdy nazývá smyčka REPL (což je zkratka vycházející z&nbsp;plného označení <i>Read-Eval-Print-Loop</i>, které pochází z&nbsp;období, v&nbsp;němž vznikal programovací jazyk LISP) se použije ve chvíli, kdy spustíme interpret Pythonu bez specifikace skriptu, který se má analyzovat a následně spustit (s&nbsp;mezipřekladem do bajtkódu). Samotná smyčka REPL se může nacházet v&nbsp;několika stavech, které se rozlišují takzvanou výzvou (<i>prompt</i>).  Ve výchozím stavu se očekává specifikace jednoho příkazu, který se ihned vykoná, ovšem můžeme si taktéž nechat zobrazit nápovědu, začít deklaraci funkce či třídy atd.</p>

<a href="https://www.root.cz/obrazek/359588/"><img src="https://i.iinfo.cz/images/143/python-interpreters-1-1-prev.png" class="image-359588" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 1: Interaktivní smyčka REPL programovacího jazyka Python verze
2.7.6.</i></p>

<p>Ovšem samotný standardní REPL má některá omezení. Sice umožňuje doplnění klíčového slova nebo jména funkce/metody klávesou TAB, ovšem již nedokáže nabídnout seznam metod po zápisu jména objektu. Taktéž se špatně vrací v&nbsp;historii příkazů ve chvíli, kdy se jedná například o několikařádkovou deklaraci. A navíc REPL automaticky neprovádí odsazení příkazů uvnitř bloku, což je pro programovací jazyk, v&nbsp;němž hraje odsazení velkou roli, dosti nepříjemné:</p>

<pre>
&gt;&gt;&gt; def x():
... pass
  File "&lt;stdin&gt;", line 2
    pass
       ^
IndentationError: expected an indented block
</pre>

<p>Dále popsaný projekt IPython tyto problémy řeší a navíc uživatelům nabízí i mnohé další funkce.</p>

<a href="https://www.root.cz/obrazek/359589/"><img src="https://i.iinfo.cz/images/143/python-interpreters-1-2-prev.png" class="image-359589" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 2: Interaktivní smyčka REPL programovacího jazyka Python verze 3.6.3 (což je již postarší verze).</i></p>

2001, 259 řádků kódu v Pythonu
Fernando Perez
cislovane vstupy, vystup z prikazu se pamatuje + nacteni casto pouzivanych knihoven

posleze upravy pro datové analýzy
potom Jupyter projekt



<p><a name="k02"></a></p>
<h2 id="k02">2. IPython pro různé verze programovacího jazyka Python</h2>

<pre>
# <strong>dnf install ipython3</strong>
</pre>

<pre>
Last metadata expiration check: 2:56:32 ago on Tue 16 Feb 2021 11:14:20 AM CET.
Dependencies resolved.
================================================================================
 Package                  Arch   Version         Repository                Size
================================================================================
Installing:
 python3-ipython          noarch 7.18.1-1.fc33   beaker-Fedora-Everything 800 k
Installing dependencies:
 python3-backcall         noarch 0.1.0-11.fc33   beaker-Fedora-Everything  27 k
 python3-ipython_genutils noarch 0.1.0-23.fc33   beaker-Fedora-Everything  51 k
 python3-jedi             noarch 0.17.1-2.fc33   beaker-Fedora-Everything 1.0 M
 python3-parso            noarch 0.7.0-2.fc33    beaker-Fedora-Everything 147 k
 python3-pexpect          noarch 4.8.0-5.fc33    beaker-Fedora-Everything 134 k
 python3-pickleshare      noarch 0.7.5-4.fc33    beaker-Fedora-Everything  18 k
 python3-prompt-toolkit   noarch 3.0.5-4.fc33    beaker-Fedora-Everything 576 k
 python3-ptyprocess       noarch 0.6.0-11.fc33   beaker-Fedora-Everything  30 k
 python3-pygments         noarch 2.6.1-5.fc33    updates                  1.8 M
 python3-traitlets        noarch 4.3.3-4.fc33    beaker-Fedora-Everything 159 k
 python3-wcwidth          noarch 0.2.5-2.fc33    beaker-Fedora-Everything  42 k
&nbsp;
Transaction Summary
================================================================================
Install  12 Packages
&nbsp;
Total download size: 4.8 M
Installed size: 21 M
Is this ok [y/N]: <strong>y</strong>
</pre>

<pre>
Downloading Packages:
(1/12): python3-backcall-0.1.0-11.fc33.noarch.r 453 kB/s |  27 kB     00:00    
(2/12): python3-ipython_genutils-0.1.0-23.fc33. 700 kB/s |  51 kB     00:00    
(3/12): python3-ipython-7.18.1-1.fc33.noarch.rp 8.9 MB/s | 800 kB     00:00    
(4/12): python3-parso-0.7.0-2.fc33.noarch.rpm   4.1 MB/s | 147 kB     00:00    
(5/12): python3-pickleshare-0.7.5-4.fc33.noarch 1.6 MB/s |  18 kB     00:00    
(6/12): python3-pexpect-4.8.0-5.fc33.noarch.rpm 4.0 MB/s | 134 kB     00:00    
(7/12): python3-jedi-0.17.1-2.fc33.noarch.rpm    15 MB/s | 1.0 MB     00:00    
(8/12): python3-ptyprocess-0.6.0-11.fc33.noarch 1.5 MB/s |  30 kB     00:00    
(9/12): python3-wcwidth-0.2.5-2.fc33.noarch.rpm 2.1 MB/s |  42 kB     00:00    
(10/12): python3-traitlets-4.3.3-4.fc33.noarch. 4.8 MB/s | 159 kB     00:00    
(11/12): python3-prompt-toolkit-3.0.5-4.fc33.no  12 MB/s | 576 kB     00:00    
(12/12): python3-pygments-2.6.1-5.fc33.noarch.r  11 MB/s | 1.8 MB     00:00    
--------------------------------------------------------------------------------
Total                                           5.4 MB/s | 4.8 MB     00:00     
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                        1/1 
&nbsp;
...
...
...
&nbsp;
Installed:
  python3-backcall-0.1.0-11.fc33.noarch
  python3-ipython-7.18.1-1.fc33.noarch
  python3-ipython_genutils-0.1.0-23.fc33.noarch
  python3-jedi-0.17.1-2.fc33.noarch
  python3-parso-0.7.0-2.fc33.noarch
  python3-pexpect-4.8.0-5.fc33.noarch
  python3-pickleshare-0.7.5-4.fc33.noarch
  python3-prompt-toolkit-3.0.5-4.fc33.noarch
  python3-ptyprocess-0.6.0-11.fc33.noarch
  python3-pygments-2.6.1-5.fc33.noarch
  python3-traitlets-4.3.3-4.fc33.noarch
  python3-wcwidth-0.2.5-2.fc33.noarch
&nbsp;
Complete!
</pre>

<pre>
$ <strong>ipython --version</strong>
&nbsp;
7.18.1
</pre>

<pre>
$ <strong>ipython</strong>
&nbsp;
Python 3.9.1 (default, Jan 20 2021, 00:00:00) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help.
&nbsp;
In [1]:  
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. První seznámení s&nbsp;IPythonem</h2>

<p></p>

REPL
syntax
tab completion / unicode chars
smart indent
historii
introspekce
var? ?var
va?? ??var
os.*dir*?

In [6]: import os                                                               

In [7]: os.*dir*?                                                               
os.__dir__
os.chdir
os.curdir
os.fchdir
os.listdir
os.makedirs
os.mkdir
os.pardir
os.removedirs
os.rmdir
os.scandir
os.supports_dir_fd

In [9]: os.chdir?                                                               
Signature: os.chdir(path)
Docstring:
Change the current working directory to the specified path.

path may always be specified as a string.
On some platforms, path may also be specified as an open file descriptor.
  If this functionality is unavailable, using it raises an exception.
Type:      builtin_function_or_method

In [26]: import math                                                            

In [27]: math.floor?                                                            
Signature: math.floor(x, /)
Docstring:
Return the floor of x as an Integral.

This is the largest integer <= x.
Type:      builtin_function_or_method

In [33]: math?                                                                  
Type:        module
String form: <module 'math' from '/usr/lib64/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so'>
File:        /usr/lib64/python3.9/lib-dynload/math.cpython-39-x86_64-linux-gnu.so
Docstring:  
This module provides access to the mathematical functions
defined by the C standard.

cells
variables
_i, _ii, _iii

_icislo

In [47]: 6*7                                                                    
Out[47]: 42

In [48]: _i47                                                                   
Out[48]: '6*7'

In [49]: _i47?                                                                  
Type:        str
String form: 6*7
Length:      3
Docstring:  
str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.

In [50]: _ih[47]                                                                
Out[50]: '6*7'
In [51]: In[47]                                                                 
Out[51]: '6*7'


In [55]: _oh[47]                                                                
Out[55]: 42

In [56]: Out[47]                                                                
Out[56]: 42


In [59]: 1+2;                                                                   

In [60]: 1+2                                                                    
Out[60]: 3


Magické funkce
začínají na % nebo %%

In [63]: %history -n -o 1-20                                                    
   1: os.*dir*
   2: os.*dir*?
   3: import os
   4: os.*dir*
   5: os.*dir*?
   6: import os
   7: os.*dir*?
   8: os.chdir?
   9: os.chdir?
  10: os.chdir??
  11: ??os.chdir
  12: ??os.chdir??
  13: import math
  14: math.*?
  15: math.*a?
  16: math.*r?
  17: math.*r*?
  18: math.*rand*?
  19: *rand*?
  20: *rand*?

IPython -- An enhanced Interactive Python - Quick Reference Card
================================================================

obj?, obj??      : Get help, or more help for object (also works as
                   ?obj, ??obj).
?foo.*abc*       : List names in 'foo' containing 'abc' in them.
%magic           : Information about IPython's 'magic' % functions.

Magic functions are prefixed by % or %%, and typically take their arguments
without parentheses, quotes or even commas for convenience.  Line magics take a
single % and cell magics are prefixed with two %%.

Example magic function calls:

%alias d ls -F   : 'd' is now an alias for 'ls -F'
alias d ls -F    : Works if 'alias' not a python name
alist = %alias   : Get list of aliases to 'alist'
cd /usr/share    : Obvious. cd -<tab> to choose from visited dirs.
%cd??            : See help AND source for magic %cd
%timeit x=10     : time the 'x=10' statement with high precision.
%%timeit x=2**100
x**100           : time 'x**100' with a setup of 'x=2**100'; setup code is not
                   counted.  This is an example of a cell magic.



The following magic functions are currently available:

%alias:
    Define an alias for a system command.
%alias_magic:
    ::
%autoawait:
    
%autocall:
    Make functions callable without having to type parentheses.
%autoindent:
    Toggle autoindent on/off (deprecated)
%automagic:
    Make magic functions callable without having to type the initial %.
%bookmark:
    Manage IPython's bookmark system.
%cat:
    Alias for `!cat`
%cd:
    Change the current working directory.
%clear:
    Alias for `!clear`
%colors:
    Switch color scheme for prompts, info system and exception handlers.



In [73]: %colors?                                                               
Docstring:
Switch color scheme for prompts, info system and exception handlers.

Currently implemented schemes: NoColor, Linux, LightBG.

Color scheme names are not case-sensitive.

Examples
--------
To get a plain black and white terminal::

  %colors nocolor
File:      /usr/lib/python3.9/site-packages/IPython/core/magics/basic.py





<p><a name="k04"></a></p>
<h2 id="k04">4. Volba způsobu ovládání IPythonu</h2>

<p>Interaktivní prostředí <i>IPythonu</i> je možné ovládat dvěma způsoby &ndash; buď se používají klávesové zkratky převzaté z&nbsp;velké části z&nbsp;Emacsu (tedy takové zkratky, které jsou výchozí i v&nbsp;BASHi), nebo se naopak mohou použít klávesové zkratky inspirované textovými editory Vi a Vim. Starší verze <i>IPythonu</i> byly založeny na knihovně <i>GNU Readline</i> (a rozhraní pro Python nazvané <strong>readline</strong>), o níž se více informací můžete dozvědět například přímo <a href="https://tiswww.case.edu/php/chet/readline/rltop.html">na stránkách této knihovny</a>. Tomu taktéž odpovídá použití souboru <strong>.inputrc</strong> s&nbsp;nastavením způsobu ovládání, který může v&nbsp;případě, že preferujete klávesové zkratky Vimu, vypadat následovně:</p>

<pre>
set editing-mode vi
set keymap vi-command
</pre>

<p>Ovšem naproti tomu nové verze <i>IPythonu</i> jsou postaveny na knihovně <i>Prompt Toolkit</i>, s&nbsp;níž jsme se již na stránkách Rootu seznámili v&nbsp;článcích [<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/">1</a>] [<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/">2</a>] [<a href="https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/">3</a>] a [<a href="https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/">4</a>]. Tato knihovna přináší nové možnosti, například zobrazení kontextových menu apod.</p>

$ ipython --TerminalInteractiveShell.editing_mode=vi



<p><a name="k05"></a></p>
<h2 id="k05">5. Standardní klávesové zkratky v&nbsp;režimu emulace Emacsu</h2>

<p>V&nbsp;této kapitole jsou vypsány vybrané klávesové zkratky, které jsou ve výchozím nastavení použity IPythonem při přepnutí do režimu Emacs.</p>

<h4>Příkazy pro přesuny kurzoru</h4>

<p>Základní příkazy pro přesun kurzoru používají kombinaci Ctrl+znak, Alt+znak popř.&nbsp;alternativně Esc, znak v&nbsp;případě, že zkratky Alt+znak kolidují s&nbsp;emulátorem terminálu (například vyvolávají příkazy z&nbsp;menu). Pokud je terminál správně nakonfigurován, měly by fungovat i kurzorové šipky a navíc i klávesy Home a End (se zřejmou funkcí):</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+B</td><td>přesun na předchozí znak</td></tr>
<tr><td>Ctrl+F</td><td>přesun na další znak</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Alt+B</td><td>přesun na předchozí slovo</td></tr>
<tr><td>Alt+F</td><td>přesun na další slovo</td></tr>
<tr><td>Esc, B</td><td>shodné s&nbsp;Alt+B</td></tr>
<tr><td>Esc, F</td><td>shodné s&nbsp;Alt+F</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Ctrl+A</td><td>přesun na začátek řádku</td></tr>
<tr><td>Ctrl+E</td><td>přesun na konec řádku</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: i když je například napsáno <strong>Ctrl+B</strong>, znamená to, že se klávesa <strong>B</strong> použije bez Shiftu.</div></p>

<h4>Mazání textu, práce s&nbsp;kill ringem</h4>

<p>Pro přesun části textu v&nbsp;rámci editovaného řádku se používá takzvaný kill ring, do něhož se smazaný text uloží. Pro vložení takto smazaného textu do jiné oblasti se používá operace nazvaná <i>yank</i> (odpovídá <i>paste</i>).  Některé dále uvedené příkazy dokážou s&nbsp;kill ringem pracovat:</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+K</td><td>smaže text od kurzoru do konce řádku a uloží ho do kill ringu</td></tr>
<tr><td>Ctrl+U</td><td>smaže text od začátku řádku do pozice kurzoru a uloží ho do kill ringu</td></tr>
<tr><td>Ctrl+W</td><td>smaže předchozí slovo a uloží ho do kill ringu</td></tr>
<tr><td>Alt+D</td><td>smaže následující slovo a uloží ho do kill ringu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Ctrl+Y</td><td>vloží text z&nbsp;kill ringu na místo, na němž se nachází kurzor (<i>yank</i>)</td></tr>
<tr><td>Alt+Y</td><td>po operaci Ctrl+Y dokáže <i>rotovat</i> historií kill ringu a obnovit tak (před)předchozí smazaný text</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Ctrl+D</td><td>smaže jeden znak (pokud je ovšem na řádku nějaký obsah, jinak typicky ukončí aplikaci)</td></tr>
</table>



<h4>Práce s&nbsp;historií dříve zadaných příkazů</h4>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+P</td><td>průchod historií &ndash; předchozí text</td></tr>
<tr><td>Ctrl+N</td><td>průchod historií &ndash; následující text</td></tr>
<tr><td>Ctrl+R</td><td>zpětné (interaktivní) vyhledávání v&nbsp;historii</td></tr>
<tr><td>Ctrl+G</td><td>ukončení režimu vyhledávání</td></tr>
</table>



<h4>Některé další dostupné příkazy</h4>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Tab</td><td>implicitní klávesa pro zavolání <i>completeru</i></td></tr>
<tr><td>Ctrl+T</td><td>prohození dvou znaků (před kurzorem a na pozici kurzoru)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Alt+U</td><td>text od pozice kurzoru do konce slova se změní NA VERZÁLKY</td></tr>
<tr><td>Alt+L</td><td>text od pozice kurzoru do konce slova se změní na mínusky</td></tr>
<tr><td>Alt+C</td><td>text od pozice kurzoru do konce slova se změní Tak, Že Slova Začínají Velkým Písmenem</td></tr>
</table>


<p><a name="k06"></a></p>
<h2 id="k06">6. Standardní klávesové zkratky v&nbsp;režimu emulace Vi/Vimu</h2>

<p><div class="rs-tip-major">Poznámka: ve výchozím nastavení se řádka nachází v&nbsp;režimu vkládání znaků (<i>insert mode</i>). Pro přepnutí do normálního režimu použijte Esc.</div></p>

<p>V&nbsp;režimu emulace editorů Vi/Vim je možné mj.&nbsp;použít i tyto klávesové zkratky:</p>

<h4>Příkazy pro přesuny kurzoru</h4>

<p>Tyto příkazy jsou platné pro normální režim a lze je zkombinovat s&nbsp;operátory (<i>delete</i>, <i>change</i>, <i>yank</i> atd.):</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>h</td><td>přechod na předchozí znak</td></tr>
<tr><td>l</td><td>přechod na další znak</td></tr>
<tr><td>b</td><td>skok (zpět) na první znak slova</td></tr>
<tr><td>e</td><td>skok na poslední znak slova</td></tr>
<tr><td>w</td><td>skok na první znak následujícího slova</td></tr>
<tr><td>0</td><td>skok na začátek řádku</td></tr>
<tr><td>$</td><td>skok na konec řádku</td></tr>
<tr><td>%</td><td>doskok na párovou závorku</td></tr>
<tr><td>f</td><td>skok na specifikovaný znak (<i>find</i>)</td></tr>
</table>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Vybrané &bdquo;konkurenční&ldquo; projekty</h2>

<p>První z&nbsp;těchto projektů se jmenuje <strong>bpython</strong> a nabízí uživatelům mj.&nbsp;i tyto možnosti, které v&nbsp;původním interpretru nenajdeme. Mezi tyto možnosti patří zejména:</p>

<ol>

<li>Zvýraznění syntaxe přímo při zápisu jednotlivých řádků, které se mají
interaktivně spustit. Pro tento účel se používá knihovna Pygments.</li>

<li>Plná podpora pro editaci prováděnou v&nbsp;rámci příkazového řádku založená
na běžných a často používaných zkratkách převzatých z&nbsp;Emacsu.</li>

<li>Automatické odsazení řádků, které se nachází uvnitř smyček, podmínek,
deklarací funkcí, deklarací tříd atd.</li>

<li>Možnost zápisu příkazů a deklarací v&nbsp;textovém editoru.</li>

<li>Zobrazení seznamu klíčových slov a funkcí začínajících již zapsaným
prefixem (v&nbsp;tomto případě bez nutnosti použití klávesové zkratky).</li>

<li>Automatické doplnění klíčového slova či funkce s&nbsp;využitím klávesy
<strong>Tab</strong> ze zobrazené nabídky.</li>

<li>Zobrazení nápovědy s&nbsp;parametry volané funkce nebo metody ihned po
zápisu otevírací závorky.</li>

<li>Samozřejmě je podporován i Python 3.x (což už by dnes měl být
standard).</li>

<li>Dále tento projekt nabízí možnost získat historii zapsaných příkazů a znovu
je zavolat popř.&nbsp;je nějakým způsobem modifikovat.</li>

<li>Užitečná je i další vlastnost &ndash; automatické poslání části zapsaného
kódu do služby typu &bdquo;pastebin&ldquo;, takže lze velmi snadno kód nasdílet
s&nbsp;kolegy (což samozřejmě nijak nenahrazuje plnohodnotný systém pro správu
verzí :-).</li>

<li>A samozřejmě je možné zapsaný a otestovaný kód uložit do souboru pro jeho
další znovupoužití.</li>
</ol>

<p>Příklad použití jednotlivých operací bude popsán v&nbsp;navazujících
kapitolách.</p>

<a href="https://www.root.cz/obrazek/359595/"><img src="https://i.iinfo.cz/images/143/python-interpreters-1-8-prev.png" class="image-359595" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 8: Takto vypadá základní uživatelské rozhraní projektu
<strong>bpython</strong>.</i></p>

<p>Druhý projekt, s&nbsp;nímž se v&nbsp;dnešním článku ve stručnosti seznámíme,
se jmenuje <strong>ptpython</strong>. Kromě toho, že jméno projektu začíná
iniciálami autora článku :-) se jedná o zajímavé a užitečné rozšíření možností
původního interpretru Pythonu o tyto vlastnosti:</p>

<ol>

<li>Ve spodní části terminálu je zobrazena stavová řádka, která kontextově mění
svůj obsah.</li>

<li>Podporováno je zvýrazňování syntaxe zapisovaných příkazů a deklarací. I
v&nbsp;tomto případě se pro tyto účely využívá knihovna Pygments.</li>

<li>Dále tento projekt používá knihovnu Jedi, která (mimo jiné) umožňuje
zobrazení kontextových menu s&nbsp;nabídkou metod pro zapsané jméno
objektu.</li>

<li>Stejná knihovna (Jedi) je použita pro doplnění klíčových slov, jmen funkcí,
názvů metod apod.</li>

<li>Ve výchozím nastavení je umožněna plnohodnotná editace příkazového řádku
s&nbsp;využitím klávesových zkratek odvozených od textového editoru Emacs (a
používaných v&nbsp;mnoha dalších shellech, například v&nbsp;BASHi, pokud ho
nepřepneme do jiného režimu).</li>

<li>V&nbsp;Emacs režimu se na stavové řádce zobrazují některé dostupné příkazy
(například při stisku <strong>Ctrl+Space</strong> pro práci
s&nbsp;výběrem).</li>

<li>Klávesovou zkratkou <strong>F4</strong> se můžeme prakticky kdykoli
přepnout do režimu emulujícího chování modálních editorů Vi a Vim. Podporovány
jsou prakticky všechny základní editační příkazy.</li>

<li>Podporován je i záznam maker s&nbsp;jejich pozdějším přehráváním.
V&nbsp;režimu Vi/Vim se záznam spustí zkratkou <strong>q_písmeno_</strong>,
přehrání makra pak zkratkou <strong>@_písmeno</strong>.</li>

<li>Existuje i speciální režim pro vkládání textu přes schránku a podpora pro
práci s&nbsp;myší (ovšem podle toho, zda terminál práci s&nbsp;myší
umožňuje).</li>

<li>Stiskem klávesy <strong>F2</strong> se zobrazí přehledný konfigurační
dialog.</li>

<li>Při vyhledávání v&nbsp;historii příkazů přes <strong>Ctrl+R</strong> se
zobrazí všechny nalezené shody.</li>

<li>Barvová schémata jsou konfigurovatelná.</li>

</ol>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Obsah druhé části článku</h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Domovská stránka projektu IPython<br />
<a href="https://ipython.org/">https://ipython.org/</a>
</li>

<li>IPython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IPython">https://en.wikipedia.org/wiki/IPython</a>
</li>

<li>Projekt IPython na PyPi<br />
<a href="https://pypi.org/project/ipython/">https://pypi.org/project/ipython/</a>
</li>

<li>Dokumentace k IPythonu<br />
<a href="http://ipython.org/documentation.html#">http://ipython.org/documentation.html#</a>
</li>

<li>IPython Documentation (na ReadTheDocs)<br />
<a href="https://ipython.readthedocs.io/en/stable/">https://ipython.readthedocs.io/en/stable/</a>
</li>

<li>IPython Tutorial<br />
<a href="http://ipython.readthedocs.org/en/stable/interactive/tutorial.html">http://ipython.readthedocs.org/en/stable/interactive/tutorial.html</a>
</li>

<li>IPython Tips &amp; Tricks<br />
<a href="https://ipython.readthedocs.io/en/stable/interactive/tips.html">https://ipython.readthedocs.io/en/stable/interactive/tips.html</a>
</li>

<li>IPython cookbook<br />
<a href="https://github.com/ipython/ipython/wiki?path=Cookbook">https://github.com/ipython/ipython/wiki?path=Cookbook</a>
</li>

<li>Cookbook: Index<br />
<a href="https://github.com/ipython/ipython/wiki/Cookbook%3A-Index">https://github.com/ipython/ipython/wiki/Cookbook%3A-Index</a>
</li>

<li>Projects using IPython<br />
<a href="https://github.com/ipython/ipython/wiki/Projects-using-IPython">https://github.com/ipython/ipython/wiki/Projects-using-IPython</a>
</li>

<li>Sebastian Witowski - Wait, IPython can do that?!<br />
<a href="https://www.youtube.com/watch?v=3i6db5zX3Rw">https://www.youtube.com/watch?v=3i6db5zX3Rw</a>
</li>

<li>vim-ipython<br />
<a href="https://github.com/ivanov/vim-ipython">https://github.com/ivanov/vim-ipython</a>
</li>

<li>IPython Frequently asked questions<br />
<a href="https://github.com/ipython/ipython/wiki/Frequently-asked-questions">https://github.com/ipython/ipython/wiki/Frequently-asked-questions</a>
</li>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>Read-eval-print loop (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop</a>
</li>

<li>Domovská stránka programovacího jazyka Python<br />
<a href="https://www.python.org/">https://www.python.org/</a>
</li>

<li>Domovská stránka projektu bpython<br />
<a href="https://bpython-interpreter.org/">https://bpython-interpreter.org/</a>
</li>

<li>Projekt bpython na PyPi<br />
<a href="https://pypi.org/project/bpython/">https://pypi.org/project/bpython/</a>
</li>

<li>Git repositář projektu bpython<br />
<a href="https://github.com/bpython/bpython">https://github.com/bpython/bpython</a>
</li>

<li>Projekt ptpython na PyPi<br />
<a href="https://pypi.org/project/ptpython/">https://pypi.org/project/ptpython/</a>
</li>

<li>Git repositář projektu ptpython<br />
<a href="https://github.com/prompt-toolkit/ptpython">https://github.com/prompt-toolkit/ptpython</a>
</li>

<li>Domovská stránka projektu DreamPie<br />
<a href="http://www.dreampie.org/">http://www.dreampie.org/</a>
</li>

<li>Projekt DreamPie na PyPi<br />
<a href="https://pypi.org/project/dreampie/">https://pypi.org/project/dreampie/</a>
</li>

<li>Git repositář projektu DreamPie<br />
<a href="https://github.com/noamraph/dreampie">https://github.com/noamraph/dreampie</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: praktické použití IPython Notebooku a knihovny Numpy<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: praktické použití IPython Notebooku a knihovny Numpy (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy-2-cast/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/</a>
</li>

<li>Is IPython Notebook ever used as an IDE, or merely for presentations?<br />
<a href="https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/">https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/</a>
</li>

<li>The IDE as a Bad Programming Language Enabler <br />
<a href="https://dzone.com/articles/ide-bad-programming-language">https://dzone.com/articles/ide-bad-programming-language</a>
</li>

<li>Enhanced Interactive Python with IPython<br />
<a href="http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html">http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html</a>
</li>

<li>Příkazový řádek – přítel nejvěrnější<br />
<a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi/">https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi/</a>
</li>

<li>Příkazový řádek - přítel nejvěrnější (2)<br />
<a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/">https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/</a>
</li>

<li>Picking a Python Interpreter (3 vs 2)<br />
<a href="https://docs.python-guide.org/starting/which-python/">https://docs.python-guide.org/starting/which-python/</a>
</li>

<li>Využití knihovny Pygments (nejenom) pro obarvení zdrojových kódů<br />
<a href="https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu/">https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu/</a>
</li>

<li>Využití knihovny Pygments (nejenom) pro obarvení zdrojových kódů: vlastní filtry a lexery<br />
<a href="https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu-vlastni-filtry-a-lexery/">https://www.root.cz/clanky/vyuziti-knihovny-pygments-nejenom-pro-obarveni-zdrojovych-kodu-vlastni-filtry-a-lexery/</a>
</li>

<li>Knihovna Jedi: doplňování kódu a statická analýza kódu v Pythonu<br />
<a href="https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu/">https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu/</a>
</li>

<li>Knihovna Jedi: doplňování kódu a statická analýza kódu v Pythonu (dokončení)<br />
<a href="https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu-dokonceni/">https://www.root.cz/clanky/knihovna-jedi-doplnovani-kodu-a-staticka-analyza-kodu-v-pythonu-dokonceni/</a>
</li>

<li>Pygments – Python syntax highlighter<br />
<a href="http://pygments.org/">http://pygments.org/</a>
</li>

<li>Pygments (dokumentace)<br />
<a href="http://pygments.org/docs/">http://pygments.org/docs/</a>
</li>

<li>Write your own lexer<br />
<a href="http://pygments.org/docs/le­xerdevelopment/">http://pygments.org/docs/le­xerdevelopment/</a>
</li>

<li>Jazyky podporované knihovnou Pygments<br />
<a href="http://pygments.org/languages/">http://pygments.org/languages/</a>
</li>

<li>Pygments FAQ<br />
<a href="http://pygments.org/faq/">http://pygments.org/faq/</a>
</li>

<li>Pygments 2.2.0 (na PyPi)<br />
<a href="https://pypi.org/project/Pygments/">https://pypi.org/project/Pygments/</a>
</li>

<li>Syntax highlighting<br />
<a href="https://en.wikipedia.org/wi­ki/Syntax_highlighting">https://en.wikipedia.org/wi­ki/Syntax_highlighting</a>
</li>

<li>Jedi – an awesome autocompletion/static analysis library for Python<br />
<a href="https://jedi.readthedocs.i­o/en/latest/index.html">https://jedi.readthedocs.i­o/en/latest/index.html</a>
</li>

<li>Jedi API Overview<br />
<a href="https://jedi.readthedocs.i­o/en/latest/docs/api.html">https://jedi.readthedocs.i­o/en/latest/docs/api.html</a>
</li>

<li>jedi-vim<br />
<a href="https://github.com/davidhalter/jedi-vim">https://github.com/davidhalter/jedi-vim</a>
</li>

<li>Tvorba textového rozhraní s knihovnou prompt_toolkit: základní prvky TUI<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/">https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/</a>
</li>

<li>Tvorba TUI s knihovnou prompt_toolkit: aplikace s celoobrazovkovým rozhraním<br />
<a href="https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/">https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/</a>
</li>

<li>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-uzivatelskeho-rozhrani-s-knihovnou-prompt-toolkit-ovladaci-prvky-widgety/">https://www.root.cz/clanky/tvorba-textoveho-uzivatelskeho-rozhrani-s-knihovnou-prompt-toolkit-ovladaci-prvky-widgety/</a>
</li>

<li>ØMQ: knihovna pro asynchronní předávání zpráv<br />
<a href="https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/">https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/</a>
</li>

<li>Další možnosti poskytované knihovnou ØMQ<br />
<a href="https://www.root.cz/clanky/dalsi-moznosti-poskytovane-knihovnou-mq/">https://www.root.cz/clanky/dalsi-moznosti-poskytovane-knihovnou-mq/</a>
</li>

<li>What is the difference between Jupyter and IPython Notebook?<br />
<a href="https://www.quora.com/What-is-the-difference-between-Jupyter-and-IPython-Notebook">https://www.quora.com/What-is-the-difference-between-Jupyter-and-IPython-Notebook</a>
</li>

<li>Jupyter kernels<br />
<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a>
</li>

<li>Keyboard Shortcuts in the IPython Shell<br />
<a href="https://jakevdp.github.io/PythonDataScienceHandbook/01.02-shell-keyboard-shortcuts.html">https://jakevdp.github.io/PythonDataScienceHandbook/01.02-shell-keyboard-shortcuts.html</a>
</li>

<li>New terminal interface<br />
<a href="https://ipython.readthedocs.io/en/stable/whatsnew/version5.html#new-terminal-interface">https://ipython.readthedocs.io/en/stable/whatsnew/version5.html#new-terminal-interface</a>
</li>

<li>prompt-toolkit<br />
<a href="https://python-prompt-toolkit.readthedocs.io/en/stable/">https://python-prompt-toolkit.readthedocs.io/en/stable/</a>
</li>

<li>Tvorba aplikací s&nbsp;příkazovým řádkem v&nbsp;Pythonu s&nbsp;knihovnami GNU Readline a prompt_toolkit<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/">https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/</a>
</li>

<li>Tvorba aplikací s&nbsp;textovým uživatelským rozhraním založeným na knihovně prompt_toolkit<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/">https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/</a>
</li>

<li>Tvorba textového rozhraní s&nbsp;knihovnou prompt_toolkit: základní prvky TUI<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/">https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/</a>
</li>

<li>Tvorba TUI s&nbsp;knihovnou prompt_toolkit: aplikace s&nbsp;celoobrazovkovým rozhraním<br />
<a href="https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/">https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

