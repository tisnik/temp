<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba aplikací a her s textovým uživatelským rozhraním s využitím knihovny Blessed</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba aplikací a her s textovým uživatelským rozhraním s využitím knihovny Blessed</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>I přes převahu aplikací s grafickým uživatelským rozhraním (dnes mnohdy postavených na webových technologiích) stále vznikají aplikace používající pro komunikaci s uživatelem starý dobrý terminál. Dnes se seznámíme s knihovnou Blessed, která takové aplikace umožňuje tvořit v Pythonu.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Tvorba aplikací a her s&nbsp;textovým uživatelským rozhraním s&nbsp;využitím knihovny Blessed</a></p>
<p><a href="#k02">2. Knihovny pro ovládání textového terminálu</a></p>
<p><a href="#k03">3. Knihovna Blessed se představuje</a></p>
<p><a href="#k04">4. Instalace knihovny Blessed</a></p>
<p><a href="#k05">5. Přečtení základních informací o terminálu</a></p>
<p><a href="#k06">6. Vymazání vybrané logické části plochy terminálu</a></p>
<p><a href="#k07">7. Změna stylu vypsaných textů</a></p>
<p><a href="#k08">8. Změna barvy textu (popředí)</a></p>
<p><a href="#k09">*** 9. Změna barvy pozadí</a></p>
<p><a href="#k10">*** 10. Kombinace různých barev popředí (textů) a pozadí</a></p>
<p><a href="#k11">*** 11. 24bitové barvy v&nbsp;moderních emulátorech terminálu</a></p>
<p><a href="#k12">*** 12. 24bitové barvy na pozadí textu</a></p>
<p><a href="#k13">*** 13. Pojmenované barvy na popředí</a></p>
<p><a href="#k14">*** 14. Pojmenované barvy na pozadí</a></p>
<p><a href="#k15">15. Zobrazení hypertextového odkazu</a></p>
<p><a href="#k16">16. Obsah druhé (závěrečné) části článku</a></p>
<p><a href="#k17">17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">18. Články o tvorbě aplikací s&nbsp;grafickým uživatelským rozhraním</a></p>
<p><a href="#k19">19. Články o tvorbě aplikací s&nbsp;textovým uživatelským rozhraním</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba aplikací a her s&nbsp;textovým uživatelským rozhraním s&nbsp;využitím knihovny Blessed</h2>

<p>Již mnohokrát jsme se na stránkách <a href="https://www.root.cz">Roota</a>
zabývali problematikou tvorby aplikací s&nbsp;plnohodnotným grafickým
uživatelským rozhraním &ndash; viz též <a href="#k18">osmnáctou kapitolu
s&nbsp;příslušnými odkazy</a>, které se konkrétně týkají článků o grafickém
uživatelském rozhraní v&nbsp;Pythonu. Ovšem existuje relativně velké množství
aplikací popř.&nbsp;nástrojů či her, pro které může být vhodnější použít
terminál resp.&nbsp;konzoli. Příkladem jsou aplikace, k&nbsp;nimž se přistupuje
přes SSH, systémové nástroje apod. Takové aplikace dělíme do dvou skupin. Do
první skupiny spadají interaktivně či neinteraktivně ovládané aplikace
s&nbsp;příkazovým řádkem. Příkladem takových aplikací mohou být správci balíčků
(dnf, apt-get), které s&nbsp;uživatelem interagují pouze několika otázkami typu
Y/N. Dalším příkladem je nástroj <strong>fdisk</strong> se složitějším systémem
menu, z&nbsp;nichž se položka vybírá svým jménem (a nikoli například pohybem
kurzoru).</p>

<img src="https://i.iinfo.cz/images/536/ipython1-1-1.png" class="image-443462" alt="dnf" width="644" height="429">
<p><i>Obrázek 1: Mnoho aplikací sice využívá rozšířených možností textových
terminálů, ovšem stále se jedná spíše o neinteraktivní nástroje bez
celoobrazovkového přístupu k&nbsp;terminálu. Příkladem je příkaz
<strong>dnf</strong>, který může v&nbsp;některých případech zobrazit
jednoduchou otázku a očekávat odpověď.</i></p>

<p>A do druhé skupiny aplikací určených pro běh v&nbsp;terminálu můžeme zařadit
aplikace s&nbsp;plnohodnotným textovým uživatelským rozhraním neboli <i>TUI
(Text User Interface)</i>. Takových aplikací existuje celá řada. Zmínit můžeme
zejména celoobrazovkové textové editory (pochopitelně včetně <a
href="https://www.root.cz/n/vim/">Vimu</a> a <a
href="https://www.root.cz/n/emacs/">Emacsu</a>), Midnight Commander, nástroj
Aptitude, ale i některé hry používající celoobrazovkový textový režim (<a
href="https://github.com/hackndev/0verkill">0verkill</a>, <a
href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-61-cast-angband-adom-doomrl-a-dalsi-zname-roguelike-hry/#k02">Rogue</a>,
<a href="https://www.root.cz/clanky/nethack/">Nethack</a>, <a
href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-61-cast-angband-adom-doomrl-a-dalsi-zname-roguelike-hry/#k05">Angband</a>,
<a
href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-61-cast-angband-adom-doomrl-a-dalsi-zname-roguelike-hry/#k06">DoomRL</a>
atd.).</p>

<a href="https://www.root.cz/obrazek/116575/"><img src="https://i.iinfo.cz/images/377/games-61-30-prev.png" alt="DoomRL" height="232" width="370"></a>
<p><i>Obrázek 2: DoomRL – úvodní ASCII art je takřka dokonalý.</i></p>

<p>Textové uživatelské rozhraní je u některých aplikací volitelné. Dobrým
příkladem takového typu aplikace je GNU Debugger, který buď pracuje
v&nbsp;režimu příkazového řádku, nebo ho lze přepnout do režimu
s&nbsp;celoobrazovkovým textovým uživatelským rozhraním. I o tvorbě těchto
aplikací jsme se ve stručnosti již zmínili v&nbsp;souvislosti s&nbsp;balíčky
<strong>GNU Readline</strong> a především <strong>prompt_toolkit</strong>.
Odkazy na tyto články jsou obsahem <a href="#k19">devatenácté kapitoly</a>.</p>

<img src="https://i.iinfo.cz/images/338/go-debugging-8.png" class="image-360855" alt="gnu gdb" height="381" width="566">
<p><i>Obrázek 3: GNU Debugger po zobrazení textového uživatelského rozhraní
(TUI) ve chvíli, kdy je nastaven breakpoint na vstupní bod (přesněji řečeno na
první příkaz) ve funkci <strong>main</strong>. Na levém okraji se zobrazují jak
breakpointy, tak i ukazatel na právě prováděný či krokovaný příkaz.</i></p>

<p><div class="rs-tip-major">Poznámka: termín &bdquo;celoobrazovkový&ldquo;
nemá v&nbsp;kontextu dnešního článku takový význam, že by plocha aplikace
pokryla celou plochu monitoru (jako například při přehrávání videa), ale že
využije plochu terminálu. U reálných terminálů se skutečně jedná o celou
obrazovku, ovšem dnes se naprostá většina uživatelů setká pouze
s&nbsp;emulátorem terminálu, který sám může být zobrazen v&nbsp;oknu a neběží
tedy (striktně řečeno) na celé obrazovce (ovšem i tohoto efektu je možné
v&nbsp;případě potřeby dosáhnout).</div></p>

<a href="https://www.root.cz/obrazek/116568/"><img src="https://i.iinfo.cz/images/377/games-61-23-prev.png" alt="Angband" height="232" width="370"></a>
<p><i>Obrázek 4: Hra Angband s&nbsp;textovým uživatelským rozhraním ve verzi
pro Linux – podrobnější charakteristiky hrdiny.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Knihovny pro ovládání textového terminálu</h2>

<p>U obou dvou výše zmíněných typů aplikací je nutné umět do určité míry
ovládat terminálový výstup, aby například bylo možné smazat znak/řádek,
zvýraznit text změnou jeho stylu, barvy textu, barvy pozadí atd. A u aplikací
s&nbsp;plnohodnotným textovým uživatelským rozhraním je pochopitelně nutné
terminál ovládat do ještě větší míry, aby bylo možné pracovat s&nbsp;okny,
menu, nápovědou a dalšími ovládacími prvky (<i>widgety</i>). Vzhledem
k&nbsp;tomu, že se textové terminály vyvíjejí už velmi dlouho (minimálně od
roku 1965, kdy vznikl první skutečný počítačový terminál <i>IBM 2741</i> jako
náhrada za dálnopisy) jsou rozdílné i jejich možnosti (vlastnosti) i způsob
jejich ovládání (většinou s&nbsp;využitím řídicích kódů, dnes většinou
založených na takzvaných <i>escape sekvencích</i> a několika dalších ASCII
znacích).</p>

<a href="https://i.iinfo.cz/images/357/ibm-4-1.jpg"><img src="https://i.iinfo.cz/images/357/ibm-4-1-prev.jpg" alt="ibm-4" width="370" height="264"></a>
<p><i>Obrázek 5: Část sálového počítače IBM System/360 Model 40 (rok výroby
1964). V pozadí můžeme vidět jednotky s magnetickými pásky (model IBM 2401),
ovládací panel je umístěn přímo za slečnou. A slečna sedí u dálnopisu, tedy
přímého předchůdce počítačových terminálů.</i></p>

<p>Samozřejmě jsme mohli v&nbsp;průběhu předchozích desetiletí vidět snahu o
sjednocení ovládání terminálů, která probíhala paralelně s&nbsp;vytvářením
databáze obsahující vlastnosti terminálů (<i>terminfo</i> a <i>termcap</i>).
Existují také knihovny, které programátora dokážou odizolovat od
nízkoúrovňového přístupu k&nbsp;terminálům a jejich řízení s&nbsp;využitím
řídicích kódů. Jedná se především o knihovnu <i>curses</i> a jejího
následovníka <i>ncurses</i> (viz článek <a
href="https://www.root.cz/clanky/psani-aplikaci-pro-terminal-jak-funguje-knihovna-ncurses/">Psaní
aplikací pro terminál: jak funguje knihovna ncurses</a>, popř.&nbsp;o utility
spouštěné z&nbsp;příkazového řádku (<strong>tput</strong>,
<strong>tset</strong>, <strong>reset</strong> atd.).</p>

<a href="https://i.iinfo.cz/images/283/midnight-commander-2.png"><img src="https://i.iinfo.cz/images/283/midnight-commander-2-prev.png" alt="mc" height="223" width="370"></a>
<p><i>Obrázek 6: Midnight Commander je jedním z&nbsp;užitečných nástrojů
postavených nad ncurses.</i></p>

<p>V&nbsp;dnešním článku se však zaměříme na popis jiné knihovny
resp.&nbsp;přesněji řečeno balíčku. Jedná se o knihovnu nazvanou
<i>Blessed</i>, která je určena pro použití v&nbsp;aplikacích naprogramovaných
v&nbsp;jazyku <a href="https://www.root.cz/n/python/">Python</a>. Tato
knihovna, a to včetně jejího jména, je inspirována knihovnou <a
href="https://github.com/chjj/blessed">Blessed určenou pro programovací jazyk
JavaScript</a>, jejíž zaměření je ovšem poněkud odlišné, neboť JavaScriptová
verze obsahuje velké množství ovládacích prvků, formulářů atd., dále
rozšířených v&nbsp;knihovně <a
href="https://github.com/yaronn/blessed-contrib">Blessed-contrib</a>. Ovšem
podobných knihoven, více či méně inspirovaných právě knihovnou Blessed,
postupně vzniklo větší množství.</p>

<a href="https://www.root.cz/obrazek/447796/"><img src="https://i.iinfo.cz/images/428/blessed1-1-prev.png" class="image-447796" alt="&#160;" width="370" height="208" /></a>
<p><i>Obrázek 7: Ovládací prvky vykreslené s&nbsp;využitím knihovny
Blessed-contrib (JavaScript).<br />
Zdroj: <a href="https://github.com/yaronn/blessed-contrib">https://github.com/yaronn/blessed-contrib</a>.</i></p>

<p>Za připomenutí stojí především knihovna <a
href="https://github.com/gizak/termui">termui</a> určená pro použití
v&nbsp;aplikacích <a
href="https://www.root.cz/serialy/programovaci-jazyk-go/">naprogramovaných
v&nbsp;jazyce Go</a>, popř.&nbsp;knihovna <a
href="https://github.com/fdehau/tui-rs">tui-rs</a>, která je naopak určena pro
aplikace vyvinuté <a
href="https://www.root.cz/serialy/programovaci-jazyk-rust/">v&nbsp;programovacím
jazyku Rust</a>. Tyto knihovny poskytují zejména možnost posunu textového
kurzoru po ploše terminálu, mazání a přidávání textu na určenou pozici, změnu
stylu vykreslování popř.&nbsp;změnu barvy pozadí a popředí, ale i pokročilejší
operace s&nbsp;textovými plochami (okny), tvorbu animovaných prvků apod.</p>

<a href="https://www.root.cz/obrazek/447797/"><img src="https://i.iinfo.cz/images/428/blessed1-2-prev.gif" class="image-447797" alt="&#160;" width="370" height="214" /></a>
<p><i>Obrázek 8: Ovládací prvky vykreslené knihovnou <strong>tui-rs</strong>.<br />
Zdroj: <a href="https://github.com/fdehau/tui-rs">https://github.com/fdehau/tui-rs</a>.</i></p>

<p>Dnes si ukážeme pouze základní možnosti poskytované knihovnou <i>Blessed</i>
pro Python. Pokročilejšími operacemi se budeme zabývat ve druhém (a současně i
závěrečném) pokračování dnešního článku.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Knihovna Blessed se představuje</h2>

<p>V&nbsp;dalším textu se budeme zabývat knihovnou <i>Blessed</i> určenou pro
jazyk Python. Tato knihovna je jak svým rozsahem funkcí, tak i zaměřením
odlišná od knihovny se stejným jménem; která je ovšem navržena pro použití
z&nbsp;JavaScriptu, TypeScriptu či z&nbsp;dalších jazyků <i>transpilovaných</i>
do JavaScriptu. Na rozdíl od knihoven zmíněných <a href="#k02">v&nbsp;předchozí
kapitole</a> je Blessed pro Python z&nbsp;pohledu uživatele pojata
minimalistickým způsobem. Umožňuje totiž změnu stylu a barvy vypisovaných textů
(což je vhodné i pro aplikace nepoužívající celoobrazovkové TUI), vymazání
části plochy terminálu, přesun kurzoru na libovolné místo v&nbsp;terminálu a
v&nbsp;neposlední řadě taktéž okamžitou reakci na stisk kláves (na rozdíl od
čekání na Enter) popř.&nbsp;reakci na změnu velikosti okna terminálu. Kromě
toho je možné zachytávat proud bajtů posílaných na standardní výstup. Většina
těchto vlastností vyžaduje relativně složitou interní logiku, ovšem pro
uživatele-programátora je použití těchto funkcí přímočaré.</p>

<p>Blessed lze použít například pro vývoj her či dalších aplikací, které
potřebují &bdquo;vykreslit&ldquo; nějaké grafy či diagramy. Naopak pokud pouze
vyžadujete tvorbu TUI se standardními ovládacími prvky, může být výhodnější
použít knihovnu <strong>prompt_toolkit</strong> &ndash; viz též <a
href="#k19">kapitolu číslo 19</a>.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Instalace knihovny Blessed</h2>

<p>Instalace knihovny <i>Blessed</i> je snadná, protože tato knihovna je
dostupná ve formě balíčku poskytovaného přes <a
href="https://pypi.org/project/blessed/">PyPi</a>. Pro její instalaci tedy
použijeme příkaz <strong>pip</strong> resp.&nbsp;<strong>pip3</strong>, a to
podle toho, jaké verze Pythonu jsou na systému nainstalovány a jaká verze je
vybrána jako výchozí (instalaci je však pochopitelně možné provést i
z&nbsp;virtuálního prostředí Pythonu):</p>

<pre>
$ <strong>pip3 install --user blessed</strong>
&nbsp;
Collecting blessed
  Downloading https://files.pythonhosted.org/packages/26/35/a781470488a304f66843d328052b6cb22df7163246fb47a27bfb21fba4e6/blessed-1.18.0-py2.py3-none-any.whl (81kB)
    100% |████████████████████████████████| 81kB 778kB/s 
Requirement already satisfied: six&gt;=1.9.0 in ./.local/lib/python3.6/site-packages (from blessed)
Requirement already satisfied: wcwidth&gt;=0.1.4 in ./.local/lib/python3.6/site-packages (from blessed)
Installing collected packages: blessed
Successfully installed blessed-1.18.0
</pre>

<p>Následně z&nbsp;interaktivní smyčky Pythonu ověříme, že nový balíček je
skutečně dostupný. Spustíme REPL Pythonu:</p>

<pre>
$ <strong>python3</strong>
Python 3.9.4 (default, Apr  6 2021, 00:00:00)
[GCC 11.0.1 20210324 (Red Hat 11.0.1-0)] on linux
Type "help", "copyright", "credits" or "license" for more information.
Type "help", "copyright", "credits" or "license" for more information.
&nbsp;
&gt;&gt;&gt;
</pre>

<p>Naimportujeme balíček nazvaný <strong>blessed</strong>:</p>

<pre>
&gt;&gt;&gt; <strong>import blessed</strong>
</pre>

<p>Pokud při importu nedošlo k&nbsp;chybě, měla by být dostupná nápověda:</p>

<pre>
&gt;&gt;&gt; <strong>help(blessed)</strong>
&nbsp;
Help on package blessed:
&nbsp;
NAME
    blessed - A thin, practical wrapper around terminal capabilities in Python.
&nbsp;
DESCRIPTION
    http://pypi.python.org/pypi/blessed
&nbsp;
PACKAGE CONTENTS
    _capabilities
    color
    colorspace
    formatters
    keyboard
    sequences
    terminal
    tests (package)
    win_terminal
</pre>

<p>Nejdůležitější třídou z&nbsp;tohoto balíčku je třída <strong>Terminal</strong>:</p>

<pre>
&gt;&gt;&gt; <strong>help(blessed.Terminal)</strong>
&nbsp;
Help on class Terminal in module blessed.terminal:
&nbsp;
class Terminal(builtins.object)
 |  An abstraction for color, style, positioning, and input in the terminal.
 |  
 |  This keeps the endless calls to ``tigetstr()`` and ``tparm()`` out of your code, acts
 |  intelligently when somebody pipes your output to a non-terminal, and abstracts over the
 |  complexity of unbuffered keyboard input. It uses the terminfo database to remain portable across
 |  terminal types.
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Přečtení základních informací o terminálu</h2>

<p>V&nbsp;praktické části článku si ukážeme některé možnosti použití knihovny
Blessed. Nejprve získáme základní informace o použitém terminálu, a to
přístupem k&nbsp;atributům <strong>width</strong>, <strong>height</strong> a
<strong>number_of_colors</strong>:</p>

<pre>
import blessed
&nbsp;
terminal = <u>blessed.Terminal()</u>
&nbsp;
print("Resolution: {}x{} characters".format(<u>terminal.width</u>, <u>terminal.height</u>))
print("Number of colors: {}".format(<u>terminal.number_of_colors</u>))
</pre>

<p>Příklad výstupu pro <strong>xterm</strong>:</p>

<pre>
$ <strong>python3 terminal_info.py </strong>
&nbsp;
Resolution: 159x42 characters
Number of colors: 8
</pre>

<p><div class="rs-tip-major">Poznámka: rozměry terminálu se mohou i po spuštění
aplikace měnit, na což lze reagovat poněkud jiným způsobem, než je zde ukázáno.
A navíc hlášený počet podporovaných barev není ve skutečnosti u některých
terminálů korektní, neboť většině moderních emulací terminálu je možné
&bdquo;vnutit&ldquo; i větší počet barev (typicky <i>true color</i>, tedy
2<sup>24</sup> barev). Ukázka bude uvedena v&nbsp;navazujících
kapitolách.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vymazání vybrané logické části plochy terminálu</h2>

<p>Knihovna <i>Blessed</i> obsahuje podporu pro čtveřici řídicích kódů, které
slouží pro smazání určité vybrané plochy terminálu (resp.&nbsp;textu na této
ploše). Tyto řídicí kódy jsou dostupné pod jmény <strong>clear</strong>,
<strong>clear_eol</strong>, <strong>clear_bol</strong> a
<strong>clear_eos</strong>:</p>

<table>
<tr><th>#</th><th>Atribut</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>clear</td><td>smazání celé plochy terminálu</td></tr>
<tr><td>2</td><td>clear_eol</td><td>smazání od pozice kurzoru do konce řádku</td></tr>
<tr><td>3</td><td>clear_bol</td><td>smazání od pozice kurzoru na začátek řádku</td></tr>
<tr><td>4</td><td>clear_eos</td><td>smazání od pozice kurzoru do konce obrazovky</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: skutečně se jedná o operaci smazání
&ndash; smazaný text je ztracen, není uložen do schránky.</div></p>

<p>Pravděpodobně nejčastěji se setkáme s&nbsp;požadavkem smazání celé
obrazovky, přesněji řečeno celé plochy terminálu. To je triviální úloha:</p>

<pre>
import blessed
&nbsp;
terminal = <u>blessed.Terminal()</u>
&nbsp;
print(<u>terminal.clear</u>)
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Změna stylu vypsaných textů</h2>

<p>Po inicializaci objektu typu <strong>Terminal</strong> je možné měnit styl
textů vypisovaných aplikací funkcí <strong>print</strong> či podobnými
funkcemi. K&nbsp;tomuto účelu slouží několik atributů objektu
<strong>Terminal</strong>:</p>

<table>
<tr><th>#</th><th>Atribut</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>normal</td><td>text s&nbsp;výchozím (běžným) stylem</td></tr>
<tr><td>2</td><td>bold</td><td>tučný text popř.&nbsp;změna kontrastu</td></tr>
<tr><td>3</td><td>reverse</td><td>záměna barvy popředí a pozadí</td></tr>
<tr><td>4</td><td>underline</td><td>podtržený text</td></tr>
<tr><td>5</td><td>no_underline</td><td>opak předchozího atributu</td></tr>
</table>

<p>Interně se jedná o řídicí kódy terminálu, takže tyto atributy můžeme použít
například ve funkci <strong>print</strong> (v&nbsp;Pythonu 2 ve stejnojmenném
příkazu):</p>

<pre>
import blessed
&nbsp;
terminal = <u>blessed.Terminal()</u>
&nbsp;
print(<u>terminal.normal</u> + "normal text")
print(<u>terminal.bold</u> + "bold text" + <u>terminal.normal</u>)
print(<u>terminal.underline</u> + "underlined text" + <u>terminal.normal</u>)
print(<u>terminal.reverse</u> + "reversed text" + <u>terminal.normal</u>)
print()
&nbsp;
print(<u>terminal.bold</u> + "bold " + <u>terminal.underline</u> + "and underlined " + <u>terminal.normal</u> + "text")
print()
&nbsp;
print(<u>terminal.underline</u> + "underlined " + <u>terminal.reverse</u> + "and reversed " + <u>terminal.normal</u> + "text")
print()
&nbsp;
print(<u>terminal.reverse</u> + "reversed " + <u>terminal.bold</u> + "and bold " + <u>terminal.normal</u> + "text")
</pre>

<p>Výsledek (pro nakonfigurovaný <strong>xterm</strong>):</p>

<a href="https://www.root.cz/obrazek/447798/"><img src="https://i.iinfo.cz/images/428/blessed1-3-prev.png" class="image-447798" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 9: Základní styly vykreslení textů.</i></p>

<p>Výhodnější je však použití takzvaných f-řetězců, které nás odstíní od
nutnosti volat metodu <strong>format</strong> nebo spojovat jednotlivé řídicí
kódy s&nbsp;vlastním vypisovaným textem (pokud používáte novější verzi
Pythonu):</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(f"{<u>terminal.normal</u>}normal text{<u>terminal.normal</u>}")
print(f"{<u>terminal.bold</u>}bold text{<u>terminal.normal</u>}")
print(f"{<u>terminal.underline</u>}underlined text{<u>terminal.normal</u>}")
print(f"{<u>terminal.reverse</u>}reversed text{<u>terminal.normal</u>}")
print()
&nbsp;
print(f"{<u>terminal.bold</u>}bold{<u>terminal.underline</u>} and underlined{<u>terminal.normal</u>} text")
print()
&nbsp;
print(f"{<u>terminal.underline</u>}underlined {<u>terminal.reverse</u>}and reversed{<u>terminal.normal</u>} text")
print()
&nbsp;
print(f"{<u>terminal.reverse</u>}reversed {<u>terminal.bold</u>}and bold{<u>terminal.normal</u>} text")
</pre>

<p>Výsledek by měl být totožný s&nbsp;předchozím příkladem:</p>

<a href="https://www.root.cz/obrazek/447799/"><img src="https://i.iinfo.cz/images/428/blessed1-4-prev.png" class="image-447799" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 10: Základní styly vykreslení textů vykreslené předchozím
příkladem.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Změna barvy textu (popředí)</h2>

<p>Prakticky všechny moderní terminály umožňují i změnu barvy vypisovaného
textu. Na úrovni komunikace s&nbsp;terminálem se barvy mění posláním
příslušného řídicího kódu (dnes nejčastěji <i>escape sekvence</i>), ovšem
knihovna <i>Blessed</i> nás od těchto technických podrobností odstiňuje a
umožňuje nám použít přímo atributy se jmény barev, které mohou být vytištěny
například standardní funkcí <strong>print</strong>. Terminály, resp.&nbsp;dnes
v&nbsp;naprosté většině případů emulátory terminálů, podporují různé počty
barev &ndash; ty nejjednodušší a nejstarší pouze osm barev (buď pevně
nastavených, nebo s&nbsp;volitelnou paletou), setkáme se i se šestnácti barvami
(osm základních barev + jejich světlejší varianty), 256 barvami a moderní
terminály od roku 2016 podporují i <i>true color</i> neboli 2<sup>24</sup>
barvových odstínů.</p>

<p>Nejdříve si ukažme osm základních barev, které mají svá jména a dají se
vybrat následovně:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(f"{terminal.black}black text{terminal.normal}")
print(f"{terminal.red}red text{terminal.normal}")
print(f"{terminal.green}green text{terminal.normal}")
print(f"{terminal.yellow}yellow text{terminal.normal}")
print(f"{terminal.blue}blue text{terminal.normal}")
print(f"{terminal.magenta}magenta text{terminal.normal}")
print(f"{terminal.cyan}cyan text{terminal.normal}")
print(f"{terminal.white}white text{terminal.normal}")
</pre>

<p>Podívejme se nyní na výsledek běhu tohoto příkladu:</p>

<a href="https://www.root.cz/obrazek/447800/"><img src="https://i.iinfo.cz/images/428/blessed1-5-prev.png" class="image-447800" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 11: Osm základních barev textu.</i></p>

<p><div class="rs-tip-major">Poznámka: mnohé emulátory terminálů dokážou tyto
<i>logické</i> barvy namapovat na barvy fyzické, což nemůžeme nijak ovlivnit.
V&nbsp;praxi to tedy může znamenat, že uživatel zvolí, že logická červená barva
se má zobrazit jako barva modrá atd.</div></p>

<p>Základních osm barev většinou existuje i ve světlejších odstínech, které lze
zvolit zápisem prefixu <strong>bold</strong>
popř.&nbsp;<strong>bright</strong>. Opět platí, že konkrétní způsob zobrazení
je závislý na nastavení daného terminálu a že jména logických barev nemusí
odpovídat barvám skutečně zobrazeným (například <strong>xterm</strong>
nerozezná &bdquo;bright&ldquo; variantu a vyžaduje &bdquo;bold&ldquo;
variantu):</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(f"{terminal.bold_black}black text{terminal.normal}")
print(f"{terminal.bold_red}red text{terminal.normal}")
print(f"{terminal.bold_green}green text{terminal.normal}")
print(f"{terminal.bold_yellow}yellow text{terminal.normal}")
print(f"{terminal.bold_blue}blue text{terminal.normal}")
print(f"{terminal.bold_magenta}magenta text{terminal.normal}")
print(f"{terminal.bold_cyan}cyan text{terminal.normal}")
print(f"{terminal.bold_white}white text{terminal.normal}")
</pre>

<a href="https://www.root.cz/obrazek/447801/"><img src="https://i.iinfo.cz/images/428/blessed1-6-prev.png" class="image-447801" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 12: Osm upravených barev textu atributem
<strong>bold</strong>.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Změna barvy pozadí</h2>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(f"{terminal.on_black}black background{terminal.normal}")
print(f"{terminal.on_red}red background{terminal.normal}")
print(f"{terminal.on_green}green background{terminal.normal}")
print(f"{terminal.on_yellow}yellow background{terminal.normal}")
print(f"{terminal.on_blue}blue background{terminal.normal}")
print(f"{terminal.on_magenta}magenta background{terminal.normal}")
print(f"{terminal.on_cyan}cyan background{terminal.normal}")
print(f"{terminal.on_white}white background{terminal.normal}")
</pre>

<a href="https://www.root.cz/obrazek/447802/"><img src="https://i.iinfo.cz/images/428/blessed1-7-prev.png" class="image-447802" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 13: Osm základních barev pozadí.</i></p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(f"{terminal.bold_on_black}black background{terminal.normal}")
print(f"{terminal.bold_on_red}red background{terminal.normal}")
print(f"{terminal.bold_on_green}green background{terminal.normal}")
print(f"{terminal.bold_on_yellow}yellow background{terminal.normal}")
print(f"{terminal.bold_on_blue}blue background{terminal.normal}")
print(f"{terminal.bold_on_magenta}magenta background{terminal.normal}")
print(f"{terminal.bold_on_cyan}cyan background{terminal.normal}")
print(f"{terminal.bold_on_white}white background{terminal.normal}")
</pre>

<a href="https://www.root.cz/obrazek/447803/"><img src="https://i.iinfo.cz/images/428/blessed1-8-prev.png" class="image-447803" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 14: Osm základních barev pozadí modifikovaných atributem
<strong>bold</strong>.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Kombinace různých barev popředí (textů) a pozadí</h2>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
textColors = (
        terminal.black,
        terminal.red,
        terminal.green,
        terminal.yellow,
        terminal.blue,
        terminal.magenta,
        terminal.cyan,
        terminal.white,
)
&nbsp;
backgroundColors = (
        terminal.on_black,
        terminal.on_red,
        terminal.on_green,
        terminal.on_yellow,
        terminal.on_blue,
        terminal.on_magenta,
        terminal.on_cyan,
        terminal.on_white,
)
&nbsp;
for textColor in textColors:
    for backgroundColor in backgroundColors:
        print(f"{textColor}{backgroundColor}XXXXX{terminal.normal} ", end="")
    print()
</pre>

<a href="https://www.root.cz/obrazek/447804/"><img src="https://i.iinfo.cz/images/428/blessed1-9-prev.png" class="image-447804" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 15: 64 kombinací barev textu a pozadí.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. 24bitové barvy v&nbsp;moderních emulátorech terminálu</h2>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
terminal.number_of_colors = 1 &lt;&lt; 24
&nbsp;
for red in range(0, 256, 16):
    for green in range(0, 256, 16):
        for blue in range(0, 256, 16):
            hex_triplet = "#{:02x}{:02x}{:02x}".format(red, green, blue)
            print(terminal.color_rgb(red, green, blue) + hex_triplet, end=" ")
        print()
    print()
&nbsp;
print()
print(f"{terminal.normal}DONE")
</pre>

<a href="https://www.root.cz/obrazek/447805/"><img src="https://i.iinfo.cz/images/428/blessed1-10-prev.png" class="image-447805" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 16: Část 24bitové barvové škály.</i></p>

<a href="https://www.root.cz/obrazek/447806/"><img src="https://i.iinfo.cz/images/428/blessed1-11-prev.png" class="image-447806" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 17: Část 24bitové barvové škály.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. 24bitové barvy na pozadí textu</h2>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
terminal.number_of_colors = 1 &lt;&lt; 24
&nbsp;
for red in range(0, 256, 16):
    for green in range(0, 256, 16):
        for blue in range(0, 256, 16):
            hex_triplet = "#{:02x}{:02x}{:02x}".format(red, green, blue)
            print(terminal.on_color_rgb(red, green, blue) + hex_triplet, end=" ")
        print()
    print()
&nbsp;
print()
print(f"{terminal.normal}DONE")
</pre>

<a href="https://www.root.cz/obrazek/447807/"><img src="https://i.iinfo.cz/images/428/blessed1-12-prev.png" class="image-447807" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 18: Část 24bitové barvové škály na pozadí.</i></p>

<a href="https://www.root.cz/obrazek/447808/"><img src="https://i.iinfo.cz/images/428/blessed1-13-prev.png" class="image-447808" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 19: Část 24bitové barvové škály na pozadí.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Pojmenované barvy na popředí</h2>

<p></p>
https://blessed.readthedocs.io/en/latest/colors.html#color-chart

<pre>
</pre>

<a href="https://www.root.cz/obrazek/447809/"><img src="https://i.iinfo.cz/images/428/blessed1-14-prev.png" class="image-447809" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 20: Výsledek běhu předchozího demonstračního příkladu.</i></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Pojmenované barvy na pozadí</h2>

<p></p>

<pre>
</pre>

<a href="https://www.root.cz/obrazek/447810/"><img src="https://i.iinfo.cz/images/428/blessed1-15-prev.png" class="image-447810" alt="&#160;" width="370" height="232" /></a>
<p><i>Obrázek 21: Výsledek běhu předchozího demonstračního příkladu.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Zobrazení hypertextového odkazu</h2>

<p>Poslední funkce knihovny <i>Blessed</i>, s&nbsp;níž se dnes seznámíme, je
podporovaná většinou moderních emulátorů terminálů. Jedná se o možnost
zobrazení hypertextového odkazu, přesněji řečeno odkazu, jehož text (titulek)
je odlišný od vlastní adresy (běžné adresy, resp.&nbsp;URL dokážou terminály
detekovat samy). Hypertextový odkaz se vkládá metodou
<strong>Terminal.link</strong> tak, jak je to ukázáno v&nbsp;dnešním posledním
demonstračním příkladu. Této metodě se nejdříve předá adresa (URL) a poté text
neboli titulek odkazu:</p>

<pre>
import blessed
&nbsp;
terminal = <u>blessed.Terminal()</u>
&nbsp;
print(f"Odkaz: {<u>terminal.link('https://www.root.cz', 'Stránky Root.cz')</u>}")
</pre>

<p><div class="rs-tip-major">Poznámka: styl zobrazení odkazu (a to, zda se
adresa zobrazí při přejetí kurzorem myši) je řízen nastavením
terminálu.</div></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Obsah druhé (závěrečné) části článku</h2>

<p>Dnes jsme si popsali pouze základní funkce knihovny <i>Blessed</i>, které je
možné použít pro změnu (vylepšení) zobrazení údajů na terminálu. To je však
pouze malá část celkové funkcionality. Aby bylo možné vytvářet plnohodnotné
celoobrazovkové aplikace, je nutné umět přesunout textový kurzor na libovolnou
pozici na terminálu (sloupec, řádek), reagovat na stisk klávesy (a nikoli čekat
na potvrzení Enterem) popř.&nbsp;reagovat na změnu velikosti okna terminálu.
Tyto funkce budou popsány ve druhé a současně i poslední části mikroseriálku o
knihovně <i>Blessed</i>.</p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Jméno souboru</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>terminal_info.py</td><td>přečtení základních informací o terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/terminal_info.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/terminal_info.py</a></td></tr>
<tr><td> 2</td><td>clear_screen.py</td><td>smazání obrazovky terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/clear_screen.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/clear_screen.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>text_styles1.py</td><td>nastavení stylu vykreslení textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles1.py</a></td></tr>
<tr><td> 4</td><td>text_styles2.py</td><td>použití </td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>basic_8_colors.py</td><td>základních osm barev textu podporovaných většinou terminálů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors.py</a></td></tr>
<tr><td> 6</td><td>basic_8_colors_bold.py</td><td>modifikátor &bdquo;bold&ldquo; ovlivňující barvu textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors_bold.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors_bold.py</a></td></tr>
<tr><td> 7</td><td>basic_8_backgrounds.py</td><td>základních osm barev pozadí podporovaných většinou terminálů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_backgrounds.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_backgrounds.py</a></td></tr>
<tr><td> 8</td><td>basic_8_bold_backgrounds.py</td><td>modifikátor &bdquo;bold&ldquo; ovlivňující barvu pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_bold_backgrounds.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_bold_backgrounds.py</a></td></tr>
<tr><td> 9</td><td>basic_8_combinations.py</td><td>kombinace barev textu a barev pozadí (64 různých kombinací)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_combinations.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_combinations.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>palette.py</td><td>plnohodnotná barvová paleta (true color) na popředí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette.py</a></td></tr>
<tr><td>11</td><td>palette_background.py</td><td>plnohodnotná barvová paleta (true color) na pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette_background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette_background.py</a></td></tr>
<tr><td>12</td><td>named_colors.py</td><td>použití jmen barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors.py</a></td></tr>
<tr><td>13</td><td>named_colors_background.py</td><td>použití jmen barev pro specifikaci barvy pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors_background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors_background.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>14</td><td>hyperlink.py</td><td>hypertextkový odkaz v&nbsp;terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/hyperlink.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/hyperlink.py</a></td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Články o tvorbě aplikací s&nbsp;grafickým uživatelským rozhraním</h2>

<p>Tento článek se zabývá tvorbou aplikací s&nbsp;uživatelským rozhraním
v&nbsp;Pythonu. Neškodí si proto připomenout, že právě pro Python existuje
poměrně velké množství knihoven určených pro práci s&nbsp;<i>grafickým</i>
uživatelským rozhraním. Mnohé z&nbsp;těchto knihoven jsme si již na stránkách
Roota popsali, a to v&nbsp;následujících článcích:</p>

<ol>

<li>Knihovny pro tvorbu grafického uživatelského rozhraní v Pythonu<br />
<a href="https://www.root.cz/clanky/knihovny-pro-tvorbu-grafickeho-uzivatelskeho-rozhrani-v-pythonu/">https://www.root.cz/clanky/knihovny-pro-tvorbu-grafickeho-uzivatelskeho-rozhrani-v-pythonu/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: knihovna Tkinter<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: knihovna Tkinter (2.část)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-2-cast/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-2-cast/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: knihovna Tkinter (3.část)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-3-cast/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-3-cast/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: menu v knihovně Tkinter<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-menu-v-knihovne-tkinter/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-menu-v-knihovne-tkinter/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (canvasem)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-canvasem/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-canvasem/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (2. část)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-2-cast/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-2-cast/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (dokončení)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: další možnosti nabízené widgety Text a ScrolledText<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-dalsi-moznosti-nabizene-widgety-text-a-scrolledtext/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-dalsi-moznosti-nabizene-widgety-text-a-scrolledtext/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: použití dialogových oken v knihovně Tkinter<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-pouziti-dialogovych-oken-v-knihovne-tkinter/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-pouziti-dialogovych-oken-v-knihovne-tkinter/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu s využitím knihovny appJar<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-knihovny-appjar/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-knihovny-appjar/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu: widgety v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-widgety-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-widgety-v-knihovne-appjar/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu: dokončení popisu widgetů v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-dokonceni-popisu-widgetu-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-dokonceni-popisu-widgetu-v-knihovne-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: menu, toolbary a widgety pro vstup textu v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-menu-toolbary-a-widgety-pro-vstup-textu-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-menu-toolbary-a-widgety-pro-vstup-textu-v-knihovne-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: widgety pro zobrazení tabulek a stromů v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-tabulek-a-stromu-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-tabulek-a-stromu-v-knihovne-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: widgety pro zobrazení grafických informací nabízené knihovnou appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-grafickych-informaci-nabizene-knihovnou-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-grafickych-informaci-nabizene-knihovnou-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: použití želví grafiky společně s knihovnou appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-pouziti-zelvi-grafiky-spolecne-s-knihovnou-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-pouziti-zelvi-grafiky-spolecne-s-knihovnou-appjar/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu s využitím frameworku PySide<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-frameworku-pyside/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-frameworku-pyside/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: signály a sloty, správci rozložení komponent<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-signaly-a-sloty-spravci-rozlozeni-komponent/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-signaly-a-sloty-spravci-rozlozeni-komponent/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: další dostupné ovládací prvky<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-dalsi-dostupne-ovladaci-prvky/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-dalsi-dostupne-ovladaci-prvky/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: přepínací tlačítka a tvorba hlavních oken aplikací<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-prepinaci-tlacitka-a-tvorba-hlavnich-oken-aplikaci/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-prepinaci-tlacitka-a-tvorba-hlavnich-oken-aplikaci/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: hlavní menu, nástrojový pruh a výběrový seznam<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-hlavni-menu-nastrojovy-pruh-a-vyberove-seznam/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-hlavni-menu-nastrojovy-pruh-a-vyberove-seznam/</a>
</li>

<li>Tvorba GUI v Pythonu s využitím frameworku PySide: rastrová a vektorová grafika<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-vyuzitim-frameworku-pyside-rastrova-a-vektorova-grafika/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-vyuzitim-frameworku-pyside-rastrova-a-vektorova-grafika/</a>
</li>

<li>Tvorba GUI v PySide: grafické operace používající třídu QPainter<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pyside-graficke-operace-pouzivajici-tridu-qpainter/">https://www.root.cz/clanky/tvorba-gui-v-pyside-graficke-operace-pouzivajici-tridu-qpainter/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: pokročilejší grafické operace používající třídu QPainter<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-pokrocilejsi-graficke-operace-pouzivajici-tridu-qpainter/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-pokrocilejsi-graficke-operace-pouzivajici-tridu-qpainter/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: použití cest při kreslení 2D scén<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-pouziti-cest-pri-kresleni-2d-scen/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-pouziti-cest-pri-kresleni-2d-scen/</a>
</li>

<li>GUI v Pythonu s PySide: rastrové operace, vykreslování textů<br />
<a href="https://www.root.cz/clanky/gui-v-pythonu-s-pyside-rastrove-operace-vykreslovani-textu/">https://www.root.cz/clanky/gui-v-pythonu-s-pyside-rastrove-operace-vykreslovani-textu/</a>
</li>

<li>Tvorba GUI v Pythonu s využitím frameworku PySide: widgety pro textový vstup<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-vyuzitim-frameworku-pyside-widgety-pro-textovy-vstup/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-vyuzitim-frameworku-pyside-widgety-pro-textovy-vstup/</a>
</li>

<li>Složitější ovládací prvky ve frameworku PySide: tabulky a stromy<br />
<a href="https://www.root.cz/clanky/slozitejsi-ovladaci-prvky-ve-frameworku-pyside-tabulky-a-stromy/">https://www.root.cz/clanky/slozitejsi-ovladaci-prvky-ve-frameworku-pyside-tabulky-a-stromy/</a>
</li>

<li>Další užitečné ovládací prvky nabízené frameworkem PySide<br />
<a href="https://www.root.cz/clanky/dalsi-uzitecne-ovladaci-prvky-nabizene-frameworkem-pyside/">https://www.root.cz/clanky/dalsi-uzitecne-ovladaci-prvky-nabizene-frameworkem-pyside/</a>
</li>

<li>Standardní dialogy v knihovně PySide<br />
<a href="https://www.root.cz/clanky/standardni-dialogy-v-nbsp-knihovne-pyside/">https://www.root.cz/clanky/standardni-dialogy-v-nbsp-knihovne-pyside/</a>
</li>

<li>Konfigurace standardních dialogů nabízených knihovnou PySide<br />
<a href="https://www.root.cz/clanky/konfigurace-standardnich-dialogu-nabizenych-knihovnou-pyside/">https://www.root.cz/clanky/konfigurace-standardnich-dialogu-nabizenych-knihovnou-pyside/</a>
</li>

<li>Nastavení stylů vykreslování widgetů, oken i dialogů v knihovně PySide<br />
<a href="https://www.root.cz/clanky/nastaveni-stylu-vykreslovani-widgetu-oken-i-dialogu-v-knihovne-pyside/">https://www.root.cz/clanky/nastaveni-stylu-vykreslovani-widgetu-oken-i-dialogu-v-knihovne-pyside/</a>
</li>

<li>Tvorba GUI v Pythonu: použití kaskádových stylů v PySide<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-pouziti-kaskadovych-stylu-v-pyside/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-pouziti-kaskadovych-stylu-v-pyside/</a>
</li>

<li>Práce s vektorovým formátem SVG ve frameworku PySide<br />
<a href="https://www.root.cz/clanky/prace-s-vektorovym-formatem-svg-ve-frameworku-pyside/">https://www.root.cz/clanky/prace-s-vektorovym-formatem-svg-ve-frameworku-pyside/</a>
</li>

<li>Práce s vektorovým formátem SVG ve frameworku PySide (dokončení)<br />
<a href="https://www.root.cz/clanky/prace-s-vektorovym-formatem-svg-ve-frameworku-pyside-dokonceni/">https://www.root.cz/clanky/prace-s-vektorovym-formatem-svg-ve-frameworku-pyside-dokonceni/</a>
</li>

<li>Použití UI souborů s popisem formulářů ve frameworku PySide<br />
<a href="https://www.root.cz/clanky/pouziti-ui-souboru-s-popisem-formularu-ve-frameworku-pyside/">https://www.root.cz/clanky/pouziti-ui-souboru-s-popisem-formularu-ve-frameworku-pyside/</a>
</li>

<li>Jazyk QML (Qt Modeling Language) a PySide<br />
<a href="https://www.root.cz/clanky/jazyk-qml-qt-modeling-language-a-pyside/">https://www.root.cz/clanky/jazyk-qml-qt-modeling-language-a-pyside/</a>
</li>

<li>Jazyk QML (Qt Modeling Language) a PySide 2<br />
<a href="https://www.root.cz/clanky/jazyk-qml-qt-modeling-language-a-pyside-2/">https://www.root.cz/clanky/jazyk-qml-qt-modeling-language-a-pyside-2/</a>
</li>

<li>Reakce na události v GUI deklarované v jazyku QML a PySide 2<br />
<a href="https://www.root.cz/clanky/reakce-na-udalosti-v-gui-deklarovane-v-jazyku-qml-a-pyside-2/">https://www.root.cz/clanky/reakce-na-udalosti-v-gui-deklarovane-v-jazyku-qml-a-pyside-2/</a>
</li>

<li>Interaktivní tvorba grafického uživatelského rozhraní nástrojem Pygubu<br />
<a href="https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-nastrojem-pygubu/">https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-nastrojem-pygubu/</a>
</li>

<li>Interaktivní tvorba grafického uživatelského rozhraní s využitím nástroje Pygubu (2)<br />
<a href="https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-2/">https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-2/</a>
</li>

<li>Interaktivní tvorba grafického uživatelského rozhraní s využitím nástroje Pygubu (dokončení)<br />
<a href="https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-dokonceni/">https://www.root.cz/clanky/interaktivni-tvorba-grafickeho-uzivatelskeho-rozhrani-s-vyuzitim-nastroje-pygubu-dokonceni/</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Články o tvorbě aplikací s&nbsp;textovým uživatelským rozhraním</h2>

<p>Na stránkách Roota jsme se zabývali taktéž některými knihovnami (opět
určenými primárně pro Python), které je možné použít pro tvorbu aplikací
s&nbsp;celoobrazovkovým (či chcete-li celoterminálovým) textovým uživatelským
rozhraním. Podporu pro TUI poskytuje především knihovna
<strong>prompt_toolkit</strong>:</p>

<ol>

<li>Tvorba aplikací s příkazovým řádkem v Pythonu s knihovnami GNU Readline a prompt_toolkit<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/">https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/</a>
</li>

<li>Tvorba aplikací s textovým uživatelským rozhraním založeným na knihovně prompt_toolkit<br />
<a href="https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/">https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/</a>
</li>

<li>Tvorba textového rozhraní s knihovnou prompt_toolkit: základní prvky TUI<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/">https://www.root.cz/clanky/tvorba-textoveho-rozhrani-s-knihovnou-prompt-toolkit-zakladni-prvky-tui/</a>
</li>

<li>Tvorba TUI s knihovnou prompt_toolkit: aplikace s celoobrazovkovým rozhraním<br />
<a href="https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/">https://www.root.cz/clanky/tvorba-tui-s-knihovnou-prompt-toolkit-aplikace-s-celoobrazovkovym-rozhranim/</a>
</li>

<li>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: ovládací prvky (widgety)<br />
<a href="https://www.root.cz/clanky/tvorba-textoveho-uzivatelskeho-rozhrani-s-knihovnou-prompt-toolkit-ovladaci-prvky-widgety/">https://www.root.cz/clanky/tvorba-textoveho-uzivatelskeho-rozhrani-s-knihovnou-prompt-toolkit-ovladaci-prvky-widgety/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>blessed na PyPi<br />
<a href="https://pypi.org/project/blessed/">https://pypi.org/project/blessed/</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/jquast/blessed">https://github.com/jquast/blessed</a>
</li>

<li>Blessed documentation!<br />
<a href="https://blessed.readthedocs.io/en/latest/">https://blessed.readthedocs.io/en/latest/</a>
</li>

<li>termbox-go na GitHubu<br />
<a href="https://github.com/nsf/termbox-go">https://github.com/nsf/termbox-go</a>
</li>

<li>termui na GitHubu<br />
<a href="https://github.com/gizak/termui">https://github.com/gizak/termui</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/chjj/blessed">https://github.com/chjj/blessed</a>
</li>

<li>blessed-contrib na GitHubu<br />
<a href="https://github.com/yaronn/blessed-contrib">https://github.com/yaronn/blessed-contrib</a>
</li>

<li>tui-rs na GitHubu<br />
<a href="https://github.com/fdehau/tui-rs">https://github.com/fdehau/tui-rs</a>
</li>

<li>Operace s framebufferem na Raspberry Pi<br />
<a href="https://www.root.cz/clanky/operace-s-framebufferem-na-raspberry-pi/">https://www.root.cz/clanky/operace-s-framebufferem-na-raspberry-pi/</a>
</li>

<li>Framebuffer na Raspberry Pi: vykreslování složitějších objektů<br />
<a href="https://www.root.cz/clanky/framebuffer-na-raspberry-pi-vykreslovani-slozitejsich-objektu/">https://www.root.cz/clanky/framebuffer-na-raspberry-pi-vykreslovani-slozitejsich-objektu/</a>
</li>

<li>256 COLORS - CHEAT SHEET<br />
<a href="https://jonasjacek.github.io/colors/">https://jonasjacek.github.io/colors/</a>
</li>

<li>Terminfo (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Terminfo">https://en.wikipedia.org/wiki/Terminfo</a>
</li>

<li>Termcap (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Termcap">https://en.wikipedia.org/wiki/Termcap</a>
</li>

<li>Python 3's f-Strings: An Improved String Formatting Syntax (Guide)<br />
<a href="https://realpython.com/python-f-strings/">https://realpython.com/python-f-strings/</a>
</li>

<li>Top 20 Best ASCII Games on Linux System<br />
<a href="https://www.ubuntupit.com/best-ascii-games-on-linux/">https://www.ubuntupit.com/best-ascii-games-on-linux/</a>
</li>

<li>4 Python libraries for building great command-line user interfaces<br />
<a href="https://opensource.com/article/17/5/4-practical-python-libraries">https://opensource.com/article/17/5/4-practical-python-libraries</a>
</li>

<li>prompt_toolkit 2.0.3 na PyPi<br />
<a href="https://pypi.org/project/prompt_toolkit/">https://pypi.org/project/prompt_toolkit/</a>
</li>

<li>python-prompt-toolkit na GitHubu<br />
<a href="https://github.com/jonathanslenders/python-prompt-toolkit">https://github.com/jonathanslenders/python-prompt-toolkit</a>
</li>

<li>The GNU Readline Library<br />
<a href="https://tiswww.case.edu/php/chet/readline/rltop.html">https://tiswww.case.edu/php/chet/readline/rltop.html</a>
</li>

<li>GNU Readline (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GNU_Readline">https://en.wikipedia.org/wiki/GNU_Readline</a>
</li>

<li>readline — GNU readline interface (Python 3.x)<br />
<a href="https://docs.python.org/3/library/readline.html">https://docs.python.org/3/library/readline.html</a>
</li>

<li>readline — GNU readline interface (Python 2.x)<br />
<a href="https://docs.python.org/2/library/readline.html">https://docs.python.org/2/library/readline.html</a>
</li>

<li>GNU Readline Library - command line editing<br />
<a href="https://tiswww.cwru.edu/php/chet/readline/readline.html">https://tiswww.cwru.edu/php/chet/readline/readline.html</a>
</li>

<li>gnureadline 6.3.8 na PyPi<br />
<a href="https://pypi.org/project/gnureadline/">https://pypi.org/project/gnureadline/</a>
</li>

<li>Editline Library (libedit)<br />
<a href="http://thrysoee.dk/editline/">http://thrysoee.dk/editline/</a>
</li>

<li>Comparing Python Command-Line Parsing Libraries – Argparse, Docopt, and Click<br />
<a href="https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/">https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/</a>
</li>

<li>IBM 2741<br />
<a href="https://en.wikipedia.org/wiki/IBM_2741">https://en.wikipedia.org/wiki/IBM_2741</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

