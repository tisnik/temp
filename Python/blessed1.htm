<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>I přes převahu aplikací s grafickým uživatelským rozhraním (dnes mnohdy postavených na webových technologiích) stále vznikají aplikace používající pro komunikaci s uživatelem terminál. Dnes se seznámíme s knihovnou Blessed, která takové aplikace umožňuje tvořit v Pythonu.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Knihovny pro ovládání textového terminálu</a></p>
<p><a href="#k03">*** 3. Instalace knihovny Blessed</a></p>
<p><a href="#k04">*** 4. Přečtení základních informací o terminálu</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">*** 18. Články o tvorbě aplikací s&nbsp;grafickým uživatelským rozhraním</a></p>
<p><a href="#k19">*** 19. Články o tvorbě aplikací s&nbsp;textovým uživatelským rozhraním</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>Již mnohokrát jsme se na stránkách <a href="https://www.root.cz">Roota</a> zabývali problematikou tvorby aplikací s&nbsp;plnohodnotným grafickým uživatelským rozhraním &ndash; viz též <a href="#k18">osmnáctou kapitolu s&nbsp;příslušnými odkazy</a>. Ovšem existuje relativně velké množství aplikací popř.&nbsp;nástrojů, pro které může být vhodnější použít terminál resp.&nbsp;konzoli. Takové aplikace dělíme do dvou skupin. Do první skupiny spadají interaktivně či neinteraktivně ovládané aplikace s&nbsp;příkazovým řádkem (příkladem mohou být správci balíčků, které s&nbsp;uživatelem interagují pouze několika otázkami typu Y/N; dalším příkladem je nástroj <strong>fdisk</strong>).</p>

<img src="https://i.iinfo.cz/images/536/ipython1-1-1.png" class="image-443462" alt="" width="644" height="429">
<p><i>Obrázek 1: Mnoho aplikací sice využívá rozšířených možností textových terminálů, ovšem stále se jedná spíše o neinteraktivní nástroje bez celoobrazovkového přístupu k&nbsp;terminálu.</i></p>

<p>A do druhé skupiny aplikací určených pro běh v&nbsp;terminálu můžeme zařadit aplikace s&nbsp;plnohodnotným textovým uživatelským rozhraním neboli <i>TUI (Text User Interface)</i>. Takových aplikací existuje celá řada. Zmínit můžeme celoobrazovkové textové editory (včetně Vimu a Emacsu), Midnight Commander, nástroj Aptitude, ale i některé hry používající celoobrazovkový textový režim (<a href="https://github.com/hackndev/0verkill">0verkill</a>, <a href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-61-cast-angband-adom-doomrl-a-dalsi-zname-roguelike-hry/#k02">Rogue</a>, Nethack, <a href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-61-cast-angband-adom-doomrl-a-dalsi-zname-roguelike-hry/#k05">Angband</a>, <a href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-61-cast-angband-adom-doomrl-a-dalsi-zname-roguelike-hry/#k06">DoomRL</a> atd.). TUI je u některých aplikací volitelné. Dobrým příkladem takového typu aplikace je GNU Debugger, který buď pracuje v&nbsp;režimu příkazového řádku, nebo ho lze přepnout do režimu s&nbsp;celoobrazovkovým textovým uživatelským rozhraním. I o tvorbě těchto aplikací jsme se ve stručnosti již zmínili, což je obsahem <a href="#k19">devatenácté kapitoly</a>.</p>

<a href="https://www.root.cz/obrazek/116575/"><img src="https://i.iinfo.cz/images/377/games-61-30-prev.png" alt="DoomRL" height="232" width="370"></a>
<p><i>Obrázek 2: DoomRL – úvodní ASCII art je takřka dokonalý.</i></p>

<p><div class="rs-tip-major">Poznámka: termín &bdquo;celoobrazovkový&ldquo; zde nemá ten význam, že by plocha aplikace pokryla celou plochu monitoru (jako například při přehrávání videa), ale že využije plochu terminálu. U reálných terminálů se skutečně jedná o celou obrazovku, ovšem dnes se naprostá většina uživatelů setká pouze s&nbsp;emulátorem terminálu, který sám může být zobrazen v&nbsp;oknu a neběží tedy (striktně řečeno) na celé obrazovce.</div></p>

<a href="https://www.root.cz/obrazek/116568/"><img src="https://i.iinfo.cz/images/377/games-61-23-prev.png" alt="Angband" height="232" width="370"></a>
<p><i>Obrázek 3: Angband pro Linux – podrobnější charakteristiky hrdiny.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Knihovny pro ovládání textového terminálu</h2>

<p>U obou dvou výše zmíněných typů aplikací je nutné umět do určité míry ovládat terminálový výstup, aby například bylo možné smazat znak/řádek, zvýraznit text atd. A u aplikací s&nbsp;plnohodnotným textovým uživatelským rozhraním je pochopitelně nutné terminál ovládat do ještě větší míry, aby bylo možné pracovat s&nbsp;okny, menu, nápovědou a dalšími ovládacími prvky. Vzhledem k&nbsp;tomu, že se textové terminály vyvíjejí už velmi dlouho (minimálně od roku ...), jsou rozdílné i jejich možnosti (vlastnosti) i způsob jejich ovládání (většinou s&nbsp;využitím řídicích kódů, dnes většinou založených na takzvaných <i>escape sekvencích</i>).</p>

<p>Samozřejmě v&nbsp;průběhu předchozích desetiletí jsme mohli vidět snahu o sjednocení ovládání terminálů, která probíhala paralelně s&nbsp;vytvářením databáze obsahující vlastnosti terminálů (<i>terminfo</i>). Existují také knihovny, které programátora dokážou odizolovat od nízkoúrovňového přístupu k&nbsp;terminálům a jejich řízení s&nbsp;využitím řídicích kódů. Jedná se především o knihovnu <i>curses</i> a jejího následovníka <i>ncurses</i>, popř.&nbsp;o utility spouštěné z&nbsp;příkazového řádku (<strong>setaf</strong>, <strong></strong> atd.).</p>

<p>V&nbsp;dnešním článku se však zaměříme na popis jiné knihovny resp.&nbsp;přesněji řečeno balíčku. Jedná se o knihovnu nazvanou <i>Blessed</i>, která je určena pro použití v&nbsp;aplikacích naprogramovaných v&nbsp;jazyku <a href="">Python</a>. Tato knihovna, a to včetně jejího jména, je inspirována knihovnou <a href="">Blessed určenou pro programovací jazyk JavaScript</a>. Ovšem podobných knihoven, více či méně inspirovaných právě knihovnou Blessed, postupně vzniklo větší množství.</p>

<p>Za připomenutí stojí především knihovna <a href=""></a> určená pro použití v&nbsp;aplikacích <a href="">naprogramovaných v&nbsp;Go</a>, popř.&nbsp;knihovna <a href=""></a>, která je naopak určena pro aplikace vyvinuté <a href="https://www.root.cz/serialy/programovaci-jazyk-rust/">v&nbsp;programovacím jazyku Rust</a>. Tyto knihovny poskytují zejména možnost posunu textového kurzoru po ploše terminálu, mazání a přidávání textu na určenou pozici, změnu stylu vykreslování popř.&nbsp;změna barvy pozadí a popředí, ale i pokročilejší operace s&nbsp;textovými plochami (okny), tvorbu animovaných prvků apod.</p>

<p>Dnes si ukážeme pouze základní možnosti poskytované knihovnou <i>Blessed</i>. Pokročilejšími operacemi se budeme zabývat ve druhém pokračování dnešního článku.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace knihovny Blessed</h2>

<p>Instalace knihovny <i>Blessed</i> je snadná, protože je tato knihovna dostupná ve formě balíčku poskytovaného přes <a href="">PyPi</a></p>

<pre>
$ <strong>pip3 install --user blessed</strong>
&nbsp;
Collecting blessed
  Downloading https://files.pythonhosted.org/packages/26/35/a781470488a304f66843d328052b6cb22df7163246fb47a27bfb21fba4e6/blessed-1.18.0-py2.py3-none-any.whl (81kB)
    100% |████████████████████████████████| 81kB 778kB/s 
Requirement already satisfied: six&gt;=1.9.0 in ./.local/lib/python3.6/site-packages (from blessed)
Requirement already satisfied: wcwidth&gt;=0.1.4 in ./.local/lib/python3.6/site-packages (from blessed)
Installing collected packages: blessed
Successfully installed blessed-1.18.0
</pre>

<pre>
$ <strong>python3</strong>
Python 3.9.4 (default, Apr  6 2021, 00:00:00)
[GCC 11.0.1 20210324 (Red Hat 11.0.1-0)] on linux
Type "help", "copyright", "credits" or "license" for more information.
Type "help", "copyright", "credits" or "license" for more information.
&nbsp;
&gt;&gt;&gt;
</pre>

<pre>
&gt;&gt;&gt; import blessed
&nbsp;
&gt;&gt;&gt; help(blessed)
&nbsp;
Help on package blessed:
&nbsp;
NAME
    blessed - A thin, practical wrapper around terminal capabilities in Python.
&nbsp;
DESCRIPTION
    http://pypi.python.org/pypi/blessed
&nbsp;
PACKAGE CONTENTS
    _capabilities
    color
    colorspace
    formatters
    keyboard
    sequences
    terminal
    tests (package)
    win_terminal
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Přečtení základních informací o terminálu</h2>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print("Resolution: {}x{} characters".format(terminal.width, terminal.height))
print("Number of colors: {}".format(terminal.number_of_colors))
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<table>
<tr><th>#</th><th></th><th></th></tr>
<tr><td>1</td><td>clear</td><td></td></tr>
<tr><td>2</td><td>clear_eol</td><td></td></tr>
<tr><td>3</td><td>clear_bol</td><td></td></tr>
<tr><td>4</td><td>clear_eos</td><td></td></tr>
</table>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(terminal.clear)
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>


normal
bold
reverse
underline
no_underline

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(terminal.normal + "normal text")
print(terminal.bold + "bold text" + terminal.normal)
print(terminal.underline + "underlined text" + terminal.normal)
print(terminal.reverse + "reversed text" + terminal.normal)
print()
&nbsp;
print(terminal.bold + "bold " + terminal.underline + "and underlined " + terminal.normal + "text")
print()
&nbsp;
print(terminal.underline + "underlined " + terminal.reverse + "and reversed " + terminal.normal + "text")
print()
&nbsp;
print(terminal.reverse + "reversed " + terminal.bold + "and bold " + terminal.normal + "text")
</pre>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print(f"{terminal.normal}normal text{terminal.normal}")
print(f"{terminal.bold}bold text{terminal.normal}")
print(f"{terminal.underline}underlined text{terminal.normal}")
print(f"{terminal.reverse}reversed text{terminal.normal}")
print()
&nbsp;
print(f"{terminal.bold}bold{terminal.underline} and underlined{terminal.normal} text")
print()
&nbsp;
print(f"{terminal.underline}underlined {terminal.reverse}and reversed{terminal.normal} text")
print()
&nbsp;
print(f"{terminal.reverse}reversed {terminal.bold}and bold{terminal.normal} text")
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
import blessed

terminal = blessed.Terminal()

print(f"{terminal.black}black text{terminal.normal}")
print(f"{terminal.red}red text{terminal.normal}")
print(f"{terminal.green}green text{terminal.normal}")
print(f"{terminal.yellow}yellow text{terminal.normal}")
print(f"{terminal.blue}blue text{terminal.normal}")
print(f"{terminal.magenta}magenta text{terminal.normal}")
print(f"{terminal.cyan}cyan text{terminal.normal}")
print(f"{terminal.white}white text{terminal.normal}")
</pre>

<pre>
import blessed

terminal = blessed.Terminal()

print(f"{terminal.bold_black}black text{terminal.normal}")
print(f"{terminal.bold_red}red text{terminal.normal}")
print(f"{terminal.bold_green}green text{terminal.normal}")
print(f"{terminal.bold_yellow}yellow text{terminal.normal}")
print(f"{terminal.bold_blue}blue text{terminal.normal}")
print(f"{terminal.bold_magenta}magenta text{terminal.normal}")
print(f"{terminal.bold_cyan}cyan text{terminal.normal}")
print(f"{terminal.bold_white}white text{terminal.normal}")
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
import blessed

terminal = blessed.Terminal()

print(f"{terminal.on_black}black background{terminal.normal}")
print(f"{terminal.on_red}red background{terminal.normal}")
print(f"{terminal.on_green}green background{terminal.normal}")
print(f"{terminal.on_yellow}yellow background{terminal.normal}")
print(f"{terminal.on_blue}blue background{terminal.normal}")
print(f"{terminal.on_magenta}magenta background{terminal.normal}")
print(f"{terminal.on_cyan}cyan background{terminal.normal}")
print(f"{terminal.on_white}white background{terminal.normal}")
</pre>

<pre>
import blessed

terminal = blessed.Terminal()

print(f"{terminal.bold_on_black}black background{terminal.normal}")
print(f"{terminal.bold_on_red}red background{terminal.normal}")
print(f"{terminal.bold_on_green}green background{terminal.normal}")
print(f"{terminal.bold_on_yellow}yellow background{terminal.normal}")
print(f"{terminal.bold_on_blue}blue background{terminal.normal}")
print(f"{terminal.bold_on_magenta}magenta background{terminal.normal}")
print(f"{terminal.bold_on_cyan}cyan background{terminal.normal}")
print(f"{terminal.bold_on_white}white background{terminal.normal}")
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
import blessed

terminal = blessed.Terminal()

textColors = (
        terminal.black,
        terminal.red,
        terminal.green,
        terminal.yellow,
        terminal.blue,
        terminal.magenta,
        terminal.cyan,
        terminal.white,
)

backgroundColors = (
        terminal.on_black,
        terminal.on_red,
        terminal.on_green,
        terminal.on_yellow,
        terminal.on_blue,
        terminal.on_magenta,
        terminal.on_cyan,
        terminal.on_white,
)

for textColor in textColors:
    for backgroundColor in backgroundColors:
        print(f"{textColor}{backgroundColor}XXXXX{terminal.normal} ", end="")
    print()
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
import blessed

terminal = blessed.Terminal()

terminal.number_of_colors = 1 &lt;&lt; 24

for red in range(0, 256, 16):
    for green in range(0, 256, 16):
        for blue in range(0, 256, 16):
            hex_triplet = "#{:02x}{:02x}{:02x}".format(red, green, blue)
            print(terminal.color_rgb(red, green, blue) + hex_triplet, end=" ")
        print()
    print()

print()
print(f"{terminal.normal}DONE")
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Jméno souboru</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>terminal_info.py</td><td>přečtení základních informací o terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/terminal_info.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/terminal_info.py</a></td></tr>
<tr><td> 2</td><td>clear_screen</td><td>smazání obrazovky terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/clear_screen">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/clear_screen</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>text_styles1.py</td><td>nastavení stylu vykreslení textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles1.py</a></td></tr>
<tr><td> 4</td><td>text_styles2.py</td><td>použití </td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>basic_8_colors.py</td><td>základních osm barev textu podporovaných většinou terminálů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors.py</a></td></tr>
<tr><td> 6</td><td>basic_8_colors_bold.py</td><td>modifikátor &bdquo;bold&ldquo; ovlivňující barvu textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors_bold.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors_bold.py</a></td></tr>
<tr><td> 7</td><td>basic_8_backgrounds.py</td><td>základních osm barev pozadí podporovaných většinou terminálů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_backgrounds.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_backgrounds.py</a></td></tr>
<tr><td> 8</td><td>basic_8_bold_backgrounds.py</td><td>modifikátor &bdquo;bold&ldquo; ovlivňující barvu pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_bold_backgrounds.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_bold_backgrounds.py</a></td></tr>
<tr><td> 9</td><td>basic_8_combinations.py</td><td>kombinace barev textu a barev pozadí (64 různých kombinací)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_combinations.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_combinations.py</a></td></tr>
<tr><td>10</td><td>palette.py</td><td>plnohodnotná barvová paleta (true color)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/</a></td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Články o tvorbě aplikací s&nbsp;grafickým uživatelským rozhraním</h2>

<ol>

<li>Knihovny pro tvorbu grafického uživatelského rozhraní v Pythonu<br />
<a href="https://www.root.cz/clanky/knihovny-pro-tvorbu-grafickeho-uzivatelskeho-rozhrani-v-pythonu/">https://www.root.cz/clanky/knihovny-pro-tvorbu-grafickeho-uzivatelskeho-rozhrani-v-pythonu/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: knihovna Tkinter<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: knihovna Tkinter (2.část)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-2-cast/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-2-cast/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: knihovna Tkinter (3.část)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-3-cast/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-3-cast/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: menu v knihovně Tkinter<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-menu-v-knihovne-tkinter/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-menu-v-knihovne-tkinter/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (canvasem)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-canvasem/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-canvasem/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (2. část)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-2-cast/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-2-cast/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: kouzla s kreslicí plochou (dokončení)<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: další možnosti nabízené widgety Text a ScrolledText<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-dalsi-moznosti-nabizene-widgety-text-a-scrolledtext/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-dalsi-moznosti-nabizene-widgety-text-a-scrolledtext/</a>
</li>

<li>Grafické uživatelské rozhraní v Pythonu: použití dialogových oken v knihovně Tkinter<br />
<a href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-pouziti-dialogovych-oken-v-knihovne-tkinter/">https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-pouziti-dialogovych-oken-v-knihovne-tkinter/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu s využitím knihovny appJar<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-knihovny-appjar/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-knihovny-appjar/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu: widgety v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-widgety-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-widgety-v-knihovne-appjar/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu: dokončení popisu widgetů v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-dokonceni-popisu-widgetu-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-dokonceni-popisu-widgetu-v-knihovne-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: menu, toolbary a widgety pro vstup textu v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-menu-toolbary-a-widgety-pro-vstup-textu-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-menu-toolbary-a-widgety-pro-vstup-textu-v-knihovne-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: widgety pro zobrazení tabulek a stromů v knihovně appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-tabulek-a-stromu-v-knihovne-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-tabulek-a-stromu-v-knihovne-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: widgety pro zobrazení grafických informací nabízené knihovnou appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-grafickych-informaci-nabizene-knihovnou-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-widgety-pro-zobrazeni-grafickych-informaci-nabizene-knihovnou-appjar/</a>
</li>

<li>Tvorba GUI v Pythonu: použití želví grafiky společně s knihovnou appJar<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-pouziti-zelvi-grafiky-spolecne-s-knihovnou-appjar/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-pouziti-zelvi-grafiky-spolecne-s-knihovnou-appjar/</a>
</li>

<li>Tvorba grafického uživatelského rozhraní v Pythonu s využitím frameworku PySide<br />
<a href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-frameworku-pyside/">https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-frameworku-pyside/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: signály a sloty, správci rozložení komponent<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-signaly-a-sloty-spravci-rozlozeni-komponent/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-signaly-a-sloty-spravci-rozlozeni-komponent/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: další dostupné ovládací prvky<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-dalsi-dostupne-ovladaci-prvky/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-dalsi-dostupne-ovladaci-prvky/</a>
</li>

<li>Tvorba GUI v Pythonu s PySide: přepínací tlačítka a tvorba hlavních oken aplikací<br />
<a href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-prepinaci-tlacitka-a-tvorba-hlavnich-oken-aplikaci/">https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-pyside-prepinaci-tlacitka-a-tvorba-hlavnich-oken-aplikaci/</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Články o tvorbě aplikací s&nbsp;textovým uživatelským rozhraním</h2>

<ol>
</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>blessed na PyPi<br />
<a href="https://pypi.org/project/blessed/">https://pypi.org/project/blessed/</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/jquast/blessed">https://github.com/jquast/blessed</a>
</li>

<li>Blessed documentation!<br />
<a href="https://blessed.readthedocs.io/en/latest/">https://blessed.readthedocs.io/en/latest/</a>
</li>

<li>termbox-go na GitHubu<br />
<a href="https://github.com/nsf/termbox-go">https://github.com/nsf/termbox-go</a>
</li>

<li>termui na GitHubu<br />
<a href="https://github.com/gizak/termui">https://github.com/gizak/termui</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/chjj/blessed">https://github.com/chjj/blessed</a>
</li>

<li>blessed-contrib na GitHubu<br />
<a href="https://github.com/yaronn/blessed-contrib">https://github.com/yaronn/blessed-contrib</a>
</li>

<li>tui-rs na GitHubu<br />
<a href="https://github.com/fdehau/tui-rs">https://github.com/fdehau/tui-rs</a>
</li>

<li>Operace s framebufferem na Raspberry Pi<br />
<a href="https://www.root.cz/clanky/operace-s-framebufferem-na-raspberry-pi/">https://www.root.cz/clanky/operace-s-framebufferem-na-raspberry-pi/</a>
</li>

<li>Framebuffer na Raspberry Pi: vykreslování složitějších objektů<br />
<a href="https://www.root.cz/clanky/framebuffer-na-raspberry-pi-vykreslovani-slozitejsich-objektu/">https://www.root.cz/clanky/framebuffer-na-raspberry-pi-vykreslovani-slozitejsich-objektu/</a>
</li>

<li>256 COLORS - CHEAT SHEET<br />
<a href="https://jonasjacek.github.io/colors/">https://jonasjacek.github.io/colors/</a>
</li>

<li>Terminfo (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Terminfo">https://en.wikipedia.org/wiki/Terminfo</a>
</li>

<li>Termcap (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Termcap">https://en.wikipedia.org/wiki/Termcap</a>
</li>

<li>Python 3's f-Strings: An Improved String Formatting Syntax (Guide)<br />
<a href="https://realpython.com/python-f-strings/">https://realpython.com/python-f-strings/</a>
</li>

<li>Top 20 Best ASCII Games on Linux System<br />
<a href="https://www.ubuntupit.com/best-ascii-games-on-linux/">https://www.ubuntupit.com/best-ascii-games-on-linux/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

