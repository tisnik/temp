<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Analýza funkcí s využitím knihovny SymPy</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Analýza funkcí s využitím knihovny SymPy</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve třetím článku o knihovně SymPy určené pro provádění symbolických výpočtů v Pythonu se budeme zabývat především analýzou funkcí, tj. například hledáním singularit, globálních i lokálních minim a maxim, výpočtem limit funkce atd.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Analýza funkcí s&nbsp;využitím knihovny SymPy</a></p>
<p><a href="#k02">2. Explicitní a implicitní funkce</a></p>
<p><a href="#k03">3. Výpočet singularit</a></p>
<p><a href="#k04">*** 4. Specifikace intervalů v&nbsp;knihovně SymPy</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Analýza funkcí s&nbsp;využitím knihovny SymPy</h2>

<p>Se základními vlastnostmi knihovny <i>SymPy</i> jsme se již seznámili
v&nbsp;předchozí dvojici článků [<a
href="https://www.root.cz/clanky/sympy-knihovna-pro-symbolicke-vypocty-zapsane-primo-v-pythonu/">1</a>]
[<a
href="https://www.root.cz/clanky/sympy-knihovna-pro-symbolicke-vypocty-zapsane-primo-v-pythonu-2-cast/">2</a>].
Připomeňme si, že jsme si prozatím ukázali například způsob zápisu výrazů
(včetně funkcí) v&nbsp;<i>SymPy</i>, úpravy zapsaných výrazů, hledání kořenů
polynomů, faktorizaci polynomů a v&nbsp;neposlední řadě taktéž symbolickou
derivaci a integraci. Taktéž jsme si ukázali, jakým způsobem je možné
integrovat SymPy do Jupyter Notebooku i to, jak lze vykreslit průběh funkcí
přímo na plochu diáře (notebooku).</p>

<img src="https://i.iinfo.cz/images/33/sympy2-2.png" class="image-575290" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="213" height="87" />
<p><i>Obrázek 1: Zobrazení výrazu zpracovatelného knihovnou SymPy
v&nbsp;Jupyter Notebooku.</i></p>

<p>Na výše zmíněnou dvojici článků dnes navážeme. Zabývat se totiž budeme
především analýzou funkcí, což znamená, že budeme hledat singularity, globální
i lokální minima a maxima, vypočteme limity funkce (zleva či zprava), ukážeme
si, jak se zjistí, zda je funkce na nějakém intervalu rostoucí, klesající,
monotonní atd. Navíc si budeme muset ukázat i některé další techniky, například
způsob zápisu intervalů.</p>

<img src="https://i.iinfo.cz/images/33/sympy2-8.png" class="image-575296" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/publicdomain/mark/1.0/deed.en&quot;&gt;Public Domain&lt;/a&gt;" width="682" height="548" />
<p><i>Obrázek 2: Vykreslení průběhu funkce.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Explicitní a implicitní funkce</h2>

<p>Na tomto místě je vhodné se zmínit o tom, jakým způsobem je možné funkce
(pro jednoduchost funkce s&nbsp;jedinou nezávislou proměnnou, popř.&nbsp;se
dvěma proměnnými) reprezentovat. Typicky se setkáme s&nbsp;explicitním zápisem
funkce ve tvaru <strong>y=f(x)</strong>, což je způsob zápisu plně podporovaný
knihovnou <i>SymPy</i>.</p>

<img src="https://i.iinfo.cz/images/166/krivky1b-4.png" class="image-479116" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="640" height="480" />
<p><i>Obrázek 3: Explicitně zapsanou funkcí lze popsat například takzvaná
&bdquo;řetězovka&ldquo;, což je křivka důležitá v&nbsp;praxi (stavebnictví
atd.).</i></p>

<p>Tento popis funkce je sice nejjednodušší a umožňuje mj.&nbsp;popsat jak
(některé) křivky <i>algebraické</i>, tak i křivky <i>transcendentní</i>, ovšem
není možné ho použít například ve chvíli, kdy křivka obsahuje dva či více bodů
ležících přímo nad sebou. Příkladem jsou jak obecně umístěné kuželosečky, tak i
například spirály. V&nbsp;případě kuželoseček se tento problém může řešit tak,
že funkce <i>f</i> představuje jen polovinu kuželosečky &ndash; ovšem výsledná
reprezentace již nedokáže popsat plynulý pohyb bodu po kuželosečce (či obecně
po křivce).</p>

<img src="https://i.iinfo.cz/images/166/krivky1b-12.png" class="image-479124" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="640" height="480" />
<p><i>Obrázek 4: Logaritmická spirála, kterou nelze popsat explicitní
funkcí, podobně jako jimi nelze popsat například kuželosečky.</i></p>

<p>Kromě zápisu explicitní funkce je možné použít funkci <i>implicitní</i>,
která se zapisuje ve tvaru:</p>

<p><i>F(x,y)=0</i></p>

<p>V&nbsp;porovnání s&nbsp;předchozím popisem je popis implicitní funkcí
obecnější, neboť s&nbsp;jeho využitím můžeme reprezentovat křivky obsahující
několik samostatných cest apod. Následuje příklad implicitní funkce popisující
mj.&nbsp;i všechny kuželosečky (záleží pouze na výběru koeficientů A až F):</p>

<p><i>Ax<sup>2</sup>+Bxy+Cy<sup>2</sup>+Dx+Ey+F=0</i></p>

<p><div class="rs-tip-major">Poznámka: mimochodem &ndash; v&nbsp;tomto případě
se jedná o <i>algebraické křivky</i>, neboť je lze popsat polynomem, a to jak
v&nbsp;parametrické podobě, tak i v&nbsp;případě implicitní funkce. Mnohé
křivky ovšem pouze s&nbsp;využitím polynomů vyjádřit nelze. Tyto křivky
nazýváme <i>transcendentní</i>.</div></p>

<p>V&nbsp;dnešním článku se budeme zabývat převážně explicitně zapsanými
funkcemi, a to navíc funkcemi s&nbsp;jedinou nezávislou proměnnou, i když
knihovna <i>SymPy</i> podporuje i implicitní funkce.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Výpočet singularit</h2>

<p>Při analýze vlastností funkcí je mnohdy důležité zjistit i případné
singularity. K&nbsp;tomuto účelu slouží funkce nazvaná příhodně
<strong>singularity</strong>:</p>

<pre>
Help on function singularities in module sympy.calculus.singularities:
&nbsp;
singularities(expression, symbol)
    Find singularities of a given function.
&nbsp;
    Parameters
    ==========
&nbsp;
    expression : Expr
        The target function in which singularities need to be found.
    symbol : Symbol
        The symbol over the values of which the singularity in
        expression in being searched for.
&nbsp;
    Returns
    =======
&nbsp;
    Set
        A set of values for ``symbol`` for which ``expression`` has a
        singularity. An ``EmptySet`` is returned if ``expression`` has no
        singularities for any given value of ``Symbol``.
</pre>

<p><div class="rs-tip-major">Poznámka: oficiální popis funkce
<strong>singularity</strong> je dostupný na stránce <a
href="https://docs.sympy.org/latest/modules/calculus/index.html#sympy.calculus.singularities.singularities">https://docs.sympy.org/latest/modules/calculus/index.html#sympy.calculus.singularities.singularities</a>.</div></p>

<p>Vyzkoušejme si nyní výpočet singularit pro jednoduchou funkci
<i>1/(x<sup>2</sup>-1)</i>, pro níž lze singularity snadno vypočítat ručně
&ndash; zjištěním, pro které hodnoty je jmenovatel roven nule:</p>

<pre>
from sympy import singularities, symbols, pprint
&nbsp;  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')
&nbsp;  
f = <strong>1/(x**2 - 1)</strong>
&nbsp;  
pprint(f)
&nbsp;  
print()
&nbsp;  
s = <strong>singularities(f, x)</strong>
pprint(s)
</pre>

<p>Výsledkem je množina dvou hodnot -1 a 1:</p>

<pre>
  1   
──────
 2    
x  - 1
&nbsp;
{-1, 1}
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy44.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy44.py</a>.</div></p>

<p>Zajímavější bude výpočet singularit pro zlomek, v&nbsp;jehož jmenovateli je
periodická funkce <i>sin</i>:</p>

<pre>
from sympy import singularities, symbols, pprint, sin
&nbsp;  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')
&nbsp;  
f = <strong>1/(sin(x))</strong>
&nbsp;  
pprint(f)
&nbsp;  
print()
&nbsp;  
s = <strong>singularities(f, x)</strong>
pprint(s)
</pre>

<p>Nyní je výsledkem výpočtu nekonečná (ovšem spočetná) množina:</p>

<pre>
  1   
──────
sin(x)
&nbsp;
{2⋅n⋅π │ n ∊ ℤ} ∪ {2⋅n⋅π + π │ n ∊ ℤ}
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy45.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy45.py</a>.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Specifikace intervalů v&nbsp;knihovně SymPy</h2>

<p>V&nbsp;navazujících kapitolách si ukážeme, jakým způsobem se v&nbsp;knihovně
<i>SymPy</i> počítají lokální minima a maxima, jak se na intervalu zjišťuje
monotonnost funkce apod. Všechny tyto výpočty mohou probíhat buď nad celým
definičním oborem funkce (což je typicky obor reálných čísel, ovšem může se
jednat i o čísla komplexní atd.) nebo nad určeným intervalem. A právě způsobem
zápisu intervalů se budeme zabývat v&nbsp;této kapitole.</p>

<p>Interval je specifikován dvojicí hodnot <i>od-do</i>. V&nbsp;matematice je
ovšem nutné přesně specifikovat, jestli mezní hodnoty do intervalu spadají či
nikoli (dokonce je možné, aby jedna z&nbsp;hodnot do intervalu spadala a druhá
ne). Navíc je nutné umět definovat intervaly typu &bdquo;od záporného nekonečna
do nuly (včetně)&ldquo; či dokonce &bdquo;od záporného nekonečna ke (kladnému)
nekonečnu&ldquo;. Všechny tyto varianty jsou knihovnou <i>SymPy</i>
pochopitelně podporovány.</p>

<p>Začněme tím, jakým způsobem lze reprezentovat kladné a záporné nekonečno.
Pro tento účel slouží symbol pojmenovaný <strong>oo</strong> (nebo též
<strong>S.Infinity</strong>), který lze naimportovat a ihned začít používat.
Symbol samotný reprezentuje kladné nekonečno, ovšem nic nám pochopitelně
nebrání v&nbsp;použití unárního operátoru <strong>-</strong> pro zápis
nekonečna záporného:</p>

<pre>
Help on Infinity in module sympy.core.numbers object:
&nbsp;
class Infinity(Number)
 |  Positive infinite quantity.
 |  
 |  In real analysis the symbol `\infty` denotes an unbounded
 |  limit: `x\to\infty` means that `x` grows without bound.
 |  
 |  Infinity is often used not only to define a limit but as a value
 |  in the affinely extended real number system.  Points labeled `+\infty`
 |  and `-\infty` can be added to the topological space of the real numbers,
 |  producing the two-point compactification of the real numbers.  Adding
 |  algebraic properties to this gives us the extended real numbers.
 |  
 |  Infinity is a singleton, and can be accessed by ``S.Infinity``,
 |  or can be imported as ``<strong>oo</strong>``.
 ...
 ...
 ...
</pre>

<p><div class="rs-tip-major">Poznámka: pravděpodobně je zřejmé, proč byl vybrán
zrovna symbol <strong>oo</strong> &ndash; podobá se totiž zápisu skutečného
nekonečna jako ležaté osmičky.</div></p>

<p><div class="rs-tip-major">Poznámka: oficiální popis symbolu
<strong>oo</strong> je dostupný na stránce <a
href="https://docs.sympy.org/latest/modules/core.html?highlight=infinity#sympy.core.numbers.Infinity">https://docs.sympy.org/latest/modules/core.html?highlight=infinity#sympy.core.numbers.Infinity</a>.</div></p>






<pre>
from sympy import diff, symbols, pprint
  
x = symbols('x')

f = 5*x**3 + 4*x**2 + 3*x + 4 + 1/x

pprint(f)

print()

diff1 = diff(f, x)
pprint(diff1)
</pre>

<pre>
   3      2             1
5⋅x  + 4⋅x  + 3⋅x + 4 + ─
                        x

    2             1 
15⋅x  + 8⋅x + 3 - ──
                   2
                  x 
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy38.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy38.py</a>.</div></p>



<pre>
from sympy import diff, symbols, pprint
  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')

f = a*x**3 + b*x**2 + c*x + d + e/x

pprint(f)

print()

diff1 = diff(f, x)
pprint(diff1)
</pre>

<pre>
   3      2             e
a⋅x  + b⋅x  + c⋅x + d + ─
                        x

     2               e 
3⋅a⋅x  + 2⋅b⋅x + c - ──
                      2
                     x 
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy39.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy39.py</a>.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
from sympy import diff, symbols, pprint

x, y, z, w = symbols('x, y, z, w')

f = 4*x**2 + 3*y**2 + 1/z

pprint(f)

print()

diff1 = diff(f, x)
pprint(diff1)

print()

diff2 = diff(f, y)
pprint(diff2)

print()

diff3 = diff(f, z)
pprint(diff3)

print()

diff4 = diff(f, w)
pprint(diff4)
</pre>

<pre>
   2      2   1
4⋅x  + 3⋅y  + ─
              z

8⋅x

6⋅y

-1 
───
  2
 z 

0
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy40.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy40.py</a>.</div></p>



<pre>
from sympy import diff, symbols, pprint

a, b, c, d, e, x, y, z, w = symbols('a, b, c, d, e, x, y, z, w')

f = a*x**b + c*y**d + e/z

pprint(f)

print()

diff1 = diff(f, x)
pprint(diff1)

print()

diff2 = diff(f, y)
pprint(diff2)

print()

diff3 = diff(f, z)
pprint(diff3)

print()

diff4 = diff(f, w)
pprint(diff4)
</pre>

<pre>
   b      d   e
a⋅x  + c⋅y  + ─
              z

     b
a⋅b⋅x 
──────
  x   

     d
c⋅d⋅y 
──────
  y   

-e 
───
  2
 z 

0
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy41.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy41.py</a>.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
from sympy import diff, symbols, pprint
  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')

f = a*x**3 + b*x**2 + c*x + d + e/x

pprint(f)

print()

diff1 = diff(f, x)
pprint(diff1)
print()

diff2 = diff(f, x, x)
pprint(diff2)
print()

diff3 = diff(f, x, x, x)
pprint(diff3)
print()

diff4 = diff(f, x, x, x, x)
pprint(diff4)
</pre>

<pre>
   3      2             e
a⋅x  + b⋅x  + c⋅x + d + ─
                        x

     2               e 
3⋅a⋅x  + 2⋅b⋅x + c - ──
                      2
                     x 

  ⎛            e ⎞
2⋅⎜3⋅a⋅x + b + ──⎟
  ⎜             3⎟
  ⎝            x ⎠

  ⎛    e ⎞
6⋅⎜a - ──⎟
  ⎜     4⎟
  ⎝    x ⎠

24⋅e
────
  5 
 x  
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy42.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy42.py</a>.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
from sympy import diff, symbols, pprint
  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')

f = a*x**3 + b*x**2 + c*x + d + e/x

pprint(f)

print()

for d in range(5):
    diff1 = diff(f, x)
    pprint(diff1)
    f = diff1
    print()
</pre>

<pre>
   3      2             e
a⋅x  + b⋅x  + c⋅x + d + ─
                        x

     2               e 
3⋅a⋅x  + 2⋅b⋅x + c - ──
                      2
                     x 

              2⋅e
6⋅a⋅x + 2⋅b + ───
                3
               x 

      6⋅e
6⋅a - ───
        4
       x 

24⋅e
────
  5 
 x  

-120⋅e 
───────
    6  
   x   

</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy43.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy43.py</a>.</div></p>






<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
from sympy import singularities, symbols, pprint, sin
  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')

f = 1/(sin(x)-x**2)

pprint(f)

print()

s = singularities(f, x)
pprint(s)
</pre>

<pre>
      1      
─────────────
   2         
- x  + sin(x)

⎧  │         ⎛   2             ⎞⎫
⎨x │ x ∊ ℂ ∧ ⎝- x  + sin(x) = 0⎠⎬
⎩  │                            ⎭
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy46.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy46.py</a>.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
from sympy import singularities, symbols, pprint
  
a, b, c, d, e, x = symbols('a,b,c,d,e,x')

f = 1/(x**3 - x**2 + x)

pprint(f)

print()

s = singularities(f, x)
pprint(s)
</pre>

<pre>
     1     
───────────
 3    2    
x  - x  + x

⎧   1   √3⋅ⅈ  1   √3⋅ⅈ⎫
⎨0, ─ - ────, ─ + ────⎬
⎩   2    2    2    2  ⎭
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy47.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy47.py</a>.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
from sympy import symbols, pprint, init_printing
from sympy import Interval, minimum, S

init_printing(use_unicode=True)

x = symbols('x')

f = x**3 - 2*x**2

pprint(f)

print()

print(minimum(f, x, Interval(-2, 2)))
print(minimum(f, x, Interval(-1, 1)))
</pre>

<pre>
 3      2
x  - 2⋅x 

-16
-3
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
from sympy import symbols, pprint, init_printing
from sympy import Interval, maximum, S

init_printing(use_unicode=True)

x = symbols('x')

f = x**3 - 2*x**2

pprint(f)

print()

print(maximum(f, x, Interval(-2, 2)))
print(maximum(f, x, Interval(-1, 1)))
</pre>

<pre>
 3      2
x  - 2⋅x 

0
0
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<pre>
from sympy import symbols, pprint, init_printing
from sympy import Interval, is_increasing

init_printing(use_unicode=True)

x = symbols('x')

f = x**3 - 2*x**2

pprint(f)

print()

i1 = Interval(-2, 2)
i2 = Interval(-2, 0)
i3 = Interval(0, 1)
i4 = Interval(1.5, 4)

print(i1, is_increasing(f, i1, x))
print(i2, is_increasing(f, i2, x))
print(i3, is_increasing(f, i3, x))
print(i4, is_increasing(f, i4, x))
</pre>

<pre>
 3      2
x  - 2⋅x 

Interval(-2, 2) None
Interval(-2, 0) True
Interval(0, 1) False
Interval(1.50000000000000, 4) True
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<pre>
from sympy import symbols, pprint, init_printing
from sympy import Interval, is_decreasing

init_printing(use_unicode=True)

x = symbols('x')

f = x**3 - 2*x**2

pprint(f)

print()

i1 = Interval(-2, 2)
i2 = Interval(-2, 0)
i3 = Interval(0, 1)
i4 = Interval(1.5, 4)

print(i1, is_decreasing(f, i1, x))
print(i2, is_decreasing(f, i2, x))
print(i3, is_decreasing(f, i3, x))
print(i4, is_decreasing(f, i4, x))
</pre>

<pre>
 3      2
x  - 2⋅x 

Interval(-2, 2) False
Interval(-2, 0) False
Interval(0, 1) True
Interval(1.50000000000000, 4) False
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<pre>
from sympy import symbols, pprint, init_printing
from sympy import Interval, is_increasing, oo

init_printing(use_unicode=True)

x = symbols('x')

f = x**3 - 2*x**2

pprint(f)

print()

i1 = Interval(-oo, 2)
i2 = Interval(-oo, 0)
i3 = Interval(0, 1)
i4 = Interval(1.5, oo)

print(i1, is_increasing(f, i1, x))
print(i2, is_increasing(f, i2, x))
print(i3, is_increasing(f, i3, x))
print(i4, is_increasing(f, i4, x))
</pre>

<pre>
 3      2
x  - 2⋅x 

Interval(-oo, 2) None
Interval(-oo, 0) True
Interval(0, 1) False
Interval(1.50000000000000, oo) True
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<pre>
</pre>

<pre>
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>sympy01.py</td><td>zjednodušování konstantního výrazu s&nbsp;odmocninou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy01.py</a></td></tr>
<tr><td> 2</td><td>sympy02.py</td><td>zjednodušování konstantních výrazů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy02.py</a></td></tr>
<tr><td> 3</td><td>sympy03.py</td><td>čitelný výpis výrazů funkcí <strong>sympy.pprint</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy03.py</a></td></tr>
<tr><td> 4</td><td>sympy04.py</td><td>čitelný výpis výrazů funkcí <strong>sympy.pprint</strong>, složitější výsledky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy04.py</a></td></tr>
<tr><td> 5</td><td>sympy05.py</td><td>deklarace a &bdquo;terminálový&ldquo; výpis jednoduchého výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy05.py</a></td></tr>
<tr><td> 6</td><td>sympy06.py</td><td>deklarace a &bdquo;matematický&ldquo; výpis jednoduchého výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy06.py</a></td></tr>
<tr><td> 7</td><td>sympy07.py</td><td>výraz s&nbsp;větším množstvím proměnných (zlomek)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy07.py</a></td></tr>
<tr><td> 8</td><td>sympy08.py</td><td>výraz s&nbsp;větším množstvím proměnných (zlomek)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy08.py</a></td></tr>
<tr><td> 9</td><td>sympy09.py</td><td>zjednodušení výrazu s&nbsp;jedinou proměnnou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy09.py</a></td></tr>
<tr><td>10</td><td>sympy10.py</td><td>zjednodušení výrazu se třemi proměnnými a se zlomky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy10.py</a></td></tr>
<tr><td>11</td><td>sympy11.py</td><td>pokus o použití nedefinované proměnné</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy11.py</a></td></tr>
<tr><td>12</td><td>sympy12.py</td><td>výraz x<sup>2</sup>-y<sup>2</sup></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy12.py</a></td></tr>
<tr><td>13</td><td>sympy13.py</td><td>složitější výraz s&nbsp;několika členy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy13.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy13.py</a></td></tr>
<tr><td>14</td><td>sympy14.py</td><td>faktorizace výrazu x<sup>2</sup>-y<sup>2</sup></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy14.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy14.py</a></td></tr>
<tr><td>15</td><td>sympy15.py</td><td>faktorizace výrazu x<sup>2</sup>-2x + 1</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy15.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy15.py</a></td></tr>
<tr><td>16</td><td>sympy16.py</td><td>expanze výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy16.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy16.py</a></td></tr>
<tr><td>17</td><td>sympy17.py</td><td>expanze (roznásobení závorek) složitějšího výrazu se dvěma proměnnými</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy17.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy17.py</a></td></tr>
<tr><td>18</td><td>sympy18.py</td><td>expanze (roznásobení závorek) složitějšího výrazu se třemi proměnnými</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy18.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy18.py</a></td></tr>
<tr><td>19</td><td>sympy19.py</td><td>řešení kvadratické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy19.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy19.py</a></td></tr>
<tr><td>20</td><td>sympy20.py</td><td>řešení kvadratické rovnice, odlišná forma výstupu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy20.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy20.py</a></td></tr>
<tr><td>21</td><td>sympy21.py</td><td>řešení kvadratické rovnice se dvěma neznámými</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy21.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy21.py</a></td></tr>
<tr><td>22</td><td>sympy22.py</td><td>výpočet derivace polynomu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy22.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy22.py</a></td></tr>
<tr><td>23</td><td>sympy23.py</td><td>výpočet derivace složitějšího výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy23.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy23.py</a></td></tr>
<tr><td>24</td><td>sympy24.py</td><td>výpočet integrace polynomu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy24.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy24.py</a></td></tr>
<tr><td>25</td><td>sympy25.py</td><td>výpočet integrace složitějšího polynomu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy25.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy25.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>sympy26.py</td><td>symboly vs. proměnné</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy26.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy26.py</a></td></tr>
<tr><td>27</td><td>sympy27.py</td><td>reálné kořeny kvadratické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy27.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy27.py</a></td></tr>
<tr><td>28</td><td>sympy28.py</td><td>komplexní kořeny kvadratické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy28.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy28.py</a></td></tr>
<tr><td>29</td><td>sympy29.py</td><td>hledání kořenů kubické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy29.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy29.py</a></td></tr>
<tr><td>30</td><td>sympy30.py</td><td>kořeny polynomů vyšších stupňů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy30.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy30.py</a></td></tr>
<tr><td>31</td><td>sympy31.py</td><td>průchod nulovými body periodické funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy31.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy31.py</a></td></tr>
<tr><td>32</td><td>sympy32.py</td><td>vyhledání všech možných řešení</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy32.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy32.py</a></td></tr>
<tr><td>33</td><td>sympy33.py</td><td>vyhledání řešení pro funkci <i>sinc</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy33.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy33.py</a></td></tr>
<tr><td>34</td><td>sympy34.py</td><td>řešení nerovnosti</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy34.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy34.py</a></td></tr>
<tr><td>35</td><td>sympy35.py</td><td>složitější nerovnost s&nbsp;goniometrickou funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy35.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy35.py</a></td></tr>
<tr><td>36</td><td>sympy36.py</td><td>řešení dvojice nerovnic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy36.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy36.py</a></td></tr>
<tr><td>37</td><td>sympy37.py</td><td>složitější dvojice nerovnic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy37.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy37.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>38</td><td>sympy38.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy38.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy38.py</a></td></tr>
<tr><td>39</td><td>sympy39.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy39.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy39.py</a></td></tr>
<tr><td>40</td><td>sympy40.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy40.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy40.py</a></td></tr>
<tr><td>41</td><td>sympy41.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy41.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy41.py</a></td></tr>
<tr><td>42</td><td>sympy42.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy42.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy42.py</a></td></tr>
<tr><td>43</td><td>sympy43.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy43.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy43.py</a></td></tr>
<tr><td>44</td><td>sympy44.py</td><td>výpočet singularit, jichž je konečné množství</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy44.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy44.py</a></td></tr>
<tr><td>45</td><td>sympy45.py</td><td>výpočet singularit, jichž je nekonečné (spočetné) množství</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy45.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy45.py</a></td></tr>
<tr><td>46</td><td>sympy46.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy46.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy46.py</a></td></tr>
<tr><td>47</td><td>sympy47.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy47.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy47.py</a></td></tr>
<tr><td>48</td><td>sympy48.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy48.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy48.py</a></td></tr>
<tr><td>49</td><td>sympy49.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy49.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy49.py</a></td></tr>
<tr><td>50</td><td>sympy50.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy50.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy50.py</a></td></tr>
<tr><td>51</td><td>sympy51.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy51.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy51.py</a></td></tr>
<tr><td>52</td><td>sympy52.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy52.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy52.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>SymPy<br />
<a href="https://www.sympy.org/en/index.html">https://www.sympy.org/en/index.html</a>
</li>

<li>SymPy na PyPi<br />
<a href="https://pypi.org/project/sympy/">https://pypi.org/project/sympy/</a>
</li>

<li>mpmath<br />
<a href="https://mpmath.org/">https://mpmath.org/</a>
</li>

<li>mpmath na PyPi<br />
<a href="https://pypi.org/project/mpmath/">https://pypi.org/project/mpmath/</a>
</li>

<li>Symbolic Maths in Python<br />
<a href="https://alexandrugris.github.io/maths/2017/04/30/symbolic-maths-python.html">https://alexandrugris.github.io/maths/2017/04/30/symbolic-maths-python.html</a>
</li>

<li>SymPy shell<br />
<a href="https://live.sympy.org/">https://live.sympy.org/</a>
</li>

<li>Symbolic programming<br />
<a href="https://en.wikipedia.org/wiki/Symbolic_programming">https://en.wikipedia.org/wiki/Symbolic_programming</a>
</li>

<li>Symbolic language (programming)<br />
<a href="https://en.wikipedia.org/wiki/Symbolic_language_(programming)">https://en.wikipedia.org/wiki/Symbolic_language_(programming)</a>
</li>

<li>Computer algebra<br />
<a href="https://en.wikipedia.org/wiki/Computer_algebra">https://en.wikipedia.org/wiki/Computer_algebra</a>
</li>

<li>Common Lisp: A Gentle Introduction to Symbolic Computation<br />
<a href="https://www.cs.cmu.edu/~dst/LispBook/">https://www.cs.cmu.edu/~dst/LispBook/</a>
</li>

<li>List of computer algebra systems<br />
<a href="https://en.wikipedia.org/wiki/List_of_computer_algebra_systems">https://en.wikipedia.org/wiki/List_of_computer_algebra_systems</a>
</li>

<li>Polynom<br />
<a href="https://cs.wikipedia.org/wiki/Polynom">https://cs.wikipedia.org/wiki/Polynom</a>
</li>

<li>What is SimPy? How to run python simulations?<br />
<a href="https://divyas090909.medium.com/what-is-simpy-how-to-run-python-simulations-348736b50615">https://divyas090909.medium.com/what-is-simpy-how-to-run-python-simulations-348736b50615</a>
</li>

<li>SimPy: Simulating Real-World Processes With Python<br />
<a href="https://realpython.com/simpy-simulating-with-python/">https://realpython.com/simpy-simulating-with-python/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

