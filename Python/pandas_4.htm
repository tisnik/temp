<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovna Pandas: pokročilejší práce s datovými řadami (series)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovna Pandas: pokročilejší práce s datovými řadami (series)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve čtvrtém pokračování miniseriálu o knihovně Pandas dokončíme popis práce s datovými řadami neboli s typem Series. Zabývat se budeme především transformací dat, jejich filtrací a v neposlední řadě také se seskupováním dat podle zadaných kritérií.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Knihovna Pandas: pokročilejší práce s&nbsp;datovými řadami (series)</a></p>
<p><a href="#k02">2. Iterace přes všechny prvky datové řady</a></p>
<p><a href="#k03">3. Postupná aplikace vybrané funkce na všechny prvky datové řady</a></p>
<p><a href="#k04">4. Použití slovníku ve funkci mapy</a></p>
<p><a href="#k05">5. Transformace dat v&nbsp;datové řadě</a></p>
<p><a href="#k06">6. Vytvoření více sloupců s&nbsp;transformovanými daty</a></p>
<p><a href="#k07">7. Agregace informací z&nbsp;datové řady</a></p>
<p><a href="#k08">8. Použití jmen funkcí namísto jejich referencí v&nbsp;metodě <strong>Series.aggregate</strong></a></p>
<p><a href="#k09">9. Kombinace údajů ze dvou datových řad popř.&nbsp;datové řady a skalární hodnoty</a></p>
<p><a href="#k10">10. Výběr hodnot na základě zadané podmínky metodou <strong>Series.mask</strong></a></p>
<p><a href="#k11">*** 11. Vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>Series.mask</strong></a></p>
<p><a href="#k12">*** 12. Výběr hodnot na základě zadané podmínky metodou <strong>Series.where</strong></a></p>
<p><a href="#k13">*** 13. Vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>Series.where</strong></a></p>
<p><a href="#k14">*** 14. Skutečná filtrace dat kombinující <strong>Series.where</strong> a <strong>Series.dropna</strong></a></p>
<p><a href="#k15">*** 15. Alternativní způsob založený na kombinaci <strong>Series.mask</strong> a <strong>Series.dropna</strong></a></p>
<p><a href="#k16">*** 16. Jedna z&nbsp;variant metody <strong>groupby</strong> aplikovaná na datovou řadu</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Obsah následující části seriálu</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Knihovna Pandas: pokročilejší práce s&nbsp;datovými řadami (series)</h2>

<p>Ve čtvrtém pokračování miniseriálu o knihovně Pandas dokončíme popis práce
s&nbsp;datovými řadami neboli s&nbsp;typem <i>Series</i>. Zabývat se budeme
především transformací dat, jejich filtrací a v&nbsp;neposlední řadě také se
seskupováním dat podle zadaných kritérií. Připomeňme si, že tento datový typ
slouží v&nbsp;knihovně Pandas pro uložení jednoho sloupce hodnot, přičemž celá
datová řada může být pojmenována a současně mohou mít jednotlivé řádky datové
řady přiřazen index &ndash; v&nbsp;případě indexu se přitom nemusí jednat o
celé číslo (jako by tomu bylo u polí či seznamů), ale například o řetězec nebo
faktor resp.&nbsp;přesněji řečeno o <a
href="https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html">kategorii</a>
(což je poměrně často využíváno v&nbsp;praxi).</p>

<p>Většina dnes použitých demonstračních příkladů bude používat tento zdrojový
soubor s&nbsp;tabulkou:</p>

<pre>
Sep 2020  Sep 2019  Change    Language           Ratings   Changep
1         2         change    C                  15.95     +0.74
2         1         change    Java               13.48     -3.18
3         3                   Python             10.47     +0.59
4         4                   C++                7.11      +1.48
5         5                   C#                 4.58      +1.18
6         6                   Visual Basic       4.12      +0.83
7         7                   JavaScript         2.54      +0.41
8         9         change    PHP                2.49      +0.62
9         19        change    R                  2.37      +1.33
10        8         change    SQL                1.76      -0.19
11        14        change    Go                 1.46      +0.24
12        16        change    Swift              1.38      +0.28
13        20        change    Perl               1.30      +0.26
14        12        change    Assembly language  1.30      -0.08
15        15                  Ruby               1.24      +0.03
16        18        change    MATLAB             1.10      +0.04
17        11        change    Groovy             0.99      -0.52
18        33        change    Rust               0.92      +0.55
19        10        change    Objective-C        0.85      -0.99
20        24        change    Dart               0.77      +0.13
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Iterace přes všechny prvky datové řady</h2>

<p>Nejprve si ukažme, jakým způsobem je možné procházet všemi prvky datové
řady. K&nbsp;tomuto účelu slouží metoda nazvaná <strong>Series.items</strong>,
která v&nbsp;každé iteraci vrací dvojici (<i>tuple</i>) s&nbsp;indexem i
hodnotou příslušného prvku. Základní způsob použití je ukázán na dnešním prvním
demonstračním příkladu, který vypadá následovně:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu Series</i>
print(s)
&nbsp;
<i># iterace nad prvky rady</i>
for <strong>index</strong>, <strong>value</strong> in <strong>s.items()</strong>:
    print("Index: {:20}  Value: {:5.3}".format(index, value))
</pre>

<p>Výsledek získaný po spuštění tohoto příkladu:</p>

<p>Samotný datový rámec:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language                                                       
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>

<p>Jedna datová řada přečtená z&nbsp;datového rámce:</p>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<p>Výsledek průchodu všemi prvky datového rámce:</p>

<pre>
Index: C                     Value:  15.9
Index: Java                  Value:  13.5
Index: Python                Value:  10.5
Index: C++                   Value:  7.11
Index: C#                    Value:  4.58
Index: Visual Basic          Value:  4.12
Index: JavaScript            Value:  2.54
Index: PHP                   Value:  2.49
Index: R                     Value:  2.37
Index: SQL                   Value:  1.76
Index: Go                    Value:  1.46
Index: Swift                 Value:  1.38
Index: Perl                  Value:   1.3
Index: Assembly language     Value:   1.3
Index: Ruby                  Value:  1.24
Index: MATLAB                Value:   1.1
Index: Groovy                Value:  0.99
Index: Rust                  Value:  0.92
Index: Objective-C           Value:  0.85
Index: Dart                  Value:  0.77
</pre>

<p>Alternativně je možné namísto metody <strong>Series.items</strong> použít
metodu nazvanou <strong>Series.iteritems</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu Series</i>
print(s)
&nbsp;
<i># iterace nad prvky rady</i>
for index, value in <strong>s.iteritems()</strong>:
    print("Index: {:20}  Value: {:5.3}".format(index, value))
</pre>

<p><div class="rs-tip-major">Poznámka: výsledky jsou totožné s&nbsp;prvním
demonstračním příkladem, takže si je zde nemusíme uvádět.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Postupná aplikace vybrané funkce na všechny prvky datové řady</h2>

<p>Poměrně často se setkáme s&nbsp;nutností aplikovat nějakou funkci (postupně)
na všechny prvky datové řady. V&nbsp;knihovně Pandas k&nbsp;tomuto účelu slouží
metoda nazvaná <strong>Series.map</strong>, které se předá funkce či anonymní
funkce, jenž je následně volána pro jednotlivé prvky datové řady. Výsledkem je
nová datová řada &ndash; je tedy zvolen funkcionální přístup. V&nbsp;dalším
příkladu nahradíme hodnoty reprezentované v&nbsp;procentech za
podíly/poměry:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
s2 = <strong>s.map(lambda x: x/100.0)</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print("As ratios")
print(s2)
</pre>

<p>Výsledek &ndash; nová datová řada:</p>

<pre>
As ratios
Language
C                    0.1595
Java                 0.1348
Python               0.1047
C++                  0.0711
C#                   0.0458
Visual Basic         0.0412
JavaScript           0.0254
PHP                  0.0249
R                    0.0237
SQL                  0.0176
Go                   0.0146
Swift                0.0138
Perl                 0.0130
Assembly language    0.0130
Ruby                 0.0124
MATLAB               0.0110
Groovy               0.0099
Rust                 0.0092
Objective-C          0.0085
Dart                 0.0077
Name: Ratings, dtype: float64
</pre>

<p>Alternativně je možné namísto anonymní funkce předat referenci na funkci,
v&nbsp;našem konkrétním případě na metodu <strong>String.format</strong>
objektu <strong>string</strong> (první parametr <strong>self</strong> je tedy
naplněn automaticky):</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># formát hodnot v datové řadě</i>
s2 = <strong>s.map("Rating is {:4.1f} %".format)</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print("As ratings")
print(s2)
</pre>

<p>Po spuštění tohoto příkladu by se měl zobrazit obsah nové datové řady:</p>

<pre>
As ratings
Language
C                    Rating is 15.9 %
Java                 Rating is 13.5 %
Python               Rating is 10.5 %
C++                  Rating is  7.1 %
C#                   Rating is  4.6 %
Visual Basic         Rating is  4.1 %
JavaScript           Rating is  2.5 %
PHP                  Rating is  2.5 %
R                    Rating is  2.4 %
SQL                  Rating is  1.8 %
Go                   Rating is  1.5 %
Swift                Rating is  1.4 %
Perl                 Rating is  1.3 %
Assembly language    Rating is  1.3 %
Ruby                 Rating is  1.2 %
MATLAB               Rating is  1.1 %
Groovy               Rating is  1.0 %
Rust                 Rating is  0.9 %
Objective-C          Rating is  0.8 %
Dart                 Rating is  0.8 %
Name: Ratings, dtype: object
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Použití slovníku ve funkci mapy</h2>

<p>V&nbsp;případě, že metodě <strong>Series.map</strong> nepředáme funkci, ale
slovník, bude tento slovník použit pro přemapování prvků na nové hodnoty. Pokud
prvek ve slovníku nebude nalezen, vrátí se hodnota <strong>NaN</strong>. Ukažme
si jednoduchý příklad převzatý z&nbsp;oficiální dokumentace knihovny
<i>Pandas</i>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
import numpy as np
&nbsp;
<i># přečtení zdrojových dat</i>
s = pandas.Series(['cat', 'dog', np.nan, 'rabbit'])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<strong>mapping = {'cat': 'kitten',</strong>
           <strong>'dog': 'puppy'}</strong>
&nbsp;
<i># mapování hodnot</i>
s2 = <strong>s.map(mapping)</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print(s2)
</pre>

<p>Z&nbsp;výpisu je patrné, jak se původní prvky přemapovaly na prvky nové,
přičemž u posledního prvku nebylo mapování nalezeno, takže se vrátila hodnota
NaN:</p>

<pre>
0       cat
1       dog
2       NaN
3    rabbit
dtype: object
&nbsp;
0    kitten
1     puppy
2       NaN
3       NaN
dtype: object
</pre>

<p>Celý příklad lze samozřejmě zkrátit a zapsat mapu přímo do volání metody
<strong>Series.map</strong>, například následujícím způsobem:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
import numpy as np
&nbsp;
<i># přečtení zdrojových dat</i>
s = pandas.Series(['cat', 'dog', np.nan, 'rabbit'])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># mapování hodnot</i>
s2 = <strong>s.map({'cat': 'kitten',</strong>
            <strong>'dog': 'puppy'})</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print(s2)
</pre>

<p>Výsledek by měl být totožný s&nbsp;předchozím příkladem:</p>

<pre>
0       cat
1       dog
2       NaN
3    rabbit
dtype: object
&nbsp;
0    kitten
1     puppy
2       NaN
3       NaN
dtype: object
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Transformace dat v&nbsp;datové řadě</h2>

<p>Kromě metody <strong>Series.map</strong> lze použít i obecnější metodu
<strong>Series.transform</strong>, která taktéž slouží k&nbsp;transformaci
údajů v&nbsp;datové řadě. Ukažme si nejdříve použití této metody, které vychází
z&nbsp;předchozích demonstračních příkladů:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
s2 = <strong>s.transform(lambda x: x/100.0)</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print("As ratios")
print(s2)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
Sep 2020  Sep 2019  Change  Ratings  Changep
Language                                                       
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
&nbsp;
In percents
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
&nbsp;
As ratios
Language
C                    0.1595
Java                 0.1348
Python               0.1047
C++                  0.0711
C#                   0.0458
Visual Basic         0.0412
JavaScript           0.0254
PHP                  0.0249
R                    0.0237
SQL                  0.0176
Go                   0.0146
Swift                0.0138
Perl                 0.0130
Assembly language    0.0130
Ruby                 0.0124
MATLAB               0.0110
Groovy               0.0099
Rust                 0.0092
Objective-C          0.0085
Dart                 0.0077
Name: Ratings, dtype: float64
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vytvoření více sloupců s&nbsp;transformovanými daty</h2>

<p>Ve skutečnosti mohou být transformace obecnější a můžeme díky nim vytvořit
z&nbsp;datové řady datový rámec s&nbsp;větším množstvím sloupců. Transformace
může vypadat následovně:</p>

<pre>
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
s2 = s.transform([lambda x: x, lambda x: x/100.0])
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že obě anonymní funkce
jsou zapsány v&nbsp;seznamu, tedy uvnitř hranatých závorek.</div></p>

<p>Výsledkem bude nikoli jeden sloupec (tedy klasická datová řada), ale sloupce
dva, které sdílí společný index:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
s2 = <strong>s.transform([lambda x: x, lambda x: x/100.0])</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print("In percents and also as ratios")
print(s2)
</pre>

<p>Výsledek bude vypadat následovně:</p>

<pre>
In percents and also as ratios
                   &lt;lambda&gt;  &lt;lambda&gt;
Language                             
C                     15.95    0.1595
Java                  13.48    0.1348
Python                10.47    0.1047
C++                    7.11    0.0711
C#                     4.58    0.0458
Visual Basic           4.12    0.0412
JavaScript             2.54    0.0254
PHP                    2.49    0.0249
R                      2.37    0.0237
SQL                    1.76    0.0176
Go                     1.46    0.0146
Swift                  1.38    0.0138
Perl                   1.30    0.0130
Assembly language      1.30    0.0130
Ruby                   1.24    0.0124
MATLAB                 1.10    0.0110
Groovy                 0.99    0.0099
Rust                   0.92    0.0092
Objective-C            0.85    0.0085
Dart                   0.77    0.0077
</pre>

<p>Namísto anonymních funkcí nám samozřejmě nic nebrání použít již existující
(neanonymní) funkci, například <strong>numpy.round</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp; import pandas
import numpy as np
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
s2 = <strong>s.transform([lambda x: x, lambda x: x/100.0, np.round])</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print("In percents and also as ratios")
print(s2)
</pre>

<p>Opět si ukažme výsledek:</p>

<pre>
In percents and also as ratios
                   &lt;lambda&gt;  &lt;lambda&gt;  round_
Language                                     
C                     15.95    0.1595    16.0
Java                  13.48    0.1348    13.0
Python                10.47    0.1047    10.0
C++                    7.11    0.0711     7.0
C#                     4.58    0.0458     5.0
Visual Basic           4.12    0.0412     4.0
JavaScript             2.54    0.0254     3.0
PHP                    2.49    0.0249     2.0
R                      2.37    0.0237     2.0
SQL                    1.76    0.0176     2.0
Go                     1.46    0.0146     1.0
Swift                  1.38    0.0138     1.0
Perl                   1.30    0.0130     1.0
Assembly language      1.30    0.0130     1.0
Ruby                   1.24    0.0124     1.0
MATLAB                 1.10    0.0110     1.0
Groovy                 0.99    0.0099     1.0
Rust                   0.92    0.0092     1.0
Objective-C            0.85    0.0085     1.0
Dart                   0.77    0.0077     1.0
</pre>

<p>Dokonce můžeme potřebnou transformační funkci předat formou jména (řetězce),
což může být užitečné při tvorbě těch aplikací, které umožňují výběr funkce
přes uživatelské rozhraní, přečtení funkce z&nbsp;konfiguračního souboru
atd.:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># transformace řady</i>
s2 = <strong>s.transform(["round"])</strong>
&nbsp;
<i># tisk obsahu nové datové řady</i>
print("Rounded")
print(s2)
</pre>

<p>Nyní bude výsledek vypadat takto:</p>

<pre>
Rounded
                   round
Language                
C                   16.0
Java                13.0
Python              10.0
C++                  7.0
C#                   5.0
Visual Basic         4.0
JavaScript           3.0
PHP                  2.0
R                    2.0
SQL                  2.0
Go                   1.0
Swift                1.0
Perl                 1.0
Assembly language    1.0
Ruby                 1.0
MATLAB               1.0
Groovy               1.0
Rust                 1.0
Objective-C          1.0
Dart                 1.0
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Agregace informací z&nbsp;datové řady</h2>

<p>Další velmi často vyžadovanou operací je agregace informací z&nbsp;datové
řady. Agregací se myslí například nalezení největšího prvku, výpočet průměru,
součtu (sumy) či součinu (produktu) všech prvků atd. Výsledkem přitom bude nová
datová řada. Podívejme se nyní na příklad, který možnosti agregace informací
dobře ilustruje:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
import numpy as np
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># agregace výsledků</i>
results = <strong>s.aggregate([np.min, np.max, np.sum, np.mean])</strong>
&nbsp;
<i># tisk výsledku</i>
print("Results")
print(results)
</pre>

<p>Po spuštění by se měla vypsat nová datová řada s&nbsp;minimální a maximální
nalezenou hodnotou, se součtem prvků a taktéž s&nbsp;jejich průměrem:</p>

<pre>
Results
min      0.770
max     15.950
sum     76.180
mean     3.809
Name: Ratings, dtype: float64
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Použití jmen funkcí namísto jejich referencí v&nbsp;metodě <strong>Series.aggregate</strong></h2>

<p>V&nbsp;metodě <strong>Series.aggregate</strong> je možné, ostatně podobně
jako tomu bylo i v&nbsp;případě metody <strong>Series.transform</strong>,
použít namísto anonymních funkcí či referencí na pojmenované funkce i přímo
jména funkcí reprezentovaná řetězcem. Předchozí demonstrační příklad by tedy
bylo možné přepsat i tímto způsobem:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># agregace výsledků</i>
results = <strong>s.aggregate(["min", "max", "sum", "mean"])</strong>
&nbsp;
<i># tisk výsledku</i>
print("Results")
print(results)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
Results
min      0.770
max     15.950
sum     76.180
mean     3.809
Name: Ratings, dtype: float64
</pre>

<p>Namísto metody <strong>Series.aggregate</strong> můžete použít i zkrácené
jméno této metody <strong>Series.agg</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print("In percents")
print(s)
print()
&nbsp;
<i># agregace výsledků</i>
results = <strong>s.agg(["min", "max", "sum", "mean"])</strong>
&nbsp;
<i># tisk výsledku</i>
print("Results")
print(results)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
Results
amin     0.770
amax    15.950
sum     76.180
mean     3.809
Name: Ratings, dtype: float64
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Kombinace údajů ze dvou datových řad popř.&nbsp;datové řady a skalární hodnoty</h2>

<p>Další užitečná metoda určená pro zpracování hodnot v&nbsp;datových řadách je
metoda nazvaná <strong>Series.combine</strong>. Tato metoda umožňuje
zkombinovat prvky dvou řad (pokud jsou jejich indexy kompatibilní)
popř.&nbsp;prvky jedné řady se skalární hodnotou. Ukažme si nyní druhý zmíněný
případ, kdy zkombinujeme (postupně) hodnotu prvků z&nbsp;datové řady
s&nbsp;hodnotou 2 resp.&nbsp;10, přičemž kombinace bude provedena funkcemi
<strong>min</strong> a <strong>max</strong>. V&nbsp;prvním případě tedy
nahradíme ty prvky z&nbsp;řady, které jsou větší než 10 hodnotou 10 a následně
ty prvky z&nbsp;řady, které jsou menší než 2 právě hodnotou 2:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># omezení hodnot</i>
results = <strong>s.combine(10, min)</strong>
&nbsp;
<i># tisk výsledku</i>
print("Bound (max)")
print(results)
&nbsp;
<i># omezení hodnot</i>
results = <strong>results.combine(2, max)</strong>
&nbsp;
<i># tisk výsledku</i>
print("Bound (min)")
print(results)
</pre>

<p>Postupná tvorba výsledné datové řady je ukázána na výpisu získaného po
spuštění tohoto demonstračního příkladu:</p>

<p>Obsah původní datové řady:</p>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<p>Nahrazení prvků s&nbsp;hodnotou vyšší než 10 za hodnotu 10:</p>

<pre>
Bound (max)
Language
C                    10.00
Java                 10.00
Python               10.00
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<p>Nahrazení prvků s&nbsp;hodnotou menší než 2 za hodnotu 2:</p>

<pre>
Bound (min)
Language
C                    10.00
Java                 10.00
Python               10.00
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   2.00
Go                    2.00
Swift                 2.00
Perl                  2.00
Assembly language     2.00
Ruby                  2.00
MATLAB                2.00
Groovy                2.00
Rust                  2.00
Objective-C           2.00
Dart                  2.00
Name: Ratings, dtype: float64
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Výběr hodnot na základě zadané podmínky metodou <strong>Series.mask</strong></h2>

<p>Mnohdy je nutné vybrat pouze některé hodnoty z&nbsp;datové řady, a to na
základě určité podmínky. Knihovna Pandas nabízí více způsobů řešení tohoto
požadavku. Můžeme například použít metodu nazvanou
<strong>Series.mask</strong>, v&nbsp;níž lze podmínku pro výběr prvků zapsat
způsobem:</p>

<pre>
<i># maskování hodnot</i>
results = <strong>results.mask(s &lt; 2)</strong>
</pre>

<p>Tato metoda vrátí novou datovou řadu, v&nbsp;níž budou prvky odpovídající
zadané podmínce <i>maskovány</i> hodnotou <strong>NA</strong> nebo
<strong>NaN</strong>, kterou je možné později odstranit:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
results = <strong>s.mask(s &gt; 10)</strong>
&nbsp;
<i># tisk výsledku</i>
print("Masked (max)")
print(results)
&nbsp;
<i># maskování hodnot</i>
results = <strong>results.mask(s &lt; 2)</strong>
&nbsp;
<i># tisk výsledku</i>
print("Masked (min)")
print(results)
</pre>

<p>Výsledky dvojí aplikace masky postavené na podmínce budou vypadat takto:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language                                                       
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>

<p>Původní řada:</p>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<p>Maska pro prvky větší než 10:</p>

<pre>
Masked (max)
Language
C                     NaN
Java                  NaN
Python                NaN
C++                  7.11
C#                   4.58
Visual Basic         4.12
JavaScript           2.54
PHP                  2.49
R                    2.37
SQL                  1.76
Go                   1.46
Swift                1.38
Perl                 1.30
Assembly language    1.30
Ruby                 1.24
MATLAB               1.10
Groovy               0.99
Rust                 0.92
Objective-C          0.85
Dart                 0.77
Name: Ratings, dtype: float64
</pre>

<p>Druhá maska pro prvky menší než 2:</p>

<pre>
Masked (min)
Language
C                     NaN
Java                  NaN
Python                NaN
C++                  7.11
C#                   4.58
Visual Basic         4.12
JavaScript           2.54
PHP                  2.49
R                    2.37
SQL                   NaN
Go                    NaN
Swift                 NaN
Perl                  NaN
Assembly language     NaN
Ruby                  NaN
MATLAB                NaN
Groovy                NaN
Rust                  NaN
Objective-C           NaN
Dart                  NaN
Name: Ratings, dtype: float64
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>Series.mask</strong></h2>

<p></p>

<pre>
<i># maskování hodnot</i>
s.mask(s &lt; 2, inplace=True)
</pre>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
<strong>s.mask(s &gt; 10, inplace=True)</strong>
&nbsp;
<i># tisk výsledku</i>
print("Masked (max)")
print(s)
&nbsp;
<i># maskování hodnot</i>
s.mask(s &lt; 2, inplace=True)
&nbsp;
<i># tisk výsledku</i>
print("Masked (min)")
print(s)
</pre>

<p></p>

<pre>
<i># maskování hodnot</i>
<strong>s.mask(s &gt; 10, inplace=False)</strong>
</pre>

<p></p>

<pre>
Masked (max)
Language
C                     NaN
Java                  NaN
Python                NaN
C++                  7.11
C#                   4.58
Visual Basic         4.12
JavaScript           2.54
PHP                  2.49
R                    2.37
SQL                  1.76
Go                   1.46
Swift                1.38
Perl                 1.30
Assembly language    1.30
Ruby                 1.24
MATLAB               1.10
Groovy               0.99
Rust                 0.92
Objective-C          0.85
Dart                 0.77
Name: Ratings, dtype: float64
&nbsp;
Masked (min)
Language
C                     NaN
Java                  NaN
Python                NaN
C++                  7.11
C#                   4.58
Visual Basic         4.12
JavaScript           2.54
PHP                  2.49
R                    2.37
SQL                   NaN
Go                    NaN
Swift                 NaN
Perl                  NaN
Assembly language     NaN
Ruby                  NaN
MATLAB                NaN
Groovy                NaN
Rust                  NaN
Objective-C           NaN
Dart                  NaN
Name: Ratings, dtype: float64
</pre>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
<strong>s.mask(s &gt; 10, inplace=False)</strong>
&nbsp;
<i># tisk výsledku</i>
print("Masked (max)")
print(s)
&nbsp;
<i># maskování hodnot</i>
s.mask(s &lt; 2, inplace=False)
&nbsp;
<i># tisk výsledku</i>
print("Masked (min)")
print(s)
</pre>

<p></p>

<pre>
Masked (max)
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
&nbsp;
Masked (min)
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Výběr hodnot na základě zadané podmínky metodou <strong>Series.where</strong></h2>

<p></p>

<pre>
<i># maskování hodnot</i>
results = <strong>results.where(s &gt; 2, "Nic moc")</strong>
</pre>

<p></p>

<pre>
<i># maskování hodnot</i>
results = <strong>s.where(s &lt; 10, "Dobře")</strong>
</pre>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
results = <strong>s.where(s &lt; 10, "Dobře")</strong>
&nbsp;
<i># tisk výsledku</i>
print(results)
&nbsp;
<i># maskování hodnot</i>
results = <strong>results.where(s &gt; 2, "Nic moc")</strong>
&nbsp;
<i># tisk výsledku</i>
print(results)
</pre>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<pre>
Language
C                    Dobře
Java                 Dobře
Python               Dobře
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                   1.3
Assembly language      1.3
Ruby                  1.24
MATLAB                 1.1
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: object
</pre>

<pre>
Language
C                      Dobře
Java                   Dobře
Python                 Dobře
C++                     7.11
C#                      4.58
Visual Basic            4.12
JavaScript              2.54
PHP                     2.49
R                       2.37
SQL                  Nic moc
Go                   Nic moc
Swift                Nic moc
Perl                 Nic moc
Assembly language    Nic moc
Ruby                 Nic moc
MATLAB               Nic moc
Groovy               Nic moc
Rust                 Nic moc
Objective-C          Nic moc
Dart                 Nic moc
Name: Ratings, dtype: object
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>Series.where</strong></h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
<strong>s.where(s &lt; 10, "Dobře", inplace=True)</strong>
&nbsp;
<i># tisk výsledku</i>
print(s)
</pre>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language                                                       
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<pre>
Language
C                    Dobře
Java                 Dobře
Python               Dobře
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                   1.3
Assembly language      1.3
Ruby                  1.24
MATLAB                 1.1
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: object
</pre>


<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
<strong>s.where(s &lt; 10, "Dobře", inplace=False)</strong>
&nbsp;
<i># tisk výsledku</i>
print(s)
</pre>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language                                                       
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Skutečná filtrace dat kombinující <strong>Series.where</strong> a <strong>Series.dropna</strong></h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
<strong>results = s.where(s &lt; 10)</strong>
&nbsp;
<i># tisk výsledku</i>
print(results)
&nbsp;
<strong>results = results.dropna()</strong>
&nbsp;
<i># tisk nového výsledku</i>
print(results)
</pre>

<p></p>

<pre>
Language
C                     NaN
Java                  NaN
Python                NaN
C++                  7.11
C#                   4.58
Visual Basic         4.12
JavaScript           2.54
PHP                  2.49
R                    2.37
SQL                  1.76
Go                   1.46
Swift                1.38
Perl                 1.30
Assembly language    1.30
Ruby                 1.24
MATLAB               1.10
Groovy               0.99
Rust                 0.92
Objective-C          0.85
Dart                 0.77
Name: Ratings, dtype: float64
</pre>

<p></p>

<pre>
Language
C++                  7.11
C#                   4.58
Visual Basic         4.12
JavaScript           2.54
PHP                  2.49
R                    2.37
SQL                  1.76
Go                   1.46
Swift                1.38
Perl                 1.30
Assembly language    1.30
Ruby                 1.24
MATLAB               1.10
Groovy               0.99
Rust                 0.92
Objective-C          0.85
Dart                 0.77
Name: Ratings, dtype: float64
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Alternativní způsob založený na kombinaci <strong>mask</strong> a <strong>dropna</strong></h2>

<pre>
<i># maskování hodnot</i>
results = <strong>s.mask(s &lt; 10)</strong>
&nbsp;
results = <strong>results.dropna()</strong>
</pre>

<pre>
<i># maskování hodnot</i>
results = <strong>s.mask(s &lt; 10).dropna()</strong>
</pre>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
results = <strong>s.mask(s &lt; 10)</strong>
&nbsp;
<i># tisk výsledku</i>
print(results)
&nbsp;
results = <strong>results.dropna()</strong>
&nbsp;
<i># tisk nového výsledku</i>
print(results)
</pre>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language                                                       
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                   7.11
C#                    4.58
Visual Basic          4.12
JavaScript            2.54
PHP                   2.49
R                     2.37
SQL                   1.76
Go                    1.46
Swift                 1.38
Perl                  1.30
Assembly language     1.30
Ruby                  1.24
MATLAB                1.10
Groovy                0.99
Rust                  0.92
Objective-C           0.85
Dart                  0.77
Name: Ratings, dtype: float64
</pre>

<pre>
Language
C                    15.95
Java                 13.48
Python               10.47
C++                    NaN
C#                     NaN
Visual Basic           NaN
JavaScript             NaN
PHP                    NaN
R                      NaN
SQL                    NaN
Go                     NaN
Swift                  NaN
Perl                   NaN
Assembly language      NaN
Ruby                   NaN
MATLAB                 NaN
Groovy                 NaN
Rust                   NaN
Objective-C            NaN
Dart                   NaN
Name: Ratings, dtype: float64
</pre>

<pre>
Language
C         15.95
Java      13.48
Python    10.47
Name: Ratings, dtype: float64
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Jedna z&nbsp;variant metody <strong>groupby</strong> aplikovaná na datovou řadu</h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># pro jistotu si datový rámec zobrazíme</i>
print(df)
&nbsp;
<i># konstrukce datové struktury Series (datové řady) z datového rámce</i>
s = pandas.Series(df["Ratings"])
&nbsp;
<i># tisk obsahu původní datové řady</i>
print(s)
print()
&nbsp;
<i># maskování hodnot</i>
results = <strong>s.groupby(s &gt; 10)</strong>
&nbsp;
<i># tisk výsledku</i>
print(results.mean())
</pre>

<pre>
Ratings
False     2.134118
True     13.300000
Name: Ratings, dtype: float64
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>

<pre>
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Obsah následující části seriálu</h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 a nejnovější stabilní verzi knihovny Pandas byly uloženy do Git
repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>data_frame_info_1.py</td><td>výpis obsahu datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py</a></td></tr>
<tr><td> 2</td><td>data_frame_info_2.py</td><td>výpis prvních pěti řádků z&nbsp;datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py</a></td></tr>
<tr><td> 3</td><td>data_frame_info_3.py</td><td>výpis informace o typech sloupců v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py</a></td></tr>
<tr><td> 4</td><td>data_frame_info_4.py</td><td>výpis uspořádaného seznamu jmen všech sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py</a></td></tr>
<tr><td> 5</td><td>data_frame_info_5.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py</a></td></tr>
<tr><td> 6</td><td>data_frame_info_6.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py</a></td></tr>
<tr><td> 7</td><td>data_frame_info_7.py</td><td>popis os, počtu dimenzí, tvaru a velikosti datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py</a></td></tr>
<tr><td> 8</td><td>data_frame_info_8.py</td><td>základní statistické informace o datech uložených v&nbsp;rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py</a></td></tr>
<tr><td> 9</td><td>data_frame_info_9.py</td><td>výsledkem metody <strong>info</strong> je nový datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>plot_kafka_lags.py</td><td>zobrazení jednoduchého grafu bez použití knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py</a></td></tr>
<tr><td>11</td><td>plot_kafka_lags_pandas.py</td><td>zobrazení jednoduchého grafu s&nbsp;použitím knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py</a></td></tr>
<tr><td>12</td><td>plot_kafka_lags_pandas_2.py</td><td>snazší způsob vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py</a></td></tr>
<tr><td>13</td><td>plot_kafka_lags_pandas_sma_3.py</td><td>přidání klouzavého průměru do grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py</a></td></tr>
<tr><td>14</td><td>plot_kafka_lags_pandas_sma_3_.py</td><td>vylepšení předchozího příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py</a></td></tr>
<tr><td>15</td><td>plot_kafka_lags_pandas_sma_10.py</td><td>klouzavý průměr přes deset hodnot</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py</a></td></tr>
<tr><td>16</td><td>plot_benchmark_results_line_chart.py</td><td>liniový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py</a></td></tr>
<tr><td>17</td><td>plot_benchmark_results_bar_chart_1.py</td><td>sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py</a></td></tr>
<tr><td>18</td><td>plot_benchmark_results_bar_chart_2.py</td><td>výběr části datového rámce při vykreslování grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py</a></td></tr>
<tr><td>19</td><td>plot_benchmark_results_bar_chart_3.py</td><td>zobecnění předchozího příkladu &ndash; zpracování numerických dat ve všech sloupcích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>20</td><td>check_types_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py</a></td></tr>
<tr><td>21</td><td>check_types_2.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_2.py</a></td></tr>
<tr><td>22</td><td>check_types_3.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_3.py</a></td></tr>
<tr><td>23</td><td>check_types_4.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_4.py</a></td></tr>
<tr><td>24</td><td>check_types_5.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_5.py</a></td></tr>
<tr><td>25</td><td>opulent_pandas_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_1.py</a></td></tr>
<tr><td>26</td><td>opulent_pandas_2.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_2.py</a></td></tr>
<tr><td>27</td><td>opulent_pandas_3.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_3.py</a></td></tr>
<tr><td>28</td><td>opulent_pandas_4.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>29</td><td>series_01.py</td><td>konstrukce datové řady z n-tice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_01.py</a></td></tr>
<tr><td>30</td><td>series_02.py</td><td>konstrukce datové řady z n-tice, specifikace indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_02.py</a></td></tr>
<tr><td>31</td><td>series_03.py</td><td>konstrukce datové řady generátorem, specifikace indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_03.py</a></td></tr>
<tr><td>32</td><td>series_04.py</td><td>příliš malý počet indexů předaných konstruktoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_04.py</a></td></tr>
<tr><td>33</td><td>series_05.py</td><td>konstrukce datové řady ze slovníku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_05.py</a></td></tr>
<tr><td>34</td><td>series_06.py</td><td>konstrukce datové řady ze slovníku, vliv pořadí klíčů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_06.py</a></td></tr>
<tr><td>35</td><td>series_07.py</td><td>konstrukce datové řady z&nbsp;datového typu OrderedDict</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_07.py</a></td></tr>
<tr><td>36</td><td>series_08.py</td><td>vytvoření nové datové řady z&nbsp;řady stávající &ndash; výběr prvků na základě jejich indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_08.py</a></td></tr>
<tr><td>37</td><td>series_09.py</td><td>základní statistické informace o prvcích uložených v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_09.py</a></td></tr>
<tr><td>38</td><td>series_10.py</td><td>vektorové operace nad všemi prvky datové řady</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_10.py</a></td></tr>
<tr><td>39</td><td>series_11.py</td><td>vektorové operace nad všemi prvky datové řady &ndash; predikáty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_11.py</a></td></tr>
<tr><td>40</td><td>series_12.py</td><td>vektorové operace nad dvojicí datových řad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_12.py</a></td></tr>
<tr><td>41</td><td>series_13.py</td><td>výběr prvků na základě podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_13.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_13.py</a></td></tr>
<tr><td>42</td><td>series_14.py</td><td>výběr prvků na základě podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_14.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_14.py</a></td></tr>
<tr><td>43</td><td>series_15.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_15.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_15.py</a></td></tr>
<tr><td>44</td><td>series_16.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_16.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_16.py</a></td></tr>
<tr><td>45</td><td>series_17.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_17.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_17.py</a></td></tr>
<tr><td>46</td><td>series_18.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_18.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_18.py</a></td></tr>
<tr><td>47</td><td>series_19.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_19.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_19.py</a></td></tr>
<tr><td>48</td><td>series_20.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>NaN</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_20.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_20.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>49</td><td>plot_series_01.py</td><td>vykreslení průběhu funkce sin, hodnoty jsou uloženy v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_01.py</a></td></tr>
<tr><td>50</td><td>plot_series_02.py</td><td>odlišný typ grafu s&nbsp;vyplněnou plochou pod průběhem funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_02.py</a></td></tr>
<tr><td>51</td><td>plot_series_03.py</td><td>sloupcový diagram s&nbsp;vertikálně orientovanými sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_03.py</a></td></tr>
<tr><td>52</td><td>plot_series_04.py</td><td>sloupcový diagram s&nbsp;horizontálně orientovanými sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_04.py</a></td></tr>
<tr><td>53</td><td>plot_series_05.py</td><td>graf s&nbsp;KDE &ndash; kernel density estimation</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_05.py</a></td></tr>
<tr><td>54</td><td>plot_series_06.py</td><td>vykreslení koláčového grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_06.py</a></td></tr>
<tr><td>55</td><td>plot_series_07.py</td><td>použití metody <strong>Series.map</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_07.py</a></td></tr>
<tr><td>56</td><td>plot_series_08.py</td><td>vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_08.py</a></td></tr>
<tr><td>57</td><td>plot_series_09.py</td><td>vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_09.py</a></td></tr>
<tr><td>58</td><td>plot_series_10.py</td><td>Gaussovské vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_10.py</a></td></tr>
<tr><td>59</td><td>plot_series_11.py</td><td>vykreslení tří průběhů do jediného grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_11.py</a></td></tr>
<tr><td>60</td><td>plot_series_12.py</td><td>vykreslení tří podgrafů do jednoho grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_12.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>series_21_map.py</td><td>postupná aplikace vybrané funkce na všechny prvky datové řady (lambda)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_21_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_21_map.py</a></td></tr>
<tr><td>62</td><td>series_22_map.py</td><td>postupná aplikace vybrané funkce na všechny prvky datové řady (reference na funkci)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_22_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_22_map.py</a></td></tr>
<tr><td>63</td><td>series_23_map.py</td><td>použití slovníku ve funkci mapy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_23_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_23_map.py</a></td></tr>
<tr><td>64</td><td>series_24_map.py</td><td>použití slovníku ve funkci mapy (zkrácená varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_24_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_24_map.py</a></td></tr>
<tr><td>65</td><td>series_25_transform.py</td><td>transformace dat v&nbsp;datové řadě s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_25_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_25_transform.py</a></td></tr>
<tr><td>66</td><td>series_26_transform.py</td><td>vytvoření více sloupců s&nbsp;transformovanými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_26_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_26_transform.py</a></td></tr>
<tr><td>67</td><td>series_27_transform.py</td><td>vytvoření více sloupců s&nbsp;transformovanými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_27_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_27_transform.py</a></td></tr>
<tr><td>68</td><td>series_28_transform.py</td><td>použití jmen funkcí ve formě řetězců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_28_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_28_transform.py</a></td></tr>
<tr><td>69</td><td>series_29_agg.py</td><td>agregace informací z&nbsp;datové řady: metoda <strong>agg</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_29_agg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_29_agg.py</a></td></tr>
<tr><td>70</td><td>series_30_agg.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>agg</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_30_agg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_30_agg.py</a></td></tr>
<tr><td>71</td><td>series_31_aggregate.py</td><td>agregace informací z&nbsp;datové řady: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_31_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_31_aggregate.py</a></td></tr>
<tr><td>72</td><td>series_32_aggregate.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_32_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_32_aggregate.py</a></td></tr>
<tr><td>73</td><td>series_33_combine.py</td><td>kombinace údajů ze dvou datových řad popř.&nbsp;datové řady a skalární hodnoty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_33_combine.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_33_combine.py</a></td></tr>
<tr><td>74</td><td>series_34_mask.py</td><td>výběr hodnot na základě zadané podmínky metodou <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_34_mask.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_34_mask.py</a></td></tr>
<tr><td>75</td><td>series_35_mask_inplace_true.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_35_mask_inplace_true.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_35_mask_inplace_true.py</a></td></tr>
<tr><td>76</td><td>series_36_mask_inplace_false.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_36_mask_inplace_false.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_36_mask_inplace_false.py </a></td></tr>
<tr><td>77</td><td>series_37_where.py</td><td>výběr hodnot na základě zadané podmínky metodou <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_37_where.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_37_where.py</a></td></tr>
<tr><td>78</td><td>series_38_where_inplace_true.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_38_where_inplace_true.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_38_where_inplace_true.py</a></td></tr>
<tr><td>79</td><td>series_39_where_inplace_false.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_39_where_inplace_false.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_39_where_inplace_false.py</a></td></tr>
<tr><td>80</td><td>series_40_where_drop.py</td><td>skutečná filtrace dat kombinující <strong>where</strong> a <strong>dropna</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_40_where_drop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_40_where_drop.py</a></td></tr>
<tr><td>81</td><td>series_41_mask_drop.py</td><td>alternativní způsob založený na kombinaci <strong>mask</strong> a <strong>dropna</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_41_mask_drop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_41_mask_drop.py</a></td></tr>
<tr><td>82</td><td>series_42_group_by.py</td><td>jedna z&nbsp;variant metody <strong>groupby</strong> aplikovaná na datovou řadu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_42_group_by.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_42_group_by.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>83</td><td>series_items.py</td><td>iterace přes všechny prvky datové řady založená na metodě <strong>items</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_items.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_items.py</a></td></tr>
<tr><td>84</td><td>series_iteritems.py</td>iterace přes všechny prvky datové řady založená na metodě <strong>iteritems</strong></td><td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_iteritems.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_iteritems.py</a></td></tr>
</table>

<p>Některé demonstrační příklady načítají následující soubory s&nbsp;daty:</p>

<table>
<tr><th>#</th><th>Datový soubor</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td>1</td><td>integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv</a></td></tr>
<tr><td>2</td><td>missing_integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly, z&nbsp;nichž některé chybí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv</a></td></tr>
<tr><td>3</td><td>timestamps.csv</td><td>tabulka s&nbsp;časovými údaji</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv</a></td></tr>
<tr><td>4</td><td>custom_timestamps.csv</td><td>tabulka s&nbsp;časovými údaji používajícími nestandardní formát</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv</a></td></tr>
<tr><td>5</td><td>denni_kurz.txt</td><td>semistrukturovaný soubor s&nbsp;nestandardními oddělovači</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt</a></td></tr>
<tr><td>6</td><td>tiobe.tsv</td><td>data získaná ze stránek Tiobe indexu ve formátu TSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv</a></td></tr>
<tr><td>7</td><td>tiobe.txt</td><td>data získaná ze stránek Tiobe indexu v&nbsp;textovém formátu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt</a></td></tr>
<tr><td>8</td><td>benchmarks1.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv</a></td></tr>
<tr><td>9</td><td>benchmarks2.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Plotting with matplotlib<br />
<a href="https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html">https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html</a>
</li>

<li>Plot With Pandas: Python Data Visualization for Beginners<br />
<a href="https://realpython.com/pandas-plot-python/">https://realpython.com/pandas-plot-python/</a>
</li>

<li>Pandas Dataframe: Plot Examples with Matplotlib and Pyplot<br />
<a href="https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot">https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot</a>
</li>

<li>Opulent-Pandas na PyPi<br />
<a href="https://pypi.org/project/opulent-pandas/">https://pypi.org/project/opulent-pandas/</a>
</li>

<li>pandas_validator na PyPi<br />
<a href="https://pypi.org/project/pandas_validator/">https://pypi.org/project/pandas_validator/</a>
</li>

<li>pandas-validator (dokumentace)<br />
<a href="https://pandas-validator.readthedocs.io/en/latest/">https://pandas-validator.readthedocs.io/en/latest/</a>
</li>

<li>7 Best Python Libraries for Validating Data<br />
<a href="https://www.yeahhub.com/7-best-python-libraries-validating-data/">https://www.yeahhub.com/7-best-python-libraries-validating-data/</a>
</li>

<li>Universally unique identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">https://en.wikipedia.org/wiki/Universally_unique_identifier</a>
</li>

<li>Nullable integer data type<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html">https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html</a>
</li>

<li>pandas.read_csv<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html</a>
</li>

<li>How to define format when using pandas to_datetime?<br />
<a href="https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime">https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime</a>
</li>

<li>Pandas : skip rows while reading csv file to a Dataframe using read_csv() in Python<br />
<a href="https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/">https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/</a>
</li>

<li>Skip rows during csv import pandas<br />
<a href="https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas">https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas</a>
</li>

<li>Denni kurz<br />
<a href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>
</li>

<li>UUID objects according to RFC 4122 (knihovna pro Python)<br />
<a href="https://docs.python.org/3.5/library/uuid.html#uuid.uuid4">https://docs.python.org/3.5/library/uuid.html#uuid.uuid4</a>
</li>

<li>Object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Object_identifier">https://en.wikipedia.org/wiki/Object_identifier</a>
</li>

<li>Digital object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Digital_object_identifier">https://en.wikipedia.org/wiki/Digital_object_identifier</a>
</li>

<li>voluptuous na (na PyPi)<br />
<a href="https://pypi.python.org/pypi/voluptuous">https://pypi.python.org/pypi/voluptuous</a>
</li>

<li>Repositář knihovny voluptuous na GitHubu<br />
<a href="https://github.com/alecthomas/voluptuous">https://github.com/alecthomas/voluptuous</a>
</li>

<li>pytest-voluptuous 1.0.2 (na PyPi)<br />
<a href="https://pypi.org/project/pytest-voluptuous/">https://pypi.org/project/pytest-voluptuous/</a>
</li>

<li>pytest-voluptuous (na GitHubu)<br />
<a href="https://github.com/F-Secure/pytest-voluptuous">https://github.com/F-Secure/pytest-voluptuous</a>
</li>

<li>schemagic 0.9.1 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schemagic/0.9.1">https://pypi.python.org/pypi/schemagic/0.9.1</a>
</li>

<li>Schemagic / Schemagic.web (na GitHubu)<br />
<a href="https://github.com/Mechrophile/schemagic">https://github.com/Mechrophile/schemagic</a>
</li>

<li>schema 0.6.7 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schema">https://pypi.python.org/pypi/schema</a>
</li>

<li>schema (na GitHubu)<br />
<a href="https://github.com/keleshev/schema">https://github.com/keleshev/schema</a>
</li>

<li>XML Schema validator and data conversion library for Python<br />
<a href="https://github.com/brunato/xmlschema">https://github.com/brunato/xmlschema</a>
</li>

<li>xmlschema 0.9.7<br />
<a href="https://pypi.python.org/pypi/xmlschema/0.9.7">https://pypi.python.org/pypi/xmlschema/0.9.7</a>
</li>

<li>jsonschema 2.6.0<br />
<a href="https://pypi.python.org/pypi/jsonschema">https://pypi.python.org/pypi/jsonschema</a>
</li>

<li>warlock 1.3.0<br />
<a href="https://pypi.python.org/pypi/warlock">https://pypi.python.org/pypi/warlock</a>
</li>

<li>Python Virtual Environments – A Primer<br />
<a href="https://realpython.com/python-virtual-environments-a-primer/">https://realpython.com/python-virtual-environments-a-primer/</a>
</li>

<li>pip 1.1 documentation: Requirements files<br />
<a href="https://pip.readthedocs.io/en/1.1/requirements.html">https://pip.readthedocs.io/en/1.1/requirements.html</a>
</li>

<li>unittest.mock — mock object library<br />
<a href="https://docs.python.org/3.5/library/unittest.mock.html">https://docs.python.org/3.5/library/unittest.mock.html</a>
</li>

<li>mock 2.0.0<br />
<a href="https://pypi.python.org/pypi/mock">https://pypi.python.org/pypi/mock</a>
</li>

<li>An Introduction to Mocking in Python<br />
<a href="https://www.toptal.com/python/an-introduction-to-mocking-in-python">https://www.toptal.com/python/an-introduction-to-mocking-in-python</a>
</li>

<li>Unit testing (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Unit_testing">https://en.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Unit testing<br />
<a href="https://cs.wikipedia.org/wiki/Unit_testing">https://cs.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Test-driven development (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Test-driven_development">https://en.wikipedia.org/wiki/Test-driven_development</a>
</li>

<li>Pip (dokumentace)<br />
<a href="https://pip.pypa.io/en/stable/">https://pip.pypa.io/en/stable/</a>
</li>

<li>5 Differences between clojure.spec and Schema<br />
<a href="https://lispcast.com/clojure.spec-vs-schema/">https://lispcast.com/clojure.spec-vs-schema/</a>
</li>

<li>Schema: Clojure(Script) library for declarative data description and validation<br />
<a href="https://github.com/plumatic/schema">https://github.com/plumatic/schema</a>
</li>

<li>clojure.spec - Rationale and Overview<br />
<a href="https://clojure.org/about/spec">https://clojure.org/about/spec</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

