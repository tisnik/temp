<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>Jedním z&nbsp;relativně častých požadavků kladených na různé informační systémy je požadavek na to, aby bylo možné naměřená či vypočtená data vyexportovat v&nbsp;takovém formátu, který by byl zpracovatelný v&nbsp;tabulkových procesorech (<i>spreadsheet</i>), například v&nbsp;&bdquo;kancelářských&ldquo; aplikacích <i>Gnumeric</i>, <i>Microsoft Excel</i>, <i>LibreOffice Calc</i> či v&nbsp;některých tabulkových procesorech naprogramovaných a dostupných ve formě webových aplikací (<i>Google Doc</i>, <i>Ethercalc</i>). Jedná se o logický požadavek, protože v&nbsp;tabulkových procesorech je možné relativně snadno provádět další analýzy dat, interaktivně vytvářet grafy, provádět různé dotazy nad daty atd. Navíc data vyexportovaná do jednoho z&nbsp;podporovaných a (polo)standardizovaných formátů lze naimportovat například do <i>Jupyter Notebooku</i>, <i>Matlabu</i> atd. a následně je sofistikovaněji zpracovat v&nbsp;těchto prostředích.</p>

<p><div class="rs-tip-major">Poznámka: na druhou stranu je pochopitelně nutné upozornit na to, že i přes (zdánlivou) jednoduchost a pochopitelnost může být zpracování dat v&nbsp;tabulkových procesorech v&nbsp;mnoha ohledech dosti problematické a může vést buď ke ztrátě, či &bdquo;jen&ldquo; k&nbsp;dezinterpretaci dat. Nicméně zejména u informačních systémů, které začaly být vytvářeny přímo uživateli&ndash;IT laiky, se mnohdy setkáme právě s&nbsp;tím, že tabulkový procesor je ústřední částí takového systému (a nemusí se jednat o malé projekty, protože s&nbsp;časem jejich složitost může narůstat až do chvíle, kdy se začne negativně projevovat použitá architektura).</div></p>

<p>Existuje hned několik formátů, které jsou podporovány jak knihovnami určenými pro programovací jazyk Go, tak i tabulkovými procesory. Tyto formáty se od sebe odlišují svými vlastnostmi: některé formáty pouze dokážou ukládat tabulky s&nbsp;hodnotami jen několika datových typů (což způsobuje obecně známé problémy s&nbsp;reprezentací časových údajů či peněžních částek), další formáty již umožňují ukládat vzorce, formátování buněk, styly buněk a některé dokonce i tak složité objekty, jako jsou grafy. Z&nbsp;hlediska kompatibility mezi různými systémy je tak možné se rozhodnout například mezi následujícími formáty:</p>

<ul>

<li><i>CSV</i> neboli <i>Comma-Separated Values</i> [<a href="https://en.wikipedia.org/wiki/Comma-separated_values">1</a>] je jedním z&nbsp;nejčastěji používaných souborových formátů v&nbsp;této oblasti, a to přesto, že je export a import CSV v&nbsp;některých případech problematický (například některé české mutace Excelu namísto čárek používají středníky, problémy nastávají s&nbsp;buňkami obsahujícími znaky pro konec řádku atd.).  Pokud máte při importu či exportu potíže se zpracováním CSV, můžete v&nbsp;naprosté většině tabulkových procesorů zvolit přesnou specifikaci, jak se má konverze (resp.&nbsp;přesněji řečeno import nebo export) provést.  V&nbsp;dnešním článku si ukážeme použití balíčku <strong>encoding/csv</strong>, který pracuje s&nbsp;CSV podle <a href="https://tools.ietf.org/html/rfc4180">RFC 4180</a>. Tato de facto norma však zdaleka nepopisuje všechny varianty CSV, s&nbsp;nimiž se můžete v&nbsp;praxi setkat.</li>

<li><i>TSV</i> neboli <i>Tab-Separated Values</i> [<a href="https://en.wikipedia.org/wiki/Tab-separated_values">2</a>] [<a href="http://jkorpela.fi/TSV.html">3</a>] je velmi podobným formátem, ovšem s&nbsp;tím rozdílem, že oddělovačem jednotlivých buněk je znak tabulátoru.  Podobně jako v&nbsp;případě CSV i zde existuje několik voleb, které ovlivňují způsob importu (zda tabulka obsahuje hlavičky sloupců atd.).</li>

<li>Existuje i mnoho aplikací, v&nbsp;nichž jsou tabulková data uložena ve formě běžných textových souborů s&nbsp;nějakými oddělovači odlišnými od výše zmíněného tabulátoru (relativně často se jedná o středníky, dvojtečky nebo o znak |). Buď se jedná o zobecnění formátů CSV a TSV [<a href="https://en.wikipedia.org/wiki/Delimiter-separated_values">4</a>], nebo může mít textový soubor podobu naformátovaných sloupců s&nbsp;pevnou délkou (a tedy bez problémů čitelných uživatelem). V&nbsp;tomto případě většinou musí tabulkové procesory soubor analyzovat a na základě této analýzy navrhnout, kde se nachází jednotlivé sloupce. Příkladem takového souboru je například <a href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>, v&nbsp;němž se jako oddělovače používají právě znaky &bdquo;|&ldquo; a navíc &ndash; aby byl import ještě zajímavější &ndash; jsou v&nbsp;numerických hodnotách použity čárky namísto teček.</li>

<li>Dalším velmi často používaným formátem pro přenos tabulek i celých sešitů (<i>sheet</i>) je formát nazvaný <i>Office Open XML Workbook</i>. Tento formát je součástí skupiny formátů známých též pod zkratkou <i>OOXML</i> (plným jménem <i>Office Open XML</i>) nebo též (z&nbsp;dnes již spíše historických důvodů) <i>Microsoft Open XML</i>. Práci s&nbsp;tímto formátem je věnována <a href="#k06">druhá část dnešního článku</a>.</li>

<li>Podobně koncipovaný je i <i>Open Document Format for Office Applications</i> (ODF), známý též pod kratším jménem <i>OpenDocument</i>. Tímto formátem se dnes ještě nebudeme zabývat, i když je taktéž poměrně často používaný (i když se zdá, že souboj mezi ODF a OOXML je již rozhodnutý).</li>

</ul>

<p><div class="rs-tip-major">Poznámka: dnes se budeme zabývat pouze vytvářením souborů s&nbsp;tabulkami či s&nbsp; celými sešity. Druhým problémem &ndash; a to vlastně problémem obecně složitějším &ndash; je import takových sešitů do datových struktur programovacího jazyka Python (například do datových rámců knihovny Pandas). Na tuto problematiku se však zaměříme až v&nbsp;navazujících článcích.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p></p>

<pre>
$ <strong>pip3 install --user XlsxWriter</strong>
&nbsp;
Collecting XlsxWriter
  Downloading https://files.pythonhosted.org/packages/cd/84/c239b08592a431f7ad8773f7869470255b5f1ad860d7b40a9e7ed3f01bde/XlsxWriter-3.0.2-py3-none-any.whl (149kB)
    100% |████████████████████████████████| 153kB 1.5MB/s 
Installing collected packages: XlsxWriter
Successfully installed XlsxWriter-3.0.2
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření prázdného sešitu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
workbook = xlsxwriter.Workbook('example01.xlsx')

<i># vložení nového listu do sešitu</i>
worksheet = workbook.add_worksheet()

<i># explicitní uzavření sešitu</i>
workbook.close()
</pre>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření prázdného sešitu, zajištění uzavření objektu worksheet."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example02.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()
    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s několika vyplněnými buňkami."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example03.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># buňka s textem</i>
    worksheet.write('A1', 'www.root.cz')

    <i># buňky s numerickými hodnotami</i>
    worksheet.write('A2', 6)
    worksheet.write('A3', 7)
    worksheet.write('B3', 8)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s několika vyplněnými buňkami."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example04.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># buňka s textem</i>
    worksheet.write(0, 0, 'www.root.cz')

    <i># buňky s numerickými hodnotami</i>
    worksheet.write(1, 0, 6)
    worksheet.write(2, 0, 7)
    worksheet.write(2, 1, 8)

    <i># sešit bude uzavřen automaticky</i>
</pre>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example05.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># buňky s textem</i>
    worksheet.write('A1', 'x')
    worksheet.write('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení šířky sloupců."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example06.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 8)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># buňky s textem</i>
    worksheet.write('A1', 'x')
    worksheet.write('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení stylů vybraných buněk."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example07.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 8)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># definice nového stylu</i>
    bold_style = workbook.add_format({'bold': True})

    <i># buňky s textem</i>
    worksheet.write('A1', 'x', bold_style)
    worksheet.write('B1', '1/x', bold_style)

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení stylů vybraných buněk."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example08.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 8)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># definice nového stylu</i>
    bold_style = workbook.add_format({'bold': True,
                                      'font_color': 'blue'})

    <i># buňky s textem</i>
    worksheet.write('A1', 'x', bold_style)
    worksheet.write('B1', '1/x', bold_style)

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení stylů vybraných buněk."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example09.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 8)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># buňky s textem</i>
    worksheet.write('A1', 'x', bold_style)
    worksheet.write('B1', '1/x', bold_style)

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení stylu řádků."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example10.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 8)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># styl pro první řádek</i>
    worksheet.set_row(0, 20, bold_style)

    <i># buňky s textem</i>
    worksheet.write('A1', 'x')
    worksheet.write('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení stylu sloupců."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example11.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># definice dalšího nového stylu</i>
    red_style = workbook.add_format()
    red_style.set_font_color('red')

    <i># nastavení šířky sloupců a stylu</i>
    worksheet.set_column('A:A', 8, red_style)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># styl pro první řádek</i>
    worksheet.set_row(0, 20, bold_style)

    <i># buňky s textem</i>
    worksheet.write('A1', 'x')
    worksheet.write('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write(x, 0, x)
        worksheet.write(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, buňky se specifikací datového typu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example12.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># definice dalšího nového stylu</i>
    red_style = workbook.add_format()
    red_style.set_font_color('red')

    <i># nastavení šířky sloupců a stylu</i>
    worksheet.set_column('A:A', 8, red_style)
    worksheet.set_column('B:B', 14)
    worksheet.set_column('C:Z', 2)

    <i># styl pro první řádek</i>
    worksheet.set_row(0, 20, bold_style)

    <i># buňky s textem</i>
    worksheet.write_string('A1', 'x')
    worksheet.write_string('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write_number(x, 0, x)
        worksheet.write_number(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, buňky se specifikací číselného formátu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example13.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># definice dalšího nového stylu</i>
    red_style = workbook.add_format()
    red_style.set_font_color('red')

    <i># definice formátu čísel</i>
    numeric_format = workbook.add_format({'num_format': '##.###'})

    <i># nastavení šířky sloupců a stylu</i>
    worksheet.set_column('A:A', 8, red_style)
    worksheet.set_column('B:B', 14, numeric_format)
    worksheet.set_column('C:Z', 2)

    <i># styl pro první řádek</i>
    worksheet.set_row(0, 20, bold_style)

    <i># buňky s textem</i>
    worksheet.write_string('A1', 'x')
    worksheet.write_string('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write_number(x, 0, x)
        worksheet.write_number(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, buňky se specifikací číselného formátu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example14.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># definice dalšího nového stylu</i>
    red_style = workbook.add_format()
    red_style.set_font_color('red')

    <i># definice formátu čísel</i>
    numeric_format = workbook.add_format({'num_format': '0.0000'})

    <i># nastavení šířky sloupců a stylu</i>
    worksheet.set_column('A:A', 8, red_style)
    worksheet.set_column('B:B', 14, numeric_format)
    worksheet.set_column('C:Z', 2)

    <i># styl pro první řádek</i>
    worksheet.set_row(0, 20, bold_style)

    <i># buňky s textem</i>
    worksheet.write_string('A1', 'x')
    worksheet.write_string('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write_number(x, 0, x)
        worksheet.write_number(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, buňky se specifikací číselného formátu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example15.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># definice nového stylu</i>
    bold_style = workbook.add_format()
    bold_style.set_bold()
    bold_style.set_font_color('blue')

    <i># definice dalšího nového stylu</i>
    red_style = workbook.add_format()
    red_style.set_font_color('red')

    <i># definice formátu čísel</i>
    numeric_format = workbook.add_format()
    numeric_format.set_num_format('0.0000')

    <i># nastavení šířky sloupců a stylu</i>
    worksheet.set_column('A:A', 8, red_style)
    worksheet.set_column('B:B', 14, numeric_format)
    worksheet.set_column('C:Z', 2)

    <i># styl pro první řádek</i>
    worksheet.set_row(0, 20, bold_style)

    <i># buňky s textem</i>
    worksheet.write_string('A1', 'x')
    worksheet.write_string('B1', '1/x')

    <i># buňky s numerickými hodnotami</i>
    for x in range(1, 21):
        worksheet.write_number(x, 0, x)
        worksheet.write_number(x, 1, 1.0/x)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, změna velikosti fontu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example16.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 20)

    <i># buňky s numerickými hodnotami a různou velikostí textu</i>
    for x in range(1, 21):
        style = workbook.add_format()
        style.set_font_size(x)
        worksheet.write_number(x, 0, x, style)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení barvy textu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example17.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 20)

    <i># barvy buněk</i>
    colors = (
            'black',
            'blue',
            'brown',
            'cyan',
            'gray',
            'green',
            'lime',
            'magenta',
            'navy',
            'orange',
            'pink',
            'purple',
            'red',
            'silver',
            'white',
            'yellow'
            )

    <i># buňky s řetězci a různou barvou textu</i>
    for x, color in enumerate(colors):
        style = workbook.add_format()
        style.set_font_color(color)
        worksheet.write_string(x, 0, color, style)

    <i># sešit bude uzavřen automaticky</i>
</pre>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení barvy textu."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example18.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 20)

    <i># barvy buněk</i>
    colors = (
            '#000000',
            '#0000ff',
            '#800000',
            '#00ffff',
            '#808080',
            '#008000',
            '#00ff00',
            '#ff00ff',
            '#000080',
            '#ff6600',
            '#ff00ff',
            '#800080',
            '#ff0000',
            '#c0c0c0',
            '#ffffff',
            '#ffff00',
            )

    <i># buňky s řetězci a různou barvou textu</i>
    for x, color in enumerate(colors):
        style = workbook.add_format()
        style.set_font_color(color)
        worksheet.write_string(x, 0, color, style)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení barvy pozadí."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example19.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 20)

    <i># barvy buněk</i>
    colors = (
            'black',
            'blue',
            'brown',
            'cyan',
            'gray',
            'green',
            'lime',
            'magenta',
            'navy',
            'orange',
            'pink',
            'purple',
            'red',
            'silver',
            'white',
            'yellow'
            )

    <i># buňky s řetězci a různou barvou pozadí buněk</i>
    for x, color in enumerate(colors):
        style = workbook.add_format()
        style.set_bg_color(color)
        worksheet.write_string(x, 0, color, style)

    <i># sešit bude uzavřen automaticky</i>
</pre>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

<i>"""Vytvoření sešitu s delší tabulkou, nastavení barvy pozadí."""</i>

import xlsxwriter

<i># vytvoření objektu reprezentujícího celý sešit</i>
with xlsxwriter.Workbook('example20.xlsx') as workbook:
    <i># vložení nového listu do sešitu</i>
    worksheet = workbook.add_worksheet()

    <i># nastavení šířky sloupců</i>
    worksheet.set_column('A:A', 20)

    <i># barvy buněk</i>
    colors = (
            '#000000',
            '#0000ff',
            '#800000',
            '#00ffff',
            '#808080',
            '#008000',
            '#00ff00',
            '#ff00ff',
            '#000080',
            '#ff6600',
            '#ff00ff',
            '#800080',
            '#ff0000',
            '#c0c0c0',
            '#ffffff',
            '#ffff00',
            )

    <i># buňky s řetězci a různou barvou pozadí buněk</i>
    for x, color in enumerate(colors):
        style = workbook.add_format()
        style.set_bg_color(color)
        worksheet.write_string(x, 0, color, style)

    <i># sešit bude uzavřen automaticky</i>
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>

<pre>
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>

<pre>
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 a nejnovější stabilní verzi knihovny XlsxWriter
byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_empty_worksheet.py           </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/01_empty_worksheet.py           ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/01_empty_worksheet.py</a></td></tr>
<tr><td> 2</td><td>02_with_statement.py            </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/02_with_statement.py            ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/02_with_statement.py</a></td></tr>
<tr><td> 3</td><td>03_simple_data.py               </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/03_simple_data.py               ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/03_simple_data.py</a></td></tr>
<tr><td> 4</td><td>04_alternative_addressing.py    </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/04_alternative_addressing.py    ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/04_alternative_addressing.py</a></td></tr>
<tr><td> 5</td><td>05_fill_in_table.py             </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/05_fill_in_table.py             ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/05_fill_in_table.py</a></td></tr>
<tr><td> 6</td><td>06_column_widths.py             </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/06_column_widths.py             ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/06_column_widths.py</a></td></tr>
<tr><td> 7</td><td>07_styles.py                    </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/07_styles.py                    ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/07_styles.py</a></td></tr>
<tr><td> 8</td><td>08_more_styles.py               </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/08_more_styles.py               ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/08_more_styles.py</a></td></tr>
<tr><td> 9</td><td>09_alternative_styles.py        </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/09_alternative_styles.py        ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/09_alternative_styles.py</a></td></tr>
<tr><td>10</td><td>10_format_for_row.py            </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/10_format_for_row.py            ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/10_format_for_row.py</a></td></tr>
<tr><td>11</td><td>11_format_set_column.py         </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/11_format_set_column.py         ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/11_format_set_column.py</a></td></tr>
<tr><td>12</td><td>12_write_proper_types.py        </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/12_write_proper_types.py        ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/12_write_proper_types.py</a></td></tr>
<tr><td>13</td><td>13_numeric_format.py            </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/13_numeric_format.py            ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/13_numeric_format.py</a></td></tr>
<tr><td>14</td><td>14_numeric_format.py            </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/14_numeric_format.py            ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/14_numeric_format.py</a></td></tr>
<tr><td>15</td><td>15_alternative_numeric_format.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/15_alternative_numeric_format.py">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/15_alternative_numeric_format.py</a></td></tr>
<tr><td>16</td><td>16_font_size.py                 </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/16_font_size.py                 ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/16_font_size.py</a></td></tr>
<tr><td>17</td><td>17_named_colors.py              </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/17_named_colors.py              ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/17_named_colors.py</a></td></tr>
<tr><td>18</td><td>18_html_colors.py               </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/18_html_colors.py               ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/18_html_colors.py</a></td></tr>
<tr><td>19</td><td>19_named_bg_colors.py           </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/19_named_bg_colors.py           ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/19_named_bg_colors.py</a></td></tr>
<tr><td>20</td><td>20_html_background_colors.py    </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/20_html_background_colors.py    ">https://github.com/tisnik/most-popular-python-libs/blob/master/XlsxWriter/20_html_background_colors.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Comparison of spreadsheet software<br />
<a href="https://en.wikipedia.org/wiki/Comparison_of_spreadsheet_software">https://en.wikipedia.org/wiki/Comparison_of_spreadsheet_software</a>
</li>

<li>Creating Excel files with Python and XlsxWriter<br />
<a href="https://xlsxwriter.readthedocs.io/">https://xlsxwriter.readthedocs.io/</a>
</li>

<li>XlsxWriter<br />
<a href="https://github.com/jmcnamara/XlsxWriter">https://github.com/jmcnamara/XlsxWriter</a>
</li>

<li>openpyxl - A Python library to read/write Excel 2010 xlsx/xlsm files<br />
<a href="https://openpyxl.readthedocs.io/en/stable/index.html">https://openpyxl.readthedocs.io/en/stable/index.html</a>
</li>

<li>Spreadsheet Files<br />
<a href="https://fileinfo.com/filetypes/spreadsheet">https://fileinfo.com/filetypes/spreadsheet</a>
</li>

<li>OpenDocument<br />
<a href="https://en.wikipedia.org/wiki/OpenDocument">https://en.wikipedia.org/wiki/OpenDocument</a>
</li>

<li>Tvorba sešitů pro tabulkové procesory v&nbsp;programovacím jazyku Go<br />
<a href="https://www.root.cz/clanky/tvorba-sesitu-pro-tabulkove-procesory-v-programovacim-jazyku-go/">https://www.root.cz/clanky/tvorba-sesitu-pro-tabulkove-procesory-v-programovacim-jazyku-go/</a>
</li>

<li>Spreadsheet<br />
<a href="https://en.wikipedia.org/wiki/Spreadsheet">https://en.wikipedia.org/wiki/Spreadsheet</a>
</li>

<li>List of spreadsheet software<br />
<a href="https://en.wikipedia.org/wiki/List_of_spreadsheet_software">https://en.wikipedia.org/wiki/List_of_spreadsheet_software</a>
</li>

<li>Processing spreadsheet data in Go<br />
<a href="https://appliedgo.net/spreadsheet/">https://appliedgo.net/spreadsheet/</a>
</li>

<li>Comma-separated values<br />
<a href="https://en.wikipedia.org/wiki/Comma-separated_values">https://en.wikipedia.org/wiki/Comma-separated_values</a>
</li>

<li>Common Format and MIME Type for Comma-Separated Values (CSV) Files<br />
<a href="https://tools.ietf.org/html/rfc4180">https://tools.ietf.org/html/rfc4180</a>
</li>

<li>Tab-separated values<br />
<a href="https://en.wikipedia.org/wiki/Tab-separated_values">https://en.wikipedia.org/wiki/Tab-separated_values</a>
</li>

<li>Office Open XML (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Office_Open_XML">https://en.wikipedia.org/wiki/Office_Open_XML</a>
</li>

<li>Standard ECMA-376: Office Open XML File Formats<br />
<a href="https://www.ecma-international.org/publications/standards/Ecma-376.htm">https://www.ecma-international.org/publications/standards/Ecma-376.htm</a>
</li>

<li>A Simple File Format for NumPy Arrays<br />
<a href="https://docs.scipy.org/doc/numpy-1.14.2/neps/npy-format.html">https://docs.scipy.org/doc/numpy-1.14.2/neps/npy-format.html</a>
</li>

<li>numpy.lib.format<br />
<a href="https://numpy.org/devdocs/reference/generated/numpy.lib.format.html">https://numpy.org/devdocs/reference/generated/numpy.lib.format.html</a>
</li>

<li>The NumPy array: a structure for efficient numerical computation<br />
<a href="https://arxiv.org/pdf/1102.1523.pdf">https://arxiv.org/pdf/1102.1523.pdf</a>
</li>

<li>numpy.ndarray.tofile<br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.tofile.html#numpy.ndarray.tofile">https://numpy.org/doc/stable/reference/generated/numpy.ndarray.tofile.html#numpy.ndarray.tofile</a>
</li>

<li>numpy.fromfile<br />
<a href="https://numpy.org/doc/stable/reference/generated/numpy.fromfile.html">https://numpy.org/doc/stable/reference/generated/numpy.fromfile.html</a>
</li>

<li>How to read part of binary file with numpy?<br />
<a href="https://stackoverflow.com/questions/14245094/how-to-read-part-of-binary-file-with-numpy">https://stackoverflow.com/questions/14245094/how-to-read-part-of-binary-file-with-numpy</a>
</li>

<li>How to read binary files in Python using NumPy?<br />
<a href="https://stackoverflow.com/questions/39762019/how-to-read-binary-files-in-python-using-numpy">https://stackoverflow.com/questions/39762019/how-to-read-binary-files-in-python-using-numpy</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

