<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>SymPy: knihovna pro symbolické výpočty zapsané přímo v Pythonu (2. část)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>SymPy: knihovna pro symbolické výpočty zapsané přímo v Pythonu (2. část)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Symboly vs. proměnné</a></p>
<p><a href="#k02">2. Reálné kořeny kvadratické rovnice</a></p>
<p><a href="#k03">3. Komplexní kořeny kvadratické rovnice</a></p>
<p><a href="#k04">4. Hledání kořenů kubické rovnice</a></p>
<p><a href="#k05">5. Kořeny polynomů vyšších stupňů</a></p>
<p><a href="#k06">6. Průchod nulovými body periodické funkce</a></p>
<p><a href="#k07">7. Vyhledání všech možných řešení</a></p>
<p><a href="#k08">8. Vyhledání řešení pro funkci <i>sinc</i></a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">13. Knihovna SymPy a Jupyter Notebook</a></p>
<p><a href="#k14">14. Instalace Jupyter Notebooku</a></p>
<p><a href="#k15">15. Nastavení Jupyter Notebooku</a></p>
<p><a href="#k16">16. Ukázky použití knihovny SymPy v&nbsp;Jupyter Notebooku</a></p>
<p><a href="#k17">17. Vykreslení grafů knihovnou SymPy</a></p>
<p><a href="#k18">*** 18. Výstup do TeXu/LaTeXu</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Symboly vs. proměnné</h2>

<p>Na <a
href="https://www.root.cz/clanky/sympy-knihovna-pro-symbolicke-vypocty-zapsane-primo-v-pythonu/">úvodní
článek</a> o knihovně <i>SymPy</i> dnes navážeme. Ukážeme si některé její další
vlastnosti a popíšeme si podrobněji, jak jednotlivé funkce (provádějící
manipulace s&nbsp;matematickými symboly) použít.</p>

<p>Bez dlouhého úvodu si ukažme, jaký je rozdíl mezi symboly použitými
v&nbsp;matematických výrazech (typicky ve výsledné tištěné podobě) a
symboly/proměnnými, které jsou využity při zápisu těchto výrazů v&nbsp;Pythonu.
Prozatím jsme totiž pro pojmenování symbolů i proměnných používali stejné znaky
tak, jako je tomu například v&nbsp;následujícím příkladu pro řešení kvadratické
rovnice:</p>

<pre>
from sympy import solve, symbols, pprint
&nbsp;
<strong>a, b, c, x</strong> = symbols(<strong>'a,b,c,x'</strong>)
&nbsp;
f = <strong>a*x**2 + b*x + c</strong>
&nbsp;
pprint(f)
&nbsp;
solution = solve(f, x)
pprint(solution)
</pre>

<p>Výsledkem činnosti tohoto skriptu byl následující výstup:</p>

<pre>
   2          
a⋅x  + b⋅x + c
&nbsp;
⎡        _____________          _____________⎤
⎢       ╱           2          ╱           2 ⎥
⎢-b - ╲╱  -4⋅a⋅c + b    -b + ╲╱  -4⋅a⋅c + b  ⎥
⎢─────────────────────, ─────────────────────⎥
⎣         2⋅a                    2⋅a         ⎦
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy20.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy20.py</a>.</div></p>

<p>Ve skutečnosti však mohou být jména symbolů použitých v&nbsp;tištěné podobě
odlišná od Pythonovských proměnných, což je ukázáno v&nbsp;dalším demonstračním
příkladu. Namísto symbolů <strong>a</strong>, <strong>b</strong> a
<strong>c</strong> zde používáme symboly <strong>α</strong>, <strong>β</strong>
a <strong>Γ</strong>, ovšem přiřazené do proměnných s&nbsp;původním jménem:</p>

<pre>
from sympy import solve, symbols, pprint, init_printing
&nbsp;
init_printing(use_unicode=True)
&nbsp;
<strong>a, b, c, x</strong> = symbols(<strong>'α,β,Γ,x'</strong>)
&nbsp;
f = <strong>a*x**2 + b*x + c</strong>
&nbsp;
pprint(f)
&nbsp;
solution = solve(f, x)
pprint(solution)
</pre>

<p>Výsledek bude v&nbsp;tomto případě odlišný, neboť se použijí námi definované
symboly:</p>

<pre>
 2            
x ⋅α + x⋅β + Γ
&nbsp;
⎡        _____________          _____________⎤
⎢       ╱           2          ╱           2 ⎥
⎢-β - ╲╱  -4⋅Γ⋅α + β    -β + ╲╱  -4⋅Γ⋅α + β  ⎥
⎢─────────────────────, ─────────────────────⎥
⎣         2⋅α                    2⋅α         ⎦
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy26.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy26.py</a>.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Reálné kořeny kvadratické rovnice</h2>

<p>Funkce <strong>solve</strong>, s&nbsp;níž jsme se v&nbsp;krátkosti seznámili
minule, je v&nbsp;mnoha případech velmi užitečná, takže si v&nbsp;této kapitole
i v&nbsp;kapitolách navazujících popíšeme jak její dobré vlastnosti, tak i
některá omezení (která se mnohdy vyřeší použitím funkce
<strong>solveset</strong>, jak uvidíme dále). Podívejme se nyní na velmi
jednoduchý příklad, v&nbsp;němž s&nbsp;využitím funkce <strong>solve</strong>
vypočteme kořeny kvadratické rovnice. Samotná rovnice je zapsána výrazem a
<strong>solve</strong> v&nbsp;tomto případě předpokládá řešení pro pravou
stranu (nezapsané) rovnice nastavenou na nulu. Samotné koeficienty kvadratické
rovnice jsou vybrány takovým způsobem, aby měla dva různé reálné kořeny:</p>

<pre>
from sympy import solve, symbols, pprint, init_printing
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>5*x**2 + 5*x + 1</strong>
&nbsp;
pprint(f)
&nbsp;
solution = <strong>solve(f, x)</strong>
pprint(solution)
</pre>

<p>Tento skript po svém spuštění nejdříve vypíše původní výraz (v&nbsp;tomto
případě polynom) a následně se v&nbsp;hranatých závorkách vypíšou oba nalezené
kořeny výrazu (předpokládá se porovnání výrazu s&nbsp;nulou, tedy se jedná o
kvadratickou rovnici):</p>

<pre>
   2          
5⋅x  + 5⋅x + 1
&nbsp;
⎡  1   √5    1   √5⎤
⎢- ─ - ──, - ─ + ──⎥
⎣  2   10    2   10⎦
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy27.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy27.py</a>.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Komplexní kořeny kvadratické rovnice</h2>

<p>Samozřejmě existují takové kvadratické rovnice, jejichž kořeny jsou
komplexní. To je případ rovnice použité v&nbsp;dalším demonstračním
příkladu:</p>

<pre>
from sympy import solve, symbols, pprint, init_printing
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>5*x**2 + 5*x + 5</strong>
&nbsp;
pprint(f)
&nbsp;
solution = <strong>solve(f, x)</strong>
pprint(solution)
</pre>

<p>Povšimněte si, že řešením jsou skutečně komplexní kořeny:</p>

<pre>
   2          
5⋅x  + 5⋅x + 5
&nbsp;
⎡  1   √3⋅ⅈ    1   √3⋅ⅈ⎤
⎢- ─ - ────, - ─ + ────⎥
⎣  2    2      2    2  ⎦
</pre>

<p>Na některých terminálech nemusí být symbol pro imaginární jednotku ⅈ dobře
čitelný! Popř.&nbsp;se v&nbsp;případě použití neúplného fontu zobrazí jako
mezera.</p>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy28.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy28.py</a>.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Hledání kořenů kubické rovnice</h2>

<p>Funkce <strong>solve</strong> je ovšem univerzálnější; nemusí se tedy
používat pouze pro výpočet kořenů kvadratických rovnic. V&nbsp;dalším skriptu
se pokusíme najít kořeny kubické rovnice. Pokud se nejedná o násobné kořeny (a
to v&nbsp;tomto případě není pravda), měli bychom získat trojici hodnot
(kořenů):</p>

<pre>
from sympy import solve, symbols, pprint, init_printing
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>5*x**3 + 5</strong>
&nbsp;
pprint(f)
&nbsp;
solution = <strong>solve(f, x)</strong>
pprint(solution)
</pre>

<p>Výsledkem výpočtů je v&nbsp;tomto případě jeden reálný kořen a dvojice
kořenů komplexních (což jsou navíc komplexně sdružená čísla, což odpovídá
geometrické interpretaci kořenů, které tvoří vrcholy rovnostranného
trojúhelníku v&nbsp;komplexní rovině):</p>

<pre>
   3    
5⋅x  + 5
&nbsp;
⎡    1   √3⋅ⅈ  1   √3⋅ⅈ⎤
⎢-1, ─ - ────, ─ + ────⎥
⎣    2    2    2    2  ⎦
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy29.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy29.py</a>.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Kořeny polynomů vyšších stupňů</h2>

<p>Vyzkoušejme si nyní výpočet kořene polynomu stupně 10, tedy takových hodnot,
které po dosazení do původního polynomu vrátí nulu. Měli bychom dostat deset
výsledků (v&nbsp;případě, že se nebude jednat o násobné kořeny):</p>

<pre>
from sympy import solve, symbols, pprint, init_printing
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>x**10 + 1</strong>
&nbsp;
pprint(f)
&nbsp;
solution = <strong>solve(f, x)</strong>
pprint(solution)
</pre>

<p>Výsledek vypadá takto (v&nbsp;tomto případě by asi bylo vhodné zvolit
odlišný způsob zápisu komplexního čísla, nikoli tedy rozpis na reálnou a
imaginární složku):</p>

<pre>
 10    
x   + 1
&nbsp;
⎡                                                                    ________ 
⎢                                                                   ╱ √5   5  
⎢             ________                 ________               √5⋅  ╱  ── + ─  
⎢            ╱ √5   5    √5⋅ⅈ   ⅈ     ╱ √5   5    ⅈ   √5⋅ⅈ       ╲╱   8    8  
⎢-ⅈ, ⅈ, -   ╱  ── + ─  - ──── + ─,   ╱  ── + ─  - ─ + ────, - ─────────────── 
⎣         ╲╱   8    8     4     4  ╲╱   8    8    4    4             2        
&nbsp;
      ________                   ________          ________                   
     ╱ √5   5                   ╱ √5   5          ╱ √5   5                    
    ╱  ── + ─                  ╱  ── + ─    √5⋅  ╱  ── + ─                √5⋅ 
  ╲╱   8    8    ⅈ   √5⋅ⅈ    ╲╱   8    8       ╲╱   8    8    √5⋅ⅈ   ⅈ       ╲
+ ──────────── + ─ + ────, - ──────────── + ─────────────── - ──── - ─, - ────
       2         4    4           2                2           4     4        
&nbsp;
   ________       ________       ________          ________                   
  ╱ 5   √5       ╱ 5   √5       ╱ √5   5          ╱ √5   5                    
 ╱  ─ - ──      ╱  ─ - ──      ╱  ── + ─    √5⋅  ╱  ── + ─              ______
╱   8   8     ╲╱   8   8     ╲╱   8    8       ╲╱   8    8    ⅈ        ╱ 5   √
─────────── + ──────────── + ──────────── + ─────────────── + ─ + ⅈ⋅  ╱  ─ - ─
   4               4              4                4          4     ╲╱   8   8
&nbsp;
                          ________          ________       ________       ____
                         ╱ √5   5          ╱ 5   √5       ╱ √5   5       ╱ 5  
__     ________    √5⋅  ╱  ── + ─    √5⋅  ╱  ─ - ──      ╱  ── + ─      ╱  ─ -
5     ╱ √5   5        ╲╱   8    8       ╲╱   8   8     ╲╱   8    8    ╲╱   8  
─ ⋅  ╱  ── + ─ , - ─────────────── - ─────────────── - ──────────── + ────────
   ╲╱   8    8            4                 4               4              4  
&nbsp;
____                                             ________       ________      
 √5                                             ╱ √5   5       ╱ √5   5       
 ──              ________     ________    √5⋅  ╱  ── + ─      ╱  ── + ─      ╱
 8     ⅈ        ╱ 5   √5     ╱ √5   5        ╲╱   8    8    ╲╱   8    8    ╲╱ 
──── - ─ + ⅈ⋅  ╱  ─ - ── ⋅  ╱  ── + ─ , - ─────────────── - ──────────── - ───
       4     ╲╱   8   8   ╲╱   8    8            4               4            
&nbsp;
 ________          ________                                          ________ 
╱ 5   √5          ╱ 5   √5                                          ╱ 5   √5  
  ─ - ──    √5⋅  ╱  ─ - ──          ________     ________          ╱  ─ - ──  
  8   8        ╲╱   8   8          ╱ 5   √5     ╱ √5   5    ⅈ    ╲╱   8   8   
───────── + ─────────────── - ⅈ⋅  ╱  ─ - ── ⋅  ╱  ── + ─  - ─, - ──────────── 
  4                4            ╲╱   8   8   ╲╱   8    8    4         4       
&nbsp;
      ________          ________          ________                            
     ╱ √5   5          ╱ 5   √5          ╱ √5   5                             
    ╱  ── + ─    √5⋅  ╱  ─ - ──    √5⋅  ╱  ── + ─          ________     ______
  ╲╱   8    8       ╲╱   8   8        ╲╱   8    8         ╱ 5   √5     ╱ √5   
+ ──────────── + ─────────────── + ─────────────── - ⅈ⋅  ╱  ─ - ── ⋅  ╱  ── + 
       4                4                 4            ╲╱   8   8   ╲╱   8    
&nbsp;
      ⎤
      ⎥
__    ⎥
5    ⅈ⎥
─  + ─⎥
8    4⎦
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy30.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy30.py</a>.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Průchod nulovými body periodické funkce</h2>

<p>Přejděme nyní od polynomů k&nbsp;dalším funkcím, například k&nbsp;funkcím
goniometrickým. Funkci <strong>solve</strong> je totiž možné mj.&nbsp;použít i
pro vyhledání takových hodnot <strong>x</strong> goniometrické funkce
<i>cos</i>, kdy je hodnota funkce nulová, tj.&nbsp;když graf funkce protíná osu
<i>x</i>. Pokud ovšem použijeme funkci <strong>solve</strong>, nebudou nalezena
všechna řešení, což je patrné i z&nbsp;následujícího příkladu:</p>

<pre>
from sympy import solve, symbols, pprint, init_printing, cos
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>cos(x)</strong>
&nbsp;
pprint(f)
&nbsp;
solution = <strong>solve(f, x)</strong>
pprint(solution)
</pre>

<p>Z&nbsp;výsledku je patrné, že funkce <strong>solve</strong> v&nbsp;tomto
případě vrátí pouze dvě hodnoty <strong>x</strong> a nikoli všechna možná
řešení, kdy je hodnota periodické funkce nulová:</p>

<pre>
cos(x)
&nbsp;
⎡π  3⋅π⎤
⎢─, ───⎥
⎣2   2 ⎦
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy31.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy31.py</a>.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Vyhledání všech možných řešení</h2>

<p>Z&nbsp;předchozí kapitoly je zřejmé, že funkce <strong>solve</strong>
v&nbsp;některých případech nevrátí všechna řešení, tj.&nbsp;typicky ty hodnoty
<strong>x</strong>, pro které je hodnota funkce nulová. Můžeme však namísto
toho použít funkci <strong>solveset</strong>:</p>

<pre>
Help on function solveset in module sympy.solvers.solveset:
&nbsp;
solveset(f, symbol=None, domain=Complexes)
    Solves a given inequality or equation with set as output
&nbsp;
    Parameters
    ==========
&nbsp;
    f : Expr or a relational.
        The target equation or inequality
    symbol : Symbol
        The variable for which the equation is solved
    domain : Set
        The domain over which the equation is solved
&nbsp;
    Returns
    =======
&nbsp;
    Set
        A set of values for `symbol` for which `f` is True or is equal to
        zero. An :class:`~.EmptySet` is returned if `f` is False or nonzero.
        A :class:`~.ConditionSet` is returned as unsolved object if algorithms
        to evaluate complete solution are not yet implemented.
&nbsp;
    ``solveset`` claims to be complete in the solution set that it returns.
</pre>

<p>Zkusme tedy použít <strong>solveset</strong> namísto <strong>solve</strong>
pro goniometrickou funkci <i>cos</i>:</p>

<pre>
from sympy import solveset, symbols, pprint, init_printing, cos
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>cos(x)</strong>
&nbsp;
pprint(f)
&nbsp;
solution = <strong>solveset(f, x)</strong>
pprint(solution)
</pre>

<p>Výsledkem bude skutečně definice množiny (resp.&nbsp;přesněji řečeno
sjednocení dvou množin) se všemi hodnotami, pro které je <i>cos</i> nulová:</p>

<pre>
cos(x)
&nbsp;
⎧        π │      ⎫   ⎧        3⋅π │      ⎫
⎨2⋅n⋅π + ─ │ n ∊ ℤ⎬ ∪ ⎨2⋅n⋅π + ─── │ n ∊ ℤ⎬
⎩        2 │      ⎭   ⎩         2  │      ⎭
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy32.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy32.py</a>.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Vyhledání řešení pro funkci <i>sinc</i></h2>

<p>V&nbsp;dalším demonstračním příkladu si ukážeme, jakým způsobem jsou
vyhledány nulové body pro známou funkci <i>sinc</i>, kterou lze rozepsat do
tvaru <i>sin(x)/x</i>. Průběh této funkce se od běžného sinu pochopitelně
odlišuje (postupně dochází k&nbsp;utlumení), ovšem důležitá je taktéž hodnota
funkce v&nbsp;bodě x=0, kde je jen definitoricky (a v&nbsp;limitě) určeno, že
hodnota funkce je rovna jedné:</p>

<pre>
from sympy import solve, solveset, symbols, pprint, init_printing, sin
&nbsp;
init_printing(use_unicode=True)
&nbsp;
x = symbols('x')
&nbsp;
f = <strong>sin(x)/x</strong>
&nbsp;
pprint(f)
&nbsp;
print()
&nbsp;
solution = <strong>solve(f, x)</strong>
pprint(solution)
&nbsp;
print()
&nbsp;
solution = <strong>solveset(f, x)</strong>
pprint(solution)
</pre>

<p>Podívejme se nyní na výsledky. Funkce <strong>solve</strong> vrátí pouze
jediný výsledek π, zatímco funkce <strong>solveset</strong> správně určí celou
množinu hodnot <strong>x</strong>, která neobsahuje nulu (nelze zde použít
<strong>N</strong>, tedy přirozená čísla, protože potřebujeme i záporné hodnoty
<strong>n</strong>, nehledě na to, že není stále určeno, zda 0 je či není
přirozené číslo):</p>

<pre>
sin(x)
──────
  x   
&nbsp;
[π]
&nbsp;
({2⋅n⋅π │ n ∊ ℤ} \ {0}) ∪ ({2⋅n⋅π + π │ n ∊ ℤ} \ {0})
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy33.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy33.py</a>.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
from sympy import solve, solveset, symbols, pprint, init_printing

init_printing(use_unicode=True)

x = symbols('x')

f = x > 10

pprint(f)

print()

solution = solve(f, x)
pprint(solution)

print()

solution = solveset(f, x)
pprint(solution)
</pre>

<pre>
x > 10

10 < x ∧ x < ∞

{x │ x ∊ ℂ ∧ (x > 10)}
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy34.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy34.py</a>.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
from sympy import solve, solveset, symbols, pprint, init_printing, sin

init_printing(use_unicode=True)

x = symbols('x')

f = sin(x) > 10

pprint(f)

print()

solution = solve(f, x)
pprint(solution)

print()

solution = solveset(f, x)
pprint(solution)
</pre>

<pre>
sin(x) > 10

False

{x │ x ∊ ℂ ∧ (sin(x) > 10)}
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy35.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy35.py</a>.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
from sympy import solve, solveset, symbols, pprint, init_printing

init_printing(use_unicode=True)

x = symbols('x')

f1 = x > 10
f2 = x < 20

pprint(f1)
pprint(f2)

print()

solution = solve((f1, f2), x)
pprint(solution)
</pre>

<pre>
x > 10
x < 20

10 < x ∧ x < 20
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy36.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy36.py</a>.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
from sympy import solve, solveset, symbols, pprint, init_printing

init_printing(use_unicode=True)

x = symbols('x')

f1 = x**2 < 10
f2 = x**3 > -10

pprint(f1)
pprint(f2)

print()

solution = solve((f1, f2), x)
pprint(solution)
</pre>

<pre>
 2     
x  < 10
 3      
x  > -10

 3 ____              
-╲╱ 10  < x ∧ x < √10
</pre>

<p><div class="rs-tip-major">Poznámka: úplný zdrojový kód tohoto demonstračního
příkladu je dostupný na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy37.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sympy/sympy37.py</a>.</div></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Knihovna SymPy a Jupyter Notebook</h2>

<p>Všechny demonstrační příklady, které jsme si doposud ukázali v&nbsp;úvodním
článku i v&nbsp;předchozích kapitolách, vypisovaly svůj výsledek (i když
většinou v&nbsp;takzvané <i>pretty-printované</i> podobě) na klasický textový
terminál. I přesto, že jsou pro některé matematické symboly použity speciální
(k&nbsp;tomu určené) znaky Unicode, není výstup v&nbsp;žádném případě perfektní
a nelze ho s&nbsp;úspěchem použít v&nbsp;článcích atd. Knihovna <i>SymPy</i>
nicméně podporuje výstup do TeXu/LaTeXu (což uvidíme dále) i do MathML. To má
dvě přednosti &ndash; výstup lze zařadit do článků a taktéž je možné výsledky
výpočtů zobrazit v&nbsp;Jupyter Notebooku, a to v&nbsp;nejvyšší dostupné
kvalitě. V&nbsp;následujících kapitolách si nejprve ukážeme výsledky výpočtů
zobrazených v&nbsp;Jupyter Notebooku a poté si ukážeme i přímý výstup do
TeXu/LaTeXu.</p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Instalace Jupyter Notebooku</h2>

<p>Jupyter Notebook je možné nainstalovat hned několika způsoby, podle toho,
zda se využijí balíčky dostupné přímo v&nbsp;repositáři dané linuxové
distribuce nebo se použijí jiní správci balíčků (<strong>conda</strong>,
<strong>pip</strong>). Prakticky všechny oficiálně podporované postupy
instalace jsou zmíněny v&nbsp;diagramu umístěném na stránce <a
href="https://jupyter.readthedocs.io/en/latest/projects/content-projects.html">https://jupyter.readthedocs.io/en/latest/projects/content-projects.html</a>.</p>

<p>Ve Fedoře (27 a výše) lze instalaci provést příkazem (podobné to bude i
v&nbsp;distribucích založených na debianních balíčcích, akorát se pochopitelně
použije jiný nástroj než <strong>dnf</strong>):</p>

<pre>
$ <strong>sudo dnf install python3-notebook</strong>
</pre>

<p>Příklad pro Fedoru 34:</p>

<pre>
Last metadata expiration check: 0:53:06 ago on Wed 25 May 2022 01:39:27 AM EDT.
Dependencies resolved.
================================================================================
 Package                                             Architecture          Versi
================================================================================
Installing:
 python3-notebook                                    noarch                6.1.6
</pre>

<p>Nainstaluje se i velké množství závislých knihoven a balíčků:</p>

<pre>
Installing dependencies:
 ImageMagick-c++                                     x86_64                1:6.9
 ImageMagick-libs                                    x86_64                1:6.9
 LibRaw                                              x86_64                0.20.
 adobe-mappings-cmap                                 noarch                20190
 adobe-mappings-cmap-deprecated                      noarch                20190
 adobe-mappings-pdf                                  noarch                20190
 atkmm                                               x86_64                2.28.
 blosc                                               x86_64                1.21.
 python3-xlrd                   noarch 2.0.1-2.fc34         beaker-Fedora 171 k
 python3-xlwt                   noarch 1.3.0-1.fc34         updates       200 k
 texlive-dvipng                 x86_64 9:20200327-30.fc34   updates       319 k
&nbsp;
Transaction Summary
================================================================================
Install  250 Packages
&nbsp;
Total download size: 271 M
Installed size: 988 M
Is this ok [y/N]:  ImageMagick-c++                                     x86_64                1:6.9
 ImageMagick-libs                                    x86_64                1:6.9
 LibRaw                                              x86_64                0.20.
 adobe-mappings-cmap                                 noarch                20190
 adobe-mappings-cmap-deprecated                      noarch                20190
 adobe-mappings-pdf                                  noarch                20190
 atkmm                                               x86_64                2.28.
 blosc                                               x86_64                1.21.
Is this ok [y/N]:
</pre>

<p>Instalace na Linux Mintu a dalších distribucích odvozených od Ubuntu nebo
Debianu probíhá prakticky stejným způsobem (i když je použit zcela odlišný
systém balíčků):</p>

<pre>
$ <strong>sudo apt-get install python3-notebook</strong>
</pre>

<p>Samozřejmě se i v&nbsp;tomto případě nainstaluje i velká řada podpůrných
balíčků:</p>

<pre>
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  fonts-font-awesome fonts-glyphicons-halflings javascript-common jupyter-core jupyter-nbextension-jupyter-js-widgets jupyter-notebook libjs-backbone libjs-bootstrap
  libjs-bootstrap-tour libjs-codemirror libjs-es6-promise libjs-jed libjs-jquery libjs-jquery-typeahead libjs-jquery-ui libjs-marked libjs-moment libjs-requirejs
  libjs-requirejs-text libjs-text-encoding libjs-underscore libjs-xterm pandoc pandoc-data python3-attr python3-bleach python3-dateutil python3-defusedxml
  python3-html5lib python3-importlib-metadata python3-ipykernel python3-ipywidgets python3-jinja2 python3-jsonschema python3-jupyter-client python3-jupyter-core
  python3-mistune python3-more-itertools python3-nbconvert python3-nbformat python3-pandocfilters python3-prometheus-client python3-pyrsistent python3-send2trash
  python3-terminado python3-testpath python3-tornado python3-webencodings python3-widgetsnbextension python3-zipp python3-zmq
Suggested packages:
  apache2 | lighttpd | httpd libjs-jquery-lazyload libjs-json libjs-jquery-ui-docs texlive-latex-recommended texlive-xetex texlive-luatex pandoc-citeproc
  texlive-latex-extra context wkhtmltopdf librsvg2-bin groff ghc nodejs php python ruby r-base-core node-katex python-attr-doc python-bleach-doc python3-genshi
  python3-lxml python-ipywidgets-doc python-jinja2-doc python-jsonschema-doc python-nbconvert-doc python-notebook-doc python-tornado-doc python3-twisted
The following NEW packages will be installed:
  fonts-font-awesome fonts-glyphicons-halflings javascript-common jupyter-core jupyter-nbextension-jupyter-js-widgets jupyter-notebook libjs-backbone libjs-bootstrap
  libjs-bootstrap-tour libjs-codemirror libjs-es6-promise libjs-jed libjs-jquery libjs-jquery-typeahead libjs-jquery-ui libjs-marked libjs-moment libjs-requirejs
  libjs-requirejs-text libjs-text-encoding libjs-underscore libjs-xterm pandoc pandoc-data python3-attr python3-bleach python3-dateutil python3-defusedxml
  python3-html5lib python3-importlib-metadata python3-ipykernel python3-ipywidgets python3-jinja2 python3-jsonschema python3-jupyter-client python3-jupyter-core
  python3-mistune python3-more-itertools python3-nbconvert python3-nbformat python3-notebook python3-pandocfilters python3-prometheus-client python3-pyrsistent
  python3-send2trash python3-terminado python3-testpath python3-tornado python3-webencodings python3-widgetsnbextension python3-zipp python3-zmq
0 upgraded, 52 newly installed, 0 to remove and 424 not upgraded.
Need to get 21,1 MB of archives.
After this operation, 165 MB of additional disk space will be used.
Do you want to continue? [Y/n] 
</pre>

<p>Využít je možné i správce balíčků <a
href="https://docs.conda.io/en/latest/">Conda</a>. V&nbsp;případě, že tento
nástroj používáte, bude instalace vypadat následovně:</p>

<pre>
$ <strong>conda install -c conda-forge notebook</strong>
</pre>

<p>A konečně lze použít i klasický <strong>pip</strong> nebo
<strong>pip3</strong> (v&nbsp;závislosti na tom, jaký je stav Pythonu 3 na
daném operačním systému):</p>

<pre>
$ <strong>pip install notebook</strong>
</pre>

<p>V&nbsp;případě, že <strong>pip</strong> instaluje balíčky pro Python 2 a
nikoli pro Python 3, použijeme:</p>

<pre>
$ <strong>pip3 install notebook</strong>
</pre>

<p>Použít je možné i spuštění v&nbsp;kontejneru. Konkrétně pro Docker je
k&nbsp;dispozici hned několik obrazů Jupyter Notebooku, každý s&nbsp;rozdílnými
kernely a dalšími moduly. Viz <a
href="https://hub.docker.com/u/jupyter/#!">https://hub.docker.com/u/jupyter/#!</a>.</p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Nastavení Jupyter Notebooku</h2>

<p>Ještě před prvním spuštěním Jupyter Notebooku je vhodné si nastavit heslo,
které se bude zadávat pro přístup do jeho grafického uživatelského
rozhraní:</p>

<pre>
$ <strong>jupyter notebook password</strong>
&nbsp;  
Enter password:
Verify password:
[NotebookPasswordApp] Wrote hashed password to /home/ptisnovs/.jupyter/jupyter_notebook_config.json
</pre>

<p>Nyní konečně nastal čas spustit Jupyter Notebook:</p>

<pre>
$ <strong>jupyter notebook</strong>
&nbsp;
[I 02:44:07.823 NotebookApp] Writing notebook server cookie secret to /home/tester/.local/share/jupyter/runtime/notebook_cookie_secret
[C 02:44:08.404 NotebookApp] Running as root is not recommended. Use --allow-root to bypass.
[root@hpe-dl380pgen8-02-vm-15 ~]# jupyter notebook --allow-root
[I 02:44:23.193 NotebookApp] Serving notebooks from local directory: /home/tester
[I 02:44:23.193 NotebookApp] Jupyter Notebook 6.1.6 is running at:
[I 02:44:23.193 NotebookApp] http://localhost:8888/
[I 02:44:23.193 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
</pre>

<p>Současně by se ve webovém prohlížeči měl otevřít další tab s&nbsp;úvodní
obrazovkou Jupyter Notebooku určenou pro přihlášení. Po přihlášení (heslo jsme
nastavili v&nbsp;předchozím kroku) se otevře okno, v&nbsp;němž je možné
vytvořit nový sešit/diář (New) nebo otevřít sešit již existující:</p>

<a href="https://www.root.cz/obrazek/445239/"><img src="https://i.iinfo.cz/images/198/calysto-hy-4-prev.png" class="image-445239" alt="&#160;" width="370" height="134" /></a>
<p><i>Obrázek 1: První spuštění Jupyter Notebooku.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Ukázky použití knihovny SymPy v&nbsp;Jupyter Notebooku</h2>

<p>Podívejme se nyní na to, jakým způsobem se změní výstup skriptů,
s&nbsp;nimiž jsme se již seznámili v&nbsp;rámci úvodního článku
popř.&nbsp;předchozích kapitol:</p>

*** image ***
<p><i>Obrázek 2: Výstup, který vlastně napodobuje klasický terminál
s&nbsp;fontem s&nbsp;podporou Unicode.</i></p>

*** image ***
<p><i>Obrázek 3: Ovšem tento výraz je již zobrazen v&nbsp;&bdquo;pravé
matematické&ldquo; notaci.</i></p>

*** image ***
<p><i>Obrázek 4: Způsob zobrazení zlomků v&nbsp;matematické notaci.</i></p>

*** image ***
<p><i>Obrázek 5: Mocniny, výrazy v&nbsp;mocninách (exponentu) a zlomky
v&nbsp;jediném výrazu.</i></p>

*** image ***
<p><i>Obrázek 6: Symbolické vyjádření kořenů kvadratické rovnice
(resp.&nbsp;jednoho z&nbsp;kořenů).</i></p>

*** image ***
<p><i>Obrázek 7: Derivace výrazu.</i></p>

*** image ***
<p><i>Obrázek 8: Množina (sjednocení dvou množin) s&nbsp;vyjádřením všech
hodnot x, pro které funkce cos nabývá nulové hodnoty.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Vykreslení grafů knihovnou SymPy</h2>

<p>Knihovna SymPy podporuje i vykreslení grafů. Opět se podívejme na několik
ukázek. Vstupem pro vykreslení grafu je ve všech případech symbolický zápis
nějaké funkce &ndash; buď funkce přímo zapsané uživatelem, nebo se jedná o
výsledek výpočtu, například derivace nebo integrace:</p>

*** image ***
<p><i>Obrázek 9: Vykreslení průběhu funkce.</i></p>

*** image ***
<p><i>Obrázek 10: Takto vypadá derivace předchozí funkce.</i></p>

*** image ***
<p><i>Obrázek 11: Průběh funkce sinc.</i></p>

*** image ***
<p><i>Obrázek 12: Derivace funkce sinc.</i></p>

*** image ***
<p><i>Obrázek 13: Integrace funkce sinc.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Výstup do TeXu/LaTeXu</h2>

<pre>
</pre>

<pre>
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>


<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>sympy01.py</td><td>zjednodušování konstantního výrazu s&nbsp;odmocninou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy01.py</a></td></tr>
<tr><td> 2</td><td>sympy02.py</td><td>zjednodušování konstantních výrazů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy02.py</a></td></tr>
<tr><td> 3</td><td>sympy03.py</td><td>čitelný výpis výrazů funkcí <strong>sympy.pprint</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy03.py</a></td></tr>
<tr><td> 4</td><td>sympy04.py</td><td>čitelný výpis výrazů funkcí <strong>sympy.pprint</strong>, složitější výsledky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy04.py</a></td></tr>
<tr><td> 5</td><td>sympy05.py</td><td>deklarace a &bdquo;terminálový&ldquo; výpis jednoduchého výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy05.py</a></td></tr>
<tr><td> 6</td><td>sympy06.py</td><td>deklarace a &bdquo;matematický&ldquo; výpis jednoduchého výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy06.py</a></td></tr>
<tr><td> 7</td><td>sympy07.py</td><td>výraz s&nbsp;větším množstvím proměnných (zlomek)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy07.py</a></td></tr>
<tr><td> 8</td><td>sympy08.py</td><td>výraz s&nbsp;větším množstvím proměnných (zlomek)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy08.py</a></td></tr>
<tr><td> 9</td><td>sympy09.py</td><td>zjednodušení výrazu s&nbsp;jedinou proměnnou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy09.py</a></td></tr>
<tr><td>10</td><td>sympy10.py</td><td>zjednodušení výrazu se třemi proměnnými a se zlomky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy10.py</a></td></tr>
<tr><td>11</td><td>sympy11.py</td><td>pokus o použití nedefinované proměnné</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy11.py</a></td></tr>
<tr><td>12</td><td>sympy12.py</td><td>výraz x<sup>2</sup>-y<sup>2</sup></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy12.py</a></td></tr>
<tr><td>13</td><td>sympy13.py</td><td>složitější výraz s&nbsp;několika členy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy13.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy13.py</a></td></tr>
<tr><td>14</td><td>sympy14.py</td><td>faktorizace výrazu x<sup>2</sup>-y<sup>2</sup></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy14.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy14.py</a></td></tr>
<tr><td>15</td><td>sympy15.py</td><td>faktorizace výrazu x<sup>2</sup>-2x + 1</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy15.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy15.py</a></td></tr>
<tr><td>16</td><td>sympy16.py</td><td>expanze výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy16.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy16.py</a></td></tr>
<tr><td>17</td><td>sympy17.py</td><td>expanze (roznásobení závorek) složitějšího výrazu se dvěma proměnnými</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy17.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy17.py</a></td></tr>
<tr><td>18</td><td>sympy18.py</td><td>expanze (roznásobení závorek) složitějšího výrazu se třemi proměnnými</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy18.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy18.py</a></td></tr>
<tr><td>19</td><td>sympy19.py</td><td>řešení kvadratické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy19.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy19.py</a></td></tr>
<tr><td>20</td><td>sympy20.py</td><td>řešení kvadratické rovnice, odlišná forma výstupu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy20.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy20.py</a></td></tr>
<tr><td>21</td><td>sympy21.py</td><td>řešení kvadratické rovnice se dvěma neznámými</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy21.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy21.py</a></td></tr>
<tr><td>22</td><td>sympy22.py</td><td>výpočet derivace polynomu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy22.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy22.py</a></td></tr>
<tr><td>23</td><td>sympy23.py</td><td>výpočet derivace složitějšího výrazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy23.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy23.py</a></td></tr>
<tr><td>24</td><td>sympy24.py</td><td>výpočet integrace polynomu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy24.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy24.py</a></td></tr>
<tr><td>25</td><td>sympy25.py</td><td>výpočet integrace složitějšího polynomu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy25.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy25.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>sympy26.py</td><td>symboly vs. proměnné</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy26.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy26.py</a></td></tr>
<tr><td>27</td><td>sympy27.py</td><td>reálné kořeny kvadratické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy27.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy27.py</a></td></tr>
<tr><td>28</td><td>sympy28.py</td><td>komplexní kořeny kvadratické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy28.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy28.py</a></td></tr>
<tr><td>29</td><td>sympy29.py</td><td>hledání kořenů kubické rovnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy29.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy29.py</a></td></tr>
<tr><td>30</td><td>sympy30.py</td><td>kořeny polynomů vyšších stupňů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy30.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy30.py</a></td></tr>
<tr><td>31</td><td>sympy31.py</td><td>průchod nulovými body periodické funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy31.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy31.py</a></td></tr>
<tr><td>32</td><td>sympy32.py</td><td>vyhledání všech možných řešení</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy32.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy32.py</a></td></tr>
<tr><td>33</td><td>sympy33.py</td><td>vyhledání řešení pro funkci <i>sinc</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy33.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy33.py</a></td></tr>
<tr><td>34</td><td>sympy34.py</td><td>řešení nerovnosti</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy34.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy34.py</a></td></tr>
<tr><td>35</td><td>sympy35.py</td><td>složitější nerovnost s&nbsp;goniometrickou funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy35.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy35.py</a></td></tr>
<tr><td>36</td><td>sympy36.py</td><td>řešení dvojice nerovnic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy36.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy36.py</a></td></tr>
<tr><td>37</td><td>sympy37.py</td><td>složitější dvojice nerovnic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy37.py">https://github.com/tisnik/most-popular-python-libs/blob/master/concurrent/sympy37.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>SymPy<br />
<a href="https://www.sympy.org/en/index.html">https://www.sympy.org/en/index.html</a>
</li>

<li>SymPy na PyPi<br />
<a href="https://pypi.org/project/sympy/">https://pypi.org/project/sympy/</a>
</li>

<li>mpmath<br />
<a href="https://mpmath.org/">https://mpmath.org/</a>
</li>

<li>mpmath na PyPi<br />
<a href="https://pypi.org/project/mpmath/">https://pypi.org/project/mpmath/</a>
</li>

<li>Symbolic Maths in Python<br />
<a href="https://alexandrugris.github.io/maths/2017/04/30/symbolic-maths-python.html">https://alexandrugris.github.io/maths/2017/04/30/symbolic-maths-python.html</a>
</li>

<li>SymPy shell<br />
<a href="https://live.sympy.org/">https://live.sympy.org/</a>
</li>

<li>Symbolic programming<br />
<a href="https://en.wikipedia.org/wiki/Symbolic_programming">https://en.wikipedia.org/wiki/Symbolic_programming</a>
</li>

<li>Symbolic language (programming)<br />
<a href="https://en.wikipedia.org/wiki/Symbolic_language_(programming)">https://en.wikipedia.org/wiki/Symbolic_language_(programming)</a>
</li>

<li>Computer algebra<br />
<a href="https://en.wikipedia.org/wiki/Computer_algebra">https://en.wikipedia.org/wiki/Computer_algebra</a>
</li>

<li>Common Lisp: A Gentle Introduction to Symbolic Computation<br />
<a href="https://www.cs.cmu.edu/~dst/LispBook/">https://www.cs.cmu.edu/~dst/LispBook/</a>
</li>

<li>List of computer algebra systems<br />
<a href="https://en.wikipedia.org/wiki/List_of_computer_algebra_systems">https://en.wikipedia.org/wiki/List_of_computer_algebra_systems</a>
</li>

<li>Polynom<br />
<a href="https://cs.wikipedia.org/wiki/Polynom">https://cs.wikipedia.org/wiki/Polynom</a>
</li>

<li>What is SimPy? How to run python simulations?<br />
<a href="https://divyas090909.medium.com/what-is-simpy-how-to-run-python-simulations-348736b50615">https://divyas090909.medium.com/what-is-simpy-how-to-run-python-simulations-348736b50615</a>
</li>

<li>SimPy: Simulating Real-World Processes With Python<br />
<a href="https://realpython.com/simpy-simulating-with-python/">https://realpython.com/simpy-simulating-with-python/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

