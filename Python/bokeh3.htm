<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovna Bokeh: dokončení</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovna Bokeh: dokončení</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve třetím a současně i posledním článku o knihovně Bokeh si ukážeme způsoby použití témat, vykreslení dat reprezentovaných jako matice nebo rastrové obrázky, seřazení hodnot podle zvolených kritérií i kooperaci mezi částí psanou v Pythonu a částí psanou v JavaScriptu.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Knihovna Bokeh: dokončení</a></p>
<p><a href="#k02">2. Témata ovlivňující barvy i styl vykreslení grafů</a></p>
<p><a href="#k03">3. Ukázky podporovaných témat stylů grafů</a></p>
<p><a href="#k04">4. Graf obsahující data ve formě rastrového obrázku</a></p>
<p><a href="#k05">5. Rastrová data s&nbsp;proměnným počtem sloupců a řádků</a></p>
<p><a href="#k06">6. Textura &ndash; moiré</a></p>
<p><a href="#k07">7. Použití externí barvové palety (LUT)</a></p>
<p><a href="#k08">8. Rastrové obrázky a interní barvové palety Bokehu</a></p>
<p><a href="#k09">9. Zobrazení obrázku s&nbsp;interní barvovou paletou Bokehu</a></p>
<p><a href="#k10">10. Popisky na x-ové ose sloupcového grafu</a></p>
<p><a href="#k11">11. Seřazení hodnot podle zadaného kritéria</a></p>
<p><a href="#k12">12. Použití struktury <strong>ColumnDataSource</strong></a></p>
<p><a href="#k13">*** 13. Zvýraznění hodnot ve sloupcovém grafu s&nbsp;využitím různých barev sloupců</a></p>
<p><a href="#k14">*** 14. Interaktivní přepočet grafů</a></p>
<p><a href="#k15">*** 15. Přidání posuvníku pro interaktivní změnu amplitudy jednoho průběhu v&nbsp;grafu</a></p>
<p><a href="#k16">*** 16. Data pro vykreslení grafu dostupná ve formě <strong>ColumnDataSource</strong></a></p>
<p><a href="#k17">*** 17. Temná strana Bokehu &ndash; přepočet dat v&nbsp;JavaScriptu</a></p>
<p><a href="#k18">18. Závěrečné shrnutí</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Knihovna Bokeh: dokončení</h2>

<p>Ve třetím a současně i posledním článku o knihovně Bokeh, který navazuje na
články [<a
href="https://www.root.cz/clanky/tvorba-interaktivnich-grafu-pro-webove-stranky-a-aplikace-s-vyuzitim-knihovny-bokeh/">1</a>]
a [<a
href="https://www.root.cz/clanky/knihovna-bokeh-zobrazeni-vetsiho-mnozstvi-grafu-interaktivni-prvky-na-strance-s-grafy/">2</a>]
si ukážeme způsob výběru a použití témat (ovlivňujících barvy, fonty apod.
zobrazených grafů), vykreslení dat reprezentovaných formou matic
(N-dimenzionální pole knihovny <i>NumPy</i>) nebo formou rastrových obrázků,
seřazení hodnot podle zvolených kritérií i kooperaci mezi částí psanou
v&nbsp;Pythonu a částí naprogramovanou v&nbsp;JavaScriptu. Na závěr si řekneme,
kde je vhodné Bokeh použít a v&nbsp;jakých oblastech naopak tato knihovna
neposkytuje požadovanou funkcionalitu a je lepší ji nahradit odlišnou
technologií (<a
href="https://www.root.cz/clanky/jupyter-notebook-nastroj-pro-programatory-vyzkumniky-i-lektory/">Jupyter
Notebook</a>, Plotly atd.).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Témata ovlivňující barvy i styl vykreslení grafů</h2>

<p>Všechny grafy, které jsme si až doposud ukazovali, byly zobrazeny
s&nbsp;využitím standardního <i>tématu</i>, které ovlivňuje především barvy
použité nejenom v&nbsp;samotném grafu, ale i všemi dalšími ovládacími prvky.
Kromě toho téma ovlivňuje i použité fonty &ndash; a teoreticky všechny vizuální
atributy, které lze nastavit přes kaskádní styly (CSS). Bokeh kromě
standardního tématu obsahuje i několik témat dalších. Samotný výběr tématu je
až triviálně jednoduchý. Nejdříve je nutné naimportovat další dva balíčky:</p>

<pre>
from bokeh.themes import built_in_themes
from bokeh.io import curdoc
</pre>

<p>Zvolené téma (resp.&nbsp;jeho jméno &ndash; řetězec) se následně pouze uloží
do atributu pojmenovaného <strong>theme</strong> objektu, jenž je získán
zavoláním tovární metody <strong>curdoc()</strong> (<i>current
document</i>):</p>

<pre>
<i># nastavení tématu</i>
curdoc().theme = 'caliber'
</pre>

<p><div class="rs-tip-major">Poznámka: nastavení tématu lze teoreticky provést
kdykoli, ovšem nejlepší je provést tuto velmi důležitou volbu před zavoláním
metody <strong>show</strong>, protože chování nových verzí knihovny Bokeh může
být odlišné.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Ukázky podporovaných témata stylů grafů</h2>

<p>Pojďme si nyní ukázat, jak budou po vizuální stránce vypadat grafy, které
sice zobrazují stejná data, ovšem pokaždé s&nbsp;využitím odlišného tématu.
Začneme tématem nazvaným &bdquo;caliber&ldquo;:</p>

*** image ***
<p><i>Obrázek 1: Graf zobrazený s&nbsp;využitím tématu &bdquo;caliber&ldquo;.</i></p>

<p>Úplný zdrojový kód dnešního prvního demonstračního příkladu naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_caliber.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_caliber.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, show
from bokeh.themes import built_in_themes
from bokeh.io import curdoc
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># nastavení tématu</i>
curdoc().theme = 'caliber'
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#0aa")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#aa0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Další dostupné téma se jmenuje &bdquo;dark_minimal&ldquo;:</p>

*** image ***
<p><i>Obrázek 2: Graf zobrazený s&nbsp;využitím tématu &bdquo;dark_minimal&ldquo;.</i></p>

<p>Úplný zdrojový kód dnešního druhého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_dark_minimal.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_dark_minimal.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, show
from bokeh.themes import built_in_themes
from bokeh.io import curdoc
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># nastavení tématu</i>
curdoc().theme = 'dark_minimal'
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#0aa")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#aa0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Třetí téma, které si ukážeme, se jmenuje &bdquo;light_minimal&ldquo;:</p>

*** image ***
<p><i>Obrázek 3: Graf zobrazený s&nbsp;využitím tématu &bdquo;light_minimal&ldquo;.</i></p>

<p>Úplný zdrojový kód dnešního třetího demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_light_minimal.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_light_minimal.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, show
from bokeh.themes import built_in_themes
from bokeh.io import curdoc
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># nastavení tématu</i>
curdoc().theme = 'light_minimal'
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#0aa")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#aa0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>A konečně čtvrté dostupné téma nese název &bdquo;night_sky&ldquo;:</p>

*** image ***
<p><i>Obrázek 4: Graf zobrazený s&nbsp;využitím tématu &bdquo;night_sky&ldquo;.</i></p>

<p>Úplný zdrojový kód dnešního čtvrtého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_night_sky.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_night_sky.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, show
from bokeh.themes import built_in_themes
from bokeh.io import curdoc
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># nastavení tématu</i>
curdoc().theme = 'night_sky'
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#0aa")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#aa0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Graf obsahující data ve formě rastrového obrázku</h2>

<p>Knihovna Bokeh dokáže v&nbsp;případě potřeby vizualizovat i data dostupná ve
formě 2D matice popř.&nbsp;ve formě rastrového obrázku, který je možné
interaktivně zvětšovat, zmenšovat a posouvat, stejně jako jakýkoli jiný typ
grafu. Podívejme se nyní na způsob reprezentace takového obrázku i na postup
pro jeho vykreslení.</p>

<p><div class="rs-tip-major">Poznámka: budeme do značné míry využívat
schopností knihovny NumPy, která je ostatně pro manipulaci s&nbsp;podobně
strukturovanými daty (vektory, matice, vícerozměrná pole) navržena.</div></p>

<p>V&nbsp;prvním kroku si připravíme dvourozměrnou (prázdnou) matici o
rozměrech <strong>IMAGE_HEIGHT</strong>&times;<strong>IMAGE_WIDTH</strong>,
tedy matici s&nbsp;<strong>IMAGE_HEIGHT</strong> řádky a
<strong>IMAGE_WIDTH</strong> sloupci (<strong>IMAGE_WIDTH</strong> a
<strong>IMAGE_HEIGHT</strong> jsou pochopitelně celá kladná čísla). Povšimněte
si, že typ prvků je nastaven na <strong>uint32</strong>, protože každá hodnota
bude reprezentována 32bitovým celým číslem bez znaménka (používáme NumPy, kde
se s&nbsp;datovými typy pracuje podobně jako v&nbsp;C a Fortranu):</p>

<pre>
image = np.empty((IMAGE_HEIGHT, IMAGE_WIDTH), dtype=np.uint32)
</pre>

<p>Následně si vytvoříme <i>pohled</i> (<i>view</i>) na tuto matici. Tento
pohled bude matici zvnějšku reprezentovat jako trojrozměrné pole
<strong>IMAGE_HEIGHT</strong>&times;<strong>IMAGE_WIDTH</strong>&times;4 bajtů
(typ <strong>uint8</strong>). Důvod je jednoduchý &ndash; každý pixel původní
matice je logicky rozložen na tři barvové složky + hodnoty průhlednosti:</p>

<pre>
view = image.view(dtype=np.uint8).reshape((IMAGE_HEIGHT, IMAGE_WIDTH, 4))
</pre>

<p>Matici naplníme vhodnými daty, například kombinovaným gradientním přechodem
černá-červená v&nbsp;horizontálním směru a černá-modrá ve směru vertikálním.
Zelená složka je nastavena na nulu a průhlednost na zcela neprůhlednou
barvu:</p>

<pre>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        view[j, i, 0] = int(255 * j / IMAGE_HEIGHT) <i># red</i>
        view[j, i, 1] = 0                           <i># green</i>
        view[j, i, 2] = int(255 * i / IMAGE_WIDTH)  <i># blue</i>
        view[j, i, 3] = 255                         <i># alpha</i>
</pre>

<p>Nyní již postačuje obsah matice vykreslit ve formě rastrového obrázku.
Povšimněte si, že rozměry obrázku v&nbsp;ploše prohlížeče mohou být odlišné od
původního (nativního) rozlišení. Zde konkrétně použijeme desetinásobné zvětšení
v&nbsp;obou osách:</p>

<pre>
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH*10, height=IMAGE_HEIGHT*10, x_range=(0, 10), y_range=(0, 10))
&nbsp;
<i># vykreslení rastrového obrázku typu RGBA</i>
p.image_rgba(image=[image], x=[0], y=[0], dw=[10], dh=[10])
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Výsledek bude vypadat následovně:</p>

*** image ***
<p><i>Obrázek 5: Rastrový obrázek zobrazený knihovnou Bokeh v&nbsp;ploše
prohlížeče.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster1.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, output_file, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># velikost rastrového obrázku</i>
IMAGE_WIDTH = 32
IMAGE_HEIGHT = 32
&nbsp;
<i># matice představující bázi rastrového obrázku</i>
image = np.empty((IMAGE_HEIGHT, IMAGE_WIDTH), dtype=np.uint32)
&nbsp;
<i># "pohled" na matici jako na trojrozměrné pole</i>
view = image.view(dtype=np.uint8).reshape((IMAGE_HEIGHT, IMAGE_WIDTH, 4))
&nbsp;
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        view[j, i, 0] = int(255 * j / IMAGE_HEIGHT) <i># red</i>
        view[j, i, 1] = 0                           <i># green</i>
        view[j, i, 2] = int(255 * i / IMAGE_WIDTH)  <i># blue</i>
        view[j, i, 3] = 255                         <i># alpha</i>
&nbsp;
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH*10, height=IMAGE_HEIGHT*10, x_range=(0, 10), y_range=(0, 10))
&nbsp;
<i># vykreslení rastrového obrázku typu RGBA</i>
p.image_rgba(image=[image], x=[0], y=[0], dw=[10], dh=[10])
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Rastrová data s&nbsp;proměnným počtem sloupců a řádků</h2>

<p>V&nbsp;předchozím příkladu byl rastrový obrázek čtvercový, konkrétně měl
rozměry 32&times;32 pixelů:</p>

<pre>
<i># velikost rastrového obrázku</i>
IMAGE_WIDTH = 32
IMAGE_HEIGHT = 32
</pre>

<p>Nic nám však nebrání v&nbsp;používání obrázků, v&nbsp;nichž je horizontální
a vertikální rozlišení odlišné, tj.&nbsp;kde počet sloupců neodpovídá počtu
řádků:</p>

<pre>
<i># velikost rastrového obrázku</i>
IMAGE_WIDTH = 16
IMAGE_HEIGHT = 10
</pre>

<p>Při vykreslení jednotlivé pixely zvětšíme 30&times;:</p>

<pre>
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH*30, height=IMAGE_HEIGHT*30, x_range=(0, 10), y_range=(0, 10))
</pre>

<p>S&nbsp;následujícím výsledkem:</p>

*** image ***
<p><i>Obrázek 6: Rastrová data v&nbsp;původním rozlišení 16&times;10
pixelů.</i></p>

<p>Úplný zdrojový kód tohoto pozměněného demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster2.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, output_file, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># velikost rastrového obrázku</i>
IMAGE_WIDTH = 16
IMAGE_HEIGHT = 10
&nbsp;
<i># matice představující bázi rastrového obrázku</i>
image = np.empty((IMAGE_HEIGHT, IMAGE_WIDTH), dtype=np.uint32)
&nbsp;
<i># "pohled" na matici jako na trojrozměrné pole</i>
view = image.view(dtype=np.uint8).reshape((IMAGE_HEIGHT, IMAGE_WIDTH, 4))
&nbsp;
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        view[j, i, 0] = int(255 * j / IMAGE_HEIGHT) <i># red</i>
        view[j, i, 1] = 0                           <i># green</i>
        view[j, i, 2] = int(255 * i / IMAGE_WIDTH)  <i># blue</i>
        view[j, i, 3] = 255                         <i># alpha</i>
&nbsp;
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH*30, height=IMAGE_HEIGHT*30, x_range=(0, 10), y_range=(0, 10))
&nbsp;
<i># vykreslení rastrového obrázku typu RGBA</i>
p.image_rgba(image=[image], x=[0], y=[0], dw=[10], dh=[10])
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Textura &ndash; moiré</h2>

<p>Můžeme se pokusit i o programové vytvoření složitějších vzorků (textury).
Bude se konkrétně jednat o procedurální texturu založenou na efektu takzvaného
<i>moaré</i>. Tuto procedurální texturu (či možná lépe řečeno rastrový vzorek)
vytvořil John Connett z&nbsp;Minnesotské univerzity. O tomto vzorku, který
v&nbsp;podstatě názorně ukazuje vliv aliasu při tvorbě rastrových obrázků,
později pojednal i A. K. Dewdney v&nbsp;časopise <i>Scientific American</i>.
Popisovaný vzorek je generovaný velmi jednoduchým a taktéž dostatečně rychlým
způsobem: každému pixelu ve vytvářeném rastrovém obrázku (bitmapě) je přiřazena
dvojice souřadnic [x, y]. Tyto souřadnice obecně neodpovídají celočíselným
indexům pixelu, které můžeme například označit [i, j] (záleží totiž na zvoleném
faktoru zvětšení popř. zmenšení vzorku). Posléze je pro každý pixel vypočtena
hodnota <i>k</i> na základě jednoduchého vztahu k=i<sup>2</sup>+j<sup>2</sup>.
Důležité je, že tato hodnota (typicky) přeteče přes 255, takže výsledkem je
zajímavý vzorek.</p>

<p>Implementace výpočtu i s&nbsp;přetečením</p>

<pre>
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        k = i*i + j*j
        val = int(k) &amp; 255
        view[i, j, 0] = val  <i># red</i>
        view[i, j, 1] = val  <i># green</i>
        view[i, j, 2] = val  <i># blue</i>
        view[i, j, 3] = 255  <i># alpha</i>
</pre>

<p>Výsledek může po zobrazení v&nbsp;ploše prohlížeče vypadat takto:</p>

*** image ***
<p><i>Obrázek 7: Kruhové moaré vytvořené předchozím algoritmem.</i></p>

<p>Teprve po zvětšení se ukáže, jakým způsobem je vlastně vzorek vytvořen:</p>

*** image ***
<p><i>Obrázek 8: Zvětšená část předchozího obrázku.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster3.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, output_file, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># textura by měla být čtvercová a její šířka i výška by měla být</i>
<i># mocninou čísla 2</i>
IMAGE_WIDTH = 512
IMAGE_HEIGHT = 512
&nbsp;
<i># matice představující bázi rastrového obrázku</i>
image = np.empty((IMAGE_HEIGHT, IMAGE_WIDTH), dtype=np.uint32)
&nbsp;
<i># "pohled" na matici jako na trojrozměrné pole</i>
view = image.view(dtype=np.uint8).reshape((IMAGE_HEIGHT, IMAGE_WIDTH, 4))
&nbsp;
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        k = i*i + j*j
        val = int(k) &amp; 255
        view[i, j, 0] = val  <i># red</i>
        view[i, j, 1] = val  <i># green</i>
        view[i, j, 2] = val  <i># blue</i>
        view[i, j, 3] = 255  <i># alpha</i>
&nbsp;
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH, height=IMAGE_HEIGHT, x_range=(0, 10), y_range=(0, 10))
&nbsp;
<i># vykreslení rastrového obrázku typu RGBA</i>
p.image_rgba(image=[image], x=[0], y=[0], dw=[10], dh=[10])
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Použití externí barvové palety (LUT)</h2>

<p>K&nbsp;výše popsanému algoritmu ještě přidáme část, která na základě
vypočtené hodnoty <i>k</i> vybere vhodnou barvu z&nbsp;barvové palety a pixel
následně touto barvou vyplní. Tímto přímočarým, rychlým a současně i
jednoduchým způsobem je možné vytvářet mnohdy fantastické vzorky; pouze stačí
měnit barvovou paletu (ideální jsou plynulé přechody mezi barvami &ndash;
<i>gradient</i>) a měřítko, pomocí kterého se převádí celočíselné pozice pixelů
v&nbsp;rastru <i>[i, j]</i> na souřadnice <i>[x, y]</i>.</p>

<img src="https://i.iinfo.cz/images/312/appjar6-1.png" class="image-309897" alt="&#160;" width="400" height="400" />
<p><i>Obrázek 9: Moaré s&nbsp;kružnicovým vzorkem.</i></p>

<p><div class="rs-tip-major">Poznámka: LUT je zkratka vzniklá ze sousloví
&bdquo;LookUp Table&ldquo;.</div></p>

<img src="https://i.iinfo.cz/images/312/appjar6-2.png" class="image-309898" alt="&#160;" width="400" height="400" />
<p><i>Obrázek 10: Mez zvětšení, při kterém již kružnicový vzorek začíná
mizet.</i></p>

<p>Přidání barvové palety:</p>

<pre>
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        k = i*i + j*j
        val = int(k) &amp; 255
        <i># aplikace barvové palety</i>
        view[i, j, 0] = palette[val][0]  <i># red</i>
        view[i, j, 1] = palette[val][1]  <i># green</i>
        view[i, j, 2] = palette[val][2]  <i># blue</i>
        view[i, j, 3] = 255              <i># alpha</i>
</pre>

<p>Přičemž barvová paleta je reprezentována polem s&nbsp;256 trojicemi:</p>

<pre>
palette = (
    (000, 000, 0),
    (000, 000, 0),
    (000, 000, 8),
    (000, 000, 16),
    (000, 000, 24),
    ...
    ...
    ...
)
</pre>

<p>Výsledek bude po zobrazení knihovnou Bokeh vypadat následovně:</p>

*** image ***
<p><i>Obrázek 11: Moaré s&nbsp;aplikací barev z&nbsp;palety (LUTu).</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster4.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, output_file, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># barvová paleta</i>
import palette_ice
&nbsp;
<i># textura by měla být čtvercová a její šířka i výška by měla být</i>
<i># mocninou čísla 2</i>
IMAGE_WIDTH = 512
IMAGE_HEIGHT = 512
&nbsp;
<i># matice představující bázi rastrového obrázku</i>
image = np.empty((IMAGE_HEIGHT, IMAGE_WIDTH), dtype=np.uint32)
&nbsp;
<i># "pohled" na matici jako na trojrozměrné pole</i>
view = image.view(dtype=np.uint8).reshape((IMAGE_HEIGHT, IMAGE_WIDTH, 4))
&nbsp;
<i># výběr barvové palety</i>
palette = palette_ice.palette
&nbsp;
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        k = i*i + j*j
        val = int(k) &amp; 255
        <i># aplikace barvové palety</i>
        view[i, j, 0] = palette[val][0]  # red
        view[i, j, 1] = palette[val][1]  # green
        view[i, j, 2] = palette[val][2]  # blue
        view[i, j, 3] = 255              # alpha
&nbsp;
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH, height=IMAGE_HEIGHT, x_range=(0, 10), y_range=(0, 10))
&nbsp;
<i># vykreslení rastrového obrázku typu RGBA</i>
p.image_rgba(image=[image], x=[0], y=[0], dw=[10], dh=[10])
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Rastrové obrázky a interní barvové palety Bokehu</h2>

<p>Ve skutečnosti nemusíme ve všech případech používat vlastní barvové palety,
protože knihovna Bokeh nám nabízí již předpřipravené palety, které jsou popsány
na stránce <a
href="https://docs.bokeh.org/en/latest/docs/reference/palettes.html">https://docs.bokeh.org/en/latest/docs/reference/palettes.html</a>.
Podívejme se nyní na způsob použití těchto palet. Postupovat budeme odlišným
způsobem, protože nebudeme rastrový obrázek vyplňovat s&nbsp;využitím dvou
vnořených programových smyček. Namísto toho využijeme dvojici velmi užitečných
funkcí knihovny NumPy &ndash; jedná se o funkce <strong>linspace</strong> a
<strong>meshgrid</strong>. Vhodnou kombinací těchto funkcí můžeme vytvořit
&bdquo;mřížku souřadnic&ldquo;, s&nbsp;nimiž dokáže knihovna NumPy velmi dobře
pracovat.</p>

<p>Nejprve si necháme vygenerovat dva vektory, z&nbsp;nichž každý obsahuje
souřadnice mřížky na x-ové resp.&nbsp;na y-ové ose:</p>

<pre>
<i># souřadnice mřížky na x-ové a y-ové ose</i>
x = np.linspace(-300, 300, IMAGE_WIDTH)
y = np.linspace(-300, 300, IMAGE_HEIGHT)
</pre>

<p>Na základě těchto dvou vektorů si necháme vygenerovat matice se všemi
kombinacemi souřadnic:</p>

<pre>
<i># matice s x-ovými a y-ovými souřadnicemi tvořícími mřížku</i>
xx, yy = np.meshgrid(x, y)
</pre>

<p>Podívejme se, jaké výsledky získáme pro vektory s&nbsp;pouhými čtyřmi
resp.&nbsp;pěti prvky:</p>

<pre>
&gt;&gt;&gt; import numpy as np
&nbsp;
&gt;&gt;&gt; x = np.linspace(1, 5, 5)
&gt;&gt;&gt; x
array([1., 2., 3., 4., 5.])
&nbsp;
&gt;&gt;&gt; y = np.linspace(1, 6, 6)
&gt;&gt;&gt; y
array([1., 2., 3., 4., 5., 6.])
&nbsp;
&gt;&gt;&gt; xx, yy = np.meshgrid(x, y)
&gt;&gt;&gt; xx
array([[1., 2., 3., 4., 5.],
       [1., 2., 3., 4., 5.],
       [1., 2., 3., 4., 5.],
       [1., 2., 3., 4., 5.],
       [1., 2., 3., 4., 5.],
       [1., 2., 3., 4., 5.]])
&nbsp;
&gt;&gt;&gt; yy
array([[1., 1., 1., 1., 1.],
       [2., 2., 2., 2., 2.],
       [3., 3., 3., 3., 3.],
       [4., 4., 4., 4., 4.],
       [5., 5., 5., 5., 5.],
       [6., 6., 6., 6., 6.]])
</pre>

<p>Vidíme, že korespondující prvky matic skutečně tvoří dvojice souřadnic
určujících jeden průsečík mřížky. A právě s&nbsp;těmito dvojici hodnot můžeme
provádět různé operace:</p>

<pre>
&gt;&gt;&gt; xx*yy
array([[ 1.,  2.,  3.,  4.,  5.],
       [ 2.,  4.,  6.,  8., 10.],
       [ 3.,  6.,  9., 12., 15.],
       [ 4.,  8., 12., 16., 20.],
       [ 5., 10., 15., 20., 25.],
       [ 6., 12., 18., 24., 30.]])
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Zobrazení obrázku s&nbsp;interní barvovou paletou Bokehu</h2>

<p>Ve chvíli, kdy máme k&nbsp;dispozici dvojici matic s&nbsp;x-ovými a y-ovými
souřadnicemi mřížky, můžeme výpočet textury založený na použití programových
smyček:</p>

<pre>
<i># vyplnění obrázku vzorkem</i>
for j in range(IMAGE_HEIGHT):
    for i in range(IMAGE_WIDTH):
        k = i*i + j*j
        val = int(k) &amp; 255
        view[i, j, 0] = val  <i># red</i>
        view[i, j, 1] = val  <i># green</i>
        view[i, j, 2] = val  <i># blue</i>
        view[i, j, 3] = 255  <i># alpha</i>
</pre>

<p>Nahradit za maticové operace (součin prvek po prvku, součet matic, převod
hodnot na zvolený datový typ, výpočet zbytku po dělení pro všechny prvky
matice):</p>

<pre>
<i># výpočet vzorku, který se má zobrazit</i>
d = np.mod((xx*xx + yy*yy).astype(int), 255)
</pre>

<p>Následně již &bdquo;pouze&ldquo; výslednou matici <strong>d</strong>
zobrazíme metodou <strong>image</strong> (nikoli <strong>image_rgba</strong>)
se specifikací barvové palety, kterou nám knihovna Bokeh nabízí:</p>

<pre>
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH, height=IMAGE_HEIGHT)
&nbsp;
<i># vykreslení rastrového obrázku do grafu</i>
p.image(image=[d], x=0, y=0, dw=10, dh=10, <strong>palette="Spectral11"</strong>, level="image")
</pre>

<p>Výsledek by měl vypadat následovně:</p>

*** image ***
<p><i>Obrázek 12: Hodnoty z&nbsp;matice vykreslené metodou
<strong>image</strong> s&nbsp;využitím zvolené barvové palety.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster5.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, output_file, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># textura by měla být čtvercová a její šířka i výška by měla být</i>
<i># mocninou čísla 2</i>
IMAGE_WIDTH = 512
IMAGE_HEIGHT = 512
&nbsp;
<i># souřadnice mřížky na x-ové a y-ové ose</i>
x = np.linspace(-300, 300, IMAGE_WIDTH)
y = np.linspace(-300, 300, IMAGE_HEIGHT)
&nbsp;
<i># matice s x-ovými a y-ovými souřadnicemi tvořícími mřížku</i>
xx, yy = np.meshgrid(x, y)
&nbsp;
<i># výpočet vzorku, který se má zobrazit</i>
d = np.mod((xx*xx + yy*yy).astype(int), 255)
&nbsp;
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH, height=IMAGE_HEIGHT)
p.x_range.range_padding = p.y_range.range_padding = 0
&nbsp;
<i># vykreslení rastrového obrázku do grafu</i>
p.image(image=[d], x=0, y=0, dw=10, dh=10, palette="Spectral11", level="image")
p.grid.grid_line_width = 0.5
&nbsp;
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Pochopitelně je možné si zvolit i jinou barvovou paletu nabízenou knihovnou
Bokeh, například:</p>

<pre>
p.image(image=[d], x=0, y=0, dw=10, dh=10, <strong>palette="RdGy11"</strong>, level="image")
</pre>

<p>S&nbsp;výsledkem:</p>

*** image ***
<p><i>Obrázek 12: Hodnoty z&nbsp;matice vykreslené metodou
<strong>image</strong> s&nbsp;využitím zvolené barvové palety.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster6.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, output_file, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># textura by měla být čtvercová a její šířka i výška by měla být</i>
<i># mocninou čísla 2</i>
IMAGE_WIDTH = 512
IMAGE_HEIGHT = 512
&nbsp;
<i># souřadnice mřížky na x-ové a y-ové ose</i>
x = np.linspace(-500, 500, IMAGE_WIDTH)
y = np.linspace(-500, 500, IMAGE_HEIGHT)
&nbsp;
<i># matice s x-ovými a y-ovými souřadnicemi tvořícími mřížku</i>
xx, yy = np.meshgrid(x, y)
&nbsp;
<i># výpočet vzorku, který se má zobrazit</i>
d = np.mod((xx*xx + yy*yy).astype(int), 255)
&nbsp;
<i># plocha pro graf</i>
p = figure(width=IMAGE_WIDTH, height=IMAGE_HEIGHT)
p.x_range.range_padding = p.y_range.range_padding = 0
&nbsp;
<i># vykreslení rastrového obrázku do grafu</i>
p.image(image=[d], x=0, y=0, dw=10, dh=10, palette="RdGy11", level="image")
p.grid.grid_line_width = 0.5
&nbsp;
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Popisky na x-ové ose sloupcového grafu</h2>

<p>Vraťme se ještě jednou k&nbsp;problematice zobrazení sloupcových grafů,
které se používají ve dvou oblastech:</p>

<ol>
<li>Hodnoty na x-ové ose tvoří například časovou řadu (tedy jedná se o seřazené hodnoty)</li>
<li>Hodnoty na x-ové ose spolu sice souvisí, ale nemusí být nutně ve vstupních datech správně seřazeny</li>
</ol>

<p>Podívejme se na druhý případ. Budeme chtít zobrazit formou sloupcového grafu
údaje získané ze stránky <a
href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a>:</p>

<pre>
<i># jména na X-ové ose</i>
languages = ("Python", "C", "Java", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Swift")
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = (12.20, 11.91, 10.47, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 1.55)
</pre>

<p>To znamená, že na x-ové ose budou zobrazena jména jazyků a na y-ové ose
jejich hodnocení. Při definici plochy pro graf použijeme parametr
<strong>x_range</strong>:</p>

<pre>
p = figure(<strong>x_range=languages</strong>, height=250, title="TIOBE index",
           toolbar_location=None, tools="")
</pre>

<p>A sloupcový graf následně vykreslíme:</p>

<pre>
p.vbar(<strong>x=languages</strong>, <strong>top=ratings</strong>, width=0.9)
</pre>

<p>S&nbsp;výsledkem:</p>

*** image ***
<p><i>Obrázek 13: Sloupcový graf se zobrazenými popularitami programovacích jazyků.</i></p>

<p>Úplný zdrojový kód tohoto příkladu vypadá následovně:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.io import output_file, show
from bokeh.plotting import figure
&nbsp;
<i># jména na X-ové ose</i>
languages = ("Python", "C", "Java", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Swift")
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = (12.20, 11.91, 10.47, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 1.55)
&nbsp;
<i># plocha pro graf</i>
p = figure(x_range=languages, height=250, title="TIOBE index",
           toolbar_location=None, tools="")
&nbsp;
<i># vykreslení průběhu hodnot</i>
p.vbar(x=languages, top=ratings, width=0.9)
&nbsp;
<i># styl vykreslení</i>
p.xgrid.grid_line_color = None
p.y_range.start = 0
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p><div class="rs-tip-major">Poznámka: pochopitelně můžeme namísto neměnných
n-tic použít seznamy (viz kód níže) nebo vektory knihovny NumPy. Výsledek bude
totožný:</div></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.io import output_file, show
from bokeh.plotting import figure
&nbsp;
<i># jména na X-ové ose</i>
languages = ["Python", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Java", "C", "Swift"]
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = [12.20, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 10.47, 11.91, 1.55]
&nbsp;
<i># plocha pro graf</i>
p = figure(x_range=languages, height=250, title="TIOBE index",
           toolbar_location=None, tools="")
&nbsp;
<i># vykreslení průběhu hodnot</i>
p.vbar(x=languages, top=ratings, width=0.9)
&nbsp;
<i># styl vykreslení</i>
p.xgrid.grid_line_color = None
p.y_range.start = 0
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Seřazení hodnot podle zadaného kritéria</h2>

<p>Jazyky lze ještě před zobrazením grafu seřadit podle jejich popularity.
Použijeme přitom následující trik, který zajistí i korektní prohození názvů
sloupců:</p>

<pre>
sorted_ratings = sorted(languages, key=lambda x: ratings[languages.index(x)])
</pre>

<p>Výsledek nyní bude vypadat takto:</p>

*** image ***
<p><i>Obrázek 14: Sloupcový graf se zobrazenými popularitami programovacích
jazyků; jazyky jsou seřazeny podle popularity.</i></p>

<p>Kód takto upraveného příkladu se zvýrazněnými rozdíly:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.io import output_file, show
from bokeh.plotting import figure
&nbsp;
<i># jména na X-ové ose</i>
languages = ["Python", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Java", "C", "Swift"]
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = [12.20, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 10.47, 11.91, 1.55]
&nbsp;
<strong>sorted_ratings = sorted(languages, key=lambda x: ratings[languages.index(x)])</strong>
&nbsp;
<i># plocha pro graf</i>
p = figure(<strong>x_range=sorted_ratings</strong>, height=350, title="TIOBE index",
           toolbar_location=None, tools="")
&nbsp;
<i># vykreslení průběhu hodnot</i>
p.vbar(x=languages, top=ratings, width=0.9)
&nbsp;
<i># styl vykreslení</i>
p.xgrid.grid_line_color = None
p.y_range.start = 0
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Opačné seřazení (nejprve jazyky s&nbsp;vyšší popularitou) je stejně
snadné:</p>

<pre>
sorted_ratings = (sorted(languages, key=lambda x: ratings[languages.index(x)]))[::-1]
</pre>

*** image ***
<p><i>Obrázek 15: Sloupcový graf se zobrazenými popularitami programovacích
jazyků; jazyky jsou seřazeny podle popularity &ndash; první je jazyk
s&nbsp;nejvyšší popularitou.</i></p>

<p>Kód takto upraveného příkladu se zvýrazněnými rozdíly:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.io import output_file, show
from bokeh.plotting import figure
&nbsp;
<i># jména na X-ové ose</i>
languages = ["Python", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Java", "C", "Swift"]
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = [12.20, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 10.47, 11.91, 1.55]
&nbsp;
<strong>sorted_ratings = (sorted(languages, key=lambda x: ratings[languages.index(x)]))[::-1]</strong>
&nbsp;
<i># plocha pro graf</i>
p = figure(x_range=sorted_ratings, height=350, title="TIOBE index",
           toolbar_location=None, tools="")
&nbsp;
<i># vykreslení průběhu hodnot</i>
p.vbar(x=languages, top=ratings, width=0.9)
&nbsp;
<i># styl vykreslení</i>
p.xgrid.grid_line_color = None
p.y_range.start = 0
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Použití struktury <strong>ColumnDataSource</strong></h2>

<p>Prozatím byla data pro graf reprezentována formou sekvencí hodnot, n-tic,
seznamů nebo vektorů a matic (NumPy). Ve skutečnosti je to však polovičaté
řešení, protože knihovna Bokeh umožňuje vstupní data &bdquo;obalit&ldquo;
strukturou <strong>ColumnDataSource</strong>, která nám umožňuje specifikaci
barev pro každou hodnotu zvlášť atd. Podívejme se, jak taková struktura
vznikne.  Je to jednoduché:</p>

<pre>
<i># definice zdroje dat</i>
source = <strong>ColumnDataSource(data=dict(languages=languages, ratings=ratings))</strong>
</pre>

<p>Specifikovali jsme tedy jak hodnoty na x-ové ose (názvy jazyků), tak i na
ose y-ové (jejich popularita).</p>

<p>Takto použitý zdroj dat lze snadno vykreslit do sloupcového grafu:</p>

<pre>
<i># vykreslení průběhu hodnot</i>
p.vbar(x='languages', top='ratings', <strong>source=source</strong>, width=0.9)
</pre>

<p>Výsledek bude vypadat následovně:</p>

*** image ***
<p><i>Obrázek 16: Sloupcový graf se zobrazenými popularitami programovacích jazyků.</i></p>

<p>Opět se pochopitelně podíváme na úplný zdrojový kód příkladu:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.io import output_file, show
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource
&nbsp;
<i># jména na X-ové ose</i>
languages = ["Python", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Java", "C", "Swift"]
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = [12.20, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 10.47, 11.91, 1.55]
&nbsp;
<i># definice zdroje dat</i>
source = <strong>ColumnDataSource(data=dict(languages=languages, ratings=ratings))</strong>
&nbsp;
<i># plocha pro graf</i>
p = figure(x_range=languages, height=250, title="TIOBE index",
           toolbar_location=None, tools="")
&nbsp;
<i># vykreslení průběhu hodnot</i>
p.vbar(x='languages', top='ratings', <strong>source=source</strong>, width=0.9)
&nbsp;
<i># styl vykreslení</i>
p.xgrid.grid_line_color = None
p.y_range.start = 0
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Zvýraznění hodnot ve sloupcovém grafu s&nbsp;využitím různých barev sloupců</h2>

<p></p>

<pre>
<i># definice zdroje dat</i>
source = <strong>ColumnDataSource(data=dict(languages=languages, ratings=ratings, color=Spectral10))</strong>
</pre>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.io import output_file, show
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource
from bokeh.palettes import Spectral10
&nbsp;
<i># jména na X-ové ose</i>
languages = ["Python", "C++", "C#", "Visual Basic", "JavaScript", "SQL", "Assembly", "Java", "C", "Swift"]
&nbsp;
<i># hodnoty na Y-ové ose</i>
ratings = [12.20, 9.63, 6.12, 5.42, 2.09, 1.94, 1.85, 10.47, 11.91, 1.55]
&nbsp;
<i># definice zdroje dat</i>
source = <strong>ColumnDataSource(data=dict(languages=languages, ratings=ratings, color=Spectral10))</strong>
&nbsp;
<i># plocha pro graf</i>
p = figure(x_range=languages, height=250, title="TIOBE index",
           toolbar_location=None, tools="")
&nbsp;
<i># vykreslení průběhu hodnot</i>
p.vbar(x='languages', top='ratings', color='color', <strong>source=source</strong>, width=0.9)
&nbsp;
<i># styl vykreslení</i>
p.xgrid.grid_line_color = None
p.y_range.start = 0
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Interaktivní přepočet grafů</h2>

<p></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#a0a000")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Přidání posuvníku pro interaktivní změnu amplitudy jednoho průběhu v&nbsp;grafu</h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.layouts import row
from bokeh.models import Slider
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#a0a000")
&nbsp;
<i># posuvník pro změnu amplitudy</i>
amplitude_slider = Slider(start=-1, end=1, value=1, step=0.05, title="Amplitude")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(row(p, amplitude_slider))
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Data pro vykreslení grafu dostupná ve formě <strong>ColumnDataSource</strong></h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.layouts import row
from bokeh.models import Slider, ColumnDataSource, CustomJS
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># zdroj dat</i>
source = ColumnDataSource(data=dict(x=x, y=y1))
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(source=source, line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#a0a000")
&nbsp;
<i># posuvník pro změnu amplitudy</i>
amplitude_slider = Slider(start=-1, end=1, value=1, step=0.05, title="Amplitude")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(row(p, amplitude_slider))
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Temná strana Bokehu &ndash; přepočet dat v&nbsp;JavaScriptu</h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.layouts import row
from bokeh.models import Slider, ColumnDataSource, CustomJS
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># zdroj dat</i>
source = ColumnDataSource(data=dict(x=x, y=y1))
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label="x", y_axis_label="sin(x) a cos(x)")
&nbsp;
<i># vykreslení průběhu</i>
p.line(source=source, line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#a0a000")
&nbsp;
<i># callback zavolaný po změně souřadnic posuvníku</i>
on_amplitude_change = CustomJS(args=dict(source=source), code="""
    const data = source.data;
    const a = cb_obj.value
    const x = data['x']
    const y = data['y']
    for (let i = 0; i &lt; x.length; i++) {
        y[i] = a*Math.sin(x[i])
    }
    source.change.emit();
""")
&nbsp;
&nbsp;
<i># posuvník pro změnu amplitudy</i>
amplitude_slider = Slider(start=-1, end=1, value=1, step=0.05, title="Amplitude")
amplitude_slider.js_on_change("value", on_amplitude_change)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(row(p, amplitude_slider))
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Závěrečné shrnutí</h2>

<p>Knihovna Bokeh je dobře využitelná především těmi vývojáři, kteří pracují
v&nbsp;Pythonu (simulace, datové analýzy atd.) a potřebují zobrazit výsledky
měření nebo výpočtů pomocí grafů zobrazených formou statických
(resp.&nbsp;&bdquo;statických&ldquo; HTML stránek). Tyto stránky mohou být
součástí prezentace, mohou být uloženy v&nbsp;systému pro správu dokumentů, ve
Wiki, na GitHub pages atd. Předností Bokehu je, že generované HTML stránky
obsahují jak data, tak i automaticky generovaný kód psaný v&nbsp;JavaScriptu,
takže jsou grafy do určité míry interaktivní &ndash; a to bez toho, aby vývojář
musel aktivně používat či vůbec znát webové (<i>frontend</i>) technologie.
Taktéž je možné, aby uživatel, který stránku používá, graf
zvětšil/zmenšil/posunul a posléze si nechal uložit výsledek ve formě rastrového
obrázku (PNG). Musíme však znát i některá zásadní omezení Bokehu, především
fakt, že není jednoduché interaktivně měnit zobrazená data. Nejedná se tedy (a
ani to není plánováno) o náhradu interaktivních ovládacích prvků použitých
například v&nbsp;Jupyter Notebooku.</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_linear_plot.py</td><td>nejjednodušší typ grafu poskytovaný knihovnou Bokeh</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py</a></td></tr>
<tr><td> 2</td><td>02_linear_plot.py</td><td>zobrazení titulku a legendy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py</a></td></tr>
<tr><td> 3</td><td>03_sinus_plot.py</td><td>kooperace s&nbsp;knihovnou NumPy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py</a></td></tr>
<tr><td> 4</td><td>04_sin_cos_plot.py</td><td>vykreslení průběhu dvou funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py</a></td></tr>
<tr><td> 5</td><td>05_sin_cos_plot.py</td><td>alternativní způsob specifikace barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py</a></td></tr>
<tr><td> 6</td><td>06_sin_cos_circles.py</td><td>alternativní značky pro vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py</a></td></tr>
<tr><td> 7</td><td>07_bars.py</td><td>jednoduchý sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py</a></td></tr>
<tr><td> 8</td><td>08_bars.py</td><td>korektní způsob předávání hodnot pro sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py</a></td></tr>
<tr><td> 9</td><td>09_bars.py</td><td>šířka jednotlivých sloupců ve sloupcovém grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py</a></td></tr>
<tr><td>10</td><td>10_sin_cos_bars.py</td><td>sloupcový graf se specifikací začátků a konce sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/10_sin_cos_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/10_sin_cos_bars.py</a></td></tr>
<tr><td>11</td><td>11_sin_cos_circle.py</td><td>vykreslení kružnice (parametrická křivka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/11_sin_cos_circle.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/11_sin_cos_circle.py</a></td></tr>
<tr><td>12</td><td>12_spiral.py</td><td>vykreslení logaritmické spirály (parametrická křivka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/12_spiral.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/12_spiral.py</a></td></tr>
<tr><td>13</td><td>13_output_png.py</td><td>export grafu do formátu PNG</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/13_output_png.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/13_output_png.py</a></td></tr>
<tr><td>14</td><td>14_legend_styling.py</td><td>nastavení stylu zobrazení legendy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/14_legend_styling.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/14_legend_styling.py</a></td></tr>
<tr><td>15</td><td>15_figure_size.py</td><td>specifikace velikosti grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/15_figure_size.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/15_figure_size.py</a></td></tr>
<tr><td>16</td><td>16_axis_limits.py</td><td>nastavení limitu na souřadných osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/16_axis_limits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/16_axis_limits.py</a></td></tr>
<tr><td>17</td><td>17_linear_scale.py</td><td>měřítka na osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/17_linear_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/17_linear_scale.py</a></td></tr>
<tr><td>18</td><td>18_log_scale.py</td><td>logaritmické měřítko na y-ové ose</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>19</td><td>19_styles.py</td><td>styly vykreslování grafů &ndash; glyfy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/19_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/19_styles.py</a></td></tr>
<tr><td>20</td><td>20_styles.py</td><td>styly vykreslování grafů &ndash; glyfy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/20_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/20_styles.py</a></td></tr>
<tr><td>21</td><td>21_scatter.py</td><td>graf typu x-y</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/21_scatter.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/21_scatter.py</a></td></tr>
<tr><td>22</td><td>22_lorenz_attractor.py</td><td>vykreslení Lorenzova atraktoru v&nbsp;2D grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/22_lorenz_attractor.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/22_lorenz_attractor.py</a></td></tr>
<tr><td>23</td><td>23_row_plots.py</td><td>uspořádání několika grafů na webové stránce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/23_row_plots.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/23_row_plots.py</a></td></tr>
<tr><td>24</td><td>24_grid_plots.py</td><td>uspořádání několika grafů na webové stránce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/24_grid_plots.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/24_grid_plots.py</a></td></tr>
<tr><td>25</td><td>25_grid_plot_sizes.py</td><td>změna velikosti zobrazených grafů na webové stránce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/25_grid_plot_sizes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/25_grid_plot_sizes.py</a></td></tr>
<tr><td>26</td><td>26_alpha.py</td><td>změna průhlednosti vykreslovaných glyfů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/26_alpha.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/26_alpha.py</a></td></tr>
<tr><td>27</td><td>27_colors.py</td><td>modifikace barvy vykreslovaných glyfů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/27_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/27_colors.py</a></td></tr>
<tr><td>28</td><td>28_colors.py</td><td>modifikace barvy vykreslovaných glyfů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/28_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/28_colors.py</a></td></tr>
<tr><td>29</td><td>29_heatmap.py</td><td>heatmapa</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/29_heatmap.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/29_heatmap.py</a></td></tr>
<tr><td>30</td><td>30_button.py</td><td>tlačítko jako jeden z&nbsp;interaktivních prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/30_button.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/30_button.py</a></td></tr>
<tr><td>31</td><td>31_select_color.py</td><td>interaktivní výběr barvy z&nbsp;barvové palety</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/31_select_color.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/31_select_color.py</a></td></tr>
<tr><td>32</td><td>32_select_color_size.py</td><td>interaktivní výběr barvy a změna velikosti glyfů (stop)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/32_select_color_size.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/32_select_color_size.py</a></td></tr>
<tr><td>33</td><td>33_select_color_size_alpha.py</td><td>interaktivní výběr barvy a změna velikosti glyfů (stop) i průhlednosti</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/33_select_color_size_alpha.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/33_select_color_size_alpha.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>34</td><td>matplotlib_plot.py</td><td>ukázka použití &bdquo;konkurenčního&ldquo; projektu Matplotlib</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/matplotlib_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/matplotlib_plot.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>35</td><td>34_cathegorical_data_01.py</td><td>popisky na x-ové ose sloupcového grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/34_cathegorical_data_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/34_cathegorical_data_01.py</a></td></tr>
<tr><td>36</td><td>35_cathegorical_data_02.py</td><td>popisky na x-ové ose sloupcového grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/35_cathegorical_data_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/35_cathegorical_data_02.py</a></td></tr>
<tr><td>37</td><td>36_cathegorical_data_03.py</td><td>seřazení hodnot podle zadaného kritéria</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/36_cathegorical_data_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/36_cathegorical_data_03.py</a></td></tr>
<tr><td>38</td><td>37_cathegorical_data_04.py</td><td>seřazení hodnot podle zadaného kritéria</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/37_cathegorical_data_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/37_cathegorical_data_04.py</a></td></tr>
<tr><td>39</td><td>38_data_source.py</td><td>hodnoty uložené v&nbsp;datové struktuře <strong>ColumnDataSource</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/38_data_source.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/38_data_source.py</a></td></tr>
<tr><td>40</td><td>39_data_source_color.py</td><td>obarvení hodnot v&nbsp;grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/39_data_source_color.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/39_data_source_color.py</a></td></tr>
<tr><td>41</td><td>40_sin_cos_plot.py</td><td>interaktivní přepočet grafů &ndash; jednoduché průběhy funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/40_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/40_sin_cos_plot.py</a></td></tr>
<tr><td>42</td><td>41_sin_cos_plot_control_A.py</td><td>přidání posuvníku pro interaktivní změnu amplitudy jednoho průběhu v&nbsp;grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/41_sin_cos_plot_control_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/41_sin_cos_plot_control_A.py</a></td></tr>
<tr><td>43</td><td>42_sin_cos_plot_control_B.py</td><td>data pro vykreslení grafu dostupná ve formě <strong>ColumnDataSource</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/42_sin_cos_plot_control_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/42_sin_cos_plot_control_B.py</a></td></tr>
<tr><td>44</td><td>43_sin_cos_plot_control_C.py</td><td>temná strana Bokehu &ndash; přepočet dat v&nbsp;JavaScriptu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/43_sin_cos_plot_control_C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/43_sin_cos_plot_control_C.py</a></td></tr>
<tr><td>45</td><td>palette_ice.py</td><td>barvová paleta</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/palette_ice.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/palette_ice.py</a></td></tr>
<tr><td>46</td><td>raster1.py</td><td>graf obsahující data ve formě rastrového obrázku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster1.py</a></td></tr>
<tr><td>47</td><td>raster2.py</td><td>rastrová data s&nbsp;proměnným počtem sloupců a řádků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster2.py</a></td></tr>
<tr><td>48</td><td>raster3.py</td><td>textura &ndash; moiré</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster3.py</a></td></tr>
<tr><td>49</td><td>raster4.py</td><td>použití externí barvové palety (LUT)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster4.py</a></td></tr>
<tr><td>50</td><td>raster5.py</td><td>rastrové obrázky a interní barvové palety Bokehu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster5.py</a></td></tr>
<tr><td>51</td><td>raster6.py</td><td>rastrové obrázky a interní barvové palety Bokehu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/raster6.py</a></td></tr>
<tr><td>52</td><td>theme_caliber.py</td><td>nastavení tématu &bdquo;caliber&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_caliber.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_caliber.py</a></td></tr>
<tr><td>53</td><td>theme_dark_minimal.py</td><td>nastavení tématu &bdquo;dark minimal&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_dark_minimal.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_dark_minimal.py</a></td></tr>
<tr><td>54</td><td>theme_light_minimal.py</td><td>nastavení tématu &bdquo;light minimal&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_light_minimal.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_light_minimal.py</a></td></tr>
<tr><td>55</td><td>theme_night_sky.py</td><td>nastavení tématu &bdquo;night sky&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_night_sky.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/theme_night_sky.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>bokeh na GitHubu<br />
<a href="https://github.com/bokeh/bokeh">https://github.com/bokeh/bokeh</a>
</li>

<li>First steps 1: Creating a line chart<br />
<a href="https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_1.html">https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_1.html</a>
</li>

<li>Python Bokeh tutorial – Interactive Data Visualization with Bokeh<br />
<a href="https://www.geeksforgeeks.org/python-bokeh-tutorial-interactive-data-visualization-with-bokeh/">https://www.geeksforgeeks.org/python-bokeh-tutorial-interactive-data-visualization-with-bokeh/</a>
</li>

<li>The R Project for Statistical Computing<br />
<a href="https://www.r-project.org/">https://www.r-project.org/</a>
</li>

<li>An Introduction to R<br />
<a href="https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf">https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf</a>
</li>

<li>R (programming language)<br />
<a href="https://en.wikipedia.org/wiki/R_(programming_language)">https://en.wikipedia.org/wiki/R_(programming_language)</a>
</li>

<li>Graphics, ggplot2<br />
<a href="http://r4stats.com/examples/graphics-ggplot2/">http://r4stats.com/examples/graphics-ggplot2/</a>
</li>

<li>Seriál Programovací jazyk Julia<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-julia/">https://www.root.cz/serialy/programovaci-jazyk-julia/</a>
</li>

<li>Plotly<br />
<a href="https://plotly.com/">https://plotly.com/</a>
</li>

<li>pyecharts<br />
<a href="https://github.com/pyecharts/pyecharts/blob/master/README.en.md">https://github.com/pyecharts/pyecharts/blob/master/README.en.md</a>
</li>

<li>Tvorba grafů v&nbsp;Jupyter Notebooku s&nbsp;využitím knihovny Matplotlib<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/">https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03</a>
</li>

<li>Lorenz system<br />
<a href="https://en.wikipedia.org/wiki/Lorenz_system">https://en.wikipedia.org/wiki/Lorenz_system</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

