<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve třetí části seriálu o nástroji Pygame Zero se zaměříme na dvě hlavní oblasti. První důležitou oblastí je práce se vstupními zařízeními, tedy primárně s klávesnicí a myší (i když knihovna Pygame podporuje i další typy ovladačů). A druhou oblastí jsou animace, které tvoří nedílnou součást multimediálních aplikací i her.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Práce se vstupními zařízeními a animace</a></p>
<p><a href="#k03">*** 3. Kostra demonstračních příkladů &ndash; zobrazení spritu</a></p>
<p><a href="#k04">*** 4. Konstanty se jmény stisknutých kláves popř.&nbsp;použitých modifikátorů</a></p>
<p><a href="#k05">*** 5. Tisk kódu stisknuté klávesy a modifikátoru(ů)</a></p>
<p><a href="#k06">*** 6. Ukončení aplikace zvolenou klávesou</a></p>
<p><a href="#k07">*** 7. Posun spritu s&nbsp;využitím kurzorových šipek</a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. Pojmenované barvy podporované nástrojem Pygame Zero</a></p>
<p><a href="#k17">*** 17. Zobrazení pojmenovaných barev podporovaných nástrojem Pygame Zero</a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>V předchozí části miniseriálu, v němž se zabýváme popisem možností nástroje Pygame Zero, jsme se zmínili o základních třídách, které jsou v Pygame Zero deklarovány a které se používají při tvorbě aplikací (tyto třídy resp. jejich balíčky není zapotřebí importovat - to je provedeno při inicializaci jednotlivých subsystémů Pygame Zero zcela automaticky). Taktéž jsme si řekli, že po inicializaci aplikace jsou zcela automaticky k dispozizi některé instance těchto tříd. Týká se to především objektu screen představujícího (jediné) okno aplikace a dále o objekty používané při práci s rastrovými obrázky (pozadí aplikace, sprity atd.) a fonty - tyto takzvané zdroje jsou totiž automaticky hledány v adresářích "images" popř. "fonts". Podobně se bude pracovat, jak ostatně uvidíme dále, i se soubory s uloženými zvuky popř. s hudbou. Pro krátké připomenutí si ještě jednou ukažme tabulku, v níž jsou vypsány třídy a jejich instance (tedy objekty) využívané v aplikacích založených na projektu Pygame Zero:</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Práce se vstupními zařízeními a animace</h2>

Dnes se zaměříme na dvě oblasti používané prakticky ve všech multimediálních aplikacích, resp. přesněji řečeno v interaktivních aplikacích. První z těchto oblastí je práce se vstupními zařízeními, což v praxi znamená práci s klávesnicí a myší, i když na tomto místě je dobré poznamenat, že knihovna Pygame, nad níž je Pygame Zero postavena, podporuje i další vstupní zařízení - herní ovladače atd. Zapomenout nesmíme ani na tvorbu animací, protože ty tvoří nedílnou součást prakticky všech multimediálních aplikací i her (ostatně i samotný pohyb hráče popř. NPC v herním světě je mnohdy i poměrně složitě animován). Začneme popisem práce se vstupními zařízeními. Použijeme přitom kostru jednoduché aplikace, kterou budeme postupně rozšiřovat o další funkcionalitu. Tato aplikace bude zpočátku značně triviální - pouze se v ní zobrazí okno s pozadím vyplněným zadanou barvou a v tomto okně je navíc umístěn sprite, což je rastrový obrázek (s některými pixely průhlednými či poloprůhlednými), kterým je možné manipulovat - měnit jeho polohu atd.



<p><a name="k03"></a></p>
<h2 id="k03">3. Kostra demonstračních příkladů &ndash; zobrazení spritu</h2>

Připomeňme si základní informace o spritech, které jsme si řekli v úvodním článku: jedná se o grafické objekty představované rastrovými obrázky, kterými je možné po obrazovce pohybovat a v nejnovější verzi nástroje Pygame Zero dokonce i otáčet. Relativně snadno je možné implementovat i takzvanou detekci kolizí (collision detection) mezi jednotlivými sprity popř. mezi spritem a nepohyblivými objekty umístěnymi na obrazovce. Termín sprite pochází z doby osmibitových herních konzolí i osmibitových domácích mikropočítačů, které mnohdy obsahovaly specializovaný hardware určený jak pro zobrazení pohyblivých spritů (nezávislých na takzvaném herním poli - playground), tak i pro detekci kolizí mezi sprity popř. mezi spritem a barvami (resp. přesněji řečeno obarvenými pixely) v herním poli. Ovšem samotný termín sprite může být v dnešní době trošku matoucí (zejména bez znalosti historie herní grafiky), takže se v nástroji Pygame Zero namísto toho používá název actor. A stejně je pojmenována i třída s definicí chování spritů.

Kostra demonstračního příkladu, který budeme v rámci dalších kapitol postupně rozšiřovat, vypadá následovně:

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x80, 0x80)

sprite = Actor("sprite1.png")
sprite.pos = (240, 240)


def draw():
    screen.fill(BACKGROUND_COLOR)
    sprite.draw()
</pre>

Všechny části tohoto demonstračního příkladu již známe, takže jen ve stručnosti:

Konstanty pojmenované WIDTH a HEIGHT jsou nástrojem Pygame Zero zpracovány a na jejich základě je vytvořeno okno aplikace se zadanými rozměry (specifikovanými v pixelech). Z tohoto důvodu je nutné použít přesně takto pojmenované konstanty.

Vykreslení obsahu okna je řízeno z funkce nazvané draw, která je (resp. jejíž jméno je) taktéž rozpoznáno a použito nástrojem Pygame Zero. Ovšem snadno poznáme, že tato funkce není volána opakovaně (postačuje do funkce přidat například jednoduché logování atd.)

Obrazovka je vyplněna specifikovanou barvou. Tuto barvu je možné zadat buď pomocí jejího jména nebo jako trojici hodnot představujících barvové složky RGB (Red, Green, Blue). Jména podporovaných barev naleznete v samostatné kapitole.

Instance třídy Actor představuje sprite, který lze vykreslit na libovolné místo na obrazovce. Implicitně je bod 0, 0 spritu vztažen k jeho středu, takže pozicování spritu přesně do středu obrazovky je snadné (resp. přesněji řečeno může být střed posunut o jeden pixel v případě, kdy jeden z rozměrů je lichý a druhý sudý).

Rastrový obrázek, který určuje způsob zobrazení spritu, je načten ze souboru uloženého v podadresáři images. Tento obrázek může obsahovat (a v našem případě skutečně i obsahuje) průhledné a poloprůhledné pixely, což je ostatně jedna z typických vlastností spritů - nemusí po vykreslení tvořit čtverec či obdélník - podporovaná již od poloviny sedmdesátých let minulého století.

Poznámka: v nástroji Pygame Zero vidíme relativně minimalistický přístup k tvorbě grafiky. Můžeme totiž vymazat obrazovku, zobrazit na její ploše rastrové obrázky, popř. použít objekt screen.draw se základními 2D entitami typu úsečka, obdélník, kružnice či text. Teoreticky je ještě možné přímo měnit barvu jednotlivých pixelů. A to je vše - žádné pokročilejší vykreslovací rutiny a operace nejsou k dispozici. Mohlo by se to zdát málo, ovšem v praxi lze i na těchto základech vystavět i aplikace se sofistikovanou grafikou (i když mnohdy je vykreslování pomalé, protože jedinou akcelerovanou operací je vykreslení spritů).



<p><a name="k04"></a></p>
<h2 id="k04">4. Konstanty se jmény stisknutých kláves popř.&nbsp;použitých modifikátorů</h2>




BACKSPACE

TAB

CLEAR

RETURN

PAUSE

ESCAPE

SPACE

EXCLAIM

QUOTEDBL

HASH

DOLLAR

AMPERSAND

QUOTE

LEFTPAREN

RIGHTPAREN

ASTERISK

PLUS

COMMA

MINUS

PERIOD

SLASH

K_0

K_1

K_2

K_3

K_4

K_5

K_6

K_7

K_8

K_9

COLON

SEMICOLON

LESS

EQUALS

GREATER

QUESTION

AT

LEFTBRACKET

BACKSLASH

RIGHTBRACKET

CARET

UNDERSCORE

BACKQUOTE

A

B

C

D

E

F

G

H

I

J

K

L

M

N

O

P

Q

R

S

T

U

V

W

X

Y

Z

DELETE

KP0

KP1

KP2

KP3

KP4

KP5

KP6

KP7
KP8
KP9
KP_PERIOD
KP_DIVIDE
KP_MULTIPLY
KP_MINUS
KP_PLUS
KP_ENTER
KP_EQUALS
UP
DOWN
RIGHT
LEFT
INSERT
HOME
END
PAGEUP
PAGEDOWN
F1
F2
F3
F4
F5
F6
F7
F8
F9
F10
F11
F12
F13
F14
F15
NUMLOCK
CAPSLOCK
SCROLLOCK
RSHIFT
LSHIFT
RCTRL
LCTRL
RALT
LALT
RMETA
LMETA
LSUPER
RSUPER
MODE
HELP
PRINT
SYSREQ
BREAK
MENU
POWER
EURO
LAST


LSHIFT
RSHIFT
SHIFT
LCTRL
RCTRL
CTRL
LALT
RALT
ALT
LMETA
RMETA
META
NUM
CAPS
MODE



<p><a name="k05"></a></p>
<h2 id="k05">5. Tisk kódu stisknuté klávesy a modifikátoru(ů)</h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x80, 0x80)

sprite = Actor("sprite1.png")
sprite.pos = (240, 240)


def draw():
    screen.fill(BACKGROUND_COLOR)
    sprite.draw()


def on_key_down(key, mod, unicode):
    print(key, mod, unicode)
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Ukončení aplikace zvolenou klávesou</h2>

Nyní se pokusme náš prozatím velmi primitivní demonstrační příklad upravit, a to takovým způsobem, aby bylo možné aplikaci ukončit klávesou Esc. Prozatím je totiž nutné okno aplikace explicitně zavřít s využitím prostředků správce oken (popř. použít utilitu xkill, kill apod.). Demonstrační příklad je nutné nepatrně rozšířit, a to konkrétně o naprogramovanou reakci na událost typu "stisk klávesy". Ve funkci s naprogramovanou reakcí na tuto událost pouze otestujeme, jaká klávesa byla stisknuta. A pokud se bude skutečně jednat o klávesu Esc, dojde k ukončení celé aplikace.

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x80, 0x80)

sprite = Actor("sprite1.png")
sprite.pos = (240, 240)


def draw():
    screen.fill(BACKGROUND_COLOR)
    sprite.draw()


def on_key_down(key, mod, unicode):
    if key == keys.ESCAPE:
        exit()
</pre>


<p><a name="k07"></a></p>
<h2 id="k07">7. Posun spritu s&nbsp;využitím kurzorových šipek</h2>

Další úprava našeho postupně upravovaného demonstračního příkladu bude spočívat v tom, že umožníme pohyb spritu na obrazovce s využitím kurzorových kláves. Využijeme zde tedy dvě vlastnosti nástroje Pygame Zero: možnost měnit pozici spritu na obrazovce změnou jeho souřadnic a reakci na stisk kláves, konkrétně kurzorových šipek.

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x80, 0x80)

sprite = Actor("sprite1.png")
sprite.pos = (240, 240)


def draw():
    screen.fill(BACKGROUND_COLOR)
    sprite.draw()


def on_key_down(key, mod, unicode):
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        sprite.top -= 1
    if key == keys.DOWN:
        sprite.top += 1
    if key == keys.LEFT:
        sprite.left -= 1
    if key == keys.RIGHT:
        sprite.left += 1
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x80, 0x80)

sprite = Actor("sprite1.png")
sprite.pos = (240, 240)
dx = 0
dy = 0


def draw():
    screen.fill(BACKGROUND_COLOR)
    sprite.draw()


def update():
    sprite.left += dx
    sprite.top += dy


def on_key_down(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        dy = -1
    if key == keys.DOWN:
        dy = 1
    if key == keys.LEFT:
        dx = -1
    if key == keys.RIGHT:
        dx = 1
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x80, 0x80)

sprite = Actor("sprite1.png")
sprite.pos = (240, 240)
dx = 0
dy = 0


def draw():
    screen.fill(BACKGROUND_COLOR)
    sprite.draw()


def update():
    sprite.left += dx
    sprite.top += dy


def on_key_down(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        dy = -1
    if key == keys.DOWN:
        dy = 1
    if key == keys.LEFT:
        dx = -1
    if key == keys.RIGHT:
        dx = 1


def on_key_up(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key in (keys.UP, keys.DOWN, keys.LEFT, keys.RIGHT):
        dx = 0
        dy = 0
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Pojmenované barvy podporované nástrojem Pygame Zero</h2>

<p></p>

<table>
<tr><th>Barva</th><th>Barva</th><th>Barva</th><th>Barva</th><th>Barva</th></tr>
<tr><td>aliceblue</td><td>antiquewhite</td><td>antiquewhite1</td><td>antiquewhite2</td><td>antiquewhite3</td></tr>
<tr><td>antiquewhite4</td><td>aquamarine</td><td>aquamarine1</td><td>aquamarine2</td><td>aquamarine3</td></tr>
<tr><td>aquamarine4</td><td>azure</td><td>azure1</td><td>azure2</td><td>azure3</td></tr>
<tr><td>azure4</td><td>beige</td><td>bisque</td><td>bisque1</td><td>bisque2</td></tr>
<tr><td>bisque3</td><td>bisque4</td><td>black</td><td>blanchedalmond</td><td>blue</td></tr>
<tr><td>blue1</td><td>blue2</td><td>blue3</td><td>blue4</td><td>blueviolet</td></tr>
<tr><td>brown</td><td>brown1</td><td>brown2</td><td>brown3</td><td>brown4</td></tr>
<tr><td>burlywood</td><td>burlywood1</td><td>burlywood2</td><td>burlywood3</td><td>burlywood4</td></tr>
<tr><td>cadetblue</td><td>cadetblue1</td><td>cadetblue2</td><td>cadetblue3</td><td>cadetblue4</td></tr>
<tr><td>chartreuse</td><td>chartreuse1</td><td>chartreuse2</td><td>chartreuse3</td><td>chartreuse4</td></tr>
<tr><td>chocolate</td><td>chocolate1</td><td>chocolate2</td><td>chocolate3</td><td>chocolate4</td></tr>
<tr><td>coral</td><td>coral1</td><td>coral2</td><td>coral3</td><td>coral4</td></tr>
<tr><td>cornflowerblue</td><td>cornsilk</td><td>cornsilk1</td><td>cornsilk2</td><td>cornsilk3</td></tr>
<tr><td>cornsilk4</td><td>cyan</td><td>cyan1</td><td>cyan2</td><td>cyan3</td></tr>
<tr><td>cyan4</td><td>darkblue</td><td>darkcyan</td><td>darkgoldenrod</td><td>darkgoldenrod1</td></tr>
<tr><td>darkgoldenrod2</td><td>darkgoldenrod3</td><td>darkgoldenrod4</td><td>darkgray</td><td>darkgreen</td></tr>
<tr><td>darkgrey</td><td>darkkhaki</td><td>darkmagenta</td><td>darkolivegreen</td><td>darkolivegreen1</td></tr>
<tr><td>darkolivegreen2</td><td>darkolivegreen3</td><td>darkolivegreen4</td><td>darkorange</td><td>darkorange1</td></tr>
<tr><td>darkorange2</td><td>darkorange3</td><td>darkorange4</td><td>darkorchid</td><td>darkorchid1</td></tr>
<tr><td>darkorchid2</td><td>darkorchid3</td><td>darkorchid4</td><td>darkred</td><td>darksalmon</td></tr>
<tr><td>darkseagreen</td><td>darkseagreen1</td><td>darkseagreen2</td><td>darkseagreen3</td><td>darkseagreen4</td></tr>
<tr><td>darkslateblue</td><td>darkslategray</td><td>darkslategray1</td><td>darkslategray2</td><td>darkslategray3</td></tr>
<tr><td>darkslategray4</td><td>darkslategrey</td><td>darkturquoise</td><td>darkviolet</td><td>deeppink</td></tr>
<tr><td>deeppink1</td><td>deeppink2</td><td>deeppink3</td><td>deeppink4</td><td>deepskyblue</td></tr>
<tr><td>deepskyblue1</td><td>deepskyblue2</td><td>deepskyblue3</td><td>deepskyblue4</td><td>dimgray</td></tr>
<tr><td>dimgrey</td><td>dodgerblue</td><td>dodgerblue1</td><td>dodgerblue2</td><td>dodgerblue3</td></tr>
</table>

<pre>
from pygame.colordict import THECOLORS

for i, color in enumerate(sorted(THECOLORS)):
    if i % 5 == 0:
        print("<tr>", end="")
    print("<td>" + color + "</td>", end="")
    if i % 5 == 4:
        print("</tr>")
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Zobrazení pojmenovaných barev podporovaných nástrojem Pygame Zero</h2>

<p>V&nbsp;této kapitole si ukážeme zdrojový kód pomocného příkladu, po jehož spuštění se zobrazí vybrané pojmenované barvy, které jsou podporovány nástrojem Pygame Zero. Příklad je ve skutečnosti poměrně jednoduchý, protože pouze vykreslí vyplněný obdélník danou barvou a následně do plochy tohoto obdélníka zapíše číslo barvy. Vzhledem k&nbsp;tomu, že barva obdélníka může být jakákoli (a text by tedy nemusel být čitelný), využijeme možnost zobrazit text s&nbsp;obarveným okrajem. A pokud bude text například bílý a okraj černý, bude takový text (nebo alespoň jeho okraj) viditelný na jakémkoli pozadí. Jména podporovaných barev naleznete v&nbsp;tabulce získané následujícím způsobem (používáme v&nbsp;něm přímo knihovnu Pygame):</p>

<pre>
from pygame.colordict import THECOLORS
&nbsp;
for i, color in enumerate(sorted(THECOLORS)):
    print(i, color)
</pre>

<p>Zdrojový kód demonstračního příkladu, který tyto barvy (resp.&nbsp;jejich vybranou podskupinu) vykreslí, může vypadat takto:</p>

<pre>
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Relevantní funkce z&nbsp;knihovny Pygame</h2>

<p>V&nbsp;této kapitole jsou uvedeny odkazy na dokumentaci k&nbsp;funkcím
knihovny <i>Pygame</i>, které jsou interně používány i projektem <i>Pygame
Zero</i>. Tyto funkce jsou vidět v&nbsp;některých chybových hlášeních, protože
i přes snahy autorů <i>Pygame Zero</i> není odstínění od knihovny <i>Pygame</i>
úplné (což je možná jeden z&nbsp;největších současných nedostatků tohoto
projektu):</p>

<ol>

<li>pygame.init()<br />
<a href="http://www.pygame.org/docs/ref/pygame.html#pygame.init">http://www.pygame.org/docs/ref/pygame.html#pygame.init</a>
</li>

<li>pygame.quit()<br />
<a href="http://www.pygame.org/docs/ref/pygame.html#pygame.quit">http://www.pygame.org/docs/ref/pygame.html#pygame.quit</a>
</li>

<li>pygame.display.set_mode()<br />
<a href="http://www.pygame.org/docs/ref/display.html#pygame.display.set_mode">http://www.pygame.org/docs/ref/display.html#pygame.display.set_mode</a>
</li>

<li>pygame.display.set_caption()<br />
<a href="http://www.pygame.org/docs/ref/display.html#pygame.display.set_caption">http://www.pygame.org/docs/ref/display.html#pygame.display.set_caption</a>
</li>

<li>pygame.display.update()<br />
<a href="http://www.pygame.org/docs/ref/display.html#pygame.display.update">http://www.pygame.org/docs/ref/display.html#pygame.display.update</a>
</li>

<li>pygame.event.get()<br />
<a href="http://www.pygame.org/docs/ref/event.html#pygame.event.get">http://www.pygame.org/docs/ref/event.html#pygame.event.get</a>
</li>

<li>pygame.time.wait()<br />
<a href="http://www.pygame.org/docs/ref/time.html#pygame.time.wait">http://www.pygame.org/docs/ref/time.html#pygame.time.wait</a>
</li>

<li>pygame.time.Clock.tick()<br />
<a href="http://www.pygame.org/docs/ref/time.html#pygame.time.Clock.tick">http://www.pygame.org/docs/ref/time.html#pygame.time.Clock.tick</a>
</li>

<li>pygame.draw.line()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.line">http://www.pygame.org/docs/ref/draw.html#pygame.draw.line</a>
</li>

<li>pygame.draw.circle()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.circle">http://www.pygame.org/docs/ref/draw.html#pygame.draw.circle</a>
</li>

<li>pygame.draw.rect()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.rect">http://www.pygame.org/docs/ref/draw.html#pygame.draw.rect</a>
</li>

<li>pygame.draw.ellipse()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.ellipse">http://www.pygame.org/docs/ref/draw.html#pygame.draw.ellipse</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 a nástroj <i>Pygame Zero</i> byly uloženy do Git repositáře dostupného
na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
dvojici tabulek:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Welcome to Pygame Zero<br />
<a href="https://pygame-zero.readthedocs.io/en/stable/index.html">https://pygame-zero.readthedocs.io/en/stable/index.html</a>
</li>

<li>Other libraries like Pygame Zero<br />
<a href="https://pygame-zero.readthedocs.io/en/stable/other-libs.html">https://pygame-zero.readthedocs.io/en/stable/other-libs.html</a>
</li>

<li>Principles of Pygame Zero<br />
<a href="https://pygame-zero.readthedocs.io/en/stable/principles.html">https://pygame-zero.readthedocs.io/en/stable/principles.html</a>
</li>

<li>Built-in Objects (in Pygame Zero)<br />
<a href="https://pygame-zero.readthedocs.io/en/stable/builtins.html">https://pygame-zero.readthedocs.io/en/stable/builtins.html</a>
</li>

<li>Pygame<br />
<a href="https://www.pygame.org/news">https://www.pygame.org/news</a>
</li>

<li>Kniha: Coding Games With Pygame Zero &amp; Python: Student workbook<br />
<a href="https://bookerystore.com/downloads/coding-games-with-pygame-zero-python-student-workbook/">https://bookerystore.com/downloads/coding-games-with-pygame-zero-python-student-workbook/</a>
</li>

<li>Projekty založené na Pygame<br />
<a href="https://www.pygame.org/tags/all">https://www.pygame.org/tags/all</a>
</li>

<li>Domovská stránka projektu LÖVE<br />
<a href="https://love2d.org/">https://love2d.org/</a>
</li>

<li>PyWeek, a bi-annual game jam to write games in Python<br />
<a href="https://pyweek.org/">https://pyweek.org/</a>
</li>

<li>Teaching a kid to code with Pygame Zero<br />
<a href="https://www.mattlayman.com/blog/2019/teach-kid-code-pygame-zero/">https://www.mattlayman.com/blog/2019/teach-kid-code-pygame-zero/</a>
</li>

<li>Games with PyGame Zero<br />
<a href="https://codewith.mu/en/tutorials/1.0/pgzero">https://codewith.mu/en/tutorials/1.0/pgzero</a>
</li>

<li>Coding Games With Pygame Zero &amp; Python: Student workbook (2nd edition)<br />
<a href="https://electronstudio.github.io/pygame-zero-book/">https://electronstudio.github.io/pygame-zero-book/</a>
</li>

<li>Historie vývoje počítačových her (116. část – vývoj her v současnosti: od assembleru k PyGame)<br />
<a href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-116-cast-vyvoj-her-v-soucasnosti-od-assembleru-k-pygame/">https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-116-cast-vyvoj-her-v-soucasnosti-od-assembleru-k-pygame/</a>
</li>

<li>Lua + LÖVE: vytvořte si vlastní hru<br />
<a href="https://www.root.cz/clanky/lua-love-vytvorte-si-vlastni-hru/">https://www.root.cz/clanky/lua-love-vytvorte-si-vlastni-hru/</a>
</li>

<li>Hrátky se systémem LÖVE<br />
<a href="https://www.root.cz/clanky/hratky-se-systemem-love/">https://www.root.cz/clanky/hratky-se-systemem-love/</a>
</li>

<li>Vytváříme hru v systému LÖVE<br />
<a href="https://www.root.cz/clanky/vytvarime-hru-v-systemu-love/">https://www.root.cz/clanky/vytvarime-hru-v-systemu-love/</a>
</li>

<li>Hrátky se systémem LÖVE - částicové systémy<br />
<a href="https://www.root.cz/clanky/hratky-se-systemem-love-casticove-systemy/">https://www.root.cz/clanky/hratky-se-systemem-love-casticove-systemy/</a>
</li>

<li>Hrátky se systémem LÖVE – kolize a odrazy těles<br />
<a href="https://www.root.cz/clanky/hratky-se-systemem-love-ndash-kolize-a-odrazy-teles/">https://www.root.cz/clanky/hratky-se-systemem-love-ndash-kolize-a-odrazy-teles/</a>
</li>

<li>Hrátky se systémem LÖVE - kolize a odrazy těles II<br />
<a href="https://www.root.cz/clanky/hratky-se-systemem-love-kolize-a-odrazy-teles-ii/">https://www.root.cz/clanky/hratky-se-systemem-love-kolize-a-odrazy-teles-ii/</a>
</li>

<li>Hrátky se systémem LÖVE - pružné vazby mezi tělesy<br />
<a href="https://www.root.cz/clanky/hratky-se-systemem-love-pruzne-vazby-mezi-telesy/">https://www.root.cz/clanky/hratky-se-systemem-love-pruzne-vazby-mezi-telesy/</a>
</li>

<li>Hrátky se systémem LÖVE - dokončení<br />
<a href="https://www.root.cz/clanky/hratky-se-systemem-love-dokonceni/">https://www.root.cz/clanky/hratky-se-systemem-love-dokonceni/</a>
</li>

<li>Seriál Letní škola programovacího jazyka Logo<br />
<a href="http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/">http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/</a>
</li>

<li>Scratch: oficiální stránka projektu<br />
<a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a>
</li>

<li>Scratch: galerie projektů vytvořených ve Scratchi<br />
<a href="http://scratch.mit.edu/galleries/browse/newest">http://scratch.mit.edu/galleries/browse/newest</a>
</li>

<li>Scratch: nápověda<br />
<a href="file:///usr/share/scratch/Help/en/index.html">file:///usr/share/scratch/Help/en/index.html</a>
</li>

<li>Scratch: obrazovky nápovědy<br />
<a href="file:///usr/share/scratch/Help/en/allscreens.html">file:///usr/share/scratch/Help/en/allscreens.html</a>
</li>

<li>Scratch (Wikipedie CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Scratch">http://cs.wikipedia.org/wiki/Scratch</a>
</li>

<li>Scratch (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Scratch_(programming_language)">http://en.wikipedia.org/wiki/Scratch_(programming_language)</a>
</li>

<li>Scratch Modification<br />
<a href="http://wiki.scratch.mit.edu/wiki/Scratch_Modification">http://wiki.scratch.mit.edu/wiki/Scratch_Modification</a>
</li>

<li>Scratch Lowers Resistance to Programming<br />
<a href="http://www.wired.com/gadgetlab/2009/03/scratch-lowers/">http://www.wired.com/gadgetlab/2009/03/scratch-lowers/</a>
</li>

<li>Snap!<br />
<a href="http://snap.berkeley.edu/">http://snap.berkeley.edu/</a>
</li>

<li>Prostředí Snap!<br />
<a href="http://snap.berkeley.edu/snapsource/snap.html">http://snap.berkeley.edu/snapsource/snap.html</a>
</li>

<li>Alternatives to Scratch<br />
<a href="http://wiki.scratch.mit.edu/wiki/Alternatives_to_Scratch">http://wiki.scratch.mit.edu/wiki/Alternatives_to_Scratch</a>
</li>

<li>Snap! (programming language)<br />
<a href="https://en.wikipedia.org/wiki/Snap!_(programming_language)">https://en.wikipedia.org/wiki/Snap!_(programming_language)</a>
</li>

<li>Kniha o Basicu-256<br />
<a href="http://www.basicbook.org/files/syw2l2p_b256.pdf/">http://www.basicbook.org/files/syw2l2p_b256.pdf/</a>
</li>

<li>Basic-256 home page<br />
<a href="http://www.basic256.org/index_en">http://www.basic256.org/index_en</a>
</li>

<li>Basic-256 Language Documentation<br />
<a href="http://doc.basic256.org/doku.php">http://doc.basic256.org/doku.php</a>
</li>

<li>Basic-256 Art Gallery<br />
<a href="http://www.basic256.org/artgallery">http://www.basic256.org/artgallery</a>
</li>

<li>Basic-256 Tutorial<br />
<a href="http://www.basic256.org/tutorials">http://www.basic256.org/tutorials</a>
</li>

<li>Why BASIC?<br />
<a href="http://www.basic256.org/whybasic">http://www.basic256.org/whybasic</a>
</li>

<li>A book to teach ANYBODY how to program a computer (using BASIC)<br />
<a href="http://www.basicbook.org/">http://www.basicbook.org/</a>
</li>

<li>Sprite ve Scratchi<br />
<a href="https://en.scratch-wiki.info/wiki/Sprite">https://en.scratch-wiki.info/wiki/Sprite</a>
</li>

<li>Scratch Modification<br />
<a href="https://en.scratch-wiki.info/wiki/Scratch_Modification">https://en.scratch-wiki.info/wiki/Scratch_Modification</a>
</li>

<li>3D Programming in Python - Part 1 <br />
<a href="https://greendalecs.wordpress.com/2012/04/21/3d-programming-in-python-part-1/">https://greendalecs.wordpress.com/2012/04/21/3d-programming-in-python-part-1/</a>
</li>

<li>A very basic Pyglet tutorial<br />
<a href="http://www.natan.termitnjak.net/tutorials/pyglet_basic.html">http://www.natan.termitnjak.net/tutorials/pyglet_basic.html</a>
</li>

<li>Alpha blending<br />
<a href="https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending">https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

