<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Kolize spritů a naplánování operací v nástroji Pygame Zero</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Kolize spritů a naplánování operací v nástroji Pygame Zero</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V pátém a současně i posledním článku o nástroji Pygame Zero si nejprve popíšeme způsob detekce kolize spritů (což je ve hrách velmi často používaná operace) a posléze se zaměříme na popis objektu pojmenovaného clock, jenž umožňuje naplánování (asynchronních) akcí.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Detekce kolize spritů v&nbsp;knihovně Pygame Zero</a></p>
<p><a href="#k02">*** 2. První demonstrační příklad &ndash; zobrazení trojice nepohyblivých spritů</a></p>
<p><a href="#k03">*** 3. Nastavení popř.&nbsp;změna pozice spritu na obrazovce</a></p>
<p><a href="#k04">*** 4. Zobrazení aktuální pozice spritu</a></p>
<p><a href="#k05">*** 5. Změna pozice spritu s&nbsp;využitím klávesnice</a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Relevantní funkce z&nbsp;knihovny Pygame</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Detekce kolize spritů v&nbsp;knihovně Pygame Zero</h2>

<p>V&nbsp;předchozích částech miniseriálu o nástroji <i>Pygame Zero</i> [<a
href="https://www.root.cz/clanky/pygame-zero-snadno-pouzitelny-nastroj-urceny-pro-vyuku-programovani/">1</a>]
[<a
href="https://www.root.cz/clanky/prvni-miniaplikace-vytvorene-v-nastroji-pygame-zero/">2</a>]
[<a
href="https://www.root.cz/clanky/prvni-miniaplikace-vytvorene-v-nastroji-pygame-zero-vstupni-zarizeni-a-animace/">3</a>]
[<a
href="https://www.root.cz/clanky/vytvareni-animaci-a-prace-se-zvukem-i-s-hudbou-v-nastroji-pygame-zero/">4</a>]
jsme se seznámili mj.&nbsp;i s&nbsp;tím, jakým způsobem lze pracovat
s&nbsp;takzvanými <i>sprity</i>, tj.&nbsp;s&nbsp;rastrovými obrázky,
s&nbsp;nimiž je možné pohybovat po celé dvourozměrné scéně. Sprity samozřejmě
mohou úplně či částečně překreslit pozadí vytvářené scény, mohou se
v&nbsp;případě potřeby navzájem překrývat, při překrytí lze aplikovat již dříve
zmíněnou a použitou průhlednost či průsvitnost apod.</p>

*** image ***
<p><i>Obrázek 1: Sprity použité ve známé herní sérii Sonic the
Hedgehog.</i></p>

<p>V&nbsp;poslední verzi knihovny <i>Pygame Zero</i> je dokonce možné provést i
otočení spritů o libovolný úhel, což je téma, kterému jsme se věnovali minule
(viz <a
href="https://www.root.cz/clanky/vytvareni-animaci-a-prace-se-zvukem-i-s-hudbou-v-nastroji-pygame-zero/#k12">základ
jednoduché hry typu Asteroids</a>).</p>

<img src="https://i.iinfo.cz/images/514/pygame-zero-4-12.png" class="image-418547" alt="&#160;" width="482" height="504" />
<p><i>Obrázek 2: Snímek ze &bdquo;hry&ldquo; naprogramované minule.</i></p>

<p><div class="rs-tip-major">Poznámka: namísto termínu <i>sprite</i> se
v&nbsp;dokumentaci k&nbsp;nástroji <i>Pygame Zero</i> setkáme se jménem
<i>actor</i>, čemuž odpovídá i název příslušné třídy
<strong>Actor</strong>.</div></p>

<p>Ovšem zbývá nám vyřešit ještě jeden relativně závažný problém úzce
související se sprity &ndash; v&nbsp;mnoha aplikacích (především
v&nbsp;počítačových hrách) je nutné nějakým způsobem zareagovat ve chvíli, kdy
dojde ke kolizi či k&nbsp;překryvu dvou spritů. Představme si například
klasickou hru <i>Pac-Man</i>, která musí adekvátně reagovat při srážce hlavního
hrdiny s&nbsp;duchem, zareagovat na sežrání bodu (což je taktéž srážka
spritu/spritů) apod. I tyto případy, které byly v&nbsp;minulosti řešeny už na
úrovni příslušného hardware (video čipu), jsou samozřejmě v&nbsp;nástroji
<i>Pygame Zero</i> relativně jednoduše vyřešitelné, což ostatně uvidíme
v&nbsp;navazujících kapitolách. Již na tomto místě je vhodné poznamenat, že
detekce kolize spritů není dokonalá a vlastně je horší, než tomu bylo
v&nbsp;dobách osmibitových domácích mikropočítačů &ndash; kolizi dokážeme
vypočítat pouze pro sprite jako celek (čtverec či obdélník) a navíc ve chvíli,
kdy nedochází k&nbsp;natočení spritu. Pochopitelně by bylo možné kolizi
detekovat až na úroveň pixelů (<i>per-pixel collision detection</i>), ovšem
tuto funkcionalitu <i>Pygame Zero</i> (alespoň prozatím) nenabízí.</p>

*** image ***
<p><i>Obrázek 3: Starší varianta hry Pac-Man, zde pro osmibitovou herní konzoli
Atari 2600. I v&nbsp;této hře (a speciálně na hardware Atari 2600) byly masivně
používány sprity.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. První demonstrační příklad &ndash; zobrazení trojice nepohyblivých spritů</h2>

<p>Nejprve si připravíme kostru demonstračního příkladu, kterou budeme
v&nbsp;rámci dalších kapitol rozšiřovat a doplňovat. Po jejím spuštění se na
pozadí zobrazí trojice spritů, z&nbsp;nichž každý je představován čtvercem o
rozměrech 32&times;32 pixelů. Pro jednoduchost je tento čtverec vyplněn
konstantní barvou (mj.&nbsp;i proto je velikost příslušných rastrových obrázků
nepatrná &ndash; 63 bajtů; použili jsme navíc pro takto malé obrázky výhodnější
formát GIF). Zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
WIDTH = 480
HEIGHT = 480
&nbsp;
BACKGROUND_COLOR = (0, 0x40, 0x40)
&nbsp;
red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
&nbsp;
blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
&nbsp;
yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
&nbsp;
&nbsp;
def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()
</pre>

*** image ***
<p><i>Obrázek 4: Dnešní první demonstrační příklad po svém spuštění.</i></p>

<p>Alternativně je pochopitelně možné namísto pozadí vyplněného konstantní
barvou použít nějaký podkladový obrázek, například z&nbsp;již výše zmíněné hry
Pac-Man (použit je výřez z&nbsp;emulovaného pozadí reálného herního
automatu):</p>

<pre>
WIDTH = 480
HEIGHT = 480
&nbsp;
red_sprite = Actor("red.gif")
red_sprite.pos = (160, 220)
&nbsp;
blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 220)
&nbsp;
yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (320, 220)
&nbsp;
&nbsp;
def <strong>draw</strong>():
    screen.blit(images.pacman, (0, 0))
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()
</pre>

*** image ***
<p><i>Obrázek 5: Změna pozadí (rastrový obrázek) a nepatrné posunutí počáteční
pozice spritů na obrazovce.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Nastavení popř.&nbsp;změna pozice spritu na obrazovce</h2>

<p>Sprite si můžeme představit jako čtverec nebo obdélník, který je vyplněný
rastrovým obrázkem (nebo chcete-li, je otexturovaný). Pokud nebudeme brát
v&nbsp;úvahu možnou rotaci spritu, lze pozici vyjádřit dvojicí souřadnic
<i>x</i>, <i>y</i>. Ovšem význam těchto souřadnic se liší podle toho, který bod
spritu budeme používat. K&nbsp;dispozici je celkem devět významných bodů,
k&nbsp;nimž je možné souřadnice <i>x</i> a <i>y</i> vztáhnout:</p>

*** image ***
<p><i>Obrázek 6: Devět bodů, k&nbsp;nimž lze vztáhnout souřadnice x, y
udávající pozici spritu na obrazovce.</i></p>

<p>Těmto bodům odpovídá i pojmenovaný (nepovinný) parametr předávaný
konstruktoru <strong>Actor</strong>:</p>

<table>
<tr><th>#</th><th>Keyword</th></tr>
<tr><td>1</td><td>topleft</td></tr>
<tr><td>2</td><td>midtop</td></tr>
<tr><td>3</td><td>topright</td></tr>
<tr><td>4</td><td>midleft</td></tr>
<tr><td>5</td><td>center</td></tr>
<tr><td>6</td><td>midright</td></tr>
<tr><td>7</td><td>bottomleft</td></tr>
<tr><td>8</td><td>midbottom</td></tr>
<tr><td>9</td><td>bottomright</td></tr>
</table>

<p>Souřadnice spritu lze nastavit změnou následujících atributů (skutečná
pozice spritu se vypočte ihned po nastavení těchto atributů):</p>

<table>
<tr><th>#</th><th>Atribut</th><th>Souřadnice</th></tr>
<tr><td>1</td><td>left</td><td>horizontální</td></tr>
<tr><td>2</td><td>right</td><td>horizontální</td></tr>
<tr><td>3</td><td>top</td><td>vertikální</td></tr>
<tr><td>4</td><td>bottom</td><td>vertikální</td></tr>
<tr><td>5</td><td>center</td><td>horizontální či vertikální</td></tr>
<tr><td>6</td><td>middle</td><td>horizontální či vertikální</td></tr>
</table>



<p><a name="k04"></a></p>
<h2 id="k04">4. Zobrazení aktuální pozice spritu</h2>

<p>Pozici spritu lze kdykoli přečíst a nějakým způsobem využít. V&nbsp;dnešním
druhém demonstračním příkladu tuto pozici (přesněji řečeno souřadnice <i>x</i>
a <i>y</i>) zobrazíme. Tato operace probíhá ve funkci nazvané
<strong>draw_sprite_pos</strong>:</p>

<pre>
WIDTH = 480
HEIGHT = 480
&nbsp;
BACKGROUND_COLOR = (0, 0x40, 0x40)
&nbsp;
red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
&nbsp;
blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
&nbsp;
yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
&nbsp;
&nbsp;
def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)
&nbsp;
&nbsp;
def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()
&nbsp;
    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")
</pre>

*** image ***
<p><i>Obrázek 7: Výchozí pozice spritů.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Změna pozice spritu s&nbsp;využitím klávesnice</h2>

<pre>
</pre>

<pre>
WIDTH = 480
HEIGHT = 480
&nbsp;
BACKGROUND_COLOR = (0, 0x40, 0x40)
&nbsp;
red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
&nbsp;
blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
&nbsp;
yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
&nbsp;
dx = 0
dy = 0
&nbsp;
&nbsp;
def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)
&nbsp;
&nbsp;
def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()
&nbsp;
    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")
&nbsp;
&nbsp;
def <strong>update</strong>():
    blue_sprite.left += dx
    blue_sprite.top += dy
&nbsp;
&nbsp;
def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        dy = -1
    if key == keys.DOWN:
        dy = 1
    if key == keys.LEFT:
        dx = -1
    if key == keys.RIGHT:
        dx = 1
&nbsp;
&nbsp;
def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        dx = 0
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Souběžný posun dvou spritů</h2>

<pre>
WIDTH = 480
HEIGHT = 480
&nbsp;
BACKGROUND_COLOR = (0, 0x40, 0x40)
&nbsp;
red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
&nbsp;
blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
blue_sprite.dx = 0
blue_sprite.dy = 0
&nbsp;
yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
yellow_sprite.dx = 0
yellow_sprite.dy = 0
&nbsp;
&nbsp;
def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)
&nbsp;
&nbsp;
def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()
&nbsp;
    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")
&nbsp;
&nbsp;
def <strong>update</strong>():
    blue_sprite.left += blue_sprite.dx
    blue_sprite.top += blue_sprite.dy
&nbsp;
    yellow_sprite.left += yellow_sprite.dx
    yellow_sprite.top += yellow_sprite.dy
&nbsp;
&nbsp;
def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        blue_sprite.dy = -1
    if key == keys.DOWN:
        blue_sprite.dy = 1
    if key == keys.LEFT:
        blue_sprite.dx = -1
    if key == keys.RIGHT:
        blue_sprite.dx = 1
    if key == keys.W:
        yellow_sprite.dy = -1
    if key == keys.S:
        yellow_sprite.dy = 1
    if key == keys.A:
        yellow_sprite.dx = -1
    if key == keys.D:
        yellow_sprite.dx = 1
&nbsp;
&nbsp;
def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        blue_sprite.dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        blue_sprite.dx = 0
    if key == keys.W or key == keys.S:
        yellow_sprite.dy = 0
    if key == keys.A or key == keys.D:
        yellow_sprite.dx = 0
</pre>

<p>Dvojice atributů <strong>left</strong>+<strong>right</strong> a
<strong>top</strong>+<strong>bottom</strong> je svázaná, tj.&nbsp;změnou
jednoho atributu dojde i ke změně atributu druhého. To si můžeme snadno ověřit
spuštěním dalšího demonstračního příkladu a posunem spritu po obrazovce:</p>

<pre>
WIDTH = 480
HEIGHT = 480
&nbsp;
BACKGROUND_COLOR = (0, 0x40, 0x40)
&nbsp;
red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
&nbsp;
blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
&nbsp;
yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
&nbsp;
dx = 0
dy = 0
&nbsp;
&nbsp;
def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    msg = "left: {}  right: {}  top: {}  bottom: {}".format(int(sprite.left), int(sprite.right), int(sprite.top), int(sprite.bottom))
    screen.draw.text(msg, (pos_x+100, pos_y), color=color)
&nbsp;
&nbsp;
def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()
&nbsp;
    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")
&nbsp;
&nbsp;
def update():
    blue_sprite.left += dx
    blue_sprite.top += dy
&nbsp;
&nbsp;
def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        dy = -1
    if key == keys.DOWN:
        dy = 1
    if key == keys.LEFT:
        dx = -1
    if key == keys.RIGHT:
        dx = 1
&nbsp;
&nbsp;
def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        dx = 0
</pre>

*** image ***
<p><i>Obrázek 8: Výchozí pozice spritů.</i></p>

*** image ***
<p><i>Obrázek 9: Horizontální posun modrého spritu doprava.</i></p>

*** image ***
<p><i>Obrázek 10: Vertikální posun modrého spritu dolů.</i></p>


<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x40, 0x40)

red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
red_sprite.dx = 1
red_sprite.dy = 1

blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
blue_sprite.dx = 0
blue_sprite.dy = 0

yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
yellow_sprite.dx = 0
yellow_sprite.dy = 0


def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)


def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()

    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")


def <strong>bounce</strong>(sprite):
    if red_sprite.left &lt; 0:
        red_sprite.left = 0
        red_sprite.dx = -red_sprite.dx

    if red_sprite.right &gt; WIDTH:
        red_sprite.right = WIDTH
        red_sprite.dx = -red_sprite.dx

    if red_sprite.top &lt; 0:
        red_sprite.top = 0
        red_sprite.dy = -red_sprite.dy

    if red_sprite.bottom &gt; HEIGHT:
        red_sprite.bottom = HEIGHT
        red_sprite.dy = -red_sprite.dy


def <strong>update</strong>():
    blue_sprite.left += blue_sprite.dx
    blue_sprite.top += blue_sprite.dy

    yellow_sprite.left += yellow_sprite.dx
    yellow_sprite.top += yellow_sprite.dy

    red_sprite.left += red_sprite.dx
    red_sprite.top += red_sprite.dy

    bounce(red_sprite)


def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        blue_sprite.dy = -1
    if key == keys.DOWN:
        blue_sprite.dy = 1
    if key == keys.LEFT:
        blue_sprite.dx = -1
    if key == keys.RIGHT:
        blue_sprite.dx = 1
    if key == keys.W:
        yellow_sprite.dy = -1
    if key == keys.S:
        yellow_sprite.dy = 1
    if key == keys.A:
        yellow_sprite.dx = -1
    if key == keys.D:
        yellow_sprite.dx = 1


def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        blue_sprite.dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        blue_sprite.dx = 0
    if key == keys.W or key == keys.S:
        yellow_sprite.dy = 0
    if key == keys.A or key == keys.D:
        yellow_sprite.dx = 0
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<table>
<tr><th></th><th></th><th></th></tr>
<tr><td></td><td></td><td></td></tr>
</table>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x40, 0x40)

red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
red_sprite.dx = 1
red_sprite.dy = 1

blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
blue_sprite.dx = 0
blue_sprite.dy = 0

yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
yellow_sprite.dx = 0
yellow_sprite.dy = 0


def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)


def <strong>draw_sprite_col</strong>(sprite, other_sprites, pos_x, pos_y, color):
    collision = False
    for other_sprite in other_sprites:
        if sprite.colliderect(other_sprite):
            collision = True
            break
    if collision:
        screen.draw.text("x", (pos_x, pos_y), color=color)


def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()

    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")

    draw_sprite_col(red_sprite, (blue_sprite, yellow_sprite), 200, 10, "#db0000")
    draw_sprite_col(blue_sprite, (red_sprite, yellow_sprite), 200, 30, "#00a2db")
    draw_sprite_col(yellow_sprite, (red_sprite, blue_sprite), 200, 50, "#dbc500")


def <strong>bounce</strong>(sprite):
    if red_sprite.left &lt; 0:
        red_sprite.left = 0
        red_sprite.dx = -red_sprite.dx

    if red_sprite.right &gt; WIDTH:
        red_sprite.right = WIDTH
        red_sprite.dx = -red_sprite.dx

    if red_sprite.top &lt; 0:
        red_sprite.top = 0
        red_sprite.dy = -red_sprite.dy

    if red_sprite.bottom &gt; HEIGHT:
        red_sprite.bottom = HEIGHT
        red_sprite.dy = -red_sprite.dy


def <strong>update</strong>():
    blue_sprite.left += blue_sprite.dx
    blue_sprite.top += blue_sprite.dy

    yellow_sprite.left += yellow_sprite.dx
    yellow_sprite.top += yellow_sprite.dy

    red_sprite.left += red_sprite.dx
    red_sprite.top += red_sprite.dy

    bounce(red_sprite)


def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        blue_sprite.dy = -1
    if key == keys.DOWN:
        blue_sprite.dy = 1
    if key == keys.LEFT:
        blue_sprite.dx = -1
    if key == keys.RIGHT:
        blue_sprite.dx = 1
    if key == keys.W:
        yellow_sprite.dy = -1
    if key == keys.S:
        yellow_sprite.dy = 1
    if key == keys.A:
        yellow_sprite.dx = -1
    if key == keys.D:
        yellow_sprite.dx = 1


def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        blue_sprite.dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        blue_sprite.dx = 0
    if key == keys.W or key == keys.S:
        yellow_sprite.dy = 0
    if key == keys.A or key == keys.D:
        yellow_sprite.dx = 0
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x40, 0x40)

red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
red_sprite.dx = 1
red_sprite.dy = 1

blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
blue_sprite.dx = 0
blue_sprite.dy = 0

yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
yellow_sprite.dx = 0
yellow_sprite.dy = 0


def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)


def <strong>draw_sprite_col</strong>(sprite, other_sprites, pos_x, pos_y, color):
    collision = False
    if sprite.collidelist(other_sprites) &gt;= 0:
        screen.draw.text("x", (pos_x, pos_y), color=color)


def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()

    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")

    draw_sprite_col(red_sprite, (blue_sprite, yellow_sprite), 200, 10, "#db0000")
    draw_sprite_col(blue_sprite, (red_sprite, yellow_sprite), 200, 30, "#00a2db")
    draw_sprite_col(yellow_sprite, (red_sprite, blue_sprite), 200, 50, "#dbc500")


def <strong>bounce</strong>(sprite):
    if red_sprite.left &lt; 0:
        red_sprite.left = 0
        red_sprite.dx = -red_sprite.dx

    if red_sprite.right &gt; WIDTH:
        red_sprite.right = WIDTH
        red_sprite.dx = -red_sprite.dx

    if red_sprite.top &lt; 0:
        red_sprite.top = 0
        red_sprite.dy = -red_sprite.dy

    if red_sprite.bottom &gt; HEIGHT:
        red_sprite.bottom = HEIGHT
        red_sprite.dy = -red_sprite.dy


def <strong>update</strong>():
    blue_sprite.left += blue_sprite.dx
    blue_sprite.top += blue_sprite.dy

    yellow_sprite.left += yellow_sprite.dx
    yellow_sprite.top += yellow_sprite.dy

    red_sprite.left += red_sprite.dx
    red_sprite.top += red_sprite.dy

    bounce(red_sprite)


def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        blue_sprite.dy = -1
    if key == keys.DOWN:
        blue_sprite.dy = 1
    if key == keys.LEFT:
        blue_sprite.dx = -1
    if key == keys.RIGHT:
        blue_sprite.dx = 1
    if key == keys.W:
        yellow_sprite.dy = -1
    if key == keys.S:
        yellow_sprite.dy = 1
    if key == keys.A:
        yellow_sprite.dx = -1
    if key == keys.D:
        yellow_sprite.dx = 1


def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        blue_sprite.dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        blue_sprite.dx = 0
    if key == keys.W or key == keys.S:
        yellow_sprite.dy = 0
    if key == keys.A or key == keys.D:
        yellow_sprite.dx = 0
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x40, 0x40)

red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
red_sprite.dx = 1
red_sprite.dy = 1

blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
blue_sprite.dx = 0
blue_sprite.dy = 0

yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
yellow_sprite.dx = 0
yellow_sprite.dy = 0


def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)


def <strong>draw_sprite_col</strong>(sprite, other_sprites, pos_x, pos_y, color):
    collision = False
    if sprite.collidelist(other_sprites) &gt;= 0:
        screen.draw.text("x", (pos_x, pos_y), color=color)


def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()

    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")

    draw_sprite_col(red_sprite, (blue_sprite, yellow_sprite), 200, 10, "#db0000")
    draw_sprite_col(blue_sprite, (red_sprite, yellow_sprite), 200, 30, "#00a2db")
    draw_sprite_col(yellow_sprite, (red_sprite, blue_sprite), 200, 50, "#dbc500")


def <strong>bounce</strong>(sprite):
    if red_sprite.left &lt; 0:
        red_sprite.left = 0
        red_sprite.dx = -red_sprite.dx

    if red_sprite.right &gt; WIDTH:
        red_sprite.right = WIDTH
        red_sprite.dx = -red_sprite.dx

    if red_sprite.top &lt; 0:
        red_sprite.top = 0
        red_sprite.dy = -red_sprite.dy

    if red_sprite.bottom &gt; HEIGHT:
        red_sprite.bottom = HEIGHT
        red_sprite.dy = -red_sprite.dy


def <strong>collide</strong>(sprite1, sprite2):
    if sprite1.colliderect(sprite2):
        sprite2.image = "white"


def <strong>update</strong>():
    blue_sprite.left += blue_sprite.dx
    blue_sprite.top += blue_sprite.dy

    yellow_sprite.left += yellow_sprite.dx
    yellow_sprite.top += yellow_sprite.dy

    red_sprite.left += red_sprite.dx
    red_sprite.top += red_sprite.dy

    bounce(red_sprite)
    collide(red_sprite, blue_sprite)
    collide(red_sprite, yellow_sprite)


def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        blue_sprite.dy = -1
    if key == keys.DOWN:
        blue_sprite.dy = 1
    if key == keys.LEFT:
        blue_sprite.dx = -1
    if key == keys.RIGHT:
        blue_sprite.dx = 1
    if key == keys.W:
        yellow_sprite.dy = -1
    if key == keys.S:
        yellow_sprite.dy = 1
    if key == keys.A:
        yellow_sprite.dx = -1
    if key == keys.D:
        yellow_sprite.dx = 1


def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        blue_sprite.dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        blue_sprite.dx = 0
    if key == keys.W or key == keys.S:
        yellow_sprite.dy = 0
    if key == keys.A or key == keys.D:
        yellow_sprite.dx = 0
</pre>


<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<pre>
WIDTH = 480
HEIGHT = 480

BACKGROUND_COLOR = (0, 0x40, 0x40)

red_sprite = Actor("red.gif")
red_sprite.pos = (120, 240)
red_sprite.dx = 1
red_sprite.dy = 1

blue_sprite = Actor("blue.gif")
blue_sprite.pos = (240, 240)
blue_sprite.dx = 0
blue_sprite.dy = 0

yellow_sprite = Actor("yellow.gif")
yellow_sprite.pos = (360, 240)
yellow_sprite.dx = 0
yellow_sprite.dy = 0


def <strong>draw_sprite_pos</strong>(which, sprite, pos_x, pos_y, color):
    screen.draw.text(which + ":", (pos_x, pos_y), color=color)
    screen.draw.text(str(int(sprite.x)), (pos_x+70, pos_y), color=color)
    screen.draw.text(str(int(sprite.y)), (pos_x+110, pos_y), color=color)


def <strong>draw_sprite_col</strong>(sprite, other_sprites, pos_x, pos_y, color):
    collision = False
    if sprite.collidelist(other_sprites) &gt;= 0:
        screen.draw.text("x", (pos_x, pos_y), color=color)


def <strong>draw</strong>():
    screen.fill(BACKGROUND_COLOR)
    red_sprite.draw()
    blue_sprite.draw()
    yellow_sprite.draw()

    draw_sprite_pos("Red", red_sprite, 10, 10, "#db0000")
    draw_sprite_pos("Blue", blue_sprite, 10, 30, "#00a2db")
    draw_sprite_pos("Yellow", yellow_sprite, 10, 50, "#dbc500")

    draw_sprite_col(red_sprite, (blue_sprite, yellow_sprite), 200, 10, "#db0000")
    draw_sprite_col(blue_sprite, (red_sprite, yellow_sprite), 200, 30, "#00a2db")
    draw_sprite_col(yellow_sprite, (red_sprite, blue_sprite), 200, 50, "#dbc500")


def <strong>reset_sprite</strong>():
    red_sprite.image = "red.gif"


def <strong>bounce</strong>(sprite):
    bounced = False

    if red_sprite.left &lt; 0:
        red_sprite.left = 0
        red_sprite.dx = -red_sprite.dx
        bounced = True

    if red_sprite.right &gt; WIDTH:
        red_sprite.right = WIDTH
        red_sprite.dx = -red_sprite.dx
        bounced = True

    if red_sprite.top &lt; 0:
        red_sprite.top = 0
        red_sprite.dy = -red_sprite.dy
        bounced = True

    if red_sprite.bottom &gt; HEIGHT:
        red_sprite.bottom = HEIGHT
        red_sprite.dy = -red_sprite.dy
        bounced = True

    if bounced:
        red_sprite.image = "gray.gif"
        clock.schedule_unique(reset_sprite, 0.4)
        sounds.ping.play()


def <strong>collide</strong>(sprite1, sprite2):
    if sprite1.colliderect(sprite2):
        sprite1.image = "white.gif"
        clock.schedule_unique(reset_sprite, 1.0)


def <strong>update</strong>():
    blue_sprite.left += blue_sprite.dx
    blue_sprite.top += blue_sprite.dy

    yellow_sprite.left += yellow_sprite.dx
    yellow_sprite.top += yellow_sprite.dy

    red_sprite.left += red_sprite.dx
    red_sprite.top += red_sprite.dy

    bounce(red_sprite)
    collide(red_sprite, blue_sprite)
    collide(red_sprite, yellow_sprite)


def <strong>on_key_down</strong>(key, mod, unicode):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP:
        blue_sprite.dy = -1
    if key == keys.DOWN:
        blue_sprite.dy = 1
    if key == keys.LEFT:
        blue_sprite.dx = -1
    if key == keys.RIGHT:
        blue_sprite.dx = 1
    if key == keys.W:
        yellow_sprite.dy = -1
    if key == keys.S:
        yellow_sprite.dy = 1
    if key == keys.A:
        yellow_sprite.dx = -1
    if key == keys.D:
        yellow_sprite.dx = 1


def <strong>on_key_up</strong>(key, mod):
    global dx, dy
    if key == keys.ESCAPE:
        exit()
    if key == keys.UP or key == keys.DOWN:
        blue_sprite.dy = 0
    if key == keys.LEFT or key == keys.RIGHT:
        blue_sprite.dx = 0
    if key == keys.W or key == keys.S:
        yellow_sprite.dy = 0
    if key == keys.A or key == keys.D:
        yellow_sprite.dx = 0
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Relevantní funkce z&nbsp;knihovny Pygame</h2>

<p>V&nbsp;této kapitole jsou uvedeny odkazy na dokumentaci k&nbsp;funkcím
knihovny <i>Pygame</i>, které jsou interně používány i projektem <i>Pygame
Zero</i>. Tyto funkce jsou vidět v&nbsp;některých chybových hlášeních, protože
i přes snahy autorů <i>Pygame Zero</i> není odstínění od knihovny <i>Pygame</i>
úplné (což je možná jeden z&nbsp;největších současných nedostatků tohoto
projektu):</p>

<ol>

<li>pygame.init()<br />
<a href="http://www.pygame.org/docs/ref/pygame.html#pygame.init">http://www.pygame.org/docs/ref/pygame.html#pygame.init</a>
</li>

<li>pygame.quit()<br />
<a href="http://www.pygame.org/docs/ref/pygame.html#pygame.quit">http://www.pygame.org/docs/ref/pygame.html#pygame.quit</a>
</li>

<li>pygame.display.set_mode()<br />
<a href="http://www.pygame.org/docs/ref/display.html#pygame.display.set_mode">http://www.pygame.org/docs/ref/display.html#pygame.display.set_mode</a>
</li>

<li>pygame.display.set_caption()<br />
<a href="http://www.pygame.org/docs/ref/display.html#pygame.display.set_caption">http://www.pygame.org/docs/ref/display.html#pygame.display.set_caption</a>
</li>

<li>pygame.display.update()<br />
<a href="http://www.pygame.org/docs/ref/display.html#pygame.display.update">http://www.pygame.org/docs/ref/display.html#pygame.display.update</a>
</li>

<li>pygame.event.get()<br />
<a href="http://www.pygame.org/docs/ref/event.html#pygame.event.get">http://www.pygame.org/docs/ref/event.html#pygame.event.get</a>
</li>

<li>pygame.time.wait()<br />
<a href="http://www.pygame.org/docs/ref/time.html#pygame.time.wait">http://www.pygame.org/docs/ref/time.html#pygame.time.wait</a>
</li>

<li>pygame.time.Clock.tick()<br />
<a href="http://www.pygame.org/docs/ref/time.html#pygame.time.Clock.tick">http://www.pygame.org/docs/ref/time.html#pygame.time.Clock.tick</a>
</li>

<li>pygame.draw.line()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.line">http://www.pygame.org/docs/ref/draw.html#pygame.draw.line</a>
</li>

<li>pygame.draw.circle()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.circle">http://www.pygame.org/docs/ref/draw.html#pygame.draw.circle</a>
</li>

<li>pygame.draw.rect()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.rect">http://www.pygame.org/docs/ref/draw.html#pygame.draw.rect</a>
</li>

<li>pygame.draw.ellipse()<br />
<a href="http://www.pygame.org/docs/ref/draw.html#pygame.draw.ellipse">http://www.pygame.org/docs/ref/draw.html#pygame.draw.ellipse</a>
</li>

<li>pygame.key.get_pressed<br />
<a href="https://www.pygame.org/docs/ref/key.html#pygame.key.get_pressed">https://www.pygame.org/docs/ref/key.html#pygame.key.get_pressed</a>
</li>

<li>pygame.key.get_mods<br />
<a href="https://www.pygame.org/docs/ref/key.html#pygame.key.get_mods">https://www.pygame.org/docs/ref/key.html#pygame.key.get_mods</a>
</li>

<li>pygame.mouse.get_pos<br />
<a href="https://www.pygame.org/docs/ref/mouse.html#pygame.mouse.get_pos">https://www.pygame.org/docs/ref/mouse.html#pygame.mouse.get_pos</a>
</li>

<li>pygame.mouse.get_rel<br />
<a href="https://www.pygame.org/docs/ref/mouse.html#pygame.mouse.get_rel">https://www.pygame.org/docs/ref/mouse.html#pygame.mouse.get_rel</a>
</li>

<li>pygame.mouse.get_pressed<br />
<a href="https://www.pygame.org/docs/ref/mouse.html#pygame.mouse.get_pressed">https://www.pygame.org/docs/ref/mouse.html#pygame.mouse.get_pressed</a>
</li>

<li>pygame.mixer<br />
<a href="https://www.pygame.org/docs/ref/mixer.html">https://www.pygame.org/docs/ref/mixer.html</a>
</li>

<li>pygame.mixer.music<br />
<a href="https://www.pygame.org/docs/ref/music.html">https://www.pygame.org/docs/ref/music.html</a>
</li>

<li>pygame.mixer.Sound<br />
<a href="https://www.pygame.org/docs/ref/mixer.html#pygame.mixer.Sound">https://www.pygame.org/docs/ref/mixer.html#pygame.mixer.Sound</a>
</li>

<li>pygame.mixer.Channel<br />
<a href="https://www.pygame.org/docs/ref/mixer.html#pygame.mixer.Channel">https://www.pygame.org/docs/ref/mixer.html#pygame.mixer.Channel</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech popsaných demonstračních příkladů určených pro Python 3
a současně i pro nástroj <i>Pygame Zero</i> byly uloženy do Git repositáře
dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
čtveřici tabulek (ovšem vzhledem k&nbsp;tomu, že se datové soubory hledají
v&nbsp;konkrétních podadresářích, je výhodnější provést klon celého
repositáře):</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>00_intro.py</td><td>prázdný, ovšem plně funkční projekt</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/00_intro.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/00_intro.py</a></td></tr>
<tr><td> 2</td><td>01_clear_screen.py</td><td>vymazání obrazovky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/01_clear_screen.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/01_clear_screen.py</a></td></tr>
<tr><td> 3</td><td>02_fill_in_screen.py</td><td>vyplnění obrazovky určenou barvou specifikovanou trojicí RGB</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/02_fill_in_screen.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/02_fill_in_screen.py</a></td></tr>
<tr><td> 4</td><td>03_fill_in_screen.py</td><td>vyplnění obrazovky určenou barvou specifikovanou jménem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/03_fill_in_screen.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/03_fill_in_screen.py</a></td></tr>
<tr><td> 5</td><td>04_display_sprite.py</td><td>zobrazení spritu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/04_display_sprite.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/04_display_sprite.py</a></td></tr>
<tr><td> 6</td><td>05_display_sprite.py</td><td>zobrazení spritu odlišným způsobem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/05_display_sprite.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/05_display_sprite.py</a></td></tr>
<tr><td> 7</td><td>06_background.py</td><td>zobrazení pozadí scény</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/06_background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/06_background.py</a></td></tr>
<tr><td> 8</td><td>07_background_and_sprite.py</td><td>zobrazení pozadí scény a současně i spritu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/07_background_and_sprite.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/07_background_and_sprite.py</a></td></tr>
<tr><td> 9</td><td>08_screen_type.py</td><td>výpis typu globální proměnné <strong>screen</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/08_screen_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/08_screen_type.py</a></td></tr>
<tr><td>10</td><td>09_images_type.py</td><td>výpis typu globální proměnné <strong>images</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/09_images_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/09_images_type.py</a></td></tr>
<tr><td>11</td><td>10_sounds_type.py</td><td>výpis typu globální proměnné <strong>souds</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/10_sounds_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/10_sounds_type.py</a></td></tr>
<tr><td>12</td><td>11_keyboard_type.py</td><td>výpis typu globální proměnné <strong>keyboard</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/11_keyboard_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/11_keyboard_type.py</a></td></tr>
<tr><td>13</td><td>12_tone_type.py</td><td>výpis typu globální proměnné <strong>tone</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/12_tone_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/12_tone_type.py</a></td></tr>
<tr><td>14</td><td>13_draw_lines.py</td><td>okraj v&nbsp;okně aplikace vykreslený čtveřicí úseček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/13_draw_lines.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/13_draw_lines.py</a></td></tr>
<tr><td>15</td><td>14_draw_lines.py</td><td>úsečky, z&nbsp;nichž každá je vykreslena odlišnou barvou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/14_draw_lines.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/14_draw_lines.py</a></td></tr>
<tr><td>16</td><td>15_draw_rect.py</td><td>obrys obdélníka vykreslený metodou <strong>screen.draw.rect</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/15_draw_rect.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/15_draw_rect.py</a></td></tr>
<tr><td>17</td><td>16_draw_filled_rect.py</td><td>část barvové palety, pro jejíž vykreslení je použita metoda <strong>screen.draw.filled_rect</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/16_draw_filled_rect.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/16_draw_filled_rect.py</a></td></tr>
<tr><td>18</td><td>17_draw_circle.py</td><td>kružnice vykreslená metodou <strong>screen.draw.circle</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/17_draw_circle.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/17_draw_circle.py</a></td></tr>
<tr><td>19</td><td>18_draw_filled_circles.py</td><td>část barvové palety, pro jejíž vykreslení je použita metoda <strong>screen.draw.filled_circle</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/18_draw_filled_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/18_draw_filled_circles.py</a></td></tr>
<tr><td>20</td><td>19_draw_simple_text.py</td><td>nejjednodušší forma vykreslení textu do okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/19_draw_simple_text.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/19_draw_simple_text.py</a></td></tr>
<tr><td>21</td><td>20_font_name.py</td><td>vykreslení textu fontem o zvolené velikosti</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/20_font_name.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/20_font_name.py</a></td></tr>
<tr><td>22</td><td>21_outline.py</td><td>vykreslení textu se zvýrazněným obrysem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/21_outline.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/21_outline.py</a></td></tr>
<tr><td>23</td><td>22_drop_shadow.py</td><td>vykreslení stínovaného textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/22_drop_shadow.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/22_drop_shadow.py</a></td></tr>
<tr><td>24</td><td>23_drop_shadow_more.py</td><td>vykreslení stínovaného textu s&nbsp;větším odstupem stínu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/23_drop_shadow_more.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/23_drop_shadow_more.py</a></td></tr>
<tr><td>25</td><td>24_color_gradient.py</td><td>text vykreslený s&nbsp;využitím gradientního přechodu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/24_color_gradient.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/24_color_gradient.py</a></td></tr>
<tr><td>26</td><td>25_wrapping.py</td><td>zalomení delšího textu na obrazovce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/25_wrapping.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/25_wrapping.py</a></td></tr>
<tr><td>27</td><td>26_vertical_text.py</td><td>vertikální text</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/26_vertical_text.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/26_vertical_text.py</a></td></tr>
<tr><td>28</td><td>27_rotated_text.py</td><td>otočení vykreslovaného textu o libovolný úhel</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/27_rotated_text.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/27_rotated_text.py</a></td></tr>
<tr><td>29</td><td>28_sprite_on_background.py</td><td>zobrazení spritu na vyplněném pozadí scény</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/28_sprite_on_background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/28_sprite_on_background.py</a></td></tr>
<tr><td>30</td><td>29_print_key_codes.py</td><td>výpis kódů stisknutých kláves</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/29_print_key_codes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/29_print_key_codes.py</a></td></tr>
<tr><td>31</td><td>30_esc_to_end.py</td><td>ukončení aplikace po stisku Esc</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/30_esc_to_end.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/30_esc_to_end.py</a></td></tr>
<tr><td>32</td><td>31_move_sprite.py</td><td>přesun spritu kurzorovými klávesami (první verze)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/31_move_sprite.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/31_move_sprite.py</a></td></tr>
<tr><td>33</td><td>32_move_sprite_in_update.py</td><td>přesun spritu kurzorovými klávesami (druhá verze)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/32_move_sprite_in_update.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/32_move_sprite_in_update.py</a></td></tr>
<tr><td>34</td><td>33_move_sprite_in_update_correct.py</td><td>přesun spritu kurzorovými klávesami (funkční verze)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/33_move_sprite_in_update_correct.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/33_move_sprite_in_update_correct.py</a></td></tr>
<tr><td>35</td><td>34_move_sprite_by_mouse.py</td><td>přesun spritu pohybem myši</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/34_move_sprite_by_mouse.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/34_move_sprite_by_mouse.py</a></td></tr>
<tr><td>36</td><td>35_move_sprite_by_mouse_click.py</td><td>okamžitý přesun spritu po kliku myší</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/35_move_sprite_by_mouse_click.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/35_move_sprite_by_mouse_click.py</a></td></tr>
<tr><td>37</td><td>36_animate_sprite_by_mouse_click.py</td><td>animovaný přesun spritu po kliku myší</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/36_animate_sprite_by_mouse_click.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/36_animate_sprite_by_mouse_click.py</a></td></tr>
<tr><td>38</td><td>37_colors_table.py</td><td>tabulka s&nbsp;názvy barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/37_colors_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/37_colors_table.py</a></td></tr>
<tr><td>39</td><td>38_show_colors.py</td><td>zobrazení několika barev podporovaných knihovnou Pygame Zero</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/38_show_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/38_show_colors.py</a></td></tr>
<tr><td>40</td><td>39_animation_framework.py</td><td>kostra příkladu s&nbsp;animací spritů ovládaných z&nbsp;klávesnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/39_animation_framework.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/39_animation_framework.py</a></td></tr>
<tr><td>41</td><td>40_fast_slow_animation.py</td><td>rychlá a pomalá animace řízená z&nbsp;klávesnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/40_fast_slow_animation.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/40_fast_slow_animation.py</a></td></tr>
<tr><td>42</td><td>41_accelerated_decelerated_tween.py</td><td>zrychlující a zpomalující se animace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/41_accelerated_decelerated_tween.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/41_accelerated_decelerated_tween.py</a></td></tr>
<tr><td>43</td><td>42_elastic_tween.py</td><td>elastické odrazy na začátku či na konci animace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/42_elastic_tween.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/42_elastic_tween.py</a></td></tr>
<tr><td>44</td><td>43_bounce_tween.py</td><td>odrazy na začátku a konci animace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/43_bounce_tween.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/43_bounce_tween.py</a></td></tr>
<tr><td>45</td><td>44_complicated_animation.py</td><td>komplikovanější animace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/44_complicated_animation.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/44_complicated_animation.py</a></td></tr>
<tr><td>46</td><td>45_more_sprites_preparation.py</td><td>animace s&nbsp;více sprity (příprava)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/45_more_sprites_preparation.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/45_more_sprites_preparation.py</a></td></tr>
<tr><td>47</td><td>46_more_sprites.py</td><td>animace s&nbsp;více sprity (funkční příklad)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/46_more_sprites.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/46_more_sprites.py</a></td></tr>
<tr><td>48</td><td>47_rotate_sprite.py</td><td>rotace spritu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/47_rotate_sprite.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/47_rotate_sprite.py</a></td></tr>
<tr><td>49</td><td>48_more_sprites_rotation.py</td><td>rotace více spritů současně (kombinace s&nbsp;lineárním pohybem)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/48_more_sprites_rotation.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/48_more_sprites_rotation.py</a></td></tr>
<tr><td>50</td><td>49_move_and_rotate_sprite.py</td><td>posun a rotace spritu řízený z&nbsp;klávesnice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/49_move_and_rotate_sprite.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/49_move_and_rotate_sprite.py</a></td></tr>
<tr><td>51</td><td>50_play_sound.py</td><td>přehrání zvuku po stisku klávesy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/50_play_sound.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/50_play_sound.py</a></td></tr>
<tr><td>52</td><td>51_play_music.py</td><td>automatické přehrání hudby po spuštění příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/51_play_music.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/51_play_music.py</a></td></tr>
<tr><td>53</td><td>52_more_sprites.py</td><td>zobrazení trojice nepohyblivých spritů na jednobarevném pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/52_more_sprites.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/52_more_sprites.py</a></td></tr>
<tr><td>53</td><td>52_B_more_sprites_bg.py</td><td>zobrazení trojice nepohyblivých spritů na pozadí představujících část bludiště Pac Mana</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/52_B_more_sprites_bg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/52_B_more_sprites_bg.py</a></td></tr>
<tr><td>54</td><td>53_sprites_pos.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/53_sprites_pos.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/53_sprites_pos.py</a></td></tr>
<tr><td>55</td><td>54_sprites_pos_move_one.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/54_sprites_pos_move_one.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/54_sprites_pos_move_one.py</a></td></tr>
<tr><td>56</td><td>55_sprites_pos_move_two.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/55_sprites_pos_move_two.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/55_sprites_pos_move_two.py</a></td></tr>
<tr><td>57</td><td>56_sprites_pos_move_three.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/56_sprites_pos_move_three.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/56_sprites_pos_move_three.py</a></td></tr>
<tr><td>58</td><td>57_sprites_collisions.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/57_sprites_collisions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/57_sprites_collisions.py</a></td></tr>
<tr><td>59</td><td>58_sprites_collisions.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/58_sprites_collisions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/58_sprites_collisions.py</a></td></tr>
<tr><td>60</td><td>59_sprites_collisions_change_color.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/59_sprites_collisions_change_color.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/59_sprites_collisions_change_color.py</a></td></tr>
<tr><td>61</td><td>60_sprites_collisions_change_color_sound.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/60_sprites_collisions_change_color_sound.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/60_sprites_collisions_change_color_sound.py</a></td></tr>
<tr><td>62</td><td>61_sprite_print_pos.py</td><td>zobrazení levého, pravého, horního i spodního okraje posunovaného spritu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/61_sprite_print_pos.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygame_zero/61_sprite_print_pos.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>
</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

