<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: základní prvky TUI</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba textového uživatelského rozhraní s knihovnou prompt_toolkit: základní prvky TUI</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Tvorba textového uživatelského rozhraní s&nbsp;knihovnou prompt_toolkit: základní prvky TUI</a></p>
<p><a href="#k02">*** 2. Výpis formátovaného textu na konzoli</a></p>
<p><a href="#k03">*** 3. Použití třídy HTML a základních HTML značek &lt;b&gt;, &lt;i&gt; a &lt;u&gt;</a></p>
<p><a href="#k04">*** 4. Specifikace barvy textu: použití značky &lt;style&gt; popř.&nbsp;nových pseudoznaček</a></p>
<p><a href="#k05">*** 5. Změna barvy pozadí textu; kombinace barvy popředí, pozadí i stylu výpisu</a></p>
<p><a href="#k06">*** 6. Obarvení výstupu s&nbsp;využitím lexeru z&nbsp;knihovny Pygments</a></p>
<p><a href="#k07">*** 7. Konstrukce výstupu se specifikací typů jednotlivých tokenů</a></p>
<p><a href="#k08">*** 8. Dialogové boxy nabízené knihovnou prompt_toolkit</a></p>
<p><a href="#k09">*** 9. Dialog pro zobrazení zprávy uživateli &ndash; <strong>message_dialog</strong></a></p>
<p><a href="#k10">*** 10. Základní dialog pro výběr odpovědi typu Ano/Ne</a></p>
<p><a href="#k11">*** 11. Změna popisu tlačítek v&nbsp;dialogu</a></p>
<p><a href="#k12">*** 12. Dialog, v&nbsp;němž je počet a popis tlačítek plně konfigurovatelný</a></p>
<p><a href="#k13">*** 13. Dialog určený pro vstup textu nebo dalších údajů</a></p>
<p><a href="#k14">*** 14. Režim zadávání hesla popř.&nbsp;dalších údajů, které se nemají přímo zobrazit na terminálu</a></p>
<p><a href="#k15">*** 15. Dialog se sadou přepínacích tlačítek (radio buttons)</a></p>
<p><a href="#k16">*** 16. Dialog zobrazující průběh výpočtu (&bdquo;teploměr&ldquo;)</a></p>
<p><a href="#k17">*** 17. Nastavení stylu zobrazení dialogů</a></p>
<p><a href="#k18">*** 18. Tvorba aplikací s&nbsp;plnohodnotným textovým uživatelským rozhraním</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba textového uživatelského rozhraní s&nbsp;knihovnou prompt_toolkit: základní prvky TUI</h2>

<p></p>
https://www.root.cz/clanky/tvorba-aplikaci-s-prikazovym-radkem-v-pythonu-s-vyuzitim-knihoven-gnu-readline-a-prompt-toolkit/
https://www.root.cz/clanky/tvorba-aplikaci-s-textovym-uzivatelskym-rozhranim-zalozenym-na-knihovne-prompt-toolkit/

<img src="https://i.iinfo.cz/images/183/prompt-toolkit-2-17.png" class="image-334207" alt="&#160;" width="806" height="531" />
<p><i>Obrázek 1: Příklad z&nbsp;předchozího článku, v&nbsp;němž jsme si popsali
zdánlivě triviální funkci pro vstup textových údajů.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Výpis formátovaného textu na konzoli</h2>

<p></p>

<pre>
from prompt_toolkit import <strong>print_formatted_text</strong>
from urllib.request import urlopen
&nbsp;
input = urlopen("http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt")
&nbsp;
for line in input:
    line = line.strip().decode("utf-8")
    <strong>print_formatted_text(line)</strong>
</pre>

*** image ***
<p><i>Obrázek 2: </i></p>

*** image ***
<p><i>Obrázek 3: </i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Použití třídy HTML a základních HTML značek &lt;b&gt;, &lt;i&gt; a &lt;u&gt;</h2>

<p></p>

<pre>
from prompt_toolkit import <strong>print_formatted_text</strong>, <strong>HTML</strong>
&nbsp;
print_formatted_text(HTML('zpráva obsahující &lt;b&gt;tučný text&lt;/b&gt;'))
print_formatted_text(HTML('zpráva s &lt;i&gt;textem tištěným kurzivou&lt;/i&gt;'))
print_formatted_text(HTML('text obsahující &lt;u&gt;tato podtržená slova&lt;/u&gt;'))
print_formatted_text(HTML('test kombinace &lt;b&gt;&lt;i&gt;tučné kurzivy&lt;/i&gt;&lt;/b&gt;'))
print_formatted_text(HTML('test kombinace &lt;b&gt;&lt;u&gt;tučného podtrženého textu&lt;/u&gt;&lt;/b&gt;'))
print_formatted_text(HTML('test kombinace &lt;i&gt;&lt;u&gt;podtrženého textu psaného kurzivou&lt;/u&gt;&lt;/i&gt;'))
</pre>

*** image ***
<p><i>Obrázek 4: </i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Specifikace barvy textu: použití značky &lt;style&gt; popř.&nbsp;nových pseudoznaček</h2>

<pre>
from prompt_toolkit import <strong>print_formatted_text</strong>, <strong>HTML</strong>
from prompt_toolkit.output.vt100 import FG_ANSI_COLORS
&nbsp;
for color in sorted(FG_ANSI_COLORS):
    message = "&lt;style fg='{color}'&gt;zpráva vypsaná barvou {color}&lt;/style&gt;".format(color=color)
    print(message)
&nbsp;
print("\n\n")
&nbsp;
for color in sorted(FG_ANSI_COLORS):
    message = "&lt;style fg='{color}'&gt;zpráva vypsaná barvou {color}&lt;/style&gt;".format(color=color)
    <strong>print_formatted_text(HTML(message))</strong>
</pre>

*** image ***
<p><i>Obrázek 5: </i></p>

*** image ***
<p><i>Obrázek 6: </i></p>

<pre>
from prompt_toolkit import <strong>print_formatted_text</strong>, <strong>HTML</strong>
from prompt_toolkit.output.vt100 import FG_ANSI_COLORS
&nbsp;
for color in sorted(FG_ANSI_COLORS):
    message = "&lt;{color}&gt;zpráva vypsaná barvou {color}&lt;/{color}&gt;".format(color=color)
    print(message)
&nbsp;
print("\n\n")
&nbsp;
for color in sorted(FG_ANSI_COLORS):
    message = "&lt;{color}&gt;zpráva vypsaná barvou {color}&lt;/{color}&gt;".format(color=color)
    <strong>print_formatted_text(HTML(message))</strong>
</pre>

*** image ***
<p><i>Obrázek 5: </i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Změna barvy pozadí textu; kombinace barvy popředí, pozadí i stylu výpisu</h2>

<pre>
from prompt_toolkit import print_formatted_text, HTML
from prompt_toolkit.output.vt100 import FG_ANSI_COLORS, BG_ANSI_COLORS
&nbsp;
for bg_color in sorted(BG_ANSI_COLORS):
    for fg_color in sorted(FG_ANSI_COLORS):
        message = "&lt;p fg='{fg_color}' bg='{bg_color}'&gt; test &lt;/p&gt;".format(
            fg_color=fg_color, bg_color=bg_color)
        <strong>print_formatted_text(HTML(message), end="")</strong>
&nbsp;
    print()
</pre>

<pre>
from prompt_toolkit import print_formatted_text, HTML
from prompt_toolkit.output.vt100 import FG_ANSI_COLORS, BG_ANSI_COLORS
&nbsp;
for bg_color in sorted(BG_ANSI_COLORS):
    for fg_color in sorted(FG_ANSI_COLORS):
        message = "&lt;p fg='{fg_color}' bg='{bg_color}'&gt;XX &lt;u&gt;XX&lt;/u&gt; &lt;i&gt;XX&lt;/i&gt; &lt;b&gt;XX&lt;/b&gt;   &lt;/p&gt;".format(
            fg_color=fg_color, bg_color=bg_color)
        <strong>print_formatted_text(HTML(message), end="")</strong>
&nbsp;
    print()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Obarvení výstupu s&nbsp;využitím lexeru z&nbsp;knihovny Pygments</h2>

<pre>
from pygments import lex
from pygments.token import Token
from pygments.lexers import PythonLexer
&nbsp;
from prompt_toolkit.formatted_text import PygmentsTokens
from prompt_toolkit import print_formatted_text
&nbsp;
code = """
for i in range(1, 10):
    print(i)
    if i &gt; 5:
        break
    do_something(i)
"""
&nbsp;
tokens = list(lex(code, lexer=PythonLexer()))
print_formatted_text(PygmentsTokens(tokens))
</pre>

<pre>
from pygments import lex
from pygments.token import Token
from pygments.lexers.basic import CbmBasicV2Lexer
&nbsp;
from prompt_toolkit.formatted_text import PygmentsTokens
from prompt_toolkit import print_formatted_text
&nbsp;
code = """
10 FOR I=0 TO 63
20 FOR J=43 TO 0 STEP -1
30 LET CX=(I-52)/31
40 LET CY=(J-22)/31
50 LET ZX=0
60 LET ZY=0
70 LET ITER=0
80 LET ZX2=ZX*ZX
85 LET ZY2=ZY*ZY
90 LET ZY=2*ZX*ZY+CY
100 LET ZX=ZX2-ZY2+CX
110 LET ITER=ITER+1
120 IF ZX2+ZY2&lt;=4 AND ITER&lt;200 THEN GOTO 80
130 IF ITER=200 THEN PLOT I, J
140 NEXT J
150 NEXT I
"""
&nbsp;
tokens = list(lex(code, lexer=CbmBasicV2Lexer()))
print_formatted_text(PygmentsTokens(tokens))
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Konstrukce výstupu se specifikací typů jednotlivých tokenů</h2>

<pre>
from pygments.token import Token
from prompt_toolkit import print_formatted_text
from prompt_toolkit.formatted_text import PygmentsTokens
&nbsp;
text = [
    (Token.Keyword, 'print'),
    (Token.Punctuation, '('),
    (Token.Literal.String.Double, '"'),
    (Token.Literal.String, 'hello'),
    (Token.Literal.String.Double, '"'),
    (Token.Punctuation, ','),
    (Token.Text.Whitespace, ' '),
    (Token.Literal.String.Single, '"'),
    (Token.Literal.String, 'world'),
    (Token.Literal.String.Single, '"'),
    (Token.Punctuation, ')'),
    (Token.Text, '\n'),
]
&nbsp;
print_formatted_text(PygmentsTokens(text))
</pre>

<table>
<tr><th></th><th></th></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
</table>

Keyword
Keyword.Constant
Keyword.Declaration
Keyword.Namespace
Keyword.Pseudo
Keyword.Reserved
Keyword.Type

Name
Name.Attribute
Name.Builtin
Name.Builtin.Pseudo
Name.Class
Name.Constant
Name.Decorator
Name.Entity
Name.Exception
Name.Function
Name.Function.Magic
Name.Label
Name.Namespace
Name.Other
Name.Tag
Name.Variable
Name.Variable.Class
Name.Variable.Global
Name.Variable.Instance
Name.Variable.Magic

Literal
Literal.Date
String
String.Affix
String.Backtick
String.Char
String.Delimiter
String.Doc
String.Double
String.Escape
String.Heredoc
String.Interpol
String.Other
String.Regex
String.Single
String.Symbol
Number
Number.Bin
Number.Float
Number.Hex
Number.Integer
Number.Integer.Long
Number.Oct

Operator
Operator.Word

Punctuation

Comment
Comment.Hashbang
Comment.Multiline
Comment.Preproc
Comment.Single
Comment.Special

Generic
Generic.Deleted
Generic.Emph
Generic.Error
Generic.Heading
Generic.Inserted
Generic.Output
Generic.Prompt
Generic.Strong
Generic.Subheading
Generic.Traceback



<p><a name="k08"></a></p>
<h2 id="k08">8. Dialogové boxy nabízené knihovnou prompt_toolkit</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Dialog pro zobrazení zprávy uživateli &ndash; <strong>message_dialog</strong></h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog
&nbsp;
message_dialog(
    title='Software failure',
    text='Guru Meditation #12345678.ABCDEFFF\nPress ENTER to continue.')
</pre>

<pre>
from prompt_toolkit.shortcuts import message_dialog
&nbsp;
message_dialog(
    title='Software failure',
    text='Guru Meditation #12345678.ABCDEFFF\nPress ENTER to continue.',
    ok_text='[Enter]')
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Základní dialog pro výběr odpovědi typu Ano/Ne</h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog, yes_no_dialog
&nbsp;
response = yes_no_dialog(
    title='Software failure',
    text='Guru Meditation #12345678.ABCDEFFF\nRestart system?')
&nbsp;
message_dialog(
    title='Your choice',
    text='Yes' if response else 'No')
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Změna popisu tlačítek v&nbsp;dialogu</h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog, yes_no_dialog
&nbsp;
response = yes_no_dialog(
    title='Tento program provedl neplatnou operaci',
    text='Nevíme, co se stalo, známe jen kód chybÿ́:\n#12345678.ABCDEFFF\n\nProvést restart?',
    yes_text='Ano',
    no_text='Ne')
&nbsp;
message_dialog(
    title='Zadali jste volbu',
    text='Ano' if response else 'Ne')
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Dialog, v&nbsp;němž je počet a popis tlačítek plně konfigurovatelný</h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog, button_dialog
&nbsp;
response = button_dialog(
    title='Tento program provedl neplatnou operaci',
    text='Not ready reading drive A',
    buttons=[
        ('Abort', 'abort'),
        ('Retry', 'retry'),
        ('Fail', 'fail')])
&nbsp;
message_dialog(
    title='Zadali jste volbu',
    text=response)
</pre>

<pre>
from enum import Enum
from prompt_toolkit.shortcuts import message_dialog, button_dialog
&nbsp;
Response = Enum('Response', 'abort retry fail')
&nbsp;
response = button_dialog(
    title='Tento program provedl neplatnou operaci',
    text='Not ready reading drive A',
    buttons=[
        ('Abort', Response.abort),
        ('Retry', Response.retry),
        ('Fail',  Response.fail)])
&nbsp;
message_dialog(
    title='Zadali jste volbu',
    text=str(response))
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Dialog určený pro vstup textu nebo dalších údajů</h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog, input_dialog
&nbsp;
response = input_dialog(
    title='Zadání uživatelského jména',
    text='Uživatelské jméno:')
&nbsp;
if response is not None:
    message_dialog(
        title='Zadání uživatelského jména',
        text='zadali jste: {name}'.format(name=response if response else 'nic :)'))
else:
    message_dialog(
        title='Zadání uživatelského jména',
        text='Jméno nebylo zadáno')
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Režim zadávání hesla popř.&nbsp;dalších údajů, které se nemají přímo zobrazit na terminálu</h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog, input_dialog
&nbsp;
response = input_dialog(
    title='Zadání hesla',
    text='Heslo:',
    password=True)
&nbsp;
if response is not None:
    message_dialog(
        title='Zadání hesla',
        text='zadali jste: {password}'.format(password=response if response else 'nic :)'))
else:
    message_dialog(
        title='Zadání hesla',
        text='Heslo nebylo zadáno')
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Dialog se sadou přepínacích tlačítek (radio buttons)</h2>

<pre>
from prompt_toolkit.shortcuts import message_dialog, radiolist_dialog
&nbsp;
response = radiolist_dialog(
    title='Zadání příkazu',
    text='Zadejte příkaz (quit, exit, help, eval):',
    values=[
        ('quit', 'Quit'),
        ('exit', 'Exit'),
        ('help', 'Help'),
        ('eval', 'Eval')])
&nbsp;
if response is not None:
    message_dialog(
        title='Zadání příkazu',
        text='zadali jste: {command}'.format(command=response if response else 'nic :)'))
else:
    message_dialog(
        title='Zadání uživatelského jména',
        text='Příkaz nebyl zadán')
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Dialog zobrazující průběh výpočtu (&bdquo;teploměr&ldquo;)</h2>

<pre>
from time import sleep
from prompt_toolkit.shortcuts import message_dialog, progress_dialog
&nbsp;
&nbsp;
def simple_callback(set_percentage_function, log_text_function):
    for counter in range(0, 101, 5):
        log_text_function("Pocitam: {counter}\n".format(counter=counter))
        set_percentage_function(counter)
        sleep(0.5)
    sleep(2)
&nbsp;
&nbsp;
response = progress_dialog(
    title='Výpočet',
    text='Probíhá výpočet, prosím čekejte',
    run_callback=simple_callback)
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Nastavení stylu zobrazení dialogů</h2>

<pre>
from enum import Enum
from prompt_toolkit.shortcuts import message_dialog, button_dialog
from prompt_toolkit.styles import Style
&nbsp;
dialog_stylesheet_1 = Style.from_dict({
    'dialog':             'bg:yellow',
    'dialog frame-label': 'bg:white black',
    'dialog.body':        'bg:#000000 #00ff00',
    'dialog shadow':      'bg:#00aa00',
    })
&nbsp;
Response = Enum('Response', 'abort retry fail')
&nbsp;
response = button_dialog(
    title='Tento program provedl neplatnou operaci',
    text='Not ready reading drive A',
    buttons=[
        ('Abort', Response.abort),
        ('Retry', Response.retry),
        ('Fail',  Response.fail)],
    style=dialog_stylesheet_1)
&nbsp;
&nbsp;
dialog_stylesheet_2 = Style.from_dict({
    'dialog':             'bg:black',
    'dialog frame-label': 'bg:white black',
    })
&nbsp;
message_dialog(
    title='Zadali jste volbu',
    text=str(response),
    style=dialog_stylesheet_2)
</pre>

<pre>
from enum import Enum
from prompt_toolkit import HTML
from prompt_toolkit.shortcuts import message_dialog, button_dialog
from prompt_toolkit.styles import Style

dialog_stylesheet_1 = Style.from_dict({
    'dialog':             'bg:yellow',
    'dialog frame-label': 'bg:white black',
    'dialog.body':        'bg:#000000 #00ff00',
    'dialog shadow':      'bg:#00aa00',
    })

Response = Enum('Response', 'abort retry fail')

response = button_dialog(
    title=HTML('Tento program provedl <white>neplatnou</white> operaci'),
    text=HTML('Not <u>ready</u> reading drive <b>A</b>'),
    buttons=[
        ('Abort', Response.abort),
        ('Retry', Response.retry),
        ('Fail',  Response.fail)],
    style=dialog_stylesheet_1)


dialog_stylesheet_2 = Style.from_dict({
    'dialog':             'bg:black',
    'dialog frame-label': 'bg:white black',
    })

message_dialog(
    title='Zadali jste volbu',
    text=HTML("<red>Příkaz:</red> <blue>{response}</blue>".format(response=response)),
    style=dialog_stylesheet_2)
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Tvorba aplikací s&nbsp;plnohodnotným textovým uživatelským rozhraním</h2>



<p><a name="k19"></a></p>
<h2 id="k19">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny dnes popisované demonstrační příklady byly uloženy do Git repositáře,
který je dostupný na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Příklady si můžete v&nbsp;případě potřeby stáhnout i jednotlivě bez nutnosti
klonovat celý (dnes již poměrně rozsáhlý) repositář:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Popis</th><th>Odkaz</th></tr>
<tr><td>1</td><td>print1_unicode_support.py</td><td>výpis textu s Unicode znaky</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print1_unicode_support.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print1_unicode_support.py</a></td></tr>
<tr><td>2</td><td>print2_basic_html_tags.py</td><td>použití základních HTML značek</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print2_basic_html_tags.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print2_basic_html_tags.py</a></td></tr>
<tr><td>3</td><td>print3_html_styles.py</td><td>použití HTML stylů při formátování</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print3_html_styles.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print3_html_styles.py</a></td></tr>
<tr><td>4</td><td>print4_html_fake_tags.py</td><td>pseudoznačky HTML při formátování</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print4_html_fake_tags.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print4_html_fake_tags.py</a></td></tr>
<tr><td>5</td><td>print5_html_background_colors.py</td><td>specifikace barvy pozadí</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print5_html_background_colors.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print5_html_background_colors.py</a></td></tr>
<tr><td>6</td><td>print6_combinations.py</td><td>kombinace barev a HTML stylů</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print6_combinations.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print6_combinations.py</a></td></tr>
<tr><td>7</td><td>print7_print_using_lexer.py</td><td>použití lexeru při obarvování syntaxe</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print7_print_using_lexer.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print7_print_using_lexer.py</a></td></tr>
<tr><td>8</td><td>print8_print_using_lexer_B.py</td><td>použití lexeru při obarvování syntaxe</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print8_print_using_lexer_B.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print8_print_using_lexer_B.py</a></td></tr>
<tr><td>9</td><td>print9_use_pygments.py</td><td>využití možností knihovny Pygments při obarvování</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print9_use_pygments.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/print/print9_use_pygments.py</a></td></tr>
</table>

<table>
<tr><th>#</th><th>Příklad</th><th>Popis</th><th>Odkaz</th></tr>
<tr><td>1</td><td>dialog1_basic_message_dialog.py</td><td>základní dialog pro zobrazení zprávy</td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog1_basic_message_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog1_basic_message_dialog.py</a></td></tr>
<tr><td>2</td><td>dialog2_basic_message_dialog_button.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog2_basic_message_dialog_button.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog2_basic_message_dialog_button.py</a></td></tr>
<tr><td>3</td><td>dialog3_yes_no_dialog.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog3_yes_no_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog3_yes_no_dialog.py</a></td></tr>
<tr><td>4</td><td>dialog4_custom_yes_no_dialog.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog4_custom_yes_no_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog4_custom_yes_no_dialog.py</a></td></tr>
<tr><td>5</td><td>dialog5_button_dialog.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog5_button_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog5_button_dialog.py</a></td></tr>
<tr><td>6</td><td>dialog6_button_dialog_enum.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog6_button_dialog_enum.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog6_button_dialog_enum.py</a></td></tr>
<tr><td>7</td><td>dialog7_basic_input_dialog.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog7_basic_input_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog7_basic_input_dialog.py</a></td></tr>
<tr><td>8</td><td>dialog8_password_mode.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog8_password_mode.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog8_password_mode.py</a></td></tr>
<tr><td>9</td><td>dialog9_radio_list_dialog.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog9_radio_list_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog9_radio_list_dialog.py</a></td></tr>
<tr><td>10</td><td>dialog10_progress_dialog.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog10_progress_dialog.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog10_progress_dialog.py</a></td></tr>
<tr><td>11</td><td>dialog11_dialog_style.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog11_dialog_style.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog11_dialog_style.py</a></td></tr>
<tr><td>12</td><td>dialog12_dialog_html_usage.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog12_dialog_html_usage.py">https://github.com/tisnik/presentations/blob/master/prompt_toolkit/dialogs/dialog12_dialog_html_usage.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>UTF-8 encoded sample plain-text file<br />
<a href="http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt">http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt</a>
</li>

<li>4 Python libraries for building great command-line user interfaces<br />
<a href="https://opensource.com/article/17/5/4-practical-python-libraries">https://opensource.com/article/17/5/4-practical-python-libraries</a>
</li>

<li>prompt_toolkit 2.0.3 na PyPi<br />
<a href="https://pypi.org/project/prompt_toolkit/">https://pypi.org/project/prompt_toolkit/</a>
</li>

<li>python-prompt-toolkit na GitHubu<br />
<a href="https://github.com/jonathanslenders/python-prompt-toolkit">https://github.com/jonathanslenders/python-prompt-toolkit</a>
</li>

<li>The GNU Readline Library<br />
<a href="https://tiswww.case.edu/php/chet/readline/rltop.html">https://tiswww.case.edu/php/chet/readline/rltop.html</a>
</li>

<li>GNU Readline (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GNU_Readline">https://en.wikipedia.org/wiki/GNU_Readline</a>
</li>

<li>readline — GNU readline interface (Python 3.x)<br />
<a href="https://docs.python.org/3/library/readline.html">https://docs.python.org/3/library/readline.html</a>
</li>

<li>readline — GNU readline interface (Python 2.x)<br />
<a href="https://docs.python.org/2/library/readline.html">https://docs.python.org/2/library/readline.html</a>
</li>

<li>GNU Readline Library - command line editing<br />
<a href="https://tiswww.cwru.edu/php/chet/readline/readline.html">https://tiswww.cwru.edu/php/chet/readline/readline.html</a>
</li>

<li>gnureadline 6.3.8 na PyPi<br />
<a href="https://pypi.org/project/gnureadline/">https://pypi.org/project/gnureadline/</a>
</li>

<li>Editline Library (libedit)<br />
<a href="http://thrysoee.dk/editline/">http://thrysoee.dk/editline/</a>
</li>

<li>Comparing Python Command-Line Parsing Libraries – Argparse, Docopt, and Click<br />
<a href="https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/">https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/</a>
</li>

<li>libedit or editline<br />
<a href="http://www.cs.utah.edu/~bigler/code/libedit.html">http://www.cs.utah.edu/~bigler/code/libedit.html</a>
</li>

<li>WinEditLine<br />
<a href="http://mingweditline.sourceforge.net/">http://mingweditline.sourceforge.net/</a>
</li>

<li>rlcompleter — Completion function for GNU readline<br />
<a href="https://docs.python.org/3/library/rlcompleter.html">https://docs.python.org/3/library/rlcompleter.html</a>
</li>

<li>rlwrap na GitHubu<br />
<a href="https://github.com/hanslub42/rlwrap">https://github.com/hanslub42/rlwrap</a>
</li>

<li>rlwrap(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/rlwrap">https://linux.die.net/man/1/rlwrap</a>
</li>

<li>readline(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/readline">https://linux.die.net/man/3/readline</a>
</li>

<li>history(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/history">https://linux.die.net/man/3/history</a>
</li>

<li>vi(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/vi">https://linux.die.net/man/1/vi</a>
</li>

<li>emacs(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/emacs">https://linux.die.net/man/1/emacs</a>
</li>

<li>Pygments - Python syntax highlighter<br />
<a href="http://pygments.org/">http://pygments.org/</a>
</li>

<li>Write your own lexer<br />
<a href="http://pygments.org/docs/lexerdevelopment/">http://pygments.org/docs/lexerdevelopment/</a>
</li>

<li>TUI &ndash; Text User Interface<br />
<a href="https://en.wikipedia.org/wiki/Text-based_user_interface">https://en.wikipedia.org/wiki/Text-based_user_interface</a>
</li>

<li>PuDB: výkonný debugger pro Python s retro uživatelským rozhraním (nástroj s&nbsp;plnohodnotným TUI)<br />
<a href="https://www.root.cz/clanky/pudb-vykonny-debugger-pro-python-s-retro-uzivatelskym-rozhranim/">https://www.root.cz/clanky/pudb-vykonny-debugger-pro-python-s-retro-uzivatelskym-rozhranim/</a>
</li>

<li>Historie vývoje textových editorů: krkolomná cesta k moderním textovým procesorům<br />
<a href="https://www.root.cz/clanky/historie-vyvoje-textovych-editoru-krkolomna-cesta-k-modernim-textovym-procesorum/">https://www.root.cz/clanky/historie-vyvoje-textovych-editoru-krkolomna-cesta-k-modernim-textovym-procesorum/</a>
</li>

<li>Mandelbrot set: Sinclair ZX81 BASIC<br />
<a href="http://rosettacode.org/wiki/Mandelbrot_set#Sinclair_ZX81_BASIC">http://rosettacode.org/wiki/Mandelbrot_set#Sinclair_ZX81_BASIC</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

