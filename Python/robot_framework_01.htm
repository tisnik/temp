<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Instalace nástroje Robot Framework</a></p>
<p><a href="#k03">*** 3. Nejjednodušší testovací scénář aneb &bdquo;Hello world&ldquo; pro Robot Framework</a></p>
<p><a href="#k04">*** 4. Základní formát testovacího scénáře</a></p>
<p><a href="#k05">*** 5. Další možný formát testovacího scénáře</a></p>
<p><a href="#k06">*** 6. Zvýraznění tabulkového formátu testů</a></p>
<p><a href="#k07">*** 7. Formát založený na TSV</a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>Na stránkách serveru <a href="https://www.root.cz">root.cz</a> jsme se seznámili již s&nbsp;několika různými knihovnami a frameworky určenými pro tvorbu a spouštění softwarových testů. Připomeňme si, že pro prakticky každý moderní programovací jazyk existuje minimálně jedna knihovna použitelná pro psaní jednotkových testů (<i>unit test</i>); ve skutečnosti ovšem těchto knihoven bude pro daný jazyk pravděpodobně existovat hned několik. Ovšem jednotkové testy tvoří jen jedinou vrstvu (základnu) takzvané &bdquo;testovací pyramidy&ldquo;. Nad nimi se nachází funkční testy, integrační testy, různé formy benchmarků, BDD testy, testy grafického uživatelské rozhraní atd. Z&nbsp;již popsaných nástrojů pro tvorbu těchto testů zmiňme například knihovnu <a href="">Behave</a> (BDD testy psané <a href="">v&nbsp;Pythonu</a>), <a href=""></a> (BDD testy psané <a href="">v&nbsp;Go</a>), knihovnu <a href="">Frisby</a> (testy REST API, implementace pro Go), <a href="">různé varianty knihovny expect</a> (testování aplikací s&nbsp;příkazovou řádkou) atd.</p>

<p>Dnes se &ndash; prozatím ovšem ve stručnosti &ndash; seznámíme s&nbsp;některými vlastnostmi nástroje nazvaného <i>Robot Framework</i>, který je naprogramován v&nbsp;Pythonu, ovšem lze ho použít společně s&nbsp;dalšími programovacími jazyky (ať již přímo či nepřímo, což si vysvětlíme příště). Jedná se o nástroj použitelný mj.&nbsp;pro psaní akceptačních testů (které taktéž patří do testovací pyramidy a nachází se blízko jejího vrcholku), ovšem lze ho použít i pro zápis BDD testů, testů grafického uživatelského rozhraní (založeného například na webových technologiích) atd. <i>Robot Framework</i> je navržen velmi obecně, což sice zajišťuje jeho velkou flexibilitu, ovšem na druhou stranu nemusí být zpočátku zřejmé, jakým způsobem je ho vlastně možné použít. Z&nbsp;tohoto důvodu si dnes ukážeme jak základní formát zápisu testovacích scénářů, tak i způsob implementace jednotlivých <i>klíčových slov (keyword)</i> v&nbsp;Pythonu (klíčová slova vlastně přestavují základní stavební kameny implementace testovacích scénářů).</p>

<img src="https://i.iinfo.cz/images/53/robot-framework-logo-1.png" class="image-398500" alt="&#160;" width="294" height="191" />
<p><i>Obrázek 1: Logo nástroje Robot Framework.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace nástroje Robot Framework</h2>

<p>Nástroj <i>Robot Framework</i> je navržen modulárním způsobem. Obsahuje jádro představované (z&nbsp;pohledu uživatele) spustitelnými soubory <strong>robot</strong> a <strong></strong>. Toto jádro je doplněno o několik základních knihoven se sadou základních klíčových slov. Doinstalovat je možné i další knihovny (moduly), například modul zajišťující testování webových aplikací přes <a href="">Selenium</a> atd. Dnes si ovšem vystačíme pouze s&nbsp;jádrem Robot Frameworku a se základními klíčovými slovy, která rozšíříme pomocí kódu napsaného v&nbsp;Pythonu.</p>

<p>Samotná instalace jádra <i>Robot Frameworku</i> je snadná a můžeme pro ni použít nástroj <strong>pip</strong> či <strong>pip3</strong>. Pro jednoduchost je v&nbsp;tomto článku instalace provedena pouze pro aktivního uživatele, stejně dobře je však možné použít virtuální prostředí Pythonu (<i>virtualenv</i>), provést instalaci do systémových adresářů atd.:</p>

<pre>
$ <strong>pip3 install --user robotframework</strong>
</pre>

<p>Instalace by měla být velmi krátká, protože samotné jádro frameworku je relativně malé. Po dokončení instalačního procesu si zkontrolujte, zda je na <strong>PATH</strong> dostupný spustitelný soubor <strong>robot</strong>:</p>

<pre>
$ <strong>which robot</strong>
</pre>

<p>A následně:</p>

<pre>
$ <strong>robot --version</strong>
&nbsp;
Robot Framework 3.1.2 (Python 3.7.4 on linux)
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;případě, že spustitelný soubor <strong>robot</strong> nebyl nalezen, zkontrolujte obsah adresáře &bdquo;&ldquo;, popř.&nbsp;aktuální obsah proměnné prostředí <strong>PATH</strong>:</div></p>

<pre>
$ <strong>echo $PATH</strong>
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Nejjednodušší testovací scénář aneb &bdquo;Hello world&ldquo; pro Robot Framework</h2>

<p>Podívejme se nyní na zcela nejjednodušší, ovšem plně funkční testovací scénář, který obsahuje test nazvaný &bdquo;Demo&ldquo; s&nbsp;jediným krokem &ndash; vytištěním řetězce &bdquo;Hello world&ldquo; do logovacího souboru. Scénář je uložen v&nbsp;souboru pojmenovaném &bdquo;test01.robot&ldquo; a má následující obsah:</p>

<pre>
*** Test Cases ***
Demo
    Log  Hello world
</pre>

<p><div class="rs-tip-major">Poznámka: pozor si dejte na to, aby mezi slovem &bdquo;Log&ldquo; a &bdquo;Hello&ldquo; byly zapsány minimálně dvě mezery. Tuto podivnou podmínku si vysvětlíme později.</div></p>

<p>Tento test je možné spustit, a to příkazem:</p>

<pre>
$ <strong>robot test01.robot</strong>
</pre>

<p>Po spuštění by se měly do terminálu vypsat informace o spuštěných a úspěšně dokončených testech, včetně informace o tom, že byly vytvořeny i soubory s&nbsp;výsledky testu i se zprávami poslanými do logu. Cesta k&nbsp;těmi souborům je zobrazena v&nbsp;absolutní podobě, což je rozumné, protože adresářová struktura s&nbsp;testy a pomocnými knihovnami může být složitá; navíc dokážou některé terminály takto zapsanou cestu zvýraznit ve formě aktivního odkazu pro otevření v&nbsp;prohlížeči:</p>

<pre>
==============================================================================
Test01                                                                        
==============================================================================
Demo                                                                  | PASS |
------------------------------------------------------------------------------
Test01                                                                | PASS |
1 critical test, 1 passed, 0 failed
1 test total, 1 passed, 0 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<p>Podrobnější výsledky spuštěných testů nalezneme ve výše zmíněných vygenerovaných HTML stránkách, které lze například (v&nbsp;případě spuštění na CI) uložit do artefaktu atd., protože samotné stránky obsahují všechna potřebná data (CSS + pomocné JavaScriptové funkce). Základem je soubor <strong>report.html</strong> se shrnutými výsledky spuštěných testů:</p>

<a href="https://www.root.cz/obrazek/398484/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-1-prev.png" class="image-398484" alt="&#160;" width="370" height="264" /></a>
<p><i>Obrázek 2: Shrnuté výsledky spuštěných testů ve vygenerované HTML stránce.</i></p>

<p>K&nbsp;dispozici jsou ovšem i logovací informace, které jsou rozděleny podle jednotlivých scénářů a případů (stránka obsahuje rozklikávací bloky):</p>

<a href="https://www.root.cz/obrazek/398485/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-2-prev.png" class="image-398485" alt="&#160;" width="365" height="270" /></a>
<p><i>Obrázek 3: Logovací informace získané po spuštění testů.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Základní formát testovacího scénáře</h2>

<p><a href="#k03">V&nbsp;předchozí kapitole</a> jsme si řekli, že v&nbsp;samotné implementaci testu je nutné mezi slovo &bdquo;Log&ldquo; a &bdquo;Hello&ldquo; vložit minimálně dvě mezery:</p>

<pre>
    Log  Hello world
</pre>

<p>Je tomu tak z&nbsp;toho důvodu, že testovací scénáře mají formát připomínající tabulku a tím pádem je nutné rozlišit mezery umístěné v&nbsp;jedné buňce tabulky (&bdquo;Hello world&ldquo; je jediná buňka) a mezery použité pro oddělení jednotlivých buněk tabulky. Ostatně i mezery na začátku řádku, tedy před slovem &bdquo;Log&ldquo;, slouží pro specifikaci prázdné buňky v&nbsp;prvním sloupci pomyslné tabulky.</p>

<p>Ostatně si můžeme snadno vyzkoušet, co se stane ve chvíli, kdy namísto dvou (či více) mezer mezi slovy &bdquo;Log&ldquo; a &bdquo;Hello&ldquo; použijeme mezeru jedinou:</p>

<pre>
*** Test Cases ***
Demo
    Log Hello world
</pre>

<p>Pokusíme se spustit takto upravený test:</p>

<pre>
$ <strong>robot test02.robot</strong>
</pre>

<p>Tentokrát je ovšem nahlášena chyba, a to v&nbsp;samotném formátu testu:</p>

<pre>
==============================================================================
Test02                                                                        
==============================================================================
Demo                                                                  | FAIL |
<strong>No keyword with name 'Log Hello world' found.</strong>
------------------------------------------------------------------------------
Test02                                                                | FAIL |
1 critical test, 0 passed, 1 failed
1 test total, 0 passed, 1 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<p><div class="rs-tip-major">Poznámka: samotné chybové hlášení nám vlastně naznačuje, jakým způsobem se testovací scénáře zpracovávají. Slova oddělená maximálně jednou mezerou jsou považována za <i>keyword</i> (klíčová slova), dvěma či více mezerami se naopak klíčová slova oddělují od svých parametrů. To, že klíčová slova jsou ve skutečnosti souslovími, sice na první pohled může působit divně (minimálně na vývojáře), ovšem testovací scénáře jsou díky tomu čitelnější.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Další možný formát testovacího scénáře</h2>

<p>Existují i další možné formáty zápisů testovacího scénáře. Můžeme například pro oddělení jednotlivých buněk pomyslné tabulky použít znak <strong>Tab</strong>, pochopitelně tehdy, pokud máte správně nastavený textový editor (aby Taby neexpandoval na mezery). V&nbsp;následujícím výpisu je mezi slova &bdquo;Log&ldquo; a &bdquo;Hello&ldquo; vložena právě tabelační zarážka (což je naznačeno vloženým řádkem):</p>

<pre>
*** Test Cases ***
Demo
    Log Hello world
       ^
</pre>

<p>V&nbsp;textovém <a href="">editoru Vim</a> je možné si nechat zobrazit řídicí znaky volbou:</p>

<pre>
:set list
</pre>

<p>S&nbsp;následujícím výsledkem (řídicí znaky jsou zvýrazněny tučným písmem):</p>

<pre>
*** Test Cases ***<strong>$</strong>
Demo<strong>$</strong>
    Log<strong>^I</strong>Hello world<strong>$</strong>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Zvýraznění tabulkového formátu testů</h2>

<p>Poměrně často se setkáme s&nbsp;tím, že se tabulkový formát testů zvýrazňuje přímo v&nbsp;testovacím scénáři s&nbsp;využitím znaků |. Právě na tomto formátu je nejlépe patrné, že i hlavičky jednotlivých sekcí (zde <strong>*** Test Cases ***</strong>) jsou vlastně pouhými buňkami tabulky. Taktéž je zřejmé, že klíčové slovo &bdquo;Log&ldquo; má parametr &bdquo;Hello world&ldquo;:</p>

<pre>
| *** Test Cases *** |             |             |
| Demo               |             |             |
|                    | Log         | Hello world |
</pre>

<p><div class="rs-tip-major">Poznámka: předchozí chybný zápis s&nbsp;jedinou mezerou mezi &bdquo;Log&ldquo; a &bdquo;Hello&ldquo; by tedy odpovídal chybnému formátu testu:</div></p>

<pre>
| *** Test Cases *** |                 |
| Demo               |                 |
|                    | Log Hello world |
</pre>

<p>Význam a určitá elegance tohoto způsobu zápisu vynikne zejména ve chvíli, kdy bude scénář obsahovat větší množství sekcí, více testovaných případů atd.:</p>

<pre>
| *** Settings ***   |                  |
| Library            | Test10.py        |
|                    |                  |
| *** Test Cases *** |                  |
| Adder #1           |                  |
|                    | Add              | 1  2
|                    | Result should be | 3
|                    |                  |
| Adder #2           |                  |
|                    | Add              | 0  0
|                    | Result should be | 0
|                    |                  |
| Adder #3           |                  |
|                    | Add              | 1  -1
|                    | Result should be | 0
</pre>

<p><div class="rs-tip-major">Poznámka: pokud se s&nbsp;využitím Robot Frameworku tvoří akceptační testy, tak může být právě tabulková forma vhodná, protože se vlastně jedná o úřední dokument mnohdy zpracovávaný lidmi, kteří mají tabulky v&nbsp;oblibě :-)</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Formát založený na TSV</h2>

<p></p>

<pre>
*** Test Cases ***      
Demo                    
                        Log     Hello world
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>

<pre>
*** Test Cases ***
Case1
    Log  Case#1
Case2
    Log  Case#2
Case3
    Log  Case#3
</pre>

<p></p>

<pre>
==============================================================================
Test06                                                                        
==============================================================================
Case1                                                                 | PASS |
------------------------------------------------------------------------------
Case2                                                                 | PASS |
------------------------------------------------------------------------------
Case3                                                                 | PASS |
------------------------------------------------------------------------------
Test06                                                                | PASS |
3 critical tests, 3 passed, 0 failed
3 tests total, 3 passed, 0 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<p></p>

<a href="https://www.root.cz/obrazek/398486/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-3-prev.png" class="image-398486" alt="&#160;" width="370" height="264" /></a>
<p><i>Obrázek 4: </i></p>

<p></p>

<a href="https://www.root.cz/obrazek/398487/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-4-prev.png" class="image-398487" alt="&#160;" width="370" height="97" /></a>
<p><i>Obrázek 5: </i></p>

<p></p>

<a href="https://www.root.cz/obrazek/398488/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-5-prev.png" class="image-398488" alt="&#160;" width="257" height="270" /></a>
<p><i>Obrázek 6: </i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>

<pre>
| *** Test Cases *** |             |        |
|                    |             |        |
| Case1              |             |        |
|                    | Log         | Case#1 |
|                    |             |        |
| Case2              |             |        |
|                    | Log         | Case#2 |
|                    |             |        |
| Case3              |             |        |
|                    | Log         | Case#3 |
|                    |             |        |
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>

<pre>
*** Test Cases ***
Case1
    Log  Case#1
Case2
    Fail  Failure!!!
Case3
    Log  Case#3
</pre>

<p></p>

<pre>
==============================================================================
Test08                                                                        
==============================================================================
Case1                                                                 | PASS |
------------------------------------------------------------------------------
Case2                                                                 | FAIL |
Failure!!!
------------------------------------------------------------------------------
Case3                                                                 | PASS |
------------------------------------------------------------------------------
Test08                                                                | FAIL |
3 critical tests, 2 passed, 1 failed
3 tests total, 2 passed, 1 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<p></p>

<a href="https://www.root.cz/obrazek/398489/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-6-prev.png" class="image-398489" alt="&#160;" width="370" height="264" /></a>
<p><i>Obrázek 7: </i></p>

<p></p>

<a href="https://www.root.cz/obrazek/398490/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-7-prev.png" class="image-398490" alt="&#160;" width="370" height="73" /></a>
<p><i>Obrázek 8: </i></p>

<p></p>

<a href="https://www.root.cz/obrazek/398491/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-8-prev.png" class="image-398491" alt="&#160;" width="238" height="270" /></a>
<p><i>Obrázek 9: </i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>

<pre>
*** Test Cases ***
Repeated message demo
    Repeat Keyword      5 times    Log    Hello world
</pre>

<p></p>

<pre>
==============================================================================
Test09                                                                        
==============================================================================
Repeated message demo                                                 | PASS |
------------------------------------------------------------------------------
Test09                                                                | PASS |
1 critical test, 1 passed, 0 failed
1 test total, 1 passed, 0 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<p></p>

<a href="https://www.root.cz/obrazek/398492/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-9-prev.png" class="image-398492" alt="&#160;" width="255" height="270" /></a>
<p><i>Obrázek 10: </i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<p></p>

<pre>
*** Settings ***
Library         Test10.py

*** Test Cases ***
Demo
    test
</pre>

<p></p>

<pre>
def <strong>test</strong>():
    print("TEST")
</pre>

<p></p>

<pre>
==============================================================================
Test10                                                                        
==============================================================================
Demo                                                                  | PASS |
------------------------------------------------------------------------------
Test10                                                                | PASS |
1 critical test, 1 passed, 0 failed
1 test total, 1 passed, 0 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<p></p>

<pre>
def <strong>test</strong>():
    raise Exception("fatal error")
</pre>

<p></p>

<pre>
*** Settings ***
Library         Test11.py

*** Test Cases ***
Demo
    test
</pre>

<p></p>

<pre>
==============================================================================
Test11                                                                        
==============================================================================
Demo                                                                  | FAIL |
fatal error
------------------------------------------------------------------------------
Test11                                                                | FAIL |
1 critical test, 0 passed, 1 failed
1 test total, 0 passed, 1 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article_01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article_01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article_01/report.html
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>

<pre>
class <strong>Test12</strong>:
    def <strong>__init__</strong>(self):
        print("INIT")

    def <strong>test</strong>(self):
        print("TEST")
</pre>

<p></p>

<pre>
*** Settings ***
Library         Test12.py

*** Test Cases ***
Demo
    test
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>

<pre>
from logging import debug, error, info, warn

class <strong>Test13</strong>:
    def <strong>__init__</strong>(self):
        print("INIT")

    def <strong>try_logging_module_info</strong>(self):
        info("info message")

    def <strong>try_logging_module_debug</strong>(self):
        debug("debug message")

    def <strong>try_logging_module_warning</strong>(self):
        warn("warning message")

    def <strong>try_logging_module_error</strong>(self):
        error("error message")
</pre>

<p></p>

<pre>
*** Settings ***
Library         Test13.py

*** Test Cases ***
Log1
    Try Logging Module Info
    Try Logging Module Debug

Log2
    Try Logging Module Debug
    Try Logging Module Warning

Log3
    Try Logging Module Debug
    Try Logging Module Error
</pre>

<p></p>

<pre>
==============================================================================
Test13                                                                        
==============================================================================
Log1                                                                  | PASS |
------------------------------------------------------------------------------
Log2                                                                  | PASS |
------------------------------------------------------------------------------
Log3                                                                  | PASS |
------------------------------------------------------------------------------
Test13                                                                | PASS |
3 critical tests, 3 passed, 0 failed
3 tests total, 3 passed, 0 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<a href="https://www.root.cz/obrazek/398493/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-10-prev.png" class="image-398493" alt="&#160;" width="238" height="270" /></a>
<p><i>Obrázek 11: </i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>

<pre>
from logging import debug, error, info, warn

class <strong>Test14</strong>:
    def <strong>__init__</strong>(self):
        print("INIT")

    def <strong>try_logging_module_info</strong>(self):
        info("info message")

    def <strong>try_logging_module_debug</strong>(self):
        debug("debug message")

    def <strong>try_logging_module_warning</strong>(self):
        warn("warning message")

    def <strong>try_logging_module_error</strong>(self):
        error("error message")
        assert False
</pre>

<p></p>

<pre>
*** Settings ***
Library         Test14.py

*** Test Cases ***
Log1
    Try Logging Module Info
    Try Logging Module Debug

Log2
    Try Logging Module Debug
    Try Logging Module Warning

Log3
    Try Logging Module Debug
    Try Logging Module Error
</pre>

<p></p>

<pre>
==============================================================================
Test14                                                                        
==============================================================================
Log1                                                                  | PASS |
------------------------------------------------------------------------------
Log2                                                                  | PASS |
------------------------------------------------------------------------------
Log3                                                                  | FAIL |
AssertionError
------------------------------------------------------------------------------
Test14                                                                | FAIL |
3 critical tests, 2 passed, 1 failed
3 tests total, 2 passed, 1 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<a href="https://www.root.cz/obrazek/398494/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-11-prev.png" class="image-398494" alt="&#160;" width="370" height="264" /></a>
<p><i>Obrázek 12: </i></p>

<a href="https://www.root.cz/obrazek/398495/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-12-prev.png" class="image-398495" alt="&#160;" width="251" height="270" /></a>
<p><i>Obrázek 13: </i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>

<pre>
class <strong>Test15</strong>:
    def <strong>__init__</strong>(self):
        pass
        print("INIT")

    def <strong>add</strong>(self, x, y):
        self.result = x + y

    def <strong>result_should_be</strong>(self, expected):
        assert self.result == expected, "{} != {}".format(self.result, expected)
</pre>

<p></p>

<pre>
*** Settings ***
Library         Test15.py

*** Test Cases ***
Adder #1
    Add  1  2
    Result should be  3

Adder #2
    Add  0  0
    Result should be  0

Adder #3
    Add  1  -1
    Result should be  0
</pre>

<p></p>

<pre>
==============================================================================
Test15                                                                        
==============================================================================
Adder #1                                                              | FAIL |
12 != 3
------------------------------------------------------------------------------
Adder #2                                                              | FAIL |
00 != 0
------------------------------------------------------------------------------
Adder #3                                                              | FAIL |
1-1 != 0
------------------------------------------------------------------------------
Test15                                                                | FAIL |
3 critical tests, 0 passed, 3 failed
3 tests total, 0 passed, 3 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<p></p>

<a href="https://www.root.cz/obrazek/398496/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-13-prev.png" class="image-398496" alt="&#160;" width="370" height="73" /></a>
<p><i>Obrázek 13: </i></p>

<a href="https://www.root.cz/obrazek/398497/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-14-prev.png" class="image-398497" alt="&#160;" width="238" height="270" /></a>
<p><i>Obrázek 14: </i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>

<pre>
class <strong>Test16</strong>:
    def <strong>__init__</strong>(self):
        pass
        print("INIT")

    def <strong>add</strong>(self, x, y):
        self.result = int(x) + int(y)

    def <strong>result_should_be</strong>(self, expected):
        assert self.result == int(expected), "{} != {}".format(self.result, expected)
</pre>

<p></p>

<pre>
*** Settings ***
Library         Test16.py

*** Test Cases ***
Adder #1
    Add  1  2
    Result should be  3

Adder #2
    Add  0  0
    Result should be  0

Adder #3
    Add  1  -1
    Result should be  0
</pre>

<p></p>

<pre>
==============================================================================
Test16                                                                        
==============================================================================
Adder #1                                                              | PASS |
------------------------------------------------------------------------------
Adder #2                                                              | PASS |
------------------------------------------------------------------------------
Adder #3                                                              | PASS |
------------------------------------------------------------------------------
Test16                                                                | PASS |
3 critical tests, 3 passed, 0 failed
3 tests total, 3 passed, 0 failed
==============================================================================
Output:  /home/tester/src/Python/robot-framework-examples/article01/output.xml
Log:     /home/tester/src/Python/robot-framework-examples/article01/log.html
Report:  /home/tester/src/Python/robot-framework-examples/article01/report.html
</pre>

<a href="https://www.root.cz/obrazek/398498/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-15-prev.png" class="image-398498" alt="&#160;" width="370" height="73" /></a>
<p><i>Obrázek 15: </i></p>

<a href="https://www.root.cz/obrazek/398499/"><img src="https://i.iinfo.cz/images/555/robot-framework-01-16-prev.png" class="image-398499" alt="&#160;" width="239" height="270" /></a>
<p><i>Obrázek 16: </i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes použitých demonstračních příkladů byly uloženy do
Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/robot-framework-examples">https://github.com/tisnik/robot-framework-examples</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář, můžete namísto toho použít odkazy na jednotlivé příklady, které
naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>17</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>18</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>19</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
<tr><td>20</td><td></td><td></td><td><a href="https://github.com/tisnik/robot-framework-examples/blob/master/article_01/">https://github.com/tisnik/robot-framework-examples/blob/master/article_01/</a></td></tr>
</table>




<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Stránka projektu Robot Framework<br />
<a href="https://robotframework.org/">https://robotframework.org/</a>
</li>

<li>GitHub repositář Robot Frameworku<br />
<a href="https://github.com/robotframework/robotframework">https://github.com/robotframework/robotframework</a>
</li>

<li>Robot Framework (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Robot_Framework">https://en.wikipedia.org/wiki/Robot_Framework</a>
</li>

<li>Tutoriál Robot Frameworku<br />
<a href="http://www.robotframeworktutorial.com/">http://www.robotframeworktutorial.com/</a>
</li>

<li>Robot Framework Documentation<br />
<a href="https://robotframework.org/robotframework/">https://robotframework.org/robotframework/</a>
</li>

<li>Robot Framework Introduction<br />
<a href="https://blog.testproject.io/2016/11/22/robot-framework-introduction/">https://blog.testproject.io/2016/11/22/robot-framework-introduction/</a>
</li>

<li>robotframework 3.1.2 na PyPi<br />
<a href="https://pypi.org/project/robotframework/">https://pypi.org/project/robotframework/</a>
</li>

<li>A quick guide about Python implementations<br />
<a href="https://blog.rmotr.com/a-quick-guide-about-python-implementations-aa224109f321">https://blog.rmotr.com/a-quick-guide-about-python-implementations-aa224109f321</a>
</li>

<li>Python 2.7 will retire in...<br />
<a href="https://pythonclock.org/">https://pythonclock.org/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

