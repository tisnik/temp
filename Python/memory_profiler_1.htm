<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Balíček <i>Pympler</i></a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. Balíček <i>memory_profiler</i></a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<pre>
from sys import getsizeof

help(getsizeof)
</pre>

<pre>
from sys import getsizeof


def print_sizeof(value):
    typename = "{:8}".format(type(value).__name__)
    print(getsizeof(value), "\t", typename, "\t", value)


print_sizeof(0)
print_sizeof(1)
print_sizeof(42)
print_sizeof(2<<30)
print_sizeof(2<<60)
print()

print_sizeof(1.0)
print_sizeof(3.1415)
print()

print_sizeof(True)
print_sizeof(False)
print_sizeof(None)
print()

print_sizeof("")
print_sizeof("f")
print_sizeof("fo")
print_sizeof("foo")
print_sizeof("foo bar")
print_sizeof("foo bar baz")
print_sizeof("foo bar baz xyz")
print_sizeof("foo bar baz xyzzy")
</pre>

<pre>
from sys import getsizeof


def print_sizeof(value):
    typename = "{:8}".format(type(value).__name__)
    print(getsizeof(value), "\t", typename, "\t", value)


print_sizeof(())
print_sizeof((1,))
print_sizeof((1, 2))
print_sizeof((1, 2, 3))
print_sizeof((1, 2, 3, 4))
print()

print_sizeof([])
print_sizeof([1])
print_sizeof([1, 2])
print_sizeof([1, 2, 3])
print_sizeof([1, 2, 3, 4])
print()

print_sizeof({})
print_sizeof({1:1})
print_sizeof({1:1, 2:2})
print_sizeof({1:1, 2:2, 3:3})
print_sizeof({1:1, 2:2, 3:3, 4:4})
</pre>

<pre>
from sys import getsizeof


def print_sizeof(value):
    typename = "{:8}".format(type(value).__name__)
    print(getsizeof(value), "\t", typename, "\t", value)


def foo():
    pass


def bar(x, y):
    return x+y


def baz(x=0, y=1):
    print(x)
    print(y)
    return x+y


print_sizeof(print)
print_sizeof(foo)
print_sizeof(bar)
print_sizeof(baz)
</pre>

<pre>
from sys import getsizeof


def print_sizeof(value):
    typename = "{:8}".format(type(value).__name__)
    print(getsizeof(value), "\t", typename, "\t", value)


class C1:
    pass


class C2:
    def __init__(self):
        pass

class C3:
    def __init__(self):
        pass

    def foo(self, x):
        self.x=x

    def bar(self, y):
        self.y=y


o1 = C1()
o2 = C2()
o3 = C3()

print_sizeof(C1)
print_sizeof(o1)

print_sizeof(C2)
print_sizeof(o2)

print_sizeof(C3)
print_sizeof(o3)

o3.foo(42)

print_sizeof(C3)
print_sizeof(o3)

o3.bar(0)

print_sizeof(C3)
print_sizeof(o3)
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Balíček <i>Pympler</i></h2>

<pre>
$ <strong>pip3 install --user pympler</strong>
</pre>

<pre>
Collecting pympler
  Downloading Pympler-1.0.1-py3-none-any.whl (164 kB)
     |████████████████████████████████| 164 kB 1.5 MB/s 
Installing collected packages: pympler
Successfully installed pympler-1.0.1
</pre>

<pre>
>>> from pympler import asizeof
</pre>

<pre>
>>> help(asizeof)
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>


<pre>
/* Long integer representation.
   The absolute value of a number is equal to
        SUM(for i=0 through abs(ob_size)-1) ob_digit[i] * 2**(SHIFT*i)
   Negative numbers are represented with ob_size &lt; 0;
   zero is represented by ob_size == 0.
   In a normalized number, ob_digit[abs(ob_size)-1] (the most significant
   digit) is never zero.  Also, in all cases, for all valid i,
        0 &lt;= ob_digit[i] &lt;= MASK.
   The allocation function takes care of allocating extra memory
   so that ob_digit[0] ... ob_digit[abs(ob_size)-1] are actually available.
   We always allocate memory for at least one digit, so accessing ob_digit[0]
   is always safe. However, in the case ob_size == 0, the contents of
   ob_digit[0] may be undefined.
   CAUTION:  Generic code manipulating subtypes of PyVarObject has to
   aware that ints abuse  ob_size's sign bit.
*/
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Balíček <i>memory_profiler</i></h2>

<pre>
$ <strong>pip3 install --user guppy3</strong>
</pre>

<pre>
Collecting guppy3
  Downloading guppy3-3.1.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (649 kB)
     |████████████████████████████████| 649 kB 1.6 MB/s 
Installing collected packages: guppy3
Successfully installed guppy3-3.1.2
</pre>

<pre>
$ <strong>pip3 install --user memory_profiler</strong>
</pre>

<pre>
Collecting memory_profiler
  Downloading memory_profiler-0.61.0-py3-none-any.whl (31 kB)
Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from memory_profiler) (5.5.1)
Installing collected packages: memory-profiler
Successfully installed memory-profiler-0.61.0
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

>>> h.doc
Top level interface to Heapy. Available attributes:
Anything            Prod                Via                 iso
Clodo               Rcs                 doc                 load
Id                  Root                findex              monitor
Idset               Size                heap                pb
Module              Type                heapu               setref
Nothing             Unity               idset               test
Use eg: h.doc.<attribute> for info on <attribute>.


Help on function hpy in module guppy:

hpy(ht=None)
    Main entry point to the Heapy system.
    Returns an object that provides a session context and will import
    required modules on demand. Some commononly used methods are:

    .heap()                 get a view of the current reachable heap
    .iso(obj..)     get information about specific objects

    The optional argument, useful for debugging heapy itself, is:

        ht     an alternative hiding tag

Help on method heap in module guppy.heapy.Use:

heap() method of guppy.heapy.Use._GLUECLAMP_ instance
    heap() -> IdentitySet[1]

    Traverse the heap from a root to find all reachable and visible
    objects. The objects that belong to a heapy instance are normally not
    included. Return an IdentitySet with the objects found, which is
    presented as a table partitioned according to a default equivalence
    relation (Clodo [3]).

    See also: setref[2]

    References
        [0] heapy_Use.html#heapykinds.Use.heap
        [1] heapy_UniSet.html#heapykinds.IdentitySet
        [2] heapy_Use.html#heapykinds.Use.setref
        [3] heapy_Use.html#heapykinds.Use.Clodo


<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

heapu(rma=1, abs=0, stat=1) method of guppy.heapy.Use._GLUECLAMP_ instance
    heapu() -> Stat

    Finds the objects in the heap that remain after garbage collection but
    are _not_ reachable from the root.  This can be used to find objects
    in extension modules that remain in memory even though they are
    gc-collectable and not reachable.

    Returns an object containing a statistical summary of the objects
    found - not the objects themselves. This is to avoid making the
    objects reachable.

    See also: setref[1]

    References
        [0] heapy_Use.html#heapykinds.Use.heapu
        [1] heapy_Use.html#heapykinds.Use.setref


<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

>>> h.heap()[0]
Partition of a set of 34181 objects. Total size = 3177461 bytes.
 Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)
     0  34181 100  3177461 100   3177461 100 str


>>> h.heap()[0].byid
Set of 34202 <str> objects. Total size = 3179683 bytes.
 Index     Size   %   Cumulative  %   Representation (limited)
     0     7423   0.2      7423   0.2 'The class Bi... copy of S.\n'
     1     6512   0.2     13935   0.4 '\nThe ``code...hentication``'
     2     6327   0.2     20262   0.6 'Configuratio... by spaces.\n'
     3     6150   0.2     26412   0.8 "Support for ... 'error'.\n\n"
     4     5573   0.2     31985   1.0 'Controls for...ger`.\n\n    '
     5     4791   0.2     36776   1.2 'Heap queues\...at Art! :-)\n'
     6     4791   0.2     41567   1.3 'Heap queues\...at Art! :-)\n'
     7     4708   0.1     46275   1.5 ' Retry confi...equest.\n    '
     8     4252   0.1     50527   1.6 'Serialize ``...ible.\n\n    '
     9     4114   0.1     54641   1.7 '\n        Ge...ib`\n        '

>>> x="*"*10000
>>> h.heap()[0].byid
Set of 34204 <str> objects. Total size = 3189794 bytes.
 Index     Size   %   Cumulative  %   Representation (limited)
     0    10049   0.3     10049   0.3 '************...*************'
     1     7423   0.2     17472   0.5 'The class Bi... copy of S.\n'
     2     6512   0.2     23984   0.8 '\nThe ``code...hentication``'
     3     6327   0.2     30311   1.0 'Configuratio... by spaces.\n'
     4     6150   0.2     36461   1.1 "Support for ... 'error'.\n\n"
     5     5573   0.2     42034   1.3 'Controls for...ger`.\n\n    '
     6     4791   0.2     46825   1.5 'Heap queues\...at Art! :-)\n'
     7     4791   0.2     51616   1.6 'Heap queues\...at Art! :-)\n'
     8     4708   0.1     56324   1.8 ' Retry confi...equest.\n    '
     9     4252   0.1     60576   1.9 'Serialize ``...ible.\n\n    '
<34194 more rows. Type e.g. '_.more' to view.>

>>> x=None
>>> h.heap()[0].byid
Set of 34203 <str> objects. Total size = 3179745 bytes.
 Index     Size   %   Cumulative  %   Representation (limited)
     0     7423   0.2      7423   0.2 'The class Bi... copy of S.\n'
     1     6512   0.2     13935   0.4 '\nThe ``code...hentication``'
     2     6327   0.2     20262   0.6 'Configuratio... by spaces.\n'
     3     6150   0.2     26412   0.8 "Support for ... 'error'.\n\n"
     4     5573   0.2     31985   1.0 'Controls for...ger`.\n\n    '
     5     4791   0.2     36776   1.2 'Heap queues\...at Art! :-)\n'
     6     4791   0.2     41567   1.3 'Heap queues\...at Art! :-)\n'
     7     4708   0.1     46275   1.5 ' Retry confi...equest.\n    '
     8     4252   0.1     50527   1.6 'Serialize ``...ible.\n\n    '
     9     4114   0.1     54641   1.7 '\n        Ge...ib`\n        '
<34193 more rows. Type e.g. '_.more' to view.>


<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>getsizeof1.py</td><td>získání nápovědy k&nbsp;funkci <strong>getsizeof</strong> z&nbsp;balíčku <strong>sys</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof1.py</a></td></tr>
<tr><td> 2</td><td>getsizeof2.py</td><td>získání a tisk velikostí vybraných skalárních hodnot Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof2.py</a></td></tr>
<tr><td> 3</td><td>getsizeof3.py</td><td>získání a tisk velikosti kontejnerů Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof3.py</a></td></tr>
<tr><td> 4</td><td>getsizeof4.py</td><td>získání a tisk velikosti funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof4.py</a></td></tr>
<tr><td> 5</td><td>getsizeof5.py</td><td>získání a tisk velikosti tříd a objektů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/getsizeof5.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
<tr><td>17</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/">https://github.com/tisnik/most-popular-python-libs/blob/master/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Top 5 Python Memory Profilers<br />
<a href="https://stackify.com/top-5-python-memory-profilers/">https://stackify.com/top-5-python-memory-profilers/</a>
</li>

<li>Pympler na GitHubu<br />
<a href="https://github.com/pympler/pympler">https://github.com/pympler/pympler</a>
</li>

<li>Pympler na PyPI<br />
<a href="https://pypi.org/project/Pympler/">https://pypi.org/project/Pympler/</a>
</li>

<li>Dokumentace k&nbsp;balíčku Pympler<br />
<a href="https://pympler.readthedocs.io/en/latest/">https://pympler.readthedocs.io/en/latest/</a>
</li>

<li>Guppy 3 na GitHubu<br />
<a href="https://github.com/zhuyifei1999/guppy3/">https://github.com/zhuyifei1999/guppy3/</a>
</li>

<li>Guppy 3 na PyPI<br />
<a href="https://pypi.org/project/guppy3/">https://pypi.org/project/guppy3/</a>
</li>

<li>Memory Profiler na GitHubu<br />
<a href="https://github.com/pythonprofilers/memory_profiler">https://github.com/pythonprofilers/memory_profiler</a>
</li>

<li>Memory Profiler na PyPI<br />
<a href="https://pypi.org/project/memory-profiler/">https://pypi.org/project/memory-profiler/</a>
</li>

<li>How to use guppy/heapy for tracking down memory usage<br />
<a href="https://smira.ru/wp-content/uploads/2011/08/heapy.html">https://smira.ru/wp-content/uploads/2011/08/heapy.html</a>
</li>

<li>Identifying memory leaks<br />
<a href="https://pympler.readthedocs.io/en/latest/muppy.html#muppy">https://pympler.readthedocs.io/en/latest/muppy.html#muppy</a>
</li>

<li>How do I determine the size of an object in Python?<br />
<a href="https://stackoverflow.com/questions/449560/how-do-i-determine-the-size-of-an-object-in-python">https://stackoverflow.com/questions/449560/how-do-i-determine-the-size-of-an-object-in-python</a>
</li>

<li>Why is bool a subclass of int?<br />
<a href="https://stackoverflow.com/questions/8169001/why-is-bool-a-subclass-of-int">https://stackoverflow.com/questions/8169001/why-is-bool-a-subclass-of-int</a>
</li>

<li>Memory Management in Python<br />
<a href="https://realpython.com/python-memory-management/">https://realpython.com/python-memory-management/</a>
</li>

<li>Why do ints require three times as much memory in Python?<br />
<a href="https://stackoverflow.com/questions/23016610/why-do-ints-require-three-times-as-much-memory-in-python">https://stackoverflow.com/questions/23016610/why-do-ints-require-three-times-as-much-memory-in-python</a>
</li>

<li>cpython/Include/cpython/longintrepr.h<br />
<a href="https://github.com/python/cpython/blob/main/Include/cpython/longintrepr.h#L64">https://github.com/python/cpython/blob/main/Include/cpython/longintrepr.h#L64</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

