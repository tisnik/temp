<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. Zobrazení tabulek naformátovaných předchozím demonstračním příkladem</a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">*** 19. Odkazy na předchozí části seriálu o knihovně Pandas</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<pre>
Year    Winner
2019    C
2018    Python
2017    C
2016    Go
2015    Java
2014    JavaScript
2013    Transact-SQL
2012    Objective-C
2011    Objective-C
2010    Python
2009    Go
2008    C
2007    Python
2006    Ruby
2005    Java
2004    PHP
2003    C++
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
print(df.info())
</pre>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 17 entries, 2019 to 2003
Data columns (total 1 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   Winner  17 non-null     object
dtypes: object(1)
memory usage: 272.0+ bytes
None
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++

              Winner
Winner              
C                  3
C++                1
Go                 2
Java               2
JavaScript         1
Objective-C        2
PHP                1
Python             3
Ruby               1
Transact-SQL       1
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># pokusíme se o seřazení hodnot podle jediného sloupce</i>
result.sort_values(by=["Winner"], inplace=True)
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++

Traceback (most recent call last):
  File "data_frame_group_by_03_try_to_sort.py", line 23, in <module>
    result.sort_values(by=["Winner"], inplace=True)
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/frame.py", line 5298, in sort_values
    k = self._get_label_or_level_values(by, axis=axis)
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/generic.py", line 1558, in _get_label_or_level_values
    self._check_label_or_level_ambiguity(key, axis=axis)
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/generic.py", line 1518, in _check_label_or_level_ambiguity
    raise ValueError(msg)
ValueError: 'Winner' is both an index level and a column label, which is ambiguous.
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True)
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++

              Language
Winner                
C++                  1
JavaScript           1
PHP                  1
Ruby                 1
Transact-SQL         1
Go                   2
Java                 2
Objective-C          2
C                    3
Python               3
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků v opačném pořadí (od nejlepšího)</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++

              Language
Winner                
C                    3
Python               3
Go                   2
Java                 2
Objective-C          2
C++                  1
JavaScript           1
PHP                  1
Ruby                 1
Transact-SQL         1
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df.to_markdown())
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(result.to_markdown())
</pre>

<pre>
|   Year | Winner       |
|-------:|:-------------|
|   2019 | C            |
|   2018 | Python       |
|   2017 | C            |
|   2016 | Go           |
|   2015 | Java         |
|   2014 | JavaScript   |
|   2013 | Transact-SQL |
|   2012 | Objective-C  |
|   2011 | Objective-C  |
|   2010 | Python       |
|   2009 | Go           |
|   2008 | C            |
|   2007 | Python       |
|   2006 | Ruby         |
|   2005 | Java         |
|   2004 | PHP          |
|   2003 | C++          |
&nbsp;
| Winner       |   Language |
|:-------------|-----------:|
| C            |          3 |
| Python       |          3 |
| Go           |          2 |
| Java         |          2 |
| Objective-C  |          2 |
| C++          |          1 |
| JavaScript   |          1 |
| PHP          |          1 |
| Ruby         |          1 |
| Transact-SQL |          1 |
</pre>

<pre>
Traceback (most recent call last):
  File "data_frame_to_markdown.py", line 13, in <module>
    print(df.to_markdown())
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/frame.py", line 2261, in to_markdown
    tabulate = import_optional_dependency("tabulate")
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/compat/_optional.py", line 110, in import_optional_dependency
    raise ImportError(msg) from None
ImportError: Missing optional dependency 'tabulate'.  Use pip or conda to install tabulate.
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
$ <strong>pip3 install --user tabulate</strong>
&nbsp;
Collecting tabulate
  Downloading https://files.pythonhosted.org/packages/c4/f4/770ae9385990f5a19a91431163d262182d3203662ea2b5739d0fcfc080f1/tabulate-0.8.7-py3-none-any.whl
Installing collected packages: tabulate
Successfully installed tabulate-0.8.7
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(tabulate(df, headers="keys"))
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(tabulate(result, headers="keys"))
</pre>

<pre>
  Year  Winner
------  ------------
  2019  C
  2018  Python
  2017  C
  2016  Go
  2015  Java
  2014  JavaScript
  2013  Transact-SQL
  2012  Objective-C
  2011  Objective-C
  2010  Python
  2009  Go
  2008  C
  2007  Python
  2006  Ruby
  2005  Java
  2004  PHP
  2003  C++
&nbsp;
Winner          Language
------------  ----------
C                      3
Python                 3
Go                     2
Java                   2
Objective-C            2
C++                    1
JavaScript             1
PHP                    1
Ruby                   1
Transact-SQL           1
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(tabulate(df, headers="keys", tablefmt="pretty"))
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(tabulate(result, headers="keys", tablefmt="pretty"))
</pre>

<pre>
+------+--------------+
| Year |    Winner    |
+------+--------------+
| 2019 |      C       |
| 2018 |    Python    |
| 2017 |      C       |
| 2016 |      Go      |
| 2015 |     Java     |
| 2014 |  JavaScript  |
| 2013 | Transact-SQL |
| 2012 | Objective-C  |
| 2011 | Objective-C  |
| 2010 |    Python    |
| 2009 |      Go      |
| 2008 |      C       |
| 2007 |    Python    |
| 2006 |     Ruby     |
| 2005 |     Java     |
| 2004 |     PHP      |
| 2003 |     C++      |
+------+--------------+

+--------------+----------+
|    Winner    | Language |
+--------------+----------+
|      C       |    3     |
|    Python    |    3     |
|      Go      |    2     |
|     Java     |    2     |
| Objective-C  |    2     |
|     C++      |    1     |
|  JavaScript  |    1     |
|     PHP      |    1     |
|     Ruby     |    1     |
| Transact-SQL |    1     |
+--------------+----------+
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(tabulate(df, headers="keys", tablefmt="psql"))
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(tabulate(result, headers="keys", tablefmt="psql"))
</pre>

<pre>
+--------+--------------+
|   Year | Winner       |
|--------+--------------|
|   2019 | C            |
|   2018 | Python       |
|   2017 | C            |
|   2016 | Go           |
|   2015 | Java         |
|   2014 | JavaScript   |
|   2013 | Transact-SQL |
|   2012 | Objective-C  |
|   2011 | Objective-C  |
|   2010 | Python       |
|   2009 | Go           |
|   2008 | C            |
|   2007 | Python       |
|   2006 | Ruby         |
|   2005 | Java         |
|   2004 | PHP          |
|   2003 | C++          |
+--------+--------------+
&nbsp;
+--------------+------------+
| Winner       |   Language |
|--------------+------------|
| C            |          3 |
| Python       |          3 |
| Go           |          2 |
| Java         |          2 |
| Objective-C  |          2 |
| C++          |          1 |
| JavaScript   |          1 |
| PHP          |          1 |
| Ruby         |          1 |
| Transact-SQL |          1 |
+--------------+------------+
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<table>
<tr><th>Výstupní formát</th></tr>
<tr><td>plain</td></tr>
<tr><td>simple</td></tr>
<tr><td>github</td></tr>
<tr><td>grid</td></tr>
<tr><td>fancy_grid</td></tr>
<tr><td>pipe</td></tr>
<tr><td>orgtbl</td></tr>
<tr><td>jira</td></tr>
<tr><td>presto</td></tr>
<tr><td>pretty</td></tr>
<tr><td>psql</td></tr>
<tr><td>rst</td></tr>
<tr><td>mediawiki</td></tr>
<tr><td>moinmoin</td></tr>
<tr><td>youtrack</td></tr>
<tr><td>html</td></tr>
<tr><td>latex</td></tr>
<tr><td>latex_raw</td></tr>
<tr><td>latex_booktabs</td></tr>
<tr><td>textile</td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># jména stylů</i>
table_styles = (
        "plain",
        "simple",
        "github",
        "grid",
        "fancy_grid",
        "pipe",
        "orgtbl",
        "jira",
        "presto",
        "pretty",
        "psql",
        "rst",
        "mediawiki",
        "moinmoin",
        "youtrack",
        "html",
        "latex",
        "latex_raw",
        "latex_booktabs",
        "textile"
        )
&nbsp;
for table_style in table_styles:
    <i># oddělovač</i>
    print()
    print("*" * 40)
    print("* {:^36s} *".format(table_style))
    print("*" * 40)
    print()
    <i># datový rámec zobrazíme s vybraným stylem</i>
    print(tabulate(df, headers="keys", tablefmt=table_style))
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Zobrazení tabulek naformátovaných předchozím demonstračním příkladem</h2>

<pre>
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 a nejnovější stabilní verzi knihovny Pandas byly uloženy do Git
repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th>  #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td>  1</td><td>data_frame_info_1.py</td><td>výpis obsahu datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py</a></td></tr>
<tr><td>  2</td><td>data_frame_info_2.py</td><td>výpis prvních pěti řádků z&nbsp;datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py</a></td></tr>
<tr><td>  3</td><td>data_frame_info_3.py</td><td>výpis informace o typech sloupců v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py</a></td></tr>
<tr><td>  4</td><td>data_frame_info_4.py</td><td>výpis uspořádaného seznamu jmen všech sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py</a></td></tr>
<tr><td>  5</td><td>data_frame_info_5.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py</a></td></tr>
<tr><td>  6</td><td>data_frame_info_6.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py</a></td></tr>
<tr><td>  7</td><td>data_frame_info_7.py</td><td>popis os, počtu dimenzí, tvaru a velikosti datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py</a></td></tr>
<tr><td>  8</td><td>data_frame_info_8.py</td><td>základní statistické informace o datech uložených v&nbsp;rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py</a></td></tr>
<tr><td>  9</td><td>data_frame_info_9.py</td><td>výsledkem metody <strong>info</strong> je nový datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 10</td><td>plot_kafka_lags.py</td><td>zobrazení jednoduchého grafu bez použití knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py</a></td></tr>
<tr><td> 11</td><td>plot_kafka_lags_pandas.py</td><td>zobrazení jednoduchého grafu s&nbsp;použitím knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py</a></td></tr>
<tr><td> 12</td><td>plot_kafka_lags_pandas_2.py</td><td>snazší způsob vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py</a></td></tr>
<tr><td> 13</td><td>plot_kafka_lags_pandas_sma_3.py</td><td>přidání klouzavého průměru do grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py</a></td></tr>
<tr><td> 14</td><td>plot_kafka_lags_pandas_sma_3_.py</td><td>vylepšení předchozího příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py</a></td></tr>
<tr><td> 15</td><td>plot_kafka_lags_pandas_sma_10.py</td><td>klouzavý průměr přes deset hodnot</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py</a></td></tr>
<tr><td> 16</td><td>plot_benchmark_results_line_chart.py</td><td>liniový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py</a></td></tr>
<tr><td> 17</td><td>plot_benchmark_results_bar_chart_1.py</td><td>sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py</a></td></tr>
<tr><td> 18</td><td>plot_benchmark_results_bar_chart_2.py</td><td>výběr části datového rámce při vykreslování grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py</a></td></tr>
<tr><td> 19</td><td>plot_benchmark_results_bar_chart_3.py</td><td>zobecnění předchozího příkladu &ndash; zpracování numerických dat ve všech sloupcích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 20</td><td>check_types_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
</table>

<p>Některé demonstrační příklady načítají následující soubory s&nbsp;daty:</p>

<table>
<tr><th> #</th><th>Datový soubor</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv</a></td></tr>
<tr><td> 2</td><td>missing_integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly, z&nbsp;nichž některé chybí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv</a></td></tr>
<tr><td> 3</td><td>timestamps.csv</td><td>tabulka s&nbsp;časovými údaji</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv</a></td></tr>
<tr><td> 4</td><td>custom_timestamps.csv</td><td>tabulka s&nbsp;časovými údaji používajícími nestandardní formát</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv</a></td></tr>
<tr><td> 5</td><td>denni_kurz.txt</td><td>semistrukturovaný soubor s&nbsp;nestandardními oddělovači</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt</a></td></tr>
<tr><td> 6</td><td>tiobe.tsv</td><td>data získaná ze stránek Tiobe indexu ve formátu TSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv</a></td></tr>
<tr><td> 7</td><td>tiobe.txt</td><td>data získaná ze stránek Tiobe indexu v&nbsp;textovém formátu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt</a></td></tr>
<tr><td> 8</td><td>benchmarks1.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv</a></td></tr>
<tr><td> 9</td><td>benchmarks2.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>tiobeA.tsv</td><td>tabulka z&nbsp;tiobe.tsv, ovšem pět řádků bylo odstraněno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv</a></td></tr>
<tr><td>11</td><td>tiobeB.tsv</td><td>tabulka z&nbsp;tiobe.tsv, ovšem pět (jiných) řádků bylo odstraněno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv</a></td></tr>
<tr><td>12</td><td>tiobeC.tsv</td><td>prvních deset řádků z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv</a></td></tr>
<tr><td>13</td><td>tiobeD.tsv</td><td>posledních deset řádků z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv</a></td></tr>
<tr><td>14</td><td>tiobeE.tsv</td><td>tři sloupce z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv</a></td></tr>
<tr><td>15</td><td>tiobeF.tsv</td><td>čtyři sloupce z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>hall_of_fame.tsv</td><td>vítězné jazyky za období 2003-2019</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/hall_of_fame.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/hall_of_fame.tsv</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na předchozí části seriálu o knihovně Pandas</h2>

<ol>
</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Combining Data in Pandas With merge(), .join(), and concat()<br />
<a href="https://realpython.com/pandas-merge-join-and-concat/">https://realpython.com/pandas-merge-join-and-concat/</a>
</li>

<li>JOIN<br />
<a href="https://cs.wikipedia.org/wiki/JOIN">https://cs.wikipedia.org/wiki/JOIN</a>
</li>

<li>Plotting with matplotlib<br />
<a href="https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html">https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html</a>
</li>

<li>Plot With Pandas: Python Data Visualization for Beginners<br />
<a href="https://realpython.com/pandas-plot-python/">https://realpython.com/pandas-plot-python/</a>
</li>

<li>Pandas Dataframe: Plot Examples with Matplotlib and Pyplot<br />
<a href="https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot">https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot</a>
</li>

<li>Opulent-Pandas na PyPi<br />
<a href="https://pypi.org/project/opulent-pandas/">https://pypi.org/project/opulent-pandas/</a>
</li>

<li>pandas_validator na PyPi<br />
<a href="https://pypi.org/project/pandas_validator/">https://pypi.org/project/pandas_validator/</a>
</li>

<li>pandas-validator (dokumentace)<br />
<a href="https://pandas-validator.readthedocs.io/en/latest/">https://pandas-validator.readthedocs.io/en/latest/</a>
</li>

<li>7 Best Python Libraries for Validating Data<br />
<a href="https://www.yeahhub.com/7-best-python-libraries-validating-data/">https://www.yeahhub.com/7-best-python-libraries-validating-data/</a>
</li>

<li>Universally unique identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">https://en.wikipedia.org/wiki/Universally_unique_identifier</a>
</li>

<li>Nullable integer data type<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html">https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html</a>
</li>

<li>pandas.read_csv<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html</a>
</li>

<li>How to define format when using pandas to_datetime?<br />
<a href="https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime">https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime</a>
</li>

<li>Pandas : skip rows while reading csv file to a Dataframe using read_csv() in Python<br />
<a href="https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/">https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/</a>
</li>

<li>Skip rows during csv import pandas<br />
<a href="https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas">https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas</a>
</li>

<li>Denni kurz<br />
<a href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>
</li>

<li>UUID objects according to RFC 4122 (knihovna pro Python)<br />
<a href="https://docs.python.org/3.5/library/uuid.html#uuid.uuid4">https://docs.python.org/3.5/library/uuid.html#uuid.uuid4</a>
</li>

<li>Object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Object_identifier">https://en.wikipedia.org/wiki/Object_identifier</a>
</li>

<li>Digital object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Digital_object_identifier">https://en.wikipedia.org/wiki/Digital_object_identifier</a>
</li>

<li>voluptuous na (na PyPi)<br />
<a href="https://pypi.python.org/pypi/voluptuous">https://pypi.python.org/pypi/voluptuous</a>
</li>

<li>Repositář knihovny voluptuous na GitHubu<br />
<a href="https://github.com/alecthomas/voluptuous">https://github.com/alecthomas/voluptuous</a>
</li>

<li>pytest-voluptuous 1.0.2 (na PyPi)<br />
<a href="https://pypi.org/project/pytest-voluptuous/">https://pypi.org/project/pytest-voluptuous/</a>
</li>

<li>pytest-voluptuous (na GitHubu)<br />
<a href="https://github.com/F-Secure/pytest-voluptuous">https://github.com/F-Secure/pytest-voluptuous</a>
</li>

<li>schemagic 0.9.1 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schemagic/0.9.1">https://pypi.python.org/pypi/schemagic/0.9.1</a>
</li>

<li>Schemagic / Schemagic.web (na GitHubu)<br />
<a href="https://github.com/Mechrophile/schemagic">https://github.com/Mechrophile/schemagic</a>
</li>

<li>schema 0.6.7 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schema">https://pypi.python.org/pypi/schema</a>
</li>

<li>schema (na GitHubu)<br />
<a href="https://github.com/keleshev/schema">https://github.com/keleshev/schema</a>
</li>

<li>XML Schema validator and data conversion library for Python<br />
<a href="https://github.com/brunato/xmlschema">https://github.com/brunato/xmlschema</a>
</li>

<li>xmlschema 0.9.7<br />
<a href="https://pypi.python.org/pypi/xmlschema/0.9.7">https://pypi.python.org/pypi/xmlschema/0.9.7</a>
</li>

<li>jsonschema 2.6.0<br />
<a href="https://pypi.python.org/pypi/jsonschema">https://pypi.python.org/pypi/jsonschema</a>
</li>

<li>warlock 1.3.0<br />
<a href="https://pypi.python.org/pypi/warlock">https://pypi.python.org/pypi/warlock</a>
</li>

<li>Python Virtual Environments – A Primer<br />
<a href="https://realpython.com/python-virtual-environments-a-primer/">https://realpython.com/python-virtual-environments-a-primer/</a>
</li>

<li>pip 1.1 documentation: Requirements files<br />
<a href="https://pip.readthedocs.io/en/1.1/requirements.html">https://pip.readthedocs.io/en/1.1/requirements.html</a>
</li>

<li>unittest.mock — mock object library<br />
<a href="https://docs.python.org/3.5/library/unittest.mock.html">https://docs.python.org/3.5/library/unittest.mock.html</a>
</li>

<li>mock 2.0.0<br />
<a href="https://pypi.python.org/pypi/mock">https://pypi.python.org/pypi/mock</a>
</li>

<li>An Introduction to Mocking in Python<br />
<a href="https://www.toptal.com/python/an-introduction-to-mocking-in-python">https://www.toptal.com/python/an-introduction-to-mocking-in-python</a>
</li>

<li>Unit testing (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Unit_testing">https://en.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Unit testing<br />
<a href="https://cs.wikipedia.org/wiki/Unit_testing">https://cs.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Test-driven development (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Test-driven_development">https://en.wikipedia.org/wiki/Test-driven_development</a>
</li>

<li>Pip (dokumentace)<br />
<a href="https://pip.pypa.io/en/stable/">https://pip.pypa.io/en/stable/</a>
</li>

<li>5 Differences between clojure.spec and Schema<br />
<a href="https://lispcast.com/clojure.spec-vs-schema/">https://lispcast.com/clojure.spec-vs-schema/</a>
</li>

<li>Schema: Clojure(Script) library for declarative data description and validation<br />
<a href="https://github.com/plumatic/schema">https://github.com/plumatic/schema</a>
</li>

<li>clojure.spec - Rationale and Overview<br />
<a href="https://clojure.org/about/spec">https://clojure.org/about/spec</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

