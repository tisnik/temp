<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovna Pandas: použití metody groupby, naformátování a export tabulek pro tisk</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovna Pandas: použití metody groupby, naformátování a export tabulek pro tisk</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Šestá část seriálu o knihovně Pandas je rozdělena na dvě části. V úvodní části si ukážeme některé způsoby použití metody groupby, jež je velmi často používána při analýze dat. V části druhé se seznámíme s přípravou datových rámců pro tisk či zobrazení na terminálu.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Zpracování a agregace údajů s&nbsp;využitím metody <strong>groupby</strong></a></p>
<p><a href="#k02">2. Načtení datového souboru</a></p>
<p><a href="#k03">3. Rozdělení záznamů metodou <strong>groupby</strong> s&nbsp;agregací výsledků</a></p>
<p><a href="#k04">4. Pokus o seřazení jazyků podle celkového počtu vítězství</a></p>
<p><a href="#k05">5. Přejmenování vybraného sloupce či sloupců v&nbsp;agregovaném datovém rámci</a></p>
<p><a href="#k06">6. Seřazení jazyků sestupně</a></p>
<p><a href="#k07">7. Další možnosti nabízené operací <strong>groupby</strong></a></p>
<p><a href="#k08">8. Naformátování tabulky před jejím zobrazením na terminálu</a></p>
<p><a href="#k09">9. Knihovna <strong>tabulate</strong></a></p>
<p><a href="#k10">10. Zobrazení tabulky naformátované knihovnou <strong>tabulate</strong></a></p>
<p><a href="#k11">11. Zobrazení naformátované tabulky s&nbsp;využitím formátu &bdquo;pretty&ldquo;</a></p>
<p><a href="#k12">12. Naformátování tabulky napodobující <strong>psql</strong></a></p>
<p><a href="#k13">13. Styly (formáty) zobrazení tabulek nabízené knihovnou <strong>tabulate</strong></a></p>
<p><a href="#k14">14. Využití všech stylů nabízených knihovnou <strong>tabulate</strong></a></p>
<p><a href="#k15">15. Zobrazení tabulek naformátovaných předchozím demonstračním příkladem</a></p>
<p><a href="#k16">16. Alternativní způsob získání jmen všech formátů</a></p>
<p><a href="#k17">17. Obsah následujícího článku</a></p>
<p><a href="#k18">18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Odkazy na předchozí části seriálu o knihovně Pandas</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Zpracování a agregace údajů s&nbsp;využitím metody <strong>groupby</strong></h2>

<p>V&nbsp;první polovině dnešního článku si popíšeme způsob zpracování a
agregace údajů v&nbsp;datových rámcích s&nbsp;využitím metody pojmenované
<strong>groupby</strong>. Jedná se o metodu, která umožňuje údaje
z&nbsp;datových rámců rozdělit do skupin s&nbsp;tím, že se údaje z&nbsp;každé
skupiny nějakým způsobem agregují; například se zjistí jejich počet, součet
hodnot ve vybraném sloupci atd. Současně si ukážeme i další užitečné metody,
například <strong>sort_values</strong>, <strong>rename</strong>,
<strong>count</strong> apod.</p>

<p>Zpracovávat přitom budeme <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/hall_of_fame.tsv">tabulku
obsahující vybrané vítězné programovací jazyky pro daný kalendářní rok</a>:</p>

<pre>
Year    Winner
2019    C
2018    Python
2017    C
2016    Go
2015    Java
2014    JavaScript
2013    Transact-SQL
2012    Objective-C
2011    Objective-C
2010    Python
2009    Go
2008    C
2007    Python
2006    Ruby
2005    Java
2004    PHP
2003    C++
</pre>

<p><div class="rs-tip-major">Poznámka: nyní je již možné datový soubor doplnit
i o vítěze z&nbsp;loňska &ndash; <a
href="https://www.tiobe.com/tiobe-index/">je jím opět programovací jazyk
Python</a>.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Načtení datového souboru</h2>

<p>Datový soubor s&nbsp;informacemi o vítězných programovacích jazycích používá
formát TSV (<i>Tab-Separated Values</i>). Z&nbsp;tohoto důvodu můžeme pro jeho
načtení a konverzi do datového rámce použít funkci <strong>read_csv</strong>
s&nbsp;explicitním nastavením oddělovače buněk, kterým je řídicí znak
&bdquo;\t&ldquo;. Následně určíme, který sloupec se má převést na index a obsah
datového rámce vytiskneme společně s&nbsp;podrobnějšími informacemi o tomto
rámci:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = <strong>pandas.read_csv("hall_of_fame.tsv", sep="\t")</strong>
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
print(df.info())
</pre>

<p>Tabulka s&nbsp;obsahem datového rámce vypadá takto:</p>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++
</pre>

<p>Podrobnější informace o datovém rámci:</p>

<pre>
&lt;class 'pandas.core.frame.DataFrame'&gt;
Int64Index: 17 entries, 2019 to 2003
Data columns (total 1 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   Winner  17 non-null     object
dtypes: object(1)
memory usage: 272.0+ bytes
None
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Rozdělení záznamů metodou <strong>groupby</strong> s&nbsp;agregací výsledků</h2>

<p>Metoda <strong>groupby</strong> nám umožňuje provést následující
operace:</p>

<ol>
<li>Rozdělení údajů v&nbsp;datovém rámci na základě podmínky</li>
<li>Aplikace funkce na výsledný datový blok</li>
<li>Kombinace či agregace výsledků</li>
</ol>

<p>Příkladem může být vytvoření nového datového rámce, který bude pro každý
programovací jazyk obsahovat počet let, v&nbsp;nichž tento jazyk zvítězil
(resp.&nbsp;kdy byl vybrán). Jazyky tedy rozdělíme podle jejich jména (sloupec
&bdquo;Winner&ldquo;):</p>

<pre>
<i># rozdělení do skupin</i>
gb = <strong>df.groupby(["Winner"])</strong>
</pre>

<p>Výsledkem bude nový datový blok (ale ne datový rámec), nad nímž můžeme
provádět další operace, zejména agregaci. Můžeme například zjistit, kolikrát se
každý jazyk ve své skupině vyskytuje. Vybereme tedy (jediný) sloupec
&bdquo;Winner&ldquo; a pro celou skupinu zavoláme metodu
<strong>count</strong>:</p>

<pre>
<i># agregace výsledků</i>
result = <strong>gb[["Winner"]].count()</strong>
</pre>

<p>Výsledek je ve formě datového rámce, který lze zobrazit či dále
zpracovat:</p>

<pre>
<i># zobrazení výsledků</i>
print(result)
</pre>

<p>Úplný zdrojový kód dnešního druhého demonstračního příkladu vypadá
následovně:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = <strong>df.groupby(["Winner"])</strong>
&nbsp;
<i># agregace výsledků</i>
result = <strong>gb[["Winner"]].count()</strong>
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++
&nbsp;
              Winner
Winner              
C                  3
C++                1
Go                 2
Java               2
JavaScript         1
Objective-C        2
PHP                1
Python             3
Ruby               1
Transact-SQL       1
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Pokus o seřazení jazyků podle celkového počtu vítězství</h2>

<p>V&nbsp;předchozím příkladu nebyly jazyky seřazeny podle počtu vítězství, ale
abecedně. Ovšem vzhledem k&nbsp;tomu, že výsledkem agregace je běžný datový
rámec, můžeme seřazení provést metodou <strong>sort_values</strong>, v&nbsp;níž
navíc určíme, že se má seřazení provést přímo v&nbsp;rámci daného datového
rámce (tedy nikoli tak, že se vrátí nový datový rámec, což je sice čistší
řešení, ovšem u větších paměťových rámců je časově i paměťově náročnější):</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># pokusíme se o seřazení hodnot podle jediného sloupce</i>
<strong>result.sort_values(by=["Winner"], inplace=True)</strong>
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<p>Výsledek ovšem nebude odpovídat očekávání:</p>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++
&nbsp;
Traceback (most recent call last):
  File "data_frame_group_by_03_try_to_sort.py", line 23, in &lt;module&gt;
    result.sort_values(by=["Winner"], inplace=True)
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/frame.py", line 5298, in sort_values
    k = self._get_label_or_level_values(by, axis=axis)
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/generic.py", line 1558, in _get_label_or_level_values
    self._check_label_or_level_ambiguity(key, axis=axis)
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/generic.py", line 1518, in _check_label_or_level_ambiguity
    raise ValueError(msg)
ValueError: 'Winner' is both an index level and a column label, which is ambiguous.
</pre>

<p><div class="rs-tip-major">Z&nbsp;chybového hlášení je zřejmé, jaký problém
nastal &ndash; (jediný) sloupec datového rámce se jmenuje stejně jako index,
což musíme napravit. O tom, proč může být index pojmenovaný, se zmíníme příště
při vysvětlování problematiky <i>multiindexů</i>.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Přejmenování vybraného sloupce či sloupců v&nbsp;agregovaném datovém rámci</h2>

<p>Nezávisle na tom, jak je pojmenovaný index (a zda se náhodou nejmenuje
stejně jako nějaký sloupec) můžeme provést přejmenování vybraného sloupce
metodou <strong>rename</strong>. U této metody lze rovněž specifikovat, zda má
být výsledkem nový datový rámec či zda se má modifikovat ten rámec, jehož
metoda se volá. Sloupec či sloupce, které se mají přejmenovat, se zapisují
formou slovníku, kde klíčem je původní jméno sloupce a hodnotou nové jméno:</p>

<pre>
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
</pre>

<p>Takto upravený demonstrační příklad by již měl být plně funkční:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
<strong>result.rename(columns={"Winner": "Language"}, inplace=True)</strong>
&nbsp;
<i># seřazení výsledků</i>
<strong>result.sort_values(by=["Language"], inplace=True)</strong>
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<p>Výsledek získaný po spuštění tohoto příkladu:</p>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++
</pre>

<p>Povšimněte si, že nyní jsou již jazyky seřazeny podle počtu vítězství:</p>

<pre>
              Language
Winner                
C++                  1
JavaScript           1
PHP                  1
Ruby                 1
Transact-SQL         1
Go                   2
Java                 2
Objective-C          2
C                    3
Python               3
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Seřazení jazyků sestupně</h2>

<p>Pochopitelně je možné jazyky seřadit i sestupně, což je praktičtější.
K&nbsp;tomuto účelu opět použijeme metodu <strong>sort_values</strong>, ovšem
navíc uvedeme i nepovinný parametr <strong>ascending</strong> nastavený na
hodnotu <strong>False</strong>:</p>

<pre>
<strong>result.sort_values(by=["Language"], inplace=True, ascending=False)</strong>
</pre>

<p>Úplný zdrojový kód takto upraveného demonstračního příkladu:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků v opačném pořadí (od nejlepšího)</i>
<strong>result.sort_values(by=["Language"], inplace=True, ascending=False)</strong>
&nbsp;
<i># zobrazení výsledků</i>
print(result)
</pre>

<p>Nyní již bude tabulka vítězů sestavena podle očekávání:</p>

<pre>
            Winner
Year              
2019             C
2018        Python
2017             C
2016            Go
2015          Java
2014    JavaScript
2013  Transact-SQL
2012   Objective-C
2011   Objective-C
2010        Python
2009            Go
2008             C
2007        Python
2006          Ruby
2005          Java
2004           PHP
2003           C++
&nbsp;
              Language
Winner                
C                    3
Python               3
Go                   2
Java                 2
Objective-C          2
C++                  1
JavaScript           1
PHP                  1
Ruby                 1
Transact-SQL         1
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Další možnosti nabízené operací <strong>groupby</strong></h2>

<p>Výsledná struktura vrácená operací <strong>groupby</strong> ve skutečnosti
umožňuje nad daty provádět i další operace, zejména jejich transformaci
popř.&nbsp;filtraci, což si ukážeme mj.&nbsp;i příště. Totéž platí i pro
rozdělení záznamů podle většího množství kritérií. Vytvořené skupiny je taktéž
možné zobrazit:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
import pprint
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># zobrazení skupin</i>
pprint.pprint(gb.groups)
</pre>

<p>Výsledek:</p>

<pre>
{'C': Int64Index([2019, 2017, 2008], dtype='int64', name='Year'),
 'C++': Int64Index([2003], dtype='int64', name='Year'),
 'Go': Int64Index([2016, 2009], dtype='int64', name='Year'),
 'Java': Int64Index([2015, 2005], dtype='int64', name='Year'),
 'JavaScript': Int64Index([2014], dtype='int64', name='Year'),
 'Objective-C': Int64Index([2012, 2011], dtype='int64', name='Year'),
 'PHP': Int64Index([2004], dtype='int64', name='Year'),
 'Python': Int64Index([2018, 2010, 2007], dtype='int64', name='Year'),
 'Ruby': Int64Index([2006], dtype='int64', name='Year'),
 'Transact-SQL': Int64Index([2013], dtype='int64', name='Year')}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Naformátování tabulky před jejím zobrazením na terminálu</h2>

<p>Komplikovanější tabulky je vhodné před jejich zobrazením na terminálu
naformátovat, popř.&nbsp;zvýraznit jejich okraje i okraje buněk. K&nbsp;tomu
lze použít například metodu <strong>to_markdown</strong>. Pro export do dalších
formátů pak slouží metody <strong>to_html</strong>, <strong>to_json</strong>,
<strong>to_latex</strong> a <strong>to_csv</strong>. Ukažme si nejprve použití
první zmíněné metody, která tabulku naformátuje takovým způsobem, aby ji bylo
možné zařadit do nástrojů zpracovávajících <i>rozšířený</i> Markdown (protože
vlastní Markdown tabulky nepodporuje):</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df.to_markdown())
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(<strong>result.to_markdown()</strong>)
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<pre>
|   Year | Winner       |
|-------:|:-------------|
|   2019 | C            |
|   2018 | Python       |
|   2017 | C            |
|   2016 | Go           |
|   2015 | Java         |
|   2014 | JavaScript   |
|   2013 | Transact-SQL |
|   2012 | Objective-C  |
|   2011 | Objective-C  |
|   2010 | Python       |
|   2009 | Go           |
|   2008 | C            |
|   2007 | Python       |
|   2006 | Ruby         |
|   2005 | Java         |
|   2004 | PHP          |
|   2003 | C++          |
&nbsp;
| Winner       |   Language |
|:-------------|-----------:|
| C            |          3 |
| Python       |          3 |
| Go           |          2 |
| Java         |          2 |
| Objective-C  |          2 |
| C++          |          1 |
| JavaScript   |          1 |
| PHP          |          1 |
| Ruby         |          1 |
| Transact-SQL |          1 |
</pre>

<p><div class="rs-tip-major">Poznámka: pokud se zobrazí následující chybové
hlášení, znamená to, že není nainstalována knihovna <strong>tabulate</strong>,
o níž se zmíníme v&nbsp;navazujících kapitolách:</div></p>

<pre>
Traceback (most recent call last):
  File "data_frame_to_markdown.py", line 13, in &lt;module&gt;
    print(df.to_markdown())
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/core/frame.py", line 2261, in to_markdown
    tabulate = import_optional_dependency("tabulate")
  File "/home/ptisnovs/.local/lib/python3.6/site-packages/pandas/compat/_optional.py", line 110, in import_optional_dependency
    raise ImportError(msg) from None
ImportError: Missing optional dependency 'tabulate'.  Use pip or conda to install tabulate.
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Knihovna <strong>tabulate</strong></h2>

<p>Pro zobrazení tabulek s&nbsp;využitím různých formátovacích pravidel
(resp.&nbsp;stylů) lze použít knihovnu nazvanou příznačně
<strong>tabulate</strong>, jejíž repositář je dostupný na adrese <a
href="https://github.com/astanin/python-tabulate">https://github.com/astanin/python-tabulate</a>.
Tato knihovna dokáže naformátovat datové rámce z&nbsp;knihovny Pandas, ovšem
dokáže pracovat například i s&nbsp;n-dimenzionálními poli z&nbsp;Numpy atd.
Cílem knihovny je poskytnout formáty tabulek pro zobrazení na terminálech
(s&nbsp;pevnými šířkami znaků), ovšem přidány byly i styly pro export tabulek
do Markdownu, LaTeXu atd. &ndash; viz navazující kapitoly.</p>

<p>Instalace této malé knihovny (tvořené jediným zdrojovým souborem) je
snadná:</p>

<pre>
$ <strong>pip3 install --user tabulate</strong>
&nbsp;
Collecting tabulate
  Downloading https://files.pythonhosted.org/packages/c4/f4/770ae9385990f5a19a91431163d262182d3203662ea2b5739d0fcfc080f1/tabulate-0.8.7-py3-none-any.whl
Installing collected packages: tabulate
Successfully installed tabulate-0.8.7
</pre>

<p>Možnosti této knihovny budou ukázány v&nbsp;navazujících kapitolách.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Zobrazení tabulky naformátované knihovnou <strong>tabulate</strong></h2>

<p>Podívejme se nyní na způsob zobrazení naformátované tabulky s&nbsp;využitím
knihovny <strong>tabulate</strong>. Ve skutečnosti je to snadné. Po importu
této knihovny je pouze nutné namísto přímého vytištění datového rámce zavolat
funkci <strong>tabulate</strong> a předat jí příslušný datový rámec:</p>

<pre>
print(<strong>tabulate(df)</strong>)
</pre>

<p>Navíc je možné určit, jak se mají zobrazit hlavičky sloupců:</p>

<pre>
print(<strong>tabulate(df, headers="keys")</strong>)
</pre>

<p>Předchozí demonstrační příklad nyní upravíme tak, aby se zobrazily
naformátované tabulky:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(<strong>tabulate(df, headers="keys")</strong>)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(<strong>tabulate(result, headers="keys")</strong>)
</pre>

<p>S&nbsp;tímto výsledkem:</p>

<pre>
  Year  Winner
------  ------------
  2019  C
  2018  Python
  2017  C
  2016  Go
  2015  Java
  2014  JavaScript
  2013  Transact-SQL
  2012  Objective-C
  2011  Objective-C
  2010  Python
  2009  Go
  2008  C
  2007  Python
  2006  Ruby
  2005  Java
  2004  PHP
  2003  C++
&nbsp;
Winner          Language
------------  ----------
C                      3
Python                 3
Go                     2
Java                   2
Objective-C            2
C++                    1
JavaScript             1
PHP                    1
Ruby                   1
Transact-SQL           1
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Zobrazení naformátované tabulky s&nbsp;využitím formátu &bdquo;pretty&ldquo;</h2>

<p>Knihovna <strong>tabulate</strong> nabízí programátorům přibližně dvacet
způsobů naformátování tabulky při jejím tisku. Formát tabulky se volí
nepovinným parametrem <strong>tablefmt</strong>:</p>

<pre>
tabulate(datový_rámec, headers="keys", <strong>tablefmt=jméno_formátu</strong>)
</pre>

<p>Příkladem může být použití formátu nazvaného &bdquo;pretty&ldquo;:</p>

<pre>
tabulate(datový_rámec, headers="keys", <strong>tablefmt="pretty"</strong>)
</pre>

<p>Předchozí demonstrační příklad lze tedy upravit takovým způsobem, aby
zobrazil tabulku v&nbsp;odlišném formátu:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(<strong>tabulate(df, headers="keys", tablefmt="pretty")</strong>)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(<strong>tabulate(result, headers="keys", tablefmt="pretty")</strong>)
</pre>

<p>Po spuštění tohoto demonstračního příkladu by se měla zobrazit dvojice
tabulek v&nbsp;následujícím formátu (mj.&nbsp;kompatibilním i s&nbsp;hloupými
&bdquo;ASCII-only&ldquo; zařízeními):</p>

<pre>
+------+--------------+
| Year |    Winner    |
+------+--------------+
| 2019 |      C       |
| 2018 |    Python    |
| 2017 |      C       |
| 2016 |      Go      |
| 2015 |     Java     |
| 2014 |  JavaScript  |
| 2013 | Transact-SQL |
| 2012 | Objective-C  |
| 2011 | Objective-C  |
| 2010 |    Python    |
| 2009 |      Go      |
| 2008 |      C       |
| 2007 |    Python    |
| 2006 |     Ruby     |
| 2005 |     Java     |
| 2004 |     PHP      |
| 2003 |     C++      |
+------+--------------+
&nbsp;
+--------------+----------+
|    Winner    | Language |
+--------------+----------+
|      C       |    3     |
|    Python    |    3     |
|      Go      |    2     |
|     Java     |    2     |
| Objective-C  |    2     |
|     C++      |    1     |
|  JavaScript  |    1     |
|     PHP      |    1     |
|     Ruby     |    1     |
| Transact-SQL |    1     |
+--------------+----------+
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Naformátování tabulky napodobující <strong>psql</strong></h2>

<p>Velmi přehledným způsobem je obsah tabulek formátován nástrojem <a
href="http://www.postgresguide.com/utilities/psql.html">psql</a>, což je
terminálové rozhraní ke známé relační databázi <a
href="https://www.postgresql.org/">PostgreSQL</a>. Tento formát je možné
napodobit následovně:</p>

<pre>
<strong>tabulate(datový_rámec, headers="keys", tablefmt="psql")</strong>
</pre>

<p>Předchozí demonstrační příklad si upravíme pro použití tohoto stylu
zobrazení tabulek:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("hall_of_fame.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Year</i>
df.set_index("Year", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(<strong>tabulate(df, headers="keys", tablefmt="psql")</strong>)
print()
&nbsp;
<i># rozdělení do skupin</i>
gb = df.groupby(["Winner"])
&nbsp;
<i># agregace výsledků</i>
result = gb[["Winner"]].count()
&nbsp;
<i># přejmenování sloupce</i>
result.rename(columns={"Winner": "Language"}, inplace=True)
&nbsp;
<i># seřazení výsledků</i>
result.sort_values(by=["Language"], inplace=True, ascending=False)
&nbsp;
<i># zobrazení výsledků</i>
print(<strong>tabulate(result, headers="keys", tablefmt="psql")</strong>)
</pre>

<p>Výsledek získaný po spuštění tohoto demonstračního příkladu nyní bude
vypadat následovně:</p>

<pre>
+--------+--------------+
|   Year | Winner       |
|--------+--------------|
|   2019 | C            |
|   2018 | Python       |
|   2017 | C            |
|   2016 | Go           |
|   2015 | Java         |
|   2014 | JavaScript   |
|   2013 | Transact-SQL |
|   2012 | Objective-C  |
|   2011 | Objective-C  |
|   2010 | Python       |
|   2009 | Go           |
|   2008 | C            |
|   2007 | Python       |
|   2006 | Ruby         |
|   2005 | Java         |
|   2004 | PHP          |
|   2003 | C++          |
+--------+--------------+
&nbsp;
+--------------+------------+
| Winner       |   Language |
|--------------+------------|
| C            |          3 |
| Python       |          3 |
| Go           |          2 |
| Java         |          2 |
| Objective-C  |          2 |
| C++          |          1 |
| JavaScript   |          1 |
| PHP          |          1 |
| Ruby         |          1 |
| Transact-SQL |          1 |
+--------------+------------+
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Styly (formáty) zobrazení tabulek nabízené knihovnou <strong>tabulate</strong></h2>

<p>Knihovna <strong>tabulate</strong> nabízí uživatelům poměrně širokou škálu
formátů tabulek. Některé z&nbsp;těchto formátů jsou určeny pro zobrazení
tabulky na terminálu, další pak pro zařazení tabulky do různých dokumentů
zapsaných ve formátech Markdown, RST, HTML, různé formy Wiki či LaTeX:</p>

<table>
<tr><th> #</th><th>Výstupní formát</th></tr>
<tr><td> 1</td><td>plain</td></tr>
<tr><td> 2</td><td>simple</td></tr>
<tr><td> 3</td><td>github</td></tr>
<tr><td> 4</td><td>grid</td></tr>
<tr><td> 5</td><td>fancy_grid</td></tr>
<tr><td> 6</td><td>pipe</td></tr>
<tr><td> 7</td><td>orgtbl</td></tr>
<tr><td> 8</td><td>jira</td></tr>
<tr><td> 9</td><td>presto</td></tr>
<tr><td>10</td><td>pretty</td></tr>
<tr><td>11</td><td>psql</td></tr>
<tr><td>12</td><td>rst</td></tr>
<tr><td>13</td><td>mediawiki</td></tr>
<tr><td>14</td><td>moinmoin</td></tr>
<tr><td>15</td><td>youtrack</td></tr>
<tr><td>16</td><td>html</td></tr>
<tr><td>17</td><td>latex</td></tr>
<tr><td>18</td><td>latex_raw</td></tr>
<tr><td>19</td><td>latex_booktabs</td></tr>
<tr><td>20</td><td>textile</td></tr>
<tr><td>21</td><td>tsv</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: není to sice oficiální cesta, ovšem
podporované formáty lze zobrazit například takto:</div></p>

<pre>
import tabulate
&nbsp;
for fmt in <strong>tabulate._table_formats</strong>:
    print(fmt)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
simple
plain
grid
fancy_grid
github
pipe
orgtbl
jira
presto
pretty
psql
rst
mediawiki
moinmoin
youtrack
html
latex
latex_raw
latex_booktabs
tsv
textile
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Využití všech stylů nabízených knihovnou <strong>tabulate</strong></h2>

<p>Po spuštění následujícího demonstračního příkladu se na standardním výstupu
zobrazí tabulka s&nbsp;obsahem datového souboru <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv">tiobe.tsv</a>.
Tabulka je přitom postupně zobrazena s&nbsp;využitím všech formátů, jejichž
jména jsou uvedena v&nbsp;n-tici <strong>table_styles</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># jména stylů</i>
table_styles = (
        "plain",
        "simple",
        "github",
        "grid",
        "fancy_grid",
        "pipe",
        "orgtbl",
        "jira",
        "presto",
        "pretty",
        "psql",
        "rst",
        "mediawiki",
        "moinmoin",
        "youtrack",
        "html",
        "latex",
        "latex_raw",
        "latex_booktabs",
        "textile",
        "tsv"
        )
&nbsp;
for table_style in table_styles:
    <i># oddělovač</i>
    print()
    print("*" * 40)
    print("* {:^36s} *".format(table_style))
    print("*" * 40)
    print()
    <i># datový rámec zobrazíme s vybraným stylem</i>
    print(<strong>tabulate(df, headers="keys", tablefmt=table_style)</strong>)
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Zobrazení tabulek naformátovaných předchozím demonstračním příkladem</h2>

<p>Soubor obsahující tabulku zobrazenou s&nbsp;využitím všech dostupných
formátů je poměrně rozsáhlý (cca 54kB), proto není zařazen přímo do textu
článku. Naleznete ho na adrese <a
href="https://raw.githubusercontent.com/tisnik/most-popular-python-libs/master/pandas/table_styles.txt">https://raw.githubusercontent.com/tisnik/most-popular-python-libs/master/pandas/table_styles.txt</a>.</p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Alternativní způsob získání jmen všech formátů</h2>

<p><a href="#k13">Ve třinácté kapitole</a> jsme si ukázali alternativní přístup
k&nbsp;dostupným (resp.&nbsp;podporovaným) formátům tabulek &ndash; jména
formátů jsou klíči ve slovníku <strong>tabulate._table_formats</strong> (což je
privátní hodnota!). Pokud nám nevadí, že v&nbsp;kódu přistupujeme
k&nbsp;privátní hodnotě (která ani nemusí v&nbsp;novější verzi knihovny
existovat), lze předchozí demonstrační příklad zkrátit následovně:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from tabulate import tabulate, _table_formats as table_styles
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># zobrazit tabulku ve všech podporovaných formátech</i>
for table_style in table_styles:
    <i># oddělovač</i>
    print()
    print("*" * 40)
    print("* {:^36s} *".format(table_style))
    print("*" * 40)
    print()
    <i># datový rámec zobrazíme s vybraným stylem</i>
    print(<strong>tabulate(df, headers="keys", tablefmt=table_style)</strong>)
</pre>

<p><div class="rs-tip-major">Poznámka: výsledkem by měly být tabulky shodné
s&nbsp;předchozím příkladem, bude se však lišit jejich pořadí.</div></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Obsah následujícího článku</h2>

<p>V&nbsp;navazující části seriálu o knihovně Pandas si ukážeme použití
takzvaných <i>multiindexů</i>, kontingenčních tabulek a rozšíříme si naše
znalosti o takzvaných &bdquo;oknech&ldquo;, které již byly v&nbsp;některých
demonstračních příkladech použity, ovšem bez podrobnějšího vysvětlení.</p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 a nejnovější stabilní verzi knihovny Pandas byly uloženy do Git
repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th>  #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td>  1</td><td>data_frame_info_1.py</td><td>výpis obsahu datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py</a></td></tr>
<tr><td>  2</td><td>data_frame_info_2.py</td><td>výpis prvních pěti řádků z&nbsp;datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py</a></td></tr>
<tr><td>  3</td><td>data_frame_info_3.py</td><td>výpis informace o typech sloupců v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py</a></td></tr>
<tr><td>  4</td><td>data_frame_info_4.py</td><td>výpis uspořádaného seznamu jmen všech sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py</a></td></tr>
<tr><td>  5</td><td>data_frame_info_5.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py</a></td></tr>
<tr><td>  6</td><td>data_frame_info_6.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py</a></td></tr>
<tr><td>  7</td><td>data_frame_info_7.py</td><td>popis os, počtu dimenzí, tvaru a velikosti datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py</a></td></tr>
<tr><td>  8</td><td>data_frame_info_8.py</td><td>základní statistické informace o datech uložených v&nbsp;rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py</a></td></tr>
<tr><td>  9</td><td>data_frame_info_9.py</td><td>výsledkem metody <strong>info</strong> je nový datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 10</td><td>plot_kafka_lags.py</td><td>zobrazení jednoduchého grafu bez použití knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py</a></td></tr>
<tr><td> 11</td><td>plot_kafka_lags_pandas.py</td><td>zobrazení jednoduchého grafu s&nbsp;použitím knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py</a></td></tr>
<tr><td> 12</td><td>plot_kafka_lags_pandas_2.py</td><td>snazší způsob vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py</a></td></tr>
<tr><td> 13</td><td>plot_kafka_lags_pandas_sma_3.py</td><td>přidání klouzavého průměru do grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py</a></td></tr>
<tr><td> 14</td><td>plot_kafka_lags_pandas_sma_3_.py</td><td>vylepšení předchozího příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py</a></td></tr>
<tr><td> 15</td><td>plot_kafka_lags_pandas_sma_10.py</td><td>klouzavý průměr přes deset hodnot</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py</a></td></tr>
<tr><td> 16</td><td>plot_benchmark_results_line_chart.py</td><td>liniový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py</a></td></tr>
<tr><td> 17</td><td>plot_benchmark_results_bar_chart_1.py</td><td>sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py</a></td></tr>
<tr><td> 18</td><td>plot_benchmark_results_bar_chart_2.py</td><td>výběr části datového rámce při vykreslování grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py</a></td></tr>
<tr><td> 19</td><td>plot_benchmark_results_bar_chart_3.py</td><td>zobecnění předchozího příkladu &ndash; zpracování numerických dat ve všech sloupcích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 20</td><td>check_types_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py</a></td></tr>
<tr><td> 21</td><td>check_types_2.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_2.py</a></td></tr>
<tr><td> 22</td><td>check_types_3.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_3.py</a></td></tr>
<tr><td> 23</td><td>check_types_4.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_4.py</a></td></tr>
<tr><td> 24</td><td>check_types_5.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_5.py</a></td></tr>
<tr><td> 25</td><td>opulent_pandas_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_1.py</a></td></tr>
<tr><td> 26</td><td>opulent_pandas_2.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_2.py</a></td></tr>
<tr><td> 27</td><td>opulent_pandas_3.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_3.py</a></td></tr>
<tr><td> 28</td><td>opulent_pandas_4.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_4.py</a></td></tr>
<tr><td> &nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 29</td><td>series_01.py</td><td>konstrukce datové řady z n-tice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_01.py</a></td></tr>
<tr><td> 30</td><td>series_02.py</td><td>konstrukce datové řady z n-tice, specifikace indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_02.py</a></td></tr>
<tr><td> 31</td><td>series_03.py</td><td>konstrukce datové řady generátorem, specifikace indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_03.py</a></td></tr>
<tr><td> 32</td><td>series_04.py</td><td>příliš malý počet indexů předaných konstruktoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_04.py</a></td></tr>
<tr><td> 33</td><td>series_05.py</td><td>konstrukce datové řady ze slovníku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_05.py</a></td></tr>
<tr><td> 34</td><td>series_06.py</td><td>konstrukce datové řady ze slovníku, vliv pořadí klíčů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_06.py</a></td></tr>
<tr><td> 35</td><td>series_07.py</td><td>konstrukce datové řady z&nbsp;datového typu OrderedDict</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_07.py</a></td></tr>
<tr><td> 36</td><td>series_08.py</td><td>vytvoření nové datové řady z&nbsp;řady stávající &ndash; výběr prvků na základě jejich indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_08.py</a></td></tr>
<tr><td> 37</td><td>series_09.py</td><td>základní statistické informace o prvcích uložených v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_09.py</a></td></tr>
<tr><td> 38</td><td>series_10.py</td><td>vektorové operace nad všemi prvky datové řady</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_10.py</a></td></tr>
<tr><td> 39</td><td>series_11.py</td><td>vektorové operace nad všemi prvky datové řady &ndash; predikáty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_11.py</a></td></tr>
<tr><td> 40</td><td>series_12.py</td><td>vektorové operace nad dvojicí datových řad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_12.py</a></td></tr>
<tr><td> 41</td><td>series_13.py</td><td>výběr prvků na základě podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_13.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_13.py</a></td></tr>
<tr><td> 42</td><td>series_14.py</td><td>výběr prvků na základě podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_14.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_14.py</a></td></tr>
<tr><td> 43</td><td>series_15.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_15.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_15.py</a></td></tr>
<tr><td> 44</td><td>series_16.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_16.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_16.py</a></td></tr>
<tr><td> 45</td><td>series_17.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_17.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_17.py</a></td></tr>
<tr><td> 46</td><td>series_18.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_18.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_18.py</a></td></tr>
<tr><td> 47</td><td>series_19.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_19.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_19.py</a></td></tr>
<tr><td> 48</td><td>series_20.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>NaN</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_20.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_20.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 49</td><td>plot_series_01.py</td><td>vykreslení průběhu funkce sin, hodnoty jsou uloženy v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_01.py</a></td></tr>
<tr><td> 50</td><td>plot_series_02.py</td><td>odlišný typ grafu s&nbsp;vyplněnou plochou pod průběhem funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_02.py</a></td></tr>
<tr><td> 51</td><td>plot_series_03.py</td><td>sloupcový diagram s&nbsp;vertikálně orientovanými sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_03.py</a></td></tr>
<tr><td> 52</td><td>plot_series_04.py</td><td>sloupcový diagram s&nbsp;horizontálně orientovanými sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_04.py</a></td></tr>
<tr><td> 53</td><td>plot_series_05.py</td><td>graf s&nbsp;KDE &ndash; kernel density estimation</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_05.py</a></td></tr>
<tr><td> 54</td><td>plot_series_06.py</td><td>vykreslení koláčového grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_06.py</a></td></tr>
<tr><td> 55</td><td>plot_series_07.py</td><td>použití metody <strong>Series.map</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_07.py</a></td></tr>
<tr><td> 56</td><td>plot_series_08.py</td><td>vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_08.py</a></td></tr>
<tr><td> 57</td><td>plot_series_09.py</td><td>vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_09.py</a></td></tr>
<tr><td> 58</td><td>plot_series_10.py</td><td>Gaussovské vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_10.py</a></td></tr>
<tr><td> 59</td><td>plot_series_11.py</td><td>vykreslení tří průběhů do jediného grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_11.py</a></td></tr>
<tr><td> 60</td><td>plot_series_12.py</td><td>vykreslení tří podgrafů do jednoho grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_12.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 61</td><td>series_21_map.py</td><td>postupná aplikace vybrané funkce na všechny prvky datové řady (lambda)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_21_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_21_map.py</a></td></tr>
<tr><td> 62</td><td>series_22_map.py</td><td>postupná aplikace vybrané funkce na všechny prvky datové řady (reference na funkci)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_22_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_22_map.py</a></td></tr>
<tr><td> 63</td><td>series_23_map.py</td><td>použití slovníku ve funkci mapy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_23_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_23_map.py</a></td></tr>
<tr><td> 64</td><td>series_24_map.py</td><td>použití slovníku ve funkci mapy (zkrácená varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_24_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_24_map.py</a></td></tr>
<tr><td> 65</td><td>series_25_transform.py</td><td>transformace dat v&nbsp;datové řadě s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_25_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_25_transform.py</a></td></tr>
<tr><td> 66</td><td>series_26_transform.py</td><td>vytvoření více sloupců s&nbsp;transformovanými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_26_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_26_transform.py</a></td></tr>
<tr><td> 67</td><td>series_27_transform.py</td><td>vytvoření více sloupců s&nbsp;transformovanými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_27_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_27_transform.py</a></td></tr>
<tr><td> 68</td><td>series_28_transform.py</td><td>použití jmen funkcí ve formě řetězců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_28_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_28_transform.py</a></td></tr>
<tr><td> 69</td><td>series_29_agg.py</td><td>agregace informací z&nbsp;datové řady: metoda <strong>agg</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_29_agg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_29_agg.py</a></td></tr>
<tr><td> 70</td><td>series_30_agg.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>agg</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_30_agg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_30_agg.py</a></td></tr>
<tr><td> 71</td><td>series_31_aggregate.py</td><td>agregace informací z&nbsp;datové řady: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_31_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_31_aggregate.py</a></td></tr>
<tr><td> 72</td><td>series_32_aggregate.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_32_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_32_aggregate.py</a></td></tr>
<tr><td> 73</td><td>series_33_combine.py</td><td>kombinace údajů ze dvou datových řad popř.&nbsp;datové řady a skalární hodnoty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_33_combine.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_33_combine.py</a></td></tr>
<tr><td> 74</td><td>series_34_mask.py</td><td>výběr hodnot na základě zadané podmínky metodou <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_34_mask.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_34_mask.py</a></td></tr>
<tr><td> 75</td><td>series_35_mask_inplace_true.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_35_mask_inplace_true.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_35_mask_inplace_true.py</a></td></tr>
<tr><td> 76</td><td>series_36_mask_inplace_false.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_36_mask_inplace_false.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_36_mask_inplace_false.py </a></td></tr>
<tr><td> 77</td><td>series_37_where.py</td><td>výběr hodnot na základě zadané podmínky metodou <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_37_where.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_37_where.py</a></td></tr>
<tr><td> 78</td><td>series_38_where_inplace_true.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_38_where_inplace_true.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_38_where_inplace_true.py</a></td></tr>
<tr><td> 79</td><td>series_39_where_inplace_false.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_39_where_inplace_false.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_39_where_inplace_false.py</a></td></tr>
<tr><td> 80</td><td>series_40_where_drop.py</td><td>skutečná filtrace dat kombinující <strong>where</strong> a <strong>dropna</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_40_where_drop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_40_where_drop.py</a></td></tr>
<tr><td> 81</td><td>series_41_mask_drop.py</td><td>alternativní způsob založený na kombinaci <strong>mask</strong> a <strong>dropna</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_41_mask_drop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_41_mask_drop.py</a></td></tr>
<tr><td> 82</td><td>series_42_group_by.py</td><td>jedna z&nbsp;variant metody <strong>groupby</strong> aplikovaná na datovou řadu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_42_group_by.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_42_group_by.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 83</td><td>series_items.py</td><td>iterace přes všechny prvky datové řady založená na metodě <strong>items</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_items.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_items.py</a></td></tr>
<tr><td> 84</td><td>series_iteritems.py</td><td>iterace přes všechny prvky datové řady založená na metodě <strong>iteritems</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_iteritems.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_iteritems.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 85</td><td>data_frame_01_loading.py</td><td>načtení datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_01_loading.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_01_loading.py</a></td></tr>
<tr><td> 86</td><td>data_frame_02_map_conversion.py</td><td>postupná aplikace vybrané funkce na všechny prvky sloupce datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_02_map_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_02_map_conversion.py</a></td></tr>
<tr><td> 87</td><td>data_frame_03_map_conversion.py</td><td>postupná aplikace vybrané funkce na všechny prvky sloupce datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_03_map_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_03_map_conversion.py</a></td></tr>
<tr><td> 88</td><td>data_frame_04_map_format.py</td><td>naformátování sloupce v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_04_map_format.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_04_map_format.py</a></td></tr>
<tr><td> 89</td><td>data_frame_05_transform_conversion.py</td><td>transformace dat ve sloupci datového rámce s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_05_transform_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_05_transform_conversion.py</a></td></tr>
<tr><td> 90</td><td>data_frame_06_transform_conversion.py</td><td>transformace dat ve sloupci datového rámce s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_06_transform_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_06_transform_conversion.py</a></td></tr>
<tr><td> 91</td><td>data_frame_07_transform_format.py</td><td>naformátování sloupce v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_07_transform_format.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_07_transform_format.py</a></td></tr>
<tr><td> 92</td><td>data_frame_08_aggregate.py</td><td>agregace informací ze sloupce datového rámce: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_08_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_08_aggregate.py</a></td></tr>
<tr><td> 93</td><td>data_frame_09_aggregate.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_09_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_09_aggregate.py</a></td></tr>
<tr><td> 94</td><td>data_frame_10_combine.py</td><td>kombinace údajů ze dvou sloupců datových rámců popř.&nbsp;datové řady a skalární hodnoty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_10_combine.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_10_combine.py</a></td></tr>
<tr><td> 95</td><td>data_frame_append.py</td><td>připojení druhého datového rámce k&nbsp;rámci prvnímu metodou <strong>append</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_append.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_append.py</a></td></tr>
<tr><td> 96</td><td>data_frame_concat_by_columns.py</td><td>spojení dvou datových rámců po sloupcích funkcí <strong>concat</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_columns.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_columns.py</a></td></tr>
<tr><td> 97</td><td>data_frame_concat_by_rows.py</td><td>spojení dvou datových rámců po řádcích funkcí <strong>concat</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_rows.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_rows.py</a></td></tr>
<tr><td> 98</td><td>data_frame_join_01_inner_join.py</td><td>inner join (vnitřní spojení) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_01_inner_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_01_inner_join.py</a></td></tr>
<tr><td> 99</td><td>data_frame_join_02_left_join.py</td><td>left join (vnější spojení &bdquo;zleva&ldquo;) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_02_left_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_02_left_join.py</a></td></tr>
<tr><td>100</td><td>data_frame_join_03_right_join.py</td><td>right join (vnější spojení &bdquo;zprava&ldquo;) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_03_right_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_03_right_join.py</a></td></tr>
<tr><td>101</td><td>data_frame_join_04_outer_join.py</td><td>outer join (vnější spojení) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_04_outer_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_04_outer_join.py</a></td></tr>
<tr><td>102</td><td>data_frame_merge_01_inner_join.py</td><td>inner join (vnitřní spojení) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_01_inner_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_01_inner_join.py</a></td></tr>
<tr><td>103</td><td>data_frame_merge_02_inner_join_ignore_indexes.py</td><td>ignorování indexů při spojování datových rámců funkcí <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_02_inner_join_ignore_indexes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_02_inner_join_ignore_indexes.py</a></td></tr>
<tr><td>104</td><td>data_frame_merge_03_inner_join_use_indexes.py</td><td>použití indexů při spojování datových rámců funkcí <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_03_inner_join_use_indexes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_03_inner_join_use_indexes.py</a></td></tr>
<tr><td>105</td><td>data_frame_merge_04_inner_join_use_indexes.py</td><td>použití indexů při spojování datových rámců funkcí <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_04_inner_join_use_indexes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_04_inner_join_use_indexes.py</a></td></tr>
<tr><td>106</td><td>data_frame_merge_05_left_join.py</td><td>left join (vnější spojení &bdquo;zleva&ldquo;) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_05_left_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_05_left_join.py</a></td></tr>
<tr><td>107</td><td>data_frame_merge_06_right_join.py</td><td>right join (vnější spojení &bdquo;zprava&ldquo;) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_06_right_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_06_right_join.py</a></td></tr>
<tr><td>108</td><td>data_frame_merge_07_outer_join.py</td><td>outer join (vnější spojení) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_07_outer_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_07_outer_join.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>109</td><td>data_frame_group_by_01_load.py</td><td>načtení tabulky do datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_01_load.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_01_load.py</a></td></tr>
<tr><td>110</td><td>data_frame_group_by_02_language.py</td><td>rozdělení záznamů podle jména jazyka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_02_language.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_02_language.py</a></td></tr>
<tr><td>111</td><td>data_frame_group_by_03_try_to_sort.py</td><td>pokus o seřazení záznamů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_03_try_to_sort.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_03_try_to_sort.py</a></td></tr>
<tr><td>112</td><td>data_frame_group_by_04_language_sorted.py</td><td>přejmenování sloupce se seřazením záznamů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_04_language_sorted.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_04_language_sorted.py </a></td></tr>
<tr><td>113</td><td>data_frame_group_by_05_descending_order.py</td><td>opačné řazení záznamů v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_05_descending_order.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_05_descending_order.py</a></td></tr>
<tr><td>114</td><td>data_frame_group_by_06_view.py</td><td>zobrazení záznamů rozdělených do skupin</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_06_view.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_group_by_06_view.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>115</td><td>data_frame_tabulate_default.py</td><td>naformátování tabulky pro zobrazení na terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_default.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_default.py</a></td></tr>
<tr><td>116</td><td>data_frame_tabulate_pretty.py</td><td>formát tabulky nazvaný &bdquo;pretty&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_pretty.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_pretty.py</a></td></tr>
<tr><td>117</td><td>data_frame_tabulate_psql.py</td><td>formát tabulky shodný s&nbsp;klientem <strong>psql</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_psql.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_psql.py</a></td></tr>
<tr><td>118</td><td>data_frame_tabulate_styles.py</td><td>styly formátu tabulky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_styles.py</a></td></tr>
<tr><td>119</td><td>data_frame_tabulate_styles_alternative.py</td><td>styly formátu tabulky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_styles_alternative.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_tabulate_styles_alternative.py</a></td></tr>
<tr><td>120</td><td>data_frame_to_markdown.py</td><td>tisk datového rámce do formátu kompatibilního s&nbsp;nástroji pro Markdown</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_to_markdown.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_to_markdown.py</a></td></tr>
</table>

<p>Některé demonstrační příklady načítají následující soubory s&nbsp;daty:</p>

<table>
<tr><th> #</th><th>Datový soubor</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv</a></td></tr>
<tr><td> 2</td><td>missing_integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly, z&nbsp;nichž některé chybí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv</a></td></tr>
<tr><td> 3</td><td>timestamps.csv</td><td>tabulka s&nbsp;časovými údaji</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv</a></td></tr>
<tr><td> 4</td><td>custom_timestamps.csv</td><td>tabulka s&nbsp;časovými údaji používajícími nestandardní formát</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv</a></td></tr>
<tr><td> 5</td><td>denni_kurz.txt</td><td>semistrukturovaný soubor s&nbsp;nestandardními oddělovači</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt</a></td></tr>
<tr><td> 6</td><td>tiobe.tsv</td><td>data získaná ze stránek Tiobe indexu ve formátu TSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv</a></td></tr>
<tr><td> 7</td><td>tiobe.txt</td><td>data získaná ze stránek Tiobe indexu v&nbsp;textovém formátu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt</a></td></tr>
<tr><td> 8</td><td>benchmarks1.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv</a></td></tr>
<tr><td> 9</td><td>benchmarks2.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>tiobeA.tsv</td><td>tabulka z&nbsp;tiobe.tsv, ovšem pět řádků bylo odstraněno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv</a></td></tr>
<tr><td>11</td><td>tiobeB.tsv</td><td>tabulka z&nbsp;tiobe.tsv, ovšem pět (jiných) řádků bylo odstraněno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv</a></td></tr>
<tr><td>12</td><td>tiobeC.tsv</td><td>prvních deset řádků z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv</a></td></tr>
<tr><td>13</td><td>tiobeD.tsv</td><td>posledních deset řádků z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv</a></td></tr>
<tr><td>14</td><td>tiobeE.tsv</td><td>tři sloupce z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv</a></td></tr>
<tr><td>15</td><td>tiobeF.tsv</td><td>čtyři sloupce z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>hall_of_fame.tsv</td><td>vítězné jazyky za období 2003-2019</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/hall_of_fame.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/hall_of_fame.tsv</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na předchozí části seriálu o knihovně Pandas</h2>

<ol>

<li>Knihovna Pandas: základy práce s datovými rámci<br />
<a href="https://www.root.cz/clanky/knihovna-pandas-zaklady-prace-s-datovymi-ramci/">https://www.root.cz/clanky/knihovna-pandas-zaklady-prace-s-datovymi-ramci/</a>
</li>

<li>Knihovna Pandas: zobrazení obsahu datových rámců, vykreslení grafů a validace dat<br />
<a href="https://www.root.cz/clanky/knihovna-pandas-zobrazeni-obsahu-datovych-ramcu-vykresleni-grafu-a-validace-dat/">https://www.root.cz/clanky/knihovna-pandas-zobrazeni-obsahu-datovych-ramcu-vykresleni-grafu-a-validace-dat/</a>
</li>

<li>Knihovna Pandas: práce s datovými řadami (series)<br />
<a href="https://www.root.cz/clanky/knihovna-pandas-prace-s-datovymi-radami-series/">https://www.root.cz/clanky/knihovna-pandas-prace-s-datovymi-radami-series/</a>
</li>

<li>Knihovna Pandas: pokročilejší práce s datovými řadami (series)<br />
<a href="https://www.root.cz/clanky/knihovna-pandas-pokrocilejsi-prace-s-datovymi-radami-series/">https://www.root.cz/clanky/knihovna-pandas-pokrocilejsi-prace-s-datovymi-radami-series/</a>
</li>

<li>Knihovna Pandas: spojování datových rámců s využitím append, concat, merge a join<br />
<a href="https://www.root.cz/clanky/knihovna-pandas-spojovani-datovych-ramcu-s-vyuzitim-append-concat-merge-a-join/">https://www.root.cz/clanky/knihovna-pandas-spojovani-datovych-ramcu-s-vyuzitim-append-concat-merge-a-join/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Combining Data in Pandas With merge(), .join(), and concat()<br />
<a href="https://realpython.com/pandas-merge-join-and-concat/">https://realpython.com/pandas-merge-join-and-concat/</a>
</li>

<li>Repositář python-tabulate na GitHubu<br />
<a href="https://github.com/astanin/python-tabulate">https://github.com/astanin/python-tabulate</a>
</li>

<li>python-tabulate na PyPi<br />
<a href="https://pypi.org/project/tabulate/">https://pypi.org/project/tabulate/</a>
</li>

<li>Understanding Pandas groupby() function<br />
<a href="https://www.askpython.com/python-modules/pandas/pandas-groupby-function">https://www.askpython.com/python-modules/pandas/pandas-groupby-function</a>
</li>

<li>Python Pandas - GroupBy<br />
<a href="https://www.tutorialspoint.com/python_pandas/python_pandas_groupby.htm">https://www.tutorialspoint.com/python_pandas/python_pandas_groupby.htm</a>
</li>

<li>Pandas GroupBy: Group Data in Python<br />
<a href="https://pythonspot.com/pandas-groupby/">https://pythonspot.com/pandas-groupby/</a>
</li>

<li>JOIN<br />
<a href="https://cs.wikipedia.org/wiki/JOIN">https://cs.wikipedia.org/wiki/JOIN</a>
</li>

<li>Plotting with matplotlib<br />
<a href="https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html">https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html</a>
</li>

<li>Plot With Pandas: Python Data Visualization for Beginners<br />
<a href="https://realpython.com/pandas-plot-python/">https://realpython.com/pandas-plot-python/</a>
</li>

<li>Pandas Dataframe: Plot Examples with Matplotlib and Pyplot<br />
<a href="https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot">https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot</a>
</li>

<li>Opulent-Pandas na PyPi<br />
<a href="https://pypi.org/project/opulent-pandas/">https://pypi.org/project/opulent-pandas/</a>
</li>

<li>pandas_validator na PyPi<br />
<a href="https://pypi.org/project/pandas_validator/">https://pypi.org/project/pandas_validator/</a>
</li>

<li>pandas-validator (dokumentace)<br />
<a href="https://pandas-validator.readthedocs.io/en/latest/">https://pandas-validator.readthedocs.io/en/latest/</a>
</li>

<li>7 Best Python Libraries for Validating Data<br />
<a href="https://www.yeahhub.com/7-best-python-libraries-validating-data/">https://www.yeahhub.com/7-best-python-libraries-validating-data/</a>
</li>

<li>Universally unique identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">https://en.wikipedia.org/wiki/Universally_unique_identifier</a>
</li>

<li>Nullable integer data type<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html">https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html</a>
</li>

<li>pandas.read_csv<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html</a>
</li>

<li>How to define format when using pandas to_datetime?<br />
<a href="https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime">https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime</a>
</li>

<li>Pandas : skip rows while reading csv file to a Dataframe using read_csv() in Python<br />
<a href="https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/">https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/</a>
</li>

<li>Skip rows during csv import pandas<br />
<a href="https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas">https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas</a>
</li>

<li>Denni kurz<br />
<a href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>
</li>

<li>UUID objects according to RFC 4122 (knihovna pro Python)<br />
<a href="https://docs.python.org/3.5/library/uuid.html#uuid.uuid4">https://docs.python.org/3.5/library/uuid.html#uuid.uuid4</a>
</li>

<li>Object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Object_identifier">https://en.wikipedia.org/wiki/Object_identifier</a>
</li>

<li>Digital object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Digital_object_identifier">https://en.wikipedia.org/wiki/Digital_object_identifier</a>
</li>

<li>voluptuous na (na PyPi)<br />
<a href="https://pypi.python.org/pypi/voluptuous">https://pypi.python.org/pypi/voluptuous</a>
</li>

<li>Repositář knihovny voluptuous na GitHubu<br />
<a href="https://github.com/alecthomas/voluptuous">https://github.com/alecthomas/voluptuous</a>
</li>

<li>pytest-voluptuous 1.0.2 (na PyPi)<br />
<a href="https://pypi.org/project/pytest-voluptuous/">https://pypi.org/project/pytest-voluptuous/</a>
</li>

<li>pytest-voluptuous (na GitHubu)<br />
<a href="https://github.com/F-Secure/pytest-voluptuous">https://github.com/F-Secure/pytest-voluptuous</a>
</li>

<li>schemagic 0.9.1 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schemagic/0.9.1">https://pypi.python.org/pypi/schemagic/0.9.1</a>
</li>

<li>Schemagic / Schemagic.web (na GitHubu)<br />
<a href="https://github.com/Mechrophile/schemagic">https://github.com/Mechrophile/schemagic</a>
</li>

<li>schema 0.6.7 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schema">https://pypi.python.org/pypi/schema</a>
</li>

<li>schema (na GitHubu)<br />
<a href="https://github.com/keleshev/schema">https://github.com/keleshev/schema</a>
</li>

<li>XML Schema validator and data conversion library for Python<br />
<a href="https://github.com/brunato/xmlschema">https://github.com/brunato/xmlschema</a>
</li>

<li>xmlschema 0.9.7<br />
<a href="https://pypi.python.org/pypi/xmlschema/0.9.7">https://pypi.python.org/pypi/xmlschema/0.9.7</a>
</li>

<li>jsonschema 2.6.0<br />
<a href="https://pypi.python.org/pypi/jsonschema">https://pypi.python.org/pypi/jsonschema</a>
</li>

<li>warlock 1.3.0<br />
<a href="https://pypi.python.org/pypi/warlock">https://pypi.python.org/pypi/warlock</a>
</li>

<li>Python Virtual Environments – A Primer<br />
<a href="https://realpython.com/python-virtual-environments-a-primer/">https://realpython.com/python-virtual-environments-a-primer/</a>
</li>

<li>pip 1.1 documentation: Requirements files<br />
<a href="https://pip.readthedocs.io/en/1.1/requirements.html">https://pip.readthedocs.io/en/1.1/requirements.html</a>
</li>

<li>unittest.mock — mock object library<br />
<a href="https://docs.python.org/3.5/library/unittest.mock.html">https://docs.python.org/3.5/library/unittest.mock.html</a>
</li>

<li>mock 2.0.0<br />
<a href="https://pypi.python.org/pypi/mock">https://pypi.python.org/pypi/mock</a>
</li>

<li>An Introduction to Mocking in Python<br />
<a href="https://www.toptal.com/python/an-introduction-to-mocking-in-python">https://www.toptal.com/python/an-introduction-to-mocking-in-python</a>
</li>

<li>Unit testing (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Unit_testing">https://en.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Unit testing<br />
<a href="https://cs.wikipedia.org/wiki/Unit_testing">https://cs.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Test-driven development (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Test-driven_development">https://en.wikipedia.org/wiki/Test-driven_development</a>
</li>

<li>Pip (dokumentace)<br />
<a href="https://pip.pypa.io/en/stable/">https://pip.pypa.io/en/stable/</a>
</li>

<li>5 Differences between clojure.spec and Schema<br />
<a href="https://lispcast.com/clojure.spec-vs-schema/">https://lispcast.com/clojure.spec-vs-schema/</a>
</li>

<li>Schema: Clojure(Script) library for declarative data description and validation<br />
<a href="https://github.com/plumatic/schema">https://github.com/plumatic/schema</a>
</li>

<li>clojure.spec - Rationale and Overview<br />
<a href="https://clojure.org/about/spec">https://clojure.org/about/spec</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

