<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Krátké ohlédnutí do minulosti: Python 1, 2 a 3</a></p>
<p><a href="#k03">*** 3. Novinky představené v&nbsp;Pythonu 3.14</a></p>
<p><a href="#k04">*** 4. Praktická část</a></p>
<p><a href="#k05">*** 5. Instalace Pythonu 3.14 s&nbsp;využitím nástrojů <strong>pdm</strong> nebo <strong>uv</strong></a></p>
<p><a href="#k06">*** 6. Překlad Pythonu 3.14 ze zdrojových kódů</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. Vylepšená nápověda při nesprávném zápisu klíčového slova nebo identifikátoru</a></p>
<p><a href="#k11">11. Vylepšení syntaxe a sémantiky jazyka Python</a></p>
<p><a href="#k12">12. Zjednodušení zápisu zachycení většího množství výjimek v&nbsp;jediném bloku <strong>except</strong></a></p>
<p><a href="#k13">13. Kdy je možné zapsat typy výjimek bez kulatých závorek?</a></p>
<p><a href="#k14">14. Detekce explicitního výskoku z&nbsp;bloku <strong>finally</strong></a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Krátké ohlédnutí do minulosti: Python 1, 2 a 3</h2>

První stabilní (zejména ve smyslu již zmíněné _sémantiky_) verze programovacího jazyka Python byla vydána v&nbsp;roce 1994 a verze 1.x byly postupně vydávány až do roku 2001 (!), v&nbsp;němž vyšla poslední jedničková verze 1.6.1, která celou řadu Python 1 uzavřela. V&nbsp;Pythonu 1 ještě pochopitelně nenalezneme všechny vlastnosti, které známe ze stále ještě částečně rozšířeného Pythonu 2 nebo Pythonu 3 (který dnes Python 2 postupně nahrazuje).

Například řetězce byly v&nbsp;Pythonu 1 čistě osmibitové (ASCII), zatímco už v&nbsp;Pythonu 2 bylo možné použít Unicode řetězce. Dále v&nbsp;Pythonu 1 nebyla podporována takzvaná _generátorová notace_ a od ní odvozené konstrukce pro inicializaci seznamů, množin a slovníků. Taktéž ale neexistovaly ani operátory spojené s&nbsp;operací přiřazení, tedy například operátor `+=`, `|=` apod. Tyto varianty operátorů byly přidány až do Pythonu 2; inspirací byly v&nbsp;této oblasti pochopitelně především céčkové jazyky. A konečně, v&nbsp;Pythonu 1 neměly řetězce žádné metody, například `string.startswith` atd. &ndash; i tato funkcionalita byla přidána až v&nbsp;Pythonu 2.

V&nbsp;následující tabulce jsou vypsány všechny oficiálně vydané verze Pythonu 1:

| Verze | Datum vydání       |
|-------|--------------------|
| 1.0.0 | 26. ledna 1994     |
| 1.0.2 | 15. února 1994     |
| 1.0.3 | 4. května 1994     |
| 1.0.4 | 14. července, 1994 |
| 1.1   | 11. října 1994     |
| 1.1.1 | 10. listopadu 1994 |
| 1.2   | 13. dubna 1995     |
| 1.3   | 13. října 1995     |
| 1.4   | 25. října 1996     |
| 1.5   | 3. ledna 1998      |
| 1.5.1 | 31. října 1998     |
| 1.5.2 | 13. dubna 1999     |
| 1.6   | 5. září 2000       |
| 1.6.1 | 25. února 2001     |

Poznámka: v&nbsp;současnosti, kdy verze nějakého frameworku nebo knihovny určené pro ekosystém jazyka JavaScript vydaná před dvěma týdny je mnohdy považována za zoufale zastaralou, se to může zdát zvláštní, ale stále se můžeme ve specifických případech setkat s&nbsp;použitím Pythonu verze 1. Konkrétně jsem viděl použití Pythonu 1.5.2 a 1.6.1. Ostatně není bez zajímavosti, že tyto verze jsou dostupné ve formě zdrojových kódů a jsou stále přeložitelné i na současných verzích Linuxu či systému Microsoft Windows (i když pro nové projekty vřele doporučuji používat Python 3).
Vydání Pythonu 2.0 datujeme na 16. říjen 2000. Python 2 byl velmi úspěšným projektem, který do značné míry zajistil Pythonu místo na samotném vrcholu popularity programovacích jazyků. Ovšem již v&nbsp;roce 2008 vyšel Python 3.0 (založený na PEP 3000, což bylo někdy spojováno do označení &bdquo;Python 3000&ldquo;), který je s&nbsp;verzí 2 částečně nekompatibilní. A právě popularita a velké rozšíření Pythonu 2 a jeho balíčků na jedné straně a nekompatibilita Pythonu 3 na straně druhé zapříčinila více než desetileté schizma světa Pythonu, které je teprve postupně napravováno s&nbsp;tím, jak se stále více balíčků a aplikací portuje na Python 3 (a v&nbsp;některých oblastech ani zdaleka není ukončeno, nicméně všechny nejdůležitější knihovny jsou již nabízeny buď výhradně pro Python 3 nebo jak pro Python 2, tak i pro Python 3).

Poznámka: na druhou stranu je nutné poznamenat, že se přechod na Python 3 v&nbsp;mnoha oblastech podařil a to v&nbsp;mnoha případech relativně snadno. Nenastala tedy taková patová situace, jako v&nbsp;případě Perlu 5 vs. Perl 6 (v&nbsp;současnosti Raku).

Opět si pochopitelně vypíšeme data vydání různých verzí Pythonu 2 (bez &bdquo;setinkových&ldquo; vydání:

| Verze | Datum vydání       |
|-------|--------------------|
| 2.0   | 16. října 2000     |
| 2.1   | 17. dubna 2001     |
| 2.2   | 21. prosince 2001  |
| 2.3   | 29. července 2003  |
| 2.4   | 30. listopadu 2004 |
| 2.5   | 16. září 2006      |
| 2.6   | 1. října 2008      |
| 2.7   | 3. července 2010   |

Žádná z&nbsp;těchto verzí Pythonu již není oficiálně podporována a doporučuje se, aby všechny nové projekty vznikaly již pro Python 3.
Python 3.0, tedy první verze Pythonu řady 3, byla vydána v&nbsp;prosinci 2008. Za zmínku stojí &bdquo;překryv&ldquo; v&nbsp;současném vydávání Pythonu 2.x a 3.x:

| Verze | Datum vydání       |
|-------|--------------------|
| 3.0   | 3. prosince 2008   |
| 3.1   | 27. června 2009    |
| 3.2   | 20. února 2011     |
| 3.3   | 29. září 2012      |
| 3.4   | 16. března 2014    |
| 3.5   | 13. září 2015      |
| 3.6   | 23. prosince 2016  |
| 3.7   | 27. června 2018    |
| 3.8   | 14. října 2019     |
| 3.9   | 5. října 2020      |
| 3.10  | 4. října 2021      |
| 3.11  | 24. října 2022     |
| 3.12  | 2. října 2023      |
 2024-10-07
  2025-10-07

Povšimněte si velké pravidelnosti ve vydávání verzí, ke které došlo od verze 3.8. Příští plánovaná verze bude 3.13 a vyjít by měla letos, a to opět v&nbsp;říjnu.



<p><a name="k03"></a></p>
<h2 id="k03">3. Novinky představené v&nbsp;Pythonu 3.14</h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. Praktická část</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. Instalace Pythonu 3.14 s&nbsp;využitím nástrojů <strong>pdm</strong> nebo <strong>uv</strong></h2>

$ uv python install 3.14
Installed Python 3.14.0rc2 in 3.74s
 + cpython-3.14.0rc2-linux-x86_64-gnu (python3.14)

$ whereis python3.14
python3.14: /home/ptisnovs/.local/bin/python3.14

$ uv run python3.14 --version
Python 3.14.0rc2

$ uv run python3.14
Python 3.14.0rc2 (main, Aug 18 2025, 19:19:22) [Clang 20.1.4 ] on linux
Type "help", "copyright", "credits" or "license" for more information.

$ ls -lah
total 30M
drwxr-xr-x. 1 ptisnovs ptisnovs  192 Oct 10 13:04 .
drwxr-xr-x. 1 ptisnovs ptisnovs   36 Oct 10 13:04 ..
lrwxrwxrwx. 1 ptisnovs ptisnovs    8 Oct 10 13:04 idle3 -> idle3.14
-rwxr-xr-x. 1 ptisnovs ptisnovs  156 Oct 10 13:04 idle3.14
-rwxr-xr-x. 1 ptisnovs ptisnovs  286 Oct 10 13:04 pip
-rwxr-xr-x. 1 ptisnovs ptisnovs  286 Oct 10 13:04 pip3
-rwxr-xr-x. 1 ptisnovs ptisnovs  286 Oct 10 13:04 pip3.14
lrwxrwxrwx. 1 ptisnovs ptisnovs    9 Oct 10 13:04 pydoc3 -> pydoc3.14
-rwxr-xr-x. 1 ptisnovs ptisnovs  141 Oct 10 13:04 pydoc3.14
lrwxrwxrwx. 1 ptisnovs ptisnovs   10 Oct 10 13:04 python -> python3.14
lrwxrwxrwx. 1 ptisnovs ptisnovs   10 Oct 10 13:04 python3 -> python3.14
-rwxr-xr-x. 1 ptisnovs ptisnovs  30M Oct 10 13:04 python3.14
-rwxr-xr-x. 1 ptisnovs ptisnovs 3.2K Oct 10 13:04 python3.14-config
lrwxrwxrwx. 1 ptisnovs ptisnovs   17 Oct 10 13:04 python3-config -> python3.14-config



<p><a name="k06"></a></p>
<h2 id="k06">6. Překlad Pythonu 3.14 ze zdrojových kódů</h2>

gcc  -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall    -std=c11 -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration -fvisibility=hidden  -I./Include/internal -I./Include/internal/mimalloc  -I. -I./Include    -fPIC -c ./Modules/_testcapi/config.c -o Modules/_testcapi/config.o
gcc  -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall    -std=c11 -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration -fvisibility=hidden  -I./Include/internal -I./Include/internal/mimalloc  -I. -I./Include    -fPIC -c ./Modules/_testcapi/import.c -o Modules/_testcapi/import.o
gcc  -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall    -std=c11 -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration -fvisibility=hidden  -I./Include/internal -I./Include/internal/mimalloc  -I. -I./Include    -fPIC -c ./Modules/_testcapi/frame.c -o Modules/_testcapi/frame.o
gcc  -fno-strict-overflow -Wsign-compare -DNDEBUG -g -O3 -Wall    -std=c11 -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration -fvisibility=hidden  -I./Include/internal -I./Include/internal/mimalloc  -I. -I./Include    -fPIC -c ./Modules/_testcapi/type.c -o Modules/_testcapi/type.o

sed -e "s,/usr/bin/env python3,/usr/local/bin/python3.14," < ./Tools/scripts/idle3 > build/scripts-3.14/idle3.14
sed -e "s,/usr/bin/env python3,/usr/local/bin/python3.14," < ./Tools/scripts/pydoc3 > build/scripts-3.14/pydoc3.14
sed -e "s,@EXENAME@,/usr/local/bin/python3.14," < ./Misc/python-config.in >python-config.py
LC_ALL=C sed -e 's,\$(\([A-Za-z0-9_]*\)),\$\{\1\},g' < Misc/python-config.sh >python-config
The following modules are *disabled* in configure script:
_sqlite3

The necessary bits to build these optional modules were not found:
_dbm                  _gdbm                 _tkinter
_uuid                 readline
To find the necessary bits, look in configure.ac and config.log.

Checked 114 modules (36 built-in, 71 shared, 1 n/a on linux-x86_64, 1 disabled, 5 missing, 0 failed on import)
./python -E ./Tools/build/generate-build-details.py `cat pybuilddir.txt`/build-details.json

$ ./python --version
Python 3.14.0

$ ./python
Python 3.14.0 (main, Oct 10 2025, 13:26:39) [GCC 14.2.1 20240912 (Red Hat 14.2.1-3)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>



<p><a name="k07"></a></p>
<h2 id="k07">7. Barevné zvýraznění REPLu interpretru jazyka Python</h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. Barevné zvýraznění nápovědy modulu <strong>argparse</strong></h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Barevné zvýraznění výstupu generovaného standardním modulem <strong>unittest</strong></h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Vylepšená nápověda při nesprávném zápisu klíčového slova nebo identifikátoru</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vylepšení syntaxe a sémantiky jazyka Python</h2>

<p>Všechny nové vlastnosti Pythonu 3.14, s&nbsp;nimiž jsme se až doposud
v&nbsp;tomto článku setkali, se vlastně týkaly vylepšení rozhraní mezi
vývojářem na straně jedné a interpretrem na straně druhé. Ovšem do Pythonu 3.14
byly přidány nové více či méně užitečné vlastnosti i do samotného jazyka
Python, tj.&nbsp;do jeho syntaxe a sémantiky. Tyto nové vlastnosti sice nejsou
tak revoluční, jako tomu bylo v&nbsp;některých předchozích verzích Pythonu
(přidání typových informací, konstrukce pro pattern matching, podpora pro
asynchronní programování atd.), ovšem i tak stojí za zmínku i za ukázky.</p>

<p><div class="rs-tip-major">Poznámka: postupné změny prováděné v&nbsp;syntaxi
a sémantice Pythonu sice znamenají, že se vývojáři musí každý rok (ne častěji)
naučit několik nových postupů, na druhou stranu to však udržuje jazyk živý o
otevřený novým myšlenkám a inspiracím (třeba i z&nbsp;jiných jazyků) &ndash;
nestává se z&nbsp;něho živoucí fosilie.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Zjednodušení zápisu zachycení většího množství výjimek v&nbsp;jediném bloku <strong>except</strong></h2>

<p>První, i když relativně malé vylepšení jazyka Python, spočívá v&nbsp;tom, že
pokud se v&nbsp;nějakém bloku <strong>except</strong> zachytává větší množství
výjimek (resp.&nbsp;přesněji řečeno výjimek několika typů), není nutné typy
těchto výjimek umístit do kulatých závorek. Toto vylepšení, které je popsáno
v&nbsp;<a href="https://peps.python.org/pep-0758/">PEP 758 – Allow except and
except* expressions without parentheses</a>, je plně dopředně kompatibilní
s&nbsp;předchozími verzemi programovacího jazyka Python, protože je stále možné
(a někdy i nutné &ndash; viz dále) výjimky do kulatých závorek zapisovat (ovšem
zdrojové kódy využívající tento zápis pochopitelně nebudou přijaty staršími
překladači ani interpretry).</p>

<p>Připomeňme si, jak je možné v&nbsp;jediném bloku <strong>except</strong>
zachytit více výjimek:</p>

<pre>
try:
    with open("pep-758-motivation.py", "r") as fin:
        content = fin.read()
    with open("bar", "w") as fout:
        fout.write(content)
except <strong>(FileNotFoundError, PermissionError, IsADirectoryError, IOError)</strong>:
    print("File handling exception")
</pre>

<p>popř.&nbsp;můžeme uložit objekt nesoucí informaci o výjimce do lokální
proměnné nazývané idiomaticky <strong>e</strong> s&nbsp;využitím konstrukce
<strong>as e</strong>:</p>

<pre>
try:
    with open("pep-758-motivation.py", "r") as fin:
        content = fin.read()
    with open("bar", "w") as fout:
        fout.write(content)
except <strong>(FileNotFoundError, PermissionError, IsADirectoryError, IOError) as e</strong>:
    print(type(e))
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Kdy je možné zapsat typy výjimek bez kulatých závorek?</h2>

<p>První z&nbsp;demonstračních příkladů, které byly uvedeny <a
href="#k12">v&nbsp;předchozí kapitole</a>, je nyní možné zapsat zkráceným
způsobem, tj.&nbsp;typy výjimek nemusí být vloženy do kulatých závorek:</p>

<pre>
try:
    with open("pep-758-motivation.py", "r") as fin:
        content = fin.read()
    with open("bar", "w") as fout:
        fout.write(content)
except <strong>FileNotFoundError, PermissionError, IsADirectoryError, IOError</strong>:
    print("File handling exception")
</pre>

<p>Důležité je ovšem vědět, že tento nový způsob zápisu se <i>nemůže</i> použít
v&nbsp;případě, kdy je použita konstrukce <strong>except ... as ...</strong>.
Pokud se o toto zjednodušení pokusíme, bude interpret programovacího jazyka
Python 3.14 hlásit chyby syntaxe (a nutno dodat, že tato konstrukce se
pravděpodobně používá mnohem častěji, než pouhé zachycení výjimek):</p>

<pre>
try:
    with open("pep-758-motivation.py", "r") as fin:
        content = fin.read()
    with open("bar", "w") as fout:
        fout.write(content)
except <strong>FileNotFoundError, PermissionError, IsADirectoryError, IOError as e</strong>:
    print(type(e))
</pre>

<p>Informace o syntaktické chybě nalezené překladačem bude vypadat takto:</p>

<pre>
  File "/home/ptisnovs/src/most-popular-python-libs/python3.14/pep-758-usage-as.py", line 6
    except FileNotFoundError, PermissionError, IsADirectoryError, IOError as e:
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: multiple exception types must be parenthesized when using 'as'
</pre>

<p><div class="rs-tip-major">Poznámka: přesněji řečeno se informace o chybě
vypíše s&nbsp;barevným rozlišením jednotlivých částí chyby, což jsme si již
ostatně řekli i ukázali v&nbsp;předchozích kapitolách.</div></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Detekce explicitního výskoku z&nbsp;bloku <strong>finally</strong></h2>

<p>Interpretry a překladače všech starších verzí programovacího jazyka Python
umožňovaly, aby se v&nbsp;bloku <strong>finally</strong> (ten se provede
nezávisle na tom, zda je vyhozena a následně zachycena výjimka či nikoli)
používaly jazykové konstrukce umožňující výskok (opuštění) bloků
<strong>try-except-finally</strong>. Mezi takové konstrukce patří
<strong>return</strong>, <strong>break</strong>, ale i
<strong>continue</strong>. Jak si uvedeme v&nbsp;navazující kapitole, byla tato
kombinace <strong>finally+return</strong> atd. sice po syntaktické stránce
korektní, ovšem typicky se jedná o logickou chybu v&nbsp;návrhu programu.
Z&nbsp;tohoto důvodu Python 3.14 v&nbsp;takových případech detekuje a hlásí
chybu syntaxe (tj.&nbsp;logická chyba byla <i>ponížena</i> na pouhou
syntaktickou chybu).</p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Motivace a ukázky kódu</h2>

<pre>
def test_fn():
    try:
        with open("pep-758-motivation.py", "r") as fin:
            content = fin.read()
        with open("bar", "w") as fout:
            fout.write(content)
    except (FileNotFoundError, PermissionError, IsADirectoryError, IOError) as e:
        print(type(e))
    finally:
        return
&nbsp;
&nbsp;
test_fn()
</pre>

<pre>
def test_fn():
    for x in range(10):
        try:
            y = 1 / x
            print(f"{x:2}  {y:4.2f}")
        except ZeroDivisionError:
            print(f"{x:2}  divide by zero")
        finally:
            pass
&nbsp;
&nbsp;
test_fn()
</pre>

<pre>
def test_fn():
    for x in range(10):
        try:
            y = 1 / x
            print(f"{x:2}  {y:4.2f}")
        except ZeroDivisionError:
            print(f"{x:2}  divide by zero")
        finally:
            return


test_fn()
</pre>

<pre>
def test_fn():
    for x in range(10):
        try:
            y = 1 / x
            print(f"{x:2}  {y:4.2f}")
        except ZeroDivisionError:
            print(f"{x:2}  divide by zero")
        finally:
            continue


test_fn()
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady vytvořené pro Python verze 3.14 a popsané
v&nbsp;dnešním článku najdete v&nbsp;repositáři <a
href="https://github.com/tisnik/most-popular-python-libs/">https://github.com/tisnik/most-popular-python-libs/</a>.
Následují odkazy na jednotlivé příklady:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
<tr><td>17</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/">https://github.com/tisnik/most-popular-python-libs/blob/master/python3.14/</a></td></tr>
</table>

argparse_test.py
pep-758-motivation-1.py
pep-758-motivation-2.py
pep-758-usage-as.py
pep-758-usage.py
pep-765-motivation-1.py
pep-765-motivation-2.py
pep-765-motivation-3.py
pep-765-motivation-4.py
primes.py
syntax_error_1.py
syntax_error_2.py
syntax_error_3.py
syntax_error_4.py
syntax_error_5.py
test_primes.py



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Python 3.14.0<br />
<a href="https://test.python.org/downloads/release/python-3140/">https://test.python.org/downloads/release/python-3140/</a>
</li>

<li>PEP 765 – Disallow return/break/continue that exit a finally block<br />
<a href="https://peps.python.org/pep-0765/">https://peps.python.org/pep-0765/</a>
</li>

<li>PEP 758 – Allow except and except* expressions without parentheses<br />
<a href="https://peps.python.org/pep-0758/">https://peps.python.org/pep-0758/</a>
</li>

<li>What’s new in Python 3.14 (official)<br />
<a href="https://docs.python.org/3/whatsnew/3.14.html">https://docs.python.org/3/whatsnew/3.14.html</a>
</li>

<li>What’s New In Python 3.13 (official)<br />
<a href="https://docs.python.org/3/whatsnew/3.13.html">https://docs.python.org/3/whatsnew/3.13.html</a>
</li>

<li>What’s New In Python 3.12 (official)<br />
<a href="https://docs.python.org/3/whatsnew/3.12.html">https://docs.python.org/3/whatsnew/3.12.html</a>
</li>

<li>What’s New In Python 3.11 (official)<br />
<a href="https://docs.python.org/3/whatsnew/3.11.html">https://docs.python.org/3/whatsnew/3.11.html</a>
</li>

<li>What’s New In Python 3.12<br />
<a href="https://dev.to/mahiuddindev/python-312-4n43">https://dev.to/mahiuddindev/python-312-4n43</a></li>

<li>PEP 698 – Override Decorator for Static Typing<br />
<a href="https://peps.python.org/pep-0698/">https://peps.python.org/pep-0698/</a>
</li>

<li>PEP 484 -- Type Hints<br />
<a href="https://www.python.org/dev/peps/pep-0484/">https://www.python.org/dev/peps/pep-0484/</a>
</li>

<li>What’s New In Python 3.5<br />
<a href="https://docs.python.org/3.5/whatsnew/3.5.html">https://docs.python.org/3.5/whatsnew/3.5.html</a>
</li>

<li>26.1. typing — Support for type hints<br />
<a href="https://docs.python.org/3.5/library/typing.html#module-typing">https://docs.python.org/3.5/library/typing.html#module-typing</a>
</li>

<li>Type Hints - Guido van Rossum - PyCon 2015 (youtube)<br />
<a href="https://www.youtube.com/watch?v=2wDvzy6Hgxg">https://www.youtube.com/watch?v=2wDvzy6Hgxg</a>
</li>

<li>Python 3.5 is on its way<br />
<a href="https://lwn.net/Articles/650904/">https://lwn.net/Articles/650904/</a>
</li>

<li>Type hints<br />
<a href="https://lwn.net/Articles/640359/">https://lwn.net/Articles/640359/</a>
</li>

<li>Stránka projektu PDM<br />
<a href="https://pdm.fming.dev/latest/">https://pdm.fming.dev/latest/</a>
</li>

<li>PDF na GitHubu<br />
<a href="https://github.com/pdm-project/pdm">https://github.com/pdm-project/pdm</a>
</li>

<li>PEP 582 &ndash; Python local packages directory<br />
<a href="https://peps.python.org/pep-0582/">https://peps.python.org/pep-0582/</a>
</li>

<li>PDM na PyPi<br />
<a href="https://pypi.org/project/pdm/">https://pypi.org/project/pdm/</a>
</li>

<li>Which Python package manager should you use?<br />
<a href="https://towardsdatascience.com/which-python-package-manager-should-you-use-d0fd0789a250">https://towardsdatascience.com/which-python-package-manager-should-you-use-d0fd0789a250</a>
</li>

<li>How to Use PDM to Manage Python Dependencies without a Virtual Environment<br />
<a href="https://www.youtube.com/watch?v=qOIWNSTYfcc">https://www.youtube.com/watch?v=qOIWNSTYfcc</a>
</li>

<li>What are the best Python package managers?<br />
<a href="https://www.slant.co/topics/2666/~best-python-package-managers">https://www.slant.co/topics/2666/~best-python-package-managers</a>
</li>

<li>PEP 621 &ndash; Storing project metadata in pyproject.toml<br />
<a href="https://peps.python.org/pep-0621/">https://peps.python.org/pep-0621/</a>
</li>

<li>Pick a Python Lockfile and Improve Security<br />
<a href="https://blog.phylum.io/pick-a-python-lockfile-and-improve-security/">https://blog.phylum.io/pick-a-python-lockfile-and-improve-security/</a>
</li>

<li>PyPA specifications<br />
<a href="https://packaging.python.org/en/latest/specifications/">https://packaging.python.org/en/latest/specifications/</a>
</li>

<li>Creation of virtual environments<br />
<a href="https://docs.python.org/3/library/venv.html">https://docs.python.org/3/library/venv.html</a>
</a>

<li>How to Use virtualenv in Python<br />
<a href="https://learnpython.com/blog/how-to-use-virtualenv-python/">https://learnpython.com/blog/how-to-use-virtualenv-python/</a>
</a>

<li>Python Virtual Environments: A Primer<br />
<a href="https://realpython.com/python-virtual-environments-a-primer/">https://realpython.com/python-virtual-environments-a-primer/</a>
</a>

<li>virtualenv Cheatsheet<br />
<a href="https://aaronlelevier.github.io/virtualenv-cheatsheet/">https://aaronlelevier.github.io/virtualenv-cheatsheet/</a>
</a>

<li>Installing Python Modules<br />
<a href="https://docs.python.org/3/installing/index.html">https://docs.python.org/3/installing/index.html</a>
</a>

<li>History of Python<br />
<a href="https://en.wikipedia.org/wiki/History_of_Python">https://en.wikipedia.org/wiki/History_of_Python</a>
</li>

<li>History of Python<br />
<a href="https://www.geeksforgeeks.org/python/history-of-python/">https://www.geeksforgeeks.org/python/history-of-python/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

