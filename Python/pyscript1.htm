<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>PyScript: další technologie umožňující využití Pythonu ve webovém browseru</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>PyScript: další technologie umožňující využití Pythonu ve webovém browseru</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. PyScript: další technologie umožňující využití Pythonu ve webovém browseru</a></p>
<p><a href="#k02">*** 2. Programovací jazyk Python a front end webových aplikací</a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. PyScript: další technologie umožňující využití Pythonu ve webovém browseru</h2>

<p>Na stránkách <a href="https://www.root.cz/">Roota</a> a taktéž na serveru <a href="https://mojefedora.cz/">Moje Fedora</a> jsme se již několikrát setkali s&nbsp;různými mainstreamovými ale i alternativními implementacemi programovacího jazyka <a href="https://www.root.cz/n/python/">Python</a>. Kromě klasického <i>CPythonu</i> (ať již dnes již zastaralé verze <a href="https://pythonclock.org/">2</a> nebo verze 3) si připomeňme například projekt nazvaný Jython [<a href="https://mojefedora.cz/jython-aneb-ponekud-opomijeny-programovaci-jazyk-pro-virtualni-stroj-javy/">1</a>] [<a href="https://mojefedora.cz/pouziti-standardni-knihovny-javy-v-jythonu/">2</a>], což je (dnes již bohužel poněkud zastaralá) implementace Pythonu určená pro běh ve virtuálním stroji Javy, popř.&nbsp;<a href="https://ironpython.net/">IronPython</a> určený pro prostředí .NET. Dále jsme se zmínili o <a href="https://www.root.cz/zpravicky/rustpython-je-implementace-jazyka-python-3-napsana-pomoci-rust/">RustPythonu</a>, neboli implementaci Pythonu vytvořené (jak název správně napovídá) <a href="https://www.root.cz/serialy/programovaci-jazyk-rust/">v&nbsp;programovacím jazyce Rust</a>. Podobným způsobem je implementován i interpret Pythonu v&nbsp;jazyce Go v&nbsp;projektu <a href="https://github.com/go-python/gpython">gpython</a>.</p>

<img src="https://i.iinfo.cz/images/575/brython-1.png" class="image-394884" alt="&#160;" width="399" height="257" />
<p><i>Obrázek 1: Logo programovacího jazyka Jython &ndash; poněkud zastaralé varianty Pythonu pro běh nad virtuálním strojem Javy.</i></p>

<p>Věnovali jsme se i poměrně neznámému jazyku <a href="https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/">Coconut</a>. Jedná se o funkcionální programovací jazyk s&nbsp;<i>pattern matchingem</i>, který je navržen takovým způsobem, aby byl kompatibilní s&nbsp;Pythonem, tj.&nbsp;aby skripty vyvinuté v&nbsp;Pythonu byly v&nbsp;Coconutu spustitelné (zpětně ovšem nikoli, protože syntaxe a sémantika Coconutu byla v&nbsp;mnoha ohledech rozšířena). Přesnější informace o tom, se kterými verzemi Pythonu je Coconut kompatibilní, naleznete na adrese <a href="http://coconut.readthedocs.io/en/master/DOCS.html#compatible-python-versions">http://coconut.readthedocs.io/en/master/DOCS.html#compatible-python-versions</a>. Zapomenout nesmíme ani na <a href="http://www.mypy-lang.org/">MyPy</a>, což je projekt, kterému bude věnován samostatný článek.</p>

<p>Zatímco výše zmíněné nástroje <i>Jython</i> i <i>RustPython</i> jsou skutečnými alternativními implementacemi interpretru Pythonu navazujícími na CPython (interpret Pythonu naprogramovaný v&nbsp;céčku), existují i další implementace, které se zaměřují například překlad programů vyvinutých v&nbsp;Pythonu do strojového kódu, a to jak před spuštěním aplikace (<i>AOT &ndash; Ahead Of Time compilation</i>) nebo během její činnosti (<i>JIT &ndash; Just In Time compilation</i>). Mezi tyto nástroje patří především <a href="http://pypy.org/">PyPy</a> (používaný v&nbsp;mnoha projektech) a dále <a href="https://cython.org/">Cython</a> (ne CPython), <a href="https://rpython.readthedocs.io/en/latest/rpython.html">RPython</a> a <a href="http://numba.pydata.org/">Numba</a>, které k&nbsp;problematice překladu skriptů vytvořených v&nbsp;Pythonu přistupují různými (zcela odlišnými cestami). RPython používá AOT a striktně omezuje některé vlastnosti jazyka zatímco Numba a PyPy používá JIT a nabízí programátorům prakticky stejné možnosti, jako klasický CPython.</p>

<img src="https://i.iinfo.cz/images/575/brython-2.png" class="image-394885" alt="&#160;" width="500" height="230" />
<p><i>Obrázek 2: Logo projektu Cython.</i></p>

<img src="https://i.iinfo.cz/images/575/brython-3.png" class="image-394886" alt="&#160;" width="318" height="110" />
<p><i>Obrázek 3: Logo projektu PyPy.</i></p>

<p>S&nbsp;bližšími informacemi o Cythonu, RPythonu i nástroji Numba jsme se seznámili v&nbsp;následujících článcích:</p>

<ol>

<li>RPython: překvapivě výkonný dialekt Pythonu, na němž je založen PyPy<br />
<a href="https://www.root.cz/clanky/rpython-prekvapive-vykonny-dialekt-pythonu-na-nemz-je-zalozen-pypy/">https://www.root.cz/clanky/rpython-prekvapive-vykonny-dialekt-pythonu-na-nemz-je-zalozen-pypy/</a>
</li>

<li>RPython vs Cython aneb dvojí přístup k překladu Pythonu do nativního kódu<br />
<a href="https://www.root.cz/clanky/rpython-vs-cython-aneb-dvoji-pristup-k-prekladu-pythonu-do-nativniho-kodu/">https://www.root.cz/clanky/rpython-vs-cython-aneb-dvoji-pristup-k-prekladu-pythonu-do-nativniho-kodu/</a>
</li>

<li>Praktické použití nástroje Cython při překladu Pythonu do nativního kódu<br />
<a href="https://www.root.cz/clanky/prakticke-pouziti-nastroje-cython-pri-prekladu-pythonu-do-nativniho-kodu-1/">https://www.root.cz/clanky/prakticke-pouziti-nastroje-cython-pri-prekladu-pythonu-do-nativniho-kodu-1/</a>
</li>

<li>Projekt Numba aneb další přístup k překladu Pythonu do nativního kódu<br />
<a href="https://www.root.cz/clanky/projekt-numba-aneb-dalsi-pristup-k-prekladu-pythonu-do-nativniho-kodu/">https://www.root.cz/clanky/projekt-numba-aneb-dalsi-pristup-k-prekladu-pythonu-do-nativniho-kodu/</a>
</li>

</ol>

<a href="https://www.root.cz/obrazek/332506/"><img src="https://i.iinfo.cz/images/529/rpython-cpython-3-prev.png" class="image-332506" alt="&#160;" width="363" height="270" /></a>
<p><i>Obrázek 4: Porovnání doby výpočtu Mandelbrotovy množiny RPythonem, Cythonem (bez i s&nbsp;type hinty) a variantou naprogramovanou přímo v&nbsp;ANSI C. Z&nbsp;tohoto grafu je dobře patrné, jak důležité je pro Cython mít k&nbsp;dispozici o typech proměnných, parametrů a návratových kódů funkcí (jinými slovy &ndash; provedené optimalizace v&nbsp;tomto případě nezískáme zadarmo).</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Programovací jazyk Python a front end webových aplikací</h2>

<p>Programovací jazyk Python se v&nbsp;současnosti používá v&nbsp;mnoha aplikačních oblastech &ndash; od jednoduchých skriptů umožňujících a zjednodušujících administraci systému přes složitější utility, desktopové aplikace (PyQt, PySide, wxPython, Tkinter, PyGObject či Wax) a webové služby až po zpracování dat, strojové učení (<i>ML &ndash; machine learning</i>) a umělou inteligenci (<i>AI &ndash; artificial intelligence</i>). Dnes nás ovšem bude zajímat především použití Pythonu při tvorbě webových služeb a webových aplikací. V&nbsp;této oblasti se Python používá především na <i>back endu</i>, tj.&nbsp;pro tu část webové služby/aplikace, která je provozována na serveru a nějakým způsobem komunikuje s&nbsp;ostatními komponentami vytvářeného systému: <i>front endem</i> (typicky webový prohlížeč s&nbsp;interpretrem JavaScriptu), databází a dalšími (mikro)službami, například s&nbsp;využitím message brokerů, systémů pro monitoring a správu událostí atd. Tato oblast samozřejmě není pokryta pouze Pythonem, ale najdeme zde i další programovací jazyky a technologie, zejména Javu (a celý její middleware), JavaScript či TypeScript (node.js) a dnes taktéž <a href="https://www.root.cz/serialy/programovaci-jazyk-go/">programovací jazyk Go</a>.</p>

<p>Zatímco pozice Pythonu v&nbsp;oblasti back endu je poměrně zřejmá, je situace na front endu mnohem složitější. Důvod je jednoduchý &ndash; v&nbsp;této oblasti z&nbsp;historických důvodů kraluje JavaScript, přičemž veškeré snahy a náhradu tohoto jazyka byly prozatím neúspěšné (pokusů bylo hned několik, připomeňme například browsery s&nbsp;<a href="https://www.root.cz/serialy/programovaci-jazyk-tcl/">TCL</a>, <a href="https://en.wikipedia.org/wiki/VBScript">VBScript</a> či projekt <a href="https://dart.dev/">Dart</a>). Ovšem stále se můžeme setkat se snahami JavaScript nepoužívat přímo, popř.&nbsp;ho obejít jinými nástroji. Příkladem mohou být technologie umožňující tvorbu webových aplikací podobným způsobem, jakoby se jednalo o aplikace desktopové. Příkladem tohoto přístupu mohou být projekty <a href="https://wiki.python.org/moin/Pyjamas">Pyjamas</a> (pro Python), <a href="http://www.gwtproject.org/">Google Web Toolkit (GWT)</a>, <a href="https://cordova.apache.org/">Apache Cordova</a> atd. (což jsou v&nbsp;současnosti většinou již nepodporované projekty).</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>

<pre>

<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script>
            print('Hello, World!')
        </py-script>
    </body>
</html>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>

<pre>
print('Hello, World!')
</pre>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script src="hello.py">
        </py-script>
    </body>
</html>
</pre>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script src="hello.py" />
    </body>
</html>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>

<pre>
$ python3 -m http.server 9000
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script>
            for i in range(1,11):
                print(i)
        </py-script>
    </body>
</html>
</pre>

<pre>
$ <strong>python3</strong>
&nbsp;
Python 3.8.10 (default, Jun 22 2022, 20:18:18) 
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>             for i in range(1,11):
  File "<stdin>", line 1
    for i in range(1,11):
    ^
IndentationError: unexpected indent
>>>                 print(i)
  File "<stdin>", line 1
    print(i)
    ^
IndentationError: unexpected indent
>>> 
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>

<pre>
def run():
    for i in range(1,11):
        print(i)

run()
</pre>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script src="loop.py">
        </py-script>
    </body>
</html>
</pre>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script src="loop.py">
        </py-script>
    </body>
</html>
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <py-script>
            # original code
            # http://www.rosettacode.org/wiki/Sieve_of_Eratosthenes#Using_array_lookup
            def primes2(limit):
                is_prime = [False] * 2 + [True] * (limit - 1)
                for n in range(int(limit ** 0.5 + 1.5)):  # stop at ``sqrt(limit)``
                    if is_prime[n]:
                        for i in range(n * n, limit + 1, n):
                            is_prime[i] = False
                return [i for i, prime in enumerate(is_prime) if prime]


            print(primes2(100))
        </py-script>
    </body>
</html>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <div id="result" style="font-size:150%;color:#800000"></div>

        <py-script>
            # original code
            # http://www.rosettacode.org/wiki/Sieve_of_Eratosthenes#Using_array_lookup
            def primes2(limit):
                is_prime = [False] * 2 + [True] * (limit - 1)
                for n in range(int(limit ** 0.5 + 1.5)):  # stop at ``sqrt(limit)``
                    if is_prime[n]:
                        for i in range(n * n, limit + 1, n):
                            is_prime[i] = False
                return [i for i, prime in enumerate(is_prime) if prime]


            primes = primes2(100)
            asStrings = map(str, primes)
            pyscript.write('result', ", ".join(asStrings))
        </py-script>
    </body>
</html>
</pre>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    </head>
    <body>
        <div id="result" style="font-size:150%;color:#800000"></div>

        <py-script>
            # original code
            # http://www.rosettacode.org/wiki/Sieve_of_Eratosthenes#Using_array_lookup
            def primes2(limit):
                is_prime = [False] * 2 + [True] * (limit - 1)
                for n in range(int(limit ** 0.5 + 1.5)):  # stop at ``sqrt(limit)``
                    if is_prime[n]:
                        for i in range(n * n, limit + 1, n):
                            is_prime[i] = False
                return [i for i, prime in enumerate(is_prime) if prime]


            primes = primes2(100)
            asStrings = map(str, primes)
            Element('result').write(", ".join(asStrings))
        </py-script>
    </body>
</html>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>

<pre>
# original code
# http://www.rosettacode.org/wiki/Sieve_of_Eratosthenes#Using_array_lookup
def primes2(limit):
    is_prime = [False] * 2 + [True] * (limit - 1)
    for n in range(int(limit ** 0.5 + 1.5)):  # stop at ``sqrt(limit)``
        if is_prime[n]:
            for i in range(n * n, limit + 1, n):
                is_prime[i] = False
    return [i for i, prime in enumerate(is_prime) if prime]
</pre>

<pre>
<html>
    <head>
        <link rel="stylesheet" href="https://pyscript.net/latest/pyscript.css" />
        <script defer src="https://pyscript.net/latest/pyscript.js"></script>
<py-env>
        - paths:
          - ./primes.py
</py-env>
    </head>
    <body>
        <div id="result" style="font-size:150%;color:#800000"></div>

        <py-script>
            from primes import *

            primes = primes2(100)
            asStrings = map(str, primes)
            Element('result').write(", ".join(asStrings))
        </py-script>
    </body>
</html>
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<p></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
PyScript byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/">https://github.com/tisnik/most-popular-python-libs/blob/master/pyscript/</a></td></tr>
</table>

hello1.html
hello2.html
hello3.html
hello.py
loop1.html
loop2.html
loop3.html
loop.py
primes1.html
primes2.html
primes3.html
primes4.html
primes.py
repl.html



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>PyScript<br />
<a href="https://pyscript.net/">https://pyscript.net/</a>
</li>

<li>PyScript na GitHubu<br />
<a href="https://github.com/pyscript/pyscript">https://github.com/pyscript/pyscript</a>
</li>

<li>Getting started with PyScript<br />
<a href="https://github.com/pyscript/pyscript/blob/main/docs/tutorials/getting-started.md">https://github.com/pyscript/pyscript/blob/main/docs/tutorials/getting-started.md</a>
</li>

<li>PyScript examples<br />
<a href="https://github.com/pyscript/pyscript/tree/main/examples">https://github.com/pyscript/pyscript/tree/main/examples</a>
</li>

<li>What is PyScript<br />
<a href="https://docs.pyscript.net/latest/concepts/what-is-pyscript.html">https://docs.pyscript.net/latest/concepts/what-is-pyscript.html</a>
</li>

<li>Pyodide<br />
<a href="https://pyodide.org/en/stable/">https://pyodide.org/en/stable/</a>
</li>

<li>Compiling to WebAssembly: It’s Happening!<br />
<a href="https://hacks.mozilla.org/2015/12/compiling-to-webassembly-its-happening/">https://hacks.mozilla.org/2015/12/compiling-to-webassembly-its-happening/</a>
</li>

<li>WebAssembly<br />
<a href="https://webassembly.org/">https://webassembly.org/</a>
</li>

<li>Blogy o WASM a Emscripten<br />
<a href="https://www.jamesfmackenzie.com/sitemap/#emscripten">https://www.jamesfmackenzie.com/sitemap/#emscripten</a>
</li>

<li>wat2wasm demo<br />
<a href="https://webassembly.github.io/wabt/demo/wat2wasm/">https://webassembly.github.io/wabt/demo/wat2wasm/</a>
</li>

<li>WABT: The WebAssembly Binary Toolkit<br />
<a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a>
</li>

<li>Programming using Web Assembly<br />
<a href="https://medium.com/@alexc73/programming-using-web-assembly-c4c73a4e09a9">https://medium.com/@alexc73/programming-using-web-assembly-c4c73a4e09a9</a>
</li>

<li>Experiments with image manipulation in WASM using Go<br />
<a href="https://agniva.me/wasm/2018/06/18/shimmer-wasm.html">https://agniva.me/wasm/2018/06/18/shimmer-wasm.html</a>
</li>

<li>Fable<br />
<a href="https://fable.io/">https://fable.io/</a>
</li>

<li>Využití WebAssembly z&nbsp;programovacího jazyka Go<br />
<a href="https://www.root.cz/clanky/vyuziti-webassembly-z-programovaciho-jazyka-go/">https://www.root.cz/clanky/vyuziti-webassembly-z-programovaciho-jazyka-go/</a>
</li>

<li>WebAssembly prošlo standardizací ve W3C, byla vydána verze 1.0<br />
<a href="https://www.root.cz/zpravicky/webassembly-proslo-standardizaci-ve-w3c-byla-vydana-verze-1-0/">https://www.root.cz/zpravicky/webassembly-proslo-standardizaci-ve-w3c-byla-vydana-verze-1-0/</a>
</li>

<li>WebAssembly na Wiki Golangu<br />
<a href="https://github.com/golang/go/wiki/WebAssembly">https://github.com/golang/go/wiki/WebAssembly</a>
</li>

<li>The future of WebAssembly – A look at upcoming features and proposals<br />
<a href="https://blog.scottlogic.com/2018/07/20/wasm-future.html">https://blog.scottlogic.com/2018/07/20/wasm-future.html</a>
</li>

<li>Writing WebAssembly By Hand<br />
<a href="https://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html">https://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html</a>
</li>

<li>WebAssembly Specification<br />
<a href="https://webassembly.github.io/spec/core/index.html">https://webassembly.github.io/spec/core/index.html</a>
</li>

<li>Index of Instructions<br />
<a href="https://webassembly.github.io/spec/core/appendix/in­dex-instructions.html">https://webassembly.github.io/spec/core/appendix/in­dex-instructions.html</a>
</li>

<li>The WebAssembly Binary Toolkit<br />
<a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a>
</li>

<li>Will WebAssembly replace JavaScript? Or Will WASM Make JavaScript More Valuable in Future?<br />
<a href="https://dev.to/vaibhavshah/will-webassembly-replace-javascript-or-will-wasm-make-javascript-more-valuable-in-future-5c6e">https://dev.to/vaibhavshah/will-webassembly-replace-javascript-or-will-wasm-make-javascript-more-valuable-in-future-5c6e</a>
</li>

<li>Roadmap (pro WebAssemly)<br />
<a href="https://webassembly.org/roadmap/">https://webassembly.org/roadmap/</a>
</li>

<li>S-expression<br />
<a href="https://en.wikipedia.org/wiki/S-expression">https://en.wikipedia.org/wiki/S-expression</a>
</li>

<li>Understanding WebAssembly text format<br />
<a href="https://developer.mozilla.org/en-US/docs/WebAssembly/Under­standing_the_text_format">https://developer.mozilla.org/en-US/docs/WebAssembly/Under­standing_the_text_format</a>
</li>

<li>Learning Golang through WebAssembly – Part 1, Introduction and setup<br />
<a href="https://www.aaron-powell.com/posts/2019–02–04-golang-wasm-1-introduction/">https://www.aaron-powell.com/posts/2019–02–04-golang-wasm-1-introduction/</a>
</li>

<li>Learning Golang through WebAssembly – Part 2, Writing your first piece of Go<br />
<a href="https://www.aaron-powell.com/posts/2019–02–05-golang-wasm-2-writing-go/">https://www.aaron-powell.com/posts/2019–02–05-golang-wasm-2-writing-go/</a>
</li>

<li>Learning Golang through WebAssembly – Part 3, Interacting with JavaScript from Go<br />
<a href="https://www.aaron-powell.com/posts/2019–02–06-golang-wasm-3-interacting-with-js-from-go/">https://www.aaron-powell.com/posts/2019–02–06-golang-wasm-3-interacting-with-js-from-go/</a>
</li>

<li>Golang webassembly (wasm) testing with examples<br />
<a href="https://jelinden.fi/blog/golang-webassembly-wasm-testing-with-examples/qB7Tb2KmR">https://jelinden.fi/blog/golang-webassembly-wasm-testing-with-examples/qB7Tb2KmR</a>
</li>

<li>Use Cases (of WebAssembly)<br />
<a href="https://webassembly.org/docs/use-cases/">https://webassembly.org/docs/use-cases/</a>
</li>

<li>JupyterLite na PyPi<br />
<a href="https://pypi.org/project/jupyterlite/">https://pypi.org/project/jupyterlite/</a>
</li>

<li>JupyterLite na GitHubu<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Dokumentace k&nbsp;projektu JupyterLite<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>A quick guide about Python implementations<br />
<a href="https://blog.rmotr.com/a-quick-guide-about-python-implementations-aa224109f321">https://blog.rmotr.com/a-quick-guide-about-python-implementations-aa224109f321</a>
</li>

<li>How Brython works<br />
<a href="https://github.com/brython-dev/brython/wiki/How%20Brython%20works">https://github.com/brython-dev/brython/wiki/How%20Brython%20works</a>
</li>

<li>Brython &ndash; A Python 3 implementation for client-side web programming<br />
<a href="http://www.brython.info/">http://www.brython.info/</a>
</li>

<li>Brython videos and talks<br />
<a href="https://github.com/brython-dev/brython/wiki/Brython-videos-and-talks">https://github.com/brython-dev/brython/wiki/Brython-videos-and-talks</a>
</li>

<li>Python in browser (tabulka s&nbsp;porovnáními)<br />
<a href="http://stromberg.dnsalias.org/~strombrg/pybrowser/python-browser.html">http://stromberg.dnsalias.org/~strombrg/pybrowser/python-browser.html</a>
</li>

<li>JavaScript is Assembly Language for the Web: Sematic Markup is Dead! Clean vs. Machine-coded HTML<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx</a>
</li>

<li>pyscript VS brython<br />
<a href="https://www.libhunt.com/compare-pyscript-vs-brython">https://www.libhunt.com/compare-pyscript-vs-brython</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

