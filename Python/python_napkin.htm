<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Tvorba sekvenčních diagramů v&nbsp;Pythonu s&nbsp;využitím knihovny Napkin</a></p>
<p><a href="#k02">*** 2. PlantUML</a></p>
<p><a href="#k03">*** 3. Sekvenční diagramy</a></p>
<p><a href="#k04">*** 4. Nepatrně složitější příklady</a></p>
<p><a href="#k05">*** 5. Tvorba sekvenčních diagramů přímo v&nbsp;PlantUML</a></p>
<p><a href="#k06">*** 6. Nastavení vlastností sekvenčních diagramů</a></p>
<p><a href="#k07">*** 7. Sekvenční diagramy a knihovna Napkin</a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">*** 19. Odkazy na články s&nbsp;tématem programové tvorby grafů a diagramů</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba sekvenčních diagramů v&nbsp;Pythonu s&nbsp;využitím knihovny Napkin</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p>Nástroj <i>PlantUML</i> (<a href="http://plantuml.sourceforge.net/">http://plantuml.sourceforge.net/</a>) dokáže na základě textového popisu UML diagramu vytvořit bitmapový obrázek s&nbsp;tímto diagramem, přičemž uživatel může do jisté míry ovlivnit způsob jeho vykreslení, přidat popis hran apod. V&nbsp;současné verzi <i>PlantUML</i> jsou podporovány následující typy UML diagramů: diagram aktivit, stavový diagram, diagram tříd, diagram objektů, diagram komponent, diagram užití a sekvenční diagram. Ve skutečnosti sice UML popisuje i další typy diagramů, ovšem <i>PlantUML</i> s&nbsp;velkou pravděpodobností dokáže pokrýt většinu potřeb analytiků i programátorů, protože v&nbsp;nabídce podporovaných diagramů jsou zastoupeny všechny tři kategorie: popis struktury informačního systému, popis chování informačního systému a popis interakce či komunikace.</p>

<img src="http://i.iinfo.cz/images/487/plantuml-4.png" class="image-195540" width="196" height="301" alt="&#160;" />
<p><i>Obrázek XXX: Diagram aktivit vygenerovaný nástrojem PlantUML.</i></p>

<p><i>PlantUML</i> je naprogramovaný v&nbsp;Javě, ovšem podobně jako tomu bylo v&nbsp;případě minule popsaného nástroje <i>Ditaa</i> se jedná o relativně malý program, který pro svůj běh nevyžaduje enormní množství zdrojů (diskový prostor, RAM atd.). Pro uživatele <i>PlantUML</i> je na adrese <a href="http://sourceforge.net/projects/plantuml/files/plantuml.jar/download">http://sourceforge.net/projects/plantuml/files/plantuml.jar/download</a> k&nbsp;dispozici spustitelný Java archiv, dále je vhodné si stáhnout referenční příručku k&nbsp;jazyku z&nbsp;adresy <a href="http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf">http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf</a>.</p>

<img src="http://i.iinfo.cz/images/487/plantuml-6.png" class="image-195542" width="181" height="335" alt="&#160;" />
<p><i>Obrázek XXX: Jednoduché rozvětvení reprezentované v&nbsp;diagramu aktivit vytvořeného nástrojem PlantUML.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p>Nástroj <i>PlantUML</i> podporuje mnoho typů diagramů. Mezi ně patří například <i>stavové diagramy</i>, které dokážou názorně popsat stavy systému i možné přechody mezi jednotlivými stavy. Ovšem v&nbsp;mnoha případech vzniká potřeba podrobněji popsat i interakci mezi popisovaným systémem a jeho okolím, interakci mezi dvěma nebo více moduly systému či (na té nejpodrobnější úrovni) interakci probíhající mezi jednotlivými objekty, z&nbsp;nichž se systém skládá. Pro tento účel slouží v&nbsp;jazyku UML <i>sekvenční diagramy (sequence diagrams)</i>, v&nbsp;nichž lze velmi názorným způsobem naznačit časovou posloupnost posílání zpráv mezi různými typy objektů, popř.&nbsp;k&nbsp;zobrazené posloupnosti zpráv přidat další komentáře a značky. Jeden z&nbsp;typických a poměrně často v&nbsp;praxi používaných příkladů použití <i>sekvenčních diagramů</i> je popis komunikace s&nbsp;využitím síťových i jiných protokolů. Ostatně právě na síťovém protokolu (navázání spojení a zrušení spojení) si <i>sekvenční diagramy</i> ukážeme prakticky v&nbsp;navazujících dvou kapitolách.</p>

<p>Nejjednodušší sekvenční diagram je možné v&nbsp;nástroji <i>PlantUML</i> deklarovat následujícím způsobem. Pomocí symbolu <strong>-&gt;</strong> je naznačeno poslání zprávy mezi dvojicí objektů, v&nbsp;tomto případě mezi klientem a serverem. Sekvenční diagram neobsahuje žádné počáteční ani koncové pseudostavy, což je jeden z&nbsp;rozpoznávacích znaků mezi sekvenčním diagramem a stavovým diagramem. Proto také při odstranění pseudostavů může <i>PlantUML</i> automaticky změnit stavový diagram za diagram sekvenční, což je samozřejmě chyba:</p>

<pre>
@startuml
&nbsp;
Client -&gt; Server: SYN
&nbsp;
@enduml
</pre>

<img src="http://i.iinfo.cz/images/582/diags-1.png" class="image-196201" width="144" height="127" alt="&#160;" />
<p><i>Obrázek XXX: Sekvenční diagram vytvořený na základě prvního demonstračního příkladu.</i></p>

<p>Druhý příklad je nepatrně složitější a ukazuje způsob navázání komunikace v&nbsp;protokolu TCP (tzv. three-way handshake):</p>

<pre>
@startuml
&nbsp;
Client -&gt; Server: SYN
Server -&gt; Client: SYN-ACK
Client -&gt; Server: ACK
&nbsp;
@enduml
</pre>

<img src="http://i.iinfo.cz/images/582/diags-2.png" class="image-196202" width="155" height="185" alt="&#160;" />
<p><i>Obrázek XXX: Sekvenční diagram vytvořený na základě druhého demonstračního příkladu.</i></p>

<p>Deklarace předchozího diagramu byla pravděpodobně poněkud nešikovná, protože se na druhém řádku prohodila jména komunikujících objektů. To lze snadno napravit, protože symbol <strong>-&gt;</strong> je možné nahradit symbolem <strong>&lt;-</strong>, který (samozřejmě) značí poslání zprávy opačným směrem:</p>

<pre>
@startuml
&nbsp;
Client -&gt; Server: SYN
Client &lt;- Server: SYN-ACK
Client -&gt; Server: ACK
&nbsp;
@enduml
</pre>

<img src="http://i.iinfo.cz/images/582/diags-3.png" class="image-196203" width="155" height="185" alt="&#160;" />
<p><i>Obrázek XXX: Sekvenční diagram vytvořený na základě třetího demonstračního příkladu.</i></p>

<p>Podívejme se ještě na nepatrně složitější příklad: ukončení spojení, tentokrát způsobem označovaným four-way handshake (spojení ukončují a vzájemně si ho potvrzují obě strany). Jednotlivé zprávy byly navíc automaticky očíslovány, což zajistilo uvedení klíčového slova <strong>autonumber</strong>:</p>

<pre>
@startuml
&nbsp;
<strong>autonumber</strong>
&nbsp;
Client -&gt; Server: FIN
Client &lt;- Server: ACK
Client &lt;- Server: FIN
Client -&gt; Server: ACK
&nbsp;
@enduml
</pre>

<img src="http://i.iinfo.cz/images/582/diags-4.png" class="image-196204" width="144" height="215" alt="&#160;" />
<p><i>Obrázek XXX: Sekvenční diagram vytvořený na základě čtvrtého demonstračního příkladu.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Nepatrně složitější příklady</h2>

<pre>
@startuml

header Sequence diagram for data flow in Content Service
footer Copyright © 2020 Red Hat, Inc. Author: Pavel Tisnovsky

actor "Author of\nrule content" as author
database "Internal\nGitLab\nrepository\n&lt;&amp;fork&gt;" as gitlab
database "External\nGitHab\nrepository\n&lt;&amp;fork&gt;" as github
participant "OpenShift\ntooling" as openshift #ffa0a0
participant "Insights\nContent Service" as content_service #a0a0ff
participant "Smart\nProxy" as smart_proxy #a0a0ff
collections "REST API\nconsumers" as consumers

== New content or update of existing content ==
author -&gt; gitlab: Merge into\nmain branch

== Data synchronization to Content Service ==
gitlab -&gt; github: New commit(s)
github -&gt; github: Merge commit
gitlab -&gt; openshift: Webhook - new changes
openshift -&gt; github:  Clone\nrepository
github -&gt; openshift: Repository content
openshift -&gt; openshift: Rebuild image
note right: OpenShift rebuild Insights\nContent Service image\nwith new rules content included
openshift -&gt; openshift: Restart pod
openshift -&gt; content_service: Set replicas &gt; 0
note right: Now the Content Service\nexposes new rules content\nvia its REST API

== Synchronization between Smart Proxy and Content Service ==
smart_proxy -&gt; content_service: Get new content\nfor all rules
note right: Smart proxy needs\nto periodically\nupdate its cache
content_service -&gt; smart_proxy: Here's\nrequired\ncontent
smart_proxy -&gt; smart_proxy: Update content\nin cache

== Providing recommendations to consumers ==
consumers -&gt; smart_proxy: Get\nrecommendations\norg ID\ncluster ID
smart_proxy -&gt; smart_proxy: Merge results\nwith content
smart_proxy -&gt; consumers: Recommendations\nfor cluster

@enduml
</pre>

<pre>
@startuml

!include &lt;cloudinsight/kafka&gt;
!include &lt;kubernetes/k8s-sprites-unlabeled-25pct&gt;

header Sequence diagram for the whole CCX (external) data pipeline
footer Copyright © 2020 Red Hat, Inc. Author: Pavel Tisnovsky

participant "Smart\nProxy" as smart_proxy #a0a0ff
participant "3Scale" as 3scale
box "Insights operator" #ddffdd
participant "&lt;$master&gt;\nControl logic" as operator
database "IO memory cache" as cache
end box
entity "CRD" as crd
collections "OCP\nWebConsole" as console

== Pulling data from Smart Proxy ==
operator -&gt; 3scale: Get\nrecommendations\norg ID\ncluster ID
3scale -&gt; smart_proxy: Get\nrecommendations\norg ID\ncluster ID
smart_proxy -&gt; 3scale: Recommendations\nfor cluster
3scale -&gt; operator: Recommendations\nfor cluster

== Exposing recommendations ==
operator -&gt; cache: Store\nrecommendations
cache -&gt; crd: Expose\nrecommendations

== Pulling from OCP WebConsole ==
console -&gt; crd: Read\nrecommendations
crd -&gt; console: Here are\nrequired data

@enduml
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na články s&nbsp;tématem programové tvorby grafů a diagramů</h2>

<p>V&nbsp;této kapitole jsou uvedeny odkazy na předchozí články, v&nbsp;nichž
jsme se zabývali tvorbou různých typů grafů a diagramů &ndash; a to
v&nbsp;naprosté většině případů s&nbsp;využitím nějakého doménově specifického
jazyka neboli DSL (<i>Domain Specific Language</i>) popř.&nbsp;nějakého
univerzálního programovacího jazyka:</p>

<ol>

<li>Nástroje pro tvorbu UML diagramů<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z&nbsp;příkazové řádky<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky/</a>
</li>

<li>Nástroje pro tvorbu UML diagramů z&nbsp;příkazové řádky (II)<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/">https://www.root.cz/clanky/nastroje-pro-tvorbu-uml-diagramu-z-prikazove-radky-ii/</a>
</li>

<li>Nástroje pro tvorbu grafů a diagramů z&nbsp;příkazové řádky<br />
<a href="https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/">https://www.root.cz/clanky/nastroje-pro-tvorbu-grafu-a-diagramu-z-prikazove-radky/</a>
</li>

<li>Sledování správy paměti v&nbsp;Pythonu s&nbsp;využitím nástroje objgraph<br />
<a href="https://www.root.cz/clanky/sledovani-spravy-pameti-v-pythonu-s-vyuzitim-nastroje-objgraph/">https://www.root.cz/clanky/sledovani-spravy-pameti-v-pythonu-s-vyuzitim-nastroje-objgraph/</a>
</li>

<li>Programová tvorba diagramů v&nbsp;jazyku Clojure s&nbsp;využitím knihovny Rhizome<br />
<a href="https://www.root.cz/clanky/programova-tvorba-diagramu-v-jazyku-clojure-s-vyuzitim-knihovny-rhizome/">https://www.root.cz/clanky/programova-tvorba-diagramu-v-jazyku-clojure-s-vyuzitim-knihovny-rhizome/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Napkin<br />
<a href="https://github.com/pinetr2e/napkin">https://github.com/pinetr2e/napkin</a>
</li>

<li>PlantUML (home page)<br />
<a href="http://plantuml.sourceforge.net/">http://plantuml.sourceforge.net/</a>
</li>

<li>PlantUML (download page)<br />
<a href="http://sourceforge.net/projects/plantuml/files/plantuml.jar/download">http://sourceforge.net/projects/plantuml/files/plantuml.jar/download</a>
</li>

<li>PlantUML (Language Reference Guide)<br />
<a href="http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf">http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf</a>
</li>

<li>Rhizome<br />
<a href="https://github.com/ztellman/rhizome">https://github.com/ztellman/rhizome</a>
</li>

<li>Swagger to UML<br />
<a href="https://github.com/nlohmann/swagger_to_uml">https://github.com/nlohmann/swagger_to_uml</a>
</li>

<li>pydiagrams<br />
<a href="https://github.com/billingtonm/pydiagrams">https://github.com/billingtonm/pydiagrams</a>
</li>

<li>graphviz(3) - Linux man page<br />
<a href="https://linux.die.net/man/3/graphviz">https://linux.die.net/man/3/graphviz</a>
</li>

<li>dot(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/dot">https://linux.die.net/man/1/dot</a>
</li>

<li>neato(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/neato">https://linux.die.net/man/1/neato</a>
</li>

<li>twopi(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/twopi">https://linux.die.net/man/1/twopi</a>
</li>

<li>circo(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/circo">https://linux.die.net/man/1/circo</a>
</li>

<li>fdp(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/fdp">https://linux.die.net/man/1/fdp</a>
</li>

<li>sfdp(1) - Linux man page<br />
<a href="https://linux.die.net/man/1/sfdp">https://linux.die.net/man/1/sfdp</a>
</li>

<li>Plain-text diagrams take shape in Asciidoctor!<br />
<a href="http://asciidoctor.org/new­s/2014/02/18/plain-text-diagrams-in-asciidoctor/">http://asciidoctor.org/new­s/2014/02/18/plain-text-diagrams-in-asciidoctor/</a>
</li>

<li>Graphviz – Graph Visualization Software<br />
<a href="http://www.graphviz.org/">http://www.graphviz.org/</a>
</li>

<li>graphviz (Manual Page)<br />
<a href="http://www.root.cz/man/7/graphviz/">http://www.root.cz/man/7/graphviz/</a>
</li>

<li>dot (Manual page)<br />
<a href="http://www.root.cz/man/1/dot/">http://www.root.cz/man/1/dot/</a>
</li>

<li>dot (Manual v&nbsp;PDF)<br />
<a href="https://graphviz.org/pdf/dot.1.pdf">https://graphviz.org/pdf/dot.1.pdf</a>
</li>

<li>Ditaa home page<br />
<a href="http://ditaa.sourceforge.net/">http://ditaa.sourceforge.net/</a>
</li>

<li>Ditaa introduction<br />
<a href="http://ditaa.sourceforge.net/#intro">http://ditaa.sourceforge.net/#intro</a>
</li>

<li>Ditaa usage<br />
<a href="http://ditaa.sourceforge.net/#usage">http://ditaa.sourceforge.net/#usage</a>
</li>

<li>Node, Edge and Graph Attributes<br />
<a href="http://www.graphviz.org/doc/in­fo/attrs.html">http://www.graphviz.org/doc/in­fo/attrs.html</a>
</li>

<li>Graphviz (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Graphviz">http://en.wikipedia.org/wiki/Graphviz</a>
</li>
 
<li>Unified Modeling Language<br />
<a href="https://en.wikipedia.org/wiki/Unified_Modeling_Language">https://en.wikipedia.org/wiki/Unified_Modeling_Language</a>
</li>

<li>UML basics: The sequence diagram<br />
<a href="http://www.ibm.com/developerworks/rational/library/3101.html">http://www.ibm.com/developerworks/rational/library/3101.html</a>
</li>

<li>UML 2 State Machine Diagrams: An Agile Introduction<br />
<a href="http://www.agilemodeling.com/artifacts/stateMachineDiagram.htm">http://www.agilemodeling.com/artifacts/stateMachineDiagram.htm</a>
</li>

<li>Sequence diagram (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Sequence_diagram">https://en.wikipedia.org/wiki/Sequence_diagram</a>
</li>

<li>UML 2 Sequence Diagrams: An Agile Introduction<br />
<a href="http://www.agilemodeling.com/artifacts/sequenceDiagram.htm">http://www.agilemodeling.com/artifacts/sequenceDiagram.htm</a>
</li>

<li>A Quick Introduction to UML Sequence Diagrams<br />
<a href="http://www.tracemodeler.com/articles/a_quick_introduction_to_uml_sequence_diagrams/">http://www.tracemodeler.com/articles/a_quick_introduction_to_uml_sequence_diagrams/</a>
</li>

<li>UML Sequence Diagrams<br />
<a href="https://www.uml-diagrams.org/sequence-diagrams.html">https://www.uml-diagrams.org/sequence-diagrams.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

