<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Manipulace s binárními datovými strukturami v Pythonu (2. část)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Manipulace s binárními datovými strukturami v Pythonu (2. část)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Manipulace s&nbsp;binárními datovými strukturami v&nbsp;Pythonu (2. část)</a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<pre>
<i>""" Zápis rastrového obrázku do formátu PNG."""</i>
&nbsp;
<i># Inspirace:</i>
<i># https://stackoverflow.com/questions/902761/saving-a-numpy-array-as-an-image</i>
&nbsp;
import struct
import zlib
&nbsp;
PNG_SIGNATURE = b'\x89PNG\r\n\x1a\n'
FILTER_TYPE = b'\x00'
&nbsp;
def <strong>prepare_raw_data</strong>(buffer, width, height):
    <i>"""Konverze barev pixelů z bufferu do podoby se specifikací filtru na</i>
    <i>každém řádku."""</i>
    raw_data = bytearray()
    offset = 0
    for _ in range(height):
        <i># nastavit filtr + zkopirovat jeden radek (scanline)</i>
        raw_data += FILTER_TYPE + buffer[offset:offset+width*3]
        <i># na dalsi radek ve zdrojovem bufferu</i>
        offset += width*3
    return raw_data
&nbsp;
&nbsp;
def <strong>png_chunk</strong>(png_tag, chunk_data):
    <i>"""Konstrukce jednoho PNG chunku s tagem i závěrečným kontrolním kódem."""</i>
    chunk_header = png_tag + chunk_data
    return (struct.pack("!I", len(chunk_data)) +
            chunk_header +
            struct.pack("!I", 0xFFFFFFFF &amp; zlib.crc32(chunk_header)))
&nbsp;
&nbsp;
def <strong>write_png</strong>(buffer, width, height):
    <i>"""Uložení rastrového obrázku z bufferu do PNG."""</i>
    raw_data = prepare_raw_data(buffer, width, height)
&nbsp;
    return b''.join([
        PNG_SIGNATURE,
        png_chunk(b'IHDR', struct.pack("!2I5B", width, height, 8, 2, 0, 0, 0)),
        png_chunk(b'IDAT', zlib.compress(raw_data, level=9, wbits=15)),
        png_chunk(b'IEND', b'')])
&nbsp;
&nbsp;
WIDTH = 256
HEIGHT = 256
&nbsp;
<i># buffer pro rastrová data</i>
pixels = bytearray(WIDTH*HEIGHT*3)
&nbsp;
<i># vybarvení testovacího obrázku</i>
index = 0
for i in range(HEIGHT):
    for j in range(WIDTH):
        pixels[index] = 0xff
        index+=1
        pixels[index] = i
        index+=1
        pixels[index] = j
        index+=1
&nbsp;
data = write_png(pixels, WIDTH, HEIGHT)
with open("test.png", 'wb') as fout:
    fout.write(data)
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady využívající standardní knihovnu
<i>struct</i> lze nalézt v&nbsp;repositáři <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady:</p>

<table>
<tr><th>#<th>Příklad</th><th>Stručný popis</th><th>Adresa příkladu</th></tr></i>
<tr><td> 1</td><td>bytes_type.py</td><td>konstrukce hodnoty typu <strong>bytes</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_type.py</a></td></tr>
<tr><td> 2</td><td>bytes_literal.py</td><td>literál popisující hodnotu typu <strong>bytes</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_literal.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_literal.py</a></td></tr>
<tr><td> 3</td><td>bytes_literal_no_ascii.py</td><td>literál s&nbsp;neplatnými znaky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_literal_no_ascii.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_literal_no_ascii.py</a></td></tr>
<tr><td> 4</td><td>bytes_hex.py</td><td>převod hodnoty typu <strong>bytes</strong> na řetězec s&nbsp;hexadecimálními hodnotami</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_hex.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_hex.py</a></td></tr>
<tr><td> 5</td><td>bytes_fromhex.py</td><td>převod řetězce s&nbsp;hexadecimálními hodnotami na sekvenci bajtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_fromhex.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_fromhex.py</a></td></tr>
<tr><td> 6</td><td>bytes_fromhex_err.py</td><td>převod řetězce s&nbsp;nezarovnanými hexadecimálními hodnotami na sekvenci bajtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_fromhex_err.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_fromhex_err.py</a></td></tr>
<tr><td> 7</td><td>bytes_are_immutable.py</td><td>test, zda jsou hodnoty typu <strong>bytes</strong> skutečně neměnitelné</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_are_immutable.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_are_immutable.py</a></td></tr>
<tr><td> 8</td><td>bytes_encode.py</td><td>převod řetězce do zadaného kódování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_encode.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytes_encode.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>bytearray_type.py</td><td>konstrukce hodnoty typu <strong>bytearray</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_type.py</a></td></tr>
<tr><td>10</td><td>bytearray_is_mutable.py</td><td>test, zda jsou hodnoty typu <strong>bytearray</strong> měnitelné</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_is_mutable.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_is_mutable.py</a></td></tr>
<tr><td>11</td><td>bytearray_hex.py</td><td>převod hodnoty typu <strong>bytearray</strong> na řetězec s&nbsp;hexadecimálními hodnotami</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_hex.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_hex.py</a></td></tr>
<tr><td>12</td><td>bytearray_fromhex.py</td><td>převod řetězce s&nbsp;hexadecimálními hodnotami na měnitelné pole bajtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_fromhex.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_fromhex.py</a></td></tr>
<tr><td>13</td><td>bytearray_encode.py</td><td>převod ASCII řetězce do zadaného kódování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_encode.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_encode.py</a></td></tr>
<tr><td>14</td><td>bytearray_encode_2.py</td><td>převod řetězce s&nbsp;nabodeníčky do zadaného kódování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_encode_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/bytearray_encode_2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>14</td><td>string_to_bytes.py</td><td>převod řetězce na sekvenci bajtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/string_to_bytes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/string_to_bytes.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>struct_help.py</td><td>nápověda k&nbsp;balíčku <strong>struct</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/struct_help.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/struct_help.py</a></td></tr>
<tr><td>16</td><td>pack_byte.py</td><td>uložení hodnoty typu <strong>byte</strong> do sekvence bajtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_byte.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_byte.py</a></td></tr>
<tr><td>17</td><td>pack_byte_negative.py</td><td>pokus o uložení záporné hodnoty jakoby se jednalo o bajt bez znaménka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_byte_negative.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_byte_negative.py</a></td></tr>
<tr><td>18</td><td>pack_words.py</td><td>uložení celočíselné numerické hodnoty ve formě slova s&nbsp;různou bitovou šířkou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_words.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_words.py</a></td></tr>
<tr><td>19</td><td>pack_words_endianess.py</td><td>řízení little/big endian při ukládání slov</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_words_endianess.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_words_endianess.py</a></td></tr>
<tr><td>20</td><td>pack_floats.py</td><td>uložení hodnoty typu <strong>float</strong> do sekvence bajtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_floats.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_floats.py</a></td></tr>
<tr><td>21</td><td>pack_png_header_1.py</td><td>uložení části hlavičky grafického formátu PNG, první verze</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_png_header_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_png_header_1.py</a></td></tr>
<tr><td>22</td><td>pack_png_header_2.py</td><td>uložení části hlavičky grafického formátu PNG, druhá verze</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_png_header_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/pack_png_header_2.py</a></td></tr>
<tr><td>23</td><td>write_png.py</td><td>zápis bufferu s&nbsp;rastrovým obrázkem do formátu PNG</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/write_png.py">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/write_png.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>24</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/</a></td></tr>
<tr><td>25</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/">https://github.com/tisnik/most-popular-python-libs/blob/master/binary_structs/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Python standard types: bytes<br />
<a href="https://docs.python.org/3.8/library/stdtypes.html#bytes">https://docs.python.org/3.8/library/stdtypes.html#bytes</a>
</li>

<li>Python standard types: bytearray<br />
<a href="https://docs.python.org/3.8/library/stdtypes.html#bytearray-objects">https://docs.python.org/3.8/library/stdtypes.html#bytearray-objects</a>
</li>

<li>Bytes and Bytearray Operations<br />
<a href="https://docs.python.org/3.8/library/stdtypes.html#bytes-methods">https://docs.python.org/3.8/library/stdtypes.html#bytes-methods</a>
</li>

<li>Standard encodings<br />
<a href="https://docs.python.org/3.8/library/codecs.html#standard-encodings">https://docs.python.org/3.8/library/codecs.html#standard-encodings</a>
</li>

<li>class memoryview<br />
<a href="https://docs.python.org/3.8/library/stdtypes.html#memoryview">https://docs.python.org/3.8/library/stdtypes.html#memoryview</a>
</li>

<li>struct &ndash; Interpret bytes as packed binary data<br />
<a href="https://docs.python.org/3/library/struct.html">https://docs.python.org/3/library/struct.html</a>
</li>

<li>C-like structures in Python<br />
<a href="https://stackoverflow.com/questions/35988/c-like-structures-in-python">https://stackoverflow.com/questions/35988/c-like-structures-in-python</a>
</li>

<li>python3: bytes vs bytearray, and converting to and from strings<br />
<a href="https://stackoverflow.com/questions/62903377/python3-bytes-vs-bytearray-and-converting-to-and-from-strings">https://stackoverflow.com/questions/62903377/python3-bytes-vs-bytearray-and-converting-to-and-from-strings</a>
</li>

<li>Základní informace o MessagePacku<br />
<a href="https://msgpack.org/">https://msgpack.org/</a>
</li>

<li>Balíček msgpack na PyPi<br />
<a href="https://pypi.org/project/msgpack/">https://pypi.org/project/msgpack/</a>
</li>

<li>MessagePack na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/MessagePack">https://en.wikipedia.org/wiki/MessagePack</a>
</li>

<li>Comparison of data-serialization formats (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Comparison_of_data-serialization_formats">https://en.wikipedia.org/wiki/Comparison_of_data-serialization_formats</a>
</li>

<li>Repositáře msgpacku<br />
<a href="https://github.com/msgpack">https://github.com/msgpack</a>
</li>

<li>Specifikace ukládání různých typů dat<br />
<a href="https://github.com/msgpack/msgpack/blob/master/spec.md">https://github.com/msgpack/msgpack/blob/master/spec.md</a>
</li>

<li>Podpora MessagePacku v&nbsp;různých programovacích jazycích<br />
<a href="https://msgpack.org/#languages">https://msgpack.org/#languages</a>
</li>

<li>Základní implementace formátu msgpack pro programovací jazyk Go<br />
<a href="https://github.com/msgpack/msgpack-go">https://github.com/msgpack/msgpack-go</a>
</li>

<li>go-codec<br />
<a href="https://github.com/ugorji/go">https://github.com/ugorji/go</a>
</li>

<li>Gobs of data (odlišný serializační formát)<br />
<a href="https://blog.golang.org/gobs-of-data">https://blog.golang.org/gobs-of-data</a>
</li>

<li>Formát BSON (odlišný serializační formát)<br />
<a href="http://bsonspec.org/">http://bsonspec.org/</a>
</li>

<li>Problematika nulových hodnot v Go, aneb proč nil != nil<br />
<a href="https://www.root.cz/clanky/problematika-nulovych-hodnot-v-go-aneb-proc-nil-nil/">https://www.root.cz/clanky/problematika-nulovych-hodnot-v-go-aneb-proc-nil-nil/</a>
</li>

<li>IEEE-754 Floating Point Converter<br />
<a href="https://www.h-schmidt.net/FloatConverter/IEEE754.html">https://www.h-schmidt.net/FloatConverter/IEEE754.html</a>
</li>

<li>Base Convert: IEEE 754 Floating Point<br />
<a href="https://baseconvert.com/ieee-754-floating-point">https://baseconvert.com/ieee-754-floating-point</a>
</li>

<li>Brain Floating Point &ndash; nový formát uložení čísel pro strojové učení a chytrá čidla<br />
<a href="https://www.root.cz/clanky/brain-floating-point-ndash-novy-format-ulozeni-cisel-pro-strojove-uceni-a-chytra-cidla/">https://www.root.cz/clanky/brain-floating-point-ndash-novy-format-ulozeni-cisel-pro-strojove-uceni-a-chytra-cidla/</a>
</li>

<li>Marshalling (computer science)<br />
<a href="https://en.wikipedia.org/wiki/Marshalling_(computer_science)">https://en.wikipedia.org/wiki/Marshalling_(computer_science)</a>
</li>

<li>Protocol Buffers<br />
<a href="https://protobuf.dev/">https://protobuf.dev/</a>
</li>

<li>Protocol Buffers<br />
<a href="https://en.wikipedia.org/wiki/Protocol_Buffers">https://en.wikipedia.org/wiki/Protocol_Buffers</a>
</li>

<li>What is the difference between Serialization and Marshaling?<br />
<a href="https://stackoverflow.com/questions/770474/what-is-the-difference-between-serialization-and-marshaling">https://stackoverflow.com/questions/770474/what-is-the-difference-between-serialization-and-marshaling</a>
</li>

<li>Comparison of data-serialization formats<br />
<a href="https://en.wikipedia.org/wiki/Comparison_of_data-serialization_formats">https://en.wikipedia.org/wiki/Comparison_of_data-serialization_formats</a>
</li>

<li>PNG (Portable Network Graphics) Specification, Version 1.2<br />
<a href="http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html">http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

