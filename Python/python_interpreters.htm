<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython</a></p>
<p><a href="#k02">*** 2. První používaný koncept: klasická integrovaná vývojová prostředí</a></p>
<p><a href="#k03">*** 3. Alternativní koncepty: interaktivní smyčka REPL a diář (notebook)</a></p>
<p><a href="#k04">*** 4. Interaktivní smyčka REPL v&nbsp;různých jazycích a nástrojích</a></p>

<p><a href="#k04">*** 4. Projekt <strong>bpython</strong></a></p>
<p><a href="#k05">*** 5. Instalace balíčku <strong>python</strong></a></p>

<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. Projekt <strong>ptpython</strong></a></p>
<p><a href="#k07">*** 7. Instalace balíčku <strong>ptpython</strong></a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. Projekt <strong>DreamPie</strong></a></p>
<p><a href="#k11">*** 11. Instalace balíčku <strong>dreampie</strong></a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. IPython ve funkci alternativního konceptu vývojového prostředí</a></p>
<p><a href="#k15">*** 15. První používaný koncept: klasická integrovaná vývojová prostředí</a></p>
<p><a href="#k16">*** 16. Alternativní koncepty: interaktivní smyčka REPL a diář (notebook)</a></p>
<p><a href="#k17">*** 17. Instalace balíčku <strong>ipython</strong></a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython</h2>

<p>V&nbsp;dnešním článku se ve stručnosti seznámíme se čtveřicí projektů, které se snaží &ndash; každý ovšem poněkud jiným způsobem &ndash; vylepšit původní interpret jazyka Python, přesněji řečeno interpret, jenž je nedílnou součástí CPythonu jak verze 2.x, tak i 3.x. Pravděpodobně všichni vývojáři, kteří jazyk Python používají, se seznámili s&nbsp;interaktivním režimem Pythonu. Tento režim, který se taktéž někdy nazývá smyčka REPL (<i>Read-Eval-Print-Loop</i>) se použije ve chvíli, kdy spustíme interpret Pythonu bez specifikace skriptu, který se má spustit.</p>

*** image ***
<p><i>Obrázek 1: Interaktivní smyčka REPL programovacího jazyka Python verze
2.7.6.</i></p>

*** image ***
<p><i>Obrázek 2: Interaktivní smyčka REPL programovacího jazyka Python verze
3.6.3 (což je již postarší verze).</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. První používaný koncept: klasická integrovaná vývojová prostředí</h2>

<p>Klasická integrovaná vývojová prostředí jsou většinou určena pro práci na rozsáhlejších projektech, které se skládají z&nbsp;mnoha zdrojových souborů a většinou mají i košatou hierarchií objektů (ostatně právě to byl jeden z&nbsp;hlavních důvodů jejich vzniku &ndash; programátoři se museli začít orientovat ve stále větších a taktéž komplikovanějších projektech). Po takových integrovaných vývojových prostředích uživatelé většinou požadují především co nejsnadnější orientaci ve zpracovávaném projektu, dále funkce pro automatické doplňování kódu (například názvů metod), přístup ke všem globálním symbolům (moduly, třídy, globální proměnné, funkce) společně s&nbsp;interaktivní filtrací seznamu symbolů, podporu pro ladění vznikajících aplikací (integrovaný debugger či dokonce profiler) a popř.&nbsp;i integraci s&nbsp;nástroji pro testování a refaktoring zdrojových kódů. V&nbsp;případě Pythonu se navíc většinou očekává i integrace s&nbsp;interaktivní smyčkou REPL Pythonu.</p>

*** image ***
<p><i>Obrázek 3: Jedna z&nbsp;možností nabízená integrovaným vývojovým prostředím PyDev (založeno na Eclipse): spouštění jednotkových testů.</i></p>

<p>Mezi takto koncipovaná integrovaná vývojová prostředí patří <a href="http://mojefedora.cz/eclipse-integrovane-vyvojove-prostredi-pro-javu-i-dalsi-programovaci-jazyky/">Eclipse</a> (Java Development Toolkit, C/C++ Development Toolkit, <a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-pydev/">PyDev</a>, ...), IDEA, Netbeans (opět s&nbsp;podporou pro větší množství jazyků), Visual Studio či poněkud méně ambiciózní projekty, mezi které patří <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-1-dil/">Anjuta</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/">Geany</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-2-dil/">Code::Blocks</a>, Qt Creator, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">IDLE</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">Eric</a>, <a href="http://mojefedora.cz/seznameni-s-python-ide-spyder/">Spyder</a>, <a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/">Gambas</a> popř.&nbsp;<a href="http://mojefedora.cz/vyvojova-prostredi-ve-fedore-3-dil/">Lazarus</a> (mnohá z&nbsp;těchto prostředí se zaměřují na podporu jen jednoho programovacího jazyka, další prostředí se snaží být univerzálně použitelná). Do určité míry je možné integrované vývojové prostředí vytvořit například i z&nbsp;textových editorů Vim, Emacs a Atom doplněných o potřebné moduly (pluginy).</p>

*** image ***
<p><i>Obrázek 4: I pokročilý textový editor Atom je možné nakonfigurovat do podoby integrovaného vývojového prostředí.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Alternativní koncepty: interaktivní smyčka REPL a diář (notebook)</h2>

<p>Někteří programátoři, popř.&nbsp;ti uživatelé, kteří programovací jazyk musí používat pro řešení problémů ve své profesi (ovšem vývoj aplikací naopak není jejich hlavní pracovní náplní), však mohou preferovat dosti odlišný způsob práce, který je v&nbsp;mnohem větší míře založen na interakci mezi vývojářem a systémem nebo vznikající (mini)aplikací, jež je mnohdy vysoce jednoúčelová. V&nbsp;takových případech ustupuje správa projektů poněkud do pozadí a naopak se začíná využívat odlišný druh vývojového prostředí založený buď na takzvané interaktivní smyčce REPL (<i>Read-Eval-Print-Loop</i>) nebo na konceptu takzvaných diářů (<i>notebooks</i>), které jsou už poměrně dlouho velmi populární především v&nbsp;systémech pro numerickou matematiku, analýzy, statistické výpočty, symbolickou matematiku (manipulace se symboly a výrazy, integrace, derivace, zjednodušování výrazů atd.) a dnes taktéž pro machine learning (ML).</p>

*** image ***
<p><i>Obrázek 5: Za zjednodušenou formu interaktivní smyčky REPL je možné považovat i přímý mód (direct mode) použitý například v&nbsp;BASICu. Na tomto screenshotu je v&nbsp;přímém módu zapsán příkaz <strong>LIST</strong>.</i></p>

<p>Poměrně velkou předností těchto systémů oproti klasickým integrovaným vývojovým prostředím je zejména okamžitá zpětná vazba systému na zadávané deklarace a příkazy. To uživatelům umožňuje se snadněji a taktéž rychleji seznámit jak s&nbsp;vlastním programovacím jazykem (nalezení chyby na jediném programovém řádku je určitě snazší, než analýza mnohdy několikastránkového výpisu vytvořeného překladačem), tak i s&nbsp;použitými knihovnami. To je dnes vlastně ještě důležitější, protože mnohdy vývoj spočívá v&nbsp;&bdquo;lepení&ldquo; již existujících komponent či knihoven. Aplikace vytvářené v&nbsp;takto koncipovaných prostředích většinou vznikají systémem zdola-nahoru (<i>bottom-up programming</i>), tj.&nbsp;postupně se skládají z&nbsp;funkcí a tříd, které mohou být ihned po své deklaraci otestovány.</p>

*** image ***
<p><i>Obrázek 6: Koncept diáře je použit například v&nbsp;nástroji Gorilla REPL, který mohou využít programátoři pracující s&nbsp;jazykem Clojure.</i></p>

<p><div class="rs-tip-major">Poznámka: s&nbsp;konceptem &bdquo;notebooku&ldquo; jsme se již na stránkách Rootu několikrát setkali, například při popisu projektu <a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/#k01">Gorilla určeného pro jazyk Clojure</a> zmíněného na předchozím screenshotu. Ovšem mnohem známějším projektem je IPython zkombinovaný s&nbsp;<a href="https://jupyter.org/">Jupyter notebookem</a>.</div></p>

*** image ***
<p><i>Obrázek 7: Textové rozhraní IPythonu, který je zde založen na starším interpretru Pythonu 2.7.x. V&nbsp;dalším textu se pochopitelně budeme zabývat především verzí 3.x.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Interaktivní smyčka REPL v&nbsp;různých jazycích a nástrojích</h2>

<p>S&nbsp;principem a použitím interaktivní smyčky REPL jsme se již na stránkách Rootu setkali, a to dokonce mnohokrát. Kromě článků, které se věnovaly klasickým Unixovým shelům typu <a href="https://www.root.cz/clanky/programovani-v-bash-shellu/">BASH</a>, <a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/">tcsh</a> či <a href="https://www.root.cz/clanky/zuzo-shell/">zsh</a> (a rozhraní shellů není nic jiného, než interaktivní REPL), jsme smyčku REPL použili například při popisu <a href="https://www.root.cz/serialy/programovaci-jazyk-julia/">programovacího jazyka Julia</a> či <a href="https://www.root.cz/vyhledavani/?qs=clojure">jazyka Clojure</a>.</p>

<p>Některé smyčky REPL jsou pojaty přísně minimalisticky, což je případ dnes již spíše minimálně používaného <a href="https://www.root.cz/serialy/programovaci-jazyk-tcl/">jazyka TCL</a>. Tato interaktivní REPL dokonce ani neobsahuje historii příkazů či podporu pro pohyb kurzoru na příkazovém řádku:</p>

<pre>
% 
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se liší i znak výzvy (<i>prompt</i>), protože se namísto obvyklého &gt; používá znak procenta.</div></p>

<p>Další interaktivní REPL alespoň uživatele informují, v&nbsp;jakém prostředí se nachází. To je případ REPL (opět velmi jednoduše pojaté) programovacího jazyka Lua:</p>

<pre>
Lua 5.2.3  Copyright (C) 1994-2013 Lua.org, PUC-Rio
&gt;
</pre>

<p>REPL projektu <a href="https://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua/">LuaJIT</a> vypadá nepatrně odlišně:</p>

<pre>
LuaJIT 2.1.0-beta3 -- Copyright (C) 2005-2017 Mike Pall. http://luajit.org/
JIT: ON SSE2 SSE3 SSE4.1 BMI2 fold cse dce fwd dse narrow loop abc sink fuse
&gt;
</pre>

<p>Nově se plnohodnotný REPL objevil i v&nbsp;jazyku Clojure; v&nbsp;předchozích verzích se používal dále zmíněný alternativní nREPL:</p>

<pre>
Clojure 1.9.0
user=&gt;
</pre>

<p>Podobně vypadá REPL <a href="https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/">programovacího jazyka Pixie</a> (to vlastně není nijak překvapivé, protože se opět jedná o jednu z&nbsp;v:</p>

<pre>
user =&gt;
</pre>

<p>Interaktivní rozhraní projektu GNU Guile, což je jedna z&nbsp;variant programovacího jazyka Scheme:</p>

<pre>
GNU Guile 2.0.14
Copyright (C) 1995-2016 Free Software Foundation, Inc.
&nbsp;
Guile comes with ABSOLUTELY NO WARRANTY; for details type `,show w'.
This program is free software, and you are welcome to redistribute it
under certain conditions; type `,show c' for details.
&nbsp;
Enter `,help' for help.
scheme@(guile-user)&gt; 
</pre>

<p>Plnohodnotnou smyčku REPL se všemi vymoženostmi nabízí zejména jazyk Julia, což ostatně není překvapivé, protože se tento jazyk používá právě pro inkrementální tvorbu v&nbsp;interaktivním prostředí:</p>

<pre>
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 1.0.0 (2018-08-08)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |
&nbsp; 
julia&gt;
</pre>

<p>Podobně je tomu v&nbsp;případě programovacího jazyka Clojure doplněného o <i>nREPL</i> (ten lze spustit například příkazem <strong>lein repl</strong>):</p>

<pre>
nREPL server started on port 42733 on host 127.0.0.1 - nrepl://127.0.0.1:42733
REPL-y 0.3.7, nREPL 0.2.12
Clojure 1.8.0
OpenJDK 64-Bit Server VM 1.8.0_171-b10
    Docs: (doc function-name-here)
          (find-doc "part-of-name-here")
  Source: (source function-name-here)
 Javadoc: (javadoc java-object-or-class-here)
    Exit: Control+D or (exit) or (quit)
 Results: Stored in vars *1, *2, *3, an exception in *e
&nbsp;
user=&gt; 
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Projekt <strong>bpython</strong></h2>

<p>Po delším úvodu se konečně dostáváme k&nbsp;projektům, které se snaží původní interaktivní režim programovacího jazyka Python nějakým způsobem vylepšit. První z&nbsp;těchto projektů se jmenuje <strong>bpython</strong> a nabízí uživatelům mj.&nbsp;i tyto možnosti, které v&nbsp;původním interpreteru nenajdeme:</p>

<ol>
<li>Zvýraznění syntaxe přímo při zápisu jednotlivých řádků, které se mají interaktivně spustit.</li>
<li>Automatické odsazení řádků, které se nachází uvnitř smyček, podmínek atd.</li>
<li>Zobrazení seznamu klíčových slov a funkcí začínajících již zapsaným prefixem (bez nutnosti použití klávesové zkratky).</li>
<li>Automatické doplnění klíčového slova či funkce pomocí klávesy <strong>Tab</strong>.</li>
<li>Zobrazení nápovědy s&nbsp;parametry volané funkce.</li>
<li>A samozřejmě je podporován i Python 3.x (což už by dnes měl být standard).</li>
</ol>

"Rewind" function to pop the last line of code from memory and re-evaluate.
Send the code you've entered off to a pastebin.
Save the code you've entered to a file.



<p><a name="k05"></a></p>
<h2 id="k05">5. Instalace balíčku <strong>bpython</strong></h2>

<p></p>

<pre>
$ <strong>pip3 install --user bpython</strong>
&nbsp;
Collecting bpython
  Using cached https://files.pythonhosted.org/packages/c7/0c/22459d1c7f45faada154b9bb4e04c0000b9cc691cd232b7915667f0a4574/bpython-0.18-py2.py3-none-any.whl
Requirement already satisfied: curtsies&gt;=0.1.18 in /home/tester/.local/lib/python3.6/site-packages (from bpython)
Requirement already satisfied: six&gt;=1.5 in /home/tester/.local/lib/python3.6/site-packages (from bpython)
Requirement already satisfied: pygments in /home/tester/.local/lib/python3.6/site-packages (from bpython)
Requirement already satisfied: requests in /usr/lib/python3.6/site-packages (from bpython)
Requirement already satisfied: greenlet in /home/tester/.local/lib/python3.6/site-packages (from bpython)
Requirement already satisfied: blessings&gt;=1.5 in /home/tester/.local/lib/python3.6/site-packages (from curtsies&gt;=0.1.18-&gt;bpython)
Requirement already satisfied: wcwidth&gt;=0.1.4 in /home/tester/.local/lib/python3.6/site-packages (from curtsies&gt;=0.1.18-&gt;bpython)
Requirement already satisfied: typing in /home/tester/.local/lib/python3.6/site-packages (from curtsies&gt;=0.1.18-&gt;bpython)
Requirement already satisfied: urllib3==1.20 in /usr/lib/python3.6/site-packages (from requests-&gt;bpython)
Installing collected packages: bpython
Successfully installed bpython-0.18
</pre>

<p></p>

<pre>
$ <strong>whereis bpython</strong>
&nbsp;
bpython: /home/tester/.local/bin/bpython
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. Projekt <strong>ptpython</strong></h2>

Syntax highlighting.
Multiline editing (the up arrow works).
Autocompletion.
Mouse support. [1]
Support for color schemes.
Support for bracketed paste [2].
Both Vi and Emacs key bindings.
Support for double width (Chinese) characters.



<p><a name="k07"></a></p>
<h2 id="k07">7. Instalace balíčku <strong>ptpython</strong></h2>

<pre>
$ <strong>pip3 install --user ptpython</strong>
&nbsp;
Collecting ptpython
  Downloading https://files.pythonhosted.org/packages/01/16/5260314dbc2a03792e277e67578fee099ae1770db58d4f7fdda03225aef9/ptpython-2.0.4-py3-none-any.whl (47kB)
    100% |████████████████████████████████| 51kB 796kB/s 
Requirement already satisfied: pygments in /home/tester/.local/lib/python3.6/site-packages (from ptpython)
Requirement already satisfied: prompt-toolkit&lt;2.1.0,&gt;=2.0.6 in /home/tester/.local/lib/python3.6/site-packages (from ptpython)
Requirement already satisfied: jedi&gt;=0.9.0 in /home/tester/.local/lib/python3.6/site-packages (from ptpython)
Requirement already satisfied: docopt in /usr/lib/python3.6/site-packages (from ptpython)
Requirement already satisfied: wcwidth in /home/tester/.local/lib/python3.6/site-packages (from prompt-toolkit&lt;2.1.0,&gt;=2.0.6-&gt;ptpython)
Requirement already satisfied: six&gt;=1.9.0 in /home/tester/.local/lib/python3.6/site-packages (from prompt-toolkit&lt;2.1.0,&gt;=2.0.6-&gt;ptpython)
Requirement already satisfied: parso&gt;=0.3.0 in /home/tester/.local/lib/python3.6/site-packages (from jedi&gt;=0.9.0-&gt;ptpython)
Installing collected packages: ptpython
Successfully installed ptpython-2.0.4
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Projekt <strong>DreamPie</strong></h2>


DreamPie features a new concept for an interactive shell: the window is divided into the history box, which lets you view previous commands and their output, and the code box, where you write your code. This allows you to edit any amount of code, just like in your favorite editor, and execute it when it's ready. You can also copy code from anywhere, edit it and run it instantly.
The Copy code only command will copy the code you want to keep, so you can save it in a file. The code is already formatted nicely with a four-space indentation.
Features automatic completion of attributes and file names.
Automatically displays function arguments and documentation.
Keeps your recent results in the result history, for later use.
Can automatically fold long outputs, so you can concentrate on what's important.
Lets you save the history of the session as an HTML file, for future reference. You can then load the history file into DreamPie, and quickly redo previous commands.
Automatically adds parentheses and optionally quotes when you press space after functions and methods. For example, type execfile fn and get execfile("fn").
Supports interactive plotting with matplotlib.
Supports virtually all Python implementations: 2.5+, 3.1+, Jython, IronPython and PyPy.
Works on Windows, Linux and Mac.
Extremely fast and responsive.
Free software licensed under GPL version 3.



<p><a name="k11"></a></p>
<h2 id="k11">11. Instalace balíčku <strong>dreampie</strong></h2>

<pre>
$ <strong>pip3 install --user dreampie</strong>
&nbsp;
Collecting dreampie
  Downloading https://files.pythonhosted.org/packages/1a/e1/aabfb33dd1d204c37f6858ccd7ba0de6f8ddfb02ca6d660fd8a12c6677ea/dreampie-1.2.1.tar.gz (168kB)
    100% |████████████████████████████████| 174kB 1.2MB/s 
Installing collected packages: dreampie
  Running setup.py install for dreampie ... done
Successfully installed dreampie-1.2.1
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k17">16. Instalace balíčku <strong>ipython</strong></h2>

<pre>
$ <strong>pip3 install --user ipython</strong>
&nbsp;
Collecting ipython
  Downloading https://files.pythonhosted.org/packages/46/b5/ca080401b8dbde51a0f4377b4e22ce02b266340a1cda389b6dea702d06d1/ipython-7.4.0-py3-none-any.whl (769kB)
    100% |████████████████████████████████| 778kB 1.1MB/s 
Requirement already satisfied: jedi&gt;=0.10 in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: pygments in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: pickleshare in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: traitlets&gt;=4.2 in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: prompt-toolkit&lt;2.1.0,&gt;=2.0.0 in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: setuptools&gt;=18.5 in /usr/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: pexpect; sys_platform != "win32" in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: backcall in /home/tester/.local/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: decorator in /usr/lib/python3.6/site-packages (from ipython)
Requirement already satisfied: parso&gt;=0.3.0 in /home/tester/.local/lib/python3.6/site-packages (from jedi&gt;=0.10-&gt;ipython)
Requirement already satisfied: six in /home/tester/.local/lib/python3.6/site-packages (from traitlets&gt;=4.2-&gt;ipython)
Requirement already satisfied: ipython-genutils in /home/tester/.local/lib/python3.6/site-packages (from traitlets&gt;=4.2-&gt;ipython)
Requirement already satisfied: wcwidth in /home/tester/.local/lib/python3.6/site-packages (from prompt-toolkit&lt;2.1.0,&gt;=2.0.0-&gt;ipython)
Requirement already satisfied: ptyprocess&gt;=0.5 in /home/tester/.local/lib/python3.6/site-packages (from pexpect; sys_platform != "win32"-&gt;ipython)
Installing collected packages: ipython
Successfully installed ipython-7.4.0
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>Read-eval-print loop (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop">https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop</a>
</li>

<li>Domovská stránka programovacího jazyka Python<br />
<a href="https://www.python.org/">https://www.python.org/</a>
</li>

<li>Domovská stránka projektu bpython<br />
<a href="https://bpython-interpreter.org/">https://bpython-interpreter.org/</a>
</li>

<li>Projekt bpython na PyPi<br />
<a href="https://pypi.org/project/bpython/">https://pypi.org/project/bpython/</a>
</li>

<li>Git repositář projektu bpython<br />
<a href="https://github.com/bpython/bpython">https://github.com/bpython/bpython</a>
</li>

<li>Projekt ptpython na PyPi<br />
<a href="https://pypi.org/project/ptpython/">https://pypi.org/project/ptpython/</a>
</li>

<li>Git repositář projektu ptpython<br />
<a href="https://github.com/prompt-toolkit/ptpython">https://github.com/prompt-toolkit/ptpython</a>
</li>

<li>Domovská stránka projektu DreamPie<br />
<a href="http://www.dreampie.org/">http://www.dreampie.org/</a>
</li>

<li>Projekt DreamPie na PyPi<br />
<a href="https://pypi.org/project/dreampie/">https://pypi.org/project/dreampie/</a>
</li>

<li>Git repositář projektu DreamPie<br />
<a href="https://github.com/noamraph/dreampie">https://github.com/noamraph/dreampie</a>
</li>

<li>Domovská stránka projektu IPython<br />
<a href="https://ipython.org/">https://ipython.org/</a>
</li>

<li>IPython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IPython">https://en.wikipedia.org/wiki/IPython</a>
</li>

<li>Projekt IPython na PyPi<br />
<a href="https://pypi.org/project/ipython/">https://pypi.org/project/ipython/</a>
</li>

<li>Dokumentace k IPythonu<br />
<a href="http://ipython.org/documentation.html#">http://ipython.org/documentation.html#</a>
</li>

<li>IPython Tutorial<br />
<a href="http://ipython.readthedocs.org/en/stable/interactive/tutorial.html">http://ipython.readthedocs.org/en/stable/interactive/tutorial.html</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: IPython a IPython Notebook<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: praktické použití IPython Notebooku a knihovny Numpy<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: praktické použití IPython Notebooku a knihovny Numpy (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-prakticke-pouziti-ipython-notebooku-a-knihovny-numpy-2-cast/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib/</a>
</li>

<li>Integrovaná vývojová prostředí ve Fedoře: vykreslování grafů s využitím knihoven Numpy a matplotlib (2.část)<br />
<a href="http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/">http://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-vykreslovani-grafu-s-vyuzitim-knihoven-numpy-a-matplotlib-2-cast/</a>
</li>

<li>Is IPython Notebook ever used as an IDE, or merely for presentations?<br />
<a href="https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/">https://www.reddit.com/r/IPython/comments/1uk7hp/is_ipython_notebook_ever_used_as_an_ide_or_merely/</a>
</li>

<li>The IDE as a Bad Programming Language Enabler <br />
<a href="https://dzone.com/articles/ide-bad-programming-language">https://dzone.com/articles/ide-bad-programming-language</a>
</li>

<li>Enhanced Interactive Python with IPython<br />
<a href="http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html">http://www.onlamp.com/pub/a/python/2005/01/27/ipython.html</a>
</li>

<li>Příkazový řádek – přítel nejvěrnější<br />
<a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi/">https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi/</a>
</li>

<li>Příkazový řádek - přítel nejvěrnější (2)<br />
<a href="https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/">https://www.root.cz/clanky/prikazovy-radek-pritel-nejvernejsi-2/</a>
</li>

<li>Picking a Python Interpreter (3 vs 2)<br />
<a href="https://docs.python-guide.org/starting/which-python/">https://docs.python-guide.org/starting/which-python/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

