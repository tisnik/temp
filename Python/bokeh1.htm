<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba interaktivních grafů pro webové stránky a aplikace s využitím knihovny Bokeh</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba interaktivních grafů pro webové stránky a aplikace s využitím knihovny Bokeh</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Na stránkách Roota jsme se již setkali s několika nástroji určenými pro tvorbu grafů. Připomeňme si například gnuplot či Matplotlib. Dnes se seznámíme s knihovnou Bokeh, která je určena pro tvorbu grafů v Pythonu, přičemž výsledkem je interaktivní webová stránka s &bdquo;živým&ldquo; grafem.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Tvorba interaktivních grafů pro webové stránky a aplikace s&nbsp;využitím knihovny Bokeh</a></p>
<p><a href="#k02">2. Technologie, na nichž je knihovna Bokeh postavena</a></p>
<p><a href="#k03">3. Instalace knihovny Bokeh</a></p>
<p><a href="#k04">4. Zobrazení jednoduchého grafu s&nbsp;naměřenými hodnotami</a></p>
<p><a href="#k05">5. Zobrazení titulku a legendy v&nbsp;grafu</a></p>
<p><a href="#k06">6. Kooperace s&nbsp;knihovnou NumPy, porovnání s&nbsp;Matplotlibem</a></p>
<p><a href="#k07">7. Vykreslení průběhu dvou funkcí do jednoho grafu</a></p>
<p><a href="#k08">8. Alternativní způsob specifikace barev s&nbsp;využitím trojice hexadecimálních hodnot</a></p>
<p><a href="#k09">9. Další styly vykreslení průběhu funkce/hodnot do grafu</a></p>
<p><a href="#k10">10. Sloupcové grafy</a></p>
<p><a href="#k11">11. Sloupcový graf se specifikací začátků a konce sloupců</a></p>
<p><a href="#k12">12. Vykreslení kružnice a spirály (parametrické křivky)</a></p>
<p><a href="#k13">13. Export grafu do rastrového obrázku ve formáty PNG</a></p>
<p><a href="#k14">*** 14. Nastavení stylu zobrazení legendy</a></p>
<p><a href="#k15">*** 15. Specifikace velikosti grafu</a></p>
<p><a href="#k16">*** 16. Nastavení limitu na souřadných osách</a></p>
<p><a href="#k17">*** 17. Měřítka na osách</a></p>
<p><a href="#k18">18. Logaritmické měřítko na y-ové ose</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba interaktivních grafů pro webové stránky a aplikace s&nbsp;využitím knihovny Bokeh</h2>

<p>Jak již bylo napsáno v&nbsp;perexu, setkali jsme se již na stránkách Roota
s&nbsp;několika nástroji, které jsou určené pro tvorbu grafů. Připomeňme si
například <a href="https://www.root.cz/vyhledavani/?qs=gnuplot">gnuplot</a>, <a
href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/">Matplotlib</a>
či <a
href="https://www.root.cz/clanky/sympy-knihovna-pro-symbolicke-vypocty-zapsane-primo-v-pythonu-2-cast/#k17">grafy
dostupné z&nbsp;knihovny SymPy</a>. Dnes se seznámíme s&nbsp;knihovnou Bokeh,
která je určena pro tvorbu grafů v&nbsp;Pythonu, přičemž výsledkem je
interaktivní webová stránka s &bdquo;živým&ldquo; grafem. Jedná se o knihovnu
podporovanou například knihovnou <a
href="https://www.root.cz/clanky/pywebio-interaktivni-webove-dialogy-a-formulare-v-cistem-pythonu/">PyWebIO</a>,
ovšem Bokeh lze s&nbsp;výhodou použít například i <a
href="https://blog.logrocket.com/python-data-visualization-bokeh-jupyter-notebook/">v&nbsp;Jupyter
Notebooku</a>.</p>

<img src="https://i.iinfo.cz/images/555/bokeh-01-18.png" class="image-576410" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="272" height="84" />
<p><i>Obrázek 1: Logo knihovny Bokeh.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Technologie, na nichž je knihovna Bokeh postavena</h2>

<p>Bokeh je knihovna určená pro generování grafů z&nbsp;dat přístupných přímo
v&nbsp;Pythonu. Vstupními daty mohou být běžné n-tice nebo seznamy, ale i
vektory a matice z&nbsp;knihovny <i>NumPy</i> či dokonce datové rámce <a
href="https://www.root.cz/serialy/knihovna-pandas/">získávané a konstruované
knihovnou <i>Pandas</i></a>. Výsledkem je (typicky) HTML stránka obsahující tři
důležité části:</p>

<ol>

<li>Odkaz na <i>frontendovou</i> část knihovny Bokeh naprogramovanou
v&nbsp;JavaScriptu. Čitelnou podobu frontendu lze najít na adrese <a
href="https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.js">https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.js</a>,
ve skutečnosti se však používá minifikovaná podoba této knihovny, která je
stahována z&nbsp;adresy <a
href="https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.min.js">https://cdn.bokeh.org/bokeh/release/bokeh-2.4.3.min.js</a>.</li>

<li>Vlastní data, která mají být zobrazena v&nbsp;grafu, včetně metadat o
grafu.</li>

<li>JavaScriptová funkce, která zajistí načtení frontendové části knihovny
Bokeh.</li>

</ol>

<p>Z&nbsp;tohoto popisu je zřejmé, že se po technologické stránce knihovna
Bokeh dosti podstatným způsobem odlišuje například od Matplotlibu, se všemi
přednostmi a zápory tohoto řešení. Předností je fakt, že graf je stále
interaktivní a lze ho zařadit do webových aplikací, Jupyter Notebooku atd. Na
druhou stranu pro tvorbu grafů určených například do článků je použití
Matplotlibu více přímočaré &ndash; výsledkem je skutečný obrázek (rastrový či
vektorový) a nikoli data+kód pro jeho vykreslení.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace knihovny Bokeh</h2>

<p>Knihovna <i>Bokeh</i> je nabízena přes <a
href="https://pypi.org/project/bokeh">Bokeh</a>, takže její instalace by měla
být jednoduchá a přímočará. Knihovnu nainstalujeme pro aktuálně přihlášeného
uživatele následujícím způsobem:</p>

<pre>
$ <strong>pip3 install --user bokeh</strong>
</pre>

<p>Průběh instalace odhaluje i všechny závislosti této knihovny:</p>

<pre>
Collecting bokeh
  Downloading bokeh-2.4.3-py3-none-any.whl (18.5 MB)
     |████████████████████████████████| 18.5 MB 492 kB/s            
Requirement already satisfied: packaging&gt;=16.8 in /usr/lib/python3/dist-packages (from bokeh) (20.3)
Collecting Jinja2&gt;=2.9
  Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)
     |████████████████████████████████| 133 kB 755 kB/s            
Collecting pillow&gt;=7.1.0
  Downloading Pillow-9.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.1 MB)
     |████████████████████████████████| 3.1 MB 570 kB/s            
Collecting typing-extensions&gt;=3.10.0
  Downloading typing_extensions-4.2.0-py3-none-any.whl (24 kB)
Requirement already satisfied: PyYAML&gt;=3.10 in /usr/lib/python3/dist-packages (from bokeh) (5.3.1)
Collecting tornado&gt;=5.1
  Downloading tornado-6.1-cp38-cp38-manylinux2010_x86_64.whl (427 kB)
     |████████████████████████████████| 427 kB 900 kB/s            
Collecting numpy&gt;=1.11.3
  Downloading numpy-1.22.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.8 MB)
     |████████████████████████████████| 16.8 MB 419 kB/s            
Collecting MarkupSafe&gt;=2.0
  Downloading MarkupSafe-2.1.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)
Installing collected packages: MarkupSafe, typing-extensions, tornado, pillow, numpy, Jinja2, bokeh
Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.1 bokeh-2.4.3 numpy-1.22.3 pillow-9.1.1 tornado-6.1 typing-extensions-4.2.0
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že mezi explicitně
požadované závislosti patří i poměrně velké knihovny typu NumPy. Ovšem zajímavá
je závislost na knihovně <a
href="https://pypi.org/project/tornado/">Tornado</a>, což je jeden
z&nbsp;webových frameworků pro programovací jazyk Python.</div></p>

<p>Po instalaci se přesvědčíme, že balíček <i>bokeh</i> je možné naimportovat:</p>

<pre>
$ <strong>python3</strong>
&nbsp;
Python 3.8.10 (default, Mar 15 2022, 12:22:08) 
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import bokeh
</pre>

<p>Popř.&nbsp;si můžeme zobrazit nápovědu k&nbsp;právě naimportovanému
balíčku:</p>

<pre>
&gt;&gt;&gt; help(bokeh)
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
Help on package bokeh:
&nbsp;
NAME
    bokeh
&nbsp;
DESCRIPTION
    Bokeh is a Python library for creating interactive visualizations for modern
    web browsers.
&nbsp;
    Bokeh helps you build beautiful graphics, ranging from simple plots to complex
    dashboards with streaming datasets. With Bokeh, you can create JavaScript-powered
    visualizations without writing any JavaScript yourself.
&nbsp;
    Most of the functionality of Bokeh is accessed through submodules such as
    |bokeh.plotting| and |bokeh.models|.
&nbsp;    
    For full documentation, please visit https://docs.bokeh.org
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Zobrazení jednoduchého grafu s&nbsp;naměřenými hodnotami</h2>

<p>Vlastnosti knihovny <i>Bokeh</i> si ukážeme prakticky na několika
demonstračních příkladech. První příklad je velmi jednoduchý a slouží pro
vykreslení základního liniového grafu. Hodnoty na x-ové ose jsou reprezentovány
typem <i>range</i> (přesněji řečeno instancí třídy <strong>range</strong>),
hodnoty na y-ové ose jsou pak vypsány v&nbsp;seznamu (samozřejmě je možné
použít i n-tici atd. atd.):</p>

<pre>
<i># hodnoty na x-ové a y-ové ose</i>
x = range(10)
y = [1, 2, 7, 7, 4, 5, -5, 0, 2, 1]
</pre>

<p>Graf je vykreslen přes objekt typu
<strong>bokeh.plotting.figure.Figure</strong>, jenž je zkonstruován
příkazem:</p>

<pre>
<i># plocha pro graf</i>
p = figure()
</pre>

<p><div class="rs-tip-major">Poznámka: tento konstruktor akceptuje velké
množství argumentů, které použijeme později:</div></p>

<pre>
Help on function figure in module bokeh.plotting.figure:
&nbsp;
figure(**kwargs: 'TAny') -&gt; 'Figure'
    Create a new :class:`~bokeh.plotting.Figure` for plotting.
&nbsp;
    All other keyword arguments are passed to :class:`~bokeh.plotting.Figure`.
&nbsp;
    Returns:
       :class:`~bokeh.plotting.Figure`
</pre>

<p>Pokud nás bude zajímat jen liniový graf, provedeme vykreslení příkazem
(metodou) <strong>plot</strong>, které se předají hodnoty na x-ové ose i na ose
y-ové:</p>

<pre>
<i># vykreslení průběhu</i>
p.line(x, y)
</pre>

<p>A konečně pro zobrazení grafu na ploše webové stránky použijeme příkaz
<strong>show</strong> (nejedná se o metodu):</p>

<pre>
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Po vykonání posledního příkazu se vygeneruje statická HTML stránka
s&nbsp;JavaScriptovým kódem, která se otevře v&nbsp;okně (resp.&nbsp;přesněji
řečeno v&nbsp;tabu) webového prohlížeče. Poté se skript ukončí, kdežto webová
stránka bude stále &bdquo;živá&ldquo;:</p>

<a href="https://www.root.cz/obrazek/576393/"><img src="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" class="image-576393" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-1-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 2: Webová stránka vytvořená skriptem prvního demonstračního příkladu.</i></p>

<p><div class="rs-tip-major">Poznámka: funkce <strong>show</strong> má mnoho
voleb, s&nbsp;nimiž se seznámíme příště:</div></p>

<pre>
Help on function show in module bokeh.io.showing:
&nbsp;
show(obj: 'LayoutDOM | Application | ModifyDoc', browser: 'str | None' = None, new: 'BrowserTarget' = 'tab', notebook_handle: 'bool' = False, notebook_url: 'str' = 'localhost:8888', **kwargs: 'Any') -&gt; 'CommsHandle | None'
    Immediately display a Bokeh object or application.
&nbsp;
        :func:`show` may be called multiple times in a single Jupyter notebook
        cell to display multiple objects. The objects are displayed in order.
&nbsp;
    Args:
        obj (LayoutDOM or Application or callable) :
            A Bokeh object to display.
&nbsp;
            Bokeh plots, widgets, layouts (i.e. rows and columns) may be
            passed to ``show`` in order to display them. If |output_file|
            has been called, the output will be to an HTML file, which is also
            opened in a new browser window or tab. If |output_notebook|
            has been called in a Jupyter notebook, the output will be inline
            in the associated notebook output cell.
</pre>

<p>Úplný zdrojový kód dnešního prvního demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show, save
&nbsp;
<i># hodnoty na x-ové a y-ové ose</i>
x = range(10)
y = [1, 2, 7, 7, 4, 5, -5, 0, 2, 1]
&nbsp;
<i># plocha pro graf</i>
p = <strong>figure()</strong>
&nbsp;
<i># vykreslení průběhu</i>
<strong>p.line(x, y)</strong>
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
<strong>show(p)</strong>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Zobrazení titulku a legendy v&nbsp;grafu</h2>

<p>Graf bez popisků a titulku je většinou nepoužitelný (pokud se ovšem nejedná
záměr se snahou o zmatení čtenáře). Proto do grafu přidáme jak titulek, tak i
popisky obou os:</p>

<pre>
<i># plocha pro graf</i>
p = figure(<strong>title="Naměřené hodnoty"</strong>, <strong>x_axis_label='x'</strong>, <strong>y_axis_label='y'</strong>)
</pre>

<p>Navíc je možné popsat i jednotlivé průběhy v&nbsp;grafu. Prozatím sice
zobrazujeme jediný průběh, ovšem i jeho popisek lze v&nbsp;případě potřeby
zobrazit jako legendu:</p>

<pre>
<i># vykreslení průběhu naměřených hodnoy</i>
p.line(x, y, <strong>legend_label="Napětí"</strong>, line_width=2)
</pre>

<p>S&nbsp;tímto výsledkem:</p>

<a href="https://www.root.cz/obrazek/576394/"><img src="https://i.iinfo.cz/images/555/bokeh-01-2-prev.png" class="image-576394" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-2-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 3: Graf vykreslený druhým příkladem.</i></p>

<p>Úplný zdrojový kód dnešního druhého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># hodnoty na x-ové a y-ové ose</i>
x = range(10)
y = [1, 2, 7, 7, 4, 5, -5, 0, 2, 1]
&nbsp;
<i># plocha pro graf</i>
p = figure(<strong>title="Naměřené hodnoty"</strong>, <strong>x_axis_label='x'</strong>, <strong>y_axis_label='y'</strong>)
&nbsp;
<i># vykreslení průběhu naměřených hodnoy</i>
p.line(x, y, <strong>legend_label="Napětí"</strong>, line_width=2)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Kooperace s&nbsp;knihovnou NumPy, porovnání s&nbsp;Matplotlibem</h2>

<p>V&nbsp;úvodních kapitolách byla jako alternativa ke knihovně Bokeh zmíněna
knihovna Matplotlib. Pro porovnání si tedy ukažme, jak se vykresluje graf při
použití této knihovny. Vykreslíme sinusovku, která bude vypočtena
s&nbsp;využitím knihovny NumPy (ta dokáže provést výpočty pro všechny prvky
vektoru atd.):</p>

<pre>
<i># naimportujeme všechny funkce a konstanty z knihovny `matplotlib.pyplot`</i>
import matplotlib.pyplot as plt
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y = np.sin(x)
&nbsp;
<i># vykreslit průběh funkce</i>
<strong>plt.plot(x, y)</strong>
&nbsp;
<i># popis os</i>
plt.xlabel("x")
plt.ylabel("sin(x)")
&nbsp;
<i># zobrazení grafu</i>
<strong>plt.show()</strong>
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<img src="https://i.iinfo.cz/images/222/matplotlib-1.png" class="image-576418" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="640" height="480" />
<p><i>Obrázek 4: Graf vykreslený knihovnou Matplotlib.</i></p>

<p>Prakticky stejným způsobem můžeme postupovat v&nbsp;případě, že se využívá
knihovna <i>Bokeh</i> a nikoli knihovna <i>Matplotlib</i>. Opět přitom pro
výpočty použijeme knihovnu NumPy:</p>

<pre>
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y = np.sin(x)
</pre>

<p>Namísto <strong>plt.plot</strong> ovšem zavoláme metodu
<strong>p.line</strong>:</p>

<pre>
<i># vykreslení průběhu</i>
<strong>p.line(x, y, legend_label="sin(x)", line_width=2)</strong>
</pre>

<p>Výsledkem je webová stránka s&nbsp;obsahem, který lze porovnat
s&nbsp;předchozím obrázkem:</p>

<a href="https://www.root.cz/obrazek/576395/"><img src="https://i.iinfo.cz/images/555/bokeh-01-3-prev.png" class="image-576395" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-3-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 5: Graf vykreslený knihovnou Bokeh.</i></p>

<p>Úplný zdrojový kód dnešního třetího demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y = np.sin(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x)", x_axis_label='x', y_axis_label='sin(x)')
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y, legend_label="sin(x)", line_width=2)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Vykreslení průběhu dvou funkcí do jednoho grafu</h2>

<p>Počet funkcí, jejichž průběhy se mají vykreslit do jediného grafu, není
prakticky omezen. Prozatím si ukážeme způsob zobrazení průběhů dvou funkcí, a
to navíc za předpokladu, že funkční hodnoty spadají do stejného rozsahu a není
tedy nutné přidávat další y-ovou osu s&nbsp;odlišným měřítkem (nebo dokonce
kombinovat lineární a logaritmické měřítko). Opět přitom pro výpočet funkčních
hodnot využijeme knihovnu NumPy:</p>

<pre>
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
</pre>

<p>Po výpočtu obou vektorů s&nbsp;hodnotami funkce oba průběhy vykreslíme.
Povšimněte si, že je možné specifikovat popisek průběhu a taktéž barvu, která
se pro vykreslení průběhu použije:</p>

<pre>
p.line(x, <strong>y1</strong>, legend_label="sin(x)", line_width=2, <strong>color="blue"</strong>)
p.line(x, <strong>y2</strong>, legend_label="cos(x)", line_width=2, <strong>color="red"</strong>)
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<a href="https://www.root.cz/obrazek/576396/"><img src="https://i.iinfo.cz/images/555/bokeh-01-4-prev.png" class="image-576396" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-4-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 6: Průběh dvou funkcí vykreslený do jediného grafu se shodnou
y-ovou osou pro oba průběhy.</i></p>

<p><div class="rs-tip-major">Poznámka: teoreticky je možné použít odlišné
hodnoty na ose <strong>x</strong>. Potom bude jedna z&nbsp;funkcí (většinou)
posunuta.</div></p>

<p>Úplný zdrojový kód dnešního čtvrtého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label='x', y_axis_label='sin(x) a cos(x)')
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, <strong>y1</strong>, legend_label="sin(x)", line_width=2, <strong>color="blue"</strong>)
p.line(x, <strong>y2</strong>, legend_label="cos(x)", line_width=2, <strong>color="red"</strong>)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Všechna podporovaná jména barev lze získat takto:</p>

<pre>
import bokeh.colors.named as n
&nbsp;
for clr in dir(n):
    if clr.islower():
        print(clr)
</pre>

<p>S&nbsp;těmito výsledky:</p>

<pre>
NamedColor
aliceblue
annotations
antiquewhite
aqua
aquamarine
azure
beige
bisque
black
blanchedalmond
blue
blueviolet
brown
burlywood
cadetblue
chartreuse
chocolate
colors
coral
cornflowerblue
cornsilk
crimson
cyan
darkblue
darkcyan
darkgoldenrod
darkgray
darkgreen
darkgrey
darkkhaki
darkmagenta
darkolivegreen
darkorange
darkorchid
darkred
darksalmon
darkseagreen
darkslateblue
darkslategray
darkslategrey
darkturquoise
darkviolet
deeppink
deepskyblue
dimgray
dimgrey
dodgerblue
firebrick
floralwhite
forestgreen
fuchsia
gainsboro
ghostwhite
gold
goldenrod
gray
green
greenyellow
grey
honeydew
hotpink
indianred
indigo
ivory
khaki
lavender
lavenderblush
lawngreen
lemonchiffon
lightblue
lightcoral
lightcyan
lightgoldenrodyellow
lightgray
lightgreen
lightgrey
lightpink
lightsalmon
lightseagreen
lightskyblue
lightslategray
lightslategrey
lightsteelblue
lightyellow
lime
limegreen
linen
log
logging
magenta
maroon
mediumaquamarine
mediumblue
mediumorchid
mediumpurple
mediumseagreen
mediumslateblue
mediumspringgreen
mediumturquoise
mediumvioletred
midnightblue
mintcream
mistyrose
moccasin
navajowhite
navy
oldlace
olive
olivedrab
orange
orangered
orchid
palegoldenrod
palegreen
paleturquoise
palevioletred
papayawhip
peachpuff
peru
pink
plum
powderblue
purple
rebeccapurple
red
rosybrown
royalblue
saddlebrown
salmon
sandybrown
seagreen
seashell
sienna
silver
skyblue
slateblue
slategray
slategrey
snow
springgreen
steelblue
tan
teal
thistle
tomato
turquoise
violet
wheat
white
whitesmoke
yellow
yellowgreen
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Alternativní způsob specifikace barev s&nbsp;využitím trojice hexadecimálních hodnot</h2>

<p><a href="#k07">V&nbsp;předchozím demonstračním příkladu</a> jsme barvy
specifikovali jménem:</p>

<pre>
<i># vykreslení průběhu</i>
p.line(x, <strong>y1</strong>, legend_label="sin(x)", line_width=2, <strong>color="blue"</strong>)
p.line(x, <strong>y2</strong>, legend_label="cos(x)", line_width=2, <strong>color="red"</strong>)
</pre>

<p>Alternativně je však možné využít celý barvový prostor RGB (2<sup>24</sup>
barvových odstínů) s&nbsp;využitím trojice hexadecimálních hodnot, z&nbsp;nichž
každá může mít jednu či dvě číslice:</p>

<pre>
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, <strong>color="#00a0a0"</strong>)
p.line(x, y2, legend_label="cos(x)", line_width=2, <strong>color="#a0a000"</strong>)
</pre>

<p>popř.&nbsp;zmenšený barvový prostor pro &bdquo;jen&ldquo; 2<sup>12</sup>
barev:</p>

<pre>
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, <strong>color="#00a0a0"</strong>)
p.line(x, y2, legend_label="cos(x)", line_width=2, <strong>color="#a0a000"</strong>)
</pre>

<p>Výsledek bude velmi podobný příkladu z&nbsp;předchozí kapitoly:</p>

<a href="https://www.root.cz/obrazek/576397/"><img src="https://i.iinfo.cz/images/555/bokeh-01-5-prev.png" class="image-576397" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-5-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 7: Průběh dvou funkcí vykreslený do jediného grafu se shodnou
y-ovou osou pro oba průběhy.</i></p>

<p>Úplný zdrojový kód dnešního pátého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label='x', y_axis_label='sin(x) a cos(x)')
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="sin(x)", line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="cos(x)", line_width=2, color="#a0a000")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Další styly vykreslení průběhu funkce/hodnot do grafu</h2>

<p>Průběh funkce (nebo naměřených hodnot) nemusí být zobrazen jen
s&nbsp;využitím lomené čáry (polyčáry), ale je možné použít i další styly
vykreslování. Zatímco v&nbsp;knihovně Matplotlib je styl předán
resp.&nbsp;specifikován v&nbsp;pojmenovaném parametru metody
<strong>plot</strong>, je tomu v&nbsp;knihovně Bokeh odlišně &ndash; používají
se totiž samostatné metody:</p>

<pre>
<i># vykreslení průběhu</i>
<strong>p.square_dot</strong>(x, y1, legend_label="sin(x)", line_width=2, color="blue")
<strong>p.circle</strong>(x, y2, legend_label="cos(x)", line_width=2, color="red")
</pre>

<p>S&nbsp;následujícím výsledkem:</p>

<a href="https://www.root.cz/obrazek/576398/"><img src="https://i.iinfo.cz/images/555/bokeh-01-6-prev.png" class="image-576398" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-6-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 8: Graf se dvěma průběhy zobrazenými dvěma rozdílnými styly.</i></p>

<p><div class="rs-tip-major">Poznámka: ostatní dostupné styly si uvedeme
příště.</div></p>

<p>Úplný zdrojový kód dnešního šestého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label='x', y_axis_label='sin(x) a cos(x)')
&nbsp;
<i># vykreslení průběhu</i>
p.square_dot(x, y1, legend_label="sin(x)", line_width=2, color="blue")
p.circle(x, y2, legend_label="cos(x)", line_width=2, color="red")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Sloupcové grafy</h2>

<p>Sloupcové grafy jsou v&nbsp;knihovně Bokeh chápány jako grafy vykreslené
odlišným stylem a tudíž se (logicky) nepoužívá metoda <strong>p.line</strong>,
ale metoda nazvaná <strong>p.vbar</strong>. Zkusme tedy tuto metodu zavolat bez
dalších úprav:</p>

<pre>
<i># vykreslení průběhu naměřených hodnoy</i>
p.vbar(<strong>x</strong>, <strong>y</strong>, legend_label="Napětí", line_width=2)
</pre>

<p>Pokud se však pouze zamění <strong>p.line</strong> za
<strong>p.vbar</strong>, graf ve skutečnosti nebude obsahovat žádné
sloupce:</p>

<a href="https://www.root.cz/obrazek/576399/"><img src="https://i.iinfo.cz/images/555/bokeh-01-7-prev.png" class="image-576399" data-prev-filename="https://i.iinfo.cz/images/555/bokeh-01-1-prev.png" data-prev-width="268" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/555/bokeh-01-7-large.png" data-large-width="520" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="268" height="270" /></a>
<p><i>Obrázek 9: Chybějící graf s&nbsp;naměřenými hodnotami.</i></p>

<p>Úplný zdrojový kód dnešního sedmého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># hodnoty na x-ové a y-ové ose</i>
x = range(10)
y = [1, 2, 7, 7, 4, 5, -5, 0, 2, 1]
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Naměřené hodnoty", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu naměřených hodnoy</i>
p.vbar(x, y, legend_label="Napětí", line_width=2)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Problém v&nbsp;předchozím příkladu je způsoben tím, že z&nbsp;důvodů
vysvětlených v&nbsp;další kapitole je nutné hodnoty předat v&nbsp;pojmenovaném
parametru <strong>top</strong>, což znamená, že volání <strong>p.vbar</strong>
musí vypadat následovně:</p>

<pre>
<i># vykreslení průběhu naměřených hodnoy</i>
p.vbar(<strong>x</strong>, <strong>top=y</strong>, legend_label="Napětí", line_width=2)
</pre>

<p>Výsledek bude nyní vypadat takto:</p>

*** image ***
<p><i>Obrázek 10: Sloupcový graf s&nbsp;naměřenými hodnotami.</i></p>

<p>Úplný zdrojový kód dnešního osmého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># hodnoty na x-ové a y-ové ose</i>
x = range(10)
y = [1, 2, 7, 7, 4, 5, -5, 0, 2, 1]
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Naměřené hodnoty", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu naměřených hodnoy</i>
p.vbar(x, top=y, legend_label="Napětí", line_width=2)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Sloupcové grafy jsou poněkud odlišné od ostatních typů grafů. Například je u
nich možné specifikovat šířky sloupců:</p>

<pre>
<i># vykreslení průběhu naměřených hodnoy</i>
p.vbar(x, top=y, <strong>width=0.7</strong>, legend_label="Napětí", line_width=2)
</pre>

<p>Výsledek vypadá lépe, než graf na desátém obrázku:</p>

*** image ***
<p><i>Obrázek 11: Upravený sloupcový graf s&nbsp;naměřenými hodnotami.</i></p>

<p>Úplný zdrojový kód dnešního devátého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># hodnoty na x-ové a y-ové ose</i>
x = range(10)
y = [1, 2, 7, 7, 4, 5, -5, 0, 2, 1]
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Naměřené hodnoty", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu naměřených hodnoy</i>
p.vbar(x, top=y, width=0.7, legend_label="Napětí", line_width=2)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Sloupcový graf se specifikací začátků a konce sloupců</h2>

<p><a href="#k10">V&nbsp;předchozí kapitole</a> jsme viděli, že hodnoty pro
sloupcový graf se předávají v&nbsp;pojmenovaném parametru <strong>top</strong>.
Je tomu tak z&nbsp;toho důvodu, že lze specifikovat nejenom výšku sloupců, ale
i výšku jejich základny (tj.&nbsp;vzdálenost základny od osy x). Pro tento účel
se specifikuje nepovinný pojmenovaný parametr <strong>bottom</strong>:</p>

<pre>
<i># vykreslení průběhu</i>
p.vbar(x, <strong>top=y1</strong>, <strong>bottom=y2</strong>, width=0.01, legend_label="sin(x)", line_width=2, color="blue")
</pre>

<p>Výsledkem je poněkud uměle vytvořený graf, který vypadá následovně:</p>

*** image ***
<p><i>Obrázek 12: Sloupcový graf, v&nbsp;němž se specifikuje jak výška sloupců,
tak i vzdálenost jejich základny od osy x.</i></p>

<p><div class="rs-tip-major">Poznámka: pochopitelně je možné použít i záporné
hodnoty, a to jak v&nbsp;parametru <strong>top</strong>, tak i v&nbsp;parametru
<strong>bottom</strong>.</div></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 2 * np.pi, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.sin(x)
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = np.cos(x)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="sin(x) a cos(x)", x_axis_label='x', y_axis_label='sin(x) a cos(x)')
&nbsp;
<i># vykreslení průběhu</i>
p.vbar(x, top=y1, bottom=y2, width=0.01, legend_label="sin(x)", line_width=2, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Vykreslení kružnice a spirály (parametrické křivky)</h2>

<p>Vzhledem k&nbsp;tomu, že při vykreslení grafů předáváme jak x-ové, tak i
y-ové hodnoty, lze velmi snadno vykreslit <a
href="https://www.root.cz/clanky/krivky-urcene-polynomem-nejpouzivanejsi-krivky-v-soucasnosti/">parametrické
křivky</a>. Příkladem může být běžná kružnice, která může na webové stránce
vypadat následovně:</p>

*** image ***
<p><i>Obrázek 13: Kružnice jako parametrická křivka.</i></p>

<p>Pro vykreslení této křivky využijeme funkce <strong>numpy.sin</strong> a
<strong>numpy.cos</strong>, které dokážou zpracovat celý vektor hodnot:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty parametrické křivky</i>
<strong>t = np.linspace(0, 2 * np.pi, 100)</strong>
&nbsp;
<strong>y1 = np.sin(t)</strong>
&nbsp;
<strong>y2 = np.cos(t)</strong>
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Circle", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

<p>Podobným způsobem lze vykreslit spirálu:</p>

*** image ***
<p><i>Obrázek 14: Spirála jako parametrická křivka.</i></p>

<p>Pro vykreslení spirály byl použit tento programový kód:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># počet bodů na spirále</i>
points = 150
&nbsp;
<i># úhel v polárním grafu</i>
<strong>theta = np.linspace(0.01, 8*np.pi, points)</strong>
&nbsp;
<i># koeficient spirály</i>
<strong>k = 0.15</strong>
&nbsp;
<i># funkce: vzdálenost od středu</i>
<strong>radius = np.exp(k*theta)</strong>
&nbsp;
<strong>y1 = radius*np.sin(theta)</strong>
&nbsp;
<strong>y2 = radius*np.cos(theta)</strong>
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Spiral", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Export grafu do rastrového obrázku ve formáty PNG</h2>

<p>Knihovna Bokeh umožňuje export grafu do rastrového obrázku, například ve
formátu PNG atd. Problém spočívá v&nbsp;tom, že pro export je nutné získat
obsah okna prohlížeče a pro tento účel se používá <a
href="https://en.wikipedia.org/wiki/Selenium_(software)">Selenium</a> (to se
nám ty moderní technologie komplikují, že?). Takže teoreticky je sice možné
následující skript spustit kdekoli, ovšem pokud nebude nainstalována knihovna
Selenium pro zvolený prohlížeč, dojde na konci při volání funkce
<strong>export_png()</strong> k&nbsp;běhové chybě:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
from bokeh.plotting import figure, show
&nbsp;
<i># export grafu</i>
from bokeh.io import export_png
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># počet bodů na spirále</i>
points = 150
&nbsp;
<i># úhel v polárním grafu</i>
theta = np.linspace(0.01, 8*np.pi, points)
&nbsp;
<i># koeficient spirály</i>
k = 0.15
&nbsp;
<i># funkce: vzdálenost od středu</i>
radius = np.exp(k*theta)
&nbsp;
y1 = radius*np.sin(theta)
&nbsp;
y2 = radius*np.cos(theta)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Spiral", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
&nbsp;
<i># export grafu</i>
export_png(p, filename="plot1.png")
</pre>

<p>Výsledek pokusu o spuštění skript na počítači bez Selenia dopadne
neslavně:</p>

<pre>
Traceback (most recent call last):
    ...
    ...
    ...
ModuleNotFoundError: No module named 'selenium'
&nbsp;
The above exception was the direct cause of the following exception:
&nbsp;
Traceback (most recent call last):
    ...
    ...
    ...
ModuleNotFoundError: No module named 'selenium'
&nbsp;
The above exception was the direct cause of the following exception:
&nbsp;
Traceback (most recent call last):
  File "13_output_png.py", line 38, in <module>
    export_png(p, filename="plot1.png")
  File "/home/ptisnovs/.local/lib/python3.8/site-packages/bokeh/io/export.py", line 111, in export_png
    image = get_screenshot_as_png(obj, width=width, height=height, driver=webdriver, timeout=timeout)
  File "/home/ptisnovs/.local/lib/python3.8/site-packages/bokeh/io/export.py", line 229, in get_screenshot_as_png
    from .webdriver import webdriver_control
  File "/home/ptisnovs/.local/lib/python3.8/site-packages/bokeh/io/webdriver.py", line 24, in <module>
    import_required("selenium.webdriver",
  File "/home/ptisnovs/.local/lib/python3.8/site-packages/bokeh/util/dependencies.py", line 82, in import_required
    raise RuntimeError(error_msg) from e
RuntimeError: To use bokeh.io image export functions you need selenium ('conda install selenium' or 'pip install selenium')
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Nastavení stylu zobrazení legendy</h2>

<pre>
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue", legend_label="Spira mirabilis")
&nbsp;
<i># nastavení stylu zobrazení legendy</i>
p.legend.location = "top_left"
p.legend.border_line_width = 3
p.legend.border_line_color = "#8080a0"
p.legend.border_line_alpha = 0.8
p.legend.background_fill_color = "#8080a0"
p.legend.background_fill_alpha = 0.2
</pre>

*** image ***
<p><i>Obrázek 16: Graf s&nbsp;parametrickou funkcí i se zobrazenou legendou.</i></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># počet bodů na spirále</i>
points = 150
&nbsp;
<i># úhel v polárním grafu</i>
theta = np.linspace(0.01, 8*np.pi, points)
&nbsp;
<i># koeficient spirály</i>
k = 0.15
&nbsp;
<i># funkce: vzdálenost od středu</i>
radius = np.exp(k*theta)
&nbsp;
y1 = radius*np.sin(theta)
&nbsp;
y2 = radius*np.cos(theta)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Spiral", x_axis_label='x', y_axis_label='y')
&nbsp;
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue", legend_label="Spira mirabilis")
&nbsp;
<i># nastavení stylu zobrazení legendy</i>
p.legend.location = "top_left"
p.legend.border_line_width = 3
p.legend.border_line_color = "#8080a0"
p.legend.border_line_alpha = 0.8
p.legend.background_fill_color = "#8080a0"
p.legend.background_fill_alpha = 0.2
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Specifikace velikosti grafu</h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># počet bodů na spirále</i>
points = 150
&nbsp;
<i># úhel v polárním grafu</i>
theta = np.linspace(0.01, 8*np.pi, points)
&nbsp;
<i># koeficient spirály</i>
k = 0.15
&nbsp;
<i># funkce: vzdálenost od středu</i>
radius = np.exp(k*theta)
&nbsp;
y1 = radius*np.sin(theta)
&nbsp;
y2 = radius*np.cos(theta)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Spiral", x_axis_label='x', y_axis_label='y', width=400, height=400)
&nbsp;
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue", legend_label="Spira mirabilis")
&nbsp;
p.legend.location = "top_right"
p.legend.border_line_width = 3
p.legend.border_line_color = "#8080a0"
p.legend.border_line_alpha = 0.8
p.legend.background_fill_color = "#8080a0"
p.legend.background_fill_alpha = 0.2
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

*** image ***
<p><i>Obrázek 17: </i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Nastavení limitu na souřadných osách</h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.models import Range1d
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># počet bodů na spirále</i>
points = 150
&nbsp;
<i># úhel v polárním grafu</i>
theta = np.linspace(0.01, 8*np.pi, points)
&nbsp;
<i># koeficient spirály</i>
k = 0.15
&nbsp;
<i># funkce: vzdálenost od středu</i>
radius = np.exp(k*theta)
&nbsp;
y1 = radius*np.sin(theta)
&nbsp;
y2 = radius*np.cos(theta)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Spiral", x_axis_label='x', y_axis_label='y', width=400, height=400)
&nbsp;
<i># nastavení rozsahu na osách</i>
p.x_range = Range1d(-35, 25)
p.y_range = Range1d(-30, 30)
&nbsp;
<i># vykreslení průběhu</i>
p.line(y1, y2, line_width=2, color="blue", legend_label="Spira mirabilis")
&nbsp;
p.legend.location = "top_right"
p.legend.border_line_width = 3
p.legend.border_line_color = "#8080a0"
p.legend.border_line_alpha = 0.8
p.legend.background_fill_color = "#8080a0"
p.legend.background_fill_alpha = 0.2
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

*** image ***
<p><i>Obrázek 18: </i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Měřítka na osách</h2>

<p></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(-5, 5, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = x
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = x ** 2
&nbsp;
<i># hodnoty na y-ové ose</i>
y3 = x ** 3
&nbsp;
<i># hodnoty na y-ové ose</i>
y4 = 2 ** x
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Functions", x_axis_label='x', y_axis_label='Functions')
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="x", line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="x^2", line_width=2, color="#a0a000")
p.line(x, y3, legend_label="x^3", line_width=2, color="#00a0a0")
p.line(x, y4, legend_label="2^x", line_width=2, color="#a000a0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>

*** image ***
<p><i>Obrázek 19: </i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Logaritmické měřítko na y-ové ose</h2>

<p>Jak jsme mohli vidět na obrázku <a href="#k17">z&nbsp;předchozí
kapitoly</a>, není lineární měřítko na y-ové ose vhodné pro všechny typy
zobrazovaných dat. Typicky se jedná o případ funkcí s&nbsp;exponenciálním
průběhem nebo o funkce (hodnoty), které se tomuto průběhu blíží. V&nbsp;takovém
případě je vhodné změnit měřítko na y-ové ose, tedy na ose hodnot.
V&nbsp;knihovně Bokeh je možné měřítko na y-ové ose změnit nepovinným
parametrem nazvaným <i>y_axis_type</i>, který se předává konstruktoru
<strong>figure</strong>. Na výběr jsou hodnoty &bdquo;linear&ldquo; (výchozí),
&bdquo;log&ldquo;, &bdquo;datetime&ldquo; a &bdquo;mercator&ldquo;.</p>

<p>My dnes použijeme hodnotu &bdquo;log&ldquo;, a to následujícím způsobem:</p>

<pre>
<i># plocha pro graf</i>
p = figure(title="Functions", x_axis_label='x', y_axis_label='Functions', <strong>y_axis_type="log"</strong>)
</pre>

<p>Nyní se průběh všech funkcí v&nbsp;grafu dosti zásadním způsobem změní.
Povšimněte si, jak jsou zvýrazněny hodnoty bližší nule:</p>

*** image ***
<p><i>Obrázek 20: Logaritmické měřítko na y-ové ose.</i></p>

<p>Úplný zdrojový kód dnešního osmnáctého demonstračního příkladu naleznete na
adrese <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py</a>:</p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(-5, 5, 100)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = x
&nbsp;
<i># hodnoty na y-ové ose</i>
y2 = x ** 2
&nbsp;
<i># hodnoty na y-ové ose</i>
y3 = x ** 3
&nbsp;
<i># hodnoty na y-ové ose</i>
y4 = 2 ** x
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Functions", x_axis_label='x', y_axis_label='Functions', <strong>y_axis_type="log"</strong>)
&nbsp;
<i># vykreslení průběhu</i>
p.line(x, y1, legend_label="x", line_width=2, color="#00a0a0")
p.line(x, y2, legend_label="x^2", line_width=2, color="#a0a000")
p.line(x, y3, legend_label="x^3", line_width=2, color="#00a0a0")
p.line(x, y4, legend_label="2^x", line_width=2, color="#a000a0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_linear_plot.py</td><td>nejjednodušší typ grafu poskytovaný knihovnou Bokeh</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py</a></td></tr>
<tr><td> 2</td><td>02_linear_plot.py</td><td>zobrazení titulku a legendy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py</a></td></tr>
<tr><td> 3</td><td>03_sinus_plot.py</td><td>kooperace s&nbsp;knihovnou NumPy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py</a></td></tr>
<tr><td> 4</td><td>04_sin_cos_plot.py</td><td>vykreslení průběhu dvou funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py</a></td></tr>
<tr><td> 5</td><td>05_sin_cos_plot.py</td><td>alternativní způsob specifikace barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py</a></td></tr>
<tr><td> 6</td><td>06_sin_cos_circles.py</td><td>alternativní značky pro vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py</a></td></tr>
<tr><td> 7</td><td>07_bars.py</td><td>jednoduchý sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py</a></td></tr>
<tr><td> 8</td><td>08_bars.py</td><td>korektní způsob předávání hodnot pro sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py</a></td></tr>
<tr><td> 9</td><td>09_bars.py</td><td>šířka jednotlivých sloupců ve sloupcovém grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py</a></td></tr>
<tr><td>10</td><td>10_sin_cos_bars.py</td><td>sloupcový graf se specifikací začátků a konce sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/10_sin_cos_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/10_sin_cos_bars.py</a></td></tr>
<tr><td>11</td><td>11_sin_cos_circle.py</td><td>vykreslení kružnice (parametrická křivka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/11_sin_cos_circle.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/11_sin_cos_circle.py</a></td></tr>
<tr><td>12</td><td>12_spiral.py</td><td>vykreslení logaritmické spirály (parametrická křivka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/12_spiral.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/12_spiral.py</a></td></tr>
<tr><td>13</td><td>13_output_png.py</td><td>export grafu do formátu PNG</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/13_output_png.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/13_output_png.py</a></td></tr>
<tr><td>14</td><td>14_legend_styling.py</td><td>nastavení stylu zobrazení legendy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/14_legend_styling.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/14_legend_styling.py</a></td></tr>
<tr><td>15</td><td>15_figure_size.py</td><td>specifikace velikosti grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/15_figure_size.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/15_figure_size.py</a></td></tr>
<tr><td>16</td><td>16_axis_limits.py</td><td>nastavení limitu na souřadných osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/16_axis_limits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/16_axis_limits.py</a></td></tr>
<tr><td>17</td><td>17_linear_scale.py</td><td>měřítka na osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/17_linear_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/17_linear_scale.py</a></td></tr>
<tr><td>18</td><td>18_log_scale.py</td><td>logaritmické měřítko na y-ové ose</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>19</td><td>matplotlib_plot.py</td><td>ukázka použití &bdquo;konkurenčního&ldquo; projektu Matplotlib</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/matplotlib_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/matplotlib_plot.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>bokeh na GitHubu<br />
<a href="https://github.com/bokeh/bokeh">https://github.com/bokeh/bokeh</a>
</li>

<li>First steps 1: Creating a line chart<br />
<a href="https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_1.html">https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_1.html</a>
</li>

<li>Python Bokeh tutorial – Interactive Data Visualization with Bokeh<br />
<a href="https://www.geeksforgeeks.org/python-bokeh-tutorial-interactive-data-visualization-with-bokeh/">https://www.geeksforgeeks.org/python-bokeh-tutorial-interactive-data-visualization-with-bokeh/</a>
</li>

<li>The R Project for Statistical Computing<br />
<a href="https://www.r-project.org/">https://www.r-project.org/</a>
</li>

<li>An Introduction to R<br />
<a href="https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf">https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf</a>
</li>

<li>R (programming language)<br />
<a href="https://en.wikipedia.org/wiki/R_(programming_language)">https://en.wikipedia.org/wiki/R_(programming_language)</a>
</li>

<li>Graphics, ggplot2<br />
<a href="http://r4stats.com/examples/graphics-ggplot2/">http://r4stats.com/examples/graphics-ggplot2/</a>
</li>

<li>Seriál Programovací jazyk Julia<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-julia/">https://www.root.cz/serialy/programovaci-jazyk-julia/</a>
</li>

<li>Plotly<br />
<a href="https://plotly.com/">https://plotly.com/</a>
</li>

<li>pyecharts<br />
<a href="https://github.com/pyecharts/pyecharts/blob/master/README.en.md">https://github.com/pyecharts/pyecharts/blob/master/README.en.md</a>
</li>

<li>Tvorba grafů v&nbsp;Jupyter Notebooku s&nbsp;využitím knihovny Matplotlib<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/">https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

