<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Coconut: jazyk naznačující směr budoucího vývoje Pythonu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Coconut: jazyk naznačující směr budoucího vývoje Pythonu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Před přibližně sedmi lety jsme se na stránkách Roota seznámili se zajímavým funkcionálním jazykem Coconut, který je transpilován do Pythonu. Coconut se ovšem neustále vyvíjí a vyvíjí se i samotný Python, takže nastal čas Coconut oprášit a podívat se na jeho nové vlastnosti.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Coconut: jazyk naznačující směr budoucího vývoje Pythonu</a></p>
<p><a href="#k02">*** 2. Paralelní vývoj Pythonu i jazyka Coconut</a></p>
<p><a href="#k03">*** 3. Instalace interpretru a transpileru jazyka Coconut</a></p>
<p><a href="#k04">*** 4. Interaktivní konzole jazyka Coconut</a></p>
<p><a href="#k05">*** 5. Coconut ve funkci transpřekladače</a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. Příloha A: klávesové zkratky použité v&nbsp;konzoli Coconutu v&nbsp;režimu Emacs</a></p>
<p><a href="#k18">*** 18. Příloha B: klávesové zkratky použité v&nbsp;konzoli Coconutu v&nbsp;režimu Vi</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Coconut: jazyk naznačující směr budoucího vývoje Pythonu</h2>

<p>Už v&nbsp;roce 2017, což je z&nbsp;pohledu IT poměrně dlouhá doba, jsme se na stránkách Roota ve dvojici článků [<a href="https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/">1</a>] [<a href="https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/">2</a>] seznámili se zajímavým programovacím jazykem nazvaným <i>Coconut</i>. Jedná se o programovací jazyk, který byl původně navržen takovým způsobem, aby byl zpětně kompatibilní s&nbsp;Pythonem, což je důležité, protože <i>Coconut</i> můžeme považovat za sémantické i syntaktické rozšíření samotného Pythonu. Z&nbsp;pohledu programátora se <i>Coconut</i> používá jako klasický interpret, ovšem interně provádí <i>transpilaci</i> (či transkompilaci) zapsaného zdrojového kódu (zpět) do Pythonu a tento transpilovaný kód je možné si nechat v&nbsp;případě potřeby zobrazit a zjistit, jak jsou jednotlivé jazykové konstrukce Coconutu interně realizovány.</p>

<p>V&nbsp;jazyku Coconut jsme již v&nbsp;roce 2017 mohli najít takové jazykové konstrukce (tj.&nbsp;novou syntaxi se zcela novou sémantikou), které podporovaly funkcionální programování a vlastně i celé <i>funkcionální paradigma</i>, takže v&nbsp;Coconutu pocházejícím z&nbsp;té doby lze najít například funkce vyššího řádu (které ve skutečnosti podporuje i samotný Python, i když někdy poněkud nešikovně), podporu pro neměnitelné (<i>immutable</i>) hodnoty, podporu pro zápis kompozice funkcí či pro tvorbu takzvaných <i>kolon</i>. To ovšem nebylo zdaleka vše, protože již ve zmíněném roce 2017 jsme mohli v&nbsp;jazyce Coconut vidět a používat jazykovou konstrukci realizující <i>pattern matching</i>.</p>

<p><div class="rs-tip-major">Poznámka: na tomto místě se samozřejmě můžeme ptát, jestli má smysl studovat tak minoritní programovací jazyk, jakým Coconut v&nbsp;současnosti je. Ovšem Coconut ukazuje a možná do jisté míry i určuje další směřování Pythonu. Příkladem může být podpora pro <i>pattern matching</i>, která se objevila právě v&nbsp;Coconutu</div> a později (konkrétně o přibližně pět let později) byla realizována i v&nbsp;Pythonu (jenž se ovšem inspiroval i v&nbsp;jiných jazycích, částečně v&nbsp;OCamlu a pravděpodobně i v&nbsp;Rustu).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Paralelní vývoj Pythonu i jazyka Coconut</h2>

<p>Od vydání obou výše zmíněných článků o jazyce Coconut již uběhla dlouhá doba, a to především v&nbsp;kontextu s&nbsp;vývojem samotného programovacího jazyka Python. Ostatně v&nbsp;roce 2017 byl nejnovější verzí Pythonu verze 3.6, viz tabulku se všemi verzemi Pythonu 3.x:</p>

<table>
<tr><th>Verze</th><th>Datum vydání</th></tr>
<tr><td>Python 3.0 </td><td>3. prosince 2008</td></tr>
<tr><td>Python 3.1 </td><td>27. června 2009</td></tr>
<tr><td>Python 3.2 </td><td>20. února 2011</td></tr>
<tr><td>Python 3.3 </td><td>29. září 2012</td></tr>
<tr><td>Python 3.4 </td><td>16. března 2014</td></tr>
<tr><td>Python 3.5 </td><td>13. září 2015</td></tr>
<tr><td>Python 3.6 </td><td>23. prosince 2016</td></tr>
<tr><td>Python 3.7 </td><td>27. června 2018</td></tr>
<tr><td>Python 3.8 </td><td>14. října 2019</td></tr>
<tr><td>Python 3.9 </td><td>5. října 2020</td></tr>
<tr><td>Python 3.10</td><td>4. října 2021</td></tr>
<tr><td>Python 3.11</td><td>24. října 2022</td></tr>
<tr><td>Python 3.12</td><td>2. října 2023</td></tr>
</table>

<p>Samotný jazyk Python byl od výše zmíněné verze 3.6 upraven a rozšiřován v&nbsp;mnoha směrech, viz též tabulku s&nbsp;největšími novinkami, které byly ve verzích následujících po verzi 3.6 do jazyka přidány:</p>

<table>
<tr><th>Verze</th><th>Vybrané nové vlastnosti jazyka</th></tr>
<tr><td>Python 3.7 </td><td>rezervovaná klíčová slova async a await</td></tr>
<tr><td>Python 3.8 </td><td>mroží operátor, poziční parametry funkcí</td></tr>
<tr><td>Python 3.9 </td><td>generické datové typy</td></tr>
<tr><td>Python 3.10</td><td>pattern matching</td></tr>
<tr><td>Python 3.10</td><td>možnost použití operátoru | při definici typů</td></tr>
<tr><td>Python 3.11</td><td>skupiny výjimek</td></tr>
<tr><td>Python 3.12</td><td>klíčové slovo type + jeho sémantika</td></tr>
<tr><td>Python 3.12</td><td>nová syntaxe pro zápis generických typů</td></tr>
</table>

<p>Na tyto změny v&nbsp;Pythonu musel projekt Coconut nějakým způsobem reagovat, už jen z&nbsp;toho důvodu, že se v&nbsp;Pythonu 3.10 objevil <i>pattern matching</i> nekompatibilní s&nbsp;původním Coconutem. A právě na tyto změny (resp.&nbsp;přesněji řečeno na současný stav Coconutu) se zaměříme v&nbsp;dnešním článku.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace interpretru a transpileru jazyka Coconut</h2>

<p>Jazyk Coconut, což konkrétně znamená transpiler upravený do takové podoby, že se chová jako běžný interpret s&nbsp;interaktivní smyčkou REPL (<i>Read-Eval-Print Loop</i>), je možné nainstalovat s&nbsp;využitím běžných správců balíčků ekosystému jazyka Python, tedy například pomocí <strong>pip</strong>u či <strong>pdm</strong>. Samotná instalace je zdržena pouze překladem balíčku <a href="https://github.com/evhub/cpyparsing">cPyparsing</a>, který je překládán do nativního kódu (používá se zde technologie <i>Cython</i>, kterou již dobře známe). Pokud se vám nechce čekat přibližně minutu na dokončení překladu, lze namísto tohoto balíčku použít <a href="https://github.com/pyparsing/pyparsing">pyparsing</a>, jenž je naprogramován v&nbsp;čistém Pythonu a tudíž nevyžaduje překlad:</p>

<pre>
$ <strong>pip install --user coconut</strong>
Collecting coconut
  Downloading coconut-3.1.0-py2.py3-none-any.whl (316 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 316.5/316.5 kB 2.1 MB/s eta 0:00:00
Requirement already satisfied: setuptools&gt;=44 in /usr/lib/python3.11/site-packages (from coconut) (65.5.1)
Collecting cPyparsing&lt;2.4.7.2.4,&gt;=2.4.7.2.3.2
  Downloading cpyparsing-2.4.7.2.3.3.tar.gz (1.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 3.6 MB/s eta 0:00:00
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Preparing metadata (pyproject.toml) ... done
Requirement already satisfied: psutil&gt;=5 in /home/ptisnovs/.local/lib/python3.11/site-packages (from coconut) (5.9.8)
Requirement already satisfied: prompt-toolkit&gt;=1 in /home/ptisnovs/.local/lib/python3.11/site-packages (from coconut) (3.0.39)
Collecting async-generator&gt;=1.10
  Downloading async_generator-1.10-py3-none-any.whl (18 kB)
Requirement already satisfied: anyio&gt;=3 in /home/ptisnovs/.local/lib/python3.11/site-packages (from coconut) (3.7.1)
Collecting typing-extensions&gt;=4.9
  Downloading typing_extensions-4.12.0-py3-none-any.whl (37 kB)
Collecting pygments&gt;=2.17
  Downloading pygments-2.18.0-py3-none-any.whl (1.2 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.2/1.2 MB 3.9 MB/s eta 0:00:00
Requirement already satisfied: idna&gt;=2.8 in /usr/lib/python3.11/site-packages (from anyio&gt;=3-&gt;coconut) (3.4)
Requirement already satisfied: sniffio&gt;=1.1 in /home/ptisnovs/.local/lib/python3.11/site-packages (from anyio&gt;=3-&gt;coconut) (1.3.0)
Requirement already satisfied: wcwidth in /home/ptisnovs/.local/lib/python3.11/site-packages (from prompt-toolkit&gt;=1-&gt;coconut) (0.2.8)
Building wheels for collected packages: cPyparsing
  Building wheel for cPyparsing (pyproject.toml) ... done
  Created wheel for cPyparsing: filename=cPyparsing-2.4.7.2.3.3-cp311-cp311-linux_x86_64.whl size=5197614 sha256=8f1c9fabc0e1772db081d487c9eb6122c8a68c7ef0cb47b72312c72fd69e3527
  Stored in directory: /home/ptisnovs/.cache/pip/wheels/ef/31/db/124f8f126b5196bd89cc0b2c4266f27e377efd4a544b90a94a
Successfully built cPyparsing
Installing collected packages: cPyparsing, typing-extensions, pygments, async-generator, coconut
  Attempting uninstall: pygments
    Found existing installation: Pygments 2.16.1
    Uninstalling Pygments-2.16.1:
      Successfully uninstalled Pygments-2.16.1
Successfully installed async-generator-1.10 cPyparsing-2.4.7.2.3.3 coconut-3.1.0 pygments-2.18.0 typing-extensions-4.12.0
</pre>

<p>Po instalaci by mělo být možné spustit interpret Coconutu s&nbsp;interaktivní smyčkou REPL. Na systému s&nbsp;nainstalovaným Pythonem 3.11 bude spuštění vypadat následovně:</p>

<pre>
$ <strong>coconut</strong>
&nbsp;
Coconut Interpreter v3.1.0 (Python 3.11):
(enter 'exit()' or press Ctrl-D to end)
&gt;&gt;&gt;
</pre>

<p>Ve skutečnosti však bude Coconut funkční i v&nbsp;případě, že je v&nbsp;systému nainstalována starší veze Pythonu, například dnes již notně zastaralý Python 3.8:</p>

<pre>
$ <strong>coconut</strong>
&nbsp;
Coconut Interpreter v3.1.0 (Python 3.8):
(enter 'exit()' or press Ctrl-D to end)
</pre>

<pre>
$ <strong>coconut --help</strong>
&nbsp;
usage: coconut [-h] [--and source [dest ...]] [-v] [-t version] [-i] [-p] [-a] [-l] [--no-line-numbers] [-k] [-w] [-r] [-n] [-d] [-q]
               [-s] [--no-tco] [--no-wrap-types] [-c code] [-j processes] [-f] [--minify] [--jupyter ...] [--mypy ...] [--argv ...]
               [--tutorial] [--docs] [--style name] [--vi-mode] [--recursion-limit limit] [--stack-size kbs] [--fail-fast]
               [--no-cache] [--site-install] [--site-uninstall] [--verbose]
               [source] [dest]
&nbsp;
docs: http://coconut.readthedocs.io/en/v3.1.0/DOCS.html
&nbsp;
positional arguments:
  source                path to the Coconut file/folder to compile
  dest                  destination directory for compiled files (defaults to the source directory)
&nbsp;
options:
  ...
  ...
  ...
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Interaktivní konzole jazyka Coconut</h2>

<p>Uživatelské rozhraní interaktivní smyčky REPL je v&nbsp;Coconutu oproti klasickému Pythonu (přesněji řečeno CPythonu) vylepšené a do jisté míry připomíná <i>IPython</i>, <i>bpython</i> či <i>PTPython</i> (viz též <a href="https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/">článek na toto téma</a>). Pravděpodobně nejviditelnějším vylepšením je, že se po stisku klávesy <strong>Tab</strong> zobrazí kontextové menu se seznamem symbolů, které se k&nbsp;Coconutu vztahují (včetně jeho klíčových slov atd.). V&nbsp;interaktivním prostředí Coconutu se navíc barevně zvýrazňují klíčová slova, operátory a některé literály (číselné konstanty a řetězce). Taktéž je možné se vracet a vyhledávat v&nbsp;historii příkazů (<strong>Ctrl+R</strong> a funkční budou i další známé klávesové zkratky, například pro skoky na začátek a konec řádku (<strong>Ctrl+A</strong>, <strong>Ctrl+E</strong>), mazání části zapsaného textu <strong>Ctrl+W</strong>, <strong>Ctrl+K</strong>, vložení značky pro výběr (<strong>Ctrl+Space</strong>) atd.</p>

<p><div class="rs-tip-major">Poznámka: alternativně lze přepínačem <strong>-vimode</strong> přepnout režim ovládání interaktivní smyčky takovým způsobem, aby byla do jisté míry kompatibilní s&nbsp;textovými editory Vi/Vim. V&nbsp;takovém případě je interaktivní smyčka přepnuta do režimu vkládání (<i>insert</i>) a pro editaci je nutné stlačit klávesu <strong>Esc</strong>, stejně jako ve Vi/Vimu.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Coconut ve funkci transpřekladače</h2>

<p>Příkaz <strong>coconut</strong> spustí buď interaktivní smyčku REPL, což jsme si již ukázali v&nbsp;předchozím textu, nebo ho je možné alternativně použít pro transpřeklad zdrojových kódů z&nbsp;Coconutu do &bdquo;čistého&ldquo; Pythonu. Ukažme si tedy ve stručnosti ještě i tento druhý způsob použití, a to na velmi jednoduchém příkladu, který má na standardní výstup vypsat řetězec &bdquo;Hello world!&ldquo;. S&nbsp;využitím nového operátoru pro kolonu (<i>pipeline</i>) je možné takový prográmek napsat například následovně:</p>

<pre>
<strong>"Hello world!" |&gt; print</strong>
</pre>

<pre>
$ <strong>coconut 01-hello-world.coco</strong>
</pre>

<pre>
Compiling         coconut-01-hello-world.coco ...
CoconutWarning: Populating initial parsing cache (compilation may take longer than usual)...
Compiled to       coconut-01-hello-world.py .
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Příloha A: klávesové zkratky použité v&nbsp;konzoli Coconutu v&nbsp;režimu Emacs</h2>

<p>V&nbsp;této kapitole jsou vypsány vybrané klávesové zkratky, které jsou ve
výchozím nastavení použity v&nbsp;interaktivní konzoli jazyka Coconut ve (výchozím) režimu emulace Emacsu.</p>



<h4>Příkazy pro přesuny kurzoru</h4>

<p>Základní příkazy pro přesun kurzoru používají kombinaci Ctrl+znak, Alt+znak
popř.&nbsp;alternativně Esc, znak v&nbsp;případě, že zkratky Alt+znak kolidují
s&nbsp;emulátorem terminálu (například vyvolávají příkazy z&nbsp;menu). Pokud
je terminál správně nakonfigurován, měly by fungovat i kurzorové šipky a navíc
i klávesy Home a End (se zřejmou funkcí):</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+B</td><td>přesun na předchozí znak</td></tr>
<tr><td>Ctrl+F</td><td>přesun na další znak</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Alt+B</td><td>přesun na předchozí slovo</td></tr>
<tr><td>Alt+F</td><td>přesun na další slovo</td></tr>
<tr><td>Esc, B</td><td>shodné s&nbsp;Alt+B</td></tr>
<tr><td>Esc, F</td><td>shodné s&nbsp;Alt+F</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Ctrl+A</td><td>přesun na začátek řádku</td></tr>
<tr><td>Ctrl+E</td><td>přesun na konec řádku</td></tr>
</table>



<h4>Mazání textu, práce s&nbsp;kill ringem</h4>

<p>Pro přesun části textu v&nbsp;rámci editovaného řádku se používá takzvaný
kill ring, do něhož se smazaný text uloží. Pro vložení takto smazaného textu do
jiné oblasti se používá operace nazvaná <i>yank</i> (odpovídá <i>paste</i>).
Některé dále uvedené příkazy dokážou s&nbsp;kill ringem pracovat:</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+K</td><td>smaže text od kurzoru do konce řádku a uloží ho do kill ringu</td></tr>
<tr><td>Ctrl+U</td><td>smaže text od začátku řádku do pozice kurzoru a uloží ho do kill ringu</td></tr>
<tr><td>Ctrl+W</td><td>smaže předchozí slovo a uloží ho do kill ringu</td></tr>
<tr><td>Alt+D</td><td>smaže následující slovo a uloží ho do kill ringu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Ctrl+Y</td><td>vloží text z&nbsp;kill ringu na místo, na němž se nachází kurzor (<i>yank</i>)</td></tr>
<tr><td>Alt+Y</td><td>po operaci Ctrl+Y dokáže <i>rotovat</i> historií kill ringu a obnovit tak (před)předchozí smazaný text</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Ctrl+D</td><td>smaže jeden znak (pokud je ovšem na řádku nějaký obsah, jinak typicky ukončí aplikaci)</td></tr>
</table>



<h4>Práce s&nbsp;historií dříve zadaných příkazů</h4>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+P</td><td>průchod historií &ndash; předchozí text</td></tr>
<tr><td>Ctrl+N</td><td>průchod historií &ndash; následující text</td></tr>
<tr><td>Ctrl+R</td><td>zpětné (interaktivní) vyhledávání v&nbsp;historii</td></tr>
<tr><td>Ctrl+G</td><td>ukončení režimu vyhledávání</td></tr>
</table>



<h4>Některé další dostupné příkazy</h4>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Tab</td><td>implicitní klávesa pro zavolání <i>completeru</i></td></tr>
<tr><td>Ctrl+T</td><td>prohození dvou znaků (před kurzorem a na pozici kurzoru)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>Alt+U</td><td>text od pozice kurzoru do konce slova se změní NA VERZÁLKY</td></tr>
<tr><td>Alt+L</td><td>text od pozice kurzoru do konce slova se změní na mínusky</td></tr>
<tr><td>Alt+C</td><td>text od pozice kurzoru do konce slova se změní Tak, Že Slova Začínají Velkým Písmenem</td></tr>
</table>





<p><a name="k18"></a></p>
<h2 id="k18">18. Příloha B: klávesové zkratky použité v&nbsp;konzoli Coconutu v&nbsp;režimu Vi</h2>

<p><div class="rs-tip-major">Poznámka: ve výchozím nastavení se řádka nachází
v&nbsp;režimu vkládání znaků (<i>insert mode</i>). Pro přepnutí do normálního
režimu použijte Esc.</div></p>

<p>V&nbsp;režimu emulace editorů Vi/Vim je možné mj.&nbsp;použít i tyto
klávesové zkratky:</p>



<h4>Příkazy pro přesuny kurzoru</h4>

<p>Tyto příkazy jsou platné pro normální režim a lze je zkombinovat
s&nbsp;operátory (<i>delete</i>, <i>change</i>, <i>yank</i> atd.):</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>h</td><td>přechod na předchozí znak</td></tr>
<tr><td>l</td><td>přechod na další znak</td></tr>
<tr><td>b</td><td>skok (zpět) na první znak slova</td></tr>
<tr><td>e</td><td>skok na poslední znak slova</td></tr>
<tr><td>w</td><td>skok na první znak následujícího slova</td></tr>
<tr><td>0</td><td>skok na začátek řádku</td></tr>
<tr><td>$</td><td>skok na konec řádku</td></tr>
<tr><td>%</td><td>doskok na párovou závorku</td></tr>
<tr><td>f</td><td>skok na specifikovaný znak (<i>find</i>)</td></tr>
</table>



<h4>Editace textu</h4>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>x</td><td>smazání jednoho znaku (odpovídá klávese Delete)</td></tr>
<tr><td>d</td><td>operace smazání textu (musí být následována příkazem pro pohyb kurzoru)</td></tr>
<tr><td>D</td><td>smazání textu od pozice kurzoru do konce řádku</td></tr>
<tr><td>y</td><td>přenos textu do registru _ (musí být následována příkazem pro pohyb kurzoru)</td></tr>
<tr><td>c</td><td>změna textu (musí být následována příkazem pro pohyb kurzoru)</td></tr>
<tr><td>r</td><td>změna jediného znaku</td></tr>
<tr><td>s</td><td>změna jediného znaku a přechod do vkládacího režimu</td></tr>
<tr><td>p</td><td>operace put/paste, vloží smazaný text od pozice kurzoru</td></tr>
<tr><td>P</td><td>operace put/paste, vloží smazaný text před pozicí kurzoru</td></tr>
</table>



<h4>Příkazy ve vkládacím režimu</h4>

<p>Některé příkazy ve vkládacím režimu odpovídají režimu Emacsu:</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Ctrl+H</td><td>smazání znaku nalevo od kurzoru (odpovídá <i>Backspace</i>)</td></tr>
<tr><td>Ctrl+R</td><td>zpětné (interaktivní) vyhledávání v&nbsp;historii</td></tr>
<tr><td>Ctrl+W</td><td>smaže předchozí slovo a uloží ho do kill ringu</td></tr>
</table>



<h4>Další příkazy</h4>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>Esc</td><td>přepnutí do normálního režimu</td></tr>
<tr><td>1-9</td><td>prefix pro opakování další operace</td></tr>
<tr><td>u</td><td>vrácení poslední operace (lze opakovat)</td></tr>
<tr><td>a</td><td><i>append</i> &ndash; přechod do režimu vkládání</td></tr>
<tr><td>i</td><td><i>insert</i> &ndash; přechod do režimu vkládání</td></tr>
<tr><td>~</td><td>změna jednoho znaku: verzálky/kapitálky a zpět</td></tr>
<tr><td>k</td><td>průchod historií &ndash; předchozí text</td></tr>
<tr><td>j</td><td>průchod historií &ndash; následující text</td></tr>
</table>





<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Coconut byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>17</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>18</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>19</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>20</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>21</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
<tr><td>22</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Coconut: funkcionální jazyk s pattern matchingem kompatibilní s Pythonem<br />
<a href="https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/">https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/</a>
</li>

<li>Coconut aneb funkcionální nadstavba nad Pythonem (2.část)<br />
<a href="https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/">https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/</a>
</li>

<li>Python 3.10 and the Elegance of Pattern Matching<br />
<a href="https://python.plainenglish.io/python-3-10-and-the-elegance-of-pattern-matching-2620a02b2379">https://python.plainenglish.io/python-3-10-and-the-elegance-of-pattern-matching-2620a02b2379</a>
</li>

<li>More Pattern Matching in Python 3.10<br />
<a href="https://towardsdatascience.com/more-advanced-pattern-matching-in-python-3-10-2dbd8598302a">https://towardsdatascience.com/more-advanced-pattern-matching-in-python-3-10-2dbd8598302a</a>
</li>

<li>Pattern Matching in Python 3.10<br />
<a href="https://towardsdatascience.com/pattern-matching-in-python-3-10-6124ff2079f0">https://towardsdatascience.com/pattern-matching-in-python-3-10-6124ff2079f0</a>
</li>

<li>Python 3.10.0<br />
<a href="https://www.python.org/downloads/release/python-3100/">https://www.python.org/downloads/release/python-3100/</a>
</li>

<li>PEP 634 &ndash; Structural Pattern Matching: Specification<br />
<a href="https://peps.python.org/pep-0634/">https://peps.python.org/pep-0634/</a>
</li>

<li>PEP 635 &ndash; Structural Pattern Matching: Motivation and Rationale<br />
<a href="https://peps.python.org/pep-0635/">https://peps.python.org/pep-0635/</a>
</li>

<li>PEP 636 &ndash; Structural Pattern Matching: Tutorial<br />
<a href="https://peps.python.org/pep-0636/">https://peps.python.org/pep-0636/</a>
</li>

<li>PEP 622 &ndash; Structural Pattern Matching<br />
<a href="https://peps.python.org/pep-0622/">https://peps.python.org/pep-0622/</a>
</li>

<li>Python 3.10 se strukturálním pattern matchingem<br />
<a href="https://www.root.cz/zpravicky/python-3-10-se-strukturalnim-pattern-matchingem/">https://www.root.cz/zpravicky/python-3-10-se-strukturalnim-pattern-matchingem/</a>
</li>

<li>Null coalescing operator<br />
<a href="https://en.wikipedia.org/wiki/Null_coalescing_operator">https://en.wikipedia.org/wiki/Null_coalescing_operator</a>
</li>

<li>Operátor koalescence<br />
<a href="https://cs.wikipedia.org/wiki/Oper%C3%A1tor_koalescence">https://cs.wikipedia.org/wiki/Oper%C3%A1tor_koalescence</a>
</li>

<li>Elvis operator<br />
<a href="https://en.wikipedia.org/wiki/Elvis_operator">https://en.wikipedia.org/wiki/Elvis_operator</a>
</li>

<li>Safe navigation operator<br />
<a href="https://en.wikipedia.org/wiki/Safe_navigation_operator">https://en.wikipedia.org/wiki/Safe_navigation_operator</a>
</li>

<li>Setting stacksize in a python script<br />
<a href="https://stackoverflow.com/questions/5061582/setting-stacksize-in-a-python-script">https://stackoverflow.com/questions/5061582/setting-stacksize-in-a-python-script</a>
</li>

<li>What is the maximum recursion depth in Python, and how to increase it?<br />
<a href="https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it?rq=1">https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it?rq=1</a>
</li>

<li>Does Python optimize tail recursion?<br />
<a href="https://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion">https://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion</a>
</li>

<li>Programovací jazyk APL: programování bez smyček<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-apl-programovani-bez-smycek/">https://www.root.cz/clanky/programovaci-jazyk-apl-programovani-bez-smycek/</a>
</li>

<li>Programovací jazyk APL - dokončení<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-apl-dokonceni/">https://www.root.cz/clanky/programovaci-jazyk-apl-dokonceni/</a>
</li>

<li>Tail call<br />
<a href="https://en.wikipedia.org/wiki/Tail_call">https://en.wikipedia.org/wiki/Tail_call</a>
</li>

<li>Tail Call Optimization for Python<br />
<a href="https://github.com/baruchel/tco">https://github.com/baruchel/tco</a>
</li>

<li>Tail Recursion Elimination<br />
<a href="http://neopythonic.blogspot.cz/2009/04/tail-recursion-elimination.html">http://neopythonic.blogspot.cz/2009/04/tail-recursion-elimination.html</a>
</li>

<li>Origins of Python's "Functional" Features <br />
<a href="http://python-history.blogspot.cz/2009/04/origins-of-pythons-functional-features.html">http://python-history.blogspot.cz/2009/04/origins-of-pythons-functional-features.html</a>
</li>

<li>Tail recursion decorator revisited<br />
<a href="http://fiber-space.de/wordpress/2009/04/20/tail-recursion-decorator-revisited/">http://fiber-space.de/wordpress/2009/04/20/tail-recursion-decorator-revisited/</a>
</li>

<li>Koncová rekurze<br />
<a href="https://cs.wikipedia.org/wiki/Koncov%C3%A1_rekurze">https://cs.wikipedia.org/wiki/Koncov%C3%A1_rekurze</a>
</li>

<li>Recursion (computer science)<br />
<a href="https://en.wikipedia.org/wiki/Recursion_%28computer_science%29">https://en.wikipedia.org/wiki/Recursion_%28computer_science%29</a>
</li>

<li>Coconut: Simple, elegant, Pythonic functional programming<br />
<a href="http://coconut-lang.org/">http://coconut-lang.org/</a>
</li>

<li>coconut 1.1.0 (Python package index)<br />
<a href="https://pypi.python.org/pypi/coconut/1.1.0">https://pypi.python.org/pypi/coconut/1.1.0</a>
</li>

<li>Coconut Tutorial<br />
<a href="http://coconut.readthedocs.io/en/master/HELP.html">http://coconut.readthedocs.io/en/master/HELP.html</a>
</li>

<li>Coconut FAQ<br />
<a href="http://coconut.readthedocs.io/en/master/FAQ.html">http://coconut.readthedocs.io/en/master/FAQ.html</a>
</li>

<li>Coconut Documentation<br />
<a href="http://coconut.readthedocs.io/en/master/DOCS.html">http://coconut.readthedocs.io/en/master/DOCS.html</a>
</li>

<li>Python gains functional programming syntax via Coconut<br />
<a href="https://www.infoworld.com/article/3088058/python-gains-functional-programming-syntax-via-coconut.html">https://www.infoworld.com/article/3088058/python-gains-functional-programming-syntax-via-coconut.html</a>
</li>

<li>Repositář projektu pyparsing<br />
<a href="https://github.com/pyparsing/pyparsing">https://github.com/pyparsing/pyparsing</a>
</li>

<li>Repositář projektu cPyparsing<br />
<a href="https://github.com/evhub/cpyparsing">https://github.com/evhub/cpyparsing</a>
</li>

<li>Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython<br />
<a href="https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/">https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/</a>
</li>

<li>Coconut na Redditu<br />
<a href="https://www.reddit.com/r/Python/comments/4owzu7/coconut_functional_programming_in_python/">https://www.reddit.com/r/Python/comments/4owzu7/coconut_functional_programming_in_python/</a>
</li>

<li>Repositář na GitHubu<br />
<a href="https://github.com/evhub/coconut">https://github.com/evhub/coconut</a>
</li>

<li>patterns<br />
<a href="https://github.com/Suor/patterns">https://github.com/Suor/patterns</a>
</li>

<li>Source-to-source compiler<br />
<a href="https://en.wikipedia.org/wiki/Source-to-source_compiler">https://en.wikipedia.org/wiki/Source-to-source_compiler</a>
</li>

<li>The Lua VM, on the Web<br />
<a href="https://kripken.github.io/lua.vm.js/lua.vm.js.html">https://kripken.github.io/lua.vm.js/lua.vm.js.html</a>
</li>

<li>Lua.vm.js REPL<br />
<a href="https://kripken.github.io/lua.vm.js/repl.html">https://kripken.github.io/lua.vm.js/repl.html</a>
</li>

<li>lua2js<br />
<a href="https://www.npmjs.com/package/lua2js">https://www.npmjs.com/package/lua2js</a>
</li>

<li>Wisp na GitHubu<br />
<a href="https://github.com/Gozala/wisp">https://github.com/Gozala/wisp</a>
</li>

<li>Wisp playground<br />
<a href="http://www.jeditoolkit.com/try-wisp/">http://www.jeditoolkit.com/try-wisp/</a>
</li>

<li>REPL v prohlížeči<br />
<a href="http://www.jeditoolkit.com/interactivate-wisp/">http://www.jeditoolkit.com/interactivate-wisp/</a>
</li>

<li>Minification (programming)<br />
<a href="https://en.wikipedia.org/wiki/Minification_(programming)">https://en.wikipedia.org/wiki/Minification_(programming)</a>
</li>

<li>JavaScript is Assembly Language for the Web: Sematic Markup is Dead! Clean vs. Machine-coded HTML<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx</a>
</li>

<li>JavaScript is Web Assembly Language and that's OK.<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx">http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx</a>
</li>

<li>Dart<br />
<a href="https://www.dartlang.org/">https://www.dartlang.org/</a>
</li>

<li>CoffeeScript<br />
<a href="http://coffeescript.org/">http://coffeescript.org/</a>
</li>

<li>TypeScript<br />
<a href="http://www.typescriptlang.org/">http://www.typescriptlang.org/</a>
</li>

<li>JavaScript: The Web Assembly Language?<br />
<a href="http://www.informit.com/articles/article.aspx?p=1856657">http://www.informit.com/articles/article.aspx?p=1856657</a>
</li>

<li>asm.js<br />
<a href="http://asmjs.org/">http://asmjs.org/</a>
</li>

<li>List of languages that compile to JS<br />
<a href="https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS">https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS</a>
</li>

<li>Permutation<br />
<a href="https://en.wikipedia.org/wiki/Permutation">https://en.wikipedia.org/wiki/Permutation</a>
</li>

<li>Pattern matching (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Pattern_matching">https://en.wikipedia.org/wiki/Pattern_matching</a>
</li>

<li>Pattern matching v&nbsp;Rustu<br />
<a href="https://www.root.cz/clanky/rust-funkce-lambda-vyrazy-a-rozhodovaci-konstrukce-match/#k13">https://www.root.cz/clanky/rust-funkce-lambda-vyrazy-a-rozhodovaci-konstrukce-match/#k13</a>
</li>

<li>SNOBOL<br />
<a href="https://en.wikipedia.org/wiki/SNOBOL">https://en.wikipedia.org/wiki/SNOBOL</a>
</li>

<li>Podpůrný plugin pro Vim<br />
<a href="https://github.com/manicmaniac/coconut.vim">https://github.com/manicmaniac/coconut.vim</a>
</li>

<li>Příkaz (programování)<br />
<a href="https://cs.wikipedia.org/wiki/P%C5%99%C3%ADkaz_%28programov%C3%A1n%C3%AD%29">https://cs.wikipedia.org/wiki/P%C5%99%C3%ADkaz_%28programov%C3%A1n%C3%AD%29</a>
</li>

<li>Threading Macros Guide<br />
<a href="https://clojure.org/guides/threading_macros">https://clojure.org/guides/threading_macros</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

