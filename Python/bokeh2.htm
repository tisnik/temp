<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. Interaktivní ovládací prvky na stránce s&nbsp;grafem</a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
values = 50
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 100, values)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.full(values, 10)
y2 = np.full(values, 9)
y3 = np.full(values, 8)
y4 = np.full(values, 7)
y5 = np.full(values, 6)
y6 = np.full(values, 5)
y7 = np.full(values, 4)
y8 = np.full(values, 3)
y9 = np.full(values, 2)
y10 = np.full(values, 1)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Styly vykreslení", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhů</i>
p.square_dot(x, y1, legend_label="square_dot", line_width=1, color="#f00000")
p.circle(x, y2, legend_label="circle", line_width=1, color="#f00020")
p.asterisk(x, y3, legend_label="asterisk", line_width=1, color="#e00040")
p.circle_cross(x, y4, legend_label="circle_cross", line_width=1, color="#c00060")
p.circle_dot(x, y5, legend_label="circle_dot", line_width=1, color="#a00080")
p.cross(x, y6, legend_label="cross", line_width=1, color="#8000a0")
p.dot(x, y7, legend_label="dot", line_width=1, color="#6000c0")
p.plus(x, y8, legend_label="plus", line_width=1, color="#4000e0")
p.dash(x, y9, legend_label="dash", line_width=1, color="#2000f0")
p.line(x, y10, legend_label="line", line_width=1, color="#0000f0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
values = 50
&nbsp;
<i># hodnoty na x-ové ose</i>
x = np.linspace(0, 100, values)
&nbsp;
<i># hodnoty na y-ové ose</i>
y1 = np.full(values, 10)
y2 = np.full(values, 9)
y3 = np.full(values, 8)
y4 = np.full(values, 7)
y5 = np.full(values, 6)
y6 = np.full(values, 5)
y7 = np.full(values, 4)
y8 = np.full(values, 3)
y9 = np.full(values, 2)
y10 = np.full(values, 1)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Styly vykreslení", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhů</i>
p.square_dot(x, y1, legend_label="square_dot", line_width=3, color="#f00000")
p.circle(x, y2, legend_label="circle", line_width=3, color="#f00020")
p.asterisk(x, y3, legend_label="asterisk", line_width=3, color="#e00040")
p.circle_cross(x, y4, legend_label="circle_cross", line_width=3, color="#c00060")
p.circle_dot(x, y5, legend_label="circle_dot", line_width=3, color="#a00080")
p.cross(x, y6, legend_label="cross", line_width=3, color="#8000a0")
p.dot(x, y7, legend_label="dot", line_width=3, color="#6000c0")
p.plus(x, y8, legend_label="plus", line_width=3, color="#4000e0")
p.dash(x, y9, legend_label="dash", line_width=3, color="#2000f0")
p.line(x, y10, legend_label="line", line_width=3, color="#0000f0")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
<i># vykreslení průběhu funkce sin</i>
&nbsp;
<i># počet bodů na spirále</i>
points = 150
&nbsp;
<i># úhel v polárním grafu</i>
theta = np.linspace(0.01, 8 * np.pi, points)
&nbsp;
<i># koeficient spirály</i>
k = 0.15
&nbsp;
<i># funkce: vzdálenost od středu</i>
radius = np.exp(k * theta)
&nbsp;
x = radius * np.sin(theta)
&nbsp;
y = radius * np.cos(theta)
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Spiral", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhu</i>
p.scatter(x, y, size=5, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhu</i>
p.scatter(x, y, size=1, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show, row
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro první graf</i>
p1 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhu</i>
p1.scatter(x, y, size=1, color="blue")
&nbsp;
<i># plocha pro druhý graf</i>
p2 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z")
&nbsp;
<i># vykreslení průběhu</i>
p2.scatter(x, z, size=1, color="blue")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(row(p1, p2))
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.layouts import grid
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro první graf</i>
p1 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhu</i>
p1.scatter(x, y, size=1, color="blue")
&nbsp;
<i># plocha pro druhý graf</i>
p2 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z")
&nbsp;
<i># vykreslení průběhu</i>
p2.scatter(x, z, size=1, color="darkred")
&nbsp;
<i># plocha pro třetí graf</i>
p3 = figure(title="Lorenz attractor", x_axis_label="y", y_axis_label="z")
&nbsp;
<i># vykreslení průběhu</i>
p3.scatter(y, z, size=1, color="darkgreen")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(grid([[p2, p3], p1]))
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.layouts import grid
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro první graf</i>
p1 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y", width=300, height=300)
&nbsp;
<i># vykreslení průběhu</i>
p1.scatter(x, y, size=0.5, color="blue")
&nbsp;
<i># plocha pro druhý graf</i>
p2 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z", width=300, height=300)
&nbsp;
<i># vykreslení průběhu</i>
p2.scatter(x, z, size=0.5, color="darkred")
&nbsp;
<i># plocha pro třetí graf</i>
p3 = figure(title="Lorenz attractor", x_axis_label="y", y_axis_label="z", width=300, height=300)
&nbsp;
<i># vykreslení průběhu</i>
p3.scatter(y, z, size=0.5, color="darkgreen")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(grid([[p2, p3], p1]))
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
from bokeh.layouts import grid
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro první graf</i>
p1 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y", width=300, height=300)
&nbsp;
<i># vykreslení průběhu</i>
p1.scatter(x, y, size=0.5, color="blue", alpha=0.4)
&nbsp;
<i># plocha pro druhý graf</i>
p2 = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z", width=300, height=300)
&nbsp;
<i># vykreslení průběhu</i>
p2.scatter(x, z, size=0.5, color="darkred", alpha=0.4)
&nbsp;
<i># plocha pro třetí graf</i>
p3 = figure(title="Lorenz attractor", x_axis_label="y", y_axis_label="z", width=300, height=300)
&nbsp;
<i># vykreslení průběhu</i>
p3.scatter(y, z, size=0.5, color="darkgreen", alpha=0.4)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(grid([[p2, p3], p1]))
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># gradient od 0 do 255</i>
l = np.linspace(0, 255, num=n)
&nbsp;
<i># barvová paleta</i>
colors = ["#%02x%02x%02x" % (255-int(value), 0, int(value)) for value in l]
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhu</i>
p.scatter(x, y, size=1, color=colors)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 100000
&nbsp;
<i># gradient od 0 do 255</i>
l = np.linspace(0, 255, num=n)
&nbsp;
<i># barvová paleta</i>
colors = ["#%02x%02x%02x" % (255-int(value), 0, int(value)) for value in l]
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="y")
&nbsp;
<i># vykreslení průběhu</i>
p.dot(x, y, line_color=colors, line_alpha=0.2)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting`</i>
&nbsp;
from bokeh.plotting import figure, show
&nbsp;
factors = ["a", "b", "c"]
x = ["a"]*3 + ["b"]*3 + ["c"]*3
y = factors*3
&nbsp;
print(factors)
print(x)
print(y)
&nbsp;
<i># barvy jednotlivých čtverečků</i>
colors = [
    "#0B486B", "#79BD9A", "#CFF09E",
    "#79BD9A", "#0B486B", "#79BD9A",
    "#CFF09E", "#79BD9A", "#0B486B"
]
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Categorical Heatmap", tools="hover",
        toolbar_location=None, x_range=factors, y_range=factors)
&nbsp;
<i># vykreslení heatmapy</i>
p.rect(x, y, color=colors, width=1, height=1)
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(p)
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Interaktivní ovládací prvky na stránce s&nbsp;grafem</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.io`</i>
from bokeh.io import show
&nbsp;
<i># naimportujeme vybrané funkce z knihovny `bokeh.models`</i>
from bokeh.models import Button, CustomJS
&nbsp;
<i># vytvoření ovládacího prvku</i>
button = Button(label="Foo", button_type="success")
&nbsp;
<i># specifikace handleru</i>
button.js_on_click(CustomJS(code="console.log('button: click!', this.toString())"))
&nbsp;
<i># zobrazení ovládacího prvku</i>
show(button)
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Modifikace grafu s&nbsp;využitím ovládacích prvků</h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Přidání ovládacího prvku pro výběr barvy</h2>

<p></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting` i dalších knihoven</i>
from bokeh.plotting import figure, show
from bokeh.layouts import column
from bokeh.models import ColorPicker
&nbsp;
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z", width=500, height=500)
&nbsp;
<i># vykreslení průběhu</i>
scatter = p.scatter(x, z, size=1, color="blue")
&nbsp;
<i># výběr barvy</i>
picker = ColorPicker(title="Color")
picker.js_link("color", scatter.glyph, "line_color")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(column(p, picker))
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Přidání ovládacího prvku pro výběr velikosti vykreslovaných &bdquo;stop&ldquo;</h2>

<p></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting` i dalších knihoven</i>
from bokeh.plotting import figure, show
from bokeh.layouts import column
from bokeh.models import ColorPicker, Slider
&nbsp;
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z", width=500, height=500)
&nbsp;
<i># vykreslení průběhu</i>
scatter = p.scatter(x, z, size=1, color="blue")
&nbsp;
<i># výběr barvy</i>
picker = ColorPicker(title="Color")
picker.js_link("color", scatter.glyph, "line_color")
&nbsp;
<i># posuvník</i>
slider = Slider(start=0, end=10, value=1, step=.1, title="Splatter size")
slider.js_link("value", scatter.glyph, "size")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(column(p, picker, slider))
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Přidání ovládacího prvku pro výběr průhlednosti vykreslovaných &bdquo;stop&ldquo;</h2>

<p></p>

<pre>
<i># naimportujeme vybrané funkce z knihovny `bokeh.plotting` i dalších knihoven</i>
from bokeh.plotting import figure, show
from bokeh.layouts import column
from bokeh.models import ColorPicker, Slider
&nbsp;
&nbsp;
<i># taktéž budeme potřebovat některé funkce z knihovny `numpy`</i>
import numpy as np
&nbsp;
&nbsp;
<i># funkce pro výpočet dalšího bodu Lorenzova atraktoru</i>
def lorenz(x, y, z, s=10, r=28, b=2.667):
    x_dot = s * (y - x)
    y_dot = r * x - y - x * z
    z_dot = x * y - b * z
    return x_dot, y_dot, z_dot
&nbsp;
&nbsp;
<i># krok (změna času)</i>
dt = 0.01
&nbsp;
<i># celkový počet vypočtených bodů na Lorenzově atraktoru</i>
n = 10000
&nbsp;
<i># prozatím prázdné pole připravené pro výpočet</i>
x = np.zeros((n,))
y = np.zeros((n,))
z = np.zeros((n,))
&nbsp;
<i># počáteční hodnoty</i>
x[0], y[0], z[0] = (0.0, 1.0, 1.05)
&nbsp;
<i># vlastní výpočet atraktoru</i>
for i in range(n - 1):
    x_dot, y_dot, z_dot = lorenz(x[i], y[i], z[i])
    x[i + 1] = x[i] + x_dot * dt
    y[i + 1] = y[i] + y_dot * dt
    z[i + 1] = z[i] + z_dot * dt
&nbsp;
<i># plocha pro graf</i>
p = figure(title="Lorenz attractor", x_axis_label="x", y_axis_label="z", width=500, height=500)
&nbsp;
<i># vykreslení průběhu</i>
scatter = p.scatter(x, z, size=1, color="blue", alpha=0.5)
&nbsp;
<i># výběr barvy</i>
picker = ColorPicker(title="Color")
picker.js_link("color", scatter.glyph, "line_color")
&nbsp;
<i># posuvník pro změnu průblednosti</i>
slider_alpha = Slider(start=0, end=1, value=0.5, step=.01, title="Alpha")
slider_alpha.js_link("value", scatter.glyph, "line_alpha")
&nbsp;
<i># posuvník pro změnu velikosti</i>
slider_size = Slider(start=0, end=10, value=1, step=.1, title="Splatter size")
slider_size.js_link("value", scatter.glyph, "size")
&nbsp;
<i># vykreslení grafu do plochy webové stránky</i>
show(column(p, picker, slider_alpha, slider_size))
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Obsah navazujícího článku</h2>

<p></p>

<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/19_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/19_styles.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/20_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/20_styles.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/21_scatter.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/21_scatter.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/22_lorenz_attractor.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/22_lorenz_attractor.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/23_row_plots.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/23_row_plots.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/24_grid_plots.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/24_grid_plots.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/25_grid_plot_sizes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/25_grid_plot_sizes.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/26_alpha.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/26_alpha.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/27_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/27_colors.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/28_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/28_colors.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/29_heatmap.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/29_heatmap.py</a></p>
<p>Zdrojový kód tohoto demonstračního příkladu je dostupný na adrese <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/30_button.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/30_button.py</a></p>


<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_linear_plot.py</td><td>nejjednodušší typ grafu poskytovaný knihovnou Bokeh</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/01_linear_plot.py</a></td></tr>
<tr><td> 2</td><td>02_linear_plot.py</td><td>zobrazení titulku a legendy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/02_linear_plot.py</a></td></tr>
<tr><td> 3</td><td>03_sinus_plot.py</td><td>kooperace s&nbsp;knihovnou NumPy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/03_sinus_plot.py</a></td></tr>
<tr><td> 4</td><td>04_sin_cos_plot.py</td><td>vykreslení průběhu dvou funkcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/04_sin_cos_plot.py</a></td></tr>
<tr><td> 5</td><td>05_sin_cos_plot.py</td><td>alternativní způsob specifikace barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/05_sin_cos_plot.py</a></td></tr>
<tr><td> 6</td><td>06_sin_cos_circles.py</td><td>alternativní značky pro vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/06_sin_cos_circles.py</a></td></tr>
<tr><td> 7</td><td>07_bars.py</td><td>jednoduchý sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/07_bars.py</a></td></tr>
<tr><td> 8</td><td>08_bars.py</td><td>korektní způsob předávání hodnot pro sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/08_bars.py</a></td></tr>
<tr><td> 9</td><td>09_bars.py</td><td>šířka jednotlivých sloupců ve sloupcovém grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/09_bars.py</a></td></tr>
<tr><td>10</td><td>10_sin_cos_bars.py</td><td>sloupcový graf se specifikací začátků a konce sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/10_sin_cos_bars.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/10_sin_cos_bars.py</a></td></tr>
<tr><td>11</td><td>11_sin_cos_circle.py</td><td>vykreslení kružnice (parametrická křivka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/11_sin_cos_circle.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/11_sin_cos_circle.py</a></td></tr>
<tr><td>12</td><td>12_spiral.py</td><td>vykreslení logaritmické spirály (parametrická křivka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/12_spiral.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/12_spiral.py</a></td></tr>
<tr><td>13</td><td>13_output_png.py</td><td>export grafu do formátu PNG</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/13_output_png.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/13_output_png.py</a></td></tr>
<tr><td>14</td><td>14_legend_styling.py</td><td>nastavení stylu zobrazení legendy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/14_legend_styling.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/14_legend_styling.py</a></td></tr>
<tr><td>15</td><td>15_figure_size.py</td><td>specifikace velikosti grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/15_figure_size.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/15_figure_size.py</a></td></tr>
<tr><td>16</td><td>16_axis_limits.py</td><td>nastavení limitu na souřadných osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/16_axis_limits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/16_axis_limits.py</a></td></tr>
<tr><td>17</td><td>17_linear_scale.py</td><td>měřítka na osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/17_linear_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/17_linear_scale.py</a></td></tr>
<tr><td>18</td><td>18_log_scale.py</td><td>logaritmické měřítko na y-ové ose</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/18_log_scale.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>19</td><td>19_styles.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/19_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/19_styles.py</a></td></tr>
<tr><td>20</td><td>20_styles.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/20_styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/20_styles.py</a></td></tr>
<tr><td>21</td><td>21_scatter.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/21_scatter.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/21_scatter.py</a></td></tr>
<tr><td>22</td><td>22_lorenz_attractor.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/22_lorenz_attractor.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/22_lorenz_attractor.py</a></td></tr>
<tr><td>23</td><td>23_row_plots.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/23_row_plots.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/23_row_plots.py</a></td></tr>
<tr><td>24</td><td>24_grid_plots.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/24_grid_plots.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/24_grid_plots.py</a></td></tr>
<tr><td>25</td><td>25_grid_plot_sizes.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/25_grid_plot_sizes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/25_grid_plot_sizes.py</a></td></tr>
<tr><td>26</td><td>26_alpha.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/26_alpha.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/26_alpha.py</a></td></tr>
<tr><td>27</td><td>27_colors.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/27_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/27_colors.py</a></td></tr>
<tr><td>28</td><td>28_colors.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/28_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/28_colors.py</a></td></tr>
<tr><td>29</td><td>29_heatmap.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/29_heatmap.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/29_heatmap.py</a></td></tr>
<tr><td>30</td><td>30_button.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/30_button.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/30_button.py</a></td></tr>
<tr><td>31</td><td>31_select_color.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/31_select_color.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/31_select_color.py</a></td></tr>
<tr><td>32</td><td>32_select_color_size.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/32_select_color_size.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/32_select_color_size.py</a></td></tr>
<tr><td>33</td><td>33_select_color_size_alpha.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/33_select_color_size_alpha.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/33_select_color_size_alpha.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>34</td><td>matplotlib_plot.py</td><td>ukázka použití &bdquo;konkurenčního&ldquo; projektu Matplotlib</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/matplotlib_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/bokeh/matplotlib_plot.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>bokeh na GitHubu<br />
<a href="https://github.com/bokeh/bokeh">https://github.com/bokeh/bokeh</a>
</li>

<li>First steps 1: Creating a line chart<br />
<a href="https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_1.html">https://docs.bokeh.org/en/latest/docs/first_steps/first_steps_1.html</a>
</li>

<li>Python Bokeh tutorial – Interactive Data Visualization with Bokeh<br />
<a href="https://www.geeksforgeeks.org/python-bokeh-tutorial-interactive-data-visualization-with-bokeh/">https://www.geeksforgeeks.org/python-bokeh-tutorial-interactive-data-visualization-with-bokeh/</a>
</li>

<li>The R Project for Statistical Computing<br />
<a href="https://www.r-project.org/">https://www.r-project.org/</a>
</li>

<li>An Introduction to R<br />
<a href="https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf">https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf</a>
</li>

<li>R (programming language)<br />
<a href="https://en.wikipedia.org/wiki/R_(programming_language)">https://en.wikipedia.org/wiki/R_(programming_language)</a>
</li>

<li>Graphics, ggplot2<br />
<a href="http://r4stats.com/examples/graphics-ggplot2/">http://r4stats.com/examples/graphics-ggplot2/</a>
</li>

<li>Seriál Programovací jazyk Julia<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-julia/">https://www.root.cz/serialy/programovaci-jazyk-julia/</a>
</li>

<li>Plotly<br />
<a href="https://plotly.com/">https://plotly.com/</a>
</li>

<li>pyecharts<br />
<a href="https://github.com/pyecharts/pyecharts/blob/master/README.en.md">https://github.com/pyecharts/pyecharts/blob/master/README.en.md</a>
</li>

<li>Tvorba grafů v&nbsp;Jupyter Notebooku s&nbsp;využitím knihovny Matplotlib<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/">https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

