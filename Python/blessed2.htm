<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba aplikací a her s textovým uživatelským rozhraním s využitím knihovny Blessed (dokončení)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba aplikací a her s textovým uživatelským rozhraním s využitím knihovny Blessed (dokončení)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve druhém článku o knihovně Blessed si nejprve ukážeme implementaci prohlížeče obrázků běžícího v terminálu, popíšeme si tři režimy práce terminálu, které souvisí se čtením kláves a nezapomeneme ani na popis funkcí určených pro pohyb kurzoru v ploše terminálu.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Tvorba aplikací a her s&nbsp;textovým uživatelským rozhraním s&nbsp;využitím knihovny Blessed (dokončení)</a></p>
<p><a href="#k02">2. Prohlížeč obrázků pro terminál?</a></p>
<p><a href="#k03">3. Využití &bdquo;plného&ldquo; znaku ve funkci pixelu</a></p>
<p><a href="#k04">4. Využití mezery s&nbsp;modifikovanou barvou pozadí</a></p>
<p><a href="#k05">5. Použití znaků Unicode na terminálu</a></p>
<p><a href="#k06">6. Režim terminálu</a></p>
<p><a href="#k07">7. Čtení kláves v&nbsp;režimu <i>cbreak</i></a></p>
<p><a href="#k08">8. Rozpoznání jména a kódu stisknutých kláves</a></p>
<p><a href="#k09">9. Sekvence znaků poslaná po stisku klávesy</a></p>
<p><a href="#k10">10. Neblokující čtení klávesy</a></p>
<p><a href="#k11">11. &bdquo;Raw&ldquo; režim terminálu</a></p>
<p><a href="#k12">12. Pohyb kurzoru po ploše terminálu</a></p>
<p><a href="#k13">13. Ukázka skriptu přesunujícího kurzor</a></p>
<p><a href="#k14">14. Výpočet umístění textu s&nbsp;řídicími znaky, obnovení původní pozice kurzoru</a></p>
<p><a href="#k15">15. Přeformátování textu</a></p>
<p><a href="#k16">*** 16. Chybějící funkcionalita</a></p>
<p><a href="#k17">17. Dodatek 1: klávesy rozeznávané knihovnou Blessed</a></p>
<p><a href="#k18">18. Dodatek 2: příklad nastavení xtermu</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba aplikací a her s&nbsp;textovým uživatelským rozhraním s&nbsp;využitím knihovny Blessed (dokončení)</h2>

<p><a
href="https://www.root.cz/clanky/tvorba-aplikaci-a-her-s-textovym-uzivatelskym-rozhranim-s-vyuzitim-knihovny-blessed/">V&nbsp;úvodním
článku</a> o knihovně <i>Blessed</i> jsme si popsali pouze základní funkce této
potenciálně užitečné knihovny, které je možné použít pro změnu (vylepšení)
zobrazení údajů na terminálu. To je však ve skutečnosti pouze relativně malá
(ovšem pochopitelně důležitá) část celkové funkcionality. Aby bylo možné
vytvářet plnohodnotné celoobrazovkové aplikace, je nutné umět přesunout textový
kurzor na libovolnou pozici na terminálu (sloupec, řádek), reagovat na stisk
klávesy (a nikoli čekat na potvrzení Enterem, což je implicitní režim práce
s&nbsp;terminálem) popř.&nbsp;reagovat na změnu velikosti okna terminálu. Tyto
funkce budou popsány v&nbsp;dnešní a současně i poslední části mikroseriálku o
knihovně <i>Blessed</i>.</p>

<a href="http://www.root.cz/obrazek/115555/"><img src="http://i.iinfo.cz/images/51/120-a-12-prev.png" width="370" height="232" alt="&#160;" /></a>
<p><i>Obrázek 1: Rogue, aneb prapředek klasických roguelike her &ndash; průzkum
prvního patra dungeonu. Tato hra využívá některých možností poskytovaných
textovými terminály.</i></p>

<p>Tyto funkce poskytované knihovnou <i>Blessed</i> jsou dostatečné pro vývoj
většiny aplikací pracujících v&nbsp;terminálu. Mezi takové aplikace patří
především textové editory, dále například celoobrazovkové debuggery (příkladem
může být <a
href="https://www.root.cz/clanky/pudb-vykonny-debugger-pro-python-s-retro-uzivatelskym-rozhranim/">PuDB</a>,
což je debugger pro Python), nástroje typu <i>Midnight Commander</i> a dokonce
i některé hry. U her se na chvíli zastavme: vytvářet lze hry typu
Rogue/Nethack, pochopitelně textovky, strategické hry i některé hry akční.
Ovšem zde poměrně záhy narazíme na problematickou práci s&nbsp;klávesnicí,
neboť nelze (alespoň ne jednoduše) reagovat na stisk i puštění klávesy, u
kláves se posílá informace o automatickém opakování atd. Možnosti knihovny
<i>Blessed</i> jsou v&nbsp;tomto ohledu poněkud limitovány &ndash; nejedná se
tedy v&nbsp;žádném případě o &bdquo;SDL pro konzoli&ldquo;.</p>

<a href="https://www.root.cz/obrazek/331050/"><img src="https://i.iinfo.cz/images/442/pudb-4-prev.png" class="image-331050" alt="&#160;" width="370" height="244" /></a>
<p><i>Obrázek 2: Pohled na textové uživatelské rozhraní debuggeru PuDB
s&nbsp;pěti regiony.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Prohlížeč obrázků pro terminál?</h2>

<p>Minule jsme si kromě dalších informací řekli, že terminály většinou
podporují osm, šestnáct, 256 popř.&nbsp;2<sup>24</sup> barev
(<strong>xterm</strong> pak 4096 barev). Knihovna <i>Blessed</i> dokáže
pracovat s&nbsp;celým barvovým spektrem, tedy s&nbsp;oněmi více než šestnácti
miliony barvových odstínů (záleží pak na konkrétním terminálu, zda dokáže
všechny tyto barvy zobrazit nebo například provede převod na nejbližší barvu
z&nbsp;palety 4096 odstínů). Pro převod vlastní barvy (reprezentované většinou
v&nbsp;barvovém prostoru RGB) na příslušný řídicí kód (<i>escape sekvenci</i>)
slouží funkce nazvaná <strong>color_rgb</strong>.</p>

<a href="http://www.root.cz/obrazek/116548/"><img src="http://i.iinfo.cz/images/377/games-61-3-prev.png" width="370" height="231" alt="&#160;" /></a>
<p><i>Obrázek 3: Kingdom of Kroz II &ndash; úvodní obrazovka s&nbsp;ANSI artem
(starší hra pro IBM PC).</i></p>

<p>Pokusme se nyní tuto vlastnost moderních terminálů využít a vytvořit
primitivní prohlížeč obrázků. Namísto bitmapy s&nbsp;jednotlivými pixely
použijeme textový terminál, přičemž funkci <i>pixelu</i> (obrazového elementu)
převezme celý znak &ndash; buď vykreslíme určitou barvou znak &bdquo;box&ldquo;
z&nbsp;Unicode (viz též <a
href="https://en.wikipedia.org/wiki/Box-drawing_character">tento přehledový
článek</a>), nebo vykreslíme mezeru, ovšem se změněnou barvou pozadí. Nejdříve
získáme testovací obrázek, který po stažení zmenšíme na rozměry 128&times;128
pixelů. O obě tyto operace se postará následující jednoduchý skript:</p>

<pre>
<i>"""Retrieve test image, resize it, and store under new filename."""</i>
&nbsp;
from PIL import Image
import urllib.request
&nbsp;
url = "<u>https://homepages.cae.wisc.edu/~ece533/images/fruits.png</u>"
&nbsp;
original_filename = "fruits_.png"
resized_filename = "fruits.png"
&nbsp;
urllib.request.urlretrieve(url, original_filename)
&nbsp;
img = Image.open(original_filename)
resized = img.resize((128, 128), Image.BILINEAR)
resized.save(resized_filename)
</pre>

*** image ***
<p><i>Obrázek 4: Originální obrázek s&nbsp;rozlišením 512&times;512
pixelů.</i></p>

*** image ***
<p><i>Obrázek 5: Obrázek po zmenšení na 128&times;128 pixelů.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Využití &bdquo;plného&ldquo; znaku ve funkci pixelu</h2>

<p>První verze prohlížeče obrázků využívá &bdquo;plný&ldquo; znak,
tj.&nbsp;znak, který by měl mít ve všech znakových sadách tvar vyplněného
obdélníku. Jedná se o <a
href="https://www.unicodepedia.com/unicode/block-elements/2588/full-block/">následující
znak Unicode</a>. Program pracuje jednoduše:</p>

<ol>
<li>Vnutí terminálu režim <i>true color</i> (to je nutné například pro <i>xterm</i>)</li>
<li>Načte rastrový obrázek s&nbsp;využitím funkce <strong>Image.open</strong> z&nbsp;knihovny PIL/Pillow</li>
<li>Postupně projde všemi sudými řádky obrázku (toto je trik, protože znaky mají většinou poměr výška:šířka roven 2:1)</li>
<li>Projde všemi pixely na řádku</li>
<li>Přečte barvové složky pixelů, převede je s&nbsp;využitím metody <strong>Terminal.color_rgb</strong> na sekvenci řídicích znaků a ty následně vypíše</li>
<li>Nový řádek je pochopitelně zajištěn zavoláním <strong>print()</strong></li>
</ol>

<p>Úplný zdrojový kód vypadá následovně:</p>

<pre>
from PIL import Image
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
terminal.number_of_colors = 1 &lt;&lt; 24
&nbsp;
filename = "fruits.png"
img = Image.open(filename)
&nbsp;
for j in range(0, img.height, 2):
    for i in range(img.width):
        red, green, blue = img.getpixel((i, j))
        print(f"{terminal.color_rgb(red, green, blue)}█", end="")
    print()
&nbsp;
print()
print(f"{terminal.normal}DONE")
</pre>

<p>Pokud má váš terminál minimálně 129 znaků na řádku, měli byste uvidět náhled
na obrázek:</p>

*** image ***
<p><i>Obrázek 6: První část obrázku zobrazená na terminálu.</i></p>

*** image ***
<p><i>Obrázek 7: Druhá část obrázku zobrazená na terminálu.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Využití mezery s&nbsp;modifikovanou barvou pozadí</h2>

<p>Může se stát, že font nastavený pro použití v&nbsp;terminálu výše zmíněný
znak &bdquo;full block&ldquo; nezobrazí korektně. V&nbsp;takovém případě je
možné prohlížeč přepsat, a to takovým způsobem, že se bude vykreslovat pouze
mezera, ovšem s&nbsp;modifikovaným pozadím. Změnu pozadí na základě barvových
složek <i>red</i>, <i>green</i>, <i>blue</i> zajišťuje metoda
<strong>Terminal.on_color_rgb</strong>.  Skript je upraven takto:</p>

<pre>
from PIL import Image
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
terminal.number_of_colors = 1 &lt;&lt; 24
&nbsp;
filename = "fruits.png"
img = Image.open(filename)
&nbsp;
for j in range(0, img.height, 2):
    for i in range(img.width):
        red, green, blue = img.getpixel((i, j))
        print(f"{terminal.on_color_rgb(red, green, blue)}.", end="")
    print()
&nbsp;
print()
print(f"{terminal.normal}DONE")
</pre>

<p><div class="rs-tip-major">Poznámka: aby bylo patrné, že se provádí odlišný
způsob vykreslování, je namísto mezery použit znak tečky &ndash;
&bdquo;.&ldquo;. Tečka je tedy zobrazena i na následující dvojici screenshotů.
Přepis zpět na mezeru ve skriptu je triviální.</div></p>

*** image ***
<p><i>Obrázek 8: První část obrázku zobrazená na terminálu.</i></p>

*** image ***
<p><i>Obrázek 9: Druhá část obrázku zobrazená na terminálu.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Použití znaků Unicode na terminálu</h2>

<p>Již v&nbsp;předchozích dvou kapitolách jsme se krátce zmínili o <a
href="https://www.unicode.org/main.html">Unicode</a>. Pokud je nainstalován a
především nastaven korektní font, je Unicode podporován většinou moderních
emulátorů terminálu (i když například v&nbsp;případě <i>rxvt</i> je nutné
použít jeho variantu <i>urxvt</i>). Pro otestování korektnosti vykreslování
Unicode znaků doporučuji použít dokument uložený na adrese <a
href="https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt">https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt</a>,
jenž obsahuje různé části Unicode, včetně různých abeced, znaků pro
pseudografiku atd. Na základě tohoto souboru je možné si vytvořit testovací
program, který se spustí v&nbsp;terminálu a zjistí se tak jeho skutečné
možnosti:</p>

<p>Zdrojový kód vypadá takto:</p>

<pre>
<i># Based on famous UTF-8-demo.txt created by:</i>
<i># Markus Kuhn [ˈmaʳkʊs kuːn] &lt;http://www.cl.cam.ac.uk/~mgk25/&gt; — 2002-07-25</i>
&nbsp;
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
print("""
  STARGΛ̊TE SG-1, a = v̇ = r̈, a⃑ ⊥ b⃑
                                                                      ▉
  ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳
  ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳
  ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳
  ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳
  ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎
  ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏
  ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛  ▗▄▖▛▀▜   └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█
                                               ▝▀▘▙▄▟
&nbsp;
&nbsp;
  ∮ E⋅da = Q,  n → ∞, ∑ f(i) = ∏ g(i),      ⎧⎡⎛┌─────┐⎞⎤⎫
                                            ⎪⎢⎜│a²+b³ ⎟⎥⎪
  ∀x∈ℝ: ⌈x⌉ = −⌊−x⌋, α ∧ ¬β = ¬(¬α ∨ β),    ⎪⎢⎜│───── ⎟⎥⎪
                                            ⎪⎢⎜⎷ c₈   ⎟⎥⎪
  ℕ ⊆ ℕ₀ ⊂ ℤ ⊂ ℚ ⊂ ℝ ⊂ ℂ,                   ⎨⎢⎜       ⎟⎥⎬
                                            ⎪⎢⎜ ∞     ⎟⎥⎪
  ⊥ &lt; a ≠ b ≡ c ≤ d ≪ ⊤ ⇒ (⟦A⟧ ⇔ ⟪B⟫),      ⎪⎢⎜ ⎲     ⎟⎥⎪
                                            ⎪⎢⎜ ⎳aⁱ-bⁱ⎟⎥⎪
  2H₂ + O₂ ⇌ 2H₂O, R = 4.7 kΩ, ⌀ 200 mm     ⎩⎣⎝i=1    ⎠⎦⎭
""")
</pre>

<p>Příklad spuštění na mé variantě terminálu ukazuje, že ne všechny znaky se
skutečně zobrazily korektně:</p>

*** image ***
<p><i>Obrázek 10: Výsledek testu zobrazení Unicode znaků.</i></p>

<p><div class="rs-tip-major">Poznámka: je použit font Terminus, viz též dodatek
uvedený <a href="#k18">v&nbsp;osmnácté kapitole</a>.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Režim terminálu</h2>

<p>Terminál může pracovat v&nbsp;několika režimech. Na příkazové řádce se
používá takzvaný <i>cooked mode</i>, v&nbsp;němž jsou významy některých kláves
interpretovány a zpracovány ještě předtím, než jsou poslány do programu. Zcela
typickým příkladem je zápis &bdquo;Hix(Backspace)!&ldquo;, který není
v&nbsp;<i>cooked</i> režimu poslán do aplikace v&nbsp;této podobě &ndash;
aplikace totiž dostane na vstupu pouze řetězec &bdquo;Hi!&ldquo;, protože
klávesa <strong>Backspace</strong> je mezitím interpretována a zpracována. Pro
běžné vstupy a základní interaktivitu se jedná o užitečný režim, který ovšem
přestane být výhodný ve chvíli, kdy je nutné reagovat (a to ihned) na stisky
všech kláves. V&nbsp;takovém případě je nutné terminál přepnout do režimu
<i>raw</i> nebo do režimu <i>cbreak</i>, jenž je někdy známý pod jménem
<i>rare</i> (což je odvozeno od &bdquo;half cooked&ldquo;). V&nbsp;knihovně
<i>Blessed</i> se toto přepnutí provádí metodou
<strong>Terminal.cbreak()</strong>:</p>

<pre>
Help on function cbreak in module blessed.terminal:
&nbsp;
<strong>cbreak(self)</strong>
    Allow each keystroke to be read immediately after it is pressed.
&nbsp;
    This is a context manager for :func:`tty.setcbreak`.
&nbsp;
    This context manager activates 'rare' mode, the opposite of 'cooked'
    mode: On entry, :func:`tty.setcbreak` mode is activated disabling
    line-buffering of keyboard input and turning off automatic echo of
    input as output.
    ...
</pre>

<a href="http://www.root.cz/obrazek/116576/"><img src="http://i.iinfo.cz/images/377/games-61-31-prev.png" width="370" height="232" alt="&#160;" /></a>
<p><i>Obrázek 11: Hra DoomRL &ndash; hlavní menu (co mi to připomíná...).</i></p>

<p>Většinou se setkáme s&nbsp;tím, že se režim <i>cbreak</i> zapíná pouze pro
určitou část programu. Využívá se zde <a
href="https://www.geeksforgeeks.org/context-manager-in-python/">kontextu</a> a
zápis tedy vypadá následovně:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    ...
    ...
    ...
</pre>

<a href="http://www.root.cz/obrazek/116579/"><img src="http://i.iinfo.cz/images/377/games-61-34-prev.png" width="370" height="232" alt="&#160;" /></a>
<p><i>Obrázek 12: Hra DoomRL &ndash; první úroveň.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Čtení kláves v&nbsp;režimu <i>cbreak</i></h2>

<p>Ve třídě <strong>Terminal</strong> nalezneme i funkci nazvanou
<strong>inkey</strong>, kterou je možné použít pro čtení kódu stisknuté klávesy
v&nbsp;režimu <i>cbreak</i>:</p>

<pre>
Help on function inkey in module blessed.terminal:
&nbsp;
<strong>inkey(self, timeout=None, esc_delay=0.35)</strong>
    Read and return the next keyboard event within given timeout.
&nbsp;
    Generally, this should be used inside the :meth:`raw` context manager.
</pre>

<p>Podívejme se nyní na příklad použití této funkce v&nbsp;kontextu (režimu)
<i>cbreak</i>. Celý program, který dokáže jednotlivé klávesy číst a zobrazovat
je, může vypadat následovně:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    while True:
        key = terminal.inkey()
        print(key)
</pre>

<p>Příklad po spuštění tohoto skriptu (po stisku různých kláves):</p>

<pre>
$ <strong>python3 inkey_1.py</strong>
+
2
3
q
w
P
Q
R
</pre>

<p>Skript lze ukončit klávesovou zkratkou <strong>Ctrl+C</strong>. Proto také
používáme režim <i>cbreak</i> a nikoli <i>raw</i>, protože v&nbsp;režimu
<i>cbreak</i> je tato zkratka správně rozpoznána a zpracována:</p>

<pre>
Traceback (most recent call last):
  File "inkey_1.py", line 7, in <module>
    key = terminal.inkey()
  File "/home/ptisnovs/.local/lib/python3.9/site-packages/blessed/terminal.py", line 1385, in inkey
    while not ks and self.kbhit(timeout=_time_left(stime, timeout)):
  File "/home/ptisnovs/.local/lib/python3.9/site-packages/blessed/terminal.py", line 1203, in kbhit
    ready_r, _, _ = select.select(check_r, [], [], timeout)
KeyboardInterrupt
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Rozpoznání jména a kódu stisknutých kláves</h2>

<p>Hodnota, která je vrácena metodou <strong>Terminal.inkey</strong>, není typu
&bdquo;znak&ldquo;, ale typu <strong>blessed.keyboard.Keystroke</strong>:</p>

<pre>
class Keystroke(builtins.str)
 |  A unicode-derived class for describing a single keystroke.
 |  
 |  A class instance describes a single keystroke received on input,
 |  which may contain multiple characters as a multibyte sequence,
 |  which is indicated by properties :attr:`is_sequence` returning
 |  ``True``.
 |  
 |  When the string is a known sequence, :attr:`code` matches terminal
 |  class attributes for comparison, such as ``term.KEY_LEFT``.
 |  
 |  The string-name of the sequence, such as ``u'KEY_LEFT'`` is accessed
 |  by property :attr:`name`, and is used by the :meth:`__repr__` method
 |  to display a human-readable form of the Keystroke this class
 |  instance represents. It may otherwise by joined, split, or evaluated
 |  just as as any other unicode string.
</pre>

<p>Jedná se tedy o plnohodnotné objekty, které obsahují několik užitečných
atributů. Především se jedná o jméno stisknuté klávesy a taktéž o její
numerický kód. Jména a kódy všech podporovaných kláves jsou uvedeny
v&nbsp;prvním dodatku <a href="#k17">v&nbsp;sedmnácté kapitole</a>.</p>

<p>Samozřejmě si vše vyzkoušíme na následujícím jednoduchém skriptu:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    while True:
        key = terminal.inkey()
        print(key.name, key.code, key)
</pre>

<p>Ukázka použití (včetně speciálních kláves):</p>

<pre>
KEY_F1 265 P
KEY_F12 276 
KEY_LEFT 260 
KEY_RIGHT 261 
KEY_ENTER 343 
KEY_BACKSPACE 263 
KEY_TAB 512 
None None a
None None A
KEY_F24 288
</pre>

<p>Povšimněte si, že:</p>

<ol>

<li>U běžných ASCII kláves se nevrací ani jméno klávesy ani její numerický kód.
Navíc je možné použít <strong>Shift</strong> a rozlišit tak mezi klávesou
&bdquo;a&ldquo; a &bdquo;A&ldquo; atd.</li>

<li>Funkční klávesy <strong>F1</strong> atd. jsou (většinou) zpracovány
korektně.</li>

<li>Další klávesy typu <strong>Backspace</strong>, <strong>Enter</strong> a
kurzorové šipky jsou taktéž zpracovány korektně.</li>

<li>Při stisku <strong>Shift+Fx</strong> se typicky vrací klávesa
<strong>Fy</strong>, kde y je zvýšeno o 12 (na PC). Například Shift+F12 vrací
jméno a kód odpovídající klávese <strong>F24</strong>.</li>

</ol>



<p><a name="k09"></a></p>
<h2 id="k09">9. Sekvence znaků poslaná po stisku klávesy</h2>

<p>Některé kombinace kláves, například <strong>Ctrl+End</strong> apod., nemají
vlastní jméno ani kód. Namísto toho knihovna <i>Blessed</i> tuto kombinaci
zaznamená jako sekvenci řídicích znaků, které aplikace může (pokud je to
skutečně zapotřebí) zpracovat a následně použít, ovšem s&nbsp;tím, že se nebude
jednat o plně přenositelný kód (což je mimochodem jeden z&nbsp;důvodů, proč má
například <i>Midnight Commander</i> dialog pro &bdquo;učení kláves&ldquo; a
dokáže tedy zaznamenat i různé méně stabilní kombinace kláves).</p>

*** image ***
<p><i>Obrázek 13: Dialog Midnight Commanderu, ve kterém je možné zaznamenat
sekvenci řídicích znaků po stisku neznámé klávesové kombinace.</i></p>

<p>Sekvenci řídicích znaků lze ve skriptu získat a zobrazit například
takto:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    while True:
        key = terminal.inkey()
        if key.is_sequence:
            print("got sequence: {0}.".format(key.name, key.code, (<strong>str(key)</strong>)))
        else:
            print(key.name, key.code, key)
</pre>

<p>Výsledky pro známé klávesy:</p>

<pre>
None None a
None None A
got sequence: KEY_F1.
got sequence: KEY_F12.
got sequence: KEY_F24.
got sequence: KEY_LEFT.
got sequence: KEY_RIGHT.
got sequence: KEY_UP.
got sequence: KEY_DOWN.
got sequence: KEY_ESCAPE.
</pre>

<p>Výsledky pro neznámé kombinace:</p>

<p><strong>Ctrl+Up</strong>:</p>

<pre>
got sequence: KEY_ESCAPE.
None None [
None None 1
None None ;
None None 5
None None A
</pre>

<p><strong>Ctrl+Home</strong>:</p>

<pre>
got sequence: KEY_ESCAPE.
None None [
None None 1
None None ;
None None 5
None None H
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Neblokující čtení klávesy</h2>

<p>Pro některé interaktivní aplikace, které například potřebují zobrazit
průběžně se měnící grafy, příchozí zprávy atd. (a pochopitelně i pro hry) je
někdy nutné nečekat na stisk klávesy po nekonečně dlouhou dobu. Knihovna
<i>Blessed</i> sice programátorům nenabízí přístup do plnohodnotné smyčky
událostí (<i>event loop</i>), ale přesto je možné alespoň specifikovat
maximální dobu, po kterou se bude na stisk klávesy čekat. Příkladem může být
tento skript, který čeká jen přibližně 300 milisekund a pokud klávesa stisknuta
není, lze tento stav jednoznačně programově detekovat:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    while True:
        key = terminal.inkey(<strong>timeout=0.3</strong>)
&nbsp;
        if <strong>str(key) == ""</strong>:
            print("Nothing... try again")
        elif key.is_sequence:
            print("got sequence: {0}.".format(key.name, key.code, (str(key))))
        else:
            print(key.name, key.code, key)
</pre>

<p><div class="rs-tip-major">Poznámka: nejedná se tedy o skutečně neblokující
čtení, ale o přihlížení se k&nbsp;němu.</div></p>

<p>Příklad výstupu:</p>

<pre>
$ <strong>python3 inkey_4.py </strong>
&nbsp;
Nothing... try again
Nothing... try again
got sequence: KEY_ENTER.
None None d
None None f
None None d
None None s
Nothing... try again
got sequence: KEY_F1.
Nothing... try again
</pre>

<a href="http://www.root.cz/obrazek/116561/"><img src="http://i.iinfo.cz/images/377/games-61-16-prev.png" width="370" height="231" alt="&#160;" /></a>
<p><i>Obrázek 14: ADOM ve verzi pro DOS &ndash; podrobnější měnitelné
vlastnosti hrdiny.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. &bdquo;Raw&ldquo; režim terminálu</h2>

<p><a href="#k06">V&nbsp;šesté kapitole</a> jsme se zmínili o třech režimech
terminálu &ndash; &bdquo;cooked&ldquo;, &bdquo;raw&ldquo; a
&bdquo;cbreak/rare&ldquo;. V&nbsp;prvním režimu je vstup zpracován až po stisku
klávesy Enter, ve druhém režimu lze okamžitě číst stisky kláves a reagovat na
ně, ovšem s&nbsp;tím, že některé klávesové zkratky, například
<strong>Ctrl+C</strong> jsou zachyceny a zpracovány systémem (takže lze
aplikaci ukončit právě s&nbsp;využitím <strong>Ctrl+C</strong>). A konečně
v&nbsp;režimu &bdquo;raw&ldquo; může program zachytit stisky všech kláves, a to
i například již zmíněné <strong>Ctrl+C</strong>. To má své přednosti i zápory.
Předností je možnost využít tyto klávesové zkratky například v&nbsp;textových
editorech, záporem to, že se o ukončení aplikace musíme postarat sami. Jak to
provést nám ukazuje tento skript:</p>

<pre>
import blessed

terminal = blessed.Terminal()

with <strong>terminal.raw()</strong>:
    while True:
        key = terminal.inkey()
        if <strong>key == 'q'</strong>:
            break
        print(key)
</pre>

<p>Tento skript lze ukončit stiskem klávesy <strong>q</strong>.</p>

<a href="http://www.root.cz/obrazek/116568/"><img src="http://i.iinfo.cz/images/377/games-61-23-prev.png" width="370" height="232" alt="&#160;" /></a>
<p><i>Obrázek 15: Angband pro Linux &ndash; podrobnější charakteristiky
hrdiny.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Pohyb kurzoru po ploše terminálu</h2>

<p>Na terminál se nemůžeme dívat jako na obdobu rastrového obrázku
v&nbsp;klasickém <i>framebufferu</i>. Největší rozdíl spočívá v&nbsp;tom, že
zobrazení znaku na určitém místě terminálu se provádí nepřímo &ndash; přesunem
textového kurzoru na potřebné místo, které je následováno vytištěním
příslušného znaku (typicky bez odřádkování). Samotné vytištění znaku je snadné,
protože lze použít standardní funkci <strong>print</strong>, ovšem pro přesun
kurzoru muselo být do knihovny <i>Blessed</i> přidáno několik metod objektu
typu <strong>Terminal</strong>:</p>

<table>
<tr><th> #</th><th>Metoda</th><th>Stručný popis metody</th></tr>
<tr><td> 1</td><td>move_xy(x, y)</td><td>přesun kurzoru na souřadnice [x, y]</td></tr>
<tr><td> 2</td><td>move_x(x)</td><td>horizontální přesun kurzoru</td></tr>
<tr><td> 3</td><td>move_y(y)</td><td>vertikální přesun kurzoru</td></tr>
<tr><td> 4</td><td>home</td><td>přesun kurzoru na souřadnice [0, 0]</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>move_up</td><td>posun kurzoru o řádek nahoru</td></tr>
<tr><td> 6</td><td>move_up(y)</td><td>posun kurzoru o y řádků nahoru</td></tr>
<tr><td> 7</td><td>move_down</td><td>posun kurzoru o řádek dolů</td></tr>
<tr><td> 8</td><td>move_down(y)</td><td>posun kurzoru o y řádků dolů</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>move_left</td><td>posun kurzoru o znak doleva</td></tr>
<tr><td>10</td><td>move_left(x)</td><td>posun kurzoru o x znaků doleva</td></tr>
<tr><td>11</td><td>move_right</td><td>posun kurzoru o znak doprava</td></tr>
<tr><td>12</td><td>move_right(x)</td><td>posun kurzoru o x znaků doprava</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: taktéž to paradoxně znamená, že
překreslení části textového terminálu může být pomalejší, než překreslení
framebufferu (který obsahuje řádově více informací).</div></p>

<a href="http://www.root.cz/obrazek/118596/"><img src="http://i.iinfo.cz/images/591/df-1-prev.png" width="370" height="173" alt="&#160;" /></a>
<p><i>Obrázek 16: Úvodní animace legendární hry Dwarf Fortress &ndash; vstup do
herního světa. Tato hra ve skutečnosti terminál pouze emuluje (tedy emuluje
emulátor terminálu).</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Ukázka skriptu přesunujícího kurzor</h2>

<p>Následující (do co největší míry zjednodušený) skript vykreslí okolo
terminálu rámeček. Kvůli jednoduchosti není terminál vymazán, pro rámeček se
nepoužívají znaky Unicode a rohy nejsou vykresleny korektně:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    for x in range(terminal.width):
        print(f"{terminal.move_xy(x, 0)}-", end="", flush=True)
        print(f"{terminal.move_xy(x, terminal.height-1)}-", end="", flush=True)
&nbsp;
    for y in range(terminal.height):
        print(f"{terminal.move_xy(0, y)}|", end="", flush=True)
        print(f"{terminal.move_xy(terminal.width-1, y)}|", end="", flush=True)
&nbsp;
    terminal.inkey()
</pre>

<a href="http://www.root.cz/obrazek/118601/"><img src="http://i.iinfo.cz/images/591/df-6-prev.png" width="370" height="173" alt="&#160;" /></a>
<p><i>Obrázek 17: Testovací aréna hry Dwarf Fortress.</i></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Výpočet umístění textu s&nbsp;řídicími znaky, obnovení původní pozice kurzoru</h2>

<p>V&nbsp;případě, že je zapotřebí zobrazit například vycentrovaný text, který
ovšem obsahuje i příkazy (řídicí znaky) pro změnu stylu či barvy, je možné pro
tento účel použít jednu ze čtyř funkcí poskytovaných přímo knihovnou
<i>Blessed</i>. Tyto funkce zajistí, že se vypočítá korektní umístění řetězce i
s&nbsp;přihlédnutím k&nbsp;řídicím znakům (které mají při zobrazení nulovou
šířku):</p>

<table>
<tr><th>#</th><th>Metoda</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>center(text, width=None, fillchar=' ')</td><td>vycentrování textu na zadanou šířku</td></tr>
<tr><td>2</td><td>ljust(text, width=None, fillchar=' ')</td><td>úprava textu takovým způsobem, aby byl zarovnán doprava na zadanou šířku</td></tr>
<tr><td>3</td><td>rjust(text, width=None, fillchar=' ')</td><td>úprava textu takovým způsobem, aby byl zarovnán doprava na zadanou šířku</td></tr>
<tr><td>4</td><td>wrap(text, width=None, ...)</td><td>vrací seznam řádků získaných zarovnáním textu na zadanou šířku</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: jak je z&nbsp;hlavičky metod patrné, je
možné zvolit i znaky, které budou použity jako výplň namísto mezer.</div></p>

<p>Další užitečnou metodou je metoda nazvaná
<strong>Terminal.location</strong>, která vytvoří nový kontext, v&nbsp;němž se
zapamatuje původní pozice textového kurzoru:</p>

<pre>
with terminal.location(nastavení umístění kurzoru):
    ...
    ...
    ...
</pre>

<p>V&nbsp;dalším demonstračním příkladu je ukázáno jak použití metody
<strong>location</strong> společně s&nbsp;vycentrováním textu na zadanou
šířku:</p>

<pre>
import blessed
&nbsp;
terminal = blessed.Terminal()
&nbsp;
with terminal.cbreak():
    for x in range(terminal.width):
        print(f"{terminal.move_xy(x, 0)}-", end="", flush=True)
        print(f"{terminal.move_xy(x, terminal.height-1)}-", end="", flush=True)
&nbsp;
    for y in range(terminal.height-1):
        print(f"{terminal.move_xy(0, y)}|", end="", flush=True)
        print(f"{terminal.move_xy(terminal.width-1, y)}|", end="", flush=True)
&nbsp;
    with <strong>terminal.location(y=terminal.height // 2)</strong>:
        print(<strong>terminal.center(terminal.bold("Press any key to exit..."))</strong>)
&nbsp;
    terminal.inkey()
</pre>

<a href="http://www.root.cz/obrazek/118605/"><img src="http://i.iinfo.cz/images/591/df-10-prev.png" width="370" height="173" alt="&#160;" /></a>
<p><i>Obrázek 18: Různé ikony představující trpaslíky ve hře Dwarf Fortress
(použito v&nbsp;režimu fortress).</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Přeformátování textu</h2>

<p>Podívejme se ještě na metodu <strong>Terminal.wrap</strong> zmíněnou <a
href="#k14">v&nbsp;předchozí kapitole</a>. Tuto metodu je možné použít pro
zalomení textu do zvolené šířky. Vše si otestujeme interaktivně přímo
v&nbsp;REPLu programovacího jazyka Python:</p>

<pre>
&gt;&gt;&gt; import blessed
&nbsp;
&gt;&gt;&gt; terminal = blessed.Terminal()
&nbsp;
&gt;&gt;&gt; t = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. "
&nbsp;
&gt;&gt;&gt; lines = terminal.wrap(t, width=40)
&gt;&gt;&gt; for line in lines:
...     print(line)
... 
Lorem ipsum dolor sit amet, consectetur
adipiscing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna
aliqua. Ut enim ad minim veniam, quis
nostrud exercitation ullamco laboris
nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit
in voluptate velit esse cillum dolore eu
fugiat nulla pariatur. Excepteur sint
occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim
id est laborum.
</pre>

<p>Totéž, ovšem s&nbsp;textem, který obsahuje řídicí znaky pro změnu barvy a
stylu písma:</p>

<pre>
&gt;&gt;&gt; t = f"{terminal.red}Lorem ipsum {terminal.yellow}dolor{terminal.normal} sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. {terminal.bold}Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat{terminal.normal}. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. "
&nbsp;
&gt;&gt;&gt; li;
&gt;&gt;&gt; lnes = terminal.wrap(t, width=40)
&gt;&gt;&gt; for line in lines:
...     print(line)
... 
Lorem ipsum dolor sit amet, consectetur
adipiscing elit, sed do eiusmod tempor
incididunt ut labore et dolore magna
aliqua. <b>Ut enim ad minim veniam, quis
nostrud exercitation ullamco laboris
nisi ut aliquip ex ea commodo consequat.</b>
Duis aute irure dolor in reprehenderit
in voluptate velit esse cillum dolore eu
fugiat nulla pariatur. Excepteur sint
occaecat cupidatat non proident, sunt in
culpa qui officia deserunt mollit anim
id est laborum.
</pre>

<a href="http://www.root.cz/obrazek/118610/"><img src="http://i.iinfo.cz/images/591/df-15-prev.png" width="370" height="173" alt="&#160;" /></a>
<p><i>Obrázek 19: Vytváření historie herního světa v&nbsp;Dward
Fortress.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Chybějící funkcionalita</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Dodatek 1: klávesy rozeznávané knihovnou Blessed</h2>

<p>V&nbsp;tomto dodatku jsou vypsána jména a číselné kódy všech kláves
rozpoznávaných knihovnou <i>Blessed</i>. Mnoho kláves na vaší klávesnici
nenajdete, protože se jedná o dnes již historické pozůstatky po starších
terminálech a počítačích (ostatně jestli chce navštívit lokální počítačové
muzeum, podívejte se do databáze <i>termcap</i> a <i>terminfo</i>):</p>

<table>
<tr><th>Jméno</th><th>Kód</th><th>Jméno</th><th>Kód</th></tr>
<tr><td>KEY_BACKSPACE</td><td>263</td><td>KEY_FIND</td><td>362</td></tr>
<tr><td>KEY_BEGIN</td><td>354</td><td>KEY_HELP</td><td>363</td></tr>
<tr><td>KEY_BTAB</td><td>353</td><td>KEY_HOME</td><td>262</td></tr>
<tr><td>KEY_C1</td><td>351</td><td>KEY_IL</td><td>329</td></tr>
<tr><td>KEY_C3</td><td>352</td><td>KEY_INSERT</td><td>331</td></tr>
<tr><td>KEY_CANCEL</td><td>355</td><td>KEY_KP_0</td><td>520</td></tr>
<tr><td>KEY_CATAB</td><td>342</td><td>KEY_KP_1</td><td>521</td></tr>
<tr><td>KEY_CENTER</td><td>350</td><td>KEY_KP_2</td><td>522</td></tr>
<tr><td>KEY_CLEAR</td><td>333</td><td>KEY_KP_3</td><td>523</td></tr>
<tr><td>KEY_CLOSE</td><td>356</td><td>KEY_KP_4</td><td>524</td></tr>
<tr><td>KEY_COMMAND</td><td>357</td><td>KEY_KP_5</td><td>525</td></tr>
<tr><td>KEY_COPY</td><td>358</td><td>KEY_KP_6</td><td>526</td></tr>
<tr><td>KEY_CREATE</td><td>359</td><td>KEY_KP_7</td><td>527</td></tr>
<tr><td>KEY_CTAB</td><td>341</td><td>KEY_KP_8</td><td>528</td></tr>
<tr><td>KEY_DELETE</td><td>330</td><td>KEY_KP_9</td><td>529</td></tr>
<tr><td>KEY_DL</td><td>328</td><td>KEY_KP_ADD</td><td>514</td></tr>
<tr><td>KEY_DOWN</td><td>258</td><td>KEY_KP_DECIMAL</td><td>517</td></tr>
<tr><td>KEY_EIC</td><td>332</td><td>KEY_KP_DIVIDE</td><td>518</td></tr>
<tr><td>KEY_END</td><td>360</td><td>KEY_KP_EQUAL</td><td>519</td></tr>
<tr><td>KEY_ENTER</td><td>343</td><td>KEY_KP_MULTIPLY</td><td>513</td></tr>
<tr><td>KEY_EOL</td><td>335</td><td>KEY_KP_SEPARATOR</td><td>515</td></tr>
<tr><td>KEY_EOS</td><td>334</td><td>KEY_KP_SUBTRACT</td><td>516</td></tr>
<tr><td>KEY_ESCAPE</td><td>361</td><td>KEY_LEFT</td><td>260</td></tr>
<tr><td>KEY_F0</td><td>264</td><td>KEY_LL</td><td>347</td></tr>
<tr><td>KEY_F1</td><td>265</td><td>KEY_MARK</td><td>364</td></tr>
<tr><td>KEY_F2</td><td>266</td><td>KEY_MAX</td><td>511</td></tr>
<tr><td>KEY_F3</td><td>267</td><td>KEY_MESSAGE</td><td>365</td></tr>
<tr><td>KEY_F4</td><td>268</td><td>KEY_MIN</td><td>257</td></tr>
<tr><td>KEY_F5</td><td>269</td><td>KEY_MOUSE</td><td>409</td></tr>
<tr><td>KEY_F6</td><td>270</td><td>KEY_MOVE</td><td>366</td></tr>
<tr><td>KEY_F7</td><td>271</td><td>KEY_NEXT</td><td>367</td></tr>
<tr><td>KEY_F8</td><td>272</td><td>KEY_OPEN</td><td>368</td></tr>
<tr><td>KEY_F9</td><td>273</td><td>KEY_OPTIONS</td><td>369</td></tr>
<tr><td>KEY_F10</td><td>274</td><td>KEY_PGDOWN</td><td>338</td></tr>
<tr><td>KEY_F11</td><td>275</td><td>KEY_PGUP</td><td>339</td></tr>
<tr><td>KEY_F12</td><td>276</td><td>KEY_PREVIOUS</td><td>370</td></tr>
<tr><td>KEY_F13</td><td>277</td><td>KEY_PRINT</td><td>346</td></tr>
<tr><td>KEY_F14</td><td>278</td><td>KEY_REDO</td><td>371</td></tr>
<tr><td>KEY_F15</td><td>279</td><td>KEY_REFERENCE</td><td>372</td></tr>
<tr><td>KEY_F16</td><td>280</td><td>KEY_REFRESH</td><td>373</td></tr>
<tr><td>KEY_F17</td><td>281</td><td>KEY_REPLACE</td><td>374</td></tr>
<tr><td>KEY_F18</td><td>282</td><td>KEY_RESET</td><td>345</td></tr>
<tr><td>KEY_F19</td><td>283</td><td>KEY_RESIZE</td><td>410</td></tr>
<tr><td>KEY_F20</td><td>284</td><td>KEY_RESTART</td><td>375</td></tr>
<tr><td>KEY_F21</td><td>285</td><td>KEY_RESUME</td><td>376</td></tr>
<tr><td>KEY_F22</td><td>286</td><td>KEY_RIGHT</td><td>261</td></tr>
<tr><td>KEY_F23</td><td>287</td><td>KEY_SAVE</td><td>377</td></tr>
<tr><td>KEY_SBEG</td><td>378</td><td>KEY_SCANCEL</td><td>379</td></tr>
<tr><td>KEY_SCOMMAND</td><td>380</td><td>KEY_SCOPY</td><td>381</td></tr>
<tr><td>KEY_SCREATE</td><td>382</td><td>KEY_SDC</td><td>383</td></tr>
<tr><td>KEY_SDL</td><td>384</td><td>KEY_SDOWN</td><td>336</td></tr>
<tr><td>KEY_SELECT</td><td>385</td><td>KEY_SEND</td><td>386</td></tr>
<tr><td>KEY_SEOL</td><td>387</td><td>KEY_SEXIT</td><td>388</td></tr>
<tr><td>KEY_SFIND</td><td>389</td><td>KEY_SHELP</td><td>390</td></tr>
<tr><td>KEY_SHOME</td><td>391</td><td>KEY_SIC</td><td>392</td></tr>
<tr><td>KEY_SLEFT</td><td>393</td><td>KEY_SMESSAGE</td><td>394</td></tr>
<tr><td>KEY_SMOVE</td><td>395</td><td>KEY_SNEXT</td><td>396</td></tr>
<tr><td>KEY_SOPTIONS</td><td>397</td><td>KEY_SPREVIOUS</td><td>398</td></tr>
<tr><td>KEY_SPRINT</td><td>399</td><td>KEY_SREDO</td><td>400</td></tr>
<tr><td>KEY_SREPLACE</td><td>401</td><td>KEY_SRESET</td><td>344</td></tr>
<tr><td>KEY_SRIGHT</td><td>402</td><td>KEY_SRSUME</td><td>403</td></tr>
<tr><td>KEY_SSAVE</td><td>404</td><td>KEY_SSUSPEND</td><td>405</td></tr>
<tr><td>KEY_STAB</td><td>340</td><td>KEY_SUNDO</td><td>406</td></tr>
<tr><td>KEY_SUP</td><td>337</td><td>KEY_SUSPEND</td><td>407</td></tr>
<tr><td>KEY_TAB</td><td>512</td><td>KEY_UNDO</td><td>408</td></tr>
<tr><td>KEY_UP</td><td>259</td><td>KEY_UP_LEFT</td><td>348</td></tr>
<tr><td>KEY_UP_RIGHT</td><td>349</td><td>&nbsp;</td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Dodatek 2: příklad nastavení xtermu</h2>

<p>V&nbsp;dodatku je ukázáno praktické nastavení <i>xtermu</i> (což ani zdaleka
není primitivní terminál &ndash; jen své vlastnosti před uživateli dobře
skrývá) v&nbsp;souboru <strong>.Xresources</strong>. Povšimněte si přemapování
logických barev na barvy fyzické:</p>

<pre>
xterm*eightBitControl: false
xterm*eightBitInput:   false
xterm*eightBitOutput:  true
xterm*utf8:            1
xterm*background:  gray90
xterm*foreground:  Black
xterm*cursorColor: rgb:ff/00/00
xterm*saveLines: 1000
xterm*color0: black
xterm*color1: red3
xterm*color2: green3
xterm*color3: brown
xterm*color4: blue3
xterm*color5: magenta3
xterm*color6: cyan4
xterm*color7: gray50
xterm*color8: gray40
xterm*color9: red
xterm*color10: green3
xterm*color11: Goldenrod
xterm*color12: DodgerBlue1
xterm*color13: magenta2
xterm*color14: cyan3
xterm*color15: white
xterm*colorUL: yellow
xterm*colorBD: white
xterm*scrollBar: false
xterm*rightScrollBar: true
xterm*font:     -*-terminus-bold-r-*-*-*-240-*-*-*-*-iso10646-1
xterm*boldFont:     -*-terminus-bold-r-*-*-*-240-*-*-*-*-iso10646-1
xterm*geometry: 80x25
XTerm*fullscreen: never
XTerm.omitTranslation: fullscreen
Xterm.sessionMgt: false
</pre>

<p>Tento soubor se zpracovává nástrojem <strong>xrdb</strong>, a to
následovně:</p>

<pre>
$ <strong>xrdb ~/.Xresources</strong>
</pre>

<p>Nebo častěji:</p>

<pre>
$ <strong>xrdb -merge ~/.Xresources</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: pro více info viz <a
href=https://linux.die.net/man/1/xrdb"">xrdb(1)</a>.</div></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech minule i dnes popsaných demonstračních příkladů určených
pro Python 3 byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Jméno souboru</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>terminal_info.py</td><td>přečtení základních informací o terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/terminal_info.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/terminal_info.py</a></td></tr>
<tr><td> 2</td><td>clear_screen.py</td><td>smazání obrazovky terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/clear_screen.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/clear_screen.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>text_styles1.py</td><td>nastavení stylu vykreslení textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles1.py</a></td></tr>
<tr><td> 4</td><td>text_styles2.py</td><td>použití </td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/text_styles2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>basic_8_colors.py</td><td>základních osm barev textu podporovaných většinou terminálů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors.py</a></td></tr>
<tr><td> 6</td><td>basic_8_colors_bold.py</td><td>modifikátor &bdquo;bold&ldquo; ovlivňující barvu textu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors_bold.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_colors_bold.py</a></td></tr>
<tr><td> 7</td><td>basic_8_backgrounds.py</td><td>základních osm barev pozadí podporovaných většinou terminálů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_backgrounds.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_backgrounds.py</a></td></tr>
<tr><td> 8</td><td>basic_8_bold_backgrounds.py</td><td>modifikátor &bdquo;bold&ldquo; ovlivňující barvu pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_bold_backgrounds.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_bold_backgrounds.py</a></td></tr>
<tr><td> 9</td><td>basic_8_combinations.py</td><td>kombinace barev textu a barev pozadí (64 různých kombinací)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_combinations.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/basic_8_combinations.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>palette.py</td><td>plnohodnotná barvová paleta (true color) na popředí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette.py</a></td></tr>
<tr><td>11</td><td>palette_background.py</td><td>plnohodnotná barvová paleta (true color) na pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette_background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/palette_background.py</a></td></tr>
<tr><td>12</td><td>named_colors.py</td><td>použití jmen barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors.py</a></td></tr>
<tr><td>13</td><td>named_colors_background.py</td><td>použití jmen barev pro specifikaci barvy pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors_background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/named_colors_background.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>14</td><td>hyperlink.py</td><td>hypertextkový odkaz v&nbsp;terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/hyperlink.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/hyperlink.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>get_image.py</td><td>skript pro stažení testovacího obrázku s&nbsp;jeho zmenšením pro další operace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/get_image.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/get_image.py</a></td></tr>
<tr><td>16</td><td>show_image_1.py</td><td>první varianta prohlížeče obrázků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/show_image_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/show_image_1.py</a></td></tr>
<tr><td>17</td><td>show_image_2.py</td><td>druhá varianta prohlížeče obrázků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/show_image_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/show_image_2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>unicode_test.py</td><td>test vykreslení znaků z&nbsp;Unicode</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/unicode_test.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/unicode_test.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>19</td><td>inkey_1.py</td><td>čtení stisknutých kláves, nejjednodušší varianta</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_1.py</a></td></tr>
<tr><td>20</td><td>inkey_2.py</td><td>rozpoznání jména a kódu stisknutých kláves</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_2.py</a></td></tr>
<tr><td>21</td><td>inkey_3.py</td><td>sekvence znaků poslaná po stisku klávesy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_3.py</a></td></tr>
<tr><td>22</td><td>inkey_4.py</td><td>neblokující čtení klávesy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_4.py</a></td></tr>
<tr><td>23</td><td>inkey_5.py</td><td>&bdquo;raw&ldquo; režim terminálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/inkey_5.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>24</td><td>movexy.py</td><td>použití metody <strong>move_xy</strong> pro přesun kurzoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/movexy.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/movexy.py</a></td></tr>
<tr><td>25</td><td>movexy_restore_location.py</td><td>použití metody <strong>move_xy</strong> pro přesun kurzoru, obnovení pozice kurzoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/movexy_restore_location.py">https://github.com/tisnik/most-popular-python-libs/blob/master/blessed/movexy_restore_location.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>blessed na PyPi<br />
<a href="https://pypi.org/project/blessed/">https://pypi.org/project/blessed/</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/jquast/blessed">https://github.com/jquast/blessed</a>
</li>

<li>Blessed documentation!<br />
<a href="https://blessed.readthedocs.io/en/latest/">https://blessed.readthedocs.io/en/latest/</a>
</li>

<li>termbox-go na GitHubu<br />
<a href="https://github.com/nsf/termbox-go">https://github.com/nsf/termbox-go</a>
</li>

<li>termui na GitHubu<br />
<a href="https://github.com/gizak/termui">https://github.com/gizak/termui</a>
</li>

<li>blessed na GitHubu<br />
<a href="https://github.com/chjj/blessed">https://github.com/chjj/blessed</a>
</li>

<li>blessed-contrib na GitHubu<br />
<a href="https://github.com/yaronn/blessed-contrib">https://github.com/yaronn/blessed-contrib</a>
</li>

<li>tui-rs na GitHubu<br />
<a href="https://github.com/fdehau/tui-rs">https://github.com/fdehau/tui-rs</a>
</li>

<li>Operace s framebufferem na Raspberry Pi<br />
<a href="https://www.root.cz/clanky/operace-s-framebufferem-na-raspberry-pi/">https://www.root.cz/clanky/operace-s-framebufferem-na-raspberry-pi/</a>
</li>

<li>Framebuffer na Raspberry Pi: vykreslování složitějších objektů<br />
<a href="https://www.root.cz/clanky/framebuffer-na-raspberry-pi-vykreslovani-slozitejsich-objektu/">https://www.root.cz/clanky/framebuffer-na-raspberry-pi-vykreslovani-slozitejsich-objektu/</a>
</li>

<li>256 COLORS - CHEAT SHEET<br />
<a href="https://jonasjacek.github.io/colors/">https://jonasjacek.github.io/colors/</a>
</li>

<li>Terminfo (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Terminfo">https://en.wikipedia.org/wiki/Terminfo</a>
</li>

<li>Termcap (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Termcap">https://en.wikipedia.org/wiki/Termcap</a>
</li>

<li>Python 3's f-Strings: An Improved String Formatting Syntax (Guide)<br />
<a href="https://realpython.com/python-f-strings/">https://realpython.com/python-f-strings/</a>
</li>

<li>Top 20 Best ASCII Games on Linux System<br />
<a href="https://www.ubuntupit.com/best-ascii-games-on-linux/">https://www.ubuntupit.com/best-ascii-games-on-linux/</a>
</li>

<li>4 Python libraries for building great command-line user interfaces<br />
<a href="https://opensource.com/article/17/5/4-practical-python-libraries">https://opensource.com/article/17/5/4-practical-python-libraries</a>
</li>

<li>prompt_toolkit 2.0.3 na PyPi<br />
<a href="https://pypi.org/project/prompt_toolkit/">https://pypi.org/project/prompt_toolkit/</a>
</li>

<li>python-prompt-toolkit na GitHubu<br />
<a href="https://github.com/jonathanslenders/python-prompt-toolkit">https://github.com/jonathanslenders/python-prompt-toolkit</a>
</li>

<li>The GNU Readline Library<br />
<a href="https://tiswww.case.edu/php/chet/readline/rltop.html">https://tiswww.case.edu/php/chet/readline/rltop.html</a>
</li>

<li>GNU Readline (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GNU_Readline">https://en.wikipedia.org/wiki/GNU_Readline</a>
</li>

<li>readline — GNU readline interface (Python 3.x)<br />
<a href="https://docs.python.org/3/library/readline.html">https://docs.python.org/3/library/readline.html</a>
</li>

<li>readline — GNU readline interface (Python 2.x)<br />
<a href="https://docs.python.org/2/library/readline.html">https://docs.python.org/2/library/readline.html</a>
</li>

<li>GNU Readline Library - command line editing<br />
<a href="https://tiswww.cwru.edu/php/chet/readline/readline.html">https://tiswww.cwru.edu/php/chet/readline/readline.html</a>
</li>

<li>gnureadline 6.3.8 na PyPi<br />
<a href="https://pypi.org/project/gnureadline/">https://pypi.org/project/gnureadline/</a>
</li>

<li>Editline Library (libedit)<br />
<a href="http://thrysoee.dk/editline/">http://thrysoee.dk/editline/</a>
</li>

<li>Comparing Python Command-Line Parsing Libraries – Argparse, Docopt, and Click<br />
<a href="https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/">https://realpython.com/comparing-python-command-line-parsing-libraries-argparse-docopt-click/</a>
</li>

<li>IBM 2741<br />
<a href="https://en.wikipedia.org/wiki/IBM_2741">https://en.wikipedia.org/wiki/IBM_2741</a>
</li>

<li>Terminal mode<br />
<a href="https://en.wikipedia.org/wiki/Terminal_mode">https://en.wikipedia.org/wiki/Terminal_mode</a>
</li>

<li>Box-drawing character<br />
<a href="https://en.wikipedia.org/wiki/Box-drawing_character">https://en.wikipedia.org/wiki/Box-drawing_character</a>
</li>

<li>Angrenost - brána do světa J.R.R.Tolkiena (nejedná se o popis hry)<br />
<a href="http://www.angrenost.cz/">http://www.angrenost.cz/</a>
</li>

<li>Angband na rephial.org<br />
<a href="http://rephial.org/">http://rephial.org/</a>
</li>

<li>Angband - stránka s možností downloadu hry<br />
<a href="http://angband.oook.cz/download.php">http://angband.oook.cz/download.php</a>
</li>

<li>Angband a její klony (varianty)<br />
<a href="http://angband.oook.cz/variants.php">http://angband.oook.cz/variants.php</a>
</li>

<li>Další seznam klonů hry Angband (podrobnější)<br />
<a href="http://roguebasin.roguelikedevelopment.org/index.php?title=List_of_Angband_variants">http://roguebasin.roguelikedevelopment.org/index.php?title=List_of_Angband_variants</a>
</li>

<li>Angband (pevnost ve Středozemi)<br />
<a href="http://en.wikipedia.org/wiki/Angband">http://en.wikipedia.org/wiki/Angband</a>
</li>

<li>Angband (hra)<br />
<a href="http://en.wikipedia.org/wiki/Angband_(video_game)">http://en.wikipedia.org/wiki/Angband_(video_game)</a>
</li>

<li>Doom, the Roguelike<br />
<a href="http://doomwiki.org/wiki/DoomRL">http://doomwiki.org/wiki/DoomRL</a>
</li>

<li>Roguelike evolution<br />
<a href="http://roguebasin.roguelikedevelopment.org/index.php?title=Tree_of_roguelike_evolution">http://roguebasin.roguelikedevelopment.org/index.php?title=Tree_of_roguelike_evolution</a>
</li>

<li>Roguelike (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Roguelike">http://en.wikipedia.org/wiki/Roguelike</a>
</li>

<li>Brogue Home Page<br />
<a href="https://sites.google.com/site/broguegame/">https://sites.google.com/site/broguegame/</a>
</li>

<li>Brogue (Roguelike wiki)<br />
<a href="http://roguebasin.roguelikedevelopment.org/index.php?title=Brogue">http://roguebasin.roguelikedevelopment.org/index.php?title=Brogue</a>
</li>

<li>Zangband.org<br />
<a href="http://www.zangband.org/">http://www.zangband.org/</a>
</li>

<li>Dungeon crawl (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Dungeon_crawl">http://en.wikipedia.org/wiki/Dungeon_crawl</a>
</li>

<li>FULL BLOCK (znak Unicode)<br />
<a href="https://www.unicodepedia.com/unicode/block-elements/2588/full-block/">https://www.unicodepedia.com/unicode/block-elements/2588/full-block/</a>
</li>

<li>Unicode.org<br />
<a href="https://www.unicode.org/main.html">https://www.unicode.org/main.html</a>
</li>

<li>Screenshot ze hry Brogue<br />
<a href="https://drive.google.com/file/d/1-_bjBA2rewDnleV87cu4PiytXzVWkWkT/view">https://drive.google.com/file/d/1-_bjBA2rewDnleV87cu4PiytXzVWkWkT/view</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

