<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku budeme pokračovat v popisu technologie strukturálního pattern matchingu, jenž je nedílnou součástí programovacího jazyka Coconut. Některé vzorky, které si ukážeme, přesahují možnosti Pythonu. V tomto ohledu je tedy Coconut o jeden či dva kroky napřed.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Test, jaké hodnoty jsou uloženy ve dvojici s&nbsp;jejich vzájemným porovnáním</a></p>
<p><a href="#k02">2. Vzorek odpovídající libovolnému řetězci</a></p>
<p><a href="#k03">3. Výsledek transpřekladu se vzorkem odpovídajícím libovolnému řetězci</a></p>
<p><a href="#k04">4. Vzorek obsahující řetězec, zástupný symbol a další řetězec</a></p>
<p><a href="#k05">5. Výsledek transpřekladu vzorku s&nbsp;textovým literálem následovaným zástupným symbolem</a></p>
<p><a href="#k06">6. Několik vzorků obsahujících řetězec, zástupný symbol a další řetězec</a></p>
<p><a href="#k07">7. Jediná větev <strong>case</strong> s&nbsp;několika vzorky spojenými operátorem |</a></p>
<p><a href="#k08">8. Test, zda je hodnota instancí nějaké třídy</a></p>
<p><a href="#k09">9. Vzorek s&nbsp;testem atributů objektu, včetně podrobnější podmínky</a></p>
<p><a href="#k10">10. Test atributů objektu s&nbsp;dodatečnou podmínkou jejich existence</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Test, jaké hodnoty jsou uloženy ve dvojici s&nbsp;jejich vzájemným porovnáním</h2>

<p><a
href="https://www.root.cz/clanky/pattern-matching-v-programovacim-jazyku-coconut/">V&nbsp;předchozím
článku</a> jsme si kromě dalších vzorků ukázali i skript, který po svém
spuštění zjistí, kolik prvků obsahuje seznam, který byl předán nějaké funkci.
Navíc skript zjistil i to, jaké jsou hodnoty těchto prvků a zda se vůbec jedná
o seznam. Ovšem ve skutečnosti mohou být vzorky zapsány i složitějším způsobem.
Podívejme se na následující příklad, který dokáže zjistit a následně porovnat
hodnoty prvků ve dvojici. Prvky buď mohou být totožné (viz první vzorek,
v&nbsp;němž se opakuje zástupný symbol <strong>x</strong>), nebo může být první
prvek větší, než prvek druhý, popř.&nbsp;naopak. Realizace takového testu
vypadá následovně:</p>

<pre>
def <strong>pair</strong>(p):
    <u>match</u> p:
        <u>case</u> [x,x]:
            return "same values!"
        <u>case</u> [x,y] if x&gt;y:
            return "1st value is greater"
        <u>case</u> [x,y]:
            return "2nd value is greater"
    <u>else</u>:
        return "other"
&nbsp;
&nbsp;
pair([1, 1]) |&gt; print
pair([1, 2]) |&gt; print
pair([2, 1]) |&gt; print
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si ještě jednou
&bdquo;implicitního&ldquo; testu na rovnost prvků a taktéž toho, že součástí
vzorku může být nějaká podmínka, ve které se vyskytují zástupné symboly
(<i>placeholdery</i>).</div></p>

<p>Výsledky získané po spuštění tohoto skriptu dobře ukazují jeho chování:</p>

<pre>
same values!
2nd value is greater
1st value is greater
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Vzorek odpovídající libovolnému řetězci</h2>

<p>Strukturální pattern matching realizovaný v&nbsp;programovacím jazyce
Coconut umožňuje, aby se ve vzorku nacházely i řetězce popř.&nbsp;řetězce
spojené se zástupnými symboly (<i>placeholdery</i>). To je v&nbsp;ekosystému
Pythonu relativní novinka, protože samotný programovací jazyk Python zápis
takových vzorků nepodporuje (což je škoda). Ukažme si ovšem nejprve velmi
jednoduchý příklad se vzorkem, který odpovídá libovolné hodnotě (teprve později
se přiblížíme ke komplikovanějším vzorkům):</p>

<pre>
def <strong>say_hello</strong>(name):
    <u>match</u> name:
       <u>case</u> x:
           print(f"Hello {x}!")
&nbsp;
&nbsp;
say_hello("Marvin")
</pre>

<p>Po spuštění se vypíše očekávaná zpráva:</p>

<pre>
Hello Marvin!
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Výsledek transpřekladu se vzorkem odpovídajícím libovolnému řetězci</h2>

<p>Tento skript bude (trans)přeložen do Pythonu následujícím způsobem.
Povšimněte si, že se nejprve připraví pomocné proměnné naplňované při testu
jednotlivých vzorků a posléze se pouze provede test s&nbsp;hodnotou
<strong>True</strong>, která je konstantně přiřazena do druhé proměnné. Takto
mechanicky jsou překládány všechny vzorky, což vede k&nbsp;poměrně dlouhému
výslednému kódu (někdy o délce několika kilobajtů):</p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp;
def say_hello(name):  #1 (line in Coconut source)
    _coconut_case_match_to_0 = name  #2 (line in Coconut source)
    _coconut_case_match_check_0 = False  #2 (line in Coconut source)
    _coconut_match_set_name_x = _coconut_sentinel  #2 (line in Coconut source)
    _coconut_match_set_name_x = _coconut_case_match_to_0  #2 (line in Coconut source)
    _coconut_case_match_check_0 = True  #2 (line in Coconut source)
    if _coconut_case_match_check_0:  #2 (line in Coconut source)
        if _coconut_match_set_name_x is not _coconut_sentinel:  #2 (line in Coconut source)
            x = _coconut_match_set_name_x  #2 (line in Coconut source)
    if _coconut_case_match_check_0:  #2 (line in Coconut source)
        print("Hello {_coconut_format_0}!".format(_coconut_format_0=(x)))  #4 (line in Coconut source)
&nbsp;
&nbsp;
&nbsp;
say_hello("Marvin")  #7 (line in Coconut source)
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Vzorek obsahující řetězec, zástupný symbol a další řetězec</h2>

<p>Skript <a href="#k02">ze druhé kapitoly</a> byl pouze jakousi ochutnávkou
mnohem sofistikovanějších vzorků. Programovací jazyk Coconut totiž umožňuje,
aby vzorek vypadat i takto:</p>

<ol>
<li>řetězcový literál + zástupný symbol</li>
<li>zástupný symbol + řetězcový literál</li>
<li>řetězcový literál + zástupný symbol + řetězcový literál</li>
</ol>

<p>V&nbsp;praxi to znamená, že v&nbsp;Coconutu není zapotřebí zneužívat
regulární výrazy jen proto, abychom například zjistili, jaké jméno je použito
ve větě &bdquo;My name is Marvin.&ldquo; (včetně oné tečky na konci). Můžeme
totiž zjištění jména ponechat na technologii pattern matchingu a program
přepsat do podoby:</p>

<pre>
def <strong>say_hello</strong>(about_me):
    <u>match</u> about_me:
       <u>case</u> "My name is " + name + ".":
           print(f"Hello {name}!")
&nbsp;
&nbsp;
say_hello("My name is Marvin.")
</pre>

<p><div class="rs-tip-major">Poznámka: to v&nbsp;důsledku znamená, že programy
psané v&nbsp;Coconutu většinou používají pattern matching i tam, kde by se
v&nbsp;Pythonu musely používat regulární výrazy, řezy řetězců, použití metod
<strong>string.startswith</strong> a
<strong>string.endswith</strong>apod.</div></p>

<p>Podívejme se na výsledek získaný po spuštění tohoto skriptu, abychom
zkontrolovali korektnost provedení pattern matchingu:</p>

<pre>
Hello Marvin!
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Výsledek transpřekladu vzorku s&nbsp;textovým literálem následovaným zástupným symbolem</h2>

<p>Zajímavé bude zjistit, jakým způsobem se vlastně předchozí skript
(trans)přeloží do Pythonu, protože to naznačuje, jak bychom mohli tento problém
řešit ručně. Povšimněte si, že Coconut detekoval zástupný symbol uprostřed
řetězce a využil tedy metody <strong>startswith</strong> a
<strong>endwith</strong>. Taktéž využil řezy řetězcem (tj.&nbsp;zápis
<strong>řetězec[od:do]</strong>):</p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp;
def say_hello(about_me):  #1 (line in Coconut source)
    _coconut_case_match_to_0 = about_me  #2 (line in Coconut source)
    _coconut_case_match_check_0 = False  #2 (line in Coconut source)
    _coconut_match_set_name_name = _coconut_sentinel  #2 (line in Coconut source)
    if (_coconut.isinstance(_coconut_case_match_to_0, _coconut.str)) and (_coconut.len(_coconut_case_match_to_0) &gt;= 12) and (_coconut_case_match_to_0.startswith("My name is ")) and (_coconut_case_match_to_0.endswith(".")):  #2 (line in Coconut source)
        _coconut_match_temp_0 = _coconut_case_match_to_0[11:-1]  #2 (line in Coconut source)
        _coconut_match_set_name_name = _coconut_match_temp_0  #2 (line in Coconut source)
        _coconut_case_match_check_0 = True  #2 (line in Coconut source)
    if _coconut_case_match_check_0:  #2 (line in Coconut source)
        if _coconut_match_set_name_name is not _coconut_sentinel:  #2 (line in Coconut source)
            name = _coconut_match_set_name_name  #2 (line in Coconut source)
    if _coconut_case_match_check_0:  #2 (line in Coconut source)
        print("Hello {_coconut_format_0}!".format(_coconut_format_0=(name)))  #4 (line in Coconut source)
&nbsp;
&nbsp;
&nbsp;
say_hello("My name is Marvin.")  #7 (line in Coconut source)
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Několik vzorků obsahujících řetězec, zástupný symbol a další řetězec</h2>

<p>Pochopitelně nám nic nebrání v&nbsp;přidání několika dalších vzorků
založených na testování, jaké &bdquo;pevné&ldquo; a
&bdquo;proměnné/zástupné&ldquo; části řetězec obsahuje. Například můžeme
předchozí demonstrační příklad rozšířit o získání jmen z&nbsp;několika různých
oznamovacích vět. Řešení založené na pattern matchingu je stále poměrně
přímočaré a dobře čitelné:</p>

<pre>
def <strong>say_hello</strong>(about_me):
    <u>match</u> about_me:
       <u>case</u> "My name is " + name + ".":
           print(f"Hello {name}!")
       <u>case</u> "His name is " + name + ".":
           print(f"Hello {name}!")
       <u>case</u> "He is named " + name + ".":
           print(f"Hello {name}!")
       <u>case</u> _:
           print("Sorry, I don't know your name")
&nbsp;
&nbsp;
say_hello("My name is Marvin.")
say_hello("His name is Marvin.")
say_hello("He is named Marvin.")
say_hello("Its name is Marvin.")
</pre>

<p>Opět si vše otestujme:</p>

<pre>
Hello Marvin!
Hello Marvin!
Hello Marvin!
Sorry, I don't know your name
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Jediná větev <strong>case</strong> s&nbsp;několika vzorky spojenými operátorem |</h2>

<p>Stejný algoritmus ovšem můžeme zapsat i odlišně, konkrétně s&nbsp;využitím
znaku | ve vzorku. Takový vzorek je možné rozdělit na více řádků, ovšem musíme
zde použít znak \ na konci, takže je otázkou, jestli se jedná o dobré řešení či
nikoli (v&nbsp;tomto případě je asi vhodné, protože se nebude opakovat příkaz
zapsaný přímo ve větvi):</p>

<pre>
def <strong>say_hello</strong>(about_me):
    <u>match</u> about_me:
       <u>case</u> "My name is " + name + "."| "His name is " + name + "." | "He is named " + name + ".":
           print(f"Hello {name}!")
       <u>case</u> _:
           print("Sorry, I don't know your name")
&nbsp;
&nbsp;
say_hello("My name is Marvin.")
say_hello("His name is Marvin.")
say_hello("He is named Marvin.")
say_hello("Its name is Marvin.")
</pre>

<p>Výsledek by měl být stejný, jako tomu bylo v&nbsp;předchozím demonstračním
příkladu:</p>

<pre>
Hello Marvin!
Hello Marvin!
Hello Marvin!
Sorry, I don't know your name
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Test, zda je hodnota instancí nějaké třídy</h2>

<p>V&nbsp;předchozím článku jsem si ukazovali i několik příkladů, v&nbsp;nichž
byly použity n-tice nebo seznamy pro reprezentaci komplexních čísel.
V&nbsp;těchto příkladech jsme rozhodovali o tom, zda je komplexní číslo nulové,
zda obsahuje nulovou reálnou složku atd. Ovšem v&nbsp;praxi se spíše setkáme
s&nbsp;tím, že bude komplexní číslo reprezentováno objektem, konkrétně instancí
třídy <strong>Complex</strong> apod. (jedná se opět o školní příklad, protože
Python obsahuje podporu pro komplexní čísla jako plnohodnotných základních
datových typů).</p>

<p>Díky existenci strukturálního pattern matchingu však můžeme zapsat vzorky i
pro objekty, konkrétně pro otestování, jaké jsou hodnoty atributů těchto
objektů. Nebo se může jednat o jednoduchý test, jestli je vůbec hodnota typu
<strong>Complex</strong>, přesněji řečeno instance této třídy (bez ohledu na
hodnoty atributů tohoto objektu). Pokusme se tedy skripty z&nbsp;předchozího
článku přepsat takovým způsobem, že se budou testovat i vlastnosti komplexního
čísla typu <strong>Complex</strong> předaného do funkce
<strong>test_number</strong>. Nejprve přidáme test, jestli je předaná hodnota
typu <strong>Complex</strong>, v&nbsp;dalším příkladu pak přidáme i testy na
atributy. Povšimněte si, že ve skriptu je obsažena podpora i pro původní
reprezentaci komplexních čísel jako dvojice hodnot:</p>

<pre>
class <strong>Complex</strong>():
&nbsp;
    def <strong>__init__</strong>(self, real, imag):
        self.real = real
        self.imag = imag
&nbsp;
    def <strong>__str__</strong>(self):
        return f"Complex number {self.real}+i{self.imag} represented as object"
&nbsp;
&nbsp;
def <strong>test_number</strong>(value):
    <u>match</u> value:
        <u>case</u> (0, 0):
            print("Zero")
        <u>case</u> (real, 0) if real&gt;0:
            print(f"Positive real number {real}")
        <u>case</u> (real, 0):
            print(f"Negative real number {real}")
        <u>case</u> (0, imag) if imag&lt;0:
            print(f"Negative imaginary number {imag}")
        <u>case</u> (0, imag):
            print(f"Negative imaginary number {imag}")
        <u>case</u> (real, imag):
            print(f"Complex number {real}+i{imag}")
        <u>case</u> Complex():
            print(value)
        <u>case</u> _:
            raise ValueError("Not a complex number")
&nbsp;
&nbsp;
test_number((0,0))
test_number((1,0))
test_number((-1,0))
test_number((0,1))
test_number((0,-1))
test_number((1,1))
&nbsp;
test_number(Complex(0,0))
test_number(Complex(1,0))
test_number(Complex(-1,0))
test_number(Complex(0,1))
test_number(Complex(0,-1))
test_number(Complex(1,1))
</pre>

<p>Vše si otestujeme spuštěním skriptu:</p>

<pre>
Zero
Positive real number 1
Negative real number -1
Negative imaginary number 1
Negative imaginary number -1
Complex number 1+i1
Complex number 0+i0 represented as object
Complex number 1+i0 represented as object
Complex number -1+i0 represented as object
Complex number 0+i1 represented as object
Complex number 0+i-1 represented as object
Complex number 1+i1 represented as object
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Vzorek s&nbsp;testem atributů objektu, včetně podrobnější podmínky</h2>

<p>V&nbsp;předchozím skriptu jsme testovali, jestli je předávaná hodnota typu
<strong>Complex</strong> (tj.&nbsp;instancí této třídy). Jednalo se o
následující vzorek:</p>

<pre>
<u>case</u> Complex():
    print(value)
</pre>

<p>Ovšem relativně snadno můžeme přidat i test nejenom na typ hodnoty, ale i na
konkrétní vlastnosti atributů tohoto objektu. Příkladem může být test na nulové
komplexní číslo (tj.&nbsp;na &bdquo;komplexní nulu&ldquo;). Tento zápis vypadá
následovně a je v&nbsp;této podobě kompatibilní i s&nbsp;jazykem Python:</p>

<pre>
<u>case</u> Complex(real=0, imag=0):
    print("Zero complex represented as object")
</pre>

<p>Jednoduše tedy můžeme přidat tento další test, který musí být umístěn za
obecnějším testem, do skriptu, jenž získá následující podobu:</p>

<pre>
class <strong>Complex</strong>():
&nbsp;
    def <strong>__init__</strong>(self, real, imag):
        self.real = real
        self.imag = imag
&nbsp;
    def <strong>__str__</strong>(self):
        return f"Complex number {self.real}+i{self.imag} represented as object"
&nbsp;
&nbsp;
def <strong>test_number</strong>(value):
    <u>match</u> value:
        <u>case</u> (0, 0):
            print("Zero")
        <u>case</u> (real, 0) if real&gt;0:
            print(f"Positive real number {real}")
        <u>case</u> (real, 0):
            print(f"Negative real number {real}")
        <u>case</u> (0, imag) if imag&lt;0:
            print(f"Negative imaginary number {imag}")
        <u>case</u> (0, imag):
            print(f"Negative imaginary number {imag}")
        <u>case</u> (real, imag):
            print(f"Complex number {real}+i{imag}")
        <u>case</u> Complex(real=0, imag=0):
            print("Zero complex represented as object")
        <u>case</u> Complex():
            print(value)
        <u>case</u> _:
            raise ValueError("Not a complex number")
&nbsp;
&nbsp;
test_number((0,0))
test_number((1,0))
test_number((-1,0))
test_number((0,1))
test_number((0,-1))
test_number((1,1))
&nbsp;
test_number(Complex(0,0))
test_number(Complex(1,0))
test_number(Complex(-1,0))
test_number(Complex(0,1))
test_number(Complex(0,-1))
test_number(Complex(1,1))
</pre>

<p>Následují výsledky s&nbsp;otestováním vlastností nové větve se vzorkem:</p>

<pre>
Zero
Positive real number 1
Negative real number -1
Negative imaginary number 1
Negative imaginary number -1
Complex number 1+i1
Zero complex represented as object
Complex number 1+i0 represented as object
Complex number -1+i0 represented as object
Complex number 0+i1 represented as object
Complex number 0+i-1 represented as object
Complex number 1+i1 represented as object
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Test atributů objektu s&nbsp;dodatečnou podmínkou jejich existence</h2>

<p>V&nbsp;některých situacích je vhodné zjistit, jestli objekt skutečně
obsahuje zvolené atributy (protože netřídní atributy jsou v&nbsp;Pythonu
vytvářeny dynamicky a není zaručena jejich existence ve všech případech).
Vzorek s&nbsp;testem existence (a hodnoty) atributu musí před názvem atributu
obsahovat tečku. Takový vzorek je unikátní pro jazyk Coconut a nelze ho použít
přímo v&nbsp;Pythonu:</p>

<pre>
<u>case</u> Complex(.real=0, .imag=0):
    print("Zero complex represented as object")
</pre>

<p>Doplňme si tedy náš skript pro rozpoznávání různých variant komplexních
čísel ještě o výše uvedenou větev s&nbsp;novým typem vzorku. Finální varianta
bude vypadat následovně:</p>

<pre>
class <strong>Complex</strong>():
&nbsp;
    def <strong>__init__</strong>(self, real, imag):
        self.real = real
        self.imag = imag
&nbsp;
    def <strong>__str__</strong>(self):
        return f"Complex number {self.real}+i{self.imag} represented as object"
&nbsp;
&nbsp;
def <strong>test_number</strong>(value):
    <u>match</u> value:
        <u>case</u> (0, 0):
            print("Zero")
        <u>case</u> (real, 0) if real&gt;0:
            print(f"Positive real number {real}")
        <u>case</u> (real, 0):
            print(f"Negative real number {real}")
        <u>case</u> (0, imag) if imag&lt;0:
            print(f"Negative imaginary number {imag}")
        <u>case</u> (0, imag):
            print(f"Negative imaginary number {imag}")
        <u>case</u> (real, imag):
            print(f"Complex number {real}+i{imag}")
        <u>case</u> Complex(.real=0, .imag=0):
            print("Zero complex represented as object")
        <u>case</u> Complex():
            print(value)
        <u>case</u> _:
            raise ValueError("Not a complex number")
&nbsp;
&nbsp;
test_number((0,0))
test_number((1,0))
test_number((-1,0))
test_number((0,1))
test_number((0,-1))
test_number((1,1))
&nbsp;
test_number(Complex(0,0))
test_number(Complex(1,0))
test_number(Complex(-1,0))
test_number(Complex(0,1))
test_number(Complex(0,-1))
test_number(Complex(1,1))
</pre>

<p>Vše si otestujme:</p>

<pre>
Zero
Positive real number 1
Negative real number -1
Negative imaginary number 1
Negative imaginary number -1
Complex number 1+i1
Zero complex represented as object
Complex number 1+i0 represented as object
Complex number -1+i0 represented as object
Complex number 0+i1 represented as object
Complex number 0+i-1 represented as object
Complex number 1+i1 represented as object
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Coconut byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.</p>

<table>
<tr><th>  #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td>  1</td><td>hello-world.coco</td><td>Program typu &bdquo;Hello, world&ldquo; naprogramovaný v&nbsp;jazyce Coconut</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.coco</a></td></tr>
<tr><td>  2</td><td>hello-world.py</td><td>překlad pipeline s&nbsp;voláním funkce <strong>print</strong> do Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.py</a></td></tr>
<tr><td>  3</td><td>hello-world-non-optim.py</td><td>ukázka celého souboru (čistý Python), který vznikne výsledkem transpřekladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-non-optim.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-non-optim.py</a></td></tr>
<tr><td>  4</td><td>hello-world-minified.py</td><td>ukázka celého souboru (čistý Python), který vznikne výsledkem transpřekladu s&nbsp;povolenou minifikací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-minified.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-minified.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>  5</td><td>lambda-old-style.coco</td><td>zápis anonymní funkce s&nbsp;využitím operátoru -&gt; (původní styl Pythonu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.coco</a></td></tr>
<tr><td>  6</td><td>lambda-old-style.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.py</a></td></tr>
<tr><td>  7</td><td>lambda-new-style.coco</td><td>zápis anonymní funkce s&nbsp;využitím operátoru =&gt; (doporučovaný styl)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.coco</a></td></tr>
<tr><td>  8</td><td>lambda-new-style.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>  9</td><td>original-factorial-1.py</td><td>výpočet faktoriálu naprogramovaný v&nbsp;Pythonu: použití anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-1.py</a></td></tr>
<tr><td> 10</td><td>original-factorial-2.py</td><td>výpočet faktoriálu naprogramovaný v&nbsp;Pythonu: vnořené anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-2.py</a></td></tr>
<tr><td> 11</td><td>original-factorial-3.py</td><td>výpočet tabulky s&nbsp;faktoriály bez použití programových smyček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 12</td><td>lambda-factorial-1.coco</td><td>výpočet faktoriálu s&nbsp;anonymní funkcí se dvěma parametry (nekorektní zápis)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.coco</a></td></tr>
<tr><td> 13</td><td>lambda-factorial-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.py</a></td></tr>
<tr><td> 14</td><td>lambda-factorial-2.coco</td><td>výpočet faktoriálu s&nbsp;anonymní funkcí se dvěma parametry (korektní zápis)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.coco</a></td></tr>
<tr><td> 15</td><td>lambda-factorial-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.py</a></td></tr>
<tr><td> 16</td><td>lambda-factorial-3.coco</td><td>vnořené anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.coco</a></td></tr>
<tr><td> 17</td><td>lambda-factorial-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.py</a></td></tr>
<tr><td> 18</td><td>lambda-factorial-4.coco</td><td>výpočet tabulky s&nbsp;faktoriály bez použití programových smyček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.coco</a></td></tr>
<tr><td> 19</td><td>lambda-factorial-4.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.py</a></td></tr>
<tr><td> 20</td><td>lambda-factorial-5.coco</td><td>výpočet tabulky s&nbsp;faktoriály bez použití programových smyček + použití pipe</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.coco</a></td></tr>
<tr><td> 21</td><td>lambda-factorial-5.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 22</td><td>implicit-lambda-1.coco</td><td>lambda výraz s&nbsp;implicitním parametrem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.coco</a></td></tr>
<tr><td> 23</td><td>implicit-lambda-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.py</a></td></tr>
<tr><td> 24</td><td>implicit-lambda-2.coco</td><td>lambda výraz bez parametru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.coco</a></td></tr>
<tr><td> 25</td><td>implicit-lambda-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 26</td><td>statement-lambda-1.coco</td><td>plnohodnotná anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.coco</a></td></tr>
<tr><td> 27</td><td>statement-lambda-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.py</a></td></tr>
<tr><td> 28</td><td>statement-lambda-2.coco</td><td>anonymní funkce s&nbsp;příkazem a výrazem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.coco</a></td></tr>
<tr><td> 29</td><td>statement-lambda-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 30</td><td>statement-lambda-type-hints.coco</td><td>anonymní funkce s&nbsp;typovými informacemi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints.coco</a></td></tr>
<tr><td> 31</td><td>statement-lambda-type-hints-python-2.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 2</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-2.py</a></td></tr>
<tr><td> 32</td><td>statement-lambda-type-hints-python-3.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 33</td><td>original-partial-1.py</td><td>částečně vyhodnocená funkce, realizace provedená ve standardním Pythonu, první verze (funkce se dvěma parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-1.py</a></td></tr>
<tr><td> 34</td><td>original-partial-2.py</td><td>částečně vyhodnocená funkce, realizace provedená ve standardním Pythonu, druhá verze (funkce se třemi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-2.py</a></td></tr>
<tr><td> 35</td><td>original-partial-3.py</td><td>částečně vyhodnocená funkce, realizace provedená ve standardním Pythonu, třetí verze (funkce se čtyřmi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 36</td><td>partial-1.coco</td><td>částečně vyhodnocená funkce zapsaná v&nbsp;jazyku Coconut, první verze (funkce se dvěma parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.coco</a></td></tr>
<tr><td> 37</td><td>partial-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.py</a></td></tr>
<tr><td> 38</td><td>partial-2.coco</td><td>částečně vyhodnocená funkce zapsaná v&nbsp;jazyku Coconut, druhá verze (funkce se třemi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.coco</a></td></tr>
<tr><td> 39</td><td>partial-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.py</a></td></tr>
<tr><td> 40</td><td>partial-3.coco</td><td>částečně vyhodnocená funkce zapsaná v&nbsp;jazyku Coconut, třetí verze (funkce se čtyřmi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.coco</a></td></tr>
<tr><td> 41</td><td>partial-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 42</td><td>partial-map.coco</td><td>částečně vyhodnocená funkce vyššího řádu <strong>fmap</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.coco</a></td></tr>
<tr><td> 43</td><td>partial-map.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 44</td><td>sequences1A.coco</td><td>ukázka rozdílu v&nbsp;chování funkcí <strong>map</strong> a <strong>fmap</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.coco</a></td></tr>
<tr><td> 45</td><td>sequences1A.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.py</a></td></tr>
<tr><td> 46</td><td>sequences1B.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.coco</a></td></tr>
<tr><td> 47</td><td>sequences1B.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.py</a></td></tr>
<tr><td> 48</td><td>sequences1C.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů s&nbsp;implicitním parametrem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.coco</a></td></tr>
<tr><td> 49</td><td>sequences1C.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.py</a></td></tr>
<tr><td> 50</td><td>sequences2A.coco</td><td>ukázka funkcí <strong>reduce</strong>, <strong>takewhile</strong> a <strong>dropwhile</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.coco</a></td></tr>
<tr><td> 51</td><td>sequences2A.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.py</a></td></tr>
<tr><td> 52</td><td>sequences2B.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.coco</a></td></tr>
<tr><td> 53</td><td>sequences2B.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.py</a></td></tr>
<tr><td> 54</td><td>sequences2C.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů s&nbsp;implicitním parametrem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.coco</a></td></tr>
<tr><td> 55</td><td>sequences2C.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 56</td><td>custom-operator-1.coco</td><td>vytvoření nového binárního operátoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.coco</a></td></tr>
<tr><td> 57</td><td>custom-operator-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.py</a></td></tr>
<tr><td> 58</td><td>custom-operator-2.coco</td><td>vytvoření nového binárního operátoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.coco</a></td></tr>
<tr><td> 59</td><td>custom-operator-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.py</a></td></tr>
<tr><td> 60</td><td>custom-operator-3.coco</td><td>vytvoření nového unárního operátoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.coco</a></td></tr>
<tr><td> 61</td><td>custom-operator-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 62</td><td>infix-notation-1.coco</td><td>infixový zápis volání funkce <strong>add</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.coco</a></td></tr>
<tr><td> 63</td><td>infix-notation-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.py</a></td></tr>
<tr><td> 64</td><td>infix-notation-2.coco</td><td>infixový zápis volání funkce <strong>factorial</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.coco</a></td></tr>
<tr><td> 65</td><td>infix-notation-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.py</a></td></tr>
<tr><td> 66</td><td>infix-notation-3.coco</td><td>infixová definice funkce <strong>nad</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.coco</a></td></tr>
<tr><td> 67</td><td>infix-notation-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.py</a></td></tr>
<tr><td> 68</td><td>infix-notation-4.coco</td><td>infixový zápis volání funkcí a priorita operací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.coco</a></td></tr>
<tr><td> 69</td><td>infix-notation-4.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 70</td><td>py3-only-async-await.coco</td><td>konstrukce platná pouze v&nbsp;Pythonu 3.x &ndash; <strong>async</strong> a <strong>await</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.coco</a></td></tr>
<tr><td> 71</td><td>py3-only-async-await.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3.x</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.py</a></td></tr>
<tr><td> 72</td><td>py3-only-counter_closure.coco</td><td>konstrukce platná pouze v&nbsp;Pythonu 3.x &ndash; nelokální proměnná</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.coco</a></td></tr>
<tr><td> 73</td><td>py3-only-counter_closure.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3.x</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.py</a></td></tr>
<tr><td> 74</td><td>py3-only-walrus-operator.coco</td><td>konstrukce platná pouze v&nbsp;Pythonu 3.x &ndash; mroží operátor</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.coco</a></td></tr>
<tr><td> 75</td><td>py3-only-walrus-operator.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3.x</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 76</td><td>pipeline-basic.coco</td><td>základní forma kolony, v&nbsp;níž data proudí zleva doprava</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco</a></td></tr>
<tr><td> 77</td><td>pipeline-basic.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py</a></td></tr>
<tr><td> 78</td><td>pipeline-backward.coco</td><td>základní forma kolony, v&nbsp;níž data proudí zprava doleva</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco</a></td></tr>
<tr><td> 79</td><td>pipeline-backward.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 80</td><td>pipeline-none-not-aware.coco</td><td>kolona, která nerozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.coco</a></td></tr>
<tr><td> 81</td><td>pipeline-none-not-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.py</a></td></tr>
<tr><td> 82</td><td>pipeline-none-aware.coco</td><td>kolona, která rozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.coco</a></td></tr>
<tr><td> 83</td><td>pipeline-none-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.py</a></td></tr>
<tr><td> 84</td><td>pipeline-none-aware-2.coco</td><td>kolona, která rozeznává hodnoty <strong>None</strong>, explicitní tisk výsledků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.coco</a></td></tr>
<tr><td> 85</td><td>pipeline-none-aware-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 86</td><td>pipeline-backward-none-not-aware.coco</td><td>&bdquo;zpětná&ldquo; kolona, která nerozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.coco</a></td></tr>
<tr><td> 87</td><td>pipeline-backward-none-not-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.py</a></td></tr>
<tr><td> 88</td><td>pipeline-backward-none-aware.coco</td><td>&bdquo;zpětná&ldquo; kolona, která rozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.coco</a></td></tr>
<tr><td> 89</td><td>pipeline-backward-none-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 90</td><td>pipeline-multiple-arguments.coco</td><td>kolona přenášející větší množství argumentů mezi funkcemi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.coco</a></td></tr>
<tr><td> 91</td><td>pipeline-multiple-arguments.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.py</a></td></tr>
<tr><td> 92</td><td>pipeline-multiple-arguments-2.coco</td><td>použití standardního operátoru pro rozdíl v&nbsp;koloně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.coco</a></td></tr>
<tr><td> 93</td><td>pipeline-multiple-arguments-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.py</a></td></tr>
<tr><td> 94</td><td>pipeline-keyword-arguments.coco</td><td>kolona přenášející <i>keyword</i> argumenty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.coco</a></td></tr>
<tr><td> 95</td><td>pipeline-keyword-arguments.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 96</td><td>function-composition-1.coco</td><td>použití kompozice funkcí v&nbsp;koloně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.coco</a></td></tr>
<tr><td> 97</td><td>function-composition-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.py</a></td></tr>
<tr><td> 98</td><td>function-composition-2.coco</td><td>uložení kompozice funkcí do nového symbolu (nové funkce)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.coco</a></td></tr>
<tr><td> 99</td><td>function-composition-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.py</a></td></tr>
<tr><td>100</td><td>function-composition-3.coco</td><td>kompozice funkcí operátorem &lt;..</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-3.coco</a></td></tr>
<tr><td>101</td><td>function-composition-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-3.py</a></td></tr>
<tr><td>102</td><td>function-composition-4.coco</td><td>kompozice funkcí a hodnota <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-4.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-4.coco</a></td></tr>
<tr><td>103</td><td>function-composition-4.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>104</td><td>pattern-matching-1.coco</td><td>výpočet faktoriálu realizovaný v&nbsp;původní syntaxi jazyka Coconut</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-1.coco</a></td></tr>
<tr><td>105</td><td>pattern-matching-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-1.py</a></td></tr>
<tr><td>106</td><td>pattern-matching-2.coco</td><td>výpočet faktoriálu realizovaný v&nbsp;syntaxi jazyka Coconut kompatibilní s&nbsp;Pythonem 3.10</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-2.coco</a></td></tr>
<tr><td>107</td><td>pattern-matching-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-2.py</a></td></tr>
<tr><td>108</td><td>pattern-matching-3.coco</td><td>ve větvi s&nbsp;rekurzí se kontroluje, zda je vstupní hodnota kladná</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-3.coco</a></td></tr>
<tr><td>109</td><td>pattern-matching-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-3.py</a></td></tr>
<tr><td>110</td><td>pattern-matching-4.coco</td><td>test na typ předané hodnoty (původní syntaxe)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-4.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-4.coco</a></td></tr>
<tr><td>111</td><td>pattern-matching-4.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-4.py</a></td></tr>
<tr><td>112</td><td>pattern-matching-5.coco</td><td>test na typ předané hodnoty (nová syntaxe)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-5.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-5.coco</a></td></tr>
<tr><td>113</td><td>pattern-matching-5.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-5.py</a></td></tr>
<tr><td>114</td><td>pattern-matching-6.coco</td><td>spojení dvou vzorků pomocí operátoru |</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-6.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-6.coco</a></td></tr>
<tr><td>115</td><td>pattern-matching-6.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-6.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>116</td><td>pattern-matching-7.coco</td><td>zjištění, kolik prvků obsahuje sezname</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-7.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-7.coco</a></td></tr>
<tr><td>117</td><td>pattern-matching-7.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-7.py</a></td></tr>
<tr><td>118</td><td>pattern-matching-8.coco</td><td>vylepšení předchozího příkladu, tisk hodnot prvků ze seznamu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-8.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-8.coco</a></td></tr>
<tr><td>119</td><td>pattern-matching-8.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-8.py</a></td></tr>
<tr><td>120</td><td>pattern-matching-9.coco</td><td>test, zda je do funkce <strong>list_type</strong> předán skutečně seznam, první varianta</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-9.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-9.coco</a></td></tr>
<tr><td>121</td><td>pattern-matching-9.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-9.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-9.py</a></td></tr>
<tr><td>122</td><td>pattern-matching-A.coco</td><td>test, zda je do funkce <strong>list_type</strong> předán skutečně seznam, druhá varianta</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-A.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-A.coco</a></td></tr>
<tr><td>123</td><td>pattern-matching-A.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-A.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>124</td><td>pattern-matching-B.coco</td><td>pattern matching a dvojice hodnot představujících komplexní čísla</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-B.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-B.coco</a></td></tr>
<tr><td>125</td><td>pattern-matching-B.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-B.py</a></td></tr>
<tr><td>126</td><td>pattern-matching-C.coco</td><td>detekce, zda není reálná nebo imaginární složka komplexního čísla nulová</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-C.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-C.coco</a></td></tr>
<tr><td>127</td><td>pattern-matching-C.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-C.py</a></td></tr>
<tr><td>128</td><td>pattern-matching-D.coco</td><td>dtto, ovšem využití seznamu s&nbsp;dvojicí hodnot namísto n-tice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco</a></td></tr>
<tr><td>129</td><td>pattern-matching-D.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>129</td><td>pattern-matching-E.coco</td><td>test, jaké hodnoty jsou uloženy ve dvojici</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-E.coco</a></td></tr>
<tr><td>130</td><td>pattern-matching-E.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-E.py</a></td></tr>
<tr><td>131</td><td>pattern-matching-F.coco</td><td>vzorek odpovídající libovolnému řetězci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-F.coco</a></td></tr>
<tr><td>132</td><td>pattern-matching-F.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-F.py</a></td></tr>
<tr><td>133</td><td>pattern-matching-G.coco</td><td>vzorek obsahující řetězec, zástupný symbol a další řetězec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-G.coco</a></td></tr>
<tr><td>134</td><td>pattern-matching-G.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-G.py</a></td></tr>
<tr><td>135</td><td>pattern-matching-H.coco</td><td>několik vzorků obsahujících řetězec, zástupný symbol a další řetězec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-H.coco</a></td></tr>
<tr><td>136</td><td>pattern-matching-H.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-H.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>137</td><td>pattern-matching-I.coco</td><td>test, zda je hodnota instancí nějaké třídy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-I.coco</a></td></tr>
<tr><td>138</td><td>pattern-matching-I.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-I.py</a></td></tr>
<tr><td>139</td><td>pattern-matching-J.coco</td><td>vzorek s&nbsp;testem atributů objektu, včetně podrobnější podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-J.coco</a></td></tr>
<tr><td>140</td><td>pattern-matching-J.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-J.py</a></td></tr>
<tr><td>141</td><td>pattern-matching-K.coco</td><td>test atributů objektu s&nbsp;dodatečnou podmínkou jejich existence</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-K.coco</a></td></tr>
<tr><td>142</td><td>pattern-matching-K.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-K.py</a></td></tr>
<tr><td>143</td><td>pattern-matching-L.coco</td><td>strukturální pattern matching se slovníky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-L.coco</a></td></tr>
<tr><td>144</td><td>pattern-matching-L.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-L.py</a></td></tr>
<tr><td>145</td><td>pattern-matching-M.coco</td><td>vzorek se seznamem se známou hlavou (<i>head</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-M.coco</a></td></tr>
<tr><td>146</td><td>pattern-matching-M.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-M.py</a></td></tr>
<tr><td>147</td><td>pattern-matching-N.coco</td><td>vzorek se seznamem se známým koncem (<i>tail</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-N.coco</a></td></tr>
<tr><td>148</td><td>pattern-matching-N.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-N.py</a></td></tr>
<tr><td>149</td><td>pattern-matching-O.coco</td><td>vzorek se seznamem se známou hlavou a současně i koncem (<i>head</i> + <i>tail</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-O.coco</a></td></tr>
<tr><td>150</td><td>pattern-matching-O.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-D.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pattern-matching-O.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Pattern matching (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Pattern_matching">https://en.wikipedia.org/wiki/Pattern_matching</a>
</li>

<li>Coconut: funkcionální jazyk s&nbsp;pattern matchingem kompatibilní s&nbsp;Pythonem<br />
<a href="https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/">https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/</a>
</li>

<li>Coconut aneb funkcionální nadstavba nad Pythonem (2.část)<br />
<a href="https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/">https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/</a>
</li>

<li>Python 3.10 and the Elegance of Pattern Matching<br />
<a href="https://python.plainenglish.io/python-3-10-and-the-elegance-of-pattern-matching-2620a02b2379">https://python.plainenglish.io/python-3-10-and-the-elegance-of-pattern-matching-2620a02b2379</a>
</li>

<li>More Pattern Matching in Python 3.10<br />
<a href="https://towardsdatascience.com/more-advanced-pattern-matching-in-python-3-10-2dbd8598302a">https://towardsdatascience.com/more-advanced-pattern-matching-in-python-3-10-2dbd8598302a</a>
</li>

<li>Pattern Matching in Python 3.10<br />
<a href="https://towardsdatascience.com/pattern-matching-in-python-3-10-6124ff2079f0">https://towardsdatascience.com/pattern-matching-in-python-3-10-6124ff2079f0</a>
</li>

<li>Python 3.10.0<br />
<a href="https://www.python.org/downloads/release/python-3100/">https://www.python.org/downloads/release/python-3100/</a>
</li>

<li>The fate of reduce() in Python 3000<br />
<a href="http://lambda-the-ultimate.org/node/587">http://lambda-the-ultimate.org/node/587</a>
</li>

<li>PEP 634 &ndash; Structural Pattern Matching: Specification<br />
<a href="https://peps.python.org/pep-0634/">https://peps.python.org/pep-0634/</a>
</li>

<li>PEP 635 &ndash; Structural Pattern Matching: Motivation and Rationale<br />
<a href="https://peps.python.org/pep-0635/">https://peps.python.org/pep-0635/</a>
</li>

<li>PEP 636 &ndash; Structural Pattern Matching: Tutorial<br />
<a href="https://peps.python.org/pep-0636/">https://peps.python.org/pep-0636/</a>
</li>

<li>PEP 622 &ndash; Structural Pattern Matching<br />
<a href="https://peps.python.org/pep-0622/">https://peps.python.org/pep-0622/</a>
</li>

<li>Python 3.10 se strukturálním pattern matchingem<br />
<a href="https://www.root.cz/zpravicky/python-3-10-se-strukturalnim-pattern-matchingem/">https://www.root.cz/zpravicky/python-3-10-se-strukturalnim-pattern-matchingem/</a>
</li>

<li>Null coalescing operator<br />
<a href="https://en.wikipedia.org/wiki/Null_coalescing_operator">https://en.wikipedia.org/wiki/Null_coalescing_operator</a>
</li>

<li>Operátor koalescence<br />
<a href="https://cs.wikipedia.org/wiki/Oper%C3%A1tor_koalescence">https://cs.wikipedia.org/wiki/Oper%C3%A1tor_koalescence</a>
</li>

<li>Clojure core.match<br />
<a href="https://github.com/clojure/core.match">https://github.com/clojure/core.match</a>
</li>

<li>The Rust Programming Language: Patterns and Matching<br />
<a href="https://doc.rust-lang.org/book/ch18-00-patterns.html#patterns-and-matching">https://doc.rust-lang.org/book/ch18-00-patterns.html#patterns-and-matching</a>
</li>

<li>The Rust Programming Language: Pattern Syntax<br />
<a href="https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html">https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html</a>
</li>

<li>Elvis operator<br />
<a href="https://en.wikipedia.org/wiki/Elvis_operator">https://en.wikipedia.org/wiki/Elvis_operator</a>
</li>

<li>Safe navigation operator<br />
<a href="https://en.wikipedia.org/wiki/Safe_navigation_operator">https://en.wikipedia.org/wiki/Safe_navigation_operator</a>
</li>

<li>Setting stacksize in a python script<br />
<a href="https://stackoverflow.com/questions/5061582/setting-stacksize-in-a-python-script">https://stackoverflow.com/questions/5061582/setting-stacksize-in-a-python-script</a>
</li>

<li>What is the maximum recursion depth in Python, and how to increase it?<br />
<a href="https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it?rq=1">https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it?rq=1</a>
</li>

<li>Does Python optimize tail recursion?<br />
<a href="https://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion">https://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion</a>
</li>

<li>Programovací jazyk APL: programování bez smyček<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-apl-programovani-bez-smycek/">https://www.root.cz/clanky/programovaci-jazyk-apl-programovani-bez-smycek/</a>
</li>

<li>Programovací jazyk APL - dokončení<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-apl-dokonceni/">https://www.root.cz/clanky/programovaci-jazyk-apl-dokonceni/</a>
</li>

<li>Tail call<br />
<a href="https://en.wikipedia.org/wiki/Tail_call">https://en.wikipedia.org/wiki/Tail_call</a>
</li>

<li>Tail Call Optimization for Python<br />
<a href="https://github.com/baruchel/tco">https://github.com/baruchel/tco</a>
</li>

<li>Tail Recursion Elimination<br />
<a href="http://neopythonic.blogspot.cz/2009/04/tail-recursion-elimination.html">http://neopythonic.blogspot.cz/2009/04/tail-recursion-elimination.html</a>
</li>

<li>Origins of Python's "Functional" Features <br />
<a href="http://python-history.blogspot.cz/2009/04/origins-of-pythons-functional-features.html">http://python-history.blogspot.cz/2009/04/origins-of-pythons-functional-features.html</a>
</li>

<li>Tail recursion decorator revisited<br />
<a href="http://fiber-space.de/wordpress/2009/04/20/tail-recursion-decorator-revisited/">http://fiber-space.de/wordpress/2009/04/20/tail-recursion-decorator-revisited/</a>
</li>

<li>Koncová rekurze<br />
<a href="https://cs.wikipedia.org/wiki/Koncov%C3%A1_rekurze">https://cs.wikipedia.org/wiki/Koncov%C3%A1_rekurze</a>
</li>

<li>Recursion (computer science)<br />
<a href="https://en.wikipedia.org/wiki/Recursion_%28computer_science%29">https://en.wikipedia.org/wiki/Recursion_%28computer_science%29</a>
</li>

<li>Coconut: Simple, elegant, Pythonic functional programming<br />
<a href="http://coconut-lang.org/">http://coconut-lang.org/</a>
</li>

<li>coconut 1.1.0 (Python package index)<br />
<a href="https://pypi.python.org/pypi/coconut/1.1.0">https://pypi.python.org/pypi/coconut/1.1.0</a>
</li>

<li>Coconut Tutorial<br />
<a href="http://coconut.readthedocs.io/en/master/HELP.html">http://coconut.readthedocs.io/en/master/HELP.html</a>
</li>

<li>Coconut FAQ<br />
<a href="http://coconut.readthedocs.io/en/master/FAQ.html">http://coconut.readthedocs.io/en/master/FAQ.html</a>
</li>

<li>Coconut Documentation<br />
<a href="http://coconut.readthedocs.io/en/master/DOCS.html">http://coconut.readthedocs.io/en/master/DOCS.html</a>
</li>

<li>Python gains functional programming syntax via Coconut<br />
<a href="https://www.infoworld.com/article/3088058/python-gains-functional-programming-syntax-via-coconut.html">https://www.infoworld.com/article/3088058/python-gains-functional-programming-syntax-via-coconut.html</a>
</li>

<li>Repositář projektu pyparsing<br />
<a href="https://github.com/pyparsing/pyparsing">https://github.com/pyparsing/pyparsing</a>
</li>

<li>Repositář projektu cPyparsing<br />
<a href="https://github.com/evhub/cpyparsing">https://github.com/evhub/cpyparsing</a>
</li>

<li>Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython<br />
<a href="https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/">https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/</a>
</li>

<li>Coconut na Redditu<br />
<a href="https://www.reddit.com/r/Python/comments/4owzu7/coconut_functional_programming_in_python/">https://www.reddit.com/r/Python/comments/4owzu7/coconut_functional_programming_in_python/</a>
</li>

<li>Repositář na GitHubu<br />
<a href="https://github.com/evhub/coconut">https://github.com/evhub/coconut</a>
</li>

<li>patterns<br />
<a href="https://github.com/Suor/patterns">https://github.com/Suor/patterns</a>
</li>

<li>Source-to-source compiler<br />
<a href="https://en.wikipedia.org/wiki/Source-to-source_compiler">https://en.wikipedia.org/wiki/Source-to-source_compiler</a>
</li>

<li>The Lua VM, on the Web<br />
<a href="https://kripken.github.io/lua.vm.js/lua.vm.js.html">https://kripken.github.io/lua.vm.js/lua.vm.js.html</a>
</li>

<li>Lua.vm.js REPL<br />
<a href="https://kripken.github.io/lua.vm.js/repl.html">https://kripken.github.io/lua.vm.js/repl.html</a>
</li>

<li>lua2js<br />
<a href="https://www.npmjs.com/package/lua2js">https://www.npmjs.com/package/lua2js</a>
</li>

<li>Wisp na GitHubu<br />
<a href="https://github.com/Gozala/wisp">https://github.com/Gozala/wisp</a>
</li>

<li>Wisp playground<br />
<a href="http://www.jeditoolkit.com/try-wisp/">http://www.jeditoolkit.com/try-wisp/</a>
</li>

<li>REPL v prohlížeči<br />
<a href="http://www.jeditoolkit.com/interactivate-wisp/">http://www.jeditoolkit.com/interactivate-wisp/</a>
</li>

<li>Minification (programming)<br />
<a href="https://en.wikipedia.org/wiki/Minification_(programming)">https://en.wikipedia.org/wiki/Minification_(programming)</a>
</li>

<li>JavaScript is Assembly Language for the Web: Sematic Markup is Dead! Clean vs. Machine-coded HTML<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx</a>
</li>

<li>JavaScript is Web Assembly Language and that's OK.<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx">http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx</a>
</li>

<li>Dart<br />
<a href="https://www.dartlang.org/">https://www.dartlang.org/</a>
</li>

<li>CoffeeScript<br />
<a href="http://coffeescript.org/">http://coffeescript.org/</a>
</li>

<li>TypeScript<br />
<a href="http://www.typescriptlang.org/">http://www.typescriptlang.org/</a>
</li>

<li>JavaScript: The Web Assembly Language?<br />
<a href="http://www.informit.com/articles/article.aspx?p=1856657">http://www.informit.com/articles/article.aspx?p=1856657</a>
</li>

<li>asm.js<br />
<a href="http://asmjs.org/">http://asmjs.org/</a>
</li>

<li>List of languages that compile to JS<br />
<a href="https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS">https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS</a>
</li>

<li>Permutation<br />
<a href="https://en.wikipedia.org/wiki/Permutation">https://en.wikipedia.org/wiki/Permutation</a>
</li>

<li>Pattern matching (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Pattern_matching">https://en.wikipedia.org/wiki/Pattern_matching</a>
</li>

<li>Programovací jazyky používané v SSSR (část 2 &ndash; SNOBOL)<br />
<a href="https://www.root.cz/clanky/programovaci-jazyky-pouzivane-v-sssr-cast-2-ndash-snobol/">https://www.root.cz/clanky/programovaci-jazyky-pouzivane-v-sssr-cast-2-ndash-snobol/</a>
</li>

<li>Pattern matching v&nbsp;Rustu<br />
<a href="https://www.root.cz/clanky/rust-funkce-lambda-vyrazy-a-rozhodovaci-konstrukce-match/#k13">https://www.root.cz/clanky/rust-funkce-lambda-vyrazy-a-rozhodovaci-konstrukce-match/#k13</a>
</li>

<li>SNOBOL<br />
<a href="https://en.wikipedia.org/wiki/SNOBOL">https://en.wikipedia.org/wiki/SNOBOL</a>
</li>

<li>Podpůrný plugin pro Vim<br />
<a href="https://github.com/manicmaniac/coconut.vim">https://github.com/manicmaniac/coconut.vim</a>
</li>

<li>Příkaz (programování)<br />
<a href="https://cs.wikipedia.org/wiki/P%C5%99%C3%ADkaz_%28programov%C3%A1n%C3%AD%29">https://cs.wikipedia.org/wiki/P%C5%99%C3%ADkaz_%28programov%C3%A1n%C3%AD%29</a>
</li>

<li>Threading Macros Guide<br />
<a href="https://clojure.org/guides/threading_macros">https://clojure.org/guides/threading_macros</a>
</li>

<li>Nejdůležitější novinka v Pythonu 3.10: strukturální pattern matching<br />
<a href="https://www.root.cz/clanky/nejdulezitejsi-novinka-v-pythonu-3-10-strukturalni-pattern-matching/">https://www.root.cz/clanky/nejdulezitejsi-novinka-v-pythonu-3-10-strukturalni-pattern-matching/</a>
</li>

<li>Rosetta Code: Roman_numerals<br />
<a href="http://rosettacode.org/wiki/Roman_numerals">http://rosettacode.org/wiki/Roman_numerals</a>
</li>

<li>Category:SNOBOL4<br />
<a href="http://rosettacode.org/wiki/Category:SNOBOL4">http://rosettacode.org/wiki/Category:SNOBOL4</a>
</li>

<li>An introduction to SNOBOL by James Ford<br />
<a href="http://drofmij.awardspace.com/snobol/">http://drofmij.awardspace.com/snobol/</a>
</li>

<li>AWK<br />
<a href="https://en.wikipedia.org/wiki/AWK">https://en.wikipedia.org/wiki/AWK</a>
</li>

<li>Get started with GAWK: AWK language fundamentals<br />
<a href="https://web.archive.org/web/20150427143548/https://www6.software.ibm.com/developerworks/education/au-gawk/au-gawk-a4.pdf">https://web.archive.org/web/20150427143548/https://www6.software.ibm.com/developerworks/education/au-gawk/au-gawk-a4.pdf</a>
</li>

<li>Pattern Matching<br />
<a href="https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/pattern-matching">https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/pattern-matching</a>
</li>

<li>Parsing expression grammar<br />
<a href="https://en.wikipedia.org/wiki/Parsing_expression_grammar">https://en.wikipedia.org/wiki/Parsing_expression_grammar</a>
</li>

<li>Abort, Retry, Fail?<br />
<a href="https://en.wikipedia.org/wiki/Abort,_Retry,_Fail%3F">https://en.wikipedia.org/wiki/Abort,_Retry,_Fail%3F</a>
</li>

<li>SNOBOL4 and SPITBOL Information<br />
<a href="http://www.snobol4.com/">http://www.snobol4.com/</a>
</li>

<li>Vanilla Snobol4 Reference Manual<br />
<a href="http://burks.bton.ac.uk/burks/language/snobol/catspaw/manual/contents.htm">http://burks.bton.ac.uk/burks/language/snobol/catspaw/manual/contents.htm</a>
</li>

<li>SNOBOL4.ORG &ndash; SNOBOL4 Resources<br />
<a href="http://www.snobol4.org/">http://www.snobol4.org/</a>
</li>

<li>Snobol3 &ndash; Snobol 3 Interpreter Implemented in Java<br />
<a href="http://serl.cs.colorado.edu/~dennis/software/s3.html">http://serl.cs.colorado.edu/~dennis/software/s3.html</a>
</li>

<li>Exploring Beautiful Languages &ndash; A guick look at SNOBOL<br />
<a href="http://langexplr.blogspot.com/2007/12/quick-look-at-snobol.html">http://langexplr.blogspot.com/2007/12/quick-look-at-snobol.html</a>
</li>

<li>Rekurze a pattern matching v&nbsp;programovacím jazyku F#<br />
<a href="https://www.root.cz/clanky/rekurze-a-pattern-matching-v-programovacim-jazyku-f/">https://www.root.cz/clanky/rekurze-a-pattern-matching-v-programovacim-jazyku-f/</a>
</li>

<li>Programovací jazyk OCaml: rekurze, pattern matching a práce se seznamy<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-ocaml-rekurze-pattern-matching-a-prace-se-seznamy/">https://www.root.cz/clanky/programovaci-jazyk-ocaml-rekurze-pattern-matching-a-prace-se-seznamy/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

