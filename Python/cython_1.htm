<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Praktické použití nástroje Cython při překladu Pythonu do nativního kódu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Praktické použití nástroje Cython při překladu Pythonu do nativního kódu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Praktické použití nástroje Cython při překladu Pythonu do nativního kódu</a></p>
<p><a href="#k02">*** 2. Postupné úpravy jednoduché funkce pro součet dvou celých čísel</a></p>
<p><a href="#k03">*** 3. Soubor Makefile pro řízení překladu funkcí z&nbsp;Pythonu do nativního kódu</a></p>
<p><a href="#k04">*** 4. Přímý překlad Pythonovské funkce bez přidání typových informací</a></p>
<p><a href="#k05">*** 5. Proč Cython používá <strong>PyObject *</strong> aneb problamatika dynamického typového systému</a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Praktické použití nástroje Cython při překladu Pythonu do nativního kódu</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Postupné úpravy jednoduché funkce pro součet dvou celých čísel</h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. Soubor Makefile pro řízení překladu funkcí z&nbsp;Pythonu do nativního kódu</h2>

<pre>
PYTHON=python3
COMPILER=gcc
LINKER=gcc
&nbsp;
CFLAGS=-O9
&nbsp;
INCLUDE_DIR:=$(shell $(PYTHON) -c "from distutils import sysconfig; print(sysconfig.get_python_inc())")
LIBRARY_DIR:=$(shell $(PYTHON) -c "from distutils import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
PYTHON_LIB:=$(shell $(PYTHON) -c "from distutils import sysconfig; print(sysconfig.get_config_var('LIBRARY')[3:-2])")
SYSLIBS:=$(shell $(PYTHON) -c "from distutils import sysconfig; print(sysconfig.get_config_var('SYSLIBS'))")
&nbsp;
&nbsp;
all:    add_numbers_1 \
        add_numbers_2 \
        add_numbers_3 \
        add_numbers_4 \
        add_numbers_5
&nbsp;
&nbsp;
.PHONY: clean
&nbsp;
<i># Výsledky překladu do C chceme ponechat i po doběhnutí Make</i>
.PRECIOUS: %.c
&nbsp;
clean:
        rm -f *.o \
        rm -f *.c \
        rm -f add_numbers_[1-5]
&nbsp;
&nbsp;
<i># Pravidlo pro slinkovani vsech objektovych souboru a vytvoreni</i>
<i># vysledne spustitelne aplikace.</i>
%:      %.o
        $(LINKER) -o $@ -L$(LIBRARY_DIR) -l$(PYTHON_LIB) $(SYSLIBS) $&lt;
&nbsp;
&nbsp;
<i># Pravidlo pro preklad kazdeho zdrojoveho souboru v C do prislusneho</i>
<i># objektoveho souboru.</i>
%.o:    %.c
        $(COMPILER) $(CFLAGS) -I$(INCLUDE_DIR) -c $&lt; -o $@
&nbsp;
&nbsp;
<i># Pravidlo pro preklad kazdeho zdrojoveho souboru v Pythonu nebo Cythonu</i>
<i># do prislusneho souboru C</i>
%.c:    %.py
        cython --embed $&lt;
&nbsp;
%.c:    %.pyx
        cython --embed $&lt;
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Přímý překlad Pythonovské funkce bez přidání typových informací</h2>

<pre>
def <strong>add_two_numbers</strong>(x, y):
    return x + y
&nbsp;
&nbsp;
z = add_two_numbers(123, 456)
print(z)
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Proč Cython používá <strong>PyObject *</strong> aneb problamatika dynamického typového systému</h2>

<pre>
import dis
&nbsp;
def <strong>add_two_numbers</strong>(x, y):
    return x + y
&nbsp;
&nbsp;
class <strong>Foo</strong>:
    def <strong>__init__</strong>(self, value):
        self._value = value
&nbsp;
    def <strong>__add__</strong>(self, other):
        return Foo(self._value + other._value)
&nbsp;
    def <strong>__str__</strong>(self):
        return "*" * self._value
&nbsp;
&nbsp;
def <strong>test_adding</strong>():
    f1 = Foo(1)
    f2 = Foo(2)
&nbsp;
    print(add_two_numbers(123, 456))
    print(add_two_numbers("foo", "bar"))
    print(add_two_numbers([1,2,3], [4,5,6]))
    print(add_two_numbers((1,2,3), (4,5,6)))
    print(add_two_numbers(f1, f2))
&nbsp;
&nbsp;
test_adding()
dis.dis(add_two_numbers)
dis.dis(test_adding)
</pre>

<pre>
579
foobar
[1, 2, 3, 4, 5, 6]
(1, 2, 3, 4, 5, 6)
***
</pre>

<pre>
  4           0 LOAD_FAST                0 (x)
              3 LOAD_FAST                1 (y)
              6 BINARY_ADD
              7 RETURN_VALUE
</pre>

<pre>
 22          24 LOAD_GLOBAL              1 (add_two_numbers)
             27 LOAD_CONST               3 (123)
             30 LOAD_CONST               4 (456)
             33 CALL_FUNCTION            2
             36 PRINT_ITEM
             37 PRINT_NEWLINE
</pre>

<pre>
  4           0 LOAD_FAST                0 (x)
              3 LOAD_FAST                1 (y)
              6 BINARY_ADD
              7 RETURN_VALUE
&nbsp;
 19           0 LOAD_GLOBAL              0 (Foo)
              3 LOAD_CONST               1 (1)
              6 CALL_FUNCTION            1
              9 STORE_FAST               0 (f1)
&nbsp;
 20          12 LOAD_GLOBAL              0 (Foo)
             15 LOAD_CONST               2 (2)
             18 CALL_FUNCTION            1
             21 STORE_FAST               1 (f2)
&nbsp;
 22          24 LOAD_GLOBAL              1 (add_two_numbers)
             27 LOAD_CONST               3 (123)
             30 LOAD_CONST               4 (456)
             33 CALL_FUNCTION            2
             36 PRINT_ITEM
             37 PRINT_NEWLINE
&nbsp;
 23          38 LOAD_GLOBAL              1 (add_two_numbers)
             41 LOAD_CONST               5 ('foo')
             44 LOAD_CONST               6 ('bar')
             47 CALL_FUNCTION            2
             50 PRINT_ITEM
             51 PRINT_NEWLINE
&nbsp;
 24          52 LOAD_GLOBAL              1 (add_two_numbers)
             55 LOAD_CONST               1 (1)
             58 LOAD_CONST               2 (2)
             61 LOAD_CONST               7 (3)
             64 BUILD_LIST               3
             67 LOAD_CONST               8 (4)
             70 LOAD_CONST               9 (5)
             73 LOAD_CONST              10 (6)
             76 BUILD_LIST               3
             79 CALL_FUNCTION            2
             82 PRINT_ITEM
             83 PRINT_NEWLINE
&nbsp;
 25          84 LOAD_GLOBAL              1 (add_two_numbers)
             87 LOAD_CONST              11 ((1, 2, 3))
             90 LOAD_CONST              12 ((4, 5, 6))
             93 CALL_FUNCTION            2
             96 PRINT_ITEM
             97 PRINT_NEWLINE
&nbsp;
 26          98 LOAD_GLOBAL              1 (add_two_numbers)
            101 LOAD_FAST                0 (f1)
            104 LOAD_FAST                1 (f2)
            107 CALL_FUNCTION            2
            110 PRINT_ITEM
            111 PRINT_NEWLINE
&nbsp;
            112 LOAD_CONST               0 (None)
            115 RETURN_VALUE
</pre>

<pre>
 22          24 LOAD_GLOBAL              1 (print)
             27 LOAD_GLOBAL              2 (add_two_numbers)
             30 LOAD_CONST               3 (123)
             33 LOAD_CONST               4 (456)
             36 CALL_FUNCTION            2 (2 positional, 0 keyword pair)
             39 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
             42 POP_TOP
</pre>

<pre>
  4           0 LOAD_FAST                0 (x)
              3 LOAD_FAST                1 (y)
              6 BINARY_ADD
              7 RETURN_VALUE
&nbsp;
 19           0 LOAD_GLOBAL              0 (Foo)
              3 LOAD_CONST               1 (1)
              6 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
              9 STORE_FAST               0 (f1)
&nbsp;
 20          12 LOAD_GLOBAL              0 (Foo)
             15 LOAD_CONST               2 (2)
             18 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
             21 STORE_FAST               1 (f2)
&nbsp;
 22          24 LOAD_GLOBAL              1 (print)
             27 LOAD_GLOBAL              2 (add_two_numbers)
             30 LOAD_CONST               3 (123)
             33 LOAD_CONST               4 (456)
             36 CALL_FUNCTION            2 (2 positional, 0 keyword pair)
             39 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
             42 POP_TOP
&nbsp;
 23          43 LOAD_GLOBAL              1 (print)
             46 LOAD_GLOBAL              2 (add_two_numbers)
             49 LOAD_CONST               5 ('foo')
             52 LOAD_CONST               6 ('bar')
             55 CALL_FUNCTION            2 (2 positional, 0 keyword pair)
             58 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
             61 POP_TOP
&nbsp;
 24          62 LOAD_GLOBAL              1 (print)
             65 LOAD_GLOBAL              2 (add_two_numbers)
             68 LOAD_CONST               1 (1)
             71 LOAD_CONST               2 (2)
             74 LOAD_CONST               7 (3)
             77 BUILD_LIST               3
             80 LOAD_CONST               8 (4)
             83 LOAD_CONST               9 (5)
             86 LOAD_CONST              10 (6)
             89 BUILD_LIST               3
             92 CALL_FUNCTION            2 (2 positional, 0 keyword pair)
             95 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
             98 POP_TOP
&nbsp;
 25          99 LOAD_GLOBAL              1 (print)
            102 LOAD_GLOBAL              2 (add_two_numbers)
            105 LOAD_CONST              11 ((1, 2, 3))
            108 LOAD_CONST              12 ((4, 5, 6))
            111 CALL_FUNCTION            2 (2 positional, 0 keyword pair)
            114 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
            117 POP_TOP
&nbsp;
 26         118 LOAD_GLOBAL              1 (print)
            121 LOAD_GLOBAL              2 (add_two_numbers)
            124 LOAD_FAST                0 (f1)
            127 LOAD_FAST                1 (f2)
            130 CALL_FUNCTION            2 (2 positional, 0 keyword pair)
            133 CALL_FUNCTION            1 (1 positional, 0 keyword pair)
            136 POP_TOP
&nbsp;
            137 LOAD_CONST               0 (None)
            140 RETURN_VALUE
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Použití deklarace <strong>cdef</strong> nabísto <strong>def</strong></h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady, které jsme si v&nbsp;dnešním článku ukázali,
naleznete na adrese <a
href="https://github.com/tisnik/rpython-examples">https://github.com/tisnik/cython-examples</a>.
Následují odkazy na jednotlivé příklady (pro jejich spuštění je nutné mít
nainstalován RPython a jeho závislosti, především tedy překladač céčka):</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Adresa</th></tr>
<tr><td> 1</td><td>add_numbers/Makefile</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/Makefile">https://github.com/tisnik/cython-examples/blob/master/add_numbers/Makefile</a></td></tr>
<tr><td> 2</td><td>add_numbers/add_numbers_1.py</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_1.py">https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_1.py</a></td></tr>
<tr><td> 3</td><td>add_numbers/add_numbers_2.pyx</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_2.pyx">https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_2.pyx</a></td></tr>
<tr><td> 4</td><td>add_numbers/add_numbers_3.pyx</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_3.pyx">https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_3.pyx</a></td></tr>
<tr><td> 5</td><td>add_numbers/add_numbers_4.pyx</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_4.pyx">https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_4.pyx</a></td></tr>
<tr><td> 6</td><td>add_numbers/add_numbers_5.pyx</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_5.pyx">https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_5.pyx</a></td></tr>
<tr><td> 7</td><td>add_numbers/add_numbers_dis.py</td><td><a href="https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_dis.py">https://github.com/tisnik/cython-examples/blob/master/add_numbers/add_numbers_dis.py</a></td></tr>
<tr><td> 8</td><td></td><td><a href="https://github.com/tisnik/cython-examples/blob/master/">https://github.com/tisnik/cython-examples/blob/master/add_numbers/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Overcoming Python's GIL with Cython<br />
<a href="https://lbolla.info/python-threads-cython-gil">https://lbolla.info/python-threads-cython-gil</a>
</li>

<li>GlobalInterpreterLock<br />
<a href="https://wiki.python.org/moin/GlobalInterpreterLock">https://wiki.python.org/moin/GlobalInterpreterLock</a>
</li>

<li>The Magic of RPython<br />
<a href="https://refi64.com/posts/the-magic-of-rpython.html">https://refi64.com/posts/the-magic-of-rpython.html</a>
</li>

<li>RPython: Frequently Asked Questions<br />
<a href="http://rpython.readthedocs.io/en/latest/faq.html">http://rpython.readthedocs.io/en/latest/faq.html</a>
</li>

<li>RPython’s documentation<br />
<a href="http://rpython.readthedocs.io/en/latest/index.html">http://rpython.readthedocs.io/en/latest/index.html</a>
</li>

<li>RPython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PyPy#RPython">https://en.wikipedia.org/wiki/PyPy#RPython</a>
</li>

<li>Getting Started with RPython<br />
<a href="http://rpython.readthedocs.io/en/latest/getting-started.html">http://rpython.readthedocs.io/en/latest/getting-started.html</a>
</li>

<li>PyPy (home page)<br />
<a href="https://pypy.org/">https://pypy.org/</a>
</li>

<li>PyPy (dokumentace)<br />
<a href="http://doc.pypy.org/en/latest/">http://doc.pypy.org/en/latest/</a>
</li>

<li>Cython (home page)<br />
<a href="http://cython.org/">http://cython.org/</a>
</li>

<li>Cython (wiki)<br />
<a href="https://github.com/cython/cython/wiki">https://github.com/cython/cython/wiki</a>
</li>

<li>Cython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Cython">https://en.wikipedia.org/wiki/Cython</a>
</li>

<li>Cython (GitHub)<br />
<a href="https://github.com/cython/cython">https://github.com/cython/cython</a>
</li>

<li>Localized Type Inference of Atomic Types in Python (2005)<br />
<a href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.90.3231">http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.90.3231</a>
</li>

<li>Numba<br />
<a href="http://numba.pydata.org/">http://numba.pydata.org/</a>
</li>

<li>Tutorial: Writing an Interpreter with PyPy, Part 1<br />
<a href="https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html">https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html</a>
</li>

<li>List of numerical analysis software<br />
<a href="https://en.wikipedia.org/wiki/List_of_numerical_analysis_software">https://en.wikipedia.org/wiki/List_of_numerical_analysis_software</a>
</li>

<li>Pixie: lehký skriptovací jazyk s „kouzelnými“ schopnostmi<br />
<a href="https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/">https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/</a>
</li>

<li>Programovací jazyk Pixie: funkce ze základní knihovny a použití FFI<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-pixie-funkce-ze-zakladni-knihovny-a-pouziti-ffi/">https://www.root.cz/clanky/programovaci-jazyk-pixie-funkce-ze-zakladni-knihovny-a-pouziti-ffi/</a>
</li>

<li>The future can be written in RPython now (článek z&nbsp;roku 2010)<br />
<a href="http://blog.christianperone.com/2010/05/the-future-can-be-written-in-rpython-now/">http://blog.christianperone.com/2010/05/the-future-can-be-written-in-rpython-now/</a>
</li>

<li>PyPy is the Future of Python (článek z&nbsp;roku 2010)<br />
<a href="https://alexgaynor.net/2010/may/15/pypy-future-python/">https://alexgaynor.net/2010/may/15/pypy-future-python/</a>
</li>

<li>Portal:Python programming<br />
<a href="https://en.wikipedia.org/wiki/Portal:Python_programming">https://en.wikipedia.org/wiki/Portal:Python_programming</a>
</li>

<li>Python Implementations: Compilers<br />
<a href="https://wiki.python.org/moin/PythonImplementations#Compilers">https://wiki.python.org/moin/PythonImplementations#Compilers</a>
</li>

<li>RPython Frontend and C Wrapper Generator<br />
<a href="http://www.codeforge.com/article/383293">http://www.codeforge.com/article/383293</a>
</li>

<li>PyPy’s Approach to Virtual Machine Construction<br />
<a href="https://bitbucket.org/pypy/extradoc/raw/tip/talk/dls2006/pypy-vm-construction.pdf">https://bitbucket.org/pypy/extradoc/raw/tip/talk/dls2006/pypy-vm-construction.pdf</a>
</li>

<li>Tutorial: Writing an Interpreter with PyPy, Part 1<br />
<a href="https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html">https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html</a>
</li>

<li>EmbeddingCython<br />
<a href="https://github.com/cython/cython/wiki/EmbeddingCython">https://github.com/cython/cython/wiki/EmbeddingCython</a>
</li>

<li>The Basics of Cython<br />
<a href="http://docs.cython.org/en/latest/src/tutorial/cython_tutorial.html">http://docs.cython.org/en/latest/src/tutorial/cython_tutorial.html</a>
</li>

<li>A simple interpreter from scratch in Python (part 1)<br />
<a href="http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1">http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1</a>
</li>

<li>Brainfuck Interpreter in Python<br />
<a href="https://helloacm.com/brainfuck-interpreter-in-python/">https://helloacm.com/brainfuck-interpreter-in-python/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

