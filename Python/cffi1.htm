<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Instalace knihovny <i>cffi</i></a></p>
<p><a href="#k03">*** 3. Funkce psaná v&nbsp;C, která sečte své dva celočíselné parametry</a></p>
<p><a href="#k04">*** 4. Načtení dynamicky linkované knihovny v&nbsp;Pythonním skriptu a zavolání nativní funkce přes <i>ctypes</i></a></p>
<p><a href="#k05">*** 5. Srážka staticky typovaného světa se světem typovaným dynamicky</a></p>
<p><a href="#k06">*** 6. Načtení dynamicky linkované knihovny a zavolání funkce z&nbsp;této knihovny s&nbsp;využitím <i>cffi</i></a></p>
<p><a href="#k07">*** 7. Kontrola datových typů předávaných hodnot knihovnou <i>cffi</i></a></p>
<p><a href="#k08">*** 8. Funkce naprogramovaná v&nbsp;céčku, která vytiskne předaný řetězec</a></p>
<p><a href="#k09">*** 9. Céčkovské řetězce jsou odlišné od Pythonovských řetězců!</a></p>
<p><a href="#k10">*** 10. Předání řetězců do céčkovské funkce realizované přes <i>cffi</i></a></p>
<p><a href="#k11">*** 11. Programovací jazyk Python a céčkovské ukazatele</a></p>
<p><a href="#k12">*** 12. Funkce psaná v&nbsp;C, která prohodí hodnoty parametrů předaných referencí</a></p>
<p><a href="#k13">*** 13. Inicializace ukazatelů na straně Pythonu, předání ukazatelů do volané céčkové funkce</a></p>
<p><a href="#k14">*** 14. Kontrola, zda se s&nbsp;ukazatelem nezachází jako s&nbsp;polem</a></p>
<p><a href="#k15">*** 15. Práce s&nbsp;poli, konverze mezi polem a datovými typy Pythonu</a></p>
<p><a href="#k16">*** 16. Funkce psaná v&nbsp;C, která vyplní pole zvolenou hodnotou</a></p>
<p><a href="#k17">*** 17. Volání funkce pro výplň pole z&nbsp;Pythonu, zobrazení výsledného pole</a></p>
<p><a href="#k18">*** 18. Obsah druhé části článku</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace knihovny <i>cffi</i></h2>

<p></p>

<pre>
$ <strong>pip3 install --user cffi</strong>
&nbsp;
Collecting cffi
  Using cached cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)
Collecting pycparser
  Using cached pycparser-2.21-py2.py3-none-any.whl (118 kB)
Installing collected packages: pycparser, cffi
Successfully installed cffi-1.15.1 pycparser-2.21
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Funkce psaná v&nbsp;C, která sečte své dva celočíselné parametry</h2>

<pre>
extern int <strong>add</strong>(int x, int y)
{
    return x+y;
}
</pre>

<p></p>

<pre>
gcc -Wall -ansi -c -fPIC adder.c -o adder.o
  
gcc -shared -Wl,-soname,libadder.so -o libadder.so adder.o
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Načtení dynamicky linkované knihovny v&nbsp;Pythonním skriptu a zavolání nativní funkce přes <i>ctypes</i></h2>

<pre>
import ctypes


def <strong>load_library</strong>(library_name):
    return ctypes.CDLL(library_name)


adder = load_library("libadder.so")
print(adder.add(1,2))
</pre>

<pre>
export LD_LIBRARY_PATH=.
python3 call_via_ctypes.py
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Srážka staticky typovaného světa se světem typovaným dynamicky</h2>

<pre>
import ctypes


def <strong>load_library</strong>(library_name):
    return ctypes.CDLL(library_name)


adder = load_library("libadder.so")
print(adder.add(1, "foo"))
</pre>

<pre>
$ <strong>python3 call_via_ctypes2.py </strong>
-1157149183
</pre>

<pre>
import ctypes


def <strong>load_library</strong>(library_name):
    return ctypes.CDLL(library_name)


adder = load_library("libadder.so")
print(adder.add(1, 2**100))
</pre>

<pre>
$ python3 call_via_ctypes3.py 
&nbsp;
Traceback (most recent call last):
  File "call_via_ctypes3.py", line 9, in <module>
    print(adder.add(1, 2**100))
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Načtení dynamicky linkované knihovny a zavolání funkce z&nbsp;této knihovny s&nbsp;využitím <i>cffi</i></h2>

<pre>
from cffi import FFI

ffi = FFI()

ffi.cdef("""
    int add(int x, int y);
""")

def <strong>load_library</strong>(library_name):
    return ffi.dlopen(library_name)


adder = load_library("libadder.so")
print(adder.add(1,2))
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Kontrola datových typů předávaných hodnot knihovnou <i>cffi</i></h2>

<pre>
from cffi import FFI
&nbsp;
ffi = FFI()
&nbsp;
ffi.cdef("""
    int add(int x, int y);
""")
&nbsp;
def <strong>load_library</strong>(library_name):
    return ffi.dlopen(library_name)
&nbsp;
&nbsp;
adder = load_library("libadder.so")
print(adder.add(1,"foo"))
</pre>

<pre>
Traceback (most recent call last):
  File "call_via_cffi2.py", line 14, in <module>
    print(adder.add(1,"foo"))
TypeError: an integer is required
</pre>

<pre>
from cffi import FFI
&nbsp;
ffi = FFI()
&nbsp;
ffi.cdef("""
    int add(int x, int y);
""")
&nbsp;
def <strong>load_library</strong>(library_name):
    return ffi.dlopen(library_name)
&nbsp;
&nbsp;
adder = load_library("libadder.so")
print(adder.add(1,2**100))
</pre>

<pre>
Traceback (most recent call last):
  File "call_via_cffi3.py", line 14, in <module>
    print(adder.add(1,2**100))
OverflowError: int too big to convert
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Funkce naprogramovaná v&nbsp;céčku, která vytiskne předaný řetězec</h2>

<pre>
#include &lt;stdio.h&gt;

extern void greet(char *x) {
    printf("Hello %s!\n", x);
}
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Céčkovské řetězce jsou odlišné od Pythonovských řetězců!</h2>

<pre>
import ctypes


def load_library(library_name):
    return ctypes.CDLL(library_name)


greeter = load_library("libgreeter.so")
greeter.greet("world")
</pre>

<pre>
import ctypes


def load_library(library_name):
    return ctypes.CDLL(library_name)


greeter = load_library("libgreeter.so")
greeter.greet(b"world")
</pre>

<pre>
import ctypes


def load_library(library_name):
    return ctypes.CDLL(library_name)


greeter = load_library("libgreeter.so")
greeter.greet("world".encode("utf-8"))
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Předání řetězců do céčkovské funkce realizované přes <i>cffi</i></h2>

<pre>
from cffi import FFI

ffi = FFI()

ffi.cdef("""
    void greet(char *x);
""")

def load_library(library_name):
    return ffi.dlopen(library_name)


greeter = load_library("libgreeter.so")
greeter.greet("world")
</pre>

<pre>
from cffi import FFI

ffi = FFI()

ffi.cdef("""
    void greet(char *x);
""")

def load_library(library_name):
    return ffi.dlopen(library_name)


greeter = load_library("libgreeter.so")
greeter.greet(b"world")
</pre>

<pre>
from cffi import FFI

ffi = FFI()

ffi.cdef("""
    void greet(char *x);
""")

def load_library(library_name):
    return ffi.dlopen(library_name)


greeter = load_library("libgreeter.so")
greeter.greet("world".encode("utf-8"))
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Programovací jazyk Python a céčkovské ukazatele</h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Funkce psaná v&nbsp;C, která prohodí hodnoty parametrů předaných referencí</h2>

<pre>
extern void swap(int *x, int *y)
{
    *x = *x ^ *y;
    *y = *x ^ *y;
    *x = *x ^ *y;
}
</pre>




<p><a name="k13"></a></p>
<h2 id="k13">13. Inicializace ukazatelů na straně Pythonu, předání ukazatelů do volané céčkové funkce</h2>

<pre>
from cffi import FFI

ffi = FFI()

ffi.cdef("""
    void swap(int *x, int *y);
""")

def load_library(library_name):
    return ffi.dlopen(library_name)


swapper = load_library("libswapper.so")

x = ffi.new("int *", 10)
y = ffi.new("int *", 20)

swapper.swap(x, y)
print(x[0])
print(y[0])
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Kontrola, zda se s&nbsp;ukazatelem nezachází jako s&nbsp;polem</h2>

<pre>
from cffi import FFI

ffi = FFI()

ffi.cdef("""
    void swap(int *x, int *y);
""")

def <strong>load_library</strong>(library_name):
    return ffi.dlopen(library_name)


swapper = load_library("libswapper.so")

x = ffi.new("int *", 10)
y = ffi.new("int *", 20)

swapper.swap(x, y)
print(x[1])
print(y[1])
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Práce s&nbsp;poli, konverze mezi polem a datovými typy Pythonu</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Funkce psaná v&nbsp;C, která vyplní pole zvolenou hodnotou</h2>

<p></p>

<pre>
extern void fill(int *array, int size, int value)
{
    int i;
    for (i=0; i&lt;size; i++) {
        array[i] = value;
    }
}
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Volání funkce pro výplň pole z&nbsp;Pythonu, zobrazení výsledného pole</h2>

<pre>
from cffi import FFI
&nbsp;
ffi = FFI()
&nbsp;
ffi.cdef("""
    void fill(int *x, int, int);
""")
&nbsp;
def <strong>load_library</strong>(library_name):
    return ffi.dlopen(library_name)
&nbsp;
&nbsp;
filler = load_library("libfiller.so")
&nbsp;
array = ffi.new("int[10]")
print(list(array))
&nbsp;
filler.fill(array, len(array)//2, 42)
print(list(array))
&nbsp;
filler.fill(array+5, len(array)//2, -1)
print(list(array))
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Obsah druhé části článku</h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny Pythonovské skripty, které jsme si v&nbsp;dnešním  ukázali,
naleznete na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady (pro jejich spuštění je nutné mít
nainstalovánu knihovnu <i>cffi</i>:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>adder/call_via_cffi1.py  </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi1.py</a></td></tr>
<tr><td> 2</td><td>adder/call_via_cffi2.py  </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi2.py</a></td></tr>
<tr><td> 3</td><td>adder/call_via_cffi3.py  </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi3.py</a></td></tr>
<tr><td> 4</td><td>adder/call_via_cffi.sh   </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_cffi.sh</a></td></tr>
<tr><td> 5</td><td>adder/call_via_ctypes1.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes1.py</a></td></tr>
<tr><td> 6</td><td>adder/call_via_ctypes2.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes2.py</a></td></tr>
<tr><td> 7</td><td>adder/call_via_ctypes3.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes3.py</a></td></tr>
<tr><td> 8</td><td>adder/call_via_ctypes.sh </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/call_via_ctypes.sh</a></td></tr>
<tr><td> 9</td><td>adder/clean.sh           </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/clean.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/clean.sh</a></td></tr>
<tr><td>10</td><td>adder/make_library.sh    </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/make_library.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/adder/make_library.sh</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>greeter/call_via_cffi2.py  </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_cffi2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_cffi2.py</a></td></tr>
<tr><td>12</td><td>greeter/call_via_cffi3.py  </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_cffi3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_cffi3.py</a></td></tr>
<tr><td>13</td><td>greeter/call_via_cffi.sh   </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_cffi.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_cffi.sh</a></td></tr>
<tr><td>14</td><td>greeter/call_via_ctypes1.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes1.py</a></td></tr>
<tr><td>15</td><td>greeter/call_via_ctypes2.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes2.py</a></td></tr>
<tr><td>16</td><td>greeter/call_via_ctypes3.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes3.py</a></td></tr>
<tr><td>17</td><td>greeter/call_via_ctypes.sh </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/call_via_ctypes.sh</a></td></tr>
<tr><td>18</td><td>greeter/clean.sh           </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/clean.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/clean.sh</a></td></tr>
<tr><td>19</td><td>greeter/greeter.c          </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/greeter.c">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/greeter.c</a></td></tr>
<tr><td>20</td><td>greeter/make_library.sh    </td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/make_library.sh">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/greeter/make_library.sh</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>22</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>23</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>24</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>25</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>26</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>27</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>28</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>29</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>30</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
<tr><td>30</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/">https://github.com/tisnik/most-popular-python-libs/blob/master/cffi/</a></td></tr>
</table>

swapper/call_via_cffi1.py
swapper/call_via_cffi2.py
swapper/call_via_cffi.sh
swapper/clean.sh
swapper/make_library.sh
swapper/swapper.c

filler/call_via_cffi.py
filler/call_via_cffi.sh
filler/clean.sh
filler/filler.c
filler/make_library.sh



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>CFFI documentation<br />
<a href="https://cffi.readthedocs.io/en/latest/">https://cffi.readthedocs.io/en/latest/</a>
</li>

<li>cffi 1.15.1 na PyPi<br />
<a href="https://pypi.org/project/cffi/">https://pypi.org/project/cffi/</a>
</li>

<li>Python Bindings: Calling C or C++ From Python<br />
<a href="https://realpython.com/python-bindings-overview/">https://realpython.com/python-bindings-overview/</a>
</li>

<li>Interfacing with C/C++ Libraries<br />
<a href="https://docs.python-guide.org/scenarios/clibs/">https://docs.python-guide.org/scenarios/clibs/</a>
</li>

<li>Cython, pybind11, cffi – which tool should you choose?<br />
<a href="http://blog.behnel.de/posts/cython-pybind11-cffi-which-tool-to-choose.html">http://blog.behnel.de/posts/cython-pybind11-cffi-which-tool-to-choose.html</a>
</li>

<li>Python FFI with ctypes and cffi<br />
<a href="https://eli.thegreenplace.net/2013/03/09/python-ffi-with-ctypes-and-cffi">https://eli.thegreenplace.net/2013/03/09/python-ffi-with-ctypes-and-cffi</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

