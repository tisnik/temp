<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Nuitka: pokročilý AOT překladač jazyka Python</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Nuitka: pokročilý AOT překladač jazyka Python</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Na články o AOT překladačích (mypyc a Cython) i o JIT překladačích (Numba) dnes navážeme a celé téma dokončíme. Popíšeme si totiž některé možnosti nabízené AOT překladačem nazvaným Nuitka. Ukážeme si i tvorbu distribučního balíčku a porovnáme Nuitku s dalšími technologiemi.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Nuitka: pokročilý AOT překladač jazyka Python</a></p>
<p><a href="#k02">2. Instalace balíčku Nuitka</a></p>
<p><a href="#k03">3. Kontrola instalace</a></p>
<p><a href="#k04">4. Překlad jednoduchého skriptu typu &bdquo;Hello world&ldquo;</a></p>
<p><a href="#k05">5. Prozkoumání výsledku překladu</a></p>
<p><a href="#k06">6. Překlad a slinkování za účelem přenosu aplikace na jiný počítač</a></p>
<p><a href="#k07">7. Výsledný spustitelný soubor a jeho závislosti</a></p>
<p><a href="#k08">8. Překlad se slinkováním potřebných knihoven do jediného souboru</a></p>
<p><a href="#k09">9. Aplikace využívající knihovnu Tkinter pro grafické uživatelské rozhraní</a></p>
<p><a href="#k10">10. Překlad projektu tak, aby výsledkem byl jediný spustitelný soubor</a></p>
<p><a href="#k11">11. Výsledný spustitelný soubor a jeho závislosti</a></p>
<p><a href="#k12">12. Porovnání kvality překladu pomocí nástroje Nuitka s&nbsp;dalšími technologiemi</a></p>
<p><a href="#k13">13. Porovnávané technologie</a></p>
<p><a href="#k14">14. Zdrojové kódy benchmarků</a></p>
<p><a href="#k15">15. Výsledky benchmarků v&nbsp;tabulkové podobě</a></p>
<p><a href="#k16">16. Vizualizace výsledků benchmarků</a></p>
<p><a href="#k17">17. Porovnání výsledků benchmarků: interpretry</a></p>
<p><a href="#k18">18. Porovnání výsledků benchmarků: překladače</a></p>
<p><a href="#k19">19. Příloha: skript pro vytištění grafů s&nbsp;výsledky benchmarků</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Nuitka: pokročilý AOT překladač jazyka Python</h2>

<p>Na stránkách Roota jsme se již setkali s&nbsp;několika AOT (<i>Ahead of
Time</i>) překladači jazyka Python. Tyto překladače většinou transformují
(transpilují) skript či celý projekt napsaný v&nbsp;Pythonu do jazyka C a poté
ho nechají přeložit překladačem céčka, typicky s&nbsp;povolenými
optimalizacemi. Připomeňme si, že mezi tyto projekty patří <i>Cython</i>
(ostatně před pár dny jsme si ho připomenuli) a <i>mypyc</i> (ovšem částečně i
<i>Numba</i>). Dnes se zaměříme na projekt, který se jmenuje <i>Nuitka</i>.
Opět se jedná o AOT překladač a jeho výhodou je, že v&nbsp;případě potřeby
dokáže celou aplikaci přeložit do jediného spustitelného souboru, který je
přenositelný na další počítače (které ani nemusí obsahovat Python a dokonce
například ani některé knihovny pro GUI atd.).</p>

<img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-1.webp" class="image-1124600" width="198" height="199" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 1: Logo projektu Nuitka.</i></p>

<p>Na závěr si tento projekt porovnáme se všemi ostatními AOT i JIT překladači
Pythonu, a to opět na mém oblíbeném benchmarku založeném na výpočtu
Mandelbrotovy množiny. Zjistíme tak, kdy může být výhodnější použít JIT typu
<i>Numba</i> a kdy AOT překladač.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace balíčku Nuitka</h2>

<p>Balíček Nuitka je, ostatně podobně jako většina užitečných balíčků pro jazyk
Python, dostupná na <a href="https://pypi.org/project/Nuitka/">PyPi</a>, takže
je jeho instalace velmi snadná. Pro jednoduchost použiji nástroj
<strong>pip</strong>, i když lze pochopitelně použít i PDM či další podobné
nástroje:</p>

<pre>
$ <strong>pip3 install nuitka</strong>
</pre>

<p>Průběh instalace (povšimněte si, že Nuitka je relativně malý balíček):</p>

<pre>
Defaulting to user installation because normal site-packages is not writeable
Collecting nuitka
  Downloading Nuitka-2.2.3.tar.gz (3.7 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.7/3.7 MB 4.3 MB/s eta 0:00:00
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Preparing metadata (pyproject.toml) ... done
Requirement already satisfied: ordered-set&gt;=4.1.0 in /home/ptisnovs/.local/lib/python3.11/site-packages (from nuitka) (4.1.0)
Requirement already satisfied: zstandard&gt;=0.15 in /home/ptisnovs/.local/lib/python3.11/site-packages (from nuitka) (0.22.0)
Building wheels for collected packages: nuitka
  Building wheel for nuitka (pyproject.toml) ... done
  Created wheel for nuitka: filename=Nuitka-2.2.3-cp311-cp311-linux_x86_64.whl size=3277344 sha256=dd58819d552c3cfd2e744848cd5a9676b2820a36d3d202560bc7ef0e8f41ac6d
  Stored in directory: /home/ptisnovs/.cache/pip/wheels/d8/48/83/b339d592b2bf8ae0d73c8fe6dd14dca269b691157696c3d7bc
Successfully built nuitka
Installing collected packages: nuitka
Successfully installed nuitka-2.2.3
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Kontrola instalace</h2>

<p>Pro rychlé otestování, zda je balíček nainstalován korektně, postačuje
spustit modul <strong>nuitka</strong>, například s&nbsp;parametrem
<strong>--version</strong>:</p>

<pre>
$ <strong>python -m nuitka --version</strong>
2.2.3
Commercial: None
Python: 3.11.8 (main, Feb  7 2024, 00:00:00) [GCC 13.2.1 20231011 (Red Hat 13.2.1-4)]
Flavor: Fedora Python
Executable: /usr/bin/python
OS: Linux
Arch: x86_64
Distribution: Fedora 38
Version C compiler: /usr/bin/gcc (gcc 13).
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se vypsal i překladač
céčka, který bude interně používán.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Překlad jednoduchého skriptu typu &bdquo;Hello world&ldquo;</h2>

<p>Praktickou část dnešního článku zahájíme triviálním skriptem typu
&bdquo;Hello world&ldquo;, který může v&nbsp;Pythonu vypadat následovně:</p>

<pre>
def <strong>say_hello</strong>():
    print("Hello world!")
&nbsp;
say_hello()
</pre>

<p>Základní způsob překladu tohoto skriptu (tedy vlastně
&bdquo;projektu&ldquo;) do spustitelného nativního kódu se provede takto:</p>

<pre>
$ <strong>python -m nuitka hello.py</strong>
</pre>

<p>Následně proběhne překlad, který bude trvat několik sekund (na starším HW
pravděpodobně i desítek sekund!):</p>

<pre>
Nuitka-Options: Used command line options: hello.py
Nuitka-Options:WARNING: You did not specify to follow or include anything but main program. Check options and make sure that is
Nuitka-Options:WARNING: intended.
Nuitka: Starting Python compilation with Nuitka '2.2.3' on Python '3.11' commercial grade 'not installed'.
Nuitka: Completed Python level compilation and optimization.
Nuitka: Generating source code for C backend compiler.
Nuitka: Running data composer tool for optimal constant value handling.
Nuitka: Running C compilation via Scons.
Nuitka-Scons: Backend C compiler: gcc (gcc 13).
Nuitka-Scons: Backend linking program with 6 files (no progress information available for this stage).
Nuitka-Scons:WARNING: You are not using ccache, re-compilation of identical code will be slower than necessary. Use your OS package
Nuitka-Scons:WARNING: manager to install it.
Nuitka: Keeping build directory 'hello.build'.
Nuitka: Successfully created 'hello.bin'.
</pre>

<p>Výsledkem je spustitelný (nativní) program, který si skutečně spustíme:</p>

<pre>
$ <strong>./hello.bin</strong>
</pre>

<p>Výsledkem by měla být pochopitelně tato zpráva:</p>

<pre>
Hello world!
</pre>

<p><div class="rs-tip-major">Poznámka: překlad skutečně není nejrychlejší, což
si můžeme ověřit například utilitkou <strong>time</strong>:</div></p>

<pre>
$ <strong>python -m nuitka hello.py</strong>
</pre>

<p>Výsledky změřené na stroji s&nbsp;procesorem i7-1270P (počet jader nehraje
zásadní roli) ukazují, že i pro několikařádkový skript si chvíli počkáme:</p>

<pre>
real    0m3.062s
user    0m5.044s
sys     0m0.332s
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Prozkoumání výsledku překladu</h2>

<p>Prozkoumejme ještě blíže soubor <strong>hello.bin</strong>, který byl
vytvořen překladačem Nuitka. Nejprve si ověříme, že se skutečně jedná o
spustitelný soubor s&nbsp;nativním kódem:</p>

<pre>
$ <strong>file hello.bin</strong>
&nbsp;
hello.bin: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=96c80b076b56dbdf3da519fdbc564294288a6b8d, for GNU/Linux 3.2.0, stripped
</pre>

<p>Velikost tohoto souboru není na dnešní poměry nijak závratná (i když
například FASM přeloží sémanticky stejný program do 231 bajtů):</p>

<pre>
$ <strong>ls -l hello.bin</strong>
&nbsp;
-rwxr-xr-x. 1 ptisnovs ptisnovs 251216 May 20 13:46 hello.bin
</pre>

<p>Ovšem velikost spustitelného souboru není zdaleka vše, protože ještě záleží,
jaké knihovny se musí načíst v&nbsp;průběhu inicializace. Takže si zjistěme, o
jaké knihovny se jedná:</p>

<pre>
$ <strong>ldd hello.bin</strong>
</pre>

<p>Seznam dynamicky linkovaných knihoven:</p>

<pre>
        linux-vdso.so.1 (0x00007ffe87df4000)
        libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f763cafb000)
        libpython3.11.so.1.0 =&gt; /lib64/libpython3.11.so.1.0 (0x00007f763c400000)
        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f763c222000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f763cbf2000)
</pre>

<p>Zde již není vše tak růžové, jak by se mohlo zdát, protože je zapotřebí celá runtime knihovna <strong>libpython3.11.so</strong>, a ta již objemná je:</p>

<pre>
$ ls -lh /lib64/libpython3.11.so.1.0
&nbsp;
-rwxr-xr-x. 1 root root 5.2M Feb  7 01:00 /lib64/libpython3.11.so.1.0
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Překlad a slinkování za účelem přenosu aplikace na jiný počítač</h2>

<p>Překladač Nuitka dokáže překlad provést i takovým způsobem, že se vytvoří
adresář se všemi potřebnými soubory, které lze v&nbsp;případě potřeby následně
přenést na jiný počítač, na němž ani nemusí být nainstalován Python &ndash;
takže lze Nuitku použít i pro tvorbu instalačních balíčků. Dokonce existuje
několik způsobů, jak takový překlad provést. Ukažme si nejprve použití
přepínače <strong>--standalone</strong>:</p>

<pre>
$ <strong>python -m nuitka --standalone hello.py</strong>
</pre>

<p>Překlad nyní bude trvat poněkud delší dobu:</p>

<pre>
Nuitka-Options: Used command line options: --standalone hello.py
Nuitka: Starting Python compilation with Nuitka '2.2.3' on Python '3.11' commercial grade 'not installed'.
Nuitka: Completed Python level compilation and optimization.
Nuitka: Generating source code for C backend compiler.
Nuitka: Running data composer tool for optimal constant value handling.
Nuitka: Running C compilation via Scons.
Nuitka-Scons: Backend C compiler: gcc (gcc 13).
Nuitka-Scons: Backend linking program with 7 files (no progress information available for this stage).
Nuitka-Scons:WARNING: You are not using ccache, re-compilation of identical code will be slower than necessary. Use your OS package
Nuitka-Scons:WARNING: manager to install it.
Nuitka: Keeping build directory 'hello.build'.
Nuitka: Successfully created 'hello.dist/hello.bin'.
</pre>

<p>Rychlost překladu si můžeme opět ověřit utilitkou <strong>time</strong>.
Povšimněte si, že se skutečně doba překladu (a slinkování) poměrně razantně
zvýšila:</p>

<pre>
real    0m12.592s
user    0m12.609s
sys     0m0.477s
</pre>

<p>Výsledkem nyní ovšem není pouze jeden spustitelný soubor, ale celý adresář
určený pro přenos/instalaci na další počítač:</p>

<pre>
binascii.so
_codecs_cn.so
_codecs_hk.so
_codecs_iso2022.so
_codecs_jp.so
_codecs_kr.so
_codecs_tw.so
_datetime.so
fcntl.so
hello.bin
libpython3.11.so.1.0
math.so
_multibytecodec.so
_pickle.so
_random.so
_sha512.so
_struct.so
_typing.so
unicodedata.so
zlib.so
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Výsledný spustitelný soubor a jeho závislosti</h2>

<p>Spustitelný soubor vzniklý překladem je již mnohem větší:</p>

<pre>
$ <strong>ls -lh hello.bin</strong>
&nbsp;
-rwxr-xr-x. 1 ptisnovs ptisnovs 5.4M May 21 19:23 hello.bin
</pre>

<p>Nicméně stále je vyžadována knihovna <strong>libpython3.11.so</strong>,
tentokrát ovšem načítaná nikoli ze systémové cesty, ale z&nbsp;místa, kde byl
vytvořen adresář s&nbsp;instalačními soubory:</p>

<pre>
$ <strong>ldd hello.bin</strong>
</pre>

<pre>
        linux-vdso.so.1 (0x00007ffdba5e1000)
        libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f8fb1064000)
        libpython3.11.so.1.0 =&gt; /tmp/ramdisk/hello.dist/./libpython3.11.so.1.0 (0x00007f8fb0b02000)
        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f8fb0924000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f8fb115b000)
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Překlad se slinkováním potřebných knihoven do jediného souboru</h2>

<p>Mnohem užitečnější (pro potřeby instalace) je však přepínač
<strong>--onefile</strong>, který provádí operaci odpovídající jeho jménu.
Vytvoří tedy spustitelný soubor, který závisí jen na systémových dynamicky
linkovaných knihovnách, ale nikoli na knihovnách Pythonu:</p>

<pre>
$ <strong>python -m nuitka --onefile hello.py</strong>
</pre>

<p>Opět si počkáme, v&nbsp;mém konkrétním případě cca 17 sekund (to je již
dost):</p>

<pre>
Nuitka-Options: Used command line options: --onefile hello.py
Nuitka: Starting Python compilation with Nuitka '2.2.3' on Python '3.11' commercial grade 'not installed'.
Nuitka: Completed Python level compilation and optimization.
Nuitka: Generating source code for C backend compiler.
Nuitka: Running data composer tool for optimal constant value handling.
Nuitka: Running C compilation via Scons.
Nuitka-Scons: Backend C compiler: gcc (gcc 13).
Nuitka-Scons: Backend linking program with 7 files (no progress information available for this stage).
Nuitka-Scons:WARNING: You are not using ccache, re-compilation of identical code will be slower than necessary. Use your OS package
Nuitka-Scons:WARNING: manager to install it.
Nuitka-Postprocessing: Creating single file from dist folder, this may take a while.
Nuitka-Onefile: Running bootstrap binary compilation via Scons.
Nuitka-Scons: Onefile C compiler: gcc (gcc 13).
Nuitka-Scons: Onefile linking program with 1 files (no progress information available for this stage).
Nuitka-Scons:WARNING: You are not using ccache, re-compilation of identical code will be slower than necessary. Use your OS package
Nuitka-Scons:WARNING: manager to install it.
Nuitka-Onefile: Using compression for onefile payload.
Nuitka-Onefile: Onefile payload compression ratio (28.09%) size 13711475 to 3851813.
Nuitka-Onefile: Keeping onefile build directory 'hello.onefile-build'.
Nuitka: Keeping dist folder 'hello.dist' for inspection, no need to use it.
Nuitka: Keeping build directory 'hello.build'.
Nuitka: Successfully created 'hello.bin'.
</pre>

<p>Čas:</p>

<pre>
real    0m17.945s
user    0m17.655s
sys     0m0.811s
</pre>

<p>Velikost výsledného souboru nyní dosahuje přibližně 4MB:</p>

<pre>
$ <strong>ls -lh hello.bin</strong>
&nbsp;
-rwxr-xr-x. 1 ptisnovs ptisnovs 3.9M May 21 19:32 hello.bin
</pre>

<p>A nyní je program spustitelný a závislý pouze na základních systémových
knihovnách:</p>

<pre>
$ <strong>ldd hello.bin</strong>
&nbsp;
        linux-vdso.so.1 (0x00007ffd1dbe5000)
        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f8a23d29000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f8a23f1d000)
</pre>

<p><div class="rs-tip-major">Poznámka: dosáhli jsme tedy přibližně stejné
funkcionality, kterou nám nabízí například překladače jazyků Go či Rust.
Výsledný spustitelný soubor lze využít v&nbsp;kontejneru atd. atd.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Aplikace využívající knihovnu Tkinter pro grafické uživatelské rozhraní</h2>

<p>V&nbsp;dalším kroku si vyzkoušíme překlad nepatrně složitějšího projektu,
který ale ukáže, jak Nuitka pracuje se závislými knihovnami. Bude se jednat o
projekt založený na knihovně <i>Tkinter</i> a budeme vyžadovat, aby výsledný
spustitelný soubor byl přenositelný i na počítač bez Pythonu, Tk i
Tkinteru.</p>

<img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-2.webp" class="image-1124601" width="430" height="468" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 2: Takto vypadá okno po spuštění našeho demonstračního projektu.</i></p>

<p>Zdrojový kód našeho projektu (či spíše &bdquo;projektu&ldquo;) vypadá následovně:</p>

<pre>
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
WIDTH = 400
HEIGHT = 400
GRID_SIZE = 100
&nbsp;
&nbsp;
def <strong>exit</strong>():
    sys.exit(0)
&nbsp;
&nbsp;
def <strong>basic_canvas</strong>(root, width, height, grid_size):
    canvas = tkinter.Canvas(root, width=width, height=height, background="#ccffcc")
    canvas.pack()
&nbsp;
    draw_grid(canvas, width, height, grid_size)
    return canvas
&nbsp;
&nbsp;
def <strong>draw_grid</strong>(canvas, width, height, grid_size):
    for x in range(0, width, grid_size):
        canvas.create_line(x, 0, x, height, dash=7, fill="gray")
    for y in range(0, height, grid_size):
        canvas.create_line(0, y, width, y, dash=7, fill="gray")
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
canvas = basic_canvas(root, WIDTH, HEIGHT, GRID_SIZE)
&nbsp;
canvas.create_line(0, 0, 100, 100, fill="red", width=2, dash=8)
&nbsp;
canvas.create_arc(
    100, 1, 200, 100, outline="blue", start=45, extent=180, style=tkinter.ARC, width=2
)
&nbsp;
canvas.create_oval(200, 1, 300, 100)
&nbsp;
canvas.create_oval(325, 25, 375, 75, fill="#a0a0ff")
&nbsp;
canvas.create_rectangle(50, 125, 150, 175, fill="#a0a0ff")
&nbsp;
canvas.create_text(300, 150, text="Hello world!", font="Helvetica 20")
&nbsp;
canvas.create_polygon(50, 225, 200, 300, 50, 375, fill="#80ff80")
&nbsp;
canvas.create_polygon(
    250, 225, 400, 300, 250, 375, fill="black", outline="red", width="5"
)
&nbsp;
root.mainloop()
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Překlad projektu tak, aby výsledkem byl jediný spustitelný soubor</h2>

<p>Pokusme se nyní <a href="#k09">výše uvedený</a> projekt přeložit takovým
způsobem, aby výsledkem byl jediný spustitelný (a přenositelný i
instalovatelný) soubor, který nebude vyžadovat další nesystémové knihovny. Opět
použijeme přepínač <strong>--onefile</strong>, který již známe:</p>

<pre>
$ <strong>python -m nuitka --onefile objects_on_canvas.py</strong>
</pre>

<p>Nyní ovšem překlad skončí s&nbsp;varováním, že knihovna <i>Tkinter</i> (ta
se stará o grafické uživatelské rozhraní, včetně zpracování událostí atd.)
závisí na ekosystému jazyka TCL a aby byl do výsledku zahrnut i tento jazyk,
musíme použít ještě jednu volbu <strong>--enable-plugin=tk-inter</strong>:</p>

<pre>
Nuitka-Options: Used command line options: --onefile objects_on_canvas.py
Nuitka: Starting Python compilation with Nuitka '2.2.3' on Python '3.11' commercial grade 'not installed'.
Nuitka-Plugins:WARNING: Use '--enable-plugin=tk-inter' for: Tkinter needs TCL included.
</pre>

<p>Proto tedy navrhovanou volbu použijeme:</p>

<pre>
$ <strong>python -m nuitka --onefile --enable-plugin=tk-inter objects_on_canvas.py</strong>
</pre>

<p>Průběh překladu (nyní si skutečně musíme počkat delší dobu):</p>

<pre>
Nuitka-Options: Used command line options: --onefile --enable-plugin=tk-inter objects_on_canvas.py
Nuitka: Starting Python compilation with Nuitka '2.2.3' on Python '3.11' commercial grade 'not installed'.
Nuitka-Plugins:anti-bloat: Not including '_bisect' automatically in order to avoid bloat, but this may cause: may slow down by using
Nuitka-Plugins:anti-bloat: fallback implementation.
Nuitka-Plugins:anti-bloat: Not including 'socket' automatically in order to avoid bloat, but this may cause: can break calls of
Nuitka-Plugins:anti-bloat: 'email.utils.make_msgid()'.
Nuitka: Completed Python level compilation and optimization.
Nuitka: Generating source code for C backend compiler.
Nuitka: Running data composer tool for optimal constant value handling.
Nuitka: Running C compilation via Scons.
Nuitka-Scons: Backend C compiler: gcc (gcc 13).
Nuitka-Scons: Backend linking program with 8 files (no progress information available for this stage).
Nuitka-Scons:WARNING: You are not using ccache, re-compilation of identical code will be slower than necessary. Use your OS package
Nuitka-Scons:WARNING: manager to install it.
Nuitka-Plugins:tk-inter: Included 85 data files due to Tk needed for tkinter usage.
Nuitka-Plugins:tk-inter: Included 222 data files due to Tcl needed for tkinter usage.
Nuitka-Postprocessing: Creating single file from dist folder, this may take a while.
Nuitka-Onefile: Running bootstrap binary compilation via Scons.
Nuitka-Scons: Onefile C compiler: gcc (gcc 13).
Nuitka-Scons: Onefile linking program with 1 files (no progress information available for this stage).
Nuitka-Scons:WARNING: You are not using ccache, re-compilation of identical code will be slower than necessary. Use your OS package
Nuitka-Scons:WARNING: manager to install it.
Nuitka-Onefile: Using compression for onefile payload.
Nuitka-Onefile: Onefile payload compression ratio (30.61%) size 36614803 to 11208588.
Nuitka-Onefile: Keeping onefile build directory 'objects_on_canvas.onefile-build'.
Nuitka: Keeping dist folder 'objects_on_canvas.dist' for inspection, no need to use it.
Nuitka: Keeping build directory 'objects_on_canvas.build'.
Nuitka: Successfully created 'objects_on_canvas.bin'.
</pre>

<p><div class="rs-tip-major">Poznámka: čas překladu nyní dosahuje už skoro půl
minuty:</div></p>

<pre>
real    0m27.803s
user    0m27.476s
sys     0m1.111s
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Výsledný spustitelný soubor a jeho závislosti</h2>

<p>Opět se podívejme na to, jaké knihovny jsou nutné pro spuštění aplikace
s&nbsp;grafickým uživatelským rozhraním. Nyní se jedná pouze o základní
systémové knihovny, protože všechny ostatní knihovny jsou součástí výsledného
&bdquo;distribučního souboru&ldquo;:</p>

<pre>
$ <strong>ldd objects_on_canvas.bin</strong>
        linux-vdso.so.1 (0x00007ffd20b98000)
        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f0472b3a000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f0472d2e000)
</pre>

<p>Zajímat nás bude taktéž celková velikost výsledného souboru vytvořeného
nástrojem Nuitka:</p>

<pre>
$ <strong>ls -la objects_on_canvas.bin</strong>
</pre>

<p>Jedná se o cca 11MB velký soubor:</p>

<pre>
rwxr-xr-x. 1 ptisnovs ptisnovs 11M May 21 19:45 objects_on_canvas.bin
</pre>

<p><div class="rs-tip-major">Poznámka: 11 MB sice není málo, ale musíme si
uvědomit, že aplikace již nevyžaduje žádné další nestandardní knihovny i to, že
podobně koncipované technologie (Go, Rust, CC se statickým slinkováním)
produkují podobně velké soubory nebo i soubory mnohem větší &ndash; to je daň,
kterou v&nbsp;dnešním IT platíme za rozpolcenost standardů a systémů.</div></p>

<p>Mimochodem, aplikace používá tyto slinkované knihovny:</p>

<pre>
libb2.so.1
libbrotlicommon.so.1
libbrotlidec.so.1
libbz2.so.1
libcrypto.so.3
libfontconfig.so.1
libfreetype.so.6
libgcc_s.so.1
libglib-2.0.so.0
libgomp.so.1
libgraphite2.so.3
libharfbuzz.so.0
liblzma.so.5
libmpdec.so.3
libpcre2-8.so.0
libpng16.so.16
libpython3.11.so.1.0
libtcl8.6.so
libtk8.6.so
libX11.so.6
libXau.so.6
libxcb.so.1
libXft.so.2
libxml2.so.2
libXrender.so.1
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Porovnání kvality překladu pomocí nástroje Nuitka s&nbsp;dalšími technologiemi</h2>

<p>Ve druhé části dnešního článku si porovnáme kvalitu překladu nástrojem
Nuitka s&nbsp;dalšími technologiemi, které jsme si již popsali. Konkrétně
budeme měřit dobu výpočtu Mandelbrotovy množiny pro postupně se zvyšující
rozlišení výsledného obrázku. Připomeňme si, že tento výpočet obsahuje vnořené
smyčky a podmíněné bloky, pracuje s&nbsp;poli (ty jsou simulovány seznamem či
n-ticí) a výpočty jsou prováděny s&nbsp;typem <i>float</i>. Jedná se tedy o
program, na kterém se mohou optimalizační algoritmy dobře
&bdquo;vyřádit&ldquo;.</p>

<img src="https://i.iinfo.cz/images/327/mypyc-1.webp" class="image-1110093" width="400" height="400" alt="&#160;" title="Autor: Pavel Tisnovsky, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 3: Výsledek benchmarků by měl být totožný s&nbsp;tímto obrázkem.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Porovnávané technologie</h2>

<p>V&nbsp;benchmarcích budeme porovnávat tyto technologie:</p>

<ul>
<li>Výpočet realizovaný céčkovským kódem
    <ul>
        <li>Bez optimalizací (<strong>-O0</strong>)</li>
        <li>S&nbsp;optimalizacemi (<strong>-Ofast</strong>)</li>
    </ul>
</li>
<li>Výpočet realizovaný standardním interpretrem Pythonu
    <ul>
        <li>Python 3.8</li>
        <li>Python 3.9</li>
        <li>Python 3.10</li>
        <li>Python 3.11 (zde byly provedeny interní optimalizace)</li>
        <li>Python 3.12 (teoreticky by měl být nejrychlejší)</li>
    </ul>
<li>Výpočet realizovaný kódem po AOT překladu pomocí <strong>mypyc</strong>
    <ul>
        <li>Bez typových informací</li>
        <li>S&nbsp;typovými informacemi</li>
    </ul>
</li>
<li>Výpočet realizovaný AOT překladačem <strong>Nuitka</strong></li>
<li>Výpočet realizovaný AOT překladačem <strong>CPython</strong>
    <ul>
        <li>Základní varianta (v&nbsp;podstatě původní Pythonovský kód)</li>
        <li>S&nbsp;typovými informacemi</li>
        <li>S&nbsp;optimalizacemi + použitím <strong>nogil</strong></li>
    </ul>
</li>
<li>Výpočet realizovaný JIT překladačem <strong>Numba</strong>
    <ul>
        <li>Základní varianta (v&nbsp;podstatě původní Pythonovský kód)</li>
        <li>S&nbsp;uvedením dekorátoru <strong>@jit</strong></li>
        <li>S&nbsp;optimalizacemi + použitím nativní funkce <strong>print</strong></li>
    </ul>
</li>
</ul>



<p><a name="k14"></a></p>
<h2 id="k14">14. Zdrojové kódy benchmarků</h2>

<table>
<tr><th>#</th><th>Benchmark</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td>1</td><td>mandelbrot-v1</td><td>benchmark, v&nbsp;němž se nepoužívají anotace projektu Numba (čistý CPython)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v1/">https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v1/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>2</td><td>mandelbrot-v2</td><td>použití anotace <strong>@jit</strong> (Numba) ve funkci, v&nbsp;níž se provádí mnoho výpočtů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v2/">https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v2/</a></td></tr>
<tr><td>3</td><td>mandelbrot-v3</td><td>volání zjednodušených variant funkce <strong>print</strong> (Numba)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v3/">https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v3/</a></td></tr>
<tr><td>4</td><td>mandelbrot-v4</td><td>použití anotace <strong>@jit</strong> s&nbsp;parametrem <strong>nopython</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v4/">https://github.com/tisnik/most-popular-python-libs/blob/master/numba/mandelbrot-v4/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>5</td><td>mandelbrot-v5</td><td>varianta benchmarku určená pro překlad s&nbsp;využitím <strong>mypyc</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mypyc/mandelbrot_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mypyc/mandelbrot_5.py</a></td></tr>
<tr><td>6</td><td>mandelbrot-v6</td><td>přidání typových informací využitelných AOT překladačem <strong>mypyc</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mypyc/mandelbrot_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/mypyc/mandelbrot_6.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>mandelbrot.c</td><td>varianta benchmarku naprogramovaná v&nbsp;ANSI C</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/mypyc/mandelbrot.c">https://github.com/tisnik/most-popular-python-libs/blob/master/mypyc/mandelbrot.c</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>8</td><td>mandelbrot/v1_python</td><td>benchmark s výpočtem Mandelbrotovy množiny, původní varianta naprogramovaná v čistém Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cython/mandelbrot/v1_python">https://github.com/tisnik/most-popular-python-libs/blob/master/cython/mandelbrot/v1_python</a></td></tr>
<tr><td>9</td><td>mandelbrot/v2_cython</td><td>přidání typových informací do funkce calc_mandelbrot, původní syntaxe Cythonu/Pyrexu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cython/mandelbrot/v2_cython">https://github.com/tisnik/most-popular-python-libs/blob/master/cython/mandelbrot/v2_cython</a></td></tr>
<tr><td>10</td><td>mandelbrot/v2_python</td><td>přidání typových informací do funkce calc_mandelbrot, syntaxe kompatibilní s Pythonem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/cython/mandelbrot/v2_python">https://github.com/tisnik/most-popular-python-libs/blob/master/cython/mandelbrot/v2_python</a></td></tr>
</table>



<p><a name="k15"></a></p>
<h2 id="k15">15. Výsledky benchmarků v&nbsp;tabulkové podobě</h2>

<p>V&nbsp;případě, že preferujete studovat výsledky benchmarků v&nbsp;tabulkové
podobě, zde jsou:</p>



<h3>Varianta naprogramovaná v&nbsp;jazyku C bez optimalizací</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.00</td><td>1408</td></tr>
<tr><td>24&times;24</td><td>0.00</td><td>1408</td></tr>
<tr><td>32&times;32</td><td>0.00</td><td>1408</td></tr>
<tr><td>48&times;48</td><td>0.00</td><td>1152</td></tr>
<tr><td>64&times;64</td><td>0.00</td><td>1152</td></tr>
<tr><td>96&times;96</td><td>0.00</td><td>1280</td></tr>
<tr><td>128&times;128</td><td>0.01</td><td>1280</td></tr>
<tr><td>192&times;192</td><td>0.01</td><td>1280</td></tr>
<tr><td>256&times;256</td><td>0.01</td><td>1280</td></tr>
<tr><td>384&times;384</td><td>0.04</td><td>1280</td></tr>
<tr><td>512&times;512</td><td>0.07</td><td>1280</td></tr>
<tr><td>768&times;768</td><td>0.16</td><td>1152</td></tr>
<tr><td>1024&times;1024</td><td>0.27</td><td>1152</td></tr>
<tr><td>1536&times;1536</td><td>0.61</td><td>1152</td></tr>
<tr><td>2048&times;2048</td><td>1.08</td><td>1280</td></tr>
<tr><td>3072&times;3072</td><td>2.45</td><td>1280</td></tr>
<tr><td>4096&times;4096</td><td>4.37</td><td>1152</td></tr>
</table>



<h3>Varianta naprogramovaná v&nbsp;jazyku C s&nbsp;optimalizacemi</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.00</td><td>1152</td></tr>
<tr><td>24&times;24</td><td>0.00</td><td>1408</td></tr>
<tr><td>32&times;32</td><td>0.00</td><td>1408</td></tr>
<tr><td>48&times;48</td><td>0.00</td><td>1408</td></tr>
<tr><td>64&times;64</td><td>0.00</td><td>1280</td></tr>
<tr><td>96&times;96</td><td>0.00</td><td>1152</td></tr>
<tr><td>128&times;128</td><td>0.00</td><td>1152</td></tr>
<tr><td>192&times;192</td><td>0.00</td><td>1408</td></tr>
<tr><td>256&times;256</td><td>0.01</td><td>1280</td></tr>
<tr><td>384&times;384</td><td>0.03</td><td>1280</td></tr>
<tr><td>512&times;512</td><td>0.04</td><td>1152</td></tr>
<tr><td>768&times;768</td><td>0.10</td><td>1152</td></tr>
<tr><td>1024&times;1024</td><td>0.17</td><td>1280</td></tr>
<tr><td>1536&times;1536</td><td>0.38</td><td>1280</td></tr>
<tr><td>2048&times;2048</td><td>0.69</td><td>1280</td></tr>
<tr><td>3072&times;3072</td><td>1.53</td><td>1280</td></tr>
<tr><td>4096&times;4096</td><td>2.73</td><td>1280</td></tr>
</table>



<h3>Základní varianta v&nbsp;Pythonu, použit standardní interpret verze 3.8</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>8320</td></tr>
<tr><td>24&times;24</td><td>0.00</td><td>7296</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>7424</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>7296</td></tr>
<tr><td>64&times;64</td><td>0.03</td><td>7296</td></tr>
<tr><td>96&times;96</td><td>0.05</td><td>7424</td></tr>
<tr><td>128&times;128</td><td>0.08</td><td>7296</td></tr>
<tr><td>192&times;192</td><td>0.18</td><td>7424</td></tr>
<tr><td>256&times;256</td><td>0.33</td><td>7424</td></tr>
<tr><td>384&times;384</td><td>0.74</td><td>7296</td></tr>
<tr><td>512&times;512</td><td>1.32</td><td>7296</td></tr>
<tr><td>768&times;768</td><td>3.01</td><td>7424</td></tr>
<tr><td>1024&times;1024</td><td>6.24</td><td>7296</td></tr>
<tr><td>1536&times;1536</td><td>17.85</td><td>7296</td></tr>
<tr><td>2048&times;2048</td><td>31.51</td><td>7168</td></tr>
<tr><td>3072&times;3072</td><td>71.13</td><td>7296</td></tr>
<tr><td>4096&times;4096</td><td>128.46</td><td>7168</td></tr>
</table>



<h3>Základní varianta v&nbsp;Pythonu, použit standardní interpret verze 3.9</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>8576</td></tr>
<tr><td>24&times;24</td><td>0.00</td><td>7424</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>7424</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>7424</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>7424</td></tr>
<tr><td>96&times;96</td><td>0.04</td><td>7424</td></tr>
<tr><td>128&times;128</td><td>0.08</td><td>7424</td></tr>
<tr><td>192&times;192</td><td>0.17</td><td>7424</td></tr>
<tr><td>256&times;256</td><td>0.31</td><td>7424</td></tr>
<tr><td>384&times;384</td><td>0.69</td><td>7552</td></tr>
<tr><td>512&times;512</td><td>1.24</td><td>7168</td></tr>
<tr><td>768&times;768</td><td>2.83</td><td>7424</td></tr>
<tr><td>1024&times;1024</td><td>5.86</td><td>7424</td></tr>
<tr><td>1536&times;1536</td><td>18.28</td><td>7424</td></tr>
<tr><td>2048&times;2048</td><td>32.98</td><td>7424</td></tr>
<tr><td>3072&times;3072</td><td>71.25</td><td>7424</td></tr>
<tr><td>4096&times;4096</td><td>133.52</td><td>7424</td></tr>
</table>



<h3>Základní varianta v&nbsp;Pythonu, použit standardní interpret verze 3.10</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>8448</td></tr>
<tr><td>24&times;24</td><td>0.00</td><td>7424</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>7552</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>7424</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>7552</td></tr>
<tr><td>96&times;96</td><td>0.05</td><td>7424</td></tr>
<tr><td>128&times;128</td><td>0.08</td><td>7424</td></tr>
<tr><td>192&times;192</td><td>0.19</td><td>7552</td></tr>
<tr><td>256&times;256</td><td>0.33</td><td>7424</td></tr>
<tr><td>384&times;384</td><td>0.76</td><td>7552</td></tr>
<tr><td>512&times;512</td><td>1.36</td><td>7296</td></tr>
<tr><td>768&times;768</td><td>3.12</td><td>7424</td></tr>
<tr><td>1024&times;1024</td><td>6.35</td><td>7424</td></tr>
<tr><td>1536&times;1536</td><td>19.68</td><td>7552</td></tr>
<tr><td>2048&times;2048</td><td>34.05</td><td>7552</td></tr>
<tr><td>3072&times;3072</td><td>77.51</td><td>7552</td></tr>
<tr><td>4096&times;4096</td><td>142.95</td><td>7424</td></tr>
</table>



<h3>Základní varianta v&nbsp;Pythonu, použit standardní interpret verze 3.11</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>10240</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>9472</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>9472</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>9216</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>9472</td></tr>
<tr><td>96&times;96</td><td>0.04</td><td>9472</td></tr>
<tr><td>128&times;128</td><td>0.06</td><td>9472</td></tr>
<tr><td>192&times;192</td><td>0.13</td><td>9472</td></tr>
<tr><td>256&times;256</td><td>0.23</td><td>9344</td></tr>
<tr><td>384&times;384</td><td>0.51</td><td>9344</td></tr>
<tr><td>512&times;512</td><td>0.89</td><td>9472</td></tr>
<tr><td>768&times;768</td><td>2.01</td><td>9472</td></tr>
<tr><td>1024&times;1024</td><td>3.61</td><td>9472</td></tr>
<tr><td>1536&times;1536</td><td>12.80</td><td>9472</td></tr>
<tr><td>2048&times;2048</td><td>22.79</td><td>9472</td></tr>
<tr><td>3072&times;3072</td><td>51.13</td><td>9472</td></tr>
<tr><td>4096&times;4096</td><td>90.92</td><td>9344</td></tr>
</table>



<h3>Základní varianta v&nbsp;Pythonu, použit standardní interpret verze 3.12</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>8960</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>8960</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>9216</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>9088</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>9088</td></tr>
<tr><td>96&times;96</td><td>0.04</td><td>8960</td></tr>
<tr><td>128&times;128</td><td>0.07</td><td>9088</td></tr>
<tr><td>192&times;192</td><td>0.13</td><td>9216</td></tr>
<tr><td>256&times;256</td><td>0.28</td><td>9088</td></tr>
<tr><td>384&times;384</td><td>0.62</td><td>9216</td></tr>
<tr><td>512&times;512</td><td>1.10</td><td>9216</td></tr>
<tr><td>768&times;768</td><td>2.48</td><td>9216</td></tr>
<tr><td>1024&times;1024</td><td>4.38</td><td>9216</td></tr>
<tr><td>1536&times;1536</td><td>13.49</td><td>9088</td></tr>
<tr><td>2048&times;2048</td><td>23.79</td><td>9088</td></tr>
<tr><td>3072&times;3072</td><td>53.36</td><td>9088</td></tr>
<tr><td>4096&times;4096</td><td>94.92</td><td>9088</td></tr>
</table>



<h3>JIT překladač Numba bez dekorátoru <strong>@jit</strong></h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.72</td><td>158292</td></tr>
<tr><td>24&times;24</td><td>0.68</td><td>158752</td></tr>
<tr><td>32&times;32</td><td>0.70</td><td>158656</td></tr>
<tr><td>48&times;48</td><td>0.70</td><td>158704</td></tr>
<tr><td>64&times;64</td><td>0.74</td><td>158644</td></tr>
<tr><td>96&times;96</td><td>0.79</td><td>158428</td></tr>
<tr><td>128&times;128</td><td>1.30</td><td>158424</td></tr>
<tr><td>192&times;192</td><td>1.74</td><td>158664</td></tr>
<tr><td>256&times;256</td><td>2.15</td><td>158532</td></tr>
<tr><td>384&times;384</td><td>3.38</td><td>158552</td></tr>
<tr><td>512&times;512</td><td>4.99</td><td>158792</td></tr>
<tr><td>768&times;768</td><td>9.94</td><td>158160</td></tr>
<tr><td>1024&times;1024</td><td>16.12</td><td>157904</td></tr>
<tr><td>1536&times;1536</td><td>35.90</td><td>158452</td></tr>
<tr><td>2048&times;2048</td><td>61.63</td><td>158504</td></tr>
<tr><td>3072&times;3072</td><td>141.17</td><td>158800</td></tr>
<tr><td>4096&times;4096</td><td>249.37</td><td>158524</td></tr>
</table>



<h3>JIT překladač Numba s&nbsp;použitím jednodušší varianty funkce <strong>print</strong></h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>3.04</td><td>266960</td></tr>
<tr><td>24&times;24</td><td>3.04</td><td>266844</td></tr>
<tr><td>32&times;32</td><td>3.06</td><td>267092</td></tr>
<tr><td>48&times;48</td><td>4.06</td><td>267108</td></tr>
<tr><td>64&times;64</td><td>4.67</td><td>267132</td></tr>
<tr><td>96&times;96</td><td>4.62</td><td>267220</td></tr>
<tr><td>128&times;128</td><td>4.58</td><td>267172</td></tr>
<tr><td>192&times;192</td><td>4.58</td><td>267036</td></tr>
<tr><td>256&times;256</td><td>4.58</td><td>267220</td></tr>
<tr><td>384&times;384</td><td>4.70</td><td>267084</td></tr>
<tr><td>512&times;512</td><td>4.74</td><td>267208</td></tr>
<tr><td>768&times;768</td><td>5.00</td><td>267080</td></tr>
<tr><td>1024&times;1024</td><td>5.31</td><td>266884</td></tr>
<tr><td>1536&times;1536</td><td>6.23</td><td>267228</td></tr>
<tr><td>2048&times;2048</td><td>7.58</td><td>267092</td></tr>
<tr><td>3072&times;3072</td><td>11.51</td><td>267096</td></tr>
<tr><td>4096&times;4096</td><td>17.19</td><td>267184</td></tr>
</table>



<h3>JIT překladač Numba s&nbsp;dekorátorem <strong>@jit(nopython=True)</strong></h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>3.03</td><td>266836</td></tr>
<tr><td>24&times;24</td><td>3.02</td><td>267100</td></tr>
<tr><td>32&times;32</td><td>3.95</td><td>267172</td></tr>
<tr><td>48&times;48</td><td>4.61</td><td>267092</td></tr>
<tr><td>64&times;64</td><td>4.59</td><td>267088</td></tr>
<tr><td>96&times;96</td><td>4.95</td><td>267220</td></tr>
<tr><td>128&times;128</td><td>4.65</td><td>267084</td></tr>
<tr><td>192&times;192</td><td>4.61</td><td>267088</td></tr>
<tr><td>256&times;256</td><td>4.67</td><td>267220</td></tr>
<tr><td>384&times;384</td><td>4.64</td><td>267088</td></tr>
<tr><td>512&times;512</td><td>4.73</td><td>267052</td></tr>
<tr><td>768&times;768</td><td>4.97</td><td>267088</td></tr>
<tr><td>1024&times;1024</td><td>5.29</td><td>267080</td></tr>
<tr><td>1536&times;1536</td><td>6.31</td><td>267216</td></tr>
<tr><td>2048&times;2048</td><td>7.63</td><td>267076</td></tr>
<tr><td>3072&times;3072</td><td>11.43</td><td>267220</td></tr>
<tr><td>4096&times;4096</td><td>16.89</td><td>267104</td></tr>
</table>



<h3>AOT překladač Mypyc, varianta bez typových informací</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>10624</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>9472</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>9472</td></tr>
<tr><td>48&times;48</td><td>0.02</td><td>9472</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>9472</td></tr>
<tr><td>96&times;96</td><td>0.05</td><td>9472</td></tr>
<tr><td>128&times;128</td><td>0.08</td><td>9472</td></tr>
<tr><td>192&times;192</td><td>0.17</td><td>9472</td></tr>
<tr><td>256&times;256</td><td>0.29</td><td>9472</td></tr>
<tr><td>384&times;384</td><td>0.66</td><td>9472</td></tr>
<tr><td>512&times;512</td><td>1.19</td><td>9472</td></tr>
<tr><td>768&times;768</td><td>2.87</td><td>9472</td></tr>
<tr><td>1024&times;1024</td><td>7.27</td><td>9472</td></tr>
<tr><td>1536&times;1536</td><td>16.00</td><td>9472</td></tr>
<tr><td>2048&times;2048</td><td>28.36</td><td>9344</td></tr>
<tr><td>3072&times;3072</td><td>64.32</td><td>9472</td></tr>
<tr><td>4096&times;4096</td><td>116.64</td><td>9472</td></tr>
</table>



<h3>AOT překladač Mypyc, varianta s&nbsp;typovými informacemi</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.02</td><td>10488</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>10356</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>10228</td></tr>
<tr><td>48&times;48</td><td>0.02</td><td>10224</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>10352</td></tr>
<tr><td>96&times;96</td><td>0.04</td><td>10352</td></tr>
<tr><td>128&times;128</td><td>0.07</td><td>10360</td></tr>
<tr><td>192&times;192</td><td>0.13</td><td>10232</td></tr>
<tr><td>256&times;256</td><td>0.23</td><td>10232</td></tr>
<tr><td>384&times;384</td><td>0.50</td><td>10364</td></tr>
<tr><td>512&times;512</td><td>0.91</td><td>10360</td></tr>
<tr><td>768&times;768</td><td>2.11</td><td>10228</td></tr>
<tr><td>1024&times;1024</td><td>3.83</td><td>10228</td></tr>
<tr><td>1536&times;1536</td><td>13.65</td><td>10360</td></tr>
<tr><td>2048&times;2048</td><td>24.07</td><td>10232</td></tr>
<tr><td>3072&times;3072</td><td>55.30</td><td>10356</td></tr>
<tr><td>4096&times;4096</td><td>93.65</td><td>10356</td></tr>
</table>



<h3>AOT překladač Nuitka</h3>

<p><div class="rs-tip-major">Poznámka: stejné výsledky bez i
s&nbsp;optimalizacemi.</div></p>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.02</td><td>11776</td></tr>
<tr><td>24&times;24</td><td>0.02</td><td>11904</td></tr>
<tr><td>32&times;32</td><td>0.02</td><td>11904</td></tr>
<tr><td>48&times;48</td><td>0.02</td><td>11904</td></tr>
<tr><td>64&times;64</td><td>0.03</td><td>12032</td></tr>
<tr><td>96&times;96</td><td>0.04</td><td>11904</td></tr>
<tr><td>128&times;128</td><td>0.07</td><td>11776</td></tr>
<tr><td>192&times;192</td><td>0.12</td><td>11776</td></tr>
<tr><td>256&times;256</td><td>0.21</td><td>11904</td></tr>
<tr><td>384&times;384</td><td>0.48</td><td>12032</td></tr>
<tr><td>512&times;512</td><td>0.81</td><td>11776</td></tr>
<tr><td>768&times;768</td><td>1.87</td><td>11904</td></tr>
<tr><td>1024&times;1024</td><td>3.47</td><td>11904</td></tr>
<tr><td>1536&times;1536</td><td>7.63</td><td>11776</td></tr>
<tr><td>2048&times;2048</td><td>14.03</td><td>11776</td></tr>
<tr><td>3072&times;3072</td><td>31.97</td><td>11904</td></tr>
<tr><td>4096&times;4096</td><td>53.58</td><td>11904</td></tr>
</table>



<h3>AOT překladač Cython, základní varianta</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>9472</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>9472</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>9472</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>9600</td></tr>
<tr><td>64&times;64</td><td>0.02</td><td>9472</td></tr>
<tr><td>96&times;96</td><td>0.05</td><td>9600</td></tr>
<tr><td>128&times;128</td><td>0.07</td><td>9600</td></tr>
<tr><td>192&times;192</td><td>0.14</td><td>9600</td></tr>
<tr><td>256&times;256</td><td>0.27</td><td>9600</td></tr>
<tr><td>384&times;384</td><td>0.59</td><td>9600</td></tr>
<tr><td>512&times;512</td><td>1.06</td><td>9600</td></tr>
<tr><td>768&times;768</td><td>2.38</td><td>9600</td></tr>
<tr><td>1024&times;1024</td><td>4.24</td><td>9472</td></tr>
<tr><td>1536&times;1536</td><td>9.55</td><td>9600</td></tr>
<tr><td>2048&times;2048</td><td>16.62</td><td>9600</td></tr>
<tr><td>3072&times;3072</td><td>39.06</td><td>9472</td></tr>
<tr><td>4096&times;4096</td><td>69.38</td><td>9600</td></tr>
</table>



<h3>AOT překladač Cython, varianta s&nbsp;typovými informacemi</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>9472</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>9216</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>9344</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>9472</td></tr>
<tr><td>64&times;64</td><td>0.01</td><td>9472</td></tr>
<tr><td>96&times;96</td><td>0.01</td><td>9216</td></tr>
<tr><td>128&times;128</td><td>0.02</td><td>9344</td></tr>
<tr><td>192&times;192</td><td>0.02</td><td>9472</td></tr>
<tr><td>256&times;256</td><td>0.04</td><td>9472</td></tr>
<tr><td>384&times;384</td><td>0.09</td><td>9472</td></tr>
<tr><td>512&times;512</td><td>0.14</td><td>9344</td></tr>
<tr><td>768&times;768</td><td>0.32</td><td>9472</td></tr>
<tr><td>1024&times;1024</td><td>0.58</td><td>9472</td></tr>
<tr><td>1536&times;1536</td><td>1.31</td><td>9472</td></tr>
<tr><td>2048&times;2048</td><td>2.34</td><td>9472</td></tr>
<tr><td>3072&times;3072</td><td>5.26</td><td>9472</td></tr>
<tr><td>4096&times;4096</td><td>9.33</td><td>9344</td></tr>
</table>



<h3>AOT překladač Cython, plně optimalizovaná varianta</h3>

<table>
<tr><th>Rozlišení</th><th>Čas [s]</th><th>Paměť [kB]</th></tr>
<tr><td>16&times;16</td><td>0.01</td><td>9600</td></tr>
<tr><td>24&times;24</td><td>0.01</td><td>9856</td></tr>
<tr><td>32&times;32</td><td>0.01</td><td>9728</td></tr>
<tr><td>48&times;48</td><td>0.01</td><td>9856</td></tr>
<tr><td>64&times;64</td><td>0.01</td><td>9600</td></tr>
<tr><td>96&times;96</td><td>0.01</td><td>9600</td></tr>
<tr><td>128&times;128</td><td>0.01</td><td>9728</td></tr>
<tr><td>192&times;192</td><td>0.01</td><td>9600</td></tr>
<tr><td>256&times;256</td><td>0.02</td><td>9728</td></tr>
<tr><td>384&times;384</td><td>0.03</td><td>9600</td></tr>
<tr><td>512&times;512</td><td>0.05</td><td>9728</td></tr>
<tr><td>768&times;768</td><td>0.11</td><td>9728</td></tr>
<tr><td>1024&times;1024</td><td>0.18</td><td>9856</td></tr>
<tr><td>1536&times;1536</td><td>0.40</td><td>9728</td></tr>
<tr><td>2048&times;2048</td><td>0.71</td><td>9728</td></tr>
<tr><td>3072&times;3072</td><td>1.58</td><td>9600</td></tr>
<tr><td>4096&times;4096</td><td>2.77</td><td>9728</td></tr>
</table>



<p><a name="k16"></a></p>
<h2 id="k16">16. Vizualizace výsledků benchmarků</h2>

<p>Mnohem přehlednější, než výsledky ve formě tabulky, je vizualizace
benchmarků v&nbsp;podobě grafů:</p>

<a href="https://www.root.cz/obrazek/1124602/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-3-prev.webp" class="image-1124602" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-3-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-3-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 4: Čas výpočtu v&nbsp;závislosti na rozlišení výsledného
obrázku počítaného benchmarkem.</i></p>

<a href="https://www.root.cz/obrazek/1124603/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-4-prev.webp" class="image-1124603" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-4-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-4-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 5: Vliv času startu aplikace. Zde vychází nejhůře Numba, protože
se jedná o JIT překladač a je tedy nutné provést JIT překlad před vlastními
výpočty.</i></p>

<a href="https://www.root.cz/obrazek/1124604/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-5-prev.webp" class="image-1124604" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-5-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-5-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 6: Společně se zvětšujícím se rozlišením obrázku klesá vliv JIT
překladu, ovšem zde (pro rozlišení do 512&times;512 pixelů) je stále jasně
patrný &ndash; dokonce i běžný interpret je rychlejší než Numba.</i></p>

<a href="https://www.root.cz/obrazek/1124605/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-6-prev.webp" class="image-1124605" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-6-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-6-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 7: Teprve pro velká rozlišení a tedy i delší dobu běhu výpočtu se
ukazuje, že JIT překlad Numby je vlastně velmi dobrý a překonává
Nuitku.</i></p>

<a href="https://www.root.cz/obrazek/1124606/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-7-prev.webp" class="image-1124606" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-7-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-7-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 8: JIT překlad trvá cca 5 sekund, takže kratší skripty je lepší
spouštět interpretrem a teprve delší JITovat (viz průsečíky křivek).</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Porovnání výsledků benchmarků: interpretry</h2>

<a href="https://www.root.cz/obrazek/1124607/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-8-prev.webp" class="image-1124607" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-8-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-8-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 9: Porovnání rychlosti různých interpretrů Pythonu. Můžeme zde
vidět výkonnostní skok mezi verzí 3.10 a 3.11 (což bylo taktéž oznámeno při
vydávání), ovšem kupodivu je verze 3.12 nepatrně horší, než 3.11.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Porovnání výsledků benchmarků: překladače</h2>

<p></p>
<a href="https://www.root.cz/obrazek/1124609/"><img src="https://i.iinfo.cz/images/569/nuitka-benchmarks-10-prev.webp" class="image-1124609" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-10-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/569/nuitka-benchmarks-10-large.webp" data-large-width="720" data-large-height="288" alt="&#160;" title="Autor: Pavel Tisnovsky and Nuitka authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 11: Z&nbsp;tohoto grafu je patrné, jak dobrý překlad
(resp.&nbsp;transpřeklad) dokáže provést Cython v&nbsp;případě, že má
k&nbsp;dispozici typové informace.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Příloha: skript pro vytištění grafů s&nbsp;výsledky benchmarků</h2>

<p>Všechny grafy, které jsme mohli vidět v&nbsp;kapitolách <a
href="#k17">17</a> a <a href="#k18">18</a>, byly vytvořeny s&nbsp;využitím
následujícího skriptu, který je založen na knihovně Matplotlib. Následuje výpis
zdrojového kódu tohoto pomocného skriptu:</p>

<pre>
<i>#!/usr/bin/env python</i>
<i># coding: utf-8</i>
&nbsp;
<i># ### Set of input files with benchmark results to be processed</i>
input_files = (
    "native.times",
    "native_optim.times",
    "python_3_8.times",
    "python_3_9.times",
    "python_3_10.times",
    "python_3_11.times",
    "python_3_12.times",
    "mypyc_no_type_hints.times",
    "mypyc_with_type_hints.times",
    "numba2.times",
    "numba3.times",
    "numba4.times",
    "nuitka.times",
    "cython_basic.times",
    "cython_types.times",
    "cython_optim.times",
)
&nbsp;
&nbsp;
import pandas as pd
&nbsp;
&nbsp;
<i># ### Helper functions to read benchmark results</i>
def read_benchmark_result(filename):
    return pd.read_csv(filename, sep=" ", header=0, names=("size", "time", "memory"))
&nbsp;
&nbsp;
def filename2description(filename):
    return filename.split(".")[0].replace("_", " ")
&nbsp;
&nbsp;
def read_all_results(input_files):
    return {
        filename2description(input_file): read_benchmark_result(input_file)
        for input_file in input_files
    }
&nbsp;
&nbsp;
<i># ### Combine all results into one DataFrame</i>
r = read_all_results(input_files)
&nbsp;
results = pd.DataFrame()
&nbsp;
<i># column to be transformed into index</i>
results["size"] = r["native"]["size"]
&nbsp;
for description, df in r.items():
    results[description] = df["time"]
&nbsp;
<i># create meaningful index</i>
results.set_index("size", inplace=True)
results
&nbsp;
&nbsp;
<i># ### Set plot size</i>
import matplotlib as mpl
import matplotlib.pyplot as plt
&nbsp;
mpl.rcParams["figure.dpi"] = 150
mpl.rcParams["figure.figsize"] = (12, 4.8)
xticks = df.index
&nbsp;
<i># color palette to be used</i>
colormap = [
    "#a00000",
    "#a0a000",  # native
    "#00a000",
    "#00b030",
    "#00c060",
    "#00d090",
    "#00e0a0",  # Python interpreters
    "#ff0000",
    "#ff8000",  # mypyc
    "#0000ff",
    "#0060ff",
    "#00c0ff",  # Numba
    "#ff8080",  # Nuitka
    "#808080",
    "#a0a0a0",
    "#c0c0c0",  # Cython
]
&nbsp;
&nbsp;
<i># ### Plot results</i>
&nbsp;
<i># Startup times</i>
results[0:5].plot(
    kind="bar", stacked=False, width=0.9, title="Startup time", color=colormap
)
plt.legend(loc=(1.04, 0))
plt.tight_layout()
plt.savefig("1st.png")
plt.show()
&nbsp;
&nbsp;
<i># Computation with some startup time influence</i>
results[5:10].plot(
    kind="bar",
    stacked=False,
    width=0.9,
    title="Computation with startup time influence",
    color=colormap,
)
plt.legend(loc=(1.04, 0))
plt.tight_layout()
plt.savefig("Startup time and computation.png")
plt.show()
&nbsp;
&nbsp;
<i># Just the computation, w/o startup time</i>
results[10:].plot(
    kind="bar", stacked=False, width=0.9, title="Extensive computation", color=colormap
)
plt.tight_layout()
plt.savefig("Extensive computation.png")
plt.show()
&nbsp;
&nbsp;
<i># Approximation, including startup time</i>
results.plot(title="Approximation, incl. startup time", color=colormap)
plt.tight_layout()
plt.savefig("Approximation computation.png")
plt.show()
&nbsp;
&nbsp;
<i># Numba/CPython thresholds</i>
results[8:12].plot(
    title="Numba/CPython thresholds",
    color=[
        "#a00000",
        "#a0a000",
        "#00a000",
        "#00b030",
        "#00c060",
        "#00d090",
        "#00e0a0",
        "#ff0000",
        "#ff8000",
        "#0000ff",
        "#0060ff",
        "#00c0ff",
    ],
)
plt.tight_layout()
plt.savefig("Numba CPython thresholds.png")
plt.show()
&nbsp;
&nbsp;
<i># Python interpreters only</i>
results[11:][
    ["python 3 8", "python 3 9", "python 3 10", "python 3 11", "python 3 12"]
].plot(kind="bar", title="Python interpreters only", color=colormap[2:])
plt.tight_layout()
plt.savefig("Python interpreters only.png")
plt.show()
&nbsp;
&nbsp;
colormap = [
    "#a00000",
    "#a0a000",  # native
    "#ff0000",
    "#ff8000",  # mypyc
    "#8080ff",  # Nuitka
    "#808080",
    "#a0a0a0",
    "#c0c0c0",  # Cython
]
<i># Compiled code only</i>
compiled = results[11:][
    [
        "native",
        "native optim",
        "mypyc no type hints",
        "mypyc with type hints",
        "nuitka",
        "cython basic",
        "cython types",
        "cython optim",
    ]
]
compiled.plot(kind="bar", color=colormap, title="Compiled code only")
plt.tight_layout()
plt.savefig("Compiled code only.png")
plt.show()
&nbsp;
compiled.plot(title="Approximation, compiled", color=colormap)
plt.tight_layout()
plt.savefig("Approximation computation compiled.png")
plt.show()
</pre>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Stránka projektu Nuitka<br />
<a href="https://nuitka.net/">https://nuitka.net/</a>
</li>

<li>Dokumentace k&nbsp;projektu Nuitka<br />
<a href="https://nuitka.net/user-documentation/">https://nuitka.net/user-documentation/</a>
</li>

<li>Nuitka na PyPi<br />
<a href="https://pypi.org/project/Nuitka/">https://pypi.org/project/Nuitka/</a>
</li>

<li>Cython (home page)<br />
<a href="http://cython.org/">http://cython.org/</a>
</li>

<li>Cython (wiki)<br />
<a href="https://github.com/cython/cython/wiki">https://github.com/cython/cython/wiki</a>
</li>

<li>Cython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Cython">https://en.wikipedia.org/wiki/Cython</a>
</li>

<li>Cython (GitHub)<br />
<a href="https://github.com/cython/cython">https://github.com/cython/cython</a>
</li>

<li>Rychlost CPythonu 3.11 a 3.12 v&nbsp;porovnání s&nbsp;JIT a AOT překladači<br />
<a href="https://www.root.cz/clanky/rychlost-cpythonu-3-11-a-3-12-v-porovnani-s-jit-a-aot-prekladaci-pythonu/">https://www.root.cz/clanky/rychlost-cpythonu-3-11-a-3-12-v-porovnani-s-jit-a-aot-prekladaci-pythonu/</a>
</li>

<li>Rychlost CPythonu 3.11 a 3.12 v&nbsp;porovnání s&nbsp;JIT a AOT překladači Pythonu (2)<br />
<a href="https://www.root.cz/clanky/rychlost-cpythonu-3-11-a-3-12-v-porovnani-s-jit-a-aot-prekladaci-pythonu-2/">https://www.root.cz/clanky/rychlost-cpythonu-3-11-a-3-12-v-porovnani-s-jit-a-aot-prekladaci-pythonu-2/</a>
</li>

<li>Statické typové kontroly zdrojových kódů Pythonu prováděné nástrojem Mypy<br />
<a href="https://www.root.cz/clanky/staticke-typove-kontroly-zdrojovych-kodu-pythonu-provadene-nastrojem-mypy/">https://www.root.cz/clanky/staticke-typove-kontroly-zdrojovych-kodu-pythonu-provadene-nastrojem-mypy/</a>
</li>

<li>Statické typové kontroly zdrojových kódů Pythonu prováděné nástrojem Mypy (2.část)<br />
<a href="https://www.root.cz/clanky/staticke-typove-kontroly-zdrojovych-kodu-pythonu-provadene-nastrojem-mypy-2-cast/">https://www.root.cz/clanky/staticke-typove-kontroly-zdrojovych-kodu-pythonu-provadene-nastrojem-mypy-2-cast/</a>
</li>

<li>Statické typové kontroly zdrojových kódů Pythonu prováděné nástrojem Mypy (3)<br />
<a href="https://www.root.cz/clanky/staticke-typove-kontroly-zdrojovych-kodu-pythonu-provadene-nastrojem-mypy-3/">https://www.root.cz/clanky/staticke-typove-kontroly-zdrojovych-kodu-pythonu-provadene-nastrojem-mypy-3/</a>
</li>

<li>Praktické použití nástroje Cython při překladu Pythonu do nativního kódu<br />
<a href="https://www.root.cz/clanky/prakticke-pouziti-nastroje-cython-pri-prekladu-pythonu-do-nativniho-kodu-1/">https://www.root.cz/clanky/prakticke-pouziti-nastroje-cython-pri-prekladu-pythonu-do-nativniho-kodu-1/</a>
</li>

<li>Pyrex<br />
<a href="https://wiki.python.org/moin/Pyrex">https://wiki.python.org/moin/Pyrex</a>
</li>

<li>RPython vs Cython aneb dvojí přístup k překladu Pythonu do nativního kódu<br />
<a href="https://www.root.cz/clanky/rpython-vs-cython-aneb-dvoji-pristup-k-prekladu-pythonu-do-nativniho-kodu/">https://www.root.cz/clanky/rpython-vs-cython-aneb-dvoji-pristup-k-prekladu-pythonu-do-nativniho-kodu/</a>
</li>

<li>Python Implementations: Compilers<br />
<a href="https://wiki.python.org/moin/PythonImplementations#Compilers">https://wiki.python.org/moin/PythonImplementations#Compilers</a>
</li>

<li>EmbeddingCython<br />
<a href="https://github.com/cython/cython/wiki/EmbeddingCython">https://github.com/cython/cython/wiki/EmbeddingCython</a>
</li>

<li>The Basics of Cython<br />
<a href="http://docs.cython.org/en/latest/src/tutorial/cython_tutorial.html">http://docs.cython.org/en/latest/src/tutorial/cython_tutorial.html</a>
</li>

<li>Overcoming Python's GIL with Cython<br />
<a href="https://lbolla.info/python-threads-cython-gil">https://lbolla.info/python-threads-cython-gil</a>
</li>

<li>GlobalInterpreterLock<br />
<a href="https://wiki.python.org/moin/GlobalInterpreterLock">https://wiki.python.org/moin/GlobalInterpreterLock</a>
</li>

<li>The Magic of RPython<br />
<a href="https://refi64.com/posts/the-magic-of-rpython.html">https://refi64.com/posts/the-magic-of-rpython.html</a>
</li>

<li>RPython: Frequently Asked Questions<br />
<a href="http://rpython.readthedocs.io/en/latest/faq.html">http://rpython.readthedocs.io/en/latest/faq.html</a>
</li>

<li>RPython’s documentation<br />
<a href="http://rpython.readthedocs.io/en/latest/index.html">http://rpython.readthedocs.io/en/latest/index.html</a>
</li>

<li>RPython (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PyPy#RPython">https://en.wikipedia.org/wiki/PyPy#RPython</a>
</li>

<li>Getting Started with RPython<br />
<a href="http://rpython.readthedocs.io/en/latest/getting-started.html">http://rpython.readthedocs.io/en/latest/getting-started.html</a>
</li>

<li>Duck typing<br />
<a href="https://en.wikipedia.org/wiki/Duck_typing">https://en.wikipedia.org/wiki/Duck_typing</a>
</li>

<li>PyPy (home page)<br />
<a href="https://pypy.org/">https://pypy.org/</a>
</li>

<li>PyPy (dokumentace)<br />
<a href="http://doc.pypy.org/en/latest/">http://doc.pypy.org/en/latest/</a>
</li>

<li>Localized Type Inference of Atomic Types in Python (2005)<br />
<a href="http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.90.3231">http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.90.3231</a>
</li>

<li>Numba<br />
<a href="http://numba.pydata.org/">http://numba.pydata.org/</a>
</li>

<li>Tutorial: Writing an Interpreter with PyPy, Part 1<br />
<a href="https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html">https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html</a>
</li>

<li>List of numerical analysis software<br />
<a href="https://en.wikipedia.org/wiki/List_of_numerical_analysis_software">https://en.wikipedia.org/wiki/List_of_numerical_analysis_software</a>
</li>

<li>Pixie: lehký skriptovací jazyk s „kouzelnými“ schopnostmi<br />
<a href="https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/">https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/</a>
</li>

<li>Programovací jazyk Pixie: funkce ze základní knihovny a použití FFI<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-pixie-funkce-ze-zakladni-knihovny-a-pouziti-ffi/">https://www.root.cz/clanky/programovaci-jazyk-pixie-funkce-ze-zakladni-knihovny-a-pouziti-ffi/</a>
</li>

<li>The future can be written in RPython now (článek z&nbsp;roku 2010)<br />
<a href="http://blog.christianperone.com/2010/05/the-future-can-be-written-in-rpython-now/">http://blog.christianperone.com/2010/05/the-future-can-be-written-in-rpython-now/</a>
</li>

<li>PyPy is the Future of Python (článek z&nbsp;roku 2010)<br />
<a href="https://alexgaynor.net/2010/may/15/pypy-future-python/">https://alexgaynor.net/2010/may/15/pypy-future-python/</a>
</li>

<li>Portal:Python programming<br />
<a href="https://en.wikipedia.org/wiki/Portal:Python_programming">https://en.wikipedia.org/wiki/Portal:Python_programming</a>
</li>

<li>RPython Frontend and C Wrapper Generator<br />
<a href="http://www.codeforge.com/article/383293">http://www.codeforge.com/article/383293</a>
</li>

<li>PyPy’s Approach to Virtual Machine Construction<br />
<a href="https://bitbucket.org/pypy/extradoc/raw/tip/talk/dls2006/pypy-vm-construction.pdf">https://bitbucket.org/pypy/extradoc/raw/tip/talk/dls2006/pypy-vm-construction.pdf</a>
</li>

<li>Tutorial: Writing an Interpreter with PyPy, Part 1<br />
<a href="https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html">https://morepypy.blogspot.com/2011/04/tutorial-writing-interpreter-with-pypy.html</a>
</li>

<li>A simple interpreter from scratch in Python (part 1)<br />
<a href="http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1">http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1</a>
</li>

<li>Brainfuck Interpreter in Python<br />
<a href="https://helloacm.com/brainfuck-interpreter-in-python/">https://helloacm.com/brainfuck-interpreter-in-python/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

