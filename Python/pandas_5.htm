<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovna Pandas: spojování datových rámců s využitím append, concat, merge a join</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovna Pandas: spojování datových rámců s využitím append, concat, merge a join</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Před vlastní analýzou či statistickým zpracováním dat s využitím knihovny Pandas je mnohdy nutné data získat z několika samostatných tabulek, jenž je zapotřebí načíst a spojit. A právě k těmto mnohdy relativně složitým operacím slouží funkce concat a merge i metody append a join.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Načtení datového rámce z&nbsp;externího datového souboru (tabulky)</a></p>
<p><a href="#k02">2. Zpracování jednotlivých sloupců v&nbsp;datových rámcích &ndash; map a transform</a></p>
<p><a href="#k03">3. Agregace dat z&nbsp;datových rámců resp.&nbsp;z&nbsp;vybraných sloupců</a></p>
<p><a href="#k04">4. Použití metody <strong>combine</strong></a></p>
<p><a href="#k05">5. Spojení datových rámců metodou <strong>append</strong></a></p>
<p><a href="#k06">6. Příklad použití metody <strong>append</strong></a></p>
<p><a href="#k07">7. Spojení rámců po sloupcích nebo po řádcích funkcí <strong>concat</strong></a></p>
<p><a href="#k08">8. Příklady použití funkce <strong>concat</strong></a></p>
<p><a href="#k09">9. Funkce <strong>merge</strong></a></p>
<p><a href="#k10">10. Inner join (vnitřní spojení) založený na funkci <strong>merge</strong></a></p>
<p><a href="#k11">11. Left join (vnější spojení &bdquo;zleva&ldquo;) založený na funkci <strong>merge</strong></a></p>
<p><a href="#k12">12. Right join (vnější spojení &bdquo;zprava&ldquo;) založený na funkci <strong>merge</strong></a></p>
<p><a href="#k13">13. Outer join (vnější spojení) založený na funkci <strong>merge</strong></a></p>
<p><a href="#k14">14. Použití metody <strong>join</strong> pro spojení dvou datových rámců</a></p>
<p><a href="#k15">15. Inner join (vnitřní spojení) založený na metodě <strong>join</strong></a></p>
<p><a href="#k16">16. Left join (vnější spojení &bdquo;zleva&ldquo;) založený na metodě <strong>join</strong></a></p>
<p><a href="#k17">17. Right join (vnější spojení &bdquo;zprava&ldquo;) založený na metodě <strong>join</strong></a></p>
<p><a href="#k18">18. Outer join (vnější spojení) založený na metodě <strong>join</strong></a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Načtení datového rámce z&nbsp;externího datového souboru (tabulky)</h2>

<p>Nejdříve si zopakujme, jakým způsobem je možné načíst tabulku do datového
rámce. Knihovna Pandas umožňuje načtení tabulky z&nbsp;různých datových zdrojů,
například ze:</p>

<ol>

<li>Souborů CSV (<i>Comma-Separated Values</i>)</li>
<li>Souborů TSV (<i>Tab-Separated Values</i>)</li>
<li>Textových souborů s&nbsp;volitelným oddělovačem a formátem sloupců</li>
<li>Tabulek z&nbsp;tabulkových procesorů (xls, xlsx, xlsm, xlsb, odf, ods, odt)</li>
<li>Souborů JSON se strukturovanými daty</li>
<li>Načítání z&nbsp;relačních databází s&nbsp;využitím SQL driverů</li>
<li>Načítání <a href="https://www.root.cz/clanky/komunikace-se-sloupcovymi-databazemi-z-jazyka-go-parquet-soubory/">z&nbsp;Parquet souborů</a></li>
<li>atd.</li>
</ol>

<p>V&nbsp;demonstračních příkladech popsaných v&nbsp;navazujících kapitolách
budeme používat tabulku uloženou ve formátu TSV (<i>Tab-Separated Values</i>),
kterou je možné načíst funkcí nazvanou <strong>read_csv</strong>, ovšem jen
v&nbsp;případě, že budeme explicitně specifikovat formát oddělovače:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = <strong>pandas.read_csv("tiobe.tsv", sep="\t")</strong>
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že vybraný sloupec je
zkonvertován na <i>index</i>, čehož posléze využijeme.</div></p>

<p>Po spuštění tohoto demonstračního příkladu by se měl nejprve zobrazit obsah
celého datového rámce:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>

<p>Následovat by měl výpis struktury jednotlivých sloupců:</p>

<pre>
Sep 2020      int64
Sep 2019      int64
Change       object
Ratings     float64
Changep     float64
dtype: object
</pre>

<p>Nakonec se zobrazí informace o indexech, popis všech pěti datových sloupců a
obsazení paměti datovým rámcem:</p>

<pre>
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 5 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Sep 2020  20 non-null     int64  
 1   Sep 2019  20 non-null     int64  
 2   Change    14 non-null     object 
 3   Ratings   20 non-null     float64
 4   Changep   20 non-null     float64
dtypes: float64(2), int64(2), object(1)
memory usage: 960.0+ bytes
None
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Zpracování jednotlivých sloupců v&nbsp;datových rámcích &ndash; map a transform</h2>

<p><a
href="https://www.root.cz/clanky/knihovna-pandas-prace-s-datovymi-radami-series/">V&nbsp;předchozím
článku o knihovně Pandas</a> jsme si popsali mnoho funkcí určených pro
zpracování datových řad (<i>series</i>). Všechny tyto funkce jsou přitom plně
aplikovatelné i na sloupce datových rámců, protože každý sloupec je možné
považovat za plnohodnotnou datovou řadu. Vzhledem k&nbsp;tomu, že jednotlivé
funkce již byly poměrně podrobně popsány minule, ukážeme si dnes jen několik
příkladů pouze se základním popisem.</p>

<p>Vytvoření nového sloupce založeného na hodnotách z&nbsp;existujícího sloupce
&bdquo;Ratings&ldquo;:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
<strong>df["Ratings as ratio"] = df["Ratings"].map(lambda x: x/100.0)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>Výsledkem bude následující datový rámec:</p>

<pre>
                   Sep 2020  Sep 2019  ... Changep  Ratings as ratio
Language
C                         1         2  ...    0.74            0.1595
Java                      2         1  ...   -3.18            0.1348
Python                    3         3  ...    0.59            0.1047
C++                       4         4  ...    1.48            0.0711
C#                        5         5  ...    1.18            0.0458
Visual Basic              6         6  ...    0.83            0.0412
JavaScript                7         7  ...    0.41            0.0254
PHP                       8         9  ...    0.62            0.0249
R                         9        19  ...    1.33            0.0237
SQL                      10         8  ...   -0.19            0.0176
Go                       11        14  ...    0.24            0.0146
Swift                    12        16  ...    0.28            0.0138
Perl                     13        20  ...    0.26            0.0130
Assembly language        14        12  ...   -0.08            0.0130
Ruby                     15        15  ...    0.03            0.0124
MATLAB                   16        18  ...    0.04            0.0110
Groovy                   17        11  ...   -0.52            0.0099
Rust                     18        33  ...    0.55            0.0092
Objective-C              19        10  ...   -0.99            0.0085
Dart                     20        24  ...    0.13            0.0077
&nbsp;
[20 rows x 6 columns]
&nbsp;
Sep 2020              int64
Sep 2019              int64
Change               object
Ratings             float64
Changep             float64
Ratings as ratio    float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 6 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   Sep 2020          20 non-null     int64  
 1   Sep 2019          20 non-null     int64  
 2   Change            14 non-null     object 
 3   Ratings           20 non-null     float64
 4   Changep           20 non-null     float64
 5   Ratings as ratio  20 non-null     float64
dtypes: float64(3), int64(2), object(1)
memory usage: 1.1+ KB
None
</pre>

<p>Přepis původního sloupce &bdquo;Ratings&ldquo; zkonvertovanými hodnotami:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
<strong>df["Ratings"] = df["Ratings"].map(lambda x: x/100.0)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>Výsledkem tohoto příkladu bude následující datový rámec:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                         1         2  change   0.1595     0.74
Java                      2         1  change   0.1348    -3.18
Python                    3         3     NaN   0.1047     0.59
C++                       4         4     NaN   0.0711     1.48
C#                        5         5     NaN   0.0458     1.18
Visual Basic              6         6     NaN   0.0412     0.83
JavaScript                7         7     NaN   0.0254     0.41
PHP                       8         9  change   0.0249     0.62
R                         9        19  change   0.0237     1.33
SQL                      10         8  change   0.0176    -0.19
Go                       11        14  change   0.0146     0.24
Swift                    12        16  change   0.0138     0.28
Perl                     13        20  change   0.0130     0.26
Assembly language        14        12  change   0.0130    -0.08
Ruby                     15        15     NaN   0.0124     0.03
MATLAB                   16        18  change   0.0110     0.04
Groovy                   17        11  change   0.0099    -0.52
Rust                     18        33  change   0.0092     0.55
Objective-C              19        10  change   0.0085    -0.99
Dart                     20        24  change   0.0077     0.13
&nbsp;
Sep 2020      int64
Sep 2019      int64
Change       object
Ratings     float64
Changep     float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 5 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Sep 2020  20 non-null     int64  
 1   Sep 2019  20 non-null     int64  
 2   Change    14 non-null     object 
 3   Ratings   20 non-null     float64
 4   Changep   20 non-null     float64
dtypes: float64(2), int64(2), object(1)
memory usage: 960.0+ bytes
None
</pre>

<p>Přímá aplikace funkce <strong>format</strong> bez nutnosti použití
<strong>lambda</strong> výrazu:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># formát hodnot ve sloupci</i>
<strong>df["Ratings"] = df["Ratings"].map("Rating is {:4.1f}%".format)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>Výsledek:</p>

<pre>
                   Sep 2020  Sep 2019  Change          Ratings  Changep
Language
C                         1         2  change  Rating is 15.9%     0.74
Java                      2         1  change  Rating is 13.5%    -3.18
Python                    3         3     NaN  Rating is 10.5%     0.59
C++                       4         4     NaN  Rating is  7.1%     1.48
C#                        5         5     NaN  Rating is  4.6%     1.18
Visual Basic              6         6     NaN  Rating is  4.1%     0.83
JavaScript                7         7     NaN  Rating is  2.5%     0.41
PHP                       8         9  change  Rating is  2.5%     0.62
R                         9        19  change  Rating is  2.4%     1.33
SQL                      10         8  change  Rating is  1.8%    -0.19
Go                       11        14  change  Rating is  1.5%     0.24
Swift                    12        16  change  Rating is  1.4%     0.28
Perl                     13        20  change  Rating is  1.3%     0.26
Assembly language        14        12  change  Rating is  1.3%    -0.08
Ruby                     15        15     NaN  Rating is  1.2%     0.03
MATLAB                   16        18  change  Rating is  1.1%     0.04
Groovy                   17        11  change  Rating is  1.0%    -0.52
Rust                     18        33  change  Rating is  0.9%     0.55
Objective-C              19        10  change  Rating is  0.8%    -0.99
Dart                     20        24  change  Rating is  0.8%     0.13
&nbsp;
Sep 2020      int64
Sep 2019      int64
Change       object
Ratings      object
Changep     float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 5 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Sep 2020  20 non-null     int64  
 1   Sep 2019  20 non-null     int64  
 2   Change    14 non-null     object 
 3   Ratings   20 non-null     object 
 4   Changep   20 non-null     float64
dtypes: float64(1), int64(2), object(2)
memory usage: 960.0+ bytes
None
</pre>

<p>Metoda <strong>transform</strong> odpovídá výše zmíněné metodě
<strong>map</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
<strong>df["Ratings as ratio"] = df["Ratings"].transform(lambda x: x/100.0)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>Výsledek:</p>

<pre>
                   Sep 2020  Sep 2019  ... Changep  Ratings as ratio
Language
C                         1         2  ...    0.74            0.1595
Java                      2         1  ...   -3.18            0.1348
Python                    3         3  ...    0.59            0.1047
C++                       4         4  ...    1.48            0.0711
C#                        5         5  ...    1.18            0.0458
Visual Basic              6         6  ...    0.83            0.0412
JavaScript                7         7  ...    0.41            0.0254
PHP                       8         9  ...    0.62            0.0249
R                         9        19  ...    1.33            0.0237
SQL                      10         8  ...   -0.19            0.0176
Go                       11        14  ...    0.24            0.0146
Swift                    12        16  ...    0.28            0.0138
Perl                     13        20  ...    0.26            0.0130
Assembly language        14        12  ...   -0.08            0.0130
Ruby                     15        15  ...    0.03            0.0124
MATLAB                   16        18  ...    0.04            0.0110
Groovy                   17        11  ...   -0.52            0.0099
Rust                     18        33  ...    0.55            0.0092
Objective-C              19        10  ...   -0.99            0.0085
Dart                     20        24  ...    0.13            0.0077
&nbsp;
[20 rows x 6 columns]
&nbsp;
Sep 2020              int64
Sep 2019              int64
Change               object
Ratings             float64
Changep             float64
Ratings as ratio    float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 6 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   Sep 2020          20 non-null     int64  
 1   Sep 2019          20 non-null     int64  
 2   Change            14 non-null     object 
 3   Ratings           20 non-null     float64
 4   Changep           20 non-null     float64
 5   Ratings as ratio  20 non-null     float64
dtypes: float64(3), int64(2), object(1)
memory usage: 1.7+ KB
None
</pre>

<p>Dtto pro změnu obsahu vybraného sloupce &bdquo;Ratings&ldquo;:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># převod na skutečný poměr &lt;0, 1&gt;</i>
<strong>df["Ratings"] = df["Ratings"].transform(lambda x: x/100.0)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>Výsledek:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                         1         2  change   0.1595     0.74
Java                      2         1  change   0.1348    -3.18
Python                    3         3     NaN   0.1047     0.59
C++                       4         4     NaN   0.0711     1.48
C#                        5         5     NaN   0.0458     1.18
Visual Basic              6         6     NaN   0.0412     0.83
JavaScript                7         7     NaN   0.0254     0.41
PHP                       8         9  change   0.0249     0.62
R                         9        19  change   0.0237     1.33
SQL                      10         8  change   0.0176    -0.19
Go                       11        14  change   0.0146     0.24
Swift                    12        16  change   0.0138     0.28
Perl                     13        20  change   0.0130     0.26
Assembly language        14        12  change   0.0130    -0.08
Ruby                     15        15     NaN   0.0124     0.03
MATLAB                   16        18  change   0.0110     0.04
Groovy                   17        11  change   0.0099    -0.52
Rust                     18        33  change   0.0092     0.55
Objective-C              19        10  change   0.0085    -0.99
Dart                     20        24  change   0.0077     0.13
&nbsp;
Sep 2020      int64
Sep 2019      int64
Change       object
Ratings     float64
Changep     float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 5 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Sep 2020  20 non-null     int64  
 1   Sep 2019  20 non-null     int64  
 2   Change    14 non-null     object 
 3   Ratings   20 non-null     float64
 4   Changep   20 non-null     float64
dtypes: float64(2), int64(2), object(1)
memory usage: 1.6+ KB
None
</pre>

<p>Přímá specifikace metody <strong>format</strong> namísto
<strong>lambda</strong> výrazu:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># formát hodnot ve sloupci</i>
<strong>df["Ratings"] = df["Ratings"].transform("Rating is {:4.1f}%".format)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
                   Sep 2020  Sep 2019  Change          Ratings  Changep
Language
C                         1         2  change  Rating is 15.9%     0.74
Java                      2         1  change  Rating is 13.5%    -3.18
Python                    3         3     NaN  Rating is 10.5%     0.59
C++                       4         4     NaN  Rating is  7.1%     1.48
C#                        5         5     NaN  Rating is  4.6%     1.18
Visual Basic              6         6     NaN  Rating is  4.1%     0.83
JavaScript                7         7     NaN  Rating is  2.5%     0.41
PHP                       8         9  change  Rating is  2.5%     0.62
R                         9        19  change  Rating is  2.4%     1.33
SQL                      10         8  change  Rating is  1.8%    -0.19
Go                       11        14  change  Rating is  1.5%     0.24
Swift                    12        16  change  Rating is  1.4%     0.28
Perl                     13        20  change  Rating is  1.3%     0.26
Assembly language        14        12  change  Rating is  1.3%    -0.08
Ruby                     15        15     NaN  Rating is  1.2%     0.03
MATLAB                   16        18  change  Rating is  1.1%     0.04
Groovy                   17        11  change  Rating is  1.0%    -0.52
Rust                     18        33  change  Rating is  0.9%     0.55
Objective-C              19        10  change  Rating is  0.8%    -0.99
Dart                     20        24  change  Rating is  0.8%     0.13
&nbsp;
Sep 2020      int64
Sep 2019      int64
Change       object
Ratings      object
Changep     float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 5 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Sep 2020  20 non-null     int64  
 1   Sep 2019  20 non-null     int64  
 2   Change    14 non-null     object 
 3   Ratings   20 non-null     object 
 4   Changep   20 non-null     float64
dtypes: float64(1), int64(2), object(2)
memory usage: 1.6+ KB
None
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Agregace dat z&nbsp;datových rámců resp.&nbsp;z&nbsp;vybraných sloupců</h2>

<p>S&nbsp;využitím agregačních funkcí je možné například získat maximální,
minimální a průměrnou hodnotu ve vybraném sloupci, vypočítat součet nebo
produkt hodnot ve sloupci atd. Zavolat lze funkce pro zpracování prvků polí
poskytované knihovnou <i>Numpy</i> tak, jak je to ukázáno v&nbsp;dalším
příkladu:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
import numpy as np
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># agregace výsledků</i>
results = <strong>df["Ratings"].agg([np.min, np.max, np.sum, np.mean])</strong>
&nbsp;
<i># tisk vypočtených výsledků</i>
print("Results")
print(results)
</pre>

<p>Získané výsledky mají tvar datové řady:</p>

<pre>
Results
amin     0.770
amax    15.950
sum     76.180
mean     3.809
Name: Ratings, dtype: float64
</pre>

<p>Podobně koncipovaný příklad, ovšem nyní se použijí jména funkcí (uložené
v&nbsp;řetězci) a nikoli reference na funkce:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># agregace výsledků</i>
results = <strong>df["Ratings"].agg(["min", "max", "sum", "mean"])</strong>
&nbsp;
<i># tisk vypočtených výsledků</i>
print("Results")
print(results)
</pre>

<p>Vypočtené výsledky mají opět tvar datové řady:</p>

<pre>
Results
min      0.770
max     15.950
sum     76.180
mean     3.809
Name: Ratings, dtype: float64
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Použití metody <strong>combine</strong></h2>

<p>Další užitečná metoda (popsaná minule), která je určená pro zpracování
hodnot v&nbsp;datových řadách a tím pádem i ve sloupcích datových rámců, se
jmenuje <strong>Series.combine</strong>. Tato metoda umožňuje zkombinovat prvky
dvou řad (pokud jsou jejich indexy kompatibilní) popř.&nbsp;prvky jedné řady se
skalární hodnotou. Ukažme si nyní druhý zmíněný případ, kdy zkombinujeme
(postupně) hodnotu prvků z&nbsp;datové řady s&nbsp;hodnotou 2 resp.&nbsp;10,
přičemž kombinace bude provedena funkcemi <strong>min</strong> a
<strong>max</strong>. V&nbsp;prvním případě tedy nahradíme ty prvky
z&nbsp;řady, které jsou větší než 10 hodnotou 10 a následně ty prvky
z&nbsp;řady, které jsou menší než 2 právě hodnotou 2:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df = pandas.read_csv("tiobe.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df.set_index("Language", inplace=True)
&nbsp;
<i># omezení hodnot</i>
df["Ratings"] = <strong>df["Ratings"].combine(10, min)</strong>
&nbsp;
<i># omezení hodnot</i>
df["Ratings"] = <strong>df["Ratings"].combine(2, max)</strong>
&nbsp;
<i># datový rámec zobrazíme</i>
print(df)
print()
&nbsp;
<i># podrobnější informace o datovém rámci</i>
print(df.dtypes)
print()
&nbsp;
<i># více podrobnějších informací o datovém rámci</i>
print(df.info())
print()
</pre>

<p>Výsledek je patrný při pohledu na nový obsah sloupce
&bdquo;Ratings&ldquo;:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                         1         2  change    10.00     0.74
Java                      2         1  change    10.00    -3.18
Python                    3         3     NaN    10.00     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     2.00    -0.19
Go                       11        14  change     2.00     0.24
Swift                    12        16  change     2.00     0.28
Perl                     13        20  change     2.00     0.26
Assembly language        14        12  change     2.00    -0.08
Ruby                     15        15     NaN     2.00     0.03
MATLAB                   16        18  change     2.00     0.04
Groovy                   17        11  change     2.00    -0.52
Rust                     18        33  change     2.00     0.55
Objective-C              19        10  change     2.00    -0.99
Dart                     20        24  change     2.00     0.13
&nbsp;
Sep 2020      int64
Sep 2019      int64
Change       object
Ratings     float64
Changep     float64
dtype: object
&nbsp;
&lt;class 'pandas.core.frame.DataFrame'&gt;
Index: 20 entries, C to Dart
Data columns (total 5 columns):
 #   Column    Non-Null Count  Dtype  
---  ------    --------------  -----  
 0   Sep 2020  20 non-null     int64  
 1   Sep 2019  20 non-null     int64  
 2   Change    14 non-null     object 
 3   Ratings   20 non-null     float64
 4   Changep   20 non-null     float64
dtypes: float64(2), int64(2), object(1)
memory usage: 960.0+ bytes
None
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Spojení datových rámců metodou <strong>append</strong></h2>

<p>Ve druhé části dnešního článku se budeme zabývat velmi častou operací
&ndash; spojením dvou (nebo i většího množství) datových rámců. V&nbsp;knihovně
Pandas je možné rámce spojit jak &bdquo;po řádcích&ldquo;, tak i &bdquo;po
sloupcích&ldquo; a popř.&nbsp;i vyřešit splynutí hodnot z&nbsp;těch sloupců,
které si logicky odpovídají. Nejdříve si ukážeme, jakým způsobem je možné
spojit dva datové rámce &bdquo;po řádcích&ldquo;. K&nbsp;tomu využijeme datové
soubory <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv">tiobeC.tsv</a>
a <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv">tiobeD.tsv</a>.</p>

<p>První z&nbsp;těchto souborů <strong>tiobeC.tsv</strong> obsahuje horní
polovinu tabulky:</p>

<pre>
Sep 2020    Sep 2019    Change      Language           Ratings     Changep
1           2           change      C                  15.95       +0.74
2           1           change      Java               13.48       -3.18
3           3                       Python             10.47       +0.59
4           4                       C++                7.11        +1.48
5           5                       C#                 4.58        +1.18
6           6                       Visual Basic       4.12        +0.83
7           7                       JavaScript         2.54        +0.41
8           9           change      PHP                2.49        +0.62
9           19          change      R                  2.37        +1.33
10          8           change      SQL                1.76        -0.19
</pre>

<p>Druhá polovina tabulky je uložena v&nbsp;souboru
<strong>tiobeD.tsv</strong>:</p>

<pre>
Sep 2020    Sep 2019    Change      Language           Ratings     Changep
11          14          change      Go                 1.46        +0.24
12          16          change      Swift              1.38        +0.28
13          20          change      Perl               1.30        +0.26
14          12          change      Assembly language  1.30        -0.08
15          15                      Ruby               1.24        +0.03
16          18          change      MATLAB             1.10        +0.04
17          11          change      Groovy             0.99        -0.52
18          33          change      Rust               0.92        +0.55
19          10          change      Objective-C        0.85        -0.99
20          24          change      Dart               0.77        +0.13
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Příklad použití metody <strong>append</strong></h2>

<p>Metoda <strong>append</strong> třídy <strong>DataFrame</strong> připojí
k&nbsp;datovému rámci obsah druhého datového rámce. Použití této metody
v&nbsp;praxi je tedy velmi jednoduché, ovšem lze ji použít pouze pro základní
operace s&nbsp;datovými rámci (na rozdíl od dále popsaných operací typu
&bdquo;merge&ldquo; a &bdquo;join&ldquo;):</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeC.tsv", sep="\t")
df2 = pandas.read_csv("tiobeD.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
concatenated = <strong>df1.append(df2)</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Po spuštění tohoto příkladu se nejdříve zobrazí původní obsah obou datových
rámců:</p>

<pre>
             Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                   1         2  change    15.95     0.74
Java                2         1  change    13.48    -3.18
Python              3         3     NaN    10.47     0.59
C++                 4         4     NaN     7.11     1.48
C#                  5         5     NaN     4.58     1.18
Visual Basic        6         6     NaN     4.12     0.83
JavaScript          7         7     NaN     2.54     0.41
PHP                 8         9  change     2.49     0.62
R                   9        19  change     2.37     1.33
SQL                10         8  change     1.76    -0.19
&nbsp;
                  Sep 2020  Sep 2019  Change  Ratings  Changep
Language
Go                      11        14  change     1.46     0.24
Swift                   12        16  change     1.38     0.28
Perl                    13        20  change     1.30     0.26
Assembly language       14        12  change     1.30    -0.08
Ruby                    15        15     NaN     1.24     0.03
MATLAB                  16        18  change     1.10     0.04
Groovy                  17        11  change     0.99    -0.52
Rust                    18        33  change     0.92     0.55
Objective-C             19        10  change     0.85    -0.99
Dart                    20        24  change     0.77     0.13
</pre>

<p>Poté dojde k&nbsp;připojení druhého rámce k&nbsp;rámci prvnímu s&nbsp;tímto
výsledkem:</p>

<pre>
                  Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                        1         2  change    15.95     0.74
Java                     2         1  change    13.48    -3.18
Python                   3         3     NaN    10.47     0.59
C++                      4         4     NaN     7.11     1.48
C#                       5         5     NaN     4.58     1.18
Visual Basic             6         6     NaN     4.12     0.83
JavaScript               7         7     NaN     2.54     0.41
PHP                      8         9  change     2.49     0.62
R                        9        19  change     2.37     1.33
SQL                     10         8  change     1.76    -0.19
Go                      11        14  change     1.46     0.24
Swift                   12        16  change     1.38     0.28
Perl                    13        20  change     1.30     0.26
Assembly language       14        12  change     1.30    -0.08
Ruby                    15        15     NaN     1.24     0.03
MATLAB                  16        18  change     1.10     0.04
Groovy                  17        11  change     0.99    -0.52
Rust                    18        33  change     0.92     0.55
Objective-C             19        10  change     0.85    -0.99
Dart                    20        24  change     0.77     0.13
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Spojení rámců po sloupcích nebo po řádcích funkcí <strong>concat</strong></h2>

<p>Alternativní možnost spojení dvou datových rámců nabízí funkce nazvaná
<strong>concat</strong>, která je aplikovatelná pro libovolný počet instancí
třídy <strong>DataFrame</strong>. Tato funkce dokáže datové rámce spojit buď po
sloupcích nebo po řádcích, a to v&nbsp;závislosti na hodnotě parametru
<strong>axis</strong>, který by měl obsahovat hodnotu 0 nebo 1
(popř.&nbsp;nebýt vůbec uveden):</p>

<pre>
<strong>concat</strong>(objs:Union[Iterable[~FrameOrSeries], Mapping[collections.abc.Hashable, ~FrameOrSeries]], axis=0, join='outer', ignore_index:bool=False, keys=None, levels=None, names=None, verify_integrity:bool=False, sort:bool=False, copy:bool=True)
-&gt; Union[_ForwardRef('DataFrame'), _ForwardRef('Series')]
&nbsp;    
    Concatenate pandas objects along a particular axis with optional set logic
    along the other axes.
&nbsp;    
    Can also add a layer of hierarchical indexing on the concatenation axis,
    which may be useful if the labels are the same (or overlapping) on
    the passed axis number.
</pre>

<p>Pro otestování spojení datových rámců &bdquo;po řádcích&ldquo; opět
použijeme datové soubory <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv">tiobeC.tsv</a>
a <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv">tiobeD.tsv</a>
popsané v&nbsp;rámci <a href="#k05">páté kapitoly</a>. Ovšem pro spojení rámců
&bdquo;po sloupcích&ldquo; budou použity odlišné soubory &ndash; <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv">tiobeE.tsv</a>
a <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv">tiobeF.tsv</a>.</p>

<p>Soubor <strong>tiobeE.tsv</strong> obsahuje pouze tři vybrané sloupce
z&nbsp;původního rámce (tabulky):</p>

<pre>
Language           Ratings       Changep
C                  15.95         +0.74
Java               13.48         -3.18
Python             10.47         +0.59
C++                7.11          +1.48
C#                 4.58          +1.18
Visual Basic       4.12          +0.83
JavaScript         2.54          +0.41
PHP                2.49          +0.62
R                  2.37          +1.33
SQL                1.76          -0.19
Go                 1.46          +0.24
Swift              1.38          +0.28
Perl               1.30          +0.26
Assembly language  1.30          -0.08
Ruby               1.24          +0.03
MATLAB             1.10          +0.04
Groovy             0.99          -0.52
Rust               0.92          +0.55
Objective-C        0.85          -0.99
Dart               0.77          +0.13
</pre>

<p>Soubor <strong>tiobeF.tsv</strong> taktéž obsahuje pouze vybrané datové
sloupce z&nbsp;původní tabulky:</p>

<pre>
Sep 2020         Sep 2019       Change         Language
1                2              change         C
2                1              change         Java
3                3                             Python
4                4                             C++
5                5                             C#
6                6                             Visual Basic
7                7                             JavaScript
8                9              change         PHP
9                19             change         R
10               8              change         SQL
11               14             change         Go
12               16             change         Swift
13               20             change         Perl
14               12             change         Assembly language
15               15                            Ruby
16               18             change         MATLAB
17               11             change         Groovy
18               33             change         Rust
19               10             change         Objective-C
20               24             change         Dart
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že sloupec
&bdquo;Language&ldquo; existuje v&nbsp;obou tabulkách. To je důležité, protože
bude využit pro vytvoření indexů datových rámců.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Příklady použití funkce <strong>concat</strong></h2>

<p>Nejprve si ukažme, jak se provede spojení dvou datových rámců &bdquo;po
sloupcích&ldquo; s&nbsp;využitím funkce <strong>concat</strong>. V&nbsp;tomto
případě je nutné funkci předat seznam nebo n-tici, jejímiž prvky jsou reference
na spojované datové rámce:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeE.tsv", sep="\t")
df2 = pandas.read_csv("tiobeF.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
concatenated = <strong>pandas.concat([df1, df2], axis=1)</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Příklad nejdříve vypíše obsah původních datových rámců:</p>

<pre>
                   Ratings  Changep
Language
C                    15.95     0.74
Java                 13.48    -3.18
Python               10.47     0.59
C++                   7.11     1.48
C#                    4.58     1.18
Visual Basic          4.12     0.83
JavaScript            2.54     0.41
PHP                   2.49     0.62
R                     2.37     1.33
SQL                   1.76    -0.19
Go                    1.46     0.24
Swift                 1.38     0.28
Perl                  1.30     0.26
Assembly language     1.30    -0.08
Ruby                  1.24     0.03
MATLAB                1.10     0.04
Groovy                0.99    -0.52
Rust                  0.92     0.55
Objective-C           0.85    -0.99
Dart                  0.77     0.13
&nbsp;
                   Sep 2020  Sep 2019  Change
Language
C                         1         2  change
Java                      2         1  change
Python                    3         3     NaN
C++                       4         4     NaN
C#                        5         5     NaN
Visual Basic              6         6     NaN
JavaScript                7         7     NaN
PHP                       8         9  change
R                         9        19  change
SQL                      10         8  change
Go                       11        14  change
Swift                    12        16  change
Perl                     13        20  change
Assembly language        14        12  change
Ruby                     15        15     NaN
MATLAB                   16        18  change
Groovy                   17        11  change
Rust                     18        33  change
Objective-C              19        10  change
Dart                     20        24  change
</pre>

<p>Poté se vypíše obsah rámce získaného funkcí <strong>concat</strong>:</p>

<pre>
                   Ratings  Changep  Sep 2020  Sep 2019  Change
Language
C                    15.95     0.74         1         2  change
Java                 13.48    -3.18         2         1  change
Python               10.47     0.59         3         3     NaN
C++                   7.11     1.48         4         4     NaN
C#                    4.58     1.18         5         5     NaN
Visual Basic          4.12     0.83         6         6     NaN
JavaScript            2.54     0.41         7         7     NaN
PHP                   2.49     0.62         8         9  change
R                     2.37     1.33         9        19  change
SQL                   1.76    -0.19        10         8  change
Go                    1.46     0.24        11        14  change
Swift                 1.38     0.28        12        16  change
Perl                  1.30     0.26        13        20  change
Assembly language     1.30    -0.08        14        12  change
Ruby                  1.24     0.03        15        15     NaN
MATLAB                1.10     0.04        16        18  change
Groovy                0.99    -0.52        17        11  change
Rust                  0.92     0.55        18        33  change
Objective-C           0.85    -0.99        19        10  change
Dart                  0.77     0.13        20        24  change
</pre>

<p>Spojení po řádcích je nepatrně jednodušší, neboť není zapotřebí specifikovat
hodnotu nepovinného parametru <strong>axis</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeC.tsv", sep="\t")
df2 = pandas.read_csv("tiobeD.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
concatenated = <strong>pandas.concat([df1, df2])</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Příklad opět vypíše obsah původních rámců:</p>

<pre>
                  Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                        1         2  change    15.95     0.74
Java                     2         1  change    13.48    -3.18
Python                   3         3     NaN    10.47     0.59
C++                      4         4     NaN     7.11     1.48
C#                       5         5     NaN     4.58     1.18
Visual Basic             6         6     NaN     4.12     0.83
JavaScript               7         7     NaN     2.54     0.41
PHP                      8         9  change     2.49     0.62
R                        9        19  change     2.37     1.33
SQL                     10         8  change     1.76    -0.19
&nbsp;
                  Sep 2020  Sep 2019  Change  Ratings  Changep
Language
Go                      11        14  change     1.46     0.24
Swift                   12        16  change     1.38     0.28
Perl                    13        20  change     1.30     0.26
Assembly language       14        12  change     1.30    -0.08
Ruby                    15        15     NaN     1.24     0.03
MATLAB                  16        18  change     1.10     0.04
Groovy                  17        11  change     0.99    -0.52
Rust                    18        33  change     0.92     0.55
Objective-C             19        10  change     0.85    -0.99
Dart                    20        24  change     0.77     0.13
</pre>

<p>A následně rámec získaný spojením přes index:</p>

<pre>
                   Sep 2020  Sep 2019  Change  Ratings  Changep
Language
C                         1         2  change    15.95     0.74
Java                      2         1  change    13.48    -3.18
Python                    3         3     NaN    10.47     0.59
C++                       4         4     NaN     7.11     1.48
C#                        5         5     NaN     4.58     1.18
Visual Basic              6         6     NaN     4.12     0.83
JavaScript                7         7     NaN     2.54     0.41
PHP                       8         9  change     2.49     0.62
R                         9        19  change     2.37     1.33
SQL                      10         8  change     1.76    -0.19
Go                       11        14  change     1.46     0.24
Swift                    12        16  change     1.38     0.28
Perl                     13        20  change     1.30     0.26
Assembly language        14        12  change     1.30    -0.08
Ruby                     15        15     NaN     1.24     0.03
MATLAB                   16        18  change     1.10     0.04
Groovy                   17        11  change     0.99    -0.52
Rust                     18        33  change     0.92     0.55
Objective-C              19        10  change     0.85    -0.99
Dart                     20        24  change     0.77     0.13
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Funkce <strong>merge</strong></h2>

<p>Velmi často se setkáme s&nbsp;nutností spojit dvě tabulky, které sice
obsahují shodné sloupce, ovšem ne všechny řádky (resp.&nbsp;záznamy) nalezneme
v&nbsp;obou spojovaných tabulkách. Taková operace je zcela běžná v&nbsp;oblasti
relačních databází (přesněji řečeno v&nbsp;SQL databázích), kde pro ni existuje
i klauzule <strong>JOIN</strong>. Podle toho, jakým způsobem jsou do výsledku
zařazeny ty záznamy, které nejsou nalezeny v&nbsp;obou spojovaných tabulkách,
rozlišujeme:</p>

<ol>
<li>vnitřní spojení (<i>inner join</i>)</li>
<li>vnější spojení (<i>outer join</i>)</li>
</ol>

<p>Vnější spojení je dále děleno na:</p>

<ol>
<li>úplně vnější spojení (<i>outer join</i>)</li>
<li>vnější spojení zleva (<i>left join</i>)</li>
<li>vnější spojení zprava (<i>right join</i>)</li>
</ol>

<p>Tato operace je v&nbsp;knihovně Pandas realizována funkcí nazvanou
<strong>merge</strong>; současně se jedná o jednu z&nbsp;funkcí, která dokáže
do značné míry konfigurovat přesný postup operace spojení dvou datových
rámců:</p>

<pre>
<strong>merge</strong>(left, right, how:str='inner', on=None, left_on=None, right_on=None, left_index:bool=False, right_index:bool=False, sort:bool=False, suffixes=('_x', '_y'), copy:bool=True, indicator:bool=False, validate=None) -&gt; 'DataFrame'
    Merge DataFrame or named Series objects with a database-style join.
&nbsp;
    The join is done on columns or indexes. If joining columns on
    columns, the DataFrame indexes *will be ignored*. Otherwise if joining indexes
    on indexes or indexes on a column or columns, the index will be passed on.
&nbsp;
    Parameters
    ----------
    left : DataFrame
    right : DataFrame or named Series
        Object to merge with.
    how : {'left', 'right', 'outer', 'inner'}, default 'inner'
        Type of merge to be performed.
&nbsp;
        * left: use only keys from left frame, similar to a SQL left outer join;
          preserve key order.
        * right: use only keys from right frame, similar to a SQL right outer join;
          preserve key order.
        * outer: use union of keys from both frames, similar to a SQL full outer
          join; sort keys lexicographically.
        * inner: use intersection of keys from both frames, similar to a SQL inner
          join; preserve the order of the left keys.
    on : label or list
        Column or index level names to join on. These must be found in both
        DataFrames. If `on` is None and not merging on indexes then this defaults
        to the intersection of the columns in both DataFrames.
    left_on : label or list, or array-like
        Column or index level names to join on in the left DataFrame. Can also
        be an array or list of arrays of the length of the left DataFrame.
        These arrays are treated as if they are columns.
    right_on : label or list, or array-like
        Column or index level names to join on in the right DataFrame. Can also
        be an array or list of arrays of the length of the right DataFrame.
        These arrays are treated as if they are columns.
    left_index : bool, default False
        Use the index from the left DataFrame as the join key(s). If it is a
        MultiIndex, the number of keys in the other DataFrame (either the index
    right_index : bool, default False
        Use the index from the right DataFrame as the join key. Same caveats as
        left_index.
    sort : bool, default False
        Sort the join keys lexicographically in the result DataFrame. If False,
        the order of the join keys depends on the join type (how keyword).
    suffixes : list-like, default is ("_x", "_y")
        A length-2 sequence where each element is optionally a string
        indicating the suffix to add to overlapping column names in
        `left` and `right` respectively. Pass a value of `None` instead
        of a string to indicate that the column name from `left` or
        `right` should be left as-is, with no suffix. At least one of the
        values must not be None.
    copy : bool, default True
        If False, avoid copy if possible.
    indicator : bool or str, default False
        If True, adds a column to the output DataFrame called "_merge" with
        information on the source of each row. The column can be given a different
        name by providing a string argument. The column will have a Categorical
        type with the value of "left_only" for observations whose merge key only
        appears in the left DataFrame, "right_only" for observations
        whose merge key only appears in the right DataFrame, and "both"
        if the observation's merge key is found in both DataFrames.
</pre>

<p>Vzhledem k&nbsp;velké univerzálnosti této funkce si ukážeme její použití na
sedmici demonstračních příkladů. Použijeme přitom datové rámce, které vzniknou
načtením dvojice tabulek, které mají některé řádky shodné a jiné naopak
chybí.</p>

<p><a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv">V&nbsp;první
tabulce</a> je patnáct řádků původně získaných z&nbsp;Tiobe indexu:</p>

<pre>
Sep 2019       Change        Language           Ratings        Changep
2              change        C                  15.95          +0.74
1              change        Java               13.48          -3.18
3                            Python             10.47          +0.59
4                            C++                7.11           +1.48
5                            C#                 4.58           +1.18
6                            Visual Basic       4.12           +0.83
7                            JavaScript         2.54           +0.41
9              change        PHP                2.49           +0.62
19             change        R                  2.37           +1.33
8              change        SQL                1.76           -0.19
14             change        Go                 1.46           +0.24
16             change        Swift              1.38           +0.28
20             change        Perl               1.30           +0.26
12             change        Assembly language  1.30           -0.08
15                           Ruby               1.24           +0.03
</pre>

<p><a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv">Ve
druhé tabulce</a> je taktéž patnáct řádků původně získaných z&nbsp;Tiobe
indexu, ovšem posledních pět řádků je od předchozí tabulky odlišných:</p>

<pre>
Sep 2020       Change        Language           Ratings        Changep
1              change        C                  15.95          +0.74
2              change        Java               13.48          -3.18
3                            Python             10.47          +0.59
4                            C++                7.11           +1.48
5                            C#                 4.58           +1.18
6                            Visual Basic       4.12           +0.83
7                            JavaScript         2.54           +0.41
8              change        PHP                2.49           +0.62
9              change        R                  2.37           +1.33
10             change        SQL                1.76           -0.19
16             change        MATLAB             1.10           +0.04
17             change        Groovy             0.99           -0.52
18             change        Rust               0.92           +0.55
19             change        Objective-C        0.85           -0.99
20             change        Dart               0.77           +0.13
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Inner join (vnitřní spojení) založený na funkci <strong>merge</strong></h2>

<p>Operace vnitřního spojení neboli <i>inner join</i> dokáže automaticky spojit
ty řádky tabulek, které mají totožný obsah. Současně jsou i identifikovány
sloupce se shodným názvem a typem (pokud neurčíme jinak). Podívejme se nyní na
způsob provedení této operace u datových rámců, které mají implicitní
(celočíselné) indexy:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2)</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Výsledný datový rámec obsahuje pouze deset řádků obsažených v&nbsp;levém i
pravém rámci vstupujícím do operace <strong>JOIN</strong>:</p>

<pre>
   Sep 2019  Change      Language  Ratings  Changep  Sep 2020
0         2  change             C    15.95     0.74         1
1         1  change          Java    13.48    -3.18         2
2         3     NaN        Python    10.47     0.59         3
3         4     NaN           C++     7.11     1.48         4
4         5     NaN            C#     4.58     1.18         5
5         6     NaN  Visual Basic     4.12     0.83         6
6         7     NaN    JavaScript     2.54     0.41         7
7         9  change           PHP     2.49     0.62         8
8        19  change             R     2.37     1.33         9
9         8  change           SQL     1.76    -0.19        10
</pre>

<p>Spojení dvou datových rámců s&nbsp;explicitně nastavenými indexy získanými
ze sloupce &bdquo;Language&ldquo;:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2)</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Povšimněte si, že v&nbsp;tomto případě (ovšem i v&nbsp;příkladu předchozím!)
došlo k&nbsp;odstranění původních indexů &ndash; ty byly nahrazeny indexem
celočíselným založeným na generátoru <strong>range</strong>:</p>

<pre>
   Sep 2019  Change  Ratings  Changep  Sep 2020
0         2  change    15.95     0.74         1
1         1  change    13.48    -3.18         2
2         3     NaN    10.47     0.59         3
3         4     NaN     7.11     1.48         4
4         5     NaN     4.58     1.18         5
5         6     NaN     4.12     0.83         6
6         7     NaN     2.54     0.41         7
7         9  change     2.49     0.62         8
8        19  change     2.37     1.33         9
9         8  change     1.76    -0.19        10
</pre>

<p>Použití indexů si ovšem můžeme vynutit nepovinnými parametry
<strong>left_index</strong> a <strong>right_index</strong> nastavenými na
hodnotu <strong>True</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2, left_index=True, right_index=True)</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Nyní bude výsledek velmi odlišný, protože bude obsahovat dvojnásobné
množství sloupců &ndash; ovšem datové rámce budou korektně spojeny na základě
indexů:</p>

<pre>
              Sep 2019 Change_x  Ratings_x  ...  Change_y  Ratings_y Changep_y
Language
C                    2   change      15.95  ...    change      15.95      0.74
Java                 1   change      13.48  ...    change      13.48     -3.18
Python               3      NaN      10.47  ...       NaN      10.47      0.59
C++                  4      NaN       7.11  ...       NaN       7.11      1.48
C#                   5      NaN       4.58  ...       NaN       4.58      1.18
Visual Basic         6      NaN       4.12  ...       NaN       4.12      0.83
JavaScript           7      NaN       2.54  ...       NaN       2.54      0.41
PHP                  9   change       2.49  ...    change       2.49      0.62
R                   19   change       2.37  ...    change       2.37      1.33
SQL                  8   change       1.76  ...    change       1.76     -0.19
&nbsp;
[10 rows x 8 columns]
</pre>

<p>Předchozí demonstrační příklad lze rozšířit specifikací těch sloupců, které
se skutečně mají spojit. To zařizuje nepovinný parametr <strong>on</strong>
(což opět připomíná SQL konstrukci <strong>JOIN</strong> xxx
<strong>ON</strong>):</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2, left_index=True, right_index=True,</strong>
                      <strong>on=["Change", "Ratings", "Changep"])</strong>

<i># výpis výsledku</i>
print(merged)
</pre>

<p>Výsledek se asi nejvíce blíží ideálu &ndash; jsou zachovány indexy a
současně nedošlo ke zdvojení všech sloupců v&nbsp;datovém rámci:</p>

<pre>
              Sep 2019  Change  Ratings  Changep  Sep 2020
Language
C                    2  change    15.95     0.74         1
Java                 1  change    13.48    -3.18         2
Python               3     NaN    10.47     0.59         3
C++                  4     NaN     7.11     1.48         4
C#                   5     NaN     4.58     1.18         5
Visual Basic         6     NaN     4.12     0.83         6
JavaScript           7     NaN     2.54     0.41         7
PHP                  9  change     2.49     0.62         8
R                   19  change     2.37     1.33         9
SQL                  8  change     1.76    -0.19        10
</pre>

<p><div class="rs-tip-major">Poznámka: pro úplnost si ještě můžete vyzkoušet co
se stane ve chvíli, kdy v&nbsp;levém nebo pravém datovém rámci chybí celý
sloupec.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Left join (vnější spojení &bdquo;zleva&ldquo;) založený na funkci <strong>merge</strong></h2>

<p>Ukažme si nyní způsob provedení vnějšího spojení dvou datových rámců zleva.
Toto spojení je specifikováno parametrem <strong>how</strong> nastaveným na
hodnotu &bdquo;left&ldquo; (jedná se o řetězec). Ve výsledném datovém rámci
budou za všech okolností všechny řádky z&nbsp;levého rámce, a to i ve chvíli,
kdy k&nbsp;nim nebyly nalezeny odpovídající řádky v&nbsp;pravém rámci:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2, left_index=True, right_index=True,</strong>
                      <strong>how="left",</strong>
                      <strong>on=["Change", "Ratings", "Changep"])</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Ve výsledném datovém rámci je po spojení uloženo celkem patnáct řádků,
protože byly přidány i všechny řádky z&nbsp;prvního (levého) datového rámce,
které ovšem nemají všechny potřebné údaje ve sloupci <strong>Sep 2020</strong>.
Proto je namísto těchto hodnot použita <strong>NaN</strong> (&bdquo;Not a
Number&ldquo;):</p>

<pre>
                   Sep 2019  Change  Ratings  Changep  Sep 2020
Language
C                         2  change    15.95     0.74       1.0
Java                      1  change    13.48    -3.18       2.0
Python                    3     NaN    10.47     0.59       3.0
C++                       4     NaN     7.11     1.48       4.0
C#                        5     NaN     4.58     1.18       5.0
Visual Basic              6     NaN     4.12     0.83       6.0
JavaScript                7     NaN     2.54     0.41       7.0
PHP                       9  change     2.49     0.62       8.0
R                        19  change     2.37     1.33       9.0
SQL                       8  change     1.76    -0.19      10.0
Go                       14  change     1.46     0.24       NaN
Swift                    16  change     1.38     0.28       NaN
Perl                     20  change     1.30     0.26       NaN
Assembly language        12  change     1.30    -0.08       NaN
Ruby                     15     NaN     1.24     0.03       NaN
</pre>

<pre>
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Right join (vnější spojení &bdquo;zprava&ldquo;) založený na funkci <strong>merge</strong></h2>

<p>Následuje ukázka vnějšího spojení dvou datových rámců zprava. Toto spojení
je specifikováno parametrem <strong>how</strong> nastaveným na hodnotu
&bdquo;right&ldquo; (opět se jedná o řetězec). Ve výsledném datovém rámci budou
za všech okolností všechny řádky z&nbsp;pravého rámce, a to i ve chvíli, kdy
k&nbsp;nim nebyly nalezeny odpovídající řádky v&nbsp;levém rámci:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2, left_index=True, right_index=True,</strong>
                      <strong>how="right",</strong>
                      <strong>on=["Change", "Ratings", "Changep"])</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Výsledný datový rámec bude (opět) obsahovat patnáct řádků, ale v&nbsp;tomto
případě se jedná o odlišné řádky, než tomu bylo v&nbsp;příkladu předchozím:</p>

<pre>
              Sep 2019  Change  Ratings  Changep  Sep 2020
Language
C                  2.0  change    15.95     0.74         1
Java               1.0  change    13.48    -3.18         2
Python             3.0     NaN    10.47     0.59         3
C++                4.0     NaN     7.11     1.48         4
C#                 5.0     NaN     4.58     1.18         5
Visual Basic       6.0     NaN     4.12     0.83         6
JavaScript         7.0     NaN     2.54     0.41         7
PHP                9.0  change     2.49     0.62         8
R                 19.0  change     2.37     1.33         9
SQL                8.0  change     1.76    -0.19        10
MATLAB             NaN     NaN      NaN      NaN        16
Groovy             NaN     NaN      NaN      NaN        17
Rust               NaN     NaN      NaN      NaN        18
Objective-C        NaN     NaN      NaN      NaN        19
Dart               NaN     NaN      NaN      NaN        20
</pre>

<p><div class="rs-tip-major">Poznámka: chybějící hodnoty jsou doplněny na
hodnotu <strong>NaN</strong>.</div></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Outer join (vnější spojení) založený na funkci <strong>merge</strong></h2>

<p>Zbývá nám popis poslední varianty spojení datových rámců &ndash; plný outer
join specifikovaný hodnotou &bdquo;outer&ldquo; předanou do pojmenovaného
parametru <strong>how</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>pandas.merge(df1, df2, left_index=True, right_index=True,</strong>
                      <strong>how="outer",</strong>
                      <strong>on=["Change", "Ratings", "Changep"])</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Nyní bude výsledný datový rámec obsahovat všech dvacet řádků, ovšem některé
sloupce musely být doplněny hodnotami <strong>NaN</strong>:</p>

<pre>
                   Sep 2019  Change  Ratings  Changep  Sep 2020
Language
Assembly language      12.0  change     1.30    -0.08       NaN
C                       2.0  change    15.95     0.74       1.0
C#                      5.0     NaN     4.58     1.18       5.0
C++                     4.0     NaN     7.11     1.48       4.0
Dart                    NaN  change     0.77     0.13      20.0
Go                     14.0  change     1.46     0.24       NaN
Groovy                  NaN  change     0.99    -0.52      17.0
Java                    1.0  change    13.48    -3.18       2.0
JavaScript              7.0     NaN     2.54     0.41       7.0
MATLAB                  NaN  change     1.10     0.04      16.0
Objective-C             NaN  change     0.85    -0.99      19.0
PHP                     9.0  change     2.49     0.62       8.0
Perl                   20.0  change     1.30     0.26       NaN
Python                  3.0     NaN    10.47     0.59       3.0
R                      19.0  change     2.37     1.33       9.0
Ruby                   15.0     NaN     1.24     0.03       NaN
Rust                    NaN  change     0.92     0.55      18.0
SQL                     8.0  change     1.76    -0.19      10.0
Swift                  16.0  change     1.38     0.28       NaN
Visual Basic            6.0     NaN     4.12     0.83       6.0
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Použití metody <strong>join</strong> pro spojení dvou datových rámců</h2>

<p>Namísto <i>funkce</i> <strong>merge</strong>, která dokáže spojit dva datové
rámce, které jsou jí předány formou parametrů, existuje i <i>metoda</i> objektů
typu <strong>DataFrame</strong>, která se jmenuje <strong>join</strong>:</p>

<pre>
<strong>join</strong>(other, on=None, how='left', lsuffix='', rsuffix='', sort=False)
-&gt; 'DataFrame' method of pandas.core.frame.DataFrame instance
&nbsp;    
    Join columns of another DataFrame.
&nbsp;    
    Join columns with `other` DataFrame either on index or on a key
    column. Efficiently join multiple DataFrame objects by index at once by
    passing a list.
</pre>

<p>Po funkční stránce se jedná o zjednodušenou variantu funkce
<strong>merge</strong>, protože opět dojde ke spojení rámců s&nbsp;využitím
zvolené varianty, ovšem některé parametry chybí resp.&nbsp;nedávají
v&nbsp;daném kontextu smysl. Implicitně je zjištění korespondujících řádků obou
spojovaných datových rámců zajištěno na základě indexů.</p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Inner join (vnitřní spojení) založený na metodě <strong>join</strong></h2>

<p>Způsob použití metody <strong>join</strong> si nejdříve ukážeme na příkladu
vnitřního spojení, tedy na operaci nazývané <i>inner join</i>. Použijeme,
podobně jako v&nbsp;předchozích demonstračních příkladech, datové soubory
&bdquo;tiobeA.tsv&ldquo; a &bdquo;tiobeB.tsv&ldquo;. Povšimněte si specifikace
suffixů, které budou přidány ke jménům sloupců:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>df1.join(df2, how="inner", lsuffix="_left", rsuffix="_right")</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Výsledkem bude nový datový rámec s&nbsp;deseti řádky a osmi sloupci &ndash;
sloupce z&nbsp;prvního rámce tedy nejsou spojeny se sloupci z&nbsp;rámce
druhého a odlišeny jsou názvem (resp.&nbsp;suffixem v&nbsp;názvu):</p>

<pre>
              Sep 2019 Change_left  ...  Ratings_right  Changep_right
Language
C                    2      change  ...          15.95           0.74
Java                 1      change  ...          13.48          -3.18
Python               3         NaN  ...          10.47           0.59
C++                  4         NaN  ...           7.11           1.48
C#                   5         NaN  ...           4.58           1.18
Visual Basic         6         NaN  ...           4.12           0.83
JavaScript           7         NaN  ...           2.54           0.41
PHP                  9      change  ...           2.49           0.62
R                   19      change  ...           2.37           1.33
SQL                  8      change  ...           1.76          -0.19
&nbsp;
[10 rows x 8 columns]
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Left join (vnější spojení &bdquo;zleva&ldquo;) založený na metodě <strong>join</strong></h2>

<p>Vnější spojení dvou datových rámců zleva neboli <i>left join</i> se opět
provede metodou <strong>join</strong>, ovšem lišit se bude parametr
<strong>how</strong>. Ostatní části demonstračního příkladu zůstanou
nezměněné:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>df1.join(df2, how="left", lsuffix="_left", rsuffix="_right")</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Opět vznikne datový rámec s&nbsp;dvojnásobným množstvím sloupců, ovšem
důležitější je, že nyní obsahuje 15 řádků &ndash; přidány byly ty řádky
z&nbsp;levého datového rámce, které neexistují v&nbsp;rámci pravém:</p>

<pre>
                   Sep 2019 Change_left  ...  Ratings_right  Changep_right
Language
C                         2      change  ...          15.95           0.74
Java                      1      change  ...          13.48          -3.18
Python                    3         NaN  ...          10.47           0.59
C++                       4         NaN  ...           7.11           1.48
C#                        5         NaN  ...           4.58           1.18
Visual Basic              6         NaN  ...           4.12           0.83
JavaScript                7         NaN  ...           2.54           0.41
PHP                       9      change  ...           2.49           0.62
R                        19      change  ...           2.37           1.33
SQL                       8      change  ...           1.76          -0.19
Go                       14      change  ...            NaN            NaN
Swift                    16      change  ...            NaN            NaN
Perl                     20      change  ...            NaN            NaN
Assembly language        12      change  ...            NaN            NaN
Ruby                     15         NaN  ...            NaN            NaN
&nbsp;
[15 rows x 8 columns]
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Right join (vnější spojení &bdquo;zprava&ldquo;) založený na metodě <strong>join</strong></h2>

<p>Pochopitelně si ukážeme i způsob provedení vnějšího spojení dvou datových
rámců zprava, tedy <i>right join</i>. Samotný zdrojový kód demonstračního
příkladu se bude lišit pouze odlišnou hodnotou parametru <strong>how</strong>
předaného metodě <strong>join</strong>:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>df1.join(df2, how="right", lsuffix="_left", rsuffix="_right")</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Výsledek nyní bude obsahovat patnáct řádků, protože do výsledného rámce byly
přidány i ty řádky, které existují pouze v&nbsp;pravém (druhém) datovém rámci.
Ty řádky, které existují pouze v&nbsp;levém rámci, nejsou do výsledku
zařazeny:</p>

<pre>
              Sep 2019 Change_left  ...  Ratings_right  Changep_right
Language
C                  2.0      change  ...          15.95           0.74
Java               1.0      change  ...          13.48          -3.18
Python             3.0         NaN  ...          10.47           0.59
C++                4.0         NaN  ...           7.11           1.48
C#                 5.0         NaN  ...           4.58           1.18
Visual Basic       6.0         NaN  ...           4.12           0.83
JavaScript         7.0         NaN  ...           2.54           0.41
PHP                9.0      change  ...           2.49           0.62
R                 19.0      change  ...           2.37           1.33
SQL                8.0      change  ...           1.76          -0.19
MATLAB             NaN         NaN  ...           1.10           0.04
Groovy             NaN         NaN  ...           0.99          -0.52
Rust               NaN         NaN  ...           0.92           0.55
Objective-C        NaN         NaN  ...           0.85          -0.99
Dart               NaN         NaN  ...           0.77           0.13
&nbsp;
[15 rows x 8 columns]
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Outer join (vnější spojení) založený na metodě <strong>join</strong></h2>

<p>Poslední formou spojení dvou datových rámců je úplné vnější spojení neboli
<i>outer join</i>. Opět si ukážeme, jakým způsobem se tato operace provádí:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import pandas
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = pandas.read_csv("tiobeA.tsv", sep="\t")
df2 = pandas.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># specifikace indexu - má se získat ze sloupce Language</i>
df1.set_index("Language", inplace=True)
df2.set_index("Language", inplace=True)
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = <strong>df1.join(df2, how="outer", lsuffix="_left", rsuffix="_right")</strong>
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<p>Nyní bude výsledný datový rámec obsahovat všech dvacet řádků, přičemž
některé řádky jsou získány z&nbsp;obou datových rámců a další existují pouze
v&nbsp;rámci levém nebo naopak v&nbsp;rámci pravém:</p>

<pre>
                   Sep 2019 Change_left  ...  Ratings_right  Changep_right
Language
Assembly language      12.0      change  ...            NaN            NaN
C                       2.0      change  ...          15.95           0.74
C#                      5.0         NaN  ...           4.58           1.18
C++                     4.0         NaN  ...           7.11           1.48
Dart                    NaN         NaN  ...           0.77           0.13
Go                     14.0      change  ...            NaN            NaN
Groovy                  NaN         NaN  ...           0.99          -0.52
Java                    1.0      change  ...          13.48          -3.18
JavaScript              7.0         NaN  ...           2.54           0.41
MATLAB                  NaN         NaN  ...           1.10           0.04
Objective-C             NaN         NaN  ...           0.85          -0.99
PHP                     9.0      change  ...           2.49           0.62
Perl                   20.0      change  ...            NaN            NaN
Python                  3.0         NaN  ...          10.47           0.59
R                      19.0      change  ...           2.37           1.33
Ruby                   15.0         NaN  ...            NaN            NaN
Rust                    NaN         NaN  ...           0.92           0.55
SQL                     8.0      change  ...           1.76          -0.19
Swift                  16.0      change  ...            NaN            NaN
Visual Basic            6.0         NaN  ...           4.12           0.83
&nbsp;
[20 rows x 8 columns]
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů určených pro
Python 3 a nejnovější stabilní verzi knihovny Pandas byly uloženy do Git
repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th>  #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td>  1</td><td>data_frame_info_1.py</td><td>výpis obsahu datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_1.py</a></td></tr>
<tr><td>  2</td><td>data_frame_info_2.py</td><td>výpis prvních pěti řádků z&nbsp;datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_2.py</a></td></tr>
<tr><td>  3</td><td>data_frame_info_3.py</td><td>výpis informace o typech sloupců v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_3.py</a></td></tr>
<tr><td>  4</td><td>data_frame_info_4.py</td><td>výpis uspořádaného seznamu jmen všech sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_4.py</a></td></tr>
<tr><td>  5</td><td>data_frame_info_5.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_5.py</a></td></tr>
<tr><td>  6</td><td>data_frame_info_6.py</td><td>podrobnější informace o datovém rámci, obsazení paměti atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_6.py</a></td></tr>
<tr><td>  7</td><td>data_frame_info_7.py</td><td>popis os, počtu dimenzí, tvaru a velikosti datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_7.py</a></td></tr>
<tr><td>  8</td><td>data_frame_info_8.py</td><td>základní statistické informace o datech uložených v&nbsp;rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_8.py</a></td></tr>
<tr><td>  9</td><td>data_frame_info_9.py</td><td>výsledkem metody <strong>info</strong> je nový datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_info_9.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 10</td><td>plot_kafka_lags.py</td><td>zobrazení jednoduchého grafu bez použití knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags.py</a></td></tr>
<tr><td> 11</td><td>plot_kafka_lags_pandas.py</td><td>zobrazení jednoduchého grafu s&nbsp;použitím knihovny Pandas</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas.py</a></td></tr>
<tr><td> 12</td><td>plot_kafka_lags_pandas_2.py</td><td>snazší způsob vykreslení grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_2.py</a></td></tr>
<tr><td> 13</td><td>plot_kafka_lags_pandas_sma_3.py</td><td>přidání klouzavého průměru do grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3.py</a></td></tr>
<tr><td> 14</td><td>plot_kafka_lags_pandas_sma_3_.py</td><td>vylepšení předchozího příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_3_.py</a></td></tr>
<tr><td> 15</td><td>plot_kafka_lags_pandas_sma_10.py</td><td>klouzavý průměr přes deset hodnot</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_kafka_lags_pandas_sma_10.py</a></td></tr>
<tr><td> 16</td><td>plot_benchmark_results_line_chart.py</td><td>liniový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_line_chart.py</a></td></tr>
<tr><td> 17</td><td>plot_benchmark_results_bar_chart_1.py</td><td>sloupcový graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_1.py</a></td></tr>
<tr><td> 18</td><td>plot_benchmark_results_bar_chart_2.py</td><td>výběr části datového rámce při vykreslování grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_2.py</a></td></tr>
<tr><td> 19</td><td>plot_benchmark_results_bar_chart_3.py</td><td>zobecnění předchozího příkladu &ndash; zpracování numerických dat ve všech sloupcích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_benchmark_results_bar_chart_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 20</td><td>check_types_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_1.py</a></td></tr>
<tr><td> 21</td><td>check_types_2.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_2.py</a></td></tr>
<tr><td> 22</td><td>check_types_3.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_3.py</a></td></tr>
<tr><td> 23</td><td>check_types_4.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_4.py</a></td></tr>
<tr><td> 24</td><td>check_types_5.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>Voluptuous</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/check_types_5.py</a></td></tr>
<tr><td> 25</td><td>opulent_pandas_1.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_1.py</a></td></tr>
<tr><td> 26</td><td>opulent_pandas_2.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_2.py</a></td></tr>
<tr><td> 27</td><td>opulent_pandas_3.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_3.py</a></td></tr>
<tr><td> 28</td><td>opulent_pandas_4.py</td><td>kontrola typů sloupců s&nbsp;využitím knihovny <i>opulent-pandas</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/opulent_pandas_4.py</a></td></tr>
<tr><td> &nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 29</td><td>series_01.py</td><td>konstrukce datové řady z n-tice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_01.py</a></td></tr>
<tr><td> 30</td><td>series_02.py</td><td>konstrukce datové řady z n-tice, specifikace indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_02.py</a></td></tr>
<tr><td> 31</td><td>series_03.py</td><td>konstrukce datové řady generátorem, specifikace indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_03.py</a></td></tr>
<tr><td> 32</td><td>series_04.py</td><td>příliš malý počet indexů předaných konstruktoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_04.py</a></td></tr>
<tr><td> 33</td><td>series_05.py</td><td>konstrukce datové řady ze slovníku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_05.py</a></td></tr>
<tr><td> 34</td><td>series_06.py</td><td>konstrukce datové řady ze slovníku, vliv pořadí klíčů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_06.py</a></td></tr>
<tr><td> 35</td><td>series_07.py</td><td>konstrukce datové řady z&nbsp;datového typu OrderedDict</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_07.py</a></td></tr>
<tr><td> 36</td><td>series_08.py</td><td>vytvoření nové datové řady z&nbsp;řady stávající &ndash; výběr prvků na základě jejich indexů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_08.py</a></td></tr>
<tr><td> 37</td><td>series_09.py</td><td>základní statistické informace o prvcích uložených v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_09.py</a></td></tr>
<tr><td> 38</td><td>series_10.py</td><td>vektorové operace nad všemi prvky datové řady</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_10.py</a></td></tr>
<tr><td> 39</td><td>series_11.py</td><td>vektorové operace nad všemi prvky datové řady &ndash; predikáty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_11.py</a></td></tr>
<tr><td> 40</td><td>series_12.py</td><td>vektorové operace nad dvojicí datových řad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_12.py</a></td></tr>
<tr><td> 41</td><td>series_13.py</td><td>výběr prvků na základě podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_13.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_13.py</a></td></tr>
<tr><td> 42</td><td>series_14.py</td><td>výběr prvků na základě podmínky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_14.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_14.py</a></td></tr>
<tr><td> 43</td><td>series_15.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_15.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_15.py</a></td></tr>
<tr><td> 44</td><td>series_16.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_16.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_16.py</a></td></tr>
<tr><td> 45</td><td>series_17.py</td><td>převody mezi různými datovými typy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_17.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_17.py</a></td></tr>
<tr><td> 46</td><td>series_18.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_18.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_18.py</a></td></tr>
<tr><td> 47</td><td>series_19.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_19.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_19.py</a></td></tr>
<tr><td> 48</td><td>series_20.py</td><td>převody mezi různými datovými typy &ndash; s&nbsp;hodnotami <strong>NaN</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_20.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_20.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 49</td><td>plot_series_01.py</td><td>vykreslení průběhu funkce sin, hodnoty jsou uloženy v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_01.py</a></td></tr>
<tr><td> 50</td><td>plot_series_02.py</td><td>odlišný typ grafu s&nbsp;vyplněnou plochou pod průběhem funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_02.py</a></td></tr>
<tr><td> 51</td><td>plot_series_03.py</td><td>sloupcový diagram s&nbsp;vertikálně orientovanými sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_03.py</a></td></tr>
<tr><td> 52</td><td>plot_series_04.py</td><td>sloupcový diagram s&nbsp;horizontálně orientovanými sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_04.py</a></td></tr>
<tr><td> 53</td><td>plot_series_05.py</td><td>graf s&nbsp;KDE &ndash; kernel density estimation</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_05.py</a></td></tr>
<tr><td> 54</td><td>plot_series_06.py</td><td>vykreslení koláčového grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_06.py</a></td></tr>
<tr><td> 55</td><td>plot_series_07.py</td><td>použití metody <strong>Series.map</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_07.py</a></td></tr>
<tr><td> 56</td><td>plot_series_08.py</td><td>vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_08.py</a></td></tr>
<tr><td> 57</td><td>plot_series_09.py</td><td>vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_09.py</a></td></tr>
<tr><td> 58</td><td>plot_series_10.py</td><td>Gaussovské vyhlazení grafu s&nbsp;průběhem zašuměného signálu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_10.py</a></td></tr>
<tr><td> 59</td><td>plot_series_11.py</td><td>vykreslení tří průběhů do jediného grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_11.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_11.py</a></td></tr>
<tr><td> 60</td><td>plot_series_12.py</td><td>vykreslení tří podgrafů do jednoho grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_12.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/plot_series_12.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 61</td><td>series_21_map.py</td><td>postupná aplikace vybrané funkce na všechny prvky datové řady (lambda)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_21_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_21_map.py</a></td></tr>
<tr><td> 62</td><td>series_22_map.py</td><td>postupná aplikace vybrané funkce na všechny prvky datové řady (reference na funkci)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_22_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_22_map.py</a></td></tr>
<tr><td> 63</td><td>series_23_map.py</td><td>použití slovníku ve funkci mapy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_23_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_23_map.py</a></td></tr>
<tr><td> 64</td><td>series_24_map.py</td><td>použití slovníku ve funkci mapy (zkrácená varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_24_map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_24_map.py</a></td></tr>
<tr><td> 65</td><td>series_25_transform.py</td><td>transformace dat v&nbsp;datové řadě s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_25_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_25_transform.py</a></td></tr>
<tr><td> 66</td><td>series_26_transform.py</td><td>vytvoření více sloupců s&nbsp;transformovanými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_26_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_26_transform.py</a></td></tr>
<tr><td> 67</td><td>series_27_transform.py</td><td>vytvoření více sloupců s&nbsp;transformovanými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_27_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_27_transform.py</a></td></tr>
<tr><td> 68</td><td>series_28_transform.py</td><td>použití jmen funkcí ve formě řetězců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_28_transform.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_28_transform.py</a></td></tr>
<tr><td> 69</td><td>series_29_agg.py</td><td>agregace informací z&nbsp;datové řady: metoda <strong>agg</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_29_agg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_29_agg.py</a></td></tr>
<tr><td> 70</td><td>series_30_agg.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>agg</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_30_agg.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_30_agg.py</a></td></tr>
<tr><td> 71</td><td>series_31_aggregate.py</td><td>agregace informací z&nbsp;datové řady: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_31_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_31_aggregate.py</a></td></tr>
<tr><td> 72</td><td>series_32_aggregate.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_32_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_32_aggregate.py</a></td></tr>
<tr><td> 73</td><td>series_33_combine.py</td><td>kombinace údajů ze dvou datových řad popř.&nbsp;datové řady a skalární hodnoty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_33_combine.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_33_combine.py</a></td></tr>
<tr><td> 74</td><td>series_34_mask.py</td><td>výběr hodnot na základě zadané podmínky metodou <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_34_mask.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_34_mask.py</a></td></tr>
<tr><td> 75</td><td>series_35_mask_inplace_true.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_35_mask_inplace_true.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_35_mask_inplace_true.py</a></td></tr>
<tr><td> 76</td><td>series_36_mask_inplace_false.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>mask</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_36_mask_inplace_false.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_36_mask_inplace_false.py </a></td></tr>
<tr><td> 77</td><td>series_37_where.py</td><td>výběr hodnot na základě zadané podmínky metodou <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_37_where.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_37_where.py</a></td></tr>
<tr><td> 78</td><td>series_38_where_inplace_true.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_38_where_inplace_true.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_38_where_inplace_true.py</a></td></tr>
<tr><td> 79</td><td>series_39_where_inplace_false.py</td><td>vliv nepovinného parametru <strong>inplace</strong> na metodu <strong>where</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_39_where_inplace_false.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_39_where_inplace_false.py</a></td></tr>
<tr><td> 80</td><td>series_40_where_drop.py</td><td>skutečná filtrace dat kombinující <strong>where</strong> a <strong>dropna</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_40_where_drop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_40_where_drop.py</a></td></tr>
<tr><td> 81</td><td>series_41_mask_drop.py</td><td>alternativní způsob založený na kombinaci <strong>mask</strong> a <strong>dropna</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_41_mask_drop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_41_mask_drop.py</a></td></tr>
<tr><td> 82</td><td>series_42_group_by.py</td><td>jedna z&nbsp;variant metody <strong>groupby</strong> aplikovaná na datovou řadu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_42_group_by.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_42_group_by.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 83</td><td>series_items.py</td><td>iterace přes všechny prvky datové řady založená na metodě <strong>items</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_items.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_items.py</a></td></tr>
<tr><td> 84</td><td>series_iteritems.py</td><td>iterace přes všechny prvky datové řady založená na metodě <strong>iteritems</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_iteritems.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/series_iteritems.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 85</td><td>data_frame_01_loading.py</td><td>načtení datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_01_loading.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_01_loading.py</a></td></tr>
<tr><td> 86</td><td>data_frame_02_map_conversion.py</td><td>postupná aplikace vybrané funkce na všechny prvky sloupce datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_02_map_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_02_map_conversion.py</a></td></tr>
<tr><td> 87</td><td>data_frame_03_map_conversion.py</td><td>postupná aplikace vybrané funkce na všechny prvky sloupce datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_03_map_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_03_map_conversion.py</a></td></tr>
<tr><td> 88</td><td>data_frame_04_map_format.py</td><td>naformátování sloupce v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_04_map_format.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_04_map_format.py</a></td></tr>
<tr><td> 89</td><td>data_frame_05_transform_conversion.py</td><td>transformace dat ve sloupci datového rámce s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_05_transform_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_05_transform_conversion.py</a></td></tr>
<tr><td> 90</td><td>data_frame_06_transform_conversion.py</td><td>transformace dat ve sloupci datového rámce s&nbsp;využitím metody <strong>transform</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_06_transform_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_06_transform_conversion.py</a></td></tr>
<tr><td> 91</td><td>data_frame_07_transform_format.py</td><td>naformátování sloupce v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_07_transform_format.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_07_transform_format.py</a></td></tr>
<tr><td> 92</td><td>data_frame_08_aggregate.py</td><td>agregace informací ze sloupce datového rámce: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_08_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_08_aggregate.py</a></td></tr>
<tr><td> 93</td><td>data_frame_09_aggregate.py</td><td>použití jmen funkcí namísto jejich referencí: metoda <strong>aggregate</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_09_aggregate.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_09_aggregate.py</a></td></tr>
<tr><td> 94</td><td>data_frame_10_combine.py</td><td>kombinace údajů ze dvou sloupců datových rámců popř.&nbsp;datové řady a skalární hodnoty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_10_combine.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_10_combine.py</a></td></tr>
<tr><td> 95</td><td>data_frame_append.py</td><td>připojení druhého datového rámce k&nbsp;rámci prvnímu metodou <strong>append</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_append.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_append.py</a></td></tr>
<tr><td> 96</td><td>data_frame_concat_by_columns.py</td><td>spojení dvou datových rámců po sloupcích funkcí <strong>concat</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_columns.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_columns.py</a></td></tr>
<tr><td> 97</td><td>data_frame_concat_by_rows.py</td><td>spojení dvou datových rámců po řádcích funkcí <strong>concat</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_rows.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_concat_by_rows.py</a></td></tr>
<tr><td> 98</td><td>data_frame_join_01_inner_join.py</td><td>inner join (vnitřní spojení) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_01_inner_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_01_inner_join.py</a></td></tr>
<tr><td> 99</td><td>data_frame_join_02_left_join.py</td><td>left join (vnější spojení &bdquo;zleva&ldquo;) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_02_left_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_02_left_join.py</a></td></tr>
<tr><td>100</td><td>data_frame_join_03_right_join.py</td><td>right join (vnější spojení &bdquo;zprava&ldquo;) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_03_right_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_03_right_join.py</a></td></tr>
<tr><td>101</td><td>data_frame_join_04_outer_join.py</td><td>outer join (vnější spojení) založený na metodě <strong>join</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_04_outer_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_join_04_outer_join.py</a></td></tr>
<tr><td>102</td><td>data_frame_merge_01_inner_join.py</td><td>inner join (vnitřní spojení) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_01_inner_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_01_inner_join.py</a></td></tr>
<tr><td>103</td><td>data_frame_merge_02_inner_join_ignore_indexes.py</td><td>ignorování indexů při spojování datových rámců funkcí <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_02_inner_join_ignore_indexes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_02_inner_join_ignore_indexes.py</a></td></tr>
<tr><td>104</td><td>data_frame_merge_03_inner_join_use_indexes.py</td><td>použití indexů při spojování datových rámců funkcí <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_03_inner_join_use_indexes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_03_inner_join_use_indexes.py</a></td></tr>
<tr><td>105</td><td>data_frame_merge_04_inner_join_use_indexes.py</td><td>použití indexů při spojování datových rámců funkcí <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_04_inner_join_use_indexes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_04_inner_join_use_indexes.py</a></td></tr>
<tr><td>106</td><td>data_frame_merge_05_left_join.py</td><td>left join (vnější spojení &bdquo;zleva&ldquo;) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_05_left_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_05_left_join.py</a></td></tr>
<tr><td>107</td><td>data_frame_merge_06_right_join.py</td><td>right join (vnější spojení &bdquo;zprava&ldquo;) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_06_right_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_06_right_join.py</a></td></tr>
<tr><td>108</td><td>data_frame_merge_07_outer_join.py</td><td>outer join (vnější spojení) založený na funkci <strong>merge</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_07_outer_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/data_frame_merge_07_outer_join.py</a></td></tr>
</table>

<p>Některé demonstrační příklady načítají následující soubory s&nbsp;daty:</p>

<table>
<tr><th> #</th><th>Datový soubor</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/integer_values.csv</a></td></tr>
<tr><td> 2</td><td>missing_integer_values.csv</td><td>dvousloupcová tabulka s&nbsp;celými čísly, z&nbsp;nichž některé chybí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/missing_integer_values.csv</a></td></tr>
<tr><td> 3</td><td>timestamps.csv</td><td>tabulka s&nbsp;časovými údaji</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/timestamps.csv</a></td></tr>
<tr><td> 4</td><td>custom_timestamps.csv</td><td>tabulka s&nbsp;časovými údaji používajícími nestandardní formát</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/custom_timestamps.csv</a></td></tr>
<tr><td> 5</td><td>denni_kurz.txt</td><td>semistrukturovaný soubor s&nbsp;nestandardními oddělovači</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/denni_kurz.txt</a></td></tr>
<tr><td> 6</td><td>tiobe.tsv</td><td>data získaná ze stránek Tiobe indexu ve formátu TSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.tsv</a></td></tr>
<tr><td> 7</td><td>tiobe.txt</td><td>data získaná ze stránek Tiobe indexu v&nbsp;textovém formátu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobe.txt</a></td></tr>
<tr><td> 8</td><td>benchmarks1.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks1.tsv</a></td></tr>
<tr><td> 9</td><td>benchmarks2.tsv</td><td>výsledky benchmarků několika implementací Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/benchmarks2.tsv</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>tiobeA.tsv</td><td>tabulka z&nbsp;tiobe.tsv, ovšem pět řádků bylo odstraněno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeA.tsv</a></td></tr>
<tr><td>11</td><td>tiobeB.tsv</td><td>tabulka z&nbsp;tiobe.tsv, ovšem pět (jiných) řádků bylo odstraněno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeB.tsv</a></td></tr>
<tr><td>12</td><td>tiobeC.tsv</td><td>prvních deset řádků z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeC.tsv</a></td></tr>
<tr><td>13</td><td>tiobeD.tsv</td><td>posledních deset řádků z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeD.tsv</a></td></tr>
<tr><td>14</td><td>tiobeE.tsv</td><td>tři sloupce z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeE.tsv</a></td></tr>
<tr><td>15</td><td>tiobeF.tsv</td><td>čtyři sloupce z&nbsp;tabulky &bdquo;tiobe.tsv&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv">https://github.com/tisnik/most-popular-python-libs/blob/master/pandas/tiobeF.tsv</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Combining Data in Pandas With merge(), .join(), and concat()<br />
<a href="https://realpython.com/pandas-merge-join-and-concat/">https://realpython.com/pandas-merge-join-and-concat/</a>
</li>

<li>JOIN<br />
<a href="https://cs.wikipedia.org/wiki/JOIN">https://cs.wikipedia.org/wiki/JOIN</a>
</li>

<li>Plotting with matplotlib<br />
<a href="https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html">https://pandas.pydata.org/pandas-docs/version/0.13/visualization.html</a>
</li>

<li>Plot With Pandas: Python Data Visualization for Beginners<br />
<a href="https://realpython.com/pandas-plot-python/">https://realpython.com/pandas-plot-python/</a>
</li>

<li>Pandas Dataframe: Plot Examples with Matplotlib and Pyplot<br />
<a href="https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot">https://queirozf.com/entries/pandas-dataframe-plot-examples-with-matplotlib-pyplot</a>
</li>

<li>Opulent-Pandas na PyPi<br />
<a href="https://pypi.org/project/opulent-pandas/">https://pypi.org/project/opulent-pandas/</a>
</li>

<li>pandas_validator na PyPi<br />
<a href="https://pypi.org/project/pandas_validator/">https://pypi.org/project/pandas_validator/</a>
</li>

<li>pandas-validator (dokumentace)<br />
<a href="https://pandas-validator.readthedocs.io/en/latest/">https://pandas-validator.readthedocs.io/en/latest/</a>
</li>

<li>7 Best Python Libraries for Validating Data<br />
<a href="https://www.yeahhub.com/7-best-python-libraries-validating-data/">https://www.yeahhub.com/7-best-python-libraries-validating-data/</a>
</li>

<li>Universally unique identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">https://en.wikipedia.org/wiki/Universally_unique_identifier</a>
</li>

<li>Nullable integer data type<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html">https://pandas.pydata.org/pandas-docs/stable/user_guide/integer_na.html</a>
</li>

<li>pandas.read_csv<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html</a>
</li>

<li>How to define format when using pandas to_datetime?<br />
<a href="https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime">https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime</a>
</li>

<li>Pandas : skip rows while reading csv file to a Dataframe using read_csv() in Python<br />
<a href="https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/">https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/</a>
</li>

<li>Skip rows during csv import pandas<br />
<a href="https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas">https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas</a>
</li>

<li>Denni kurz<br />
<a href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>
</li>

<li>UUID objects according to RFC 4122 (knihovna pro Python)<br />
<a href="https://docs.python.org/3.5/library/uuid.html#uuid.uuid4">https://docs.python.org/3.5/library/uuid.html#uuid.uuid4</a>
</li>

<li>Object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Object_identifier">https://en.wikipedia.org/wiki/Object_identifier</a>
</li>

<li>Digital object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Digital_object_identifier">https://en.wikipedia.org/wiki/Digital_object_identifier</a>
</li>

<li>voluptuous na (na PyPi)<br />
<a href="https://pypi.python.org/pypi/voluptuous">https://pypi.python.org/pypi/voluptuous</a>
</li>

<li>Repositář knihovny voluptuous na GitHubu<br />
<a href="https://github.com/alecthomas/voluptuous">https://github.com/alecthomas/voluptuous</a>
</li>

<li>pytest-voluptuous 1.0.2 (na PyPi)<br />
<a href="https://pypi.org/project/pytest-voluptuous/">https://pypi.org/project/pytest-voluptuous/</a>
</li>

<li>pytest-voluptuous (na GitHubu)<br />
<a href="https://github.com/F-Secure/pytest-voluptuous">https://github.com/F-Secure/pytest-voluptuous</a>
</li>

<li>schemagic 0.9.1 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schemagic/0.9.1">https://pypi.python.org/pypi/schemagic/0.9.1</a>
</li>

<li>Schemagic / Schemagic.web (na GitHubu)<br />
<a href="https://github.com/Mechrophile/schemagic">https://github.com/Mechrophile/schemagic</a>
</li>

<li>schema 0.6.7 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schema">https://pypi.python.org/pypi/schema</a>
</li>

<li>schema (na GitHubu)<br />
<a href="https://github.com/keleshev/schema">https://github.com/keleshev/schema</a>
</li>

<li>XML Schema validator and data conversion library for Python<br />
<a href="https://github.com/brunato/xmlschema">https://github.com/brunato/xmlschema</a>
</li>

<li>xmlschema 0.9.7<br />
<a href="https://pypi.python.org/pypi/xmlschema/0.9.7">https://pypi.python.org/pypi/xmlschema/0.9.7</a>
</li>

<li>jsonschema 2.6.0<br />
<a href="https://pypi.python.org/pypi/jsonschema">https://pypi.python.org/pypi/jsonschema</a>
</li>

<li>warlock 1.3.0<br />
<a href="https://pypi.python.org/pypi/warlock">https://pypi.python.org/pypi/warlock</a>
</li>

<li>Python Virtual Environments – A Primer<br />
<a href="https://realpython.com/python-virtual-environments-a-primer/">https://realpython.com/python-virtual-environments-a-primer/</a>
</li>

<li>pip 1.1 documentation: Requirements files<br />
<a href="https://pip.readthedocs.io/en/1.1/requirements.html">https://pip.readthedocs.io/en/1.1/requirements.html</a>
</li>

<li>unittest.mock — mock object library<br />
<a href="https://docs.python.org/3.5/library/unittest.mock.html">https://docs.python.org/3.5/library/unittest.mock.html</a>
</li>

<li>mock 2.0.0<br />
<a href="https://pypi.python.org/pypi/mock">https://pypi.python.org/pypi/mock</a>
</li>

<li>An Introduction to Mocking in Python<br />
<a href="https://www.toptal.com/python/an-introduction-to-mocking-in-python">https://www.toptal.com/python/an-introduction-to-mocking-in-python</a>
</li>

<li>Unit testing (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Unit_testing">https://en.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Unit testing<br />
<a href="https://cs.wikipedia.org/wiki/Unit_testing">https://cs.wikipedia.org/wiki/Unit_testing</a>
</li>

<li>Test-driven development (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Test-driven_development">https://en.wikipedia.org/wiki/Test-driven_development</a>
</li>

<li>Pip (dokumentace)<br />
<a href="https://pip.pypa.io/en/stable/">https://pip.pypa.io/en/stable/</a>
</li>

<li>5 Differences between clojure.spec and Schema<br />
<a href="https://lispcast.com/clojure.spec-vs-schema/">https://lispcast.com/clojure.spec-vs-schema/</a>
</li>

<li>Schema: Clojure(Script) library for declarative data description and validation<br />
<a href="https://github.com/plumatic/schema">https://github.com/plumatic/schema</a>
</li>

<li>clojure.spec - Rationale and Overview<br />
<a href="https://clojure.org/about/spec">https://clojure.org/about/spec</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

