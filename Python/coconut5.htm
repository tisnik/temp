<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Konstrukce kolony v&nbsp;jazyku Coconut</a></p>
<p><a href="#k02">2. Způsob transpřekladu příkazů s&nbsp;kolonou z&nbsp;Coconutu do Pythonu</a></p>
<p><a href="#k03">3. Další typy operátorů pro konstrukci kolon</a></p>
<p><a href="#k04">4. Kolona, ve které data proudí opačným směrem</a></p>
<p><a href="#k05">5. Kolony a problematika hodnoty <strong>None</strong></a></p>
<p><a href="#k06">6. Kolony rozpoznávající hodnotu <strong>None</strong></a></p>
<p><a href="#k07">*** 7. Operátor <strong>|?&gt;</strong></a></p>
<p><a href="#k08">*** 8. Operátor <strong>&lt;?|</strong></a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Konstrukce kolony v&nbsp;jazyku Coconut</h2>

<p>V&nbsp;programovacím jazyku Coconut nalezneme velmi užitečnou technologii.
Jedná se o možnost vytvoření takzvané kolony (<i>pipeline</i>) z&nbsp;funkcí,
což je technologie, kterou velmi pravděpodobně znáte z&nbsp;shellu, ale najdeme
ji například i v&nbsp;programovacím jazyku <i>Clojure</i> (<i>threading
macro</i>), v&nbsp;programovacích jazycích z&nbsp;rodiny ML apod. Základní
kolona se sestaví operátorem <strong>|&gt;</strong>, který dokáže poslat data
ze své levé strany do funkce uvedené na straně pravé. V&nbsp;případě, že taková
funkce vrací jiná data, je samozřejmě možné kolonu libovolným způsobem
rozšiřovat. Nejprve si ukážeme to nejjednodušší použití kolony pro funkce
s&nbsp;jediným vstupem:</p>

<pre>
-42 |&gt; abs |&gt; print
&nbsp; 
"B" |&gt; ord |&gt; abs |&gt; hex |&gt; print
&nbsp; 
range(11) |&gt; sum |&gt; print
&nbsp; 
range(11) |&gt; reversed |&gt; sum |&gt; print
&nbsp; 
def evens(sequence):
    return filter(lambda x: x % 2 == 0, sequence)
&nbsp; 
[1, 2, 3, 4, 5, 6, 30] |&gt; evens |&gt; sum |&gt; print
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Způsob transpřekladu příkazů s&nbsp;kolonou z&nbsp;Coconutu do Pythonu</h2>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že posledním
identifikátorem na pravé straně kolony je vždy funkce a nikoli
proměnná.</div></p>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco</a></div></p>

<p>Z&nbsp;transpilovaného výsledku je patrné, jakým způsobem se použití kolony
přeloží do čistého Pythonu:</p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp; 
(print)((abs)(-42))  <i>#1 (line in Coconut source)</i>
&nbsp; 
(print)((hex)((abs)((ord)("B"))))  <i>#3 (line in Coconut source)</i>
&nbsp; 
(print)((sum)(range(11)))  <i>#5 (line in Coconut source)</i>
&nbsp; 
(print)((sum)((reversed)(range(11))))  <i>#7 (line in Coconut source)</i>
&nbsp; 
@_coconut_tco  <i>#9 (line in Coconut source)</i>
def evens(sequence):  <i>#9 (line in Coconut source)</i>
    return _coconut_tail_call(filter, lambda x: x % 2 == 0, sequence)  <i>#10 (line in Coconut source)</i>
&nbsp; 
&nbsp; 
(print)((sum)((evens)([1, 2, 3, 4, 5, 6, 30])))  <i>#12 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py</a></div></p>

<p>Podívejme se však na zjednodušenou podobu transpilovaného kódu, ze které
byly odstraněny nadbytečné závorky. Nyní je výsledek mnohem čitelnější a
ukazuje roli kolony jakožto konstrukce nahrazující volání funkcí při předávání
parametrů do jiných funkcí:</p>

<pre>
<i># Simplified version of Coconut transpiled into Python</i>
&nbsp;
print(abs(-42))
&nbsp;
print(hex(abs(ord("B"))))
&nbsp;
print(sum(range(11)))
&nbsp;
print(sum(reversed(range(11))))
&nbsp;
&nbsp;
@_coconut_tco
def evens(sequence):
    return _coconut_tail_call(filter, lambda x: x % 2 == 0, sequence)
&nbsp;
&nbsp;
print(sum(evens([1, 2, 3, 4, 5, 6, 30])))
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Další typy operátorů pro konstrukci kolon</h2>

<p>Základní kolona realizovaná operátorem |&gt; je ve skutečnosti pouze jedním
typem kolony podporované programovacím jazykem Coconut. Vývojáři totiž mají
k&nbsp;dispozici hned několik dalších operátorů pro konstrukci kolony, které se
od sebe liší směrem proudění dat (zleva doprava nebo zprava doleva), tím, zda
dokážou rozpoznat hodnoty <strong>None</strong> a patřičně na ně zareagovat a
v&nbsp;neposlední řadě i podle toho, zda se přenáší vždy jediná hodnota nebo
větší množství hodnot (což ovšem vyžaduje korektní uzávorkování). Všechny
v&nbsp;současnosti dostupné operátory kolony nalezneme v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Operátor</th><th>Směr proudění dat</th><th>Zpracování <strong>None</strong></th><th>Poznámka</th></tr>
<tr><td> 1</td><td>|&gt;</td><td>zleva doprava</td><td>ne</td><td>přenos jedné hodnoty</td></tr>
<tr><td> 2</td><td>|*&gt;</td><td>zleva doprava</td><td>ne</td><td>přenos více hodnot</td></tr>
<tr><td> 3</td><td>|**&gt;</td><td>zleva doprava</td><td>ne</td><td>přenos hodnot přes <i>keyword</i> argumenty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>&lt;|</td><td>zprava doleva</td><td>ne</td><td>přenos jedné hodnoty</td></tr>
<tr><td> 5</td><td>&lt;*|</td><td>zprava doleva</td><td>ne</td><td>přenos více hodnot</td></tr>
<tr><td> 6</td><td>&lt;**|</td><td>zprava doleva</td><td>ne</td><td>přenos hodnot přes <i>keyword</i> argumenty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>|?&gt;</td><td>zleva doprava</td><td>ano</td><td>přenos jedné hodnoty</td></tr>
<tr><td> 8</td><td>|?*&gt;</td><td>zleva doprava</td><td>ano</td><td>přenos více hodnot</td></tr>
<tr><td> 9</td><td>|?**&gt;</td><td>zleva doprava</td><td>ano</td><td>přenos hodnot přes <i>keyword</i> argumenty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>&lt;?|</td><td>zprava doleva</td><td>ano</td><td>přenos jedné hodnoty</td></tr>
<tr><td>11</td><td>&lt;*?|</td><td>zprava doleva</td><td>ano</td><td>přenos více hodnot</td></tr>
<tr><td>12</td><td>&lt;**?|</td><td>zprava doleva</td><td>ano</td><td>přenos hodnot přes <i>keyword</i> argumenty</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: kombinace vlastností operátorů se odráží
i na způsobu jejich zápisu, který je logický a &bdquo;ortogonální&ldquo; a tedy
relativně dobře zapamatovatelný.</div></p>

<p>Některé z&nbsp;výše uvedených možností konstrukce kolon budou popsány
v&nbsp;navazujících kapitolách.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Kolona, ve které data proudí opačným směrem</h2>

<p>Nejprve se podívejme na tvorbu kolony s&nbsp;využitím operátoru &lt;|. Jedná
se o obdobu základního operátoru |&gt;, ovšem s&nbsp;jedním podstatným
rozdílem: data budou v&nbsp;tomto případě přenášena zprava doleva. To jinými
slovy znamená, že zdroj dat (což může být konstanta, funkce, metoda, ale
například i konstruktor) bude zapsán zcela napravo a postupné cíle dat budou
zapsány nalevo od tohoto zdroje.</p>

<p>Ukažme si toto chování na dvou příkazech, přičemž je dobré si povšimnout
toho, že ve druhém příkazu je nutné provést uzávorkování. Je tomu tak
z&nbsp;toho důvodu, že samotný operátor &lt;| se vyhodnocuje zleva doprava,
ostatně podobně, jako je tomu u ostatních jedenácti operátorů pro realizaci
kolon.</p>

<pre>
print &lt;| -42
&nbsp;
print &lt;| (abs &lt;| -42)
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco</a></div></p>

<p>Výsledek transpilace:</p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp;
(print)(-42)  <i>#1 (line in Coconut source)</i>
&nbsp;
(print)(((abs)(-42)))  <i>#3 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py</a></div></p>

<p>Následuje zjednodušená varianta, která lépe ukazuje, jak se kolona
přeloží:</p>

<pre>
<i># Simplified version of Coconut transpiled into Python</i>
&nbsp;
print(-42)
&nbsp;
print(abs(-42))
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Kolony a problematika hodnoty <strong>None</strong></h2>

<p>Pokusme se nyní do kolony předat hodnotu <strong>None</strong> a sledovat,
jak bude tato hodnota celou kolonou &bdquo;probublávat&ldquo;. Nejprve
použijeme původní operátor |&gt;, který se nijak nesnaží o detekci této
hodnoty:</p>

<pre>
None |&gt; print
&nbsp;
None |&gt; abs |&gt; print
 &nbsp;
None |&gt; ord |&gt; abs |&gt; hex |&gt; print
&nbsp;
None |&gt; sum |&gt; print
&nbsp;
None |&gt; reversed |&gt; sum |&gt; print
&nbsp;
def evens(sequence):
    return filter(lambda x: x % 2 == 0, sequence)
&nbsp;
None |&gt; evens |&gt; sum |&gt; print
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.coco</a></div></p>

<p>Skript si necháme (trans)přeložit a ihned spustit:</p>

<pre>
$ <strong>coconut -r pipeline-none-not-aware.coco</strong>
</pre>

<p>První příkaz byl spuštěn a vykonán bez problémů, protože standardní funkce
<strong>print</strong> pochopitelně dokáže hodnotu <strong>None</strong>
vytisknout, ale už u následujícího příkazu došlo k&nbsp;běhové chybě při pokusu
o předání hodnoty <strong>None</strong> do funkce <strong>abs</strong>:</p>

<pre>
Compiling         pipeline-none-not-aware.coco ...
CoconutWarning: Populating initial parsing cache (compilation may take longer than usual)...
Compiled to       pipeline-none-not-aware.py .
None
Traceback (most recent call last):
  File "&lt;frozen runpy&gt;", line 291, in run_path
  File "&lt;frozen runpy&gt;", line 98, in _run_module_code
  File "&lt;frozen runpy&gt;", line 88, in _run_code
  File "/home/ptisnovs/xy/pipeline-none-not-aware.py", line 2902, in &lt;module&gt;
    (print)((abs)(None))  <i>#3 (line in Coconut source)</i>
            ^^^^^^^^^^^
TypeError: bad operand type for abs(): 'NoneType'
</pre>

<p>Důvod pádu je zřejmý a zjistíme ho při pohledu na transpilovaný zdrojový
kód. Nejprve originál vygenerovaný Coconutem:</p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp;
(print)(None)  <i>#1 (line in Coconut source)</i>
&nbsp;
(print)((abs)(None))  <i>#3 (line in Coconut source)</i>
&nbsp;
(print)((hex)((abs)((ord)(None))))  <i>#5 (line in Coconut source)</i>
&nbsp;
(print)((sum)(None))  <i>#7 (line in Coconut source)</i>
&nbsp;
(print)((sum)((reversed)(None)))  <i>#9 (line in Coconut source)</i>
&nbsp;
@_coconut_tco  <i>#11 (line in Coconut source)</i>
def evens(sequence):  <i>#11 (line in Coconut source)</i>
    return _coconut_tail_call(filter, lambda x: x % 2 == 0, sequence)  <i>#12 (line in Coconut source)</i>
&nbsp;
&nbsp;
(print)((sum)((evens)(None)))  <i>#14 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.py</a></div></p>

<p>Následuje upravený (zjednodušený) kód, který je sémanticky naprosto totožný
s&nbsp;kódem předchozím:</p>

<pre>
<i># Simplified version of Coconut transpiled into Python</i>
&nbsp;
print(None)
&nbsp;
print(abs(None))
&nbsp;
print(hex(abs(ord(None))))
&nbsp;
print(sum(None))
&nbsp;
print(sum(reversed(None)))
&nbsp;
@_coconut_tco
def evens(sequence):
    return _coconut_tail_call(filter, lambda x: x % 2 == 0, sequence)
&nbsp;
&nbsp;
print(sum(evens(None)))
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Kolony rozpoznávající hodnotu <strong>None</strong></h2>

<p>V&nbsp;praxi se poměrně často setkáme se situací, kdy do kolony mohou
proudit hodnoty <strong>None</strong>. V&nbsp;případě, že tyto hodnoty
považujeme za reprezentaci chybějící hodnoty (což je ostatně původní význam
<strong>nil</strong>, ze kterého <strong>None</strong> vzniklo), budeme mnohdy
chtít zajistit následující funkcionalitu:</p>

<ol>
<li>Běžné hodnoty rozdílné od <strong>None</strong> kolonou projdou a budou postupně zpracovány</li>
<li>Pokud do kolony pošleme hodnotu <strong>None</strong>, zpracování se přeruší a ihned se taktéž vrátí hodnota <strong>None</strong></li>
<li>Pokud přímo v&nbsp;koloně vznikne hodnota <strong>None</strong>, bude opět ihned vrácena a zbytek kolony se přeskočí</li>
</ol>

<p><div class="rs-tip-major">Poznámka: takové chování do značné míry odpovídá
typům <i>Maybe</i>, <i>Result</i> atd. (tyto typy se jmenují různě podle
použitého programovacího jazyka).</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Operátor <strong>|?&gt;</strong></h2>

<pre>
None |?&gt; print
&nbsp;
None |?&gt; abs |?&gt; print
&nbsp;
None |?&gt; ord |?&gt; abs |?&gt; hex |?&gt; print
&nbsp;
None |?&gt; sum |?&gt; print
&nbsp;
None |?&gt; reversed |?&gt; sum |?&gt; print
&nbsp;
def evens(sequence):
    return filter(lambda x: x % 2 == 0, sequence)
&nbsp;
None |?&gt; evens |?&gt; sum |?&gt; print
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.coco</a></div></p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp;
(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))(None)  <i>#1 (line in Coconut source)</i>
&nbsp;
(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (abs)(_coconut_x))(None))  <i>#3 (line in Coconut source)</i>
&nbsp;
(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (hex)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (abs)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (ord)(_coconut_x))(None))))  <i>#5 (line in Coconut source)</i>
&nbsp;
(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (sum)(_coconut_x))(None))  <i>#7 (line in Coconut source)</i>
&nbsp;
(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (sum)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (reversed)(_coconut_x))(None)))  <i>#9 (line in Coconut source)</i>
&nbsp;
@_coconut_tco  <i>#11 (line in Coconut source)</i>
def evens(sequence):  <i>#11 (line in Coconut source)</i>
    return _coconut_tail_call(filter, lambda x: x % 2 == 0, sequence)  <i>#12 (line in Coconut source)</i>
&nbsp;
&nbsp;
(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (sum)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (evens)(_coconut_x))(None)))  <i>#14 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.py</a></div></p>

<pre>
print(None |?&gt; abs)
 &nbsp;
print(None |?&gt; ord |?&gt; abs |?&gt; hex)
&nbsp;
print(None |?&gt; sum)
&nbsp;
print(None |?&gt; reversed |?&gt; sum)
&nbsp;
def evens(sequence):
    return filter(lambda x: x % 2 == 0, sequence)
&nbsp;
print(None |?&gt; evens |?&gt; sum)
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.coco</a></div></p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>
&nbsp;
print((lambda _coconut_x: None if _coconut_x is None else (abs)(_coconut_x))(None))  <i>#1 (line in Coconut source)</i>
&nbsp;
print((lambda _coconut_x: None if _coconut_x is None else (hex)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (abs)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (ord)(_coconut_x))(None))))  <i>#3 (line in Coconut source)</i>
&nbsp;
print((lambda _coconut_x: None if _coconut_x is None else (sum)(_coconut_x))(None))  <i>#5 (line in Coconut source)</i>
&nbsp;
print((lambda _coconut_x: None if _coconut_x is None else (sum)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (reversed)(_coconut_x))(None)))  <i>#7 (line in Coconut source)</i>
&nbsp;
@_coconut_tco  <i>#9 (line in Coconut source)</i>
def evens(sequence):  <i>#9 (line in Coconut source)</i>
    return _coconut_tail_call(filter, lambda x: x % 2 == 0, sequence)  <i>#10 (line in Coconut source)</i>
&nbsp;
&nbsp;
print((lambda _coconut_x: None if _coconut_x is None else (sum)(_coconut_x))((lambda _coconut_x: None if _coconut_x is None else (evens)(_coconut_x))(None)))  <i>#12 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.py</a></div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Operátor <strong>&lt;?|</strong></h2>

<pre>
print &lt;| None

print &lt;| (abs &lt;| None)
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.coco</a></div></p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>

(print)(None)  <i>#1 (line in Coconut source)</i>

(print)(((abs)(None)))  <i>#3 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.py</a></div></p>

<pre>
print &lt;?| None

print &lt;?| (abs &lt;?| None)
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.coco</a></div></p>

<pre>
<i># Compiled Coconut: -----------------------------------------------------------</i>

(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))(None)  <i>#1 (line in Coconut source)</i>

(lambda _coconut_x: None if _coconut_x is None else (print)(_coconut_x))(((lambda _coconut_x: None if _coconut_x is None else (abs)(_coconut_x))(None)))  <i>#3 (line in Coconut source)</i>
</pre>

<p><div class="rs-tip-major">Zdroj: <a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.py</a></div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Coconut byly uloženy do Git repositáře dostupného na adrese
<a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello-world.coco</td><td>Program typu &bdquo;Hello, world&ldquo; naprogramovaný v&nbsp;jazyce Coconut</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.coco</a></td></tr>
<tr><td> 2</td><td>hello-world.py</td><td>překlad pipeline s&nbsp;voláním funkce <strong>print</strong> do Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world.py</a></td></tr>
<tr><td> 3</td><td>hello-world-non-optim.py</td><td>ukázka celého souboru (čistý Python), který vznikne výsledkem transpřekladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-non-optim.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-non-optim.py</a></td></tr>
<tr><td> 4</td><td>hello-world-minified.py</td><td>ukázka celého souboru (čistý Python), který vznikne výsledkem transpřekladu s&nbsp;povolenou minifikací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-minified.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/hello-world-minified.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>lambda-old-style.coco</td><td>zápis anonymní funkce s&nbsp;využitím operátoru -&gt; (původní styl Pythonu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.coco</a></td></tr>
<tr><td> 6</td><td>lambda-old-style.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-old-style.py</a></td></tr>
<tr><td> 7</td><td>lambda-new-style.coco</td><td>zápis anonymní funkce s&nbsp;využitím operátoru =&gt; (doporučovaný styl)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.coco</a></td></tr>
<tr><td> 8</td><td>lambda-new-style.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-new-style.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>original-factorial-1.py</td><td>výpočet faktoriálu naprogramovaný v&nbsp;Pythonu: použití anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-1.py</a></td></tr>
<tr><td>10</td><td>original-factorial-2.py</td><td>výpočet faktoriálu naprogramovaný v&nbsp;Pythonu: vnořené anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-2.py</a></td></tr>
<tr><td>11</td><td>original-factorial-3.py</td><td>výpočet tabulky s&nbsp;faktoriály bez použití programových smyček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-factorial-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>lambda-factorial-1.coco</td><td>výpočet faktoriálu s&nbsp;anonymní funkcí se dvěma parametry (nekorektní zápis)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.coco</a></td></tr>
<tr><td>13</td><td>lambda-factorial-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-1.py</a></td></tr>
<tr><td>14</td><td>lambda-factorial-2.coco</td><td>výpočet faktoriálu s&nbsp;anonymní funkcí se dvěma parametry (korektní zápis)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.coco</a></td></tr>
<tr><td>15</td><td>lambda-factorial-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-2.py</a></td></tr>
<tr><td>16</td><td>lambda-factorial-3.coco</td><td>vnořené anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.coco</a></td></tr>
<tr><td>17</td><td>lambda-factorial-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-3.py</a></td></tr>
<tr><td>18</td><td>lambda-factorial-4.coco</td><td>výpočet tabulky s&nbsp;faktoriály bez použití programových smyček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.coco</a></td></tr>
<tr><td>19</td><td>lambda-factorial-4.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-4.py</a></td></tr>
<tr><td>20</td><td>lambda-factorial-5.coco</td><td>výpočet tabulky s&nbsp;faktoriály bez použití programových smyček + použití pipe</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.coco</a></td></tr>
<tr><td>21</td><td>lambda-factorial-5.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/lambda-factorial-5.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>22</td><td>implicit-lambda-1.coco</td><td>lambda výraz s&nbsp;implicitním parametrem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.coco</a></td></tr>
<tr><td>23</td><td>implicit-lambda-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-1.py</a></td></tr>
<tr><td>24</td><td>implicit-lambda-2.coco</td><td>lambda výraz bez parametru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.coco</a></td></tr>
<tr><td>25</td><td>implicit-lambda-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/implicit-lambda-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>statement-lambda-1.coco</td><td>plnohodnotná anonymní funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.coco</a></td></tr>
<tr><td>27</td><td>statement-lambda-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-1.py</a></td></tr>
<tr><td>28</td><td>statement-lambda-2.coco</td><td>anonymní funkce s&nbsp;příkazem a výrazem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.coco</a></td></tr>
<tr><td>29</td><td>statement-lambda-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>30</td><td>statement-lambda-type-hints.coco</td><td>anonymní funkce s&nbsp;typovými informacemi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints.coco</a></td></tr>
<tr><td>31</td><td>statement-lambda-type-hints-python-2.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 2</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-2.py</a></td></tr>
<tr><td>32</td><td>statement-lambda-type-hints-python-3.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/statement-lambda-type-hints-python-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>original-partial-1.py</td><td>částečně vyhodnocená funkce, realizace provedená ve standardním Pythonu, první verze (funkce se dvěma parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-1.py</a></td></tr>
<tr><td>34</td><td>original-partial-2.py</td><td>částečně vyhodnocená funkce, realizace provedená ve standardním Pythonu, druhá verze (funkce se třemi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-2.py</a></td></tr>
<tr><td>35</td><td>original-partial-3.py</td><td>částečně vyhodnocená funkce, realizace provedená ve standardním Pythonu, třetí verze (funkce se čtyřmi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/original-partial-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>36</td><td>partial-1.coco</td><td>částečně vyhodnocená funkce zapsaná v&nbsp;jazyku Coconut, první verze (funkce se dvěma parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.coco</a></td></tr>
<tr><td>37</td><td>partial-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-1.py</a></td></tr>
<tr><td>38</td><td>partial-2.coco</td><td>částečně vyhodnocená funkce zapsaná v&nbsp;jazyku Coconut, druhá verze (funkce se třemi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.coco</a></td></tr>
<tr><td>39</td><td>partial-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-2.py</a></td></tr>
<tr><td>40</td><td>partial-3.coco</td><td>částečně vyhodnocená funkce zapsaná v&nbsp;jazyku Coconut, třetí verze (funkce se čtyřmi parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.coco</a></td></tr>
<tr><td>41</td><td>partial-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>42</td><td>partial-map.coco</td><td>částečně vyhodnocená funkce vyššího řádu <strong>fmap</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.coco</a></td></tr>
<tr><td>43</td><td>partial-map.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/partial-map.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>44</td><td>sequences1A.coco</td><td>ukázka rozdílu v&nbsp;chování funkcí <strong>map</strong> a <strong>fmap</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.coco</a></td></tr>
<tr><td>45</td><td>sequences1A.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1A.py</a></td></tr>
<tr><td>46</td><td>sequences1B.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.coco</a></td></tr>
<tr><td>47</td><td>sequences1B.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1B.py</a></td></tr>
<tr><td>48</td><td>sequences1C.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů s&nbsp;implicitním parametrem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.coco</a></td></tr>
<tr><td>49</td><td>sequences1C.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences1C.py</a></td></tr>
<tr><td>50</td><td>sequences2A.coco</td><td>ukázka funkcí <strong>reduce</strong>, <strong>takewhile</strong> a <strong>dropwhile</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.coco</a></td></tr>
<tr><td>51</td><td>sequences2A.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2A.py</a></td></tr>
<tr><td>52</td><td>sequences2B.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.coco</a></td></tr>
<tr><td>53</td><td>sequences2B.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2B.py</a></td></tr>
<tr><td>54</td><td>sequences2C.coco</td><td>přepis předchozího demonstračního příkladu tak, že se využije zkrácený zápis lambda výrazů s&nbsp;implicitním parametrem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.coco</a></td></tr>
<tr><td>55</td><td>sequences2C.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/sequences2C.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>56</td><td>custom-operator-1.coco</td><td>vytvoření nového binárního operátoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.coco</a></td></tr>
<tr><td>57</td><td>custom-operator-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-1.py</a></td></tr>
<tr><td>58</td><td>custom-operator-2.coco</td><td>vytvoření nového binárního operátoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.coco</a></td></tr>
<tr><td>59</td><td>custom-operator-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-2.py</a></td></tr>
<tr><td>60</td><td>custom-operator-3.coco</td><td>vytvoření nového unárního operátoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.coco</a></td></tr>
<tr><td>61</td><td>custom-operator-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/custom-operator-3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>62</td><td>infix-notation-1.coco</td><td>infixový zápis volání funkce <strong>add</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.coco</a></td></tr>
<tr><td>63</td><td>infix-notation-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-1.py</a></td></tr>
<tr><td>64</td><td>infix-notation-2.coco</td><td>infixový zápis volání funkce <strong>factorial</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.coco</a></td></tr>
<tr><td>65</td><td>infix-notation-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-2.py</a></td></tr>
<tr><td>66</td><td>infix-notation-3.coco</td><td>infixová definice funkce <strong>nad</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.coco</a></td></tr>
<tr><td>67</td><td>infix-notation-3.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-3.py</a></td></tr>
<tr><td>68</td><td>infix-notation-4.coco</td><td>infixový zápis volání funkcí a priorita operací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.coco</a></td></tr>
<tr><td>69</td><td>infix-notation-4.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/infix-notation-4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>py3-only-async-await.coco</td><td>konstrukce platná pouze v&nbsp;Pythonu 3.x &ndash; <strong>async</strong> a <strong>await</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.coco</a></td></tr>
<tr><td>71</td><td>py3-only-async-await.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3.x</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-async-await.py</a></td></tr>
<tr><td>72</td><td>py3-only-counter_closure.coco</td><td>konstrukce platná pouze v&nbsp;Pythonu 3.x &ndash; nelokální proměnná</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.coco</a></td></tr>
<tr><td>73</td><td>py3-only-counter_closure.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3.x</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-counter_closure.py</a></td></tr>
<tr><td>74</td><td>py3-only-walrus-operator.coco</td><td>konstrukce platná pouze v&nbsp;Pythonu 3.x &ndash; mroží operátor</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.coco</a></td></tr>
<tr><td>75</td><td>py3-only-walrus-operator.py</td><td>výsledek překladu skriptu do standardního Pythonu verze 3.x</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/py3-only-walrus-operator.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>76</td><td>pipeline-basic.coco</td><td>základní forma kolony, v&nbsp;níž data proudí zleva doprava</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco</a></td></tr>
<tr><td>77</td><td>pipeline-basic.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py</a></td></tr>
<tr><td>78</td><td>pipeline-backward.coco</td><td>základní forma kolony, v&nbsp;níž data proudí zprava doleva</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco</a></td></tr>
<tr><td>79</td><td>pipeline-backward.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>76</td><td>pipeline-basic.coco</td><td>základní forma kolony, v&nbsp;níž data proudí zleva doprava</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.coco</a></td></tr>
<tr><td>77</td><td>pipeline-basic.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-basic.py</a></td></tr>
<tr><td>78</td><td>pipeline-backward.coco</td><td>základní forma kolony, v&nbsp;níž data proudí zprava doleva</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.coco</a></td></tr>
<tr><td>79</td><td>pipeline-backward.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>80</td><td>pipeline-none-not-aware.coco</td><td>kolona, která nerozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.coco</a></td></tr>
<tr><td>81</td><td>pipeline-none-not-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-not-aware.py</a></td></tr>
<tr><td>82</td><td>pipeline-none-aware.coco</td><td>kolona, která rozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.coco</a></td></tr>
<tr><td>83</td><td>pipeline-none-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware.py</a></td></tr>
<tr><td>84</td><td>pipeline-none-aware-2.coco</td><td>kolona, která rozeznává hodnoty <strong>None</strong>, explicitní tisk výsledků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.coco</a></td></tr>
<tr><td>85</td><td>pipeline-none-aware-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-none-aware-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>pipeline-backward-none-not-aware.coco</td><td>&bdquo;zpětná&ldquo; kolona, která nerozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.coco</a></td></tr>
<tr><td>87</td><td>pipeline-backward-none-not-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-not-aware.py</a></td></tr>
<tr><td>88</td><td>pipeline-backward-none-aware.coco</td><td>&bdquo;zpětná&ldquo; kolona, která rozeznává hodnoty <strong>None</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.coco</a></td></tr>
<tr><td>89</td><td>pipeline-backward-none-aware.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-backward-none-aware.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>90</td><td>pipeline-multiple-arguments.coco</td><td>kolona přenášející větší množství argumentů mezi funkcemi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.coco</a></td></tr>
<tr><td>91</td><td>pipeline-multiple-arguments.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments.py</a></td></tr>
<tr><td>92</td><td>pipeline-multiple-arguments-2.coco</td><td>použití standardního operátoru pro rozdíl v&nbsp;koloně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.coco</a></td></tr>
<tr><td>93</td><td>pipeline-multiple-arguments-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-multiple-arguments-2.py</a></td></tr>
<tr><td>94</td><td>pipeline-keyword-arguments.coco</td><td>kolona přenášející <i>keyword</i> argumenty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.coco</a></td></tr>
<tr><td>95</td><td>pipeline-keyword-arguments.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/pipeline-keyword-arguments.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>96</td><td>function-composition-1.coco</td><td>použití kompozice funkcí v&nbsp;koloně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.coco</a></td></tr>
<tr><td>97</td><td>function-composition-1.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-1.py</a></td></tr>
<tr><td>98</td><td>function-composition-2.coco</td><td>uložení kompozice funkcí do nového symbolu (nové funkce)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.coco">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.coco</a></td></tr>
<tr><td>99</td><td>function-composition-2.py</td><td>výsledek překladu skriptu do standardního Pythonu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/coconut/function-composition-2.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Coconut: funkcionální jazyk s&nbsp;pattern matchingem kompatibilní s&nbsp;Pythonem<br />
<a href="https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/">https://www.root.cz/clanky/coconut-funkcionalni-jazyk-s-pattern-matchingem-kompatibilni-s-pythonem/</a>
</li>

<li>Coconut aneb funkcionální nadstavba nad Pythonem (2.část)<br />
<a href="https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/">https://www.root.cz/clanky/coconut-aneb-funkcionalni-nadstavba-nad-pythonem-2-cast/</a>
</li>

<li>Python 3.10 and the Elegance of Pattern Matching<br />
<a href="https://python.plainenglish.io/python-3-10-and-the-elegance-of-pattern-matching-2620a02b2379">https://python.plainenglish.io/python-3-10-and-the-elegance-of-pattern-matching-2620a02b2379</a>
</li>

<li>More Pattern Matching in Python 3.10<br />
<a href="https://towardsdatascience.com/more-advanced-pattern-matching-in-python-3-10-2dbd8598302a">https://towardsdatascience.com/more-advanced-pattern-matching-in-python-3-10-2dbd8598302a</a>
</li>

<li>Pattern Matching in Python 3.10<br />
<a href="https://towardsdatascience.com/pattern-matching-in-python-3-10-6124ff2079f0">https://towardsdatascience.com/pattern-matching-in-python-3-10-6124ff2079f0</a>
</li>

<li>Python 3.10.0<br />
<a href="https://www.python.org/downloads/release/python-3100/">https://www.python.org/downloads/release/python-3100/</a>
</li>

<li>The fate of reduce() in Python 3000<br />
<a href="http://lambda-the-ultimate.org/node/587">http://lambda-the-ultimate.org/node/587</a>
</li>

<li>PEP 634 &ndash; Structural Pattern Matching: Specification<br />
<a href="https://peps.python.org/pep-0634/">https://peps.python.org/pep-0634/</a>
</li>

<li>PEP 635 &ndash; Structural Pattern Matching: Motivation and Rationale<br />
<a href="https://peps.python.org/pep-0635/">https://peps.python.org/pep-0635/</a>
</li>

<li>PEP 636 &ndash; Structural Pattern Matching: Tutorial<br />
<a href="https://peps.python.org/pep-0636/">https://peps.python.org/pep-0636/</a>
</li>

<li>PEP 622 &ndash; Structural Pattern Matching<br />
<a href="https://peps.python.org/pep-0622/">https://peps.python.org/pep-0622/</a>
</li>

<li>Python 3.10 se strukturálním pattern matchingem<br />
<a href="https://www.root.cz/zpravicky/python-3-10-se-strukturalnim-pattern-matchingem/">https://www.root.cz/zpravicky/python-3-10-se-strukturalnim-pattern-matchingem/</a>
</li>

<li>Null coalescing operator<br />
<a href="https://en.wikipedia.org/wiki/Null_coalescing_operator">https://en.wikipedia.org/wiki/Null_coalescing_operator</a>
</li>

<li>Operátor koalescence<br />
<a href="https://cs.wikipedia.org/wiki/Oper%C3%A1tor_koalescence">https://cs.wikipedia.org/wiki/Oper%C3%A1tor_koalescence</a>
</li>

<li>Elvis operator<br />
<a href="https://en.wikipedia.org/wiki/Elvis_operator">https://en.wikipedia.org/wiki/Elvis_operator</a>
</li>

<li>Safe navigation operator<br />
<a href="https://en.wikipedia.org/wiki/Safe_navigation_operator">https://en.wikipedia.org/wiki/Safe_navigation_operator</a>
</li>

<li>Setting stacksize in a python script<br />
<a href="https://stackoverflow.com/questions/5061582/setting-stacksize-in-a-python-script">https://stackoverflow.com/questions/5061582/setting-stacksize-in-a-python-script</a>
</li>

<li>What is the maximum recursion depth in Python, and how to increase it?<br />
<a href="https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it?rq=1">https://stackoverflow.com/questions/3323001/what-is-the-maximum-recursion-depth-in-python-and-how-to-increase-it?rq=1</a>
</li>

<li>Does Python optimize tail recursion?<br />
<a href="https://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion">https://stackoverflow.com/questions/13591970/does-python-optimize-tail-recursion</a>
</li>

<li>Programovací jazyk APL: programování bez smyček<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-apl-programovani-bez-smycek/">https://www.root.cz/clanky/programovaci-jazyk-apl-programovani-bez-smycek/</a>
</li>

<li>Programovací jazyk APL - dokončení<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-apl-dokonceni/">https://www.root.cz/clanky/programovaci-jazyk-apl-dokonceni/</a>
</li>

<li>Tail call<br />
<a href="https://en.wikipedia.org/wiki/Tail_call">https://en.wikipedia.org/wiki/Tail_call</a>
</li>

<li>Tail Call Optimization for Python<br />
<a href="https://github.com/baruchel/tco">https://github.com/baruchel/tco</a>
</li>

<li>Tail Recursion Elimination<br />
<a href="http://neopythonic.blogspot.cz/2009/04/tail-recursion-elimination.html">http://neopythonic.blogspot.cz/2009/04/tail-recursion-elimination.html</a>
</li>

<li>Origins of Python's "Functional" Features <br />
<a href="http://python-history.blogspot.cz/2009/04/origins-of-pythons-functional-features.html">http://python-history.blogspot.cz/2009/04/origins-of-pythons-functional-features.html</a>
</li>

<li>Tail recursion decorator revisited<br />
<a href="http://fiber-space.de/wordpress/2009/04/20/tail-recursion-decorator-revisited/">http://fiber-space.de/wordpress/2009/04/20/tail-recursion-decorator-revisited/</a>
</li>

<li>Koncová rekurze<br />
<a href="https://cs.wikipedia.org/wiki/Koncov%C3%A1_rekurze">https://cs.wikipedia.org/wiki/Koncov%C3%A1_rekurze</a>
</li>

<li>Recursion (computer science)<br />
<a href="https://en.wikipedia.org/wiki/Recursion_%28computer_science%29">https://en.wikipedia.org/wiki/Recursion_%28computer_science%29</a>
</li>

<li>Coconut: Simple, elegant, Pythonic functional programming<br />
<a href="http://coconut-lang.org/">http://coconut-lang.org/</a>
</li>

<li>coconut 1.1.0 (Python package index)<br />
<a href="https://pypi.python.org/pypi/coconut/1.1.0">https://pypi.python.org/pypi/coconut/1.1.0</a>
</li>

<li>Coconut Tutorial<br />
<a href="http://coconut.readthedocs.io/en/master/HELP.html">http://coconut.readthedocs.io/en/master/HELP.html</a>
</li>

<li>Coconut FAQ<br />
<a href="http://coconut.readthedocs.io/en/master/FAQ.html">http://coconut.readthedocs.io/en/master/FAQ.html</a>
</li>

<li>Coconut Documentation<br />
<a href="http://coconut.readthedocs.io/en/master/DOCS.html">http://coconut.readthedocs.io/en/master/DOCS.html</a>
</li>

<li>Python gains functional programming syntax via Coconut<br />
<a href="https://www.infoworld.com/article/3088058/python-gains-functional-programming-syntax-via-coconut.html">https://www.infoworld.com/article/3088058/python-gains-functional-programming-syntax-via-coconut.html</a>
</li>

<li>Repositář projektu pyparsing<br />
<a href="https://github.com/pyparsing/pyparsing">https://github.com/pyparsing/pyparsing</a>
</li>

<li>Repositář projektu cPyparsing<br />
<a href="https://github.com/evhub/cpyparsing">https://github.com/evhub/cpyparsing</a>
</li>

<li>Projekty vylepšující interaktivní režim Pythonu: bpython, ptpython, DreamPie a IPython<br />
<a href="https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/">https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/</a>
</li>

<li>Coconut na Redditu<br />
<a href="https://www.reddit.com/r/Python/comments/4owzu7/coconut_functional_programming_in_python/">https://www.reddit.com/r/Python/comments/4owzu7/coconut_functional_programming_in_python/</a>
</li>

<li>Repositář na GitHubu<br />
<a href="https://github.com/evhub/coconut">https://github.com/evhub/coconut</a>
</li>

<li>patterns<br />
<a href="https://github.com/Suor/patterns">https://github.com/Suor/patterns</a>
</li>

<li>Source-to-source compiler<br />
<a href="https://en.wikipedia.org/wiki/Source-to-source_compiler">https://en.wikipedia.org/wiki/Source-to-source_compiler</a>
</li>

<li>The Lua VM, on the Web<br />
<a href="https://kripken.github.io/lua.vm.js/lua.vm.js.html">https://kripken.github.io/lua.vm.js/lua.vm.js.html</a>
</li>

<li>Lua.vm.js REPL<br />
<a href="https://kripken.github.io/lua.vm.js/repl.html">https://kripken.github.io/lua.vm.js/repl.html</a>
</li>

<li>lua2js<br />
<a href="https://www.npmjs.com/package/lua2js">https://www.npmjs.com/package/lua2js</a>
</li>

<li>Wisp na GitHubu<br />
<a href="https://github.com/Gozala/wisp">https://github.com/Gozala/wisp</a>
</li>

<li>Wisp playground<br />
<a href="http://www.jeditoolkit.com/try-wisp/">http://www.jeditoolkit.com/try-wisp/</a>
</li>

<li>REPL v prohlížeči<br />
<a href="http://www.jeditoolkit.com/interactivate-wisp/">http://www.jeditoolkit.com/interactivate-wisp/</a>
</li>

<li>Minification (programming)<br />
<a href="https://en.wikipedia.org/wiki/Minification_(programming)">https://en.wikipedia.org/wiki/Minification_(programming)</a>
</li>

<li>JavaScript is Assembly Language for the Web: Sematic Markup is Dead! Clean vs. Machine-coded HTML<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx">http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebSematicMarkupIsDeadCleanVsMachinecodedHTML.aspx</a>
</li>

<li>JavaScript is Web Assembly Language and that's OK.<br />
<a href="http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx">http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx</a>
</li>

<li>Dart<br />
<a href="https://www.dartlang.org/">https://www.dartlang.org/</a>
</li>

<li>CoffeeScript<br />
<a href="http://coffeescript.org/">http://coffeescript.org/</a>
</li>

<li>TypeScript<br />
<a href="http://www.typescriptlang.org/">http://www.typescriptlang.org/</a>
</li>

<li>JavaScript: The Web Assembly Language?<br />
<a href="http://www.informit.com/articles/article.aspx?p=1856657">http://www.informit.com/articles/article.aspx?p=1856657</a>
</li>

<li>asm.js<br />
<a href="http://asmjs.org/">http://asmjs.org/</a>
</li>

<li>List of languages that compile to JS<br />
<a href="https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS">https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS</a>
</li>

<li>Permutation<br />
<a href="https://en.wikipedia.org/wiki/Permutation">https://en.wikipedia.org/wiki/Permutation</a>
</li>

<li>Pattern matching (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Pattern_matching">https://en.wikipedia.org/wiki/Pattern_matching</a>
</li>

<li>Pattern matching v&nbsp;Rustu<br />
<a href="https://www.root.cz/clanky/rust-funkce-lambda-vyrazy-a-rozhodovaci-konstrukce-match/#k13">https://www.root.cz/clanky/rust-funkce-lambda-vyrazy-a-rozhodovaci-konstrukce-match/#k13</a>
</li>

<li>SNOBOL<br />
<a href="https://en.wikipedia.org/wiki/SNOBOL">https://en.wikipedia.org/wiki/SNOBOL</a>
</li>

<li>Podpůrný plugin pro Vim<br />
<a href="https://github.com/manicmaniac/coconut.vim">https://github.com/manicmaniac/coconut.vim</a>
</li>

<li>Příkaz (programování)<br />
<a href="https://cs.wikipedia.org/wiki/P%C5%99%C3%ADkaz_%28programov%C3%A1n%C3%AD%29">https://cs.wikipedia.org/wiki/P%C5%99%C3%ADkaz_%28programov%C3%A1n%C3%AD%29</a>
</li>

<li>Threading Macros Guide<br />
<a href="https://clojure.org/guides/threading_macros">https://clojure.org/guides/threading_macros</a>
</li>

<li>Nejdůležitější novinka v Pythonu 3.10: strukturální pattern matching<br />
<a href="https://www.root.cz/clanky/nejdulezitejsi-novinka-v-pythonu-3-10-strukturalni-pattern-matching/">https://www.root.cz/clanky/nejdulezitejsi-novinka-v-pythonu-3-10-strukturalni-pattern-matching/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

