<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Knihovna Polars: problematika spojování datových rámců</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Knihovna Polars: problematika spojování datových rámců</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Před vlastní analýzou či statistickým zpracováním dat s využitím knihovny Polars je v mnoha případech nutné data získat z několika samostatných zdrojů, které je zapotřebí načíst a nějakým způsobem spojit. A právě těmito mnohdy relativně složitými operacemi se budeme zabývat dnes.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Knihovna Polars: problematika spojování datových rámců</a></p>
<p><a href="#k02">2. Vertikální spojení datových rámců</a></p>
<p><a href="#k03">3. Spojení datových rámců po řádcích funkcí <strong>concat</strong></a></p>
<p><a href="#k04">4. Explicitní specifikace vertikálního spojení ve funkci <strong>concat</strong></a></p>
<p><a href="#k05">5. Horizontální spojení datových rámců</a></p>
<p><a href="#k06">6. První (nefunkční) skript pro vertikální spojení datových rámců</a></p>
<p><a href="#k07">7. Explicitní výběr sloupců z&nbsp;druhého datového rámce pro operaci spojení</a></p>
<p><a href="#k08">*** 8. Spojení dvou datových rámců operací typu <strong>join</strong></a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Knihovna Polars: problematika spojování datových rámců</h2>

<p>Před vlastní datovou analýzou či před statistickým zpracováním dat
s&nbsp;využitím knihovny <i>Polars</i> je v&nbsp;mnoha případech nutné data
nejdříve získat z&nbsp;několika samostatných zdrojů. Vzhledem k&nbsp;tomu, že
většina operací (transformace, selekce, filtrace, seskupení, agregace) probíhá
nad jediným datovým rámcem, je zapotřebí datové rámce se zdrojovými daty
nějakým způsobem spojit. A právě těmito mnohdy relativně složitými operacemi,
mezi něž se řadí i různé varianty operace <strong>join</strong>, se budeme
zabývat v&nbsp;dnešním článku o knihovně <i>Polars</i>, jenž je současně i
článkem závěrečným.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Vertikální spojení datových rámců</h2>

<p>V&nbsp;knihovně Polars je možné datové rámce spojit jak &bdquo;po
řádcích&ldquo;, tak i &bdquo;po sloupcích&ldquo; a popř.&nbsp;i vyřešit
splynutí hodnot z&nbsp;těch sloupců, které si logicky odpovídají. Nejdříve si
ukážeme, jakým způsobem je možné spojit dva datové rámce &bdquo;po
řádcích&ldquo;. K&nbsp;tomu využijeme datové soubory <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/tiobeC.tsv">tiobeC.tsv</a>
a <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/tiobeD.tsv">tiobeD.tsv</a>.</p>

<p>První z&nbsp;těchto souborů <strong>tiobeC.tsv</strong> obsahuje horní
polovinu tabulky, konkrétně prvních deset řádků a současně i hlavičku
sloupců:</p>

<pre>
Sep 2020          Sep 2019          Change            Language          Ratings           Changep
1                 2                 change            C                 15.95             +0.74
2                 1                 change            Java              13.48             -3.18
3                 3                                   Python            10.47             +0.59
4                 4                                   C++               7.11              +1.48
5                 5                                   C#                4.58              +1.18
6                 6                                   Visual Basic      4.12              +0.83
7                 7                                   JavaScript        2.54              +0.41
8                 9                 change            PHP               2.49              +0.62
9                 19                change            R                 2.37              +1.33
10                8                 change            SQL               1.76              -0.19
</pre>

<p>Druhý soubor <strong>tiobeD.tsv</strong> taktéž obsahuje hlavičky sloupců a
dále spodní polovinu tabulky, tedy dolních dvacet řádků:</p>

<pre>
Sep 2020          Sep 2019          Change            Language          Ratings           Changep
11                14                change            Go                1.46              +0.24
12                16                change            Swift             1.38              +0.28
13                20                change            Perl              1.30              +0.26
14                12                change            Assembly language 1.30              -0.08
15                15                                  Ruby              1.24              +0.03
16                18                change            MATLAB            1.10              +0.04
17                11                change            Groovy            0.99              -0.52
18                33                change            Rust              0.92              +0.55
19                10                change            Objective-C       0.85              -0.99
20                24                change            Dart              0.77              +0.13
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;těchto dvou datových souborech
jsou jednotlivé položky odděleny znakem <strong>Tab</strong>, ovšem
v&nbsp;textu článku se tento znak expanduje na mezery (už jen z&nbsp;důvodu
větší čitelnosti).</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Spojení datových rámců po řádcích funkcí <strong>concat</strong></h2>

<p>Spojení dvou nebo i většího množství datových rámců nabízí funkce nazvaná
<strong>concat</strong>, která je aplikovatelná pro libovolný počet instancí
třídy <strong>DataFrame</strong>. Tato funkce dokáže datové rámce spojit buď po
sloupcích nebo po řádcích, a to v&nbsp;závislosti na hodnotě parametru
<strong>how</strong>, který by měl obsahovat hodnotu &bdquo;horizontal&ldquo;
nebo &bdquo;vertical&ldquo; (popř.&nbsp;nebýt vůbec uveden):</p>

<p>Vyzkoušejme si nejprve použití této funkce s&nbsp;<i>neuvedením</i> typu
spojení:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import polars
&nbsp;
<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = <strong>polars.read_csv("tiobeC.tsv", sep="\t")</strong>
df2 = <strong>polars.read_csv("tiobeD.tsv", sep="\t")</strong>
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
<i># bez uvedení parametru &bdquo;how&ldquo;</i>
concatenated = <strong>polars.concat([df1, df2])</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Výsledkem činnosti tohoto skriptu bude skutečně nový datový rámec, který
vznikne spojením obou zdrojových datových rámců. Skript nejdříve vypíše obsah
obou zdrojových rámců a pak i rámec cílový:</p>

<pre>
shape: (10, 6)
┌──────────┬──────────┬────────┬──────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language     ┆ Ratings ┆ Changep │
│ ---      ┆ ---      ┆ ---    ┆ ---          ┆ ---     ┆ ---     │
│ i64      ┆ i64      ┆ str    ┆ str          ┆ f64     ┆ f64     │
╞══════════╪══════════╪════════╪══════════════╪═════════╪═════════╡
│ 1        ┆ 2        ┆ change ┆ C            ┆ 15.95   ┆ 0.74    │
│ 2        ┆ 1        ┆ change ┆ Java         ┆ 13.48   ┆ -3.18   │
│ 3        ┆ 3        ┆ null   ┆ Python       ┆ 10.47   ┆ 0.59    │
│ 4        ┆ 4        ┆ null   ┆ C++          ┆ 7.11    ┆ 1.48    │
│ 5        ┆ 5        ┆ null   ┆ C#           ┆ 4.58    ┆ 1.18    │
│ 6        ┆ 6        ┆ null   ┆ Visual Basic ┆ 4.12    ┆ 0.83    │
│ 7        ┆ 7        ┆ null   ┆ JavaScript   ┆ 2.54    ┆ 0.41    │
│ 8        ┆ 9        ┆ change ┆ PHP          ┆ 2.49    ┆ 0.62    │
│ 9        ┆ 19       ┆ change ┆ R            ┆ 2.37    ┆ 1.33    │
│ 10       ┆ 8        ┆ change ┆ SQL          ┆ 1.76    ┆ -0.19   │
└──────────┴──────────┴────────┴──────────────┴─────────┴─────────┘
&nbsp;
shape: (10, 6)
┌──────────┬──────────┬────────┬───────────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language          ┆ Ratings ┆ Changep │
│ ---      ┆ ---      ┆ ---    ┆ ---               ┆ ---     ┆ ---     │
│ i64      ┆ i64      ┆ str    ┆ str               ┆ f64     ┆ f64     │
╞══════════╪══════════╪════════╪═══════════════════╪═════════╪═════════╡
│ 11       ┆ 14       ┆ change ┆ Go                ┆ 1.46    ┆ 0.24    │
│ 12       ┆ 16       ┆ change ┆ Swift             ┆ 1.38    ┆ 0.28    │
│ 13       ┆ 20       ┆ change ┆ Perl              ┆ 1.3     ┆ 0.26    │
│ 14       ┆ 12       ┆ change ┆ Assembly language ┆ 1.3     ┆ -0.08   │
│ 15       ┆ 15       ┆ null   ┆ Ruby              ┆ 1.24    ┆ 0.03    │
│ 16       ┆ 18       ┆ change ┆ MATLAB            ┆ 1.1     ┆ 0.04    │
│ 17       ┆ 11       ┆ change ┆ Groovy            ┆ 0.99    ┆ -0.52   │
│ 18       ┆ 33       ┆ change ┆ Rust              ┆ 0.92    ┆ 0.55    │
│ 19       ┆ 10       ┆ change ┆ Objective-C       ┆ 0.85    ┆ -0.99   │
│ 20       ┆ 24       ┆ change ┆ Dart              ┆ 0.77    ┆ 0.13    │
└──────────┴──────────┴────────┴───────────────────┴─────────┴─────────┘
&nbsp;
shape: (20, 6)
┌──────────┬──────────┬────────┬───────────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language          ┆ Ratings ┆ Changep │
│ ---      ┆ ---      ┆ ---    ┆ ---               ┆ ---     ┆ ---     │
│ i64      ┆ i64      ┆ str    ┆ str               ┆ f64     ┆ f64     │
╞══════════╪══════════╪════════╪═══════════════════╪═════════╪═════════╡
│ 1        ┆ 2        ┆ change ┆ C                 ┆ 15.95   ┆ 0.74    │
│ 2        ┆ 1        ┆ change ┆ Java              ┆ 13.48   ┆ -3.18   │
│ 3        ┆ 3        ┆ null   ┆ Python            ┆ 10.47   ┆ 0.59    │
│ 4        ┆ 4        ┆ null   ┆ C++               ┆ 7.11    ┆ 1.48    │
│ 5        ┆ 5        ┆ null   ┆ C#                ┆ 4.58    ┆ 1.18    │
│ 6        ┆ 6        ┆ null   ┆ Visual Basic      ┆ 4.12    ┆ 0.83    │
│ 7        ┆ 7        ┆ null   ┆ JavaScript        ┆ 2.54    ┆ 0.41    │
│ 8        ┆ 9        ┆ change ┆ PHP               ┆ 2.49    ┆ 0.62    │
│ 9        ┆ 19       ┆ change ┆ R                 ┆ 2.37    ┆ 1.33    │
│ 10       ┆ 8        ┆ change ┆ SQL               ┆ 1.76    ┆ -0.19   │
│ 11       ┆ 14       ┆ change ┆ Go                ┆ 1.46    ┆ 0.24    │
│ 12       ┆ 16       ┆ change ┆ Swift             ┆ 1.38    ┆ 0.28    │
│ 13       ┆ 20       ┆ change ┆ Perl              ┆ 1.3     ┆ 0.26    │
│ 14       ┆ 12       ┆ change ┆ Assembly language ┆ 1.3     ┆ -0.08   │
│ 15       ┆ 15       ┆ null   ┆ Ruby              ┆ 1.24    ┆ 0.03    │
│ 16       ┆ 18       ┆ change ┆ MATLAB            ┆ 1.1     ┆ 0.04    │
│ 17       ┆ 11       ┆ change ┆ Groovy            ┆ 0.99    ┆ -0.52   │
│ 18       ┆ 33       ┆ change ┆ Rust              ┆ 0.92    ┆ 0.55    │
│ 19       ┆ 10       ┆ change ┆ Objective-C       ┆ 0.85    ┆ -0.99   │
│ 20       ┆ 24       ┆ change ┆ Dart              ┆ 0.77    ┆ 0.13    │
└──────────┴──────────┴────────┴───────────────────┴─────────┴─────────┘
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Explicitní specifikace vertikálního spojení ve funkci <strong>concat</strong></h2>

<p>Vzhledem k&nbsp;tomu, že funkce <strong>concat</strong> dokáže rámce spojit
jak po řádcích, tak i po sloupcích, je vhodné vždy uvádět (nepovinný) parametr
<strong>how</strong> a nastavit ho na hodnotu &bdquo;vertical&ldquo; (po
řádcích) nebo &bdquo;horizontal&ldquo; (po sloupcích):</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import polars
&nbsp;
<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = <strong>polars.read_csv("tiobeC.tsv", sep="\t")</strong>
df2 = <strong>polars.read_csv("tiobeD.tsv", sep="\t")</strong>
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
concatenated = <strong>polars.concat([df1, df2], <u>how="vertical"</u>)</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Výsledek by měl být totožný s&nbsp;předchozím demonstračním příkladem:</p>

<pre>
shape: (10, 6)
┌──────────┬──────────┬────────┬──────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language     ┆ Ratings ┆ Changep │
│ ---      ┆ ---      ┆ ---    ┆ ---          ┆ ---     ┆ ---     │
│ i64      ┆ i64      ┆ str    ┆ str          ┆ f64     ┆ f64     │
╞══════════╪══════════╪════════╪══════════════╪═════════╪═════════╡
│ 1        ┆ 2        ┆ change ┆ C            ┆ 15.95   ┆ 0.74    │
│ 2        ┆ 1        ┆ change ┆ Java         ┆ 13.48   ┆ -3.18   │
│ 3        ┆ 3        ┆ null   ┆ Python       ┆ 10.47   ┆ 0.59    │
│ 4        ┆ 4        ┆ null   ┆ C++          ┆ 7.11    ┆ 1.48    │
│ 5        ┆ 5        ┆ null   ┆ C#           ┆ 4.58    ┆ 1.18    │
│ 6        ┆ 6        ┆ null   ┆ Visual Basic ┆ 4.12    ┆ 0.83    │
│ 7        ┆ 7        ┆ null   ┆ JavaScript   ┆ 2.54    ┆ 0.41    │
│ 8        ┆ 9        ┆ change ┆ PHP          ┆ 2.49    ┆ 0.62    │
│ 9        ┆ 19       ┆ change ┆ R            ┆ 2.37    ┆ 1.33    │
│ 10       ┆ 8        ┆ change ┆ SQL          ┆ 1.76    ┆ -0.19   │
└──────────┴──────────┴────────┴──────────────┴─────────┴─────────┘
&nbsp;
shape: (10, 6)
┌──────────┬──────────┬────────┬───────────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language          ┆ Ratings ┆ Changep │
│ ---      ┆ ---      ┆ ---    ┆ ---               ┆ ---     ┆ ---     │
│ i64      ┆ i64      ┆ str    ┆ str               ┆ f64     ┆ f64     │
╞══════════╪══════════╪════════╪═══════════════════╪═════════╪═════════╡
│ 11       ┆ 14       ┆ change ┆ Go                ┆ 1.46    ┆ 0.24    │
│ 12       ┆ 16       ┆ change ┆ Swift             ┆ 1.38    ┆ 0.28    │
│ 13       ┆ 20       ┆ change ┆ Perl              ┆ 1.3     ┆ 0.26    │
│ 14       ┆ 12       ┆ change ┆ Assembly language ┆ 1.3     ┆ -0.08   │
│ 15       ┆ 15       ┆ null   ┆ Ruby              ┆ 1.24    ┆ 0.03    │
│ 16       ┆ 18       ┆ change ┆ MATLAB            ┆ 1.1     ┆ 0.04    │
│ 17       ┆ 11       ┆ change ┆ Groovy            ┆ 0.99    ┆ -0.52   │
│ 18       ┆ 33       ┆ change ┆ Rust              ┆ 0.92    ┆ 0.55    │
│ 19       ┆ 10       ┆ change ┆ Objective-C       ┆ 0.85    ┆ -0.99   │
│ 20       ┆ 24       ┆ change ┆ Dart              ┆ 0.77    ┆ 0.13    │
└──────────┴──────────┴────────┴───────────────────┴─────────┴─────────┘
&nbsp;
shape: (20, 6)
┌──────────┬──────────┬────────┬───────────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language          ┆ Ratings ┆ Changep │
│ ---      ┆ ---      ┆ ---    ┆ ---               ┆ ---     ┆ ---     │
│ i64      ┆ i64      ┆ str    ┆ str               ┆ f64     ┆ f64     │
╞══════════╪══════════╪════════╪═══════════════════╪═════════╪═════════╡
│ 1        ┆ 2        ┆ change ┆ C                 ┆ 15.95   ┆ 0.74    │
│ 2        ┆ 1        ┆ change ┆ Java              ┆ 13.48   ┆ -3.18   │
│ 3        ┆ 3        ┆ null   ┆ Python            ┆ 10.47   ┆ 0.59    │
│ 4        ┆ 4        ┆ null   ┆ C++               ┆ 7.11    ┆ 1.48    │
│ 5        ┆ 5        ┆ null   ┆ C#                ┆ 4.58    ┆ 1.18    │
│ 6        ┆ 6        ┆ null   ┆ Visual Basic      ┆ 4.12    ┆ 0.83    │
│ 7        ┆ 7        ┆ null   ┆ JavaScript        ┆ 2.54    ┆ 0.41    │
│ 8        ┆ 9        ┆ change ┆ PHP               ┆ 2.49    ┆ 0.62    │
│ 9        ┆ 19       ┆ change ┆ R                 ┆ 2.37    ┆ 1.33    │
│ 10       ┆ 8        ┆ change ┆ SQL               ┆ 1.76    ┆ -0.19   │
│ 11       ┆ 14       ┆ change ┆ Go                ┆ 1.46    ┆ 0.24    │
│ 12       ┆ 16       ┆ change ┆ Swift             ┆ 1.38    ┆ 0.28    │
│ 13       ┆ 20       ┆ change ┆ Perl              ┆ 1.3     ┆ 0.26    │
│ 14       ┆ 12       ┆ change ┆ Assembly language ┆ 1.3     ┆ -0.08   │
│ 15       ┆ 15       ┆ null   ┆ Ruby              ┆ 1.24    ┆ 0.03    │
│ 16       ┆ 18       ┆ change ┆ MATLAB            ┆ 1.1     ┆ 0.04    │
│ 17       ┆ 11       ┆ change ┆ Groovy            ┆ 0.99    ┆ -0.52   │
│ 18       ┆ 33       ┆ change ┆ Rust              ┆ 0.92    ┆ 0.55    │
│ 19       ┆ 10       ┆ change ┆ Objective-C       ┆ 0.85    ┆ -0.99   │
│ 20       ┆ 24       ┆ change ┆ Dart              ┆ 0.77    ┆ 0.13    │
└──────────┴──────────┴────────┴───────────────────┴─────────┴─────────┘
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Horizontální spojení datových rámců</h2>

<p>V&nbsp;další části článku si vysvětlíme, jak probíhá spojování datových
rámců &bdquo;po sloupcích&ldquo; neboli horizontálně. K&nbsp;tomuto účelu budou
použity odlišné datové soubory &ndash; <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/tiobeE.tsv">tiobeE.tsv</a>
a <a
href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/tiobeF.tsv">tiobeF.tsv</a>.</p>

<p>Soubor <strong>tiobeE.tsv</strong> obsahuje pouze tři vybrané sloupce
z&nbsp;původního rámce (tabulky). Mimochodem &ndash; žádný z&nbsp;těchto
sloupců by nemohl sloužit jako index resp.&nbsp;primární klíč:</p>

<pre>
Language            Ratings             Changep
C                   15.95               +0.74
Java                13.48               -3.18
Python              10.47               +0.59
C++                 7.11                +1.48
C#                  4.58                +1.18
Visual Basic        4.12                +0.83
JavaScript          2.54                +0.41
PHP                 2.49                +0.62
R                   2.37                +1.33
SQL                 1.76                -0.19
Go                  1.46                +0.24
Swift               1.38                +0.28
Perl                1.30                +0.26
Assembly language   1.30                -0.08
Ruby                1.24                +0.03
MATLAB              1.10                +0.04
Groovy              0.99                -0.52
Rust                0.92                +0.55
Objective-C         0.85                -0.99
Dart                0.77                +0.13
</pre>

<p>Soubor nazvaný <strong>tiobeF.tsv</strong> taktéž obsahuje pouze vybrané
datové sloupce z&nbsp;původní tabulky:</p>

<pre>
Sep 2020            Sep 2019            Change              Language
1                   2                   change              C
2                   1                   change              Java
3                   3                                       Python
4                   4                                       C++
5                   5                                       C#
6                   6                                       Visual Basic
7                   7                                       JavaScript
8                   9                   change              PHP
9                   19                  change              R
10                  8                   change              SQL
11                  14                  change              Go
12                  16                  change              Swift
13                  20                  change              Perl
14                  12                  change              Assembly language
15                  15                                      Ruby
16                  18                  change              MATLAB
17                  11                  change              Groovy
18                  33                  change              Rust
19                  10                  change              Objective-C
20                  24                  change              Dart
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že sloupec
&bdquo;Language&ldquo; existuje v&nbsp;obou tabulkách. Toho bylo možné využít
v&nbsp;knihovně Pandas pro transformaci těchto sloupců na indexy, ovšem
v&nbsp;Polars tento trik nelze využít.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. První (nefunkční) skript pro vertikální spojení datových rámců</h2>

<p>Nejprve si ukažme, jak se teoreticky provede spojení dvou datových rámců
(které nejsou dále upraveny) &bdquo;po sloupcích&ldquo; s&nbsp;využitím funkce
<strong>concat</strong>. V&nbsp;tomto případě je nutné funkci
<strong>concat</strong> předat seznam nebo n-tici, jejímiž prvky jsou reference
na spojované datové rámce. A samozřejmě nesmíme zapomenout na parametr
<strong>how</strong>, kterým určujeme, zda se spojení má provést po řádcích
nebo po sloupcích:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import polars
&nbsp;
<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = <strong>polars.read_csv("tiobeE.tsv", sep="\t")</strong>
df2 = <strong>polars.read_csv("tiobeF.tsv", sep="\t")</strong>
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
concatenated = <strong>polars.concat([df1, df2], how="horizontal")</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Tento skript po svém spuštění nejdříve zobrazí oba načtené zdrojové datové
rámce:</p>

<pre>
shape: (20, 3)
┌───────────────────┬─────────┬─────────┐
│ Language          ┆ Ratings ┆ Changep │
│ ---               ┆ ---     ┆ ---     │
│ str               ┆ f64     ┆ f64     │
╞═══════════════════╪═════════╪═════════╡
│ C                 ┆ 15.95   ┆ 0.74    │
│ Java              ┆ 13.48   ┆ -3.18   │
│ Python            ┆ 10.47   ┆ 0.59    │
│ C++               ┆ 7.11    ┆ 1.48    │
│ C#                ┆ 4.58    ┆ 1.18    │
│ Visual Basic      ┆ 4.12    ┆ 0.83    │
│ JavaScript        ┆ 2.54    ┆ 0.41    │
│ PHP               ┆ 2.49    ┆ 0.62    │
│ R                 ┆ 2.37    ┆ 1.33    │
│ SQL               ┆ 1.76    ┆ -0.19   │
│ Go                ┆ 1.46    ┆ 0.24    │
│ Swift             ┆ 1.38    ┆ 0.28    │
│ Perl              ┆ 1.3     ┆ 0.26    │
│ Assembly language ┆ 1.3     ┆ -0.08   │
│ Ruby              ┆ 1.24    ┆ 0.03    │
│ MATLAB            ┆ 1.1     ┆ 0.04    │
│ Groovy            ┆ 0.99    ┆ -0.52   │
│ Rust              ┆ 0.92    ┆ 0.55    │
│ Objective-C       ┆ 0.85    ┆ -0.99   │
│ Dart              ┆ 0.77    ┆ 0.13    │
└───────────────────┴─────────┴─────────┘
&nbsp;
shape: (20, 4)
┌──────────┬──────────┬────────┬───────────────────┐
│ Sep 2020 ┆ Sep 2019 ┆ Change ┆ Language          │
│ ---      ┆ ---      ┆ ---    ┆ ---               │
│ i64      ┆ i64      ┆ str    ┆ str               │
╞══════════╪══════════╪════════╪═══════════════════╡
│ 1        ┆ 2        ┆ change ┆ C                 │
│ 2        ┆ 1        ┆ change ┆ Java              │
│ 3        ┆ 3        ┆ null   ┆ Python            │
│ 4        ┆ 4        ┆ null   ┆ C++               │
│ 5        ┆ 5        ┆ null   ┆ C#                │
│ 6        ┆ 6        ┆ null   ┆ Visual Basic      │
│ 7        ┆ 7        ┆ null   ┆ JavaScript        │
│ 8        ┆ 9        ┆ change ┆ PHP               │
│ 9        ┆ 19       ┆ change ┆ R                 │
│ 10       ┆ 8        ┆ change ┆ SQL               │
│ 11       ┆ 14       ┆ change ┆ Go                │
│ 12       ┆ 16       ┆ change ┆ Swift             │
│ 13       ┆ 20       ┆ change ┆ Perl              │
│ 14       ┆ 12       ┆ change ┆ Assembly language │
│ 15       ┆ 15       ┆ null   ┆ Ruby              │
│ 16       ┆ 18       ┆ change ┆ MATLAB            │
│ 17       ┆ 11       ┆ change ┆ Groovy            │
│ 18       ┆ 33       ┆ change ┆ Rust              │
│ 19       ┆ 10       ┆ change ┆ Objective-C       │
│ 20       ┆ 24       ┆ change ┆ Dart              │
└──────────┴──────────┴────────┴───────────────────┘
</pre>

<p>V&nbsp;dalším kroku by mělo dojít ke spojení obou datových rámců. To se však
nepovede, a to z&nbsp;toho důvodu, že oba spojované rámce obsahují stejný
sloupec nazvaný &bdquo;Language&ldquo;:</p>

<pre>
Traceback (most recent call last):
  File "data_frame_concat_horizontally_1.py", line 32, in &lt;module&gt;
    concatenated = polars.concat([df1, df2], how="horizontal")
  File "/home/ptisnovs/.local/lib/python3.8/site-packages/polars/internals/functions.py", line 232, in concat
    out = pli.wrap_df(_hor_concat_df(items))
exceptions.DuplicateError: Cannot do hstack operation. Column with name: Language already exists
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Explicitní výběr sloupců z&nbsp;druhého datového rámce pro operaci spojení</h2>

<p>Oprava předchozího skriptu může proběhnout mnoha různými způsoby. Jeden
z&nbsp;možných způsobů spočívá v&nbsp;tom, že z&nbsp;prvního nebo druhého
datového rámce odstraníme sloupec &bdquo;Language&ldquo;. Například provedeme
odstranění tohoto sloupce ze druhého datového rámce:</p>

<pre>
df2 = <strong>df2.select(["Sep 2020", "Sep 2019", "Change"])</strong>
</pre>

<p>Upravený skript vypadá následovně:</p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import polars
&nbsp;
<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = polars.read_csv("tiobeE.tsv", sep="\t")
df2 = polars.read_csv("tiobeF.tsv", sep="\t")
&nbsp;
df2 = <strong>df2.select(["Sep 2020", "Sep 2019", "Change"])</strong>
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
concatenated = <strong>polars.concat([df1, df2], how="horizontal")</strong>
&nbsp;
<i># výpis výsledku</i>
print(concatenated)
</pre>

<p>Výsledek (zobrazíme si pouze výsledný datový rámec) již nyní odpovídá
očekávání &ndash; skutečně došlo ke spojení obou zdrojových rámců po
sloupcích:</p>

<pre>
shape: (20, 6)
┌───────────────────┬─────────┬─────────┬──────────┬──────────┬────────┐
│ Language          ┆ Ratings ┆ Changep ┆ Sep 2020 ┆ Sep 2019 ┆ Change │
│ ---               ┆ ---     ┆ ---     ┆ ---      ┆ ---      ┆ ---    │
│ str               ┆ f64     ┆ f64     ┆ i64      ┆ i64      ┆ str    │
╞═══════════════════╪═════════╪═════════╪══════════╪══════════╪════════╡
│ C                 ┆ 15.95   ┆ 0.74    ┆ 1        ┆ 2        ┆ change │
│ Java              ┆ 13.48   ┆ -3.18   ┆ 2        ┆ 1        ┆ change │
│ Python            ┆ 10.47   ┆ 0.59    ┆ 3        ┆ 3        ┆ null   │
│ C++               ┆ 7.11    ┆ 1.48    ┆ 4        ┆ 4        ┆ null   │
│ C#                ┆ 4.58    ┆ 1.18    ┆ 5        ┆ 5        ┆ null   │
│ Visual Basic      ┆ 4.12    ┆ 0.83    ┆ 6        ┆ 6        ┆ null   │
│ JavaScript        ┆ 2.54    ┆ 0.41    ┆ 7        ┆ 7        ┆ null   │
│ PHP               ┆ 2.49    ┆ 0.62    ┆ 8        ┆ 9        ┆ change │
│ R                 ┆ 2.37    ┆ 1.33    ┆ 9        ┆ 19       ┆ change │
│ SQL               ┆ 1.76    ┆ -0.19   ┆ 10       ┆ 8        ┆ change │
│ Go                ┆ 1.46    ┆ 0.24    ┆ 11       ┆ 14       ┆ change │
│ Swift             ┆ 1.38    ┆ 0.28    ┆ 12       ┆ 16       ┆ change │
│ Perl              ┆ 1.3     ┆ 0.26    ┆ 13       ┆ 20       ┆ change │
│ Assembly language ┆ 1.3     ┆ -0.08   ┆ 14       ┆ 12       ┆ change │
│ Ruby              ┆ 1.24    ┆ 0.03    ┆ 15       ┆ 15       ┆ null   │
│ MATLAB            ┆ 1.1     ┆ 0.04    ┆ 16       ┆ 18       ┆ change │
│ Groovy            ┆ 0.99    ┆ -0.52   ┆ 17       ┆ 11       ┆ change │
│ Rust              ┆ 0.92    ┆ 0.55    ┆ 18       ┆ 33       ┆ change │
│ Objective-C       ┆ 0.85    ┆ -0.99   ┆ 19       ┆ 10       ┆ change │
│ Dart              ┆ 0.77    ┆ 0.13    ┆ 20       ┆ 24       ┆ change │
└───────────────────┴─────────┴─────────┴──────────┴──────────┴────────┘
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Spojení dvou datových rámců operací typu <strong>join</strong></h2>

<pre>
Sep 2019            Change              Language            Ratings             Changep
2                   change              C                   15.95               +0.74
1                   change              Java                13.48               -3.18
3                                       Python              10.47               +0.59
4                                       C++                 7.11                +1.48
5                                       C#                  4.58                +1.18
6                                       Visual Basic        4.12                +0.83
7                                       JavaScript          2.54                +0.41
9                   change              PHP                 2.49                +0.62
19                  change              R                   2.37                +1.33
8                   change              SQL                 1.76                -0.19
14                  change              Go                  1.46                +0.24
16                  change              Swift               1.38                +0.28
20                  change              Perl                1.30                +0.26
12                  change              Assembly language   1.30                -0.08
15                                      Ruby                1.24                +0.03
</pre>

<pre>
Sep 2020            Change              Language            Ratings             Changep
1                   change              C                   15.95               +0.74
2                   change              Java                13.48               -3.18
3                                       Python              10.47               +0.59
4                                       C++                 7.11                +1.48
5                                       C#                  4.58                +1.18
6                                       Visual Basic        4.12                +0.83
7                                       JavaScript          2.54                +0.41
8                   change              PHP                 2.49                +0.62
9                   change              R                   2.37                +1.33
10                  change              SQL                 1.76                -0.19
16                  change              MATLAB              1.10                +0.04
17                  change              Groovy              0.99                -0.52
18                  change              Rust                0.92                +0.55
19                  change              Objective-C         0.85                -0.99
20                  change              Dart                0.77                +0.13
</pre>

<pre>
shape: (15, 5)
┌──────────┬────────┬───────────────────┬─────────┬─────────┐
│ Sep 2019 ┆ Change ┆ Language          ┆ Ratings ┆ Changep │
│ ---      ┆ ---    ┆ ---               ┆ ---     ┆ ---     │
│ i64      ┆ str    ┆ str               ┆ f64     ┆ f64     │
╞══════════╪════════╪═══════════════════╪═════════╪═════════╡
│ 2        ┆ change ┆ C                 ┆ 15.95   ┆ 0.74    │
│ 1        ┆ change ┆ Java              ┆ 13.48   ┆ -3.18   │
│ 3        ┆ null   ┆ Python            ┆ 10.47   ┆ 0.59    │
│ 4        ┆ null   ┆ C++               ┆ 7.11    ┆ 1.48    │
│ 5        ┆ null   ┆ C#                ┆ 4.58    ┆ 1.18    │
│ 6        ┆ null   ┆ Visual Basic      ┆ 4.12    ┆ 0.83    │
│ 7        ┆ null   ┆ JavaScript        ┆ 2.54    ┆ 0.41    │
│ 9        ┆ change ┆ PHP               ┆ 2.49    ┆ 0.62    │
│ 19       ┆ change ┆ R                 ┆ 2.37    ┆ 1.33    │
│ 8        ┆ change ┆ SQL               ┆ 1.76    ┆ -0.19   │
│ 14       ┆ change ┆ Go                ┆ 1.46    ┆ 0.24    │
│ 16       ┆ change ┆ Swift             ┆ 1.38    ┆ 0.28    │
│ 20       ┆ change ┆ Perl              ┆ 1.3     ┆ 0.26    │
│ 12       ┆ change ┆ Assembly language ┆ 1.3     ┆ -0.08   │
│ 15       ┆ null   ┆ Ruby              ┆ 1.24    ┆ 0.03    │
└──────────┴────────┴───────────────────┴─────────┴─────────┘
</pre>

<pre>
shape: (15, 5)
┌──────────┬────────┬──────────────┬─────────┬─────────┐
│ Sep 2020 ┆ Change ┆ Language     ┆ Ratings ┆ Changep │
│ ---      ┆ ---    ┆ ---          ┆ ---     ┆ ---     │
│ i64      ┆ str    ┆ str          ┆ f64     ┆ f64     │
╞══════════╪════════╪══════════════╪═════════╪═════════╡
│ 1        ┆ change ┆ C            ┆ 15.95   ┆ 0.74    │
│ 2        ┆ change ┆ Java         ┆ 13.48   ┆ -3.18   │
│ 3        ┆ null   ┆ Python       ┆ 10.47   ┆ 0.59    │
│ 4        ┆ null   ┆ C++          ┆ 7.11    ┆ 1.48    │
│ 5        ┆ null   ┆ C#           ┆ 4.58    ┆ 1.18    │
│ 6        ┆ null   ┆ Visual Basic ┆ 4.12    ┆ 0.83    │
│ 7        ┆ null   ┆ JavaScript   ┆ 2.54    ┆ 0.41    │
│ 8        ┆ change ┆ PHP          ┆ 2.49    ┆ 0.62    │
│ 9        ┆ change ┆ R            ┆ 2.37    ┆ 1.33    │
│ 10       ┆ change ┆ SQL          ┆ 1.76    ┆ -0.19   │
│ 16       ┆ change ┆ MATLAB       ┆ 1.1     ┆ 0.04    │
│ 17       ┆ change ┆ Groovy       ┆ 0.99    ┆ -0.52   │
│ 18       ┆ change ┆ Rust         ┆ 0.92    ┆ 0.55    │
│ 19       ┆ change ┆ Objective-C  ┆ 0.85    ┆ -0.99   │
│ 20       ┆ change ┆ Dart         ┆ 0.77    ┆ 0.13    │
└──────────┴────────┴──────────────┴─────────┴─────────┘
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import polars
&nbsp;
<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)
&nbsp;
<i># přečtení zdrojových dat</i>
df1 = polars.read_csv("tiobeA.tsv", sep="\t")
df2 = polars.read_csv("tiobeB.tsv", sep="\t")
&nbsp;
<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()
&nbsp;
<i># spojení obou datových rámců</i>
merged = df1.join(df2, on="Language", how="inner")
&nbsp;
<i># výpis výsledku</i>
print(merged)
</pre>

<pre>
shape: (10, 9)
┌──────────┬────────┬──────────────┬─────────┬─────┬──────────┬──────────────┬───────────────┬───────────────┐
│ Sep 2019 ┆ Change ┆ Language     ┆ Ratings ┆ ... ┆ Sep 2020 ┆ Change_right ┆ Ratings_right ┆ Changep_right │
│ ---      ┆ ---    ┆ ---          ┆ ---     ┆     ┆ ---      ┆ ---          ┆ ---           ┆ ---           │
│ i64      ┆ str    ┆ str          ┆ f64     ┆     ┆ i64      ┆ str          ┆ f64           ┆ f64           │
╞══════════╪════════╪══════════════╪═════════╪═════╪══════════╪══════════════╪═══════════════╪═══════════════╡
│ 2        ┆ change ┆ C            ┆ 15.95   ┆ ... ┆ 1        ┆ change       ┆ 15.95         ┆ 0.74          │
│ 1        ┆ change ┆ Java         ┆ 13.48   ┆ ... ┆ 2        ┆ change       ┆ 13.48         ┆ -3.18         │
│ 3        ┆ null   ┆ Python       ┆ 10.47   ┆ ... ┆ 3        ┆ null         ┆ 10.47         ┆ 0.59          │
│ 4        ┆ null   ┆ C++          ┆ 7.11    ┆ ... ┆ 4        ┆ null         ┆ 7.11          ┆ 1.48          │
│ 5        ┆ null   ┆ C#           ┆ 4.58    ┆ ... ┆ 5        ┆ null         ┆ 4.58          ┆ 1.18          │
│ 6        ┆ null   ┆ Visual Basic ┆ 4.12    ┆ ... ┆ 6        ┆ null         ┆ 4.12          ┆ 0.83          │
│ 7        ┆ null   ┆ JavaScript   ┆ 2.54    ┆ ... ┆ 7        ┆ null         ┆ 2.54          ┆ 0.41          │
│ 9        ┆ change ┆ PHP          ┆ 2.49    ┆ ... ┆ 8        ┆ change       ┆ 2.49          ┆ 0.62          │
│ 19       ┆ change ┆ R            ┆ 2.37    ┆ ... ┆ 9        ┆ change       ┆ 2.37          ┆ 1.33          │
│ 8        ┆ change ┆ SQL          ┆ 1.76    ┆ ... ┆ 10       ┆ change       ┆ 1.76          ┆ -0.19         │
└──────────┴────────┴──────────────┴─────────┴─────┴──────────┴──────────────┴───────────────┴───────────────┘
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

import polars

<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)

<i># přečtení zdrojových dat</i>
df1 = polars.read_csv("tiobeA.tsv", sep="\t")
df2 = polars.read_csv("tiobeB.tsv", sep="\t")

<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()

<i># spojení obou datových rámců</i>
merged = df1.join(df2, on="Language", how="left")

<i># výpis výsledku</i>
print(merged)
</pre>

<pre>
shape: (15, 9)
┌──────────┬────────┬───────────────────┬─────────┬─────┬──────────┬──────────────┬───────────────┬───────────────┐
│ Sep 2019 ┆ Change ┆ Language          ┆ Ratings ┆ ... ┆ Sep 2020 ┆ Change_right ┆ Ratings_right ┆ Changep_right │
│ ---      ┆ ---    ┆ ---               ┆ ---     ┆     ┆ ---      ┆ ---          ┆ ---           ┆ ---           │
│ i64      ┆ str    ┆ str               ┆ f64     ┆     ┆ i64      ┆ str          ┆ f64           ┆ f64           │
╞══════════╪════════╪═══════════════════╪═════════╪═════╪══════════╪══════════════╪═══════════════╪═══════════════╡
│ 2        ┆ change ┆ C                 ┆ 15.95   ┆ ... ┆ 1        ┆ change       ┆ 15.95         ┆ 0.74          │
│ 1        ┆ change ┆ Java              ┆ 13.48   ┆ ... ┆ 2        ┆ change       ┆ 13.48         ┆ -3.18         │
│ 3        ┆ null   ┆ Python            ┆ 10.47   ┆ ... ┆ 3        ┆ null         ┆ 10.47         ┆ 0.59          │
│ 4        ┆ null   ┆ C++               ┆ 7.11    ┆ ... ┆ 4        ┆ null         ┆ 7.11          ┆ 1.48          │
│ 5        ┆ null   ┆ C#                ┆ 4.58    ┆ ... ┆ 5        ┆ null         ┆ 4.58          ┆ 1.18          │
│ 6        ┆ null   ┆ Visual Basic      ┆ 4.12    ┆ ... ┆ 6        ┆ null         ┆ 4.12          ┆ 0.83          │
│ 7        ┆ null   ┆ JavaScript        ┆ 2.54    ┆ ... ┆ 7        ┆ null         ┆ 2.54          ┆ 0.41          │
│ 9        ┆ change ┆ PHP               ┆ 2.49    ┆ ... ┆ 8        ┆ change       ┆ 2.49          ┆ 0.62          │
│ 19       ┆ change ┆ R                 ┆ 2.37    ┆ ... ┆ 9        ┆ change       ┆ 2.37          ┆ 1.33          │
│ 8        ┆ change ┆ SQL               ┆ 1.76    ┆ ... ┆ 10       ┆ change       ┆ 1.76          ┆ -0.19         │
│ 14       ┆ change ┆ Go                ┆ 1.46    ┆ ... ┆ null     ┆ null         ┆ null          ┆ null          │
│ 16       ┆ change ┆ Swift             ┆ 1.38    ┆ ... ┆ null     ┆ null         ┆ null          ┆ null          │
│ 20       ┆ change ┆ Perl              ┆ 1.3     ┆ ... ┆ null     ┆ null         ┆ null          ┆ null          │
│ 12       ┆ change ┆ Assembly language ┆ 1.3     ┆ ... ┆ null     ┆ null         ┆ null          ┆ null          │
│ 15       ┆ null   ┆ Ruby              ┆ 1.24    ┆ ... ┆ null     ┆ null         ┆ null          ┆ null          │
└──────────┴────────┴───────────────────┴─────────┴─────┴──────────┴──────────────┴───────────────┴───────────────┘
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

import polars

<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)

<i># přečtení zdrojových dat</i>
df1 = polars.read_csv("tiobeA.tsv", sep="\t")
df2 = polars.read_csv("tiobeB.tsv", sep="\t")

<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()

<i># spojení obou datových rámců</i>
merged = df1.join(df2, on="Language", how="outer")

<i># výpis výsledku</i>
print(merged)
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

import polars

<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)

<i># přečtení zdrojových dat</i>
df1 = polars.DataFrame(["wonderful", "terible", "popular", "fast", "slow"])
df2 = polars.DataFrame(["Python", "Perl", "Java", "Go"])

<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()

<i># spojení obou datových rámců</i>
merged = df1.join(df2, on="Language", how="cross")

<i># výpis výsledku</i>
print(merged)
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>

import polars

<i># maximální počet zobrazených řádků</i>
polars.Config.set_tbl_rows(100)

<i># přečtení zdrojových dat</i>
df1 = polars.read_csv("tiobeA.tsv", sep="\t")
df2 = polars.read_csv("tiobeB.tsv", sep="\t")

<i># datové rámce zobrazíme</i>
print(df1)
print()
print(df2)
print()

<i># spojení obou datových rámců</i>
merged = df1.join(df2, on="Language", how="cross")

<i># výpis výsledku</i>
print(merged)
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python 3 (nikoli ovšem pro starší verze Pythonu 2!) byly
uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>series_01_from_list.py</td><td>konstrukce datové řady ze seznamu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_01_from_list.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_01_from_list.py</a></td></tr>
<tr><td> 2</td><td>series_02_from_tuple.py</td><td>konstrukce datové řady z&nbsp;n-tice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_02_from_tuple.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_02_from_tuple.py</a></td></tr>
<tr><td> 3</td><td>series_03_from_range.py</td><td>konstrukce datové řady generátorem <strong>range</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_03_from_range.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_03_from_range.py</a></td></tr>
<tr><td> 4</td><td>series_04_from_other_type.py</td><td>použití odlišných datových typů prvků v&nbsp;datové řadě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_04_from_other_type.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_04_from_other_type.py</a></td></tr>
<tr><td> 5</td><td>series_05_strings.py</td><td>datová řada obsahující řetězce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_05_strings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_05_strings.py</a></td></tr>
<tr><td> 6</td><td>series_06_booleans.py</td><td>datová řada obsahující pravdivostní hodnoty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_06_booleans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_06_booleans.py</a></td></tr>
<tr><td> 7</td><td>series_07_null_value.py</td><td>datová řada obsahující prvky s&nbsp;hodnotou <strong>null</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_07_null_value.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_07_null_value.py</a></td></tr>
<tr><td> 8</td><td>series_08_type_specification.py</td><td>explicitní specifikace datového typu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_08_type_specification.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_08_type_specification.py</a></td></tr>
<tr><td> 9</td><td>series_09_select.py</td><td>výběr prvků z&nbsp;datové řady pomocí indexu, indexů či řezu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_09_select.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_09_select.py</a></td></tr>
<tr><td>10</td><td>series_10_filter.py</td><td>výběr prvků z&nbsp;datové řady pomocí filtru (podmínky)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_10_filter.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_10_filter.py</a></td></tr>
<tr><td>11</td><td>series_11_from_arange.py</td><td>konstrukce datové řady s&nbsp;využitím <strong>numpy.arange</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_11_from_arange.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_11_from_arange.py</a></td></tr>
<tr><td>12</td><td>series_12_from_linspace.py</td><td>konstrukce datové řady s&nbsp;využitím <strong>numpy.linspace</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_12_from_linspace.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/series_12_from_linspace.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>data_frame_01_load_csv.py</td><td>načtení dat ze souboru typu CSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_01_load_csv.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_01_load_csv.py</a></td></tr>
<tr><td>14</td><td>data_frame_02_load_csv_no_header_A.py</td><td>práce se soubory typu CSV bez hlavičky (nekorektní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_02_load_csv_no_header_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_02_load_csv_no_header_A.py</a></td></tr>
<tr><td>15</td><td>data_frame_03_load_csv_no_header_B.py</td><td>práce se soubory typu CSV bez hlavičky (korektní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_03_load_csv_no_header_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_03_load_csv_no_header_B.py</a></td></tr>
<tr><td>16</td><td>data_frame_04_load_csv_no_header_C.py</td><td>práce se soubory typu CSV bez hlavičky (korektní varianta s&nbsp;explicitními jmény sloupců)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_04_load_csv_no_header_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_04_load_csv_no_header_B.py</a></td></tr>
<tr><td>17</td><td>data_frame_05_load_tsv_A.py</td><td>práce se soubory typu TSV (nekorektní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_05_load_tsv_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_05_load_tsv_A.py</a></td></tr>
<tr><td>18</td><td>data_frame_06_load_tsv_B.py</td><td>práce se soubory typu TSV (korektní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_06_load_tsv_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_06_load_tsv_B.py</a></td></tr>
<tr><td>19</td><td>data_frame_07_describe.py</td><td>získání metainformací o datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_07_describe.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_07_describe.py</a></td></tr>
<tr><td>20</td><td>data_frame_08_timestamps_A.py</td><td>načtení dat obsahujících časová razítka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_08_timestamps_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_08_timestamps_A.py</a></td></tr>
<tr><td>21</td><td>data_frame_09_timestamps_B.py</td><td>načtení dat obsahujících časová razítka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_09_timestamps_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_09_timestamps_B.py</a></td></tr>
<tr><td>22</td><td>data_frame_10_load_sql_A.py</td><td>načtení dat z&nbsp;relační databáze s&nbsp;uložením výsledku ve formě datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_10_load_sql_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_10_load_sql_A.py</a></td></tr>
<tr><td>23</td><td>data_frame_11_load_sql_B.py</td><td>načtení dat z&nbsp;relační databáze s&nbsp;uložením výsledku ve formě datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_11_load_sql_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_11_load_sql_B.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>24</td><td>data_frame_12_head_A.py</td><td>zobrazení hlavičky datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_12_head_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_12_head_A.py</a></td></tr>
<tr><td>25</td><td>data_frame_13_head_B.py</td><td>zobrazení hlavičky datového rámce se specifikací počtu řádků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_13_head_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_13_head_B.py</a></td></tr>
<tr><td>26</td><td>data_frame_14_head_C.py</td><td>globální změna počtu zobrazených řádků u datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_14_head_C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_14_head_C.py</a></td></tr>
<tr><td>27</td><td>data_frame_15_formatting_A.py</td><td>různé způsoby naformátování obsahu datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_15_formatting_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_15_formatting_A.py</a></td></tr>
<tr><td>28</td><td>data_frame_16_formatting_B.py</td><td>různé způsoby naformátování obsahu datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_16_formatting_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_16_formatting_B.py</a></td></tr>
<tr><td>29</td><td>data_frame_17_sort.py</td><td>seřazení údajů v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_17_sort.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_17_sort.py</a></td></tr>
<tr><td>30</td><td>data_frame_18_sort_reverse.py</td><td>zpětné seřazení údajů v&nbsp;datovém rámci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_18_sort_reverse.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_18_sort_reverse.py</a></td></tr>
<tr><td>31</td><td>data_frame_19_unique.py</td><td>zajištění unikátnosti záznamů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_19_unique.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_19_unique.py</a></td></tr>
<tr><td>32</td><td>data_frame_20_map_conversion.py</td><td>konverze dat ve sloupci s&nbsp;využitím metody <strong>map</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_20_map_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_20_map_conversion.py</a></td></tr>
<tr><td>33</td><td>data_frame_21_apply_conversion.py</td><td>konverze dat ve sloupci s&nbsp;využitím metody <strong>apply</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_21_apply_conversion.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_21_apply_conversion.py</a></td></tr>
<tr><td>34</td><td>data_frame_22_group_by.py</td><td>seskupení údajů na základě zvoleného sloupce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_22_group_by.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_22_group_by.py</a></td></tr>
<tr><td>35</td><td>data_frame_23_group_by_sort.py</td><td>seskupení a seřazení údajů při agregaci na základě hodnot ve zvoleném sloupci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_23_group_by_sort.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_23_group_by_sort.py</a></td></tr>
<tr><td>36</td><td>data_frame_23_group_by_sort_B.py</td><td>ukázka rozdílů mezi použitím a nepoužitím <strong>sort</strong> při agregaci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_23_group_by_sort_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_23_group_by_sort_B.py</a></td></tr>
<tr><td>37</td><td>data_frame_24_sort_group_by_sort.py</td><td>kombinace <strong>sort</strong> a <strong>groupby</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_24_sort_group_by_sort.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_24_sort_group_by_sort.py</a></td></tr>
<tr><td>38</td><td>data_frame_25_group_by_len.py</td><td>jednoduchá agregace údajů při seskupení</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_25_group_by_len.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_25_group_by_len.py</a></td></tr>
<tr><td>39</td><td>data_frame_26_group_by_len_sort.py</td><td>jednoduchá agregace údajů při seskupení, kombinace se seřazením</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_26_group_by_len_sort.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_26_group_by_len_sort.py</a></td></tr>
<tr><td>40</td><td>data_frame_27_group_by_len_sort_reverse.py</td><td>jednoduchá agregace údajů při seskupení, kombinace se seřazením</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_27_group_by_len_sort_reverse.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_27_group_by_len_sort_reverse.py</a></td></tr>
<tr><td>41</td><td>data_frame_28_group_by_len_sort_reverse_head.py</td><td>kombinace předchozího s&nbsp;<strong>head</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_28_group_by_len_sort_reverse_head.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_28_group_by_len_sort_reverse_head.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>42</td><td>lazy_frame_01_scan_csv.py</td><td>líné načtení dat ze souboru typu CSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_01_scan_csv.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_01_scan_csv.py</a></td></tr>
<tr><td>43</td><td>lazy_frame_02_read_csv_and_convert.py</td><td>načtení dat ze souboru typu CSV do datového rámce a konverze na líný datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_02_read_csv_and_convert.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_02_read_csv_and_convert.py</a></td></tr>
<tr><td>44</td><td>lazy_frame_03_collect_to_df.py</td><td>převod líného datového rámce na běžný datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_03_collect_to_df.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_03_collect_to_df.py</a></td></tr>
<tr><td>45</td><td>lazy_frame_04_lazy_sort.py</td><td>operace <strong>sort</strong> aplikovaná líně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_04_lazy_sort.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_04_lazy_sort.py</a></td></tr>
<tr><td>46</td><td>lazy_frame_05_lazy_sort_reverse.py</td><td>dvojice operací <strong>sort</strong> + <strong>reverse</strong>, taktéž aplikovaných líně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_05_lazy_sort_reverse.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_05_lazy_sort_reverse.py</a></td></tr>
<tr><td>47</td><td>lazy_frame_06_describe_plan.py</td><td>zobrazení informací o plánovaných operacích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_06_describe_plan.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_06_describe_plan.py</a></td></tr>
<tr><td>48</td><td>lazy_frame_07_fetch.py</td><td>přečtení výseku dat z&nbsp;líného datového rámce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_07_fetch.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_07_fetch.py</a></td></tr>
<tr><td>49</td><td>lazy_frame_08_group_by.py</td><td>operace <strong>groupby</strong> následovaná agregací pro líný datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_08_group_by.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_08_group_by.py</a></td></tr>
<tr><td>50</td><td>lazy_frame_09_group_by_fetch_2.py</td><td>zjištění, jak vlastně přesně pracuje operace <strong>fetch</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_09_group_by_fetch_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_09_group_by_fetch_2.py</a></td></tr>
<tr><td>51</td><td>lazy_frame_10_group_by_len_sort_reverse_head.py</td><td>&bdquo;pipeline&ldquo; operací aplikovaných na líný datový rámec</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_10_group_by_len_sort_reverse_head.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_10_group_by_len_sort_reverse_head.py</a></td></tr>
<tr><td>52</td><td>lazy_frame_11_branching.py</td><td>rozvětvení plánů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_11_branching.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_11_branching.py</a></td></tr>
<tr><td>53</td><td>lazy_frame_12_visualization.py</td><td>vizualizace plánů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_12_visualization.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_12_visualization.py</a></td></tr>
<tr><td>54</td><td>lazy_frame_13_head_tail.py</td><td>kombinace operací <strong>head</strong> a <strong>tail</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_13_head_tail.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_13_head_tail.py</a></td></tr>
<tr><td>55</td><td>lazy_frame_14_head_tail_visualization.py</td><td>kombinace operací <strong>head</strong> a <strong>tail</strong>, vizualizace výsledného plánu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_14_head_tail_visualization.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/lazy_frame_14_head_tail_visualization.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>56</td><td>data_frame_concat.py</td><td>vertikální spojení dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat.py</a></td></tr>
<tr><td>57</td><td>data_frame_concat_vertically.py</td><td>vertikální spojení dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat_vertically.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat_vertically.py</a></td></tr>
<tr><td>58</td><td>data_frame_concat_horizontally_1.py</td><td>nekorektní horizontální spojení dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat_horizontally_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat_horizontally_1.py</a></td></tr>
<tr><td>59</td><td>data_frame_concat_horizontally_2.py</td><td>korektní horizontální spojení dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat_horizontally_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_concat_horizontally_2.py</a></td></tr>
<tr><td>60</td><td>data_frame_join_01_inner_join.py</td><td>inner join (vnitřní spojení) dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_01_inner_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_01_inner_join.py</a></td></tr>
<tr><td>61</td><td>data_frame_join_02_left_join.py</td><td>left join (vnější spojení &bdquo;zleva&ldquo;) dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_02_left_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_02_left_join.py</a></td></tr>
<tr><td>62</td><td>data_frame_join_03_outer_join.py</td><td>outer join (vnější spojení) dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_03_outer_join.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_03_outer_join.py</a></td></tr>
<tr><td>63</td><td>data_frame_join_04_cross_join_A.py</td><td>křížové spojení (kartézský součin) dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_04_cross_join_A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_04_cross_join_A.py</a></td></tr>
<tr><td>64</td><td>data_frame_join_04_cross_join_B.py</td><td>křížové spojení (kartézský součin) dvou datových rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_04_cross_join_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/polars/data_frame_join_04_cross_join_B.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Projekt Polars na GitHubu<br />
<a href="https://github.com/pola-rs/polars">https://github.com/pola-rs/polars</a>
</li>

<li>Dokumentace k&nbsp;projektu Polars (popis API)<br />
<a href="https://pola-rs.github.io/polars/py-polars/html/reference/index.html">https://pola-rs.github.io/polars/py-polars/html/reference/index.html</a>
</li>

<li>Polars: The Next Big Python Data Science Library... written in RUST? <br />
<a href="https://www.youtube.com/watch?v=VHqn7ufiilE">https://www.youtube.com/watch?v=VHqn7ufiilE</a>
</li>

<li>Polars API: funkce pro načtení datového rámce z&nbsp;CSV<br />
<a href="https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.read_csv.html">https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.read_csv.html</a>
</li>

<li>Polars API: funkce pro načtení datového rámce z&nbsp;relační databáze<br />
<a href="https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.read_sql.html">https://pola-rs.github.io/polars/py-polars/html/reference/api/polars.read_sql.html</a>
</li>

<li>Python’s Pandas vs Polars: Who Wins this Fight in Library <br />
<a href="https://analyticsindiamag.com/pythons-pandas-vs-polars-who-wins-this-fight-in-library/">https://analyticsindiamag.com/pythons-pandas-vs-polars-who-wins-this-fight-in-library/</a>
</li>

<li>Polars vs Pandas: what is more convenient?<br />
<a href="https://medium.com/@ilia.ozhmegov/polars-vs-pandas-what-is-more-convenient-331956742a69">https://medium.com/@ilia.ozhmegov/polars-vs-pandas-what-is-more-convenient-331956742a69</a>
</li>

<li>A Gentle Introduction to Pandas Data Analysis (on Kaggle)<br />
<a href="https://www.youtube.com/watch?v=_Eb0utIRdkw&list=PL7RwtdVQXQ8oYpuIIDWR0SaaSCe8ZeZ7t&index=4">https://www.youtube.com/watch?v=_Eb0utIRdkw&list=PL7RwtdVQXQ8oYpuIIDWR0SaaSCe8ZeZ7t&amp;index=4</a>
</li>

<li>Speed Up Your Pandas Dataframes<br />
<a href="https://www.youtube.com/watch?v=u4_c2LDi4b8&list=PL7RwtdVQXQ8oYpuIIDWR0SaaSCe8ZeZ7t&index=5">https://www.youtube.com/watch?v=u4_c2LDi4b8&list=PL7RwtdVQXQ8oYpuIIDWR0SaaSCe8ZeZ7t&amp;index=5</a>
</li>

<li>pandas.read_csv<br />
<a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html</a>
</li>

<li>How to define format when using pandas to_datetime?<br />
<a href="https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime">https://stackoverflow.com/questions/36848514/how-to-define-format-when-using-pandas-to-datetime</a>
</li>

<li>Pandas : skip rows while reading csv file to a Dataframe using read_csv() in Python<br />
<a href="https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/">https://thispointer.com/pandas-skip-rows-while-reading-csv-file-to-a-dataframe-using-read_csv-in-python/</a>
</li>

<li>Skip rows during csv import pandas<br />
<a href="https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas">https://stackoverflow.com/questions/20637439/skip-rows-during-csv-import-pandas</a>
</li>

<li>Denni kurz<br />
<a href="https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt">https://www.cnb.cz/cs/financni_trhy/devizovy_trh/kurzy_devizoveho_trhu/denni_kurz.txt</a>
</li>

<li>UUID objects according to RFC 4122 (knihovna pro Python)<br />
<a href="https://docs.python.org/3.5/library/uuid.html#uuid.uuid4">https://docs.python.org/3.5/library/uuid.html#uuid.uuid4</a>
</li>

<li>Object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Object_identifier">https://en.wikipedia.org/wiki/Object_identifier</a>
</li>

<li>Digital object identifier (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Digital_object_identifier">https://en.wikipedia.org/wiki/Digital_object_identifier</a>
</li>

<li>voluptuous na (na PyPi)<br />
<a href="https://pypi.python.org/pypi/voluptuous">https://pypi.python.org/pypi/voluptuous</a>
</li>

<li>Repositář knihovny voluptuous na GitHubu<br />
<a href="https://github.com/alecthomas/voluptuous">https://github.com/alecthomas/voluptuous</a>
</li>

<li>pytest-voluptuous 1.0.2 (na PyPi)<br />
<a href="https://pypi.org/project/pytest-voluptuous/">https://pypi.org/project/pytest-voluptuous/</a>
</li>

<li>pytest-voluptuous (na GitHubu)<br />
<a href="https://github.com/F-Secure/pytest-voluptuous">https://github.com/F-Secure/pytest-voluptuous</a>
</li>

<li>schemagic 0.9.1 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schemagic/0.9.1">https://pypi.python.org/pypi/schemagic/0.9.1</a>
</li>

<li>Schemagic / Schemagic.web (na GitHubu)<br />
<a href="https://github.com/Mechrophile/schemagic">https://github.com/Mechrophile/schemagic</a>
</li>

<li>schema 0.6.7 (na PyPi)<br />
<a href="https://pypi.python.org/pypi/schema">https://pypi.python.org/pypi/schema</a>
</li>

<li>schema (na GitHubu)<br />
<a href="https://github.com/keleshev/schema">https://github.com/keleshev/schema</a>
</li>

<li>KX v DBOps Benchmark Results by Ferenc Bodon<br />
<a href="https://community.kx.com/t5/Community-Blogs/KX-v-DBOps-Benchmark-Results-by-Ferenc-Bodon/ba-p/12182">https://community.kx.com/t5/Community-Blogs/KX-v-DBOps-Benchmark-Results-by-Ferenc-Bodon/ba-p/12182</a>
</li>

<li>TIOBE Index for January 2023<br />
<a href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a>
</li>

<li>Lazy evaluation<br />
<a href="https://en.wikipedia.org/wiki/Lazy_evaluation">https://en.wikipedia.org/wiki/Lazy_evaluation</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

