<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Datová analýza s&nbsp;využitím nástroje scikit-learn: první kroky</a></p>
<p><a href="#k02">2. Datová kolekce s&nbsp;rozměry květů kosatců (Iris Data Set)</a></p>
<p><a href="#k03">3. Načtení datové kolekce</a></p>
<p><a href="#k04">4. Metadata o datové kolekci</a></p>
<p><a href="#k05">5. Tvar dat &ndash; počet záznamů a počet proměnných</a></p>
<p><a href="#k06">6. Jména atributů, vztah mezi numerickou hodnotou s&nbsp;druhem rostliny a jejím jménem</a></p>
<p><a href="#k07">7. Korelační diagram pro dvojici vybraných proměnných</a></p>
<p><a href="#k08">8. Příprava pro tvorbu složitějších grafů</a></p>
<p><a href="#k09">9. Mřížka obsahující více korelačních diagramů</a></p>
<p><a href="#k10">10. Zobrazení základního histogramu pro data v&nbsp;sadě Iris</a></p>
<p><a href="#k11">11. Analýza hlavních komponent (PCA)</a></p>
<p><a href="#k12">12. Zobrazení PCA v&nbsp;3D grafu</a></p>
<p><a href="#k13">13. Základní shluková analýza</a></p>
<p><a href="#k14">14. Výsledky shlukové analýzy pro různé kombinace atributů</a></p>
<p><a href="#k15">*** 15. Vizualizace chybných &bdquo;klasifikací&ldquo; provedených shlukovou analýzou</a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Datová analýza s&nbsp;využitím nástroje scikit-learn: první kroky</h2>

3 species of iris
50 samples kazdy

mapping value -> jmeno atd.

LDA
supervised learning

typicky import jen casti sklearn

classification - supervised learning, response is categorical (pro iris - jen 3 mozne odpovedi)
regression - supervised learning, response is ordered and continuous (price, etc.)
- musime znat dopredu, co "targets" obsahuji

feature matrix in X
X = iris.data

response vector in y
y = iris.target

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-4.webp" class="image-1110846" width="180" height="97" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 1: Logo projektu Scikit-learn.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-1.webp" class="image-1110843" width="330" height="149" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 2: Logo projektu NumPy.</i></p>

<a href="https://www.root.cz/obrazek/1110845/"><img src="https://i.iinfo.cz/images/542/scikit-learn-1-3-prev.webp" class="image-1110845" width="370" height="74" data-prev-filename="https://i.iinfo.cz/images/542/scikit-learn-1-3-prev.webp" data-prev-width="370" data-prev-height="74" data-large-filename="https://i.iinfo.cz/images/542/scikit-learn-1-3-large.webp" data-large-width="720" data-large-height="144" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 3: Logo projektu Matplotlib.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-2.webp" class="image-1110844" width="450" height="182" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 4: Logo projektu Pandas.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Datová kolekce s&nbsp;rozměry květů kosatců (Iris Data Set)</h2>

<p>Ve <i>scikit-learn</i> nalezneme několik předpřipravených datových kolekcí,
na kterých si můžeme vyzkoušet základní vlastnosti tohoto nástroje. Jednou
z&nbsp;těchto datových kolekcí je i známá kolekce obsahující rozměry květů
různých druhů kosatců. Tato datová kolekce se nazývá buď <i>Iris (flower) data
set</i> nebo též <i>Fisher's Iris data set</i> a používá se velmi často při
výuce, při testování různých modelů atd. Iris data set obsahuje informace o
celkem 150 rostlinách, konkrétně rozměry jejich květů (viz první obrázek)
doplněné o konkrétní druh kosatce.</p>

*** image ***
<p><i>Obrázek 5: Čtyři rozměry, které jsou u každé rostliny změřeny a uloženy
do datové sady.</i></p>

<p>Každá z&nbsp;rostlin, jejichž základní rozměry jsou v&nbsp;datové sadě
uloženy, je druhu <i>Iris Setosa</i>, <i>Iris Versicolour</i> (psáno též
<i>Versicolor</i>) nebo <i>Iris Virginica</i>, viz též <a
href="https://cs.wikipedia.org/wiki/Kosatec#Seznam_druh%C5%AF">seznam druhů
kosatců</a>.</p>

*** image ***
<p><i>Obrázek 6: Iris Setosa (Zdroj: Wikipedia).</i></p>

*** image ***
<p><i>Obrázek 7: Iris Versicolor (Zdroj: Wikipedia).</i></p>

*** image ***
<p><i>Obrázek 8: Iris Virginica (Zdroj: Wikipedia).</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Načtení datové kolekce</h2>

<p>Vyzkoušejme si nyní načtení <a href="#k02">výše zmíněné</a> datové kolekce.
Je to snadné. Na prvním místě je nutné si říci, že <i>scikit-learn</i> není
jediným balíčkem, ale sada hierarchicky uspořádaných balíčků, což může být
zpočátku poněkud matoucí, ale rozdělení je logické a pomáhá v&nbsp;orientaci ve
scikit-learnu. Předpřipravené datové sady nalezneme v&nbsp;balíčku nazvaném
<strong>sklearn.datasets</strong>. Sem pochopitelně patří i Iris data set, pro
který je definována funkce <strong>load_iris</strong>, kterou si můžeme
naimporotvat. Po zavolání této funkce se datová sada skutečně načte a vrátí se
jako návratový typ funkce:</p>

<pre>
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># jakeho typu je vlastne datova sada?</i>
print(type(iris))
&nbsp;
print("-" * 100)
&nbsp;
<i># dostupne atributy a metody</i>
print(dir(iris))
</pre>

<p>Povšimněte si, jakého typu je vrácená hodnota, protože se jedná o datový
typ, ke kterému se později ještě vrátíme. Tato hodnota neobsahuje pouze
&bdquo;čistá data&ldquo;, ale i další informace o metainformace, o čemž nás
informuje třetí řádek ve výpisu:</p>

<pre>
<class 'sklearn.utils._bunch.Bunch'>
----------------------------------------------------------------------------------------------------
['DESCR', 'data', 'data_module', 'feature_names', 'filename', 'frame', 'target', 'target_names']
</pre>

<p><div class="rs-tip-major">Poznámka: prakticky všechny datové typy (tedy
třídy), funkce a balíčky jsou ve <i>scikit-learn</i> doplněny o poměrně
kvalitní nápovědu. Zkusme si tedy zobrazit nápovědu k&nbsp;výše zmíněné funkci
<strong>load_iris</strong>:</div></p>

<pre>
help(load_iris)
</pre>

<p>Zobrazí se:</p>

<pre>
    Load and return the iris dataset (classification).
&nbsp;    
    The iris dataset is a classic and very easy multi-class classification
    dataset.
 &nbsp;       
    =================   ==============
    Classes                          3
    Samples per class               50
    Samples total                  150
    Dimensionality                   4
    Features            real, positive
    =================   ==============
&nbsp;
    Read more in the :ref:`User Guide &lt;iris_dataset&gt;`.
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Metadata o datové kolekci</h2>

<p>V&nbsp;předchozím textu jsme si kromě jiného řekli, že datové kolekce
obsahují kromě &bdquo;čistých dat&ldquo; i další informace a metainformace.
Zobrazme si tedy popis datové kolekce, který je uložen v&nbsp;atributu
<strong>DESCR</strong> (a přistupujeme k&nbsp;němu pomocí tečkové notace),
ovšem stejně tak můžeme tento atribut přečíst tak, jakoby datová sada byla
slovník (potom je popis uložen pod klíčem &bdquo;DESCR&ldquo;). Ve druhém
demonstračním příkladu použijeme druhý způsob, ovšem výsledek je naprosto
stejný, jako kdybychom přečetli atribut <strong>DESCR</strong>:</p>

<pre>
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
print(dir(iris))
&nbsp;
print("-" * 100)
&nbsp;
<i># podrobny popis datove sady</i>
print(iris["DESCR"])
</pre>

<p>Z&nbsp;výsledků je patrné, že popis datové kolekce je velmi podrobný, což je
jen dobře:</p>

<pre>
['DESCR', 'data', 'data_module', 'feature_names', 'filename', 'frame', 'target', 'target_names']
----------------------------------------------------------------------------------------------------
.. _iris_dataset:
&nbsp;
Iris plants dataset
--------------------
&nbsp;
**Data Set Characteristics:**
&nbsp;
:Number of Instances: 150 (50 in each of three classes)
:Number of Attributes: 4 numeric, predictive attributes and the class
:Attribute Information:
    - sepal length in cm
    - sepal width in cm
    - petal length in cm
    - petal width in cm
    - class:
            - Iris-Setosa
            - Iris-Versicolour
            - Iris-Virginica
&nbsp;
:Summary Statistics:
&nbsp;
============== ==== ==== ======= ===== ====================
                Min  Max   Mean    SD   Class Correlation
============== ==== ==== ======= ===== ====================
sepal length:   4.3  7.9   5.84   0.83    0.7826
sepal width:    2.0  4.4   3.05   0.43   -0.4194
petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)
petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)
============== ==== ==== ======= ===== ====================
&nbsp;
:Missing Attribute Values: None
:Class Distribution: 33.3% for each of 3 classes.
:Creator: R.A. Fisher
:Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)
:Date: July, 1988
&nbsp;
The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken
from Fisher's paper. Note that it's the same as in R, but not as in the UCI
Machine Learning Repository, which has two wrong data points.
&nbsp;
This is perhaps the best known database to be found in the
pattern recognition literature.  Fisher's paper is a classic in the field and
is referenced frequently to this day.  (See Duda &amp; Hart, for example.)  The
data set contains 3 classes of 50 instances each, where each class refers to a
type of iris plant.  One class is linearly separable from the other 2; the
latter are NOT linearly separable from each other.
&nbsp;
|details-start|
**References**
|details-split|
&nbsp;
- Fisher, R.A. "The use of multiple measurements in taxonomic problems"
  Annual Eugenics, 7, Part II, 179-188 (1936); also in "Contributions to
  Mathematical Statistics" (John Wiley, NY, 1950).
- Duda, R.O., &amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis.
  (Q327.D83) John Wiley &amp; Sons.  ISBN 0-471-22361-1.  See page 218.
- Dasarathy, B.V. (1980) "Nosing Around the Neighborhood: A New System
  Structure and Classification Rule for Recognition in Partially Exposed
  Environments".  IEEE Transactions on Pattern Analysis and Machine
  Intelligence, Vol. PAMI-2, No. 1, 67-71.
- Gates, G.W. (1972) "The Reduced Nearest Neighbor Rule".  IEEE Transactions
  on Information Theory, May 1972, 431-433.
- See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al"s AUTOCLASS II
  conceptual clustering system finds 3 classes in the data.
- Many, many more ...
&nbsp;
|details-end|
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Tvar dat &ndash; počet záznamů a počet proměnných</h2>

<p>Samotné rozměry květů kosatců jsou dostupné v&nbsp;atributu
<strong>data</strong> popř.&nbsp;pod klíčem &bdquo;data&ldquo;, pokud budeme
k&nbsp;datové sadě přistupovat tak, jakoby se jednalo o slovník. Rozměry květů
jsou uloženy formou n-dimenzionálního pole knihovny NumPy, což je datová
struktura, se kterou jsme se již na Rootu několikrát setkali. V&nbsp;tomto
konkrétním případě bude pole dvourozměrné, takže si ho můžeme představit jako
matici se 150 řádky (počet rostlin) a čtyřmi sloupci (čtyři rozměry květů):</p>

<pre>
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
print(dir(iris))
&nbsp;
print("-" * 100)
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris["data"]
&nbsp;
print("Feature data:")
print(data)
print("-" * 100)
&nbsp;
<i># typ a "tvar" n-dimenzionalniho pole</i>
print("Data type:")
print(type(data))
print()
&nbsp;
print("Data shape:")
print(data.shape)
</pre>

<p>Nejprve se vypíšou seznamy atributů, což již známe:</p>
<pre>
['DESCR', 'data', 'data_module', 'feature_names', 'filename', 'frame', 'target', 'target_names']
----------------------------------------------------------------------------------------------------
</pre>

<p>a následně se vypíše vlastní pole uložené v&nbsp;atributu
<strong>data</strong> nebo pod klíčem &bdquo;data&ldquo;:</p>

<pre>
Feature data:
[[5.1 3.5 1.4 0.2]
 [4.9 3.  1.4 0.2]
 [4.7 3.2 1.3 0.2]
 [4.6 3.1 1.5 0.2]
 [5.  3.6 1.4 0.2]
 [5.4 3.9 1.7 0.4]
 [4.6 3.4 1.4 0.3]
 [5.  3.4 1.5 0.2]
 [4.4 2.9 1.4 0.2]
 [4.9 3.1 1.5 0.1]
 [5.4 3.7 1.5 0.2]
 [4.8 3.4 1.6 0.2]
 [4.8 3.  1.4 0.1]
 [4.3 3.  1.1 0.1]
 [5.8 4.  1.2 0.2]
 [5.7 4.4 1.5 0.4]
 [5.4 3.9 1.3 0.4]
 [5.1 3.5 1.4 0.3]
 [5.7 3.8 1.7 0.3]
 [5.1 3.8 1.5 0.3]
 [5.4 3.4 1.7 0.2]
 [5.1 3.7 1.5 0.4]
 [4.6 3.6 1.  0.2]
 [5.1 3.3 1.7 0.5]
 [4.8 3.4 1.9 0.2]
 [5.  3.  1.6 0.2]
 [5.  3.4 1.6 0.4]
 [5.2 3.5 1.5 0.2]
 [5.2 3.4 1.4 0.2]
 [4.7 3.2 1.6 0.2]
 [4.8 3.1 1.6 0.2]
 [5.4 3.4 1.5 0.4]
 [5.2 4.1 1.5 0.1]
 [5.5 4.2 1.4 0.2]
 [4.9 3.1 1.5 0.2]
 [5.  3.2 1.2 0.2]
 [5.5 3.5 1.3 0.2]
 [4.9 3.6 1.4 0.1]
 [4.4 3.  1.3 0.2]
 [5.1 3.4 1.5 0.2]
 [5.  3.5 1.3 0.3]
 [4.5 2.3 1.3 0.3]
 [4.4 3.2 1.3 0.2]
 [5.  3.5 1.6 0.6]
 [5.1 3.8 1.9 0.4]
 [4.8 3.  1.4 0.3]
 [5.1 3.8 1.6 0.2]
 [4.6 3.2 1.4 0.2]
 [5.3 3.7 1.5 0.2]
 [5.  3.3 1.4 0.2]
 [7.  3.2 4.7 1.4]
 [6.4 3.2 4.5 1.5]
 [6.9 3.1 4.9 1.5]
 [5.5 2.3 4.  1.3]
 [6.5 2.8 4.6 1.5]
 [5.7 2.8 4.5 1.3]
 [6.3 3.3 4.7 1.6]
 [4.9 2.4 3.3 1. ]
 [6.6 2.9 4.6 1.3]
 [5.2 2.7 3.9 1.4]
 [5.  2.  3.5 1. ]
 [5.9 3.  4.2 1.5]
 [6.  2.2 4.  1. ]
 [6.1 2.9 4.7 1.4]
 [5.6 2.9 3.6 1.3]
 [6.7 3.1 4.4 1.4]
 [5.6 3.  4.5 1.5]
 [5.8 2.7 4.1 1. ]
 [6.2 2.2 4.5 1.5]
 [5.6 2.5 3.9 1.1]
 [5.9 3.2 4.8 1.8]
 [6.1 2.8 4.  1.3]
 [6.3 2.5 4.9 1.5]
 [6.1 2.8 4.7 1.2]
 [6.4 2.9 4.3 1.3]
 [6.6 3.  4.4 1.4]
 [6.8 2.8 4.8 1.4]
 [6.7 3.  5.  1.7]
 [6.  2.9 4.5 1.5]
 [5.7 2.6 3.5 1. ]
 [5.5 2.4 3.8 1.1]
 [5.5 2.4 3.7 1. ]
 [5.8 2.7 3.9 1.2]
 [6.  2.7 5.1 1.6]
 [5.4 3.  4.5 1.5]
 [6.  3.4 4.5 1.6]
 [6.7 3.1 4.7 1.5]
 [6.3 2.3 4.4 1.3]
 [5.6 3.  4.1 1.3]
 [5.5 2.5 4.  1.3]
 [5.5 2.6 4.4 1.2]
 [6.1 3.  4.6 1.4]
 [5.8 2.6 4.  1.2]
 [5.  2.3 3.3 1. ]
 [5.6 2.7 4.2 1.3]
 [5.7 3.  4.2 1.2]
 [5.7 2.9 4.2 1.3]
 [6.2 2.9 4.3 1.3]
 [5.1 2.5 3.  1.1]
 [5.7 2.8 4.1 1.3]
 [6.3 3.3 6.  2.5]
 [5.8 2.7 5.1 1.9]
 [7.1 3.  5.9 2.1]
 [6.3 2.9 5.6 1.8]
 [6.5 3.  5.8 2.2]
 [7.6 3.  6.6 2.1]
 [4.9 2.5 4.5 1.7]
 [7.3 2.9 6.3 1.8]
 [6.7 2.5 5.8 1.8]
 [7.2 3.6 6.1 2.5]
 [6.5 3.2 5.1 2. ]
 [6.4 2.7 5.3 1.9]
 [6.8 3.  5.5 2.1]
 [5.7 2.5 5.  2. ]
 [5.8 2.8 5.1 2.4]
 [6.4 3.2 5.3 2.3]
 [6.5 3.  5.5 1.8]
 [7.7 3.8 6.7 2.2]
 [7.7 2.6 6.9 2.3]
 [6.  2.2 5.  1.5]
 [6.9 3.2 5.7 2.3]
 [5.6 2.8 4.9 2. ]
 [7.7 2.8 6.7 2. ]
 [6.3 2.7 4.9 1.8]
 [6.7 3.3 5.7 2.1]
 [7.2 3.2 6.  1.8]
 [6.2 2.8 4.8 1.8]
 [6.1 3.  4.9 1.8]
 [6.4 2.8 5.6 2.1]
 [7.2 3.  5.8 1.6]
 [7.4 2.8 6.1 1.9]
 [7.9 3.8 6.4 2. ]
 [6.4 2.8 5.6 2.2]
 [6.3 2.8 5.1 1.5]
 [6.1 2.6 5.6 1.4]
 [7.7 3.  6.1 2.3]
 [6.3 3.4 5.6 2.4]
 [6.4 3.1 5.5 1.8]
 [6.  3.  4.8 1.8]
 [6.9 3.1 5.4 2.1]
 [6.7 3.1 5.6 2.4]
 [6.9 3.1 5.1 2.3]
 [5.8 2.7 5.1 1.9]
 [6.8 3.2 5.9 2.3]
 [6.7 3.3 5.7 2.5]
 [6.7 3.  5.2 2.3]
 [6.3 2.5 5.  1.9]
 [6.5 3.  5.2 2. ]
 [6.2 3.4 5.4 2.3]
 [5.9 3.  5.1 1.8]]
----------------------------------------------------------------------------------------------------
</pre>

<p>Na konci běhu skriptu se zobrazí typ dat (tedy n-rozměrného pole) a jeho
<i>tvar (shape)</i>:</p>

<pre>
Data type:
&lt;class 'numpy.ndarray'&gt;
&nbsp;
Data shape:
(150, 4)
</pre>

<p><div class="rs-tip-major">Poznámka: s&nbsp;tvarem pole se ještě mnohokrát
setkáme v&nbsp;navazujících textech.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Jména atributů, vztah mezi numerickou hodnotou s&nbsp;druhem rostliny a jejím jménem</h2>

<p>Jednotlivé atributy, což jsou v&nbsp;našem konkrétním případě rozměry květů,
jsou pojmenovány, přičemž tato jména nalezneme v&nbsp;atributu objektu typu
Bunch, který se jmenuje <strong>feature_names</strong>, popř.&nbsp;pod stejně
pojmenovaným klíčem. Jedná se o pole obsahující čtveřici řetězců obsahujících
jak měřenou veličinu, tak i její jednotku.</p>

<p>Datová sada, kterou zkoumáme, ovšem obsahuje nejenom rozměry květů, ale i
druh rostliny, což jsou hodnoty, které později použijeme při trénování modelů
(protože druh rostliny je vlastně odpovědí, kterou hledáme). Vzhledem
k&nbsp;tomu, že většina modelů, s&nbsp;nimiž se dále seznámíme, zpracovává a
produkuje numerické hodnoty, jsou i druhy rostlin zakódovány, konkrétně do
celočíselné hodnoty 0-2, která odpovídá druhům ['setosa' 'versicolor'
'virginica']. Ony celočíselné hodnoty nalezneme v&nbsp;atributu
<strong>targets</strong> (vektor o velikosti 150 prvků) a převod mezi hodnotami
0-2 a jmény druhů najdeme v&nbsp;atributu <strong>target_names</strong> (vektor
jmen):</p>

<pre>
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
print(dir(iris))
&nbsp;
print("-" * 100)
&nbsp;
<i># jmena atributu</i>
print("Feature names:")
print(iris["feature_names"])
&nbsp;
print("-" * 100)
&nbsp;
<i># vazba mezi numerickou hodnotou a lidskym vyjadrenim hodnoty</i>
<i># atributu</i>
print("Target names:")
print(iris["target_names"])
&nbsp;
print("-" * 100)
&nbsp;
<i># druhy rostlin z datove sady v numericke podobe</i>
print("Targets:")
print(iris["target"])
</pre>

<p>Povšimněte si, že prakticky všechny informace jsou reprezentovány formou
vektoru, matice, nebo vícerozměrného pole:</p>

<pre>
['DESCR', 'data', 'data_module', 'feature_names', 'filename', 'frame', 'target', 'target_names']
----------------------------------------------------------------------------------------------------
Feature names:
['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)']
----------------------------------------------------------------------------------------------------
Target names:
['setosa' 'versicolor' 'virginica']
----------------------------------------------------------------------------------------------------
Targets:
[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2
 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 2 2]
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Korelační diagram pro dvojici vybraných proměnných</h2>

<p>Nyní tedy alespoň rámcově víme, s&nbsp;jakou datovou sadou budeme pracovat.
Naším úkolem (který dnes ovšem ještě nevyřešíme k&nbsp;plné spokojenosti) bude
navržení takového postupu (algoritmu, modelu, funkce atd.), který dokáže na
základě čtyř rozměrů květů odpovědět, o jaký druh kosatce se jedná,
tj.&nbsp;zda tyto rozměry odpovídají květům <i>Iris Setosa</i>, <i>Iris
Versicolour</i> nebo <i>Iris Virginica</i>.</p>

<p>Existuje ovšem vůbec nějaký vztah mezi rozměry květů a druhem rostliny?
Pokusme se prozatím zjistit nějakými jednoduchými prostředky základní struktury
(vzory atd.) v&nbsp;dostupných datech. Sice nezískáme všechny odpovědi, ale
použijeme postupy, které nám však ukážou, jak lze kombinovat scikit-learn,
knihovnu NumPy, knihovnu Pandas a konečně knihovnu Matplotlib.</p>

<p>Můžeme začít klasickým korelačním diagramem a zjistit, jaký je vztah
(například) mezi dvěma prvními rozměry (sepal length, sepal width). To je pro
knihovnu Matplotlib snadný úkol. Užitečné je ovšem vědět, jak z&nbsp;pole
(matice) s&nbsp;rozměry květů získat první a druhý sloupec. Navíc jednotlivé
body korelačního diagramu obarvíme podle druhu rostliny (tuto informaci máme
k&nbsp;dispozici):</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># vykresleni korelacniho diagramu pro dvojici vybranych atributu</i>
<i># první sloupec: x-ové souřadnice</i>
<i># druhý sloupec: y-ové souřadnice</i>
plt.scatter(data[:, 0], data[:, 1], c=iris.target)
plt.title("Classes")
&nbsp;
<i># popisky os</i>
plt.xlabel(iris.feature_names[0])
plt.ylabel(iris.feature_names[1])
&nbsp;
<i># ulozeni diagramu do souboru</i>
plt.savefig("50.png")
&nbsp;
<i># zobrazeni diagramu</i>
plt.show()
</pre>

<p>A takto vypadá výsledek:</p>

*** image ***
<p><i>Obrázek 9: Korelační diagram pro atributy sepal_width a
sepal_height.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Příprava pro tvorbu složitějších grafů</h2>

<p>Skript <a href="#k07">z&nbsp;předchozí kapitoly</a> sice skutečně vykreslil
korelační diagram (a navíc velmi snadno), ovšem zvolený postup není ve
skutečnosti příliš flexibilní. V&nbsp;praxi totiž velmi často potřebujeme
tvořit složitější grafy, které například obsahují více průběhů, více grafů
v&nbsp;mřížce, je nutné nastavit rozměry grafů atd. atd. V&nbsp;takovém případě
je výhodnější nejprve zavolat funkci <strong>plt.subplots</strong>, která vrátí
dvojici objektů využitelných pro všechny tyto operace. První vrácený objekt je
typu <strong>Figure</strong> (prozatím ho budeme ignorovat) a druhý je typu
<strong>Axes</strong>, což je objekt nebo pole objektů představujících
jednotlivé grafy v&nbsp;obrázku (Figure). Nenechte se zmást tímto jménem,
protože se v&nbsp;žádném případě nejedná pouze o osy grafu.</p>

<p>Do grafu navíc můžeme vložit popisky os a taktéž legendu, v&nbsp;našem
případě názvy druhů kosatců:</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># vykresleni korelacniho diagramu pro dvojici vybranych atributu</i>
_, ax = plt.subplots()
&nbsp;
<i># první sloupec: x-ové souřadnice</i>
<i># druhý sloupec: y-ové souřadnice</i>
scatter = ax.scatter(data[:, 0], data[:, 1], c=iris.target)
&nbsp;
<i># popisky os</i>
ax.set(xlabel=iris.feature_names[0], ylabel=iris.feature_names[1])
&nbsp;
<i># pridani legendy do diagramu</i>
ax.legend(scatter.legend_elements()[0], iris.target_names, loc="upper right", title="Classes")
&nbsp;
<i># ulozeni diagramu do souboru</i>
plt.savefig("51.png")
&nbsp;
<i># zobrazeni diagramu</i>
plt.show()
</pre>

<p>Výsledek by měl být podobný, jako v&nbsp;příkladu <a
href="#k07">z&nbsp;předchozí kapitoly</a>:</p>

*** image ***
<p><i>Obrázek 10: Korelační diagram pro atributy sepal_width a
sepal_height.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Mřížka obsahující více korelačních diagramů</h2>

<p>Korelační diagram nám může prozradit vztah či vztahy mezi naměřenými či
jinak získanými daty a požadovanou odpovědí resp.&nbsp;kategorií (tedy
v&nbsp;našem případě o tom, o jaký druh rostliny se jedná). Ovšem prakticky
můžeme zobrazovat pouze dvourozměrné či trojrozměrné korelační diagramy,
zatímco máme k&nbsp;dispozici čtyři různé rozměry květů. V&nbsp;takovém případě
si můžeme pomoci tím, že namísto jednoho korelačního diagramu jich nakreslíme
větší množství &ndash; pro každou kombinaci naměřených hodnot.</p>

<p>Necháme si tedy vytvořit mřížku grafů o rozměrech 4&times;4 a do této mřížky
jednotlivé varianty korelačního diagramu vložíme. Na diagonále bude vynechané
místo, protože vztah mezi jednou a tou samou veličinou by vedl k&nbsp;diagramu,
na kterém by byly body jen na diagonále a takový graf nepotřebujeme:</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># vykresleni mrizky korelacnich diagramu</i>
fig, axes = plt.subplots(nrows=4, ncols=4)
&nbsp;
<i># rozmery grafu</i>
fig.set_figheight(15)
fig.set_figwidth(15)
&nbsp;
<i># vyplneni mrizky</i>
for row in range(4):
    for column in range(4):
        ax = axes[row][column]
        if row == column:
            <i># na diagonale jsou prazdna mista</i>
            fig.delaxes(ax)
            continue
        <i># pridat korelacni diagram do mrizky</i>
        scatter = ax.scatter(data[:, row], data[:, column], c=iris.target)
        <i># popisky os</i>
        ax.set(xlabel=iris.feature_names[row], ylabel=iris.feature_names[column])
&nbsp;
&nbsp;
<i># zbavit se prazdneho mista okolo bunek mrizky</i>
plt.tight_layout()
&nbsp;
<i># ulozeni diagramu do souboru</i>
plt.savefig("52.png")
&nbsp;
<i># zobrazeni diagramu</i>
plt.show()
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že nyní je druhým
objektem vráceným z&nbsp;<strong>pls.subplots</strong> nikoli přímo objekt typu
<strong>Axes</strong>, ale matice 4&times;4 těchto objektů.</div></p>

*** image ***
<p><i>Obrázek 11: Mřížka korelačních diagramů.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Zobrazení základního histogramu pro data v&nbsp;sadě Iris</h2>

<p>Dalším prostředkem pro prvotní průzkum dat, která jsme nějakým způsobem
získali, může být výpočet základních statistických veličin, tedy maxima,
minima, průměru, mediánu, směrodatné odchylky atd. Ovšem nesmíme zapomenout na
histogramy, které je většinou velmi jednoduché interpretovat (náhodnost hodnot,
odhad průměru a mediánu, míru směrodatné odchylky atd.). Histogramy jsou
pochopitelně podporovány i knihovnou Matplotlib, takže si ukažme, jakým
způsobem lze zobrazit histogram pro každý změřený rozměr květu pro všechny
rostliny v&nbsp;datové sadě. Měří se celkem čtyři rozměry, takže získáme i
čtyři histogramy (opět použijeme mřížku grafů):</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># vykresleni sady histogramu do mrizky</i>
fig, axes = plt.subplots(nrows=2, ncols=2)
fig.set_figheight(15)
fig.set_figwidth(15)
&nbsp;
<i># vykresleni jednotlivych histogramu do mrizky</i>
for i in range(4):
    ax = axes[i//2][i%2]
    ax.hist(data[:, i], bins=20)
    ax.set(xlabel=iris.feature_names[i])
&nbsp;
&nbsp;
<i># zbavit se prazdneho mista okolo bunek mrizky</i>
plt.tight_layout()
&nbsp;
<i># ulozeni diagramu do souboru</i>
plt.savefig("53.png")
&nbsp;
<i># zobrazeni diagramu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 12: Mřížka s&nbsp;histogramy.</i></p>

<p>Zobrazení histogramů, stejně jako i dalších typů grafů, lze různým způsobem
modifikovat, takže již jen krátce (změna počtu intervalů i způsobu
zobrazení):</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># vykresleni sady histogramu do mrizky</i>
fig, axes = plt.subplots(nrows=2, ncols=2)
fig.set_figheight(15)
fig.set_figwidth(15)
&nbsp;
<i># vykresleni jednotlivych histogramu do mrizky</i>
for i in range(4):
    ax = axes[i//2][i%2]
    <i># modifikace zpusobu vypoctu a zobrazeni histogrami</i>
    ax.hist(data[:, i], bins=50, histtype="step")
    ax.set(xlabel=iris.feature_names[i])
&nbsp;
&nbsp;
<i># zbavit se prazdneho mista okolo bunek mrizky</i>
plt.tight_layout()
&nbsp;
<i># ulozeni diagramu do souboru</i>
plt.savefig("54.png")
&nbsp;
<i># zobrazeni diagramu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 13: Mřížka s&nbsp;histogramy.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Analýza hlavních komponent (PCA)</h2>

<p>Nyní již nastává okamžik, abychom se pokusili v&nbsp;datech (tedy rozměrech
květů) nalézt nějakou strukturu závisející na kombinaci všech rozměrů.
V&nbsp;takovém případě nám již běžné 2D korelační diagramy nebo histogramy
přestanou dostačovat. Jednou z&nbsp;dalších technologií, ke které se ještě
podrobněji vrátíme, je takzvaná <i>analýza hlavních komponent</i> neboli
<i>Principal Component Analysis</i>, zkráceně pak <i>PCA</i>. Jedná se o
algoritmus, který se pokusí vstupní data vhodným způsobem transformovat (bez
ztráty informace) do jiné souřadné soustavy (v&nbsp;2D případě by se tedy
jednalo o rotaci, zkosení, teoreticky i zrcadlení) tak, aby bylo posléze možné
snížit počet rozměrů, a to s&nbsp;nejmenší možnou ztrátou informace.</p>

<p>Původní data představují body ve čtyřrozměrném prostoru a vyloučením jedné
nebo dvou dimenzí přijdeme o důležité informace (výsledkem jsou pak korelační
diagramy, které již známe). Pokud ovšem nejdříve provedeme transformaci do jiné
čtyřrozměrné souřadné soustavy tak, že jedna z&nbsp;dimenzí ponese menší
množství informací, můžeme tuto dimenzi odstranit a stále být schopni data
analyzovat bez větší chyby. Takže si ukažme snížení počtu dimenzí přes PCA ze
čtyř na tři:</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
from sklearn.decomposition import PCA
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># Principal component analysis</i>
reduced = PCA(n_components=3).fit_transform(data)
&nbsp;
<i># vykresleni vysledku do matice s diagramy</i>
fig, axes = plt.subplots(nrows=2, ncols=2)
fig.set_figheight(15)
fig.set_figwidth(15)
&nbsp;
<i># graf v matici</i>
ax = axes[0][0]
scatter = ax.scatter(reduced[:, 0], reduced[:, 1], c=iris.target)
&nbsp;
<i># graf v matici</i>
ax = axes[1][0]
scatter = ax.scatter(reduced[:, 0], reduced[:, 2], c=iris.target)
&nbsp;
<i># graf v matici</i>
ax = axes[1][1]
scatter = ax.scatter(reduced[:, 1], reduced[:, 2], c=iris.target)
&nbsp;
<i># prazdne misto v matici</i>
ax = axes[0][1]
fig.delaxes(ax)
&nbsp;
<i># zbavit se prazdneho mista okolo bunek mrizky</i>
plt.tight_layout()
&nbsp;
<i># ulozeni diagramu do souboru</i>
plt.savefig("55.png")
&nbsp;
<i># zobrazeni diagramu</i>
plt.show()
</pre>

<p>Výsledkem PCA jsou v&nbsp;tomto případě body v&nbsp;3D, které již zobrazíme
na trojici korelačních diagramů:</p>

*** image ***
<p><i>Obrázek 14: Výsledek PCA (z&nbsp;4D bodů na 3D body zobrazené na trojici
korelačních diagramů).</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Zobrazení PCA v&nbsp;3D grafu</h2>

<p>Díky PCA dokážeme získat body v&nbsp;2D nebo 3D prostoru. Pokusme se tedy o
zobrazení bodů v&nbsp;3D prostoru přímo 3D grafem. Jedná se o pouhopouhé
rozšíření korelačních diagramů o jednu dimenzi. Nicméně z&nbsp;výsledku je
patrné, že vstupní data skutečně <i>mají</i> nějakou interní strukturu
související s&nbsp;druhem rostlin, protože stejně zbarvené body jsou sdruženy a
částečně odděleny od ostatních dvou skupin:</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.datasets import load_iris
from sklearn.decomposition import PCA
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
<i># Principal component analysis</i>
reduced = PCA(n_components=3).fit_transform(data)
&nbsp;
<i># vykresleni korelacniho grafu ve 3D</i>
fig = plt.figure(1)
ax = fig.add_subplot(111, projection="3d", elev=-150, azim=110)
&nbsp;
ax.scatter(
    reduced[:, 0],
    reduced[:, 1],
    reduced[:, 2],
    c=iris.target,
    s=40,
)
&nbsp;
&nbsp;
<i># zbavit se prazdneho mista okolo bunek mrizky</i>
plt.tight_layout()
&nbsp;
<i># ulozeni grafu do souboru</i>
plt.savefig("56.png")
&nbsp;
<i># zobrazeni grafu</i>
plt.show()
</pre>

<p>Výsledek bude v&nbsp;tomto případě vypadat následovně:</p>

*** image ***
<p><i>Obrázek 15: Výsledek PCA (z&nbsp;4D bodů na 3D body zobrazené v&nbsp;3D
diagramu.</i></p>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že nyní jsme určitou
strukturu v&nbsp;datech objevili, což je patrné na shlucích různě obarvených
bodů (hodnoty <i>target</i>, tedy druhy rostlin).</div></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Základní shluková analýza</h2>

<p>Jedním z&nbsp;velmi užitečných nástrojů, které v&nbsp;knihovně
<i>scikit-learn</i> nalezneme, je podpora pro provádění takzvané <i>shlukové
analýzy</i> (<i>cluster analysis</i>, <i>clustering</i>). Jedná se o proces,
který se používá jako vstup pro <i>klasifikaci</i> objektů ve chvíli, kdy
nemáme k&nbsp;dispozici trénovací data i s&nbsp;očekávanými výsledky a tudíž
nemůžeme provádět učení s&nbsp;učitelem &ndash; <i>supervised learning</i>.</p>

<p>Zjednodušeně řečeno se používá k&nbsp;rozdělení vstupních dat (či již
nějakým způsobem upravených dat) do skupin, přičemž se očekává, že data, která
budou náležet do stejné skupiny, budou představovat objekty (i když možná by
bylo lepší říci informace) s&nbsp;podobnými vlastnostmi. V&nbsp;našem
konkrétním případě budeme chtít rozdělit body v&nbsp;4D prostoru (= rozměry
květů) do tří oblastí, přičemž každá oblast by mohla odpovídat jednomu druhu
rostliny. Zda se nám to povede či nikoli, si posléze zverifikujeme.</p>

<p>Pokusme se tedy rozdělit body do tří clusterů se zobrazením prvních dvou sad
souřadnic ve formě korelačního diagramu (což již známe). Body budou obarveny
podle toho, do kterého clusteru byly přiděleny. Taktéž si necháme zobrazit
středy clusterů:</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.cluster import KMeans
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
plt.figure(1)
colors = ["#4444cc", "#cc4444", "#cccc44", "#44cccc", "#cc44cc"]
&nbsp;
<i># clustering</i>
kmeans = KMeans(n_clusters=3, random_state=0, n_init="auto").fit(data)
&nbsp;
<i># vykreslení bodů s jejich přiřazením ke clusteru</i>
for i, color in enumerate(colors):
    selector = kmeans.labels_ == i
    plt.scatter(data[selector, 0], data[selector, 1], c=color, marker=".", s=20)
&nbsp;
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], c="red", s=100)
plt.title("K-Means++")
&nbsp;
<i># uložení grafu do souboru</i>
plt.savefig("57.png")
&nbsp;
<i># vykreslení na obrazovku</i>
plt.show()
</pre>

<p>Výsledný korelační diagram by měl vypadat takto:</p>

*** image ***
<p><i>Obrázek 16: Výsledky shlukové analýzy pro první dva rozměry
květů.</i></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Výsledky shlukové analýzy pro různé kombinace atributů</h2>

<p>Skript <a href="#k13">z&nbsp;předchozí kapitoly</a> vykreslil pouze jednu
kombinaci rozměrů, konkrétně první a druhý rozměr květů (což odpovídá atributům
nazvaným <i>sepal length</i> a <i>sepal width</i>). Ovšem výsledkem shlukové
analýzy je rozdělení původních bodů v&nbsp;4D prostoru, takže si snadno můžeme
zobrazit i další varianty korelačních diagramů a zjistit, zda nám některá
kombinace napoví, jak dobré či naopak špatné rozdělení do tří clusterů je:</p>

<pre>
import matplotlib.pyplot as plt
&nbsp;
from sklearn.cluster import KMeans
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># nacteni datove sady</i>
data = iris.data
&nbsp;
<i># mrizka s diagramy/grafy</i>
fig, axes = plt.subplots(nrows=2, ncols=2)
fig.set_figheight(15)
fig.set_figwidth(15)
&nbsp;
plt.figure(1)
colors = ["#4444cc", "#cc4444", "#cccc44", "#44cccc", "#cc44cc"]
&nbsp;
<i># clustering</i>
kmeans = KMeans(n_clusters=3, random_state=0, n_init="auto").fit(data)
&nbsp;
def draw_kmeans(col, row, serie1, serie2):
    ax = axes[col][row]
&nbsp;
    for i, color in enumerate(colors):
        selector = kmeans.labels_ == i
        ax.scatter(data[selector, serie1], data[selector, serie2], c=color, marker=".", s=50)
&nbsp;
    ax.scatter(kmeans.cluster_centers_[:, serie1], kmeans.cluster_centers_[:, serie2], c="red", s=100)
    ax.set(xlabel=iris.feature_names[serie1], ylabel=iris.feature_names[serie2])
&nbsp;
&nbsp;
draw_kmeans(0, 0, 0, 1)
draw_kmeans(0, 1, 0, 2)
draw_kmeans(1, 0, 1, 2)
draw_kmeans(1, 1, 1, 3)
&nbsp;
plt.tight_layout()
&nbsp;
<i># uložení grafu do souboru</i>
plt.savefig("58.png")
&nbsp;
<i># vykreslení na obrazovku</i>
plt.show()
</pre>

<p>Výsledek by měl v&nbsp;tomto případě vypadat následovně:</p>

*** image ***
<p><i>Obrázek 17: Výsledky shlukové analýzy pro různé kombinace měřených
rozměrů květů.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Vizualizace chybných &bdquo;klasifikací&ldquo; provedených shlukovou analýzou</h2>

<p></p>

<pre>
import matplotlib.pyplot as plt
import numpy
&nbsp;
from sklearn.cluster import KMeans
from sklearn.cluster import SpectralClustering
from sklearn.datasets import load_iris
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># precteni dat z datove sady</i>
<i># urcenych pro trenink, validaci atd.</i>
data = iris.data
&nbsp;
targets = iris.target
&nbsp;
<i># clustering</i>
<i># kmeans = KMeans(n_clusters=3, random_state=0, n_init="auto").fit(data)</i>
kmeans = SpectralClustering(n_clusters=3, eigen_solver="arpack", affinity="nearest_neighbors", random_state=0).fit(data)
&nbsp;
<i># vykresleni mrizky korelacnich diagramu</i>
fig, axes = plt.subplots(nrows=3, ncols=1)
fig.set_figheight(15)
fig.set_figwidth(10)
&nbsp;
<i># korektni druhy z datove sady</i>
ax = axes[0]
scatter = ax.scatter(data[:, 0], data[:, 1], c=iris.target)
&nbsp;
colors = ["#4444cc", "#cc4444", "#cccc44"]
&nbsp;
<i># rozdeleni do clusteru provedene algoritmem</i>
ax = axes[1]
for i, color in enumerate(colors):
    selector = kmeans.labels_ == i
    ax.scatter(data[selector, 0], data[selector, 1], c=color)
&nbsp;
<i># vizualizace chybne "predpovedi" clusteringu</i>
ax = axes[2]
colors = []
for i in range(len(targets)):
    t = targets[i]
    k = kmeans.labels_[i]
    color = "#cc4444"
    <i># cislo clusteru odpovida druhu rostliny</i>
    if t == k:
        color = "#44cc44"
    colors.append(color)
ax.scatter(data[:, 0], data[:, 1], c=colors)
&nbsp;
plt.tight_layout()
&nbsp;
<i># uložení grafu do souboru</i>
plt.savefig("59.png")
&nbsp;
<i># vykreslení na obrazovku</i>
plt.show()
</pre>

<p></p>

*** image ***
<p><i>Obrázek 18: Výsledky shlukové analýzy s&nbsp;obarvením bodů podle toho,
zda bod (rozměry jednoho květu) byly zařazeny do správného clusteru.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<pre>
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># X je matice (feature matrix)</i>
X = iris.data
&nbsp;
<i># y je vektor (response vector)</i>
y = iris.target
&nbsp;
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = KNeighborsClassifier(n_neighbors=1)
&nbsp;
<i># trening modelu (se vsemi dostupnymi daty)</i>
classifier.fit(X, y)
&nbsp;
<i># parametry jedne rostliny</i>
unknown = [[3, 5, 4, 2]]
print(unknown)
&nbsp;
<i># predikce modelu pro jednu sadu dat</i>
prediction = classifier.predict(unknown)
print(prediction)
&nbsp;
<i># model predikuje hodnoty 0-3, ty si prevedeme na druhy rostlin</i>
print(iris.target_names[prediction])
&nbsp;
print()
&nbsp;
<i># parametry vice rostlin</i>
unknown = [[3, 5, 4, 2], [5, 4, 3, 2]]
print(unknown)
&nbsp;
<i># predikce modelu pro vice sad dat</i>
predictions = classifier.predict(unknown)
print(predictions)
&nbsp;
<i># model predikuje hodnoty 0-3, ty si prevedeme na druhy rostlin</i>
print(iris.target_names[predictions])
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<pre>
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># X je matice (feature matrix)</i>
X = iris.data
&nbsp;
<i># y je vektor (response vector)</i>
y = iris.target
&nbsp;
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = KNeighborsClassifier(n_neighbors=5)
&nbsp;
<i># trening modelu (se vsemi dostupnymi daty)</i>
classifier.fit(X, y)
&nbsp;
<i># parametry jedne rostliny</i>
unknown = [[3, 5, 4, 2]]
print(unknown)
&nbsp;
<i># predikce modelu pro jednu sadu dat</i>
prediction = classifier.predict(unknown)
print(prediction)
&nbsp;
<i># model predikuje hodnoty 0-3, ty si prevedeme na druhy rostlin</i>
print(iris.target_names[prediction])
&nbsp;
print()
&nbsp;
<i># parametry vice rostlin</i>
unknown = [[3, 5, 4, 2], [5, 4, 3, 2]]
print(unknown)
&nbsp;
<i># predikce modelu pro vice sad dat</i>
predictions = classifier.predict(unknown)
print(predictions)
&nbsp;
<i># model predikuje hodnoty 0-3, ty si prevedeme na druhy rostlin</i>
print(iris.target_names[predictions])
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<pre>
from sklearn.datasets import load_iris
from sklearn.linear_model import LogisticRegression
&nbsp;
<i># nacteni datove sady</i>
iris = load_iris()
&nbsp;
<i># X je matice (feature matrix)</i>
X = iris.data
&nbsp;
<i># y je vektor (response vector)</i>
y = iris.target
&nbsp;
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = LogisticRegression(max_iter=1000)
classifier.fit(X, y)
&nbsp;
<i># trening modelu (se vsemi dostupnymi daty)</i>
classifier.fit(X, y)
&nbsp;
<i># parametry jedne rostliny</i>
unknown = [[3, 5, 4, 2]]
print(unknown)
&nbsp;
<i># predikce modelu pro jednu sadu dat</i>
prediction = classifier.predict(unknown)
print(prediction)
&nbsp;
<i># model predikuje hodnoty 0-3, ty si prevedeme na druhy rostlin</i>
print(iris.target_names[prediction])
&nbsp;
print()
&nbsp;
<i># parametry vice rostlin</i>
unknown = [[3, 5, 4, 2], [5, 4, 3, 2]]
print(unknown)
&nbsp;
<i># predikce modelu pro vice sad dat</i>
predictions = classifier.predict(unknown)
print(predictions)
&nbsp;
<i># model predikuje hodnoty 0-3, ty si prevedeme na druhy rostlin</i>
print(iris.target_names[predictions])
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady využívající knihovnu Scikit-learn lze nalézt
v&nbsp;repositáři <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady i na (Jupyter) diáře s&nbsp;postupem
výpočtů a analýz:</p>

<table>
<tr><th>#<th>Příklad</th><th>Stručný popis</th><th>Adresa příkladu</th></tr></i>
<tr><td> 1</td><td>01_show_matrix.py</td><td>kooperace mezi knihovnami Matplotlib a NumPy: vizualizace obsahu 2D matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/01_show_matrix.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/01_show_matrix.py</a></td></tr>
<tr><td> 2</td><td>02_get_digits.py</td><td>datová množina obsahující naskenované ručně napsané číslice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/02_get_digits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/02_get_digits.py</a></td></tr>
<tr><td> 3</td><td>03_get_features.py</td><td>další atributy datové množiny, které použijeme při trénování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/03_get_features.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/03_get_features.py</a></td></tr>
<tr><td> 4</td><td>04_get_images.py</td><td>přečtení a následné vykreslení jednotlivých ručně nakreslených číslic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/04_get_images.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/04_get_images.py</a></td></tr>
<tr><td> 5</td><td>05_show_grayscale_matrix.py</td><td>odstranění umělé aplikované barvové palety (obrázky ve stupních šedi)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/05_show_grayscale_matrix.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/05_show_grayscale_matrix.py</a></td></tr>
<tr><td> 6</td><td>06_grayscale_images.py</td><td>vykreslení ručně nakreslených číslic ve formě obrázků ve stupních šedi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/06_grayscale_images.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/06_grayscale_images.py</a></td></tr>
<tr><td> 7</td><td>07_multiplot.py</td><td>rozdělení plochy grafu do oblastí; vykreslení více obrázků do jediného grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/07_multiplot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/07_multiplot.py</a></td></tr>
<tr><td> 8</td><td>08_model_preperation_1.py</td><td>obrázky s&nbsp;jejich ohodnocením</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/08_model_preperation_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/08_model_preperation_1.py</a></td></tr>
<tr><td> 9</td><td>09_training_set.py</td><td>příprava dat pro trénink</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/09_training_set.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/09_training_set.py</a></td></tr>
<tr><td>10</td><td>10_classification.py</td><td>klasifikace obrázků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/10_classification.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/10_classification.py</a></td></tr>
<tr><td>11</td><td>11_results.py</td><td>vykreslení obrázků společně s&nbsp;jejich klasifikací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/11_results.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/11_results.py</a></td></tr>
<tr><td>12</td><td>12_change_training_set.py</td><td>změna poměru rozdělení dat na tréninkovou a testovací množinu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/12_change_training_set.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/12_change_training_set.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>13_blobs.py</td><td>použití funkce <strong>make_blobs</strong> pro vygenerování sady bodů v&nbsp;rovině sdružených do oblastí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/13_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/13_blobs.py</a></td></tr>
<tr><td>14</td><td>14_swap_coords.py</td><td>úprava předchozího příkladu: prohození souřadnic na osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/14_swap_coords.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/14_swap_coords.py</a></td></tr>
<tr><td>15</td><td>15_blobs_scatter_plot.py</td><td>základní podoba bodového diagramu (<i>scatter plot</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/15_blobs_scatter_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/15_blobs_scatter_plot.py</a></td></tr>
<tr><td>16</td><td>16_blobs_scatter_plot.py</td><td>úprava bodového diagramu při zobrazení většího množství bodů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/16_blobs_scatter_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/16_blobs_scatter_plot.py</a></td></tr>
<tr><td>17</td><td>17_colorized_blobs.py</td><td>obarvení bodů podle oblastí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/17_colorized_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/17_colorized_blobs.py</a></td></tr>
<tr><td>18</td><td>18_k-means.py</td><td>základní použití algoritmu K-means pro clustering</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/18_k-means.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/18_k-means.py</a></td></tr>
<tr><td>19</td><td>19_combination.py</td><td>zobrazení centroidů společně s&nbsp;původními body</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/19_combination.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/19_combination.py</a></td></tr>
<tr><td>20</td><td>20_combinations.py</td><td>vizualizace clusteringu původní množiny bodů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/20_combinations.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/20_combinations.py</a></td></tr>
<tr><td>21</td><td>21_other_settings.py</td><td>vizualizace clusteringu původní množiny bodů pro odlišnou množinu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/21_other_settings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/21_other_settings.py</a></td></tr>
<tr><td>22</td><td>22_random_points.py</td><td>clustering pro náhodná data</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/22_random_points.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/22_random_points.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>23</td><td>23_circles.py</td><td>pseudonáhodné rozmístění bodů do kružnic, menší náhodnost výsledku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/23_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/23_circles.py</a></td></tr>
<tr><td>24</td><td>24_more_noise_circles.py</td><td>pseudonáhodné rozmístění bodů do kružnic, větší náhodnost výsledku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/24_more_noise_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/24_more_noise_circles.py</a></td></tr>
<tr><td>25</td><td>25_moons.py</td><td>pseudonáhodné rozmístění bodů do tvaru dvou půlměsíců, menší náhodnost</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/25_moons.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/25_moons.py</a></td></tr>
<tr><td>26</td><td>26_more_noisy_moons.py</td><td>pseudonáhodné rozmístění bodů do tvaru dvou půlměsíců, větší náhodnost</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/26_more_noisy_moons.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/26_more_noisy_moons.py</a></td></tr>
<tr><td>27</td><td>27_circles_kmeans.py</td><td>výsledek clusteringu provedeného algoritmem K-means na &bdquo;kružnice&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/27_circles_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/27_circles_kmeans.py</a></td></tr>
<tr><td>28</td><td>28_moons_kmeans.py</td><td>výsledek clusteringu provedeného algoritmem K-means na &bdquo;půlměsíce&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/28_moons_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/28_moons_kmeans.py</a></td></tr>
<tr><td>29</td><td>29_blobs_spectral_clustering.py</td><td>spectral clustering pro body rozmístěné pomocí <strong>make_blobs</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/29_blobs_spectral_clustering.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/29_blobs_spectral_clustering.py</a></td></tr>
<tr><td>30</td><td>30_circles_spectral_clustering.py</td><td>spectral clustering pro body rozmístěné do kružnic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/30_circles_spectral_clustering.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/30_circles_spectral_clustering.py</a></td></tr>
<tr><td>31</td><td>31_moons_spectral_clustering.py</td><td>spectral clustering pro body rozmístěné do půlměsíců </td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/31_moons_spectral_clustering.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/31_moons_spectral_clustering.py</a></td></tr>
<tr><td>32</td><td>32_moons_spectral_clustering_limits.py</td><td>vyhledání limitů algoritmu spectral clustering</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/32_moons_spectral_clustering_limits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/32_moons_spectral_clustering_limits.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>33_particles_load.py</td><td>načtení souřadnic částic uložených v&nbsp;souboru formátu CSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/33_particles_load.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/33_particles_load.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>34</td><td>34_lorenz_attractor.py</td><td>zobrazení Lorenzova atraktoru formou bodů propojených úsečkami</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/34_lorenz_attractor.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/34_lorenz_attractor.py</a></td></tr>
<tr><td>35</td><td>35_lorenz_attractor_points.py</td><td>Lorenzův atraktor vykreslený formou jednotlivých bodů s&nbsp;definovaným stylem zobrazení a velikostí stopy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/35_lorenz_attractor_points.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/35_lorenz_attractor_points.py</a></td></tr>
<tr><td>36</td><td>36_blobs_3d.py</td><td>vygenerování a zobrazení sady bodů v&nbsp;3D prostoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/36_blobs_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/36_blobs_3d.py</a></td></tr>
<tr><td>37</td><td>37_spread_blobs_3d.py</td><td>vygenerování a zobrazení sady bodů v&nbsp;3D prostoru, odlišné parametry při generování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/37_spread_blobs_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/37_spread_blobs_3d.py</a></td></tr>
<tr><td>38</td><td>38_views.py</td><td>různé pohledy na 3D graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/38_views.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/38_views.py</a></td></tr>
<tr><td>39</td><td>39_colorized_3d_blobs.py</td><td>obarvení bodů v&nbsp;prostoru na základě vstupních dat</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/39_colorized_3d_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/39_colorized_3d_blobs.py</a></td></tr>
<tr><td>40</td><td>40_kmeans_3d_blobs.py</td><td>shluková analýza v&nbsp;3D prostoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/40_kmeans_3d_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/40_kmeans_3d_blobs.py</a></td></tr>
<tr><td>41</td><td>41_kmeans_spread_3d_blobs.py</td><td>shluková analýza v&nbsp;3D prostoru pro odlišnou množinu bodů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/41_kmeans_spread_3d_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/41_kmeans_spread_3d_blobs.py</a></td></tr>
<tr><td>42</td><td>42_kmeans_random_3d.py</td><td>shluková analýza pro body rozmístěné zcela náhodně v&nbsp;omezeném prostoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/42_kmeans_random_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/42_kmeans_random_3d.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>43</td><td>43_speed_measurements.py</td><td>benchmark pro postupně rostoucí počet bodů tvořících shluky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/43_speed_measurements.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/43_speed_measurements.py</a></td></tr>
<tr><td>44</td><td>44_speed_measurements.py</td><td>benchmark pro postupně rostoucí počet bodů rozmístěných náhodně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/44_speed_measurements.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/44_speed_measurements.py</a></td></tr>
<tr><td>45</td><td>45_speed_measurements.py</td><td>benchmark pro stále stejný počet bodů, u jejichž rozmístění v&nbsp;prostoru se používá stále větší směrodatná odchylka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/45_speed_measurements.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/45_speed_measurements.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>46_iris_dataset.py</td><td>načtení datové kolekce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/46_iris_dataset.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/46_iris_dataset.py</a></td></tr>
<tr><td>47</td><td>47_iris_description.py</td><td>metadata o datové kolekci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/47_iris_description.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/47_iris_description.py</a></td></tr>
<tr><td>48</td><td>48_iris_data.py</td><td>tvar dat &ndash; počet záznamů a počet proměnných</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/48_iris_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/48_iris_data.py</a></td></tr>
<tr><td>49</td><td>49_iris_targets.py</td><td>jména atributů, vztah mezi numerickou hodnotou atributu a jeho jménem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/49_iris_targets.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/49_iris_targets.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>50_iris_scatter_plot_1.py</td><td>korelační diagram pro dvojici vybraných proměnných</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/50_iris_scatter_plot_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/50_iris_scatter_plot_1.py</a></td></tr>
<tr><td>51</td><td>51_iris_scatter_plot_2.py</td><td>příprava pro tvorbu složitějších grafů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/51_iris_scatter_plot_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/51_iris_scatter_plot_2.py</a></td></tr>
<tr><td>52</td><td>52_iris_mutliplot.py</td><td>mřížka obsahující více korelačních diagramů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/52_iris_mutliplot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/52_iris_mutliplot.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>53</td><td>53_iris_histograms.py</td><td>zobrazení základního histogramu pro data v&nbsp;sadě Iris</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/53_iris_histograms.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/53_iris_histograms.py</a></td></tr>
<tr><td>54</td><td>54_iris_histograms.py</td><td>úprava histogramu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/54_iris_histograms.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/54_iris_histograms.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>55</td><td>55_pca.py</td><td>analýza hlavních komponent (PCA), výsledek zobrazený v&nbsp;2D grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/55_pca.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/55_pca.py</a></td></tr>
<tr><td>56</td><td>56_pca_3d.py</td><td>analýza hlavních komponent (PCA), výsledek zobrazený v&nbsp;3D grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/56_pca_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/56_pca_3d.py</a></td></tr>
<tr><td>57</td><td>57_kmeans.py</td><td>základní shluková analýza</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/57_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/57_kmeans.py</a></td></tr>
<tr><td>58</td><td>58_multiple_kmeans.py</td><td>větší množství výsledků shlukové analýzy pro různé atributy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/58_multiple_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/58_multiple_kmeans.py</a></td></tr>
<tr><td>59</td><td>59_kmeans_errors.py</td><td>korektní a nekorektní výsledky základní shlukové analýzy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/59_kmeans_errors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/59_kmeans_errors.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>60</td><td>60_basic_classifier.py</td><td>aplikace jednoduchého modelu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/60_basic_classifier.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/60_basic_classifier.py</a></td></tr>
<tr><td>61</td><td>61_changed_model_parameters.py</td><td>změna parametrů modelu pro zjištění druhů rostil</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/61_changed_model_parameters.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/61_changed_model_parameters.py</a></td></tr>
<tr><td>62</td><td>62_different_model.py</td><td>použití odlišného modelu pro zjištění druhů rostlin</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/62_different_model.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/62_different_model.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>63</td><td>pyproject.toml</td><td>projektový soubor (pro PDM) se všemi závislostmi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pyproject.toml">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pyproject.toml</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>64</td><td>pdm.lock</td><td>lock soubor s&nbsp;konkrétními verzemi všech přímých i tranzitivních závislostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pdm.lock">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pdm.lock</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>65</td><td>Rozpoznání_obrazu_scikit-learn.ipynb</td><td>Jupyter notebook s&nbsp;celým postupem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/Rozpoznání_obrazu_scikit-learn.ipynb">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/Rozpoznání_obrazu_scikit-learn.ipynb</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>particle_life.py</td><td>emergence: příklad vzniku struktury</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/particles/particle_life.py">https://github.com/tisnik/most-popular-python-libs/blob/master/particles/particle_life.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Shluková analýza (clustering) a knihovna Scikit-learn<br />
<a href="https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn/">https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn/</a>
</li>

<li>Shluková analýza (clustering) a knihovna Scikit-learn (2)<br />
<a href="https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-2/">https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-2/</a>
</li>

<li>Shluková analýza (clustering) a knihovna Scikit-learn (z plochy do 3D prostoru)<br />
<a href="https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-z-plochy-do-3d-prostoru/">https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-z-plochy-do-3d-prostoru/</a>
</li>

<li>Rozpoznávání obrázků knihovnou Scikit-learn: první kroky<br />
<a href="https://www.root.cz/clanky/rozpoznavani-obrazku-knihovnou-scikit-learn-prvni-kroky/">https://www.root.cz/clanky/rozpoznavani-obrazku-knihovnou-scikit-learn-prvni-kroky/</a>
</li>


<li>scikit-learn: Machine Learning in Python<br />
<a href="https://scikit-learn.org/stable/index.html">https://scikit-learn.org/stable/index.html</a>
</li>

<li>Sklearn-pandas<br />
<a href="https://github.com/scikit-learn-contrib/sklearn-pandas">https://github.com/scikit-learn-contrib/sklearn-pandas</a>
</li>

<li>sklearn-xarray<br />
<a href="https://github.com/phausamann/sklearn-xarray/">https://github.com/phausamann/sklearn-xarray/</a>
</li>

<li>Clustering<br />
<a href="https://scikit-learn.org/stable/modules/clustering.html">https://scikit-learn.org/stable/modules/clustering.html</a>
</li>

<li>Cluster analysis (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Cluster_analysis">https://en.wikipedia.org/wiki/Cluster_analysis</a>
</li>

<li>Shluková analýza (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Shlukov%C3%A1_anal%C3%BDza">https://cs.wikipedia.org/wiki/Shlukov%C3%A1_anal%C3%BDza</a>
</li>

<li>K-means<br />
<a href="https://cs.wikipedia.org/wiki/K-means">https://cs.wikipedia.org/wiki/K-means</a>
</li>

<li>k-means clustering<br />
<a href="https://en.wikipedia.org/wiki/K-means_clustering">https://en.wikipedia.org/wiki/K-means_clustering</a>
</li>

<li>Spectral clustering<br />
<a href="https://en.wikipedia.org/wiki/Spectral_clustering">https://en.wikipedia.org/wiki/Spectral_clustering</a>
</li>

<li>Emergence<br />
<a href="https://cs.wikipedia.org/wiki/Emergence">https://cs.wikipedia.org/wiki/Emergence</a>
</li>

<li>Particle Life: Vivid structures from rudimentary rules<br />
<a href="https://particle-life.com/">https://particle-life.com/</a>
</li>

<li>Hertzsprungův–Russellův diagram<br />
<a href="https://cs.wikipedia.org/wiki/Hertzsprung%C5%AFv%E2%80%93Russell%C5%AFv_diagram">https://cs.wikipedia.org/wiki/Hertzsprung%C5%AFv%E2%80%93Russell%C5%AFv_diagram</a>
</li>

<li>Using Machine Learning in an HR Diagram<br />
<a href="https://cocalc.com/share/public_paths/08b6e03583cbdef3cdb9813a54ec68ff773c747f">https://cocalc.com/share/public_paths/08b6e03583cbdef3cdb9813a54ec68ff773c747f</a>
</li>

<li>Gaia H-R diagrams: Querying Gaia data for one million nearby stars<br />
<a href="https://vlas.dev/post/gaia-dr2-hrd/">https://vlas.dev/post/gaia-dr2-hrd/</a>
</li>

<li>The Hertzsprung–Russell diagram<br />
<a href="https://scipython.com/book2/chapter-9-data-analysis-with-pandas/problems/p92/the-hertzsprung-russell-diagram/">https://scipython.com/book2/chapter-9-data-analysis-with-pandas/problems/p92/the-hertzsprung-russell-diagram/</a>
</li>

<li>Animated Hertzsprung-Russell Diagram with 119,614 datapoints<br />
<a href="https://github.com/zonination/h-r-diagram">https://github.com/zonination/h-r-diagram</a>
</li>

<li>Neuraxle Pipelines<br />
<a href="https://github.com/Neuraxio/Neuraxle">https://github.com/Neuraxio/Neuraxle</a>
</li>

<li>scikit-learn: Getting Started<br />
<a href="https://scikit-learn.org/stable/getting_started.html">https://scikit-learn.org/stable/getting_started.html</a>
</li>

<li>Support Vector Machines<br />
<a href="https://scikit-learn.org/stable/modules/svm.html">https://scikit-learn.org/stable/modules/svm.html</a>
</li>

<li>Use Deep Learning to Detect Programming Languages<br />
<a href="http://searene.me/2017/11/26/use-neural-networks-to-detect-programming-languages/">http://searene.me/2017/11/26/use-neural-networks-to-detect-programming-languages/</a>
</li>

<li>Natural-language processing<br />
<a href="https://en.wikipedia.org/wiki/Natural-language_processing">https://en.wikipedia.org/wiki/Natural-language_processing</a>
</li>

<li>THE MNIST DATABASE of handwritten digits<br />
<a href="http://yann.lecun.com/exdb/mnist/">http://yann.lecun.com/exdb/mnist/</a>
</li>

<li>MNIST database (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/MNIST_database">https://en.wikipedia.org/wiki/MNIST_database</a>
</li>

<li>MNIST For ML Beginners<br />
<a href="https://www.tensorflow.org/get_started/mnist/beginners">https://www.tensorflow.org/get_started/mnist/beginners</a>
</li>

<li>Stránka projektu Torch<br />
<a href="http://torch.ch/">http://torch.ch/</a>
</li>

<li>Torch: Serialization<br />
<a href="https://github.com/torch/torch7/blob/master/doc/serialization.md">https://github.com/torch/torch7/blob/master/doc/serialization.md</a>
</li>

<li>Torch: modul image<br />
<a href="https://github.com/torch/image/blob/master/README.md">https://github.com/torch/image/blob/master/README.md</a>
</li>

<li>Data pro neuronové sítě<br />
<a href="http://archive.ics.uci.edu/ml/index.php">http://archive.ics.uci.edu/ml/index.php</a>
</li>

<li>Torch na GitHubu (několik repositářů)<br />
<a href="https://github.com/torch">https://github.com/torch</a>
</li>

<li>Torch (machine learning), Wikipedia<br />
<a href="https://en.wikipedia.org/wiki/Torch_%28machine_learning%29">https://en.wikipedia.org/wiki/Torch_%28machine_learning%29</a>
</li>

<li>Torch Package Reference Manual<br />
<a href="https://github.com/torch/torch7/blob/master/README.md">https://github.com/torch/torch7/blob/master/README.md</a>
</li>

<li>Torch Cheatsheet<br />
<a href="https://github.com/torch/torch7/wiki/Cheatsheet">https://github.com/torch/torch7/wiki/Cheatsheet</a>
</li>

<li>Neural network containres (Torch)<br />
<a href="https://github.com/torch/nn/blob/master/doc/containers.md">https://github.com/torch/nn/blob/master/doc/containers.md</a>
</li>

<li>Simple layers<br />
<a href="https://github.com/torch/nn/blob/master/doc/simple.md#nn.Linear">https://github.com/torch/nn/blob/master/doc/simple.md#nn.Linear</a>
</li>

<li>Transfer Function Layers<br />
<a href="https://github.com/torch/nn/blob/master/doc/transfer.md#nn.transfer.dok">https://github.com/torch/nn/blob/master/doc/transfer.md#nn.transfer.dok</a>
</li>

<li>Feedforward neural network<br />
<a href="https://en.wikipedia.org/wiki/Feedforward_neural_network">https://en.wikipedia.org/wiki/Feedforward_neural_network</a>
</li>

<li>Biologické algoritmy (4) - Neuronové sítě<br />
<a href="https://www.root.cz/clanky/biologicke-algoritmy-4-neuronove-site/">https://www.root.cz/clanky/biologicke-algoritmy-4-neuronove-site/</a>
</li>

<li>Biologické algoritmy (5) - Neuronové sítě<br />
<a href="https://www.root.cz/clanky/biologicke-algoritmy-5-neuronove-site/">https://www.root.cz/clanky/biologicke-algoritmy-5-neuronove-site/</a>
</li>

<li>Umělá neuronová síť (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Um%C4%9Bl%C3%A1_neuronov%C3%A1_s%C3%AD%C5%A5">https://cs.wikipedia.org/wiki/Um%C4%9Bl%C3%A1_neuronov%C3%A1_s%C3%AD%C5%A5</a>
</li>

<li>PyTorch<br />
<a href="http://pytorch.org/">http://pytorch.org/</a>
</li>

<li>JupyterLite na PyPi<br />
<a href="https://pypi.org/project/jupyterlite/">https://pypi.org/project/jupyterlite/</a>
</li>

<li>JupyterLite na GitHubu<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Dokumentace k&nbsp;projektu JupyterLite<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Matplotlib Home Page<br />
<a href="http://matplotlib.org/">http://matplotlib.org/</a>
</li>

<li>Matplotlib (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Matplotlib">https://en.wikipedia.org/wiki/Matplotlib</a>
</li>

<li>Popis barvových map modulu matplotlib.cm<br />
<a href="https://gist.github.com/endolith/2719900#id7">https://gist.github.com/endolith/2719900#id7</a>
</li>

<li>Ukázky (palety) barvových map modulu matplotlib.cm<br />
<a href="http://matplotlib.org/examples/color/colormaps_reference.html">http://matplotlib.org/examples/color/colormaps_reference.html</a>
</li>

<li>Galerie grafů vytvořených v&nbsp;Matplotlibu<br />
<a href="https://matplotlib.org/3.2.1/gallery/">https://matplotlib.org/3.2.1/gallery/</a>
</li>

<li>3D rendering<br />
<a href="https://en.wikipedia.org/wiki/3D_rendering">https://en.wikipedia.org/wiki/3D_rendering</a>
</li>

<li>3D computer graphics<br />
<a href="https://en.wikipedia.org/wiki/3D_computer_graphics">https://en.wikipedia.org/wiki/3D_computer_graphics</a>
</li>

<li>Primary 3D view planes<br />
<a href="https://matplotlib.org/stable/gallery/mplot3d/view_planes_3d.html">https://matplotlib.org/stable/gallery/mplot3d/view_planes_3d.html</a>
</li>

<li>Getting started in scikit-learn with the famous iris dataset<br />
<a href="https://www.youtube.com/watch?v=hd1W4CyPX58">https://www.youtube.com/watch?v=hd1W4CyPX58</a>
</li>

<li>Training a machine learning model with scikit-learn<br />
<a href="https://www.youtube.com/watch?v=RlQuVL6-qe8">https://www.youtube.com/watch?v=RlQuVL6-qe8</a>
</li>

<li>Iris (plant)<br />
<a href="https://en.wikipedia.org/wiki/Iris_(plant)">https://en.wikipedia.org/wiki/Iris_(plant)</a>
</li>

<li>Kosatec<br />
<a href="https://cs.wikipedia.org/wiki/Kosatec">https://cs.wikipedia.org/wiki/Kosatec</a>
</li>

<li>Iris setosa<br />
<a href="https://en.wikipedia.org/wiki/Iris_setosa">https://en.wikipedia.org/wiki/Iris_setosa</a>
</li>

<li>Iris versicolor<br />
<a href="https://en.wikipedia.org/wiki/Iris_versicolor">https://en.wikipedia.org/wiki/Iris_versicolor</a>
</li>

<li>Iris virginica<br />
<a href="https://en.wikipedia.org/wiki/Iris_virginica">https://en.wikipedia.org/wiki/Iris_virginica</a>
</li>

<li>Druh<br />
<a href="https://cs.wikipedia.org/wiki/Druh">https://cs.wikipedia.org/wiki/Druh</a>
</li>

<li>Iris subg. Limniris<br />
<a href="https://en.wikipedia.org/wiki/Iris_subg._Limniris">https://en.wikipedia.org/wiki/Iris_subg._Limniris</a>
</li>

<li>Iris Dataset Classification with Python: A Tutorial<br />
<a href="https://www.pycodemates.com/2022/05/iris-dataset-classification-with-python.html">https://www.pycodemates.com/2022/05/iris-dataset-classification-with-python.html</a>
</li>

<li>Iris flower data set<br />
<a href="https://en.wikipedia.org/wiki/Iris_flower_data_set">https://en.wikipedia.org/wiki/Iris_flower_data_set</a>
</li>

<li>List of datasets for machine-learning research<br />
<a href="https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research">https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research</a>
</li>

<li>Analýza hlavních komponent<br />
<a href="https://cs.wikipedia.org/wiki/Anal%C3%BDza_hlavn%C3%ADch_komponent">https://cs.wikipedia.org/wiki/Anal%C3%BDza_hlavn%C3%ADch_komponent</a>
</li>

<li>Principal component analysis<br />
<a href="https://en.wikipedia.org/wiki/Principal_component_analysis">https://en.wikipedia.org/wiki/Principal_component_analysis</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

