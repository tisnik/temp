<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba grafického uživatelského rozhraní v Pythonu s využitím knihovny PySimpleGUI (4)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba grafického uživatelského rozhraní v Pythonu s využitím knihovny PySimpleGUI (4)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve čtvrté části článku o knihovně PySimpleGUI dokončíme popis většiny zbývajících ovládacích prvků (widgetů) nabízených touto knihovnou i způsob jejich použití. S informacemi získanými ve všech čtyřech článcích je možné tvořit i aplikace s komplikovaným uživatelským rozhraním.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Tvorba grafického uživatelského rozhraní v&nbsp;Pythonu s&nbsp;využitím knihovny PySimpleGUI (4)</a></p>
<p><a href="#k02">2. Reakce prvků grafického uživatelského rozhraní na změnu velikosti okna</a></p>
<p><a href="#k03">3. Reakce všech prvků na změnu velikosti okna</a></p>
<p><a href="#k04">4. Zbylé ovládací prvky nabízené knihovnou PySimpleGUI</a></p>
<p><a href="#k05">5. Spinbox</a></p>
<p><a href="#k06">6. Slider (posuvník)</a></p>
<p><a href="#k07">7. Další způsoby zobrazení slideru</a></p>
<p><a href="#k08">8. ProgressBar: indikátor probíhající operace</a></p>
<p><a href="#k09">9. Propojení posuvníku s&nbsp;progress barem</a></p>
<p><a href="#k10">10. Výběrové menu (OptionMenu)</a></p>
<p><a href="#k11">11. Výběr prvků ze seznamu (Listbox)</a></p>
<p><a href="#k12">12. Statický rastrový obrázek</a></p>
<p><a href="#k13">13. Data obrázku uložená přímo ve zdrojovém kódu</a></p>
<p><a href="#k14">14. Animace</a></p>
<p><a href="#k15">15. Složitější animace &ndash; vizualizace probíhající operace</a></p>
<p><a href="#k16">16. Tabulka</a></p>
<p><a href="#k17">17. Strom</a></p>
<p><a href="#k18">18. Obsah poslední části seriálu o PySimpleGUI</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba grafického uživatelského rozhraní v&nbsp;Pythonu s&nbsp;využitím knihovny PySimpleGUI (dokončení)</h2>

<p>Jak již bylo zmíněno v&nbsp;perexu, dokončíme dnes popis většiny zbývajících
ovládacích prvků (<i>widgetů</i>) nabízených knihovnou <i>PySimpleGUI</i> i
způsob jejich použití. S&nbsp;informacemi získanými ve všech čtyřech článcích
(předchozí články najdete na [<a
href="https://www.root.cz/clanky/kreslici-platno-v-knihovne-pysimplegui/">1</a>]
[<a
href="https://www.root.cz/clanky/tvorba-gui-v-pythonu-s-vyuzitim-knihovny-pysimplegui-2/">2</a>]
a [<a
href="https://www.root.cz/clanky/tvorba-grafickeho-uzivatelskeho-rozhrani-v-pythonu-s-vyuzitim-knihovny-pysimplegui/">3</a>])
je možné tvořit i aplikace s&nbsp;poměrně komplikovaným uživatelským rozhraním
&ndash; a přitom bude GUI část dosti jednoduchá a přehledná.</p>

<p><div class="rs-tip-major">Poznámka: ještě ovšem budeme muset popsat způsob
práce se stromy (<i>tree</i>) a <i>taby</i>. Jedná se o složitější, ovšem velmi
užitečné ovládací prvky, které navíc v&nbsp;některých jiných knihovnách pro
tvorbu grafického uživatelského rozhraní nenalezneme.</div></p>

<img src="https://i.iinfo.cz/images/518/pysimplegui-1-11.webp" class="image-1113121" width="721" height="801" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 1: Nepatrně složitější aplikace s&nbsp;GUI, která je součástí
samotného balíčku PySimpleGUI.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Reakce prvků grafického uživatelského rozhraní na změnu velikosti okna</h2>

<p>Nejprve si ukažme, jakým způsobem mohou prvky grafického uživatelského
rozhraní (tedy například tlačítka) reagovat na změnu velikosti okna. Prozatím
víme, že mezi ovládací prvky je možné v&nbsp;případě potřeby vkládat
&bdquo;pružiny&ldquo; představované neviditelným objektem
<strong>PySimpleGUI.Push</strong>, který dokáže zajistit, že se mezi prvky GUI
vloží stejně velké mezery. Pružiny mohou být na jednotlivých řádcích umístěny
zcela libovolně, což je ostatně patrné z&nbsp;následujícího kódu:</p>

<pre>
...
...
...
    [
        sg.Push(),
        sg.Button("Button1"),
        sg.Button("Button2"),
    ],
    [
        sg.Button("Button1"),
        sg.Push(),
        sg.Button("Button2"),
    ],
    [
        sg.Button("Button1"),
        sg.Button("Button2"),
        sg.Push(),
    ],
    [
        sg.Push(),
        sg.Button("Button1"),
        sg.Button("Button2"),
        sg.Push(),
    ],
    [
        sg.Push(),
        sg.Button("Button1"),
        sg.Push(),
        sg.Button("Button2"),
        sg.Push(),
    ],
...
...
...
</pre>

<p>Ovšem při změně velikosti okna zůstávají velikosti samotných prvků GUI
nezměněné, pouze se více roztáhnou či naopak stlačí pružiny mezi nimi. Toto
chování však není jediné možné, protože jednotlivé prvky se mohou zvětšovat či
zmenšovat současně s&nbsp;okny (nejedná se sice o zcela obvyklé či očekáváné
chování, ovšem v&nbsp;některých situacích se může hodit).</p>

<p>Nejprve ovšem musíme změnu velikosti oken povolit. To je ve skutečnosti
velmi snadné, protože při vytváření okna můžeme konstruktoru
<strong>PySimpleGUI.Window()</strong> předat nepovinný parametr
<strong>resizable</strong> nastavený na logickou hodnotu <strong>True</strong>.
V&nbsp;takovém případě bude možné měnit velikost okna, a to všemi dostupnými
prostředky (záleží na okenním manažeru atd.):</p>

<pre>
window = sg.Window("Window #37", layout, size=(320, 260), resizable=True, finalize=True)
</pre>

<p>Dále musíme v&nbsp;seznamu obsahujícím všechny ovládací prvky explicitně
uvést klíče těch prvků, u nichž budeme chtít modifikovat jejich chování.
Příkladem může být &bdquo;odesílací&ldquo; tlačítko vytvářené konstruktorem
<strong>PySimpleGUI.Submit()</strong>:</p>

<pre>
sg.Submit(key="foo")
</pre>

<p>Po vytvoření okna (viz výše uvedený konstruktor) změníme vlastnosti tlačítka
s&nbsp;klíčem &bdquo;foo&ldquo;. Konkrétně se jedná o vlastnosti nazvané
<strong>expand_x</strong> a <strong>expand_y</strong>, které určují, jestli se
bude tlačítko zvětšovat ve směru x-ové osy a/nebo osy y-ové:</p>

<pre>
window["foo"].expand(expand_x=True, expand_y=True)
</pre>

<p>Výsledný skript bude vypadat takto:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [
        sg.Button("Button1"),
        sg.Button("Button2"),
    ],
    [
        sg.Push(),
        sg.Button("Button1"),
        sg.Button("Button2"),
    ],
    [
        sg.Button("Button1"),
        sg.Push(),
        sg.Button("Button2"),
    ],
    [
        sg.Button("Button1"),
        sg.Button("Button2"),
        sg.Push(),
    ],
    [
        sg.Push(),
        sg.Button("Button1"),
        sg.Button("Button2"),
        sg.Push(),
    ],
    [
        sg.Push(),
        sg.Button("Button1"),
        sg.Push(),
        sg.Button("Button2"),
        sg.Push(),
    ],
    [sg.Submit(key="foo")],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #37", layout, size=(320, 260), resizable=True, finalize=True)
<strong>window["foo"].expand(expand_x=True, expand_y=True)</strong>
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Vyzkoušejme si chování tohoto skriptu:</p>

*** image ***
<p><i>Obrázek 2: Okno ve své výchozí velikosti 320&times;260 pixelů.</i></p>

*** image ***
<p><i>Obrázek 3: Po zvětšení okna se příslušně zvětší i odesílací
tlačítko.</i></p>

*** image ***
<p><i>Obrázek 4: Po zmenšení okna se příslušně zmenší i odesílací
tlačítko.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Reakce všech prvků na změnu velikosti okna</h2>

<p>Samozřejmě nám nic nebrání v&nbsp;tom, abychom vytvořili okno či dialog,
jehož <i>všechny</i> prvky budou reagovat na změnu velikosti okna/dialogu.
V&nbsp;našem konkrétním příkladu se tlačítkům přiřadí celočíselný klíč (může se
jednat o jakýkoli hashovatelný objekt), což nám umožní snadný průchod všemi
ovládacími prvky grafického uživatelského rozhraní:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [
        sg.Button("Button1", key=1),
        sg.Button("Button2", key=2),
    ],
    [
        sg.Push(),
        sg.Button("Button1", key=3),
        sg.Button("Button2", key=4),
    ],
    [
        sg.Button("Button1", key=5),
        sg.Push(),
        sg.Button("Button2", key=6),
    ],
    [
        sg.Button("Button1", key=7),
        sg.Button("Button2", key=8),
        sg.Push(),
    ],
    [
        sg.Push(),
        sg.Button("Button1", key=9),
        sg.Button("Button2", key=10),
        sg.Push(),
    ],
    [
        sg.Push(),
        sg.Button("Button1", key=11),
        sg.Push(),
        sg.Button("Button2", key=12),
        sg.Push(),
    ],
    [sg.Submit(key=13)],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #38", layout, size=(320, 260), resizable=True, finalize=True)
&nbsp;
for i in range(1, 14):
    <strong>window[i].expand(expand_x=True, expand_y=True)</strong>
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Opět si vyzkoušejme chování tohoto skriptu:</p>

*** image ***
<p><i>Obrázek 5: Okno ve své výchozí velikosti 320&times;260 pixelů.</i></p>

*** image ***
<p><i>Obrázek 6: Po zvětšení okna se příslušně zvětší i všechna
tlačítka.</i></p>

*** image ***
<p><i>Obrázek 7: Po zmenšení okna se příslušně zmenší i všechna
tlačítka.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Zbylé ovládací prvky nabízené knihovnou PySimpleGUI</h2>

<p>Knihovna PySimpleGUI nabízí programátorům několik desítek ovládacích prvků
(<i>widgetů</i>). Kolik jich přesně je záleží na tom, nad jakou knihovnou je
PySimpleGUI použita. Pokud se jedná o <i>TkInter</i>, což je výchozí volba,
jsou dostupné následující ovládací prvky:</p>

<table>
<tr><td>Text</td><td>Column</td><td>ProgressBar</td></tr>
<tr><td>Input</td><td>Frame</td><td>Table</td></tr>
<tr><td>Combo</td><td>Tab</td><td>Tree</td></tr>
<tr><td>OptionMenu</td><td>TabGroup</td><td>VerticalSeparator</td></tr>
<tr><td>Multiline</td><td>Pane</td><td>HorizontalSeparator</td></tr>
<tr><td>Output</td><td>Graph</td><td>StatusBar</td></tr>
<tr><td>Radio</td><td>Slider</td><td>Sizegrip</td></tr>
<tr><td>Checkbox</td><td>Listbox</td><td>Push</td></tr>
<tr><td>Spin</td><td>Menu</td><td>VPush</td></tr>
<tr><td>Button</td><td>MenubarCustom</td><td>Sizer</td></tr>
<tr><td>Image</td><td>ButtonMenu</td><td>&nbsp;</td></tr>
<tr><td>Canvas</td><td>Titlebar</td><td>&nbsp;</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: některé ovládací prvky jsou neviditelné
a slouží především pro definici layoutu dialogu nebo okna. Jedná se zejména o
tyto prvky: <strong>Push</strong>, <strong>VPush</strong>
(&bdquo;pružiny&ldquo;) a <strong>Sizer</strong>.</div></p>

<p>S&nbsp;některými ovládacími prvky jsme se seznámili v&nbsp;předchozích
článcích. Mnohé z&nbsp;nich (<strong>Text</strong>, <strong>Combo</strong>,
<strong>InputText</strong>, <strong>Checkbox</strong>, <strong>Radio</strong> a
<strong>Submit</strong> resp.&nbsp;<strong>Button</strong>) jsou použity
v&nbsp;tomto příkladu:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Name", size=(8, 0)), sg.InputText(key="name")],
    [sg.Text("Surname", size=(8, 0)), sg.InputText(key="surname")],
    [
        sg.Text("Role", size=(8, 0)),
        sg.Combo(
            ["Administrator", "Maintainer", "Guest"],
            default_value="Guest",
            readonly=True,
            key="role",
        ),
    ],
    [
        sg.Text("Register e-mail", size=(8, 0)),
        sg.Checkbox("", default=True, key="register e-mail"),
    ],
    [
        sg.Text("Color theme", size=(8, 0)),
        sg.Radio("Light", "THEME", default=False, key="light_theme"),
        sg.Radio("Dark", "THEME", default=True, key="dark_theme"),
    ],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #9", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

*** image ***
<p><i>Obrázek 8: Některé ovládací prvky, s&nbsp;nimiž jsme se již setkali
&ndash; neměnitelný text, vstupní textová pole, výběrový box (combobox),
zatrhávací box (checkbox), radiová tlačítka (radio buttons) a samozřejmě běžné
tlačítko pro potvrzení voleb provedených v&nbsp;dialogu.</i></p>

<p>Ovšem i některé další prvky již byly popsány, především pak
<strong>Column</strong>, <strong>StatusBar</strong>, <strong>Menu</strong>,
<strong>Frame</strong> a <strong>Canvas</strong>. S&nbsp;dalšími ovládacími
prvky se seznámíme v&nbsp;navazujících kapitolách.</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Spinbox</h2>

<p>Ovládací prvek nazvaný <strong>Spinbox</strong> nebo jen
<strong>Spin</strong> (možno volně přeložit jako číselník) je směsicí widgetu
<strong>Entry</strong> a <strong>Scrollbaru</strong>. Pokud tomuto ovládacímu
prvku předáme při jeho konstrukci n-tici s&nbsp;řetězci, bude možné provádět
výběr libovolného řetězce z&nbsp;této n-tice s&nbsp;využitím zobrazených
tlačítek se šipkami nahoru a dolů. A pokud je nastaven fokus na tento prvek,
lze použít i kurzorové šipky přímo na klávesnici:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Spin"), <strong>sg.Spin(["Alpher", "Bethe", "Gamow",], s=(15, 2))</strong>],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #39", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>A takto bude spinbox vypadat v&nbsp;okně aplikace:</p>

*** image ***
<p><i>Obrázek 9: Spinbox zobrazený v&nbsp;okně aplikace.</i></p>

<p>Po potvrzení dialogu se vrátí aktuálně vybraná hodnota spinboxu:</p>

<pre>
Event:  Submit     Values:  {0: 'Alpher'}
</pre>

<p>To znamená, že je praktičtější si spinbox pojmenovat:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Spin"), <strong>sg.Spin(["Alpher", "Bethe", "Gamow",], s=(15, 2), key="Author")</strong>],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #39", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>S&nbsp;výsledkem po stisku tlačítka Submit:</p>

<pre>
Event:  Submit     Values:  {'Author': 'Bethe'}
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Slider (posuvník)</h2>

<p>Slider je speciální forma posuvníku (<i>scrollbar</i>) určeného pro
specifikaci numerické hodnoty s&nbsp;tím, že je hodnota vizuálně zobrazena
(umístěna) na zvolené škále od-do. Předností posuvníku je fakt, že je u něj
možné zobrazit značky představující zvolenou škálu hodnot a tak zrychlit změnu
hodnot prováděnou uživatelem. Posuvník se vytváří konstruktorem
<strong>PySimpleGUI.Slider</strong>, přičemž se v&nbsp;prvním parametru předá
n-tice s&nbsp;minimální a maximální hodnotou. Zadat lze i orientaci a
popř.&nbsp;i další parametry:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Slider"), <strong>sg.Slider((0, 10), orientation='h', s=(20, 15), key="slider")</strong>],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #41", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>A takto by se měl posuvník (slider) zobrazit v&nbsp;okně:</p>

*** image ***
<p><i>Obrázek 10: Slider zobrazený v&nbsp;okně aplikace.</i></p>

<p>Po potvrzení dialogu či uzavření okna je hodnotou objektu typu posuvník
pochopitelně vybraná hodnota:</p>

<pre>
Event:  Submit     Values:  {'slider': 2.0}
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Další způsoby zobrazení slideru</h2>

<p>Velmi užitečné je zobrazení hodnot na slideru. Pro tento účel je nutné
použít nepovinný parametr nazvaný <strong>tick_interval</strong>, kterému se
předá krok mezi jednotlivými hodnotami. Takový slider je ovšem pochopitelně
vyšší popř.&nbsp;širší, v&nbsp;závislosti na jeho orientaci:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Slider"),
     <strong>sg.Slider((0, 10), orientation='h', tick_interval=1, s=(20, 15), key="slider")]</strong>,
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #42", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Výsledkem bude takto vypadající dialog:</p>

*** image ***
<p><i>Obrázek 11: Slider i s&nbsp;hodnotami na pravítku.</i></p>

<p>Taktéž je možné změnit orientaci slideru (i když vertikální orientace je
málo používaná):</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Slider"),
     <strong>sg.Slider((0, 10), orientation='v', tick_interval=1, s=(20, 15), key="slider")]</strong>,
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #43", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Výsledek:</p>

*** image ***
<p><i>Obrázek 12: Vertikálně orientovaný slider.</i></p>

<p>A pochopitelně je možné dopředu zvolit hodnotu, která bude vybrána:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Slider"),
     <strong>sg.Slider((0, 10), orientation='h', tick_interval=1, s=(20, 15), default_value=7, key="slider")</strong>],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #44", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. ProgressBar: indikátor probíhající operace</h2>

<p>Dalším často využívaným ovládacím prvkem je indikátor probíhající operace
(&bdquo;teploměr&ldquo;), který se nazývá <strong>ProgressBar</strong>. Při
konstrukci tohoto prvku je nutné zvolit minimálně jeho maximální hodnotu a
volitelně pak rozměry, orientaci (horizontální, vertikální), jméno atd. Změna
teploměru, tedy typicky posun o další políčko směrem ke konci, se provádí
metodou <strong>UpdateBar</strong>.</p>

<p>V&nbsp;demonstračním příkladu je nutno desetkrát kliknout na tlačítko
<strong>Next step</strong>, aby &bdquo;teploměr&ldquo; došel ke svému konci.
Po jedenáctém výběru tohoto tlačítka je skript ukončen:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [<strong>sg.ProgressBar(10, orientation="h", size=(20, 20), key="progress")</strong>],
    [sg.Button("Next step")],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #45", layout)
progress_bar = window["progress"]
&nbsp;
<i># obsluha smyčky událostí (event loop)</i>
for i in range(11):
    <i># přečtení události</i>
    event, values = window.read()
    print("Event: ", event, "    Values: ", values)
    progress_bar.UpdateBar(i+1)
&nbsp;
    <i># reakce na událost "uzavření okna"</i>
    if event == sg.WIN_CLOSED:
        break
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

*** image ***
<p><i>Obrázek 13: Dialog ihned po svém zobrazení.</i></p>

*** image ***
<p><i>Obrázek 14: Situace po několika kliknutích na tlačítko <strong>Next step</strong>.</i></p>

*** image ***
<p><i>Obrázek 15: Po dalším výběru tlačítka <strong>Next step</strong> se
dialog uzavře a skript se ukončí.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Propojení posuvníku s&nbsp;progress barem</h2>

<p>V&nbsp;dalším demonstračním příkladu si můžeme otestovat propojení posuvníku
s&nbsp;&bdquo;teploměrem&ldquo;. Po každé změně pozice značky na posuvníku se
příslušným způsobem změní i indikátor míry dokončení úkolu na
&bdquo;teploměru&ldquo;. Přečtení hodnoty posuvníku a změna progress baru je
pochopitelně provedena ve smyčce pro obsluhu událostí (viz zvýrazněnou dvojici
řádků):</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Slider((0, 10), orientation='h', tick_interval=1, s=(25, 15), default_value=0, key="slider")],
    [sg.ProgressBar(10, orientation="h", size=(20, 20), key="progress")],
    [sg.Button("Update")],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #46", layout)
progress_bar = window["progress"]
slider = window["slider"]
&nbsp;
<i># obsluha smyčky událostí (event loop)</i>
while True:
    <i># přečtení události</i>
    event, values = window.read()
    print("Event: ", event, "    Values: ", values)
&nbsp;
    <i># reakce na událost "uzavření okna"</i>
    if event == sg.WIN_CLOSED:
        break
&nbsp;
    <i># změna hodnoty na progress baru</i>
    <strong>value = values["slider"]</strong>
    <strong>progress_bar.UpdateBar(value)</strong>
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Výsledný dialog se bude chovat následovně:</p>

*** image ***
<p><i>Obrázek 16: Progress bar ukazuje stejnou hodnotu, jaká je vybrána
posuvníkem.</i></p>

*** image ***
<p><i>Obrázek 17: Progress bar ukazuje stejnou hodnotu, jaká je vybrána
posuvníkem.</i></p>

*** image ***
<p><i>Obrázek 18: Progress bar ukazuje stejnou hodnotu, jaká je vybrána
posuvníkem.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Výběrové menu (OptionMenu)</h2>

<p>Poměrně netypickým ovládacím prvkem je výběrové menu. To lze považovat za
obdobu list boxu (viz navazující kapitolu), ovšem výběrové menu je zobrazeno
odlišným způsobem &ndash; jedná se vlastně o kombinaci tlačítka
s&nbsp;kontextovým menu. Tento neobvyklý ovládací prvek je navíc dostupný jen
v&nbsp;případě, pokud se pro správu GUI používá knihovna <i>TkInter</i>.</p>

<p>Podívejme se tedy jen v&nbsp;krátkosti na to, jak se tento prvek zařazuje do
dialogů:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Option menu"),
     <strong>sg.OptionMenu(["Alpher", "Bethe", "Gamow",], s=(15, 2))</strong>],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #47", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

*** image ***
<p><i>Obrázek 19: Po výběru prvku <strong>OptionMenu</strong> se vlastně
zobrazí kontextové menu. To je považováno za samostatné okno, proto je tento
screenshot &bdquo;uříznutý&ldquo;.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Výběr prvků ze seznamu (Listbox)</h2>

<p>V&nbsp;případě, že je zapotřebí dát uživatelům na výběr z&nbsp;několika
pevně zadaných hodnot, je pravděpodobně nejjednodušší a nejpřehlednější použít
radiová tlačítka, s&nbsp;nimiž jsme se již seznámili v&nbsp;předchozích
článcích. Pokud je hodnot mnoho nebo se mohou měnit, je většinou vhodnější
použít výběr ze seznamu (<i>listbox</i>) popř.&nbsp;<a href="#k10">výše
zmíněné</a> výběrové menu (to za předpokladu, že chcete využít dnes již méně
známé ovládací prvky). Samotný seznam (<i>listbox</i>) je používanější a
známější; proto ho pravděpodobně budete preferovat.</p>

<p>Při konstrukci listboxu je pouze nutné konstruktoru předat sekvenci
s&nbsp;prvky, které se mají zobrazit. Dále lze zvolit velikost seznamu a
popř.&nbsp;povolit či naopak zakázat zobrazení scrollbaru ve chvíli, kdy nelze
na dané ploše zobrazit všechny jeho prvky. Ukažme si ten nejjednodušší způsob
použití:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Text("Option menu"),
     <strong>sg.Listbox(["Alpher", "Bethe", "Gamow",], s=(20, 3))</strong>],
    [sg.Submit()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #48", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Výsledný dialog může vypadat následovně:</p>

*** image ***
<p><i>Obrázek 20: Dialog s&nbsp;výběrovým boxem se seznamem hodnot.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Statický rastrový obrázek</h2>

<p>Další element grafického uživatelského rozhraní, který si popíšeme, je velmi
jednoduchý. Jedná se o statický rastrový obrázek, který lze načíst
z&nbsp;externího souboru a umístit ho do zvoleného místa na dialogu (například
ve formě ikony atd.). Podporována je většina formátů rastrových obrázků
vhodných pro ikony, tedy primárně GIF a PNG. Přidání obrázku do dialogu je
triviální, jak je to ostatně patrné i při pohledu na následující zdrojový
kód:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [<strong>sg.Image("globe.png")</strong>],
    [sg.Push(), sg.Submit(), sg.Push()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #49", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Obrázek zobrazený v&nbsp;dialogovém okně bude vypadat následovně:</p>

*** image ***
<p><i>Obrázek 21: Ikona zobrazená v&nbsp;dialogovém okně.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Data obrázku uložená přímo ve zdrojovém kódu</h2>

<p>Samotný obrázek se většinou načítá z&nbsp;externích souborů, ovšem
v&nbsp;případě potřeby lze malé ikony atd. mít uložené přímo ve zdrojovém kódu
Pythonu. V&nbsp;takovém případě se původní obrázek převede (například nástrojem
<strong>base64</strong>) do sekvence znaků podle kódování <i>Base64</i> a
výsledek se uloží jako hodnota typu <i>bytes</i>. To je v&nbsp;Pythonu snadné,
protože stačí tuto hodnotu reprezentovat literálem zapisovaným takto:</p>

<pre>
b"hodnoty bajtů"
</pre>

<p>Díky použití <i>Base64</i> se v&nbsp;takovém literálu nenachází žádné
speciální (řídicí) znaky.</p>

<p>Předchozí demonstrační příklad tedy můžeme upravit do poněkud rozsáhlé
podoby (schválně ho uvádím celý, aby bylo patrné, že zdrojové kódy mohou být
obrovské):</p>

<pre>
import PySimpleGUI as sg
&nbsp;
image=b"""
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
"""
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [<strong>sg.Image(image)</strong>],
    [sg.Push(), sg.Submit(), sg.Push()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #52", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Animace</h2>

<p>Do dialogů lze vložit i animované GIFy. Stále se bude jednat o widget typu
<strong>Image</strong>, navíc způsob přepínání snímků v&nbsp;animovaném GIFu je
možné řídit programově, konkrétně zavoláním metody
<strong>UpdateAnimation</strong>. Příkladem může být skript, v&nbsp;němž se
snímek změní po každém stisku tlačítka <strong>Next frame</strong>. Samotný
animovaný GIF přitom obsahuje pouze dvojici snímků a vypadá následovně:</p>

*** image ***
<p><i>Obrázek 22: Animovaný GIF se dvěma snímky vložený do dialogu.</i></p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Push(), <strong>sg.Image("blink.gif", key="gif")</strong>, sg.Push()],
    [sg.Push(), sg.Button("Next frame"), sg.Push()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #50", layout)
<strong>gif = window["gif"]</strong>
&nbsp;
<i># obsluha smyčky událostí (event loop)</i>
while True:
    <i># přečtení události</i>
    event, values = window.read()
    print("Event: ", event, "    Values: ", values)
    if event == "Next frame":
        <strong>gif.UpdateAnimation("blink.gif")</strong>
&nbsp;
    <i># reakce na událost "uzavření okna"</i>
    if event == sg.WIN_CLOSED:
        break
&nbsp;
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>A takto vypadá výsledný dialog:</p>

*** image ***
<p><i>Obrázek 23: Dialog s&nbsp;animovaným GIFem.</i></p>

*** image ***
<p><i>Obrázek 24: Dialog s&nbsp;animovaným GIFem po přepnutí snímku.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Složitější animace &ndash; vizualizace probíhající operace</h2>

<p>V&nbsp;některých situacích je nutné vizuálně ukázat, že probíhá nějaká
operace, ovšem ne vždy je možné použít již popsaný <i>ProgressBar</i>, protože
nemusí být dopředu jasné, kolik kroků či jaký čas je nutný pro dokončení
operace. V&nbsp;takovém případě si můžeme vypomoci animací, která vlastně
neneznačuje, kdy se nějaká činnost dokončí. Můžeme použít například tento
animovaý GIF:</p>

*** image ***
<p><i>Obrázek 25: Animovaný GIF naznačující probíhající operaci.</i></p>

<p>V&nbsp;dialogu navíc čekáme na přijetí události jen po specifikovanou dobu.
V&nbsp;případě, že událost nebude do tohoto okamžiku přijata, pouze se přepne
další snímek animace a opět se počká na další událost. Tím je zajištěno (i bez
nutnosti použití čítače), že se budou jednotlivé snímky animace automaticky
přepínat:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Push(), sg.Image("progress.gif", key="gif"), sg.Push()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #51", layout)
gif = window["gif"]
&nbsp;
<i># obsluha smyčky událostí (event loop)</i>
while True:
    <i># přečtení události</i>
    event, values = window.read(timeout=50)
    print("Event: ", event, "    Values: ", values)
    gif.UpdateAnimation("progress.gif")
&nbsp;
    <i># reakce na událost "uzavření okna"</i>
    if event == sg.WIN_CLOSED:
        break
&nbsp;
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Výsledek bude vypadat takto:</p>

*** image ***
<p><i>Obrázek 26: Dialog s&nbsp;animovaným obrázkem.</i></p>

*** image ***
<p><i>Obrázek 27: Dialog s&nbsp;animovaným obrázkem.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Tabulka</h2>

<p>Předposledním ovládacím prvkem grafického uživatelského rozhraní, se kterým
se v&nbsp;dnešním článku setkáme, je tabulka. Data tabulky jsou reprezentována
formou vnořených n-tic, seznamů, atd. První řádek dat ve výchozím nastavení
označuje nadpisy sloupců, to je však možné v&nbsp;případě potřeby změnit.
Podívejme se nyní na způsob zobrazení jednoduché tabulky:</p>

<pre>
import PySimpleGUI as sg
&nbsp;
data = [
        ["Jan 2024", "Jan 2023", "Language", "Ratings", "Change"],
        [1, 1, "Python", "13.97%", "-2.39%"],
        [2, 2, "C", "11.44%", "-4.81%"],
        [3, 3, "C++", "9.96%", "-2.95%"],
        [4, 4, "Java", "7.87%", "-4.34%"],
        [5, 5, "C#", "7.16%", "+1.43%"],
        [6, 7, "JavaScript", "2.77%", "-0.11%"],
        ]
&nbsp;
<i># ovládací prvky, které se mají zobrazit v okně</i>
layout = [
    [sg.Table(data)],
    [sg.Push(), sg.Submit(), sg.Push()],
]
&nbsp;
<i># vytvoření okna s ovládacími prvky</i>
window = sg.Window("Window #53", layout)
&nbsp;
<i># přečtení jediné události</i>
event, values = window.read()
print("Event: ", event, "    Values: ", values)
&nbsp;
<i># po přečtení události okno zavřeme</i>
window.close()
</pre>

<p>Výsledkem bude tento dialog:</p>

*** image ***
<p><i>Obrázek 28: Tabulka zobrazená v&nbsp;dialogu.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Strom</h2>

<p>Dalším typem ovládacího prvku grafického uživatelského rozhraní jsou stromy
<i>tree</i>. Jedná se o jediný prvek GUI, u kterého neexistuje jednoduše
zapsatelný <i>konstruktor</i>. Namísto toho je nutné stromy konstruovat
programově, od kořenového uzlu k&nbsp;listům stromu (<i>root</i>, <i>leaf</i>.
Do stromu se uzly přidávají metodou:</p>

<pre>
data.Insert("klíč předka", "klíč", "jméno uzlu", [hodnoty])
</pre>

<p>Pro uzly navázané přímo na kořenový uzel se namísto klíče předka používá
prázdný řetězec.</p>

<p>Příklad stromu se třemi uzly navázanými na kořenový uzel. Každý
z&nbsp;těchto uzlů má tři potomky (které jsou přímo koncovými uzly):</p>

<pre>
data = sg.TreeData()
&nbsp;
#         předek  klíč  jméno  hodnoty
data.Insert("",   "A",  "A",   [])
data.Insert("",   "B",  "B",   [])
data.Insert("",   "C",  "D",   [])
data.Insert("A",  "A1", "A1",  [])
data.Insert("A",  "A2", "A2",  [])
data.Insert("A",  "A3", "A3",  [])
data.Insert("B",  "B1", "B1",  [])
data.Insert("B",  "B2", "B2",  [])
data.Insert("B",  "B3", "B3",  [])
data.Insert("C",  "C1", "C1",  [])
data.Insert("C",  "C2", "C2",  [])
data.Insert("C",  "C3", "C3",  [])
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Obsah poslední části seriálu o PySimpleGUI</h2>

<p>V&nbsp;navazující a současně i poslední části seriálu o knihovně
<i>PySimpleGUI</i> nejprve dokončíme popis tabulek a stromů, což jsou
nejsložitější elementy grafického uživatelského rozhraní. A posléze si popíšeme
i práci s&nbsp;<i>taby</i>, které využijeme ve složitějších typech dialogů.</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny Pythonovské skripty, které jsme si ukázali v&nbsp;úvodní trojici
článků o PySimpleGUI a pochopitelně i v&nbsp;dnešním článku ukázali, naleznete
na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady. Pro jejich spuštění je nutné mít
nainstalován balíček <i>PySimpleGUI</i>, jenž závisí na standardním balíčku
<i>TkInter</i>:</p>

<table>
<tr><th>#<th>Příklad</th><th>Stručný popis</th><th>Adresa příkladu</th></tr></i>
<tr><td> 1</td><td>01-empty-window.py</td><td>prázdné okno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/01-empty-window.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/01-empty-window.py</a></td></tr>
<tr><td> 2</td><td>02-empty-window-event-loop.py</td><td>prázdné okno, implementace klasické smyčky událostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/02-empty-window-event-loop.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/02-empty-window-event-loop.py</a></td></tr>
<tr><td> 3</td><td>03-window-with-text-label.py</td><td>okno se specifikovanou velikostí a s&nbsp;vloženým textovým prvkem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/03-window-with-text-label.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/03-window-with-text-label.py</a></td></tr>
<tr><td> 4</td><td>04-window-with-text-label.py</td><td>okno s&nbsp;automaticky vypočtenou velikostí a s&nbsp;vloženým textovým prvkem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/04-window-with-text-label.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/04-window-with-text-label.py</a></td></tr>
<tr><td> 5</td><td>05-more-controls.py</td><td>pětice ovládacích prvků přidaných do okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/05-more-controls.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/05-more-controls.py</a></td></tr>
<tr><td> 6</td><td>06-info.py</td><td>informační okno (dialog) bez navázané smyčky událostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/06-info.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/06-info.py</a></td></tr>
<tr><td> 7</td><td>07-events.py</td><td>tisk všech zaregistrovaných a přečtených událostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/07-events.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/07-events.py</a></td></tr>
<tr><td> 8</td><td>08-events-cancel.py</td><td>tisk zaregistrovaných událostí, reakce na stisk tlačítka <strong>Cancel</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/08-events-cancel.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/08-events-cancel.py</a></td></tr>
<tr><td> 9</td><td>09-one-shot-window.py</td><td>dialog pro zadání údajů do textových políček, bez smyčky událostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/09-one-shot-window.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/09-one-shot-window.py</a></td></tr>
<tr><td>10</td><td>10-sizing.py</td><td>explicitní nastavení velikostí jednotlivých ovládacích prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/10-sizing.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/10-sizing.py</a></td></tr>
<tr><td>11</td><td>11-even-more-controls.py</td><td>přidání dalších ovládacích prvků do okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/11-even-more-controls.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/11-even-more-controls.py</a></td></tr>
<tr><td>12</td><td>12-different-theme.py</td><td>nastavení odlišného barvového tématu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/12-different-theme.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/12-different-theme.py</a></td></tr>
<tr><td>13</td><td>13-print-themes.py</td><td>tisk jmen všech dostupných témat</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/13-print-themes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/13-print-themes.py</a></td></tr>
<tr><td>14</td><td>14-print-themes-2.py</td><td>tisk jmen všech dostupných témat, lepší varianta</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/14-print-themes-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/14-print-themes-2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>15-select-theme.py</td><td>interaktivní změna tématu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/15-select-theme.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/15-select-theme.py</a></td></tr>
<tr><td>16</td><td>16-better-select-theme.py</td><td>vylepšení předchozího příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/16-better-select-theme.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/16-better-select-theme.py</a></td></tr>
<tr><td>17</td><td>17-default-alignment.py</td><td>výchozí zarovnání ovládacích prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/17-default-alignment.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/17-default-alignment.py</a></td></tr>
<tr><td>18</td><td>18-center-alignment.py</td><td>horizontální vycentrování ovládacích prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/18-center-alignment.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/18-center-alignment.py</a></td></tr>
<tr><td>19</td><td>19-right-alignment.py</td><td>zarovnání ovládacích prvků doprava</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/19-right-alignment.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/19-right-alignment.py</a></td></tr>
<tr><td>20</td><td>20-push.py</td><td>&bdquo;pružiny&ldquo; použité při rozmístění prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/20-push.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/20-push.py</a></td></tr>
<tr><td>21</td><td>21-columns.py</td><td>umístění prvků do sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/21-columns.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/21-columns.py</a></td></tr>
<tr><td>22</td><td>22-columns.py</td><td>umístění prvků do sloupců, sloupce uvnitř sloupců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/22-columns.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/22-columns.py</a></td></tr>
<tr><td>23</td><td>23-separators.py</td><td>horizontální a vertikální oddělovače</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/23-separators.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/23-separators.py</a></td></tr>
<tr><td>24</td><td>24-frames.py</td><td>umístění prvků do rámců</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/24-frames.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/24-frames.py</a></td></tr>
<tr><td>25</td><td>25-menu.py</td><td>hlavní menu v&nbsp;okně aplikace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/25-menu.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/25-menu.py</a></td></tr>
<tr><td>26</td><td>26-status-bar.py</td><td>stavový řádek v&nbsp;okně aplikace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/26-status-bar.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/26-status-bar.py</a></td></tr>
<tr><td>27</td><td>27-custom-titlebar.py</td><td>změna způsobu zobrazení titulkové lišty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/27-custom-titlebar.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/27-custom-titlebar.py</a></td></tr>
<tr><td>28</td><td>28-context-menu.py</td><td>kontextové menu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/28-context-menu.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/28-context-menu.py</a></td></tr>
<tr><td>29</td><td>29-canvas.py</td><td>vytvoření kreslicího plátna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/29-canvas.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/29-canvas.py</a></td></tr>
<tr><td>30</td><td>30-canvas-size-background.py</td><td>specifikace velikosti plátna a barvy jeho pozadí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/30-canvas-size-background.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/30-canvas-size-background.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>31</td><td>31-draw-on-canvas.py</td><td>vykreslení úseček na plátno</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/31-draw-on-canvas.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/31-draw-on-canvas.py</a></td></tr>
<tr><td>32</td><td>32-more-shapes.py</td><td>ukázka většího množství geometrických tvarů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/32-more-shapes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/32-more-shapes.py</a></td></tr>
<tr><td>33</td><td>33-pieslice-and-chord.py</td><td>kruhové výseče a úseče</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/33-pieslice-and-chord.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/33-pieslice-and-chord.py</a></td></tr>
<tr><td>34</td><td>34-arrows.py</td><td>různé tvary šipek</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/34-arrows.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/34-arrows.py</a></td></tr>
<tr><td>35</td><td>35-line-styles.py</td><td>styly vykreslování úseček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/35-line-styles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/35-line-styles.py</a></td></tr>
<tr><td>36</td><td>36-line-dashes.py</td><td>styly vykreslování úseček</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/36-line-dashes.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/36-line-dashes.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>37</td><td>37-resizable-window.py</td><td>okno, jehož tlačítko reaguje na změnu velikosti okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/37-resizable-window.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/37-resizable-window.py</a></td></tr>
<tr><td>38</td><td>38-resizable-window-2.py</td><td>okno, jehož všechna tlačítka reagují na změnu velikosti okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/38-resizable-window-2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/38-resizable-window-2.py</a></td></tr>
<tr><td>39</td><td>39-spinbox.py</td><td>ovládací prvek typu Spin/Spinbox</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/39-spinbox.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/39-spinbox.py</a></td></tr>
<tr><td>40</td><td>40-named-spinbox.py</td><td>pojmenovaný Spinbox, k&nbsp;jehož hodnotě se může přistupovat</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/40-named-spinbox.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/40-named-spinbox.py</a></td></tr>
<tr><td>41</td><td>41-slider.py</td><td>ovládací prvek typu posuvník</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/41-slider.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/41-slider.py</a></td></tr>
<tr><td>42</td><td>42-slider-ticks.py</td><td>zobrazení pravítka na posuvníku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/42-slider-ticks.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/42-slider-ticks.py</a></td></tr>
<tr><td>43</td><td>43-vertical-slider.py</td><td>vertikálně orientovaný posuvník</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/43-vertical-slider.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/43-vertical-slider.py</a></td></tr>
<tr><td>44</td><td>44-slider-init-value.py</td><td>nastavení výchozí hodnoty posuvníku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/44-slider-init-value.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/44-slider-init-value.py</a></td></tr>
<tr><td>45</td><td>45-progress-bar.py</td><td>indikátor probíhající operace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/45-progress-bar.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/45-progress-bar.py</a></td></tr>
<tr><td>46</td><td>46-slider-and-progress-bar.py</td><td>propojení posuvníku s&nbsp;indikátorem probíhající operace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/46-slider-and-progress-bar.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/46-slider-and-progress-bar.py</a></td></tr>
<tr><td>47</td><td>47-option-menu.py</td><td>výběrové menu (OptionMenu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/47-option-menu.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/47-option-menu.py</a></td></tr>
<tr><td>48</td><td>48-listbox.py</td><td>výběr prvku ze seznamu (Listbox)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/48-listbox.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/48-listbox.py</a></td></tr>
<tr><td>49</td><td>49-image.py</td><td>zobrazení statického obrázku v&nbsp;dialogu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/49-image.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/49-image.py</a></td></tr>
<tr><td>50</td><td>50-animated-gif.py</td><td>animovaný GIF na formuláři</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/50-animated-gif.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/50-animated-gif.py</a></td></tr>
<tr><td>51</td><td>51-progress.py</td><td>probíhající operace vizualizovaná animovaným GIFem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/51-progress.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/51-progress.py</a></td></tr>
<tr><td>52</td><td>52-static-image-in-sources.py</td><td>statický obrázek umístěný přímo do zdrojových kódů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/52-static-image-in-sources.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/52-static-image-in-sources.py</a></td></tr>
<tr><td>53</td><td>53-table.py</td><td>tabulka zobrazená v&nbsp;dialogovém okně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/53-table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/53-table.py</a></td></tr>
<tr><td>54</td><td>54-tree.py</td><td>strom zobrazený v&nbsp;dialogovém okně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/54-tree.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PySimpleGUI/54-tree.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>PySimpleGUI<br />
<a href="https://www.pysimplegui.org/en/latest/">https://www.pysimplegui.org/en/latest/</a>
</li>

<li>Kivy na GitHubu<br />
<a href="https://github.com/kivy/kivy">https://github.com/kivy/kivy</a>
</li>

<li>DearPyGui na GitHubu<br />
<a href="https://github.com/hoffstadt/DearPyGui">https://github.com/hoffstadt/DearPyGui</a>
</li>

<li>PySimpleGUI Tutorial<br />
<a href="https://www.tutorialspoint.com/pysimplegui/index.htm">https://www.tutorialspoint.com/pysimplegui/index.htm</a>
</li>

<li>PySimpleGUI - Canvas Element<br />
<a href="https://www.tutorialspoint.com/pysimplegui/pysimplegui_canvas_element.htm">https://www.tutorialspoint.com/pysimplegui/pysimplegui_canvas_element.htm</a>
</li>

<li>Dokumentace ke knihovně PySimpleGUI<br />
<a href="https://www.pysimplegui.org/en/latest/">https://www.pysimplegui.org/en/latest/</a>
</li>

<li>Dokumentace ke knihovně DearPyGui<br />
<a href="https://dearpygui.readthedocs.io/en/latest/index.html#">https://dearpygui.readthedocs.io/en/latest/index.html#</a>
</li>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>Stránky projektu wxPython<br />
<a href="https://wxpython.org/">https://wxpython.org/</a>
</li>

<li>wxPython Project Phoenix (na GitHubu)<br />
<a href="https://github.com/wxWidgets/Phoenix/blob/wxPython-4.0.3/README.rst">https://github.com/wxWidgets/Phoenix/blob/wxPython-4.0.3/README.rst</a>
</li>

<li>wxPython API Documentation<br />
<a href="https://docs.wxpython.org/index.html">https://docs.wxpython.org/index.html</a>
</li>

<li>wxWidgets<br />
<a href="https://wxwidgets.org/">https://wxwidgets.org/</a>
</li>

<li>wxPython 4.0.3 na PyPi<br />
<a href="https://pypi.org/project/wxPython/4.0.3/">https://pypi.org/project/wxPython/4.0.3/</a>
</li>

<li>wxGlade - a GUI builder for wxWidgets<br />
<a href="http://wxglade.sourceforge.net/">http://wxglade.sourceforge.net/</a>
</li>

<li>Repositář projektu wxGlade<br />
<a href="https://github.com/wxGlade/wxGlade/">https://github.com/wxGlade/wxGlade/</a>
</li>

<li>wxGlade’s documentation<br />
<a href="http://wxglade.sourceforge.net/docs/index.html">http://wxglade.sourceforge.net/docs/index.html</a>
</li>

<li>Graphical User Interfaces (GUI)<br />
<a href="https://pythonspot.com/gui/">https://pythonspot.com/gui/</a>
</li>

<li>wxPyWiki<br />
<a href="https://wiki.wxpython.org/FrontPage">https://wiki.wxpython.org/FrontPage</a>
</li>

<li>Getting started with wxPython<br />
<a href="https://wiki.wxpython.org/Getting%20Started#A_First_Application:_.22Hello.2C_World.22">https://wiki.wxpython.org/Getting%20Started#A_First_Application:_.22Hello.2C_World.22</a>
</li>

<li>wxPython GUI tutorial<br />
<a href="https://pythonspot.com/wxpython-gui-tutorial/">https://pythonspot.com/wxpython-gui-tutorial/</a>
</li>

<li>wxPython tutorial<br />
<a href="http://zetcode.com/wxpython/">http://zetcode.com/wxpython/</a>
</li>

<li>Build wxPython On Raspberry Pi<br />
<a href="https://wiki.wxpython.org/BuildWxPythonOnRaspberryPi">https://wiki.wxpython.org/BuildWxPythonOnRaspberryPi</a>
</li>

<li>wxPython History<br />
<a href="https://wxpython.org/pages/history/index.html">https://wxpython.org/pages/history/index.html</a>
</li>

<li>Installing wxPython 4.0 (Project Phoenix) on Fedora 27<br />
<a href="https://blog.wizardsoftheweb.pro/installing-wxpython-on-fedora/">https://blog.wizardsoftheweb.pro/installing-wxpython-on-fedora/</a>
</li>

<li>Category:Software that uses wxWidgets<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets">https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets</a>
</li>

<li>Hra Breakout napísaná v Tkinteri<br />
<a href="https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/">https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Hand Coded GUI Versus Qt Designer GUI<br />
<a href="https://stackoverflow.com/questions/387092/hand-coded-gui-versus-qt-designer-gui">https://stackoverflow.com/questions/387092/hand-coded-gui-versus-qt-designer-gui</a>
</li>

<li>Qt Creator Manual<br />
<a href="http://doc.qt.io/qtcreator/">http://doc.qt.io/qtcreator/</a>
</li>

<li>Qt Designer Manual<br />
<a href="http://doc.qt.io/qt-5/qtdesigner-manual.html">http://doc.qt.io/qt-5/qtdesigner-manual.html</a>
</li>

<li>Qt Creator (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Qt_Creator">https://en.wikipedia.org/wiki/Qt_Creator</a>
</li>

<li>QIODevice<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/QIODevice.html#PySide.QtCore.QIODevice">https://pyside.github.io/docs/pyside/PySide/QtCore/QIODevice.html#PySide.QtCore.QIODevice</a>
</li>

<li>QFile<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/QFile.html#PySide.QtCore.QFile">https://pyside.github.io/docs/pyside/PySide/QtCore/QFile.html#PySide.QtCore.QFile</a>
</li>

<li>QUiLoader<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtUiTools/QUiLoader.html#PySide.QtUiTools.PySide.QtUiTools.QUiLoader.load">https://pyside.github.io/docs/pyside/PySide/QtUiTools/QUiLoader.html#PySide.QtUiTools.PySide.QtUiTools.QUiLoader.load</a>
</li>

<li>QSvgWidget<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgWidget.html">https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgWidget.html</a>
</li>

<li>QByteArray<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/QByteArray.html">https://pyside.github.io/docs/pyside/PySide/QtCore/QByteArray.html</a>
</li>

<li>Differences Between PySide and PyQt<br />
<a href="https://wiki.qt.io/Differences_Between_PySide_and_PyQt">https://wiki.qt.io/Differences_Between_PySide_and_PyQt</a>
</li>

<li>PySide 1.2.1 tutorials<br />
<a href="https://pyside.github.io/docs/pyside/tutorials/index.html">https://pyside.github.io/docs/pyside/tutorials/index.html</a>
</li>

<li>PySide tutorial<br />
<a href="http://zetcode.com/gui/pysidetutorial/">http://zetcode.com/gui/pysidetutorial/</a>
</li>

<li>Drawing in PySide<br />
<a href="http://zetcode.com/gui/pysidetutorial/drawing/">http://zetcode.com/gui/pysidetutorial/drawing/</a>
</li>

<li>Qt Core<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/Qt.html">https://pyside.github.io/docs/pyside/PySide/QtCore/Qt.html</a>
</li>

<li>Signals &amp; Slots<br />
<a href="http://doc.qt.io/qt-4.8/signalsandslots.html">http://doc.qt.io/qt-4.8/signalsandslots.html</a>
</li>

<li>Signals and Slots in PySide<br />
<a href="http://wiki.qt.io/Signals_and_Slots_in_PySide">http://wiki.qt.io/Signals_and_Slots_in_PySide</a>
</li>

<li>Intro to PySide/PyQt: Basic Widgets and Hello, World!<br />
<a href="http://www.pythoncentral.io/intro-to-pysidepyqt-basic-widgets-and-hello-world/">http://www.pythoncentral.io/intro-to-pysidepyqt-basic-widgets-and-hello-world/</a>
</li>

<li>Leo editor<br />
<a href="http://leoeditor.com/">http://leoeditor.com/</a>
</li>

<li>IPython Qt Console aneb vylepšený pseudoterminál<br />
<a href="https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/#k06">https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/#k06</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>appJar<br />
<a href="http://appjar.info/">http://appjar.info/</a>
</li>

<li>appJar (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/AppJar">https://en.wikipedia.org/wiki/AppJar</a>
</li>

<li>appJar na Pythonhosted<br />
<a href="http://pythonhosted.org/appJar/">http://pythonhosted.org/appJar/</a>
</li>

<li>appJar widgets<br />
<a href="http://appjar.info/pythonWidgets/">http://appjar.info/pythonWidgets/</a>
</li>

<li>Stránky projektu PyGTK<br />
<a href="http://www.pygtk.org/">http://www.pygtk.org/</a>
</li>

<li>PyGTK (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PyGObject<br />
<a href="https://wiki.gnome.org/Projects/PyGObject">https://wiki.gnome.org/Projects/PyGObject</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Stránky projektu PyQt<br />
<a href="https://riverbankcomputing.com/software/pyqt/intro">https://riverbankcomputing.com/software/pyqt/intro</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

