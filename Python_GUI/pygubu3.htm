<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p></p>

<pre>
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;interface version="1.1"&gt;
  &lt;object class="ttk.Frame" id="MainWindow"&gt;
    &lt;property name="height"&gt;200&lt;/property&gt;
    &lt;property name="width"&gt;200&lt;/property&gt;
    &lt;layout manager="pack"&gt;
      &lt;property name="propagate"&gt;True&lt;/property&gt;
      &lt;property name="side"&gt;top&lt;/property&gt;
    &lt;/layout&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="ok_cancel"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_ok_cancel_click&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Ok + Cancel&lt;/property&gt;
        &lt;layout manager="grid"&gt;
          &lt;property name="column"&gt;0&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="row"&gt;0&lt;/property&gt;
          &lt;property name="sticky"&gt;ew&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="retry_cancel"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_retry_cancel_click&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Retry + Cancel&lt;/property&gt;
        &lt;layout manager="grid"&gt;
          &lt;property name="column"&gt;1&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="row"&gt;0&lt;/property&gt;
          &lt;property name="sticky"&gt;ew&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="yes_no"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_yes_no_click&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Yes + No&lt;/property&gt;
        &lt;layout manager="grid"&gt;
          &lt;property name="column"&gt;0&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="row"&gt;1&lt;/property&gt;
          &lt;property name="sticky"&gt;ew&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="exit"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_exit_click&lt;/property&gt;
        &lt;property name="style"&gt;Red.TButton&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Exit&lt;/property&gt;
        &lt;layout manager="grid"&gt;
          &lt;property name="column"&gt;1&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="row"&gt;4&lt;/property&gt;
          &lt;property name="sticky"&gt;ew&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="question"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_question_click&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Question&lt;/property&gt;
        &lt;layout manager="grid"&gt;
          &lt;property name="column"&gt;1&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="row"&gt;1&lt;/property&gt;
          &lt;property name="sticky"&gt;ew&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
  &lt;/object&gt;
&lt;/interface&gt;
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p></p>

<pre>
import os
import pygubu
&nbsp;
&nbsp;
PROJECT_PATH = os.path.dirname(__file__)
PROJECT_UI = os.path.join(PROJECT_PATH, "example7.ui")
&nbsp;
&nbsp;
class <strong>Example7App</strong>:
    def <strong>__init__</strong>(self):
        self.builder = builder = pygubu.Builder()
        builder.add_resource_path(PROJECT_PATH)
        builder.add_from_file(PROJECT_UI)
        self.mainwindow = builder.get_object('MainWindow')
        builder.connect_callbacks(self)
&nbsp;
    def <strong>on_button_ok_cancel_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_retry_cancel_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_yes_no_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_exit_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_question_click</strong>(self):
        pass
&nbsp;
    def <strong>run</strong>(self):
        self.mainwindow.mainloop()
&nbsp;
if __name__ == '__main__':
    import tkinter as tk
    root = tk.Tk()
    app = Example7App(root)
    app.run()
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<p></p>

<pre>
import tkinter as tk
import tkinter.ttk as ttk
&nbsp;
&nbsp;
class <strong>Example7App</strong>:
    def __init__(self, master=None):
        <i># build ui</i>
        self.MainWindow = ttk.Frame(master)
        self.ok_cancel = ttk.Button(self.MainWindow)
        self.ok_cancel.configure(text='Ok + Cancel')
        self.ok_cancel.grid(column='0', row='0', sticky='ew')
        self.ok_cancel.configure(command=self.on_button_ok_cancel_click)
        self.retry_cancel = ttk.Button(self.MainWindow)
        self.retry_cancel.configure(text='Retry + Cancel')
        self.retry_cancel.grid(column='1', row='0', sticky='ew')
        self.retry_cancel.configure(command=self.on_button_retry_cancel_click)
        self.yes_no = ttk.Button(self.MainWindow)
        self.yes_no.configure(text='Yes + No')
        self.yes_no.grid(column='0', row='1', sticky='ew')
        self.yes_no.configure(command=self.on_button_yes_no_click)
        self.exit = ttk.Button(self.MainWindow)
        self.exit.configure(style='Red.TButton', text='Exit')
        self.exit.grid(column='1', row='4', sticky='ew')
        self.exit.configure(command=self.on_button_exit_click)
        self.question = ttk.Button(self.MainWindow)
        self.question.configure(text='Question')
        self.question.grid(column='1', row='1', sticky='ew')
        self.question.configure(command=self.on_button_question_click)
        self.MainWindow.configure(height='200', width='200')
        self.MainWindow.pack(side='top')
&nbsp;
        <i># Main widget</i>
        self.mainwindow = self.MainWindow
&nbsp;
    def <strong>on_button_ok_cancel_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_retry_cancel_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_yes_no_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_exit_click</strong>(self):
        pass
&nbsp;
    def <strong>on_button_question_click</strong>(self):
        pass
&nbsp;
    def <strong>run</strong>(self):
        self.mainwindow.mainloop()
&nbsp;
if __name__ == '__main__':
    import tkinter as tk
    root = tk.Tk()
    app = Example7App(root)
    app.run()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>

<pre>
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;interface version="1.1"&gt;
  &lt;object class="ttk.Frame" id="MainWindow"&gt;
    &lt;property name="height"&gt;200&lt;/property&gt;
    &lt;property name="width"&gt;200&lt;/property&gt;
    &lt;layout manager="pack"&gt;
      &lt;property name="propagate"&gt;True&lt;/property&gt;
      &lt;property name="side"&gt;top&lt;/property&gt;
    &lt;/layout&gt;
    &lt;child&gt;
      &lt;object class="ttk.Checkbutton" id="checkbutton_a"&gt;
        &lt;property name="text" translatable="yes"&gt;Selection A&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Checkbutton" id="checkbutton_b"&gt;
        &lt;property name="text" translatable="yes"&gt;Selection B&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Checkbutton" id="checkbutton_c"&gt;
        &lt;property name="text" translatable="yes"&gt;Selection C&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_display_values"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_display_selections_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;display.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Display selections&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_quit"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_quit_button_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;application-exit.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Quit&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
  &lt;/object&gt;
&lt;/interface&gt;
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>

<pre>
<i>"""Pygubu and Tkinter: using check boxes."""</i>
&nbsp;
<i># Example8.py</i>
&nbsp;
import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import pygubu
&nbsp;
&nbsp;
class <strong>Example8App</strong>(pygubu.TkApplication):
    <i>"""Class representing a Tkinter based application."""</i>
&nbsp;
    def <strong>_create_ui</strong>(self):
        <i>"""Construct and initializes all UI-related data structures."""</i>
        <i># step #1: Create a builder</i>
        self.builder = builder = pygubu.Builder()
&nbsp;
        <i># step #2: Load an ui file</i>
        builder.add_from_file('example8.ui')
&nbsp;
        <i># step #2B: Specify path to images and other resources</i>
        builder.add_resource_path(".")
&nbsp;
        <i># step #3: Create the mainwindow</i>
        self.mainwindow = builder.get_object('MainWindow', self.master)
&nbsp;
        <i># step $4: Configure callbacks</i>
        builder.connect_callbacks(self)
&nbsp;
        root.bind('<Control-q>', lambda event: self.on_button_exit_click())
&nbsp;
    def <strong>on_quit_button_click</strong>(self):
        root.destroy()
&nbsp;
    def <strong>on_button_display_selections_click</strong>(self):
        pass
&nbsp;
&nbsp;
if __name__ == '__main__':
    <i># needed to have a menu</i>
    root = tk.Tk()
&nbsp;
    <i># style</i>
    style = ttk.Style()
&nbsp;
    <i># run the application</i>
    app = Example8App(root)
    app.run()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>

<pre>
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;interface version="1.1"&gt;
  &lt;object class="ttk.Frame" id="MainWindow"&gt;
    &lt;property name="height"&gt;200&lt;/property&gt;
    &lt;property name="width"&gt;200&lt;/property&gt;
    &lt;layout manager="pack"&gt;
      &lt;property name="propagate"&gt;True&lt;/property&gt;
      &lt;property name="side"&gt;top&lt;/property&gt;
    &lt;/layout&gt;
    &lt;child&gt;
      &lt;object class="ttk.Checkbutton" id="checkbutton_a"&gt;
        &lt;property name="offvalue"&gt;no&lt;/property&gt;
        &lt;property name="onvalue"&gt;yes&lt;/property&gt;
        &lt;property name="state"&gt;normal&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Selection A&lt;/property&gt;
        &lt;property name="variable"&gt;string:checkbutton_a&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Checkbutton" id="checkbutton_b"&gt;
        &lt;property name="offvalue"&gt;no&lt;/property&gt;
        &lt;property name="onvalue"&gt;yes&lt;/property&gt;
        &lt;property name="state"&gt;normal&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Selection B&lt;/property&gt;
        &lt;property name="variable"&gt;string:checkbutton_b&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Checkbutton" id="checkbutton_c"&gt;
        &lt;property name="offvalue"&gt;no&lt;/property&gt;
        &lt;property name="onvalue"&gt;yes&lt;/property&gt;
        &lt;property name="state"&gt;normal&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Selection C&lt;/property&gt;
        &lt;property name="variable"&gt;string:checkbutton_c&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_display_values"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_display_selections_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;display.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Display selections&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_quit"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_quit_button_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;application-exit.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Quit&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
  &lt;/object&gt;
&lt;/interface&gt;
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>

<pre>
"""Pygubu and Tkinter: using check boxes."""

# Example9A.py

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import pygubu


class Example9App(pygubu.TkApplication):
    """Class representing a Tkinter based application."""

    def _create_ui(self):
        """Construct and initializes all UI-related data structures."""
        # step #1: Create a builder
        self.builder = builder = pygubu.Builder()

        # step #2: Load an ui file
        builder.add_from_file('example9.ui')

        # step #2B: Specify path to images and other resources
        builder.add_resource_path(".")

        # step #3: Create the mainwindow
        self.mainwindow = builder.get_object('MainWindow', self.master)

        # step #4: Configure callbacks
        builder.connect_callbacks(self)

        root.bind('<Control-q>', lambda event: self.on_button_exit_click())

    def on_quit_button_click(self):
        root.destroy()

    def on_button_display_selections_click(self):
        vars = self.builder.tkvariables

        message = \
            "Checkbutton A: {}\n" \
            "Checkbutton B: {}\n" \
            "Checkbutton C: {}\n".format(vars["checkbutton_a"].get(),
                                         vars["checkbutton_b"].get(),
                                         vars["checkbutton_c"].get())
        messagebox.askokcancel("askokcancel()", message)


if __name__ == '__main__':
    # needed to have a menu
    root = tk.Tk()

    # style
    style = ttk.Style()

    # run the application
    app = Example9App(root)
    app.run()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>

<pre>
"""Pygubu and Tkinter: using check boxes."""

# Example9B.py

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import pygubu


class Example9App(pygubu.TkApplication):
    """Class representing a Tkinter based application."""

    def _create_ui(self):
        """Construct and initializes all UI-related data structures."""
        # step #1: Create a builder
        self.builder = builder = pygubu.Builder()

        # step #2: Load an ui file
        builder.add_from_file('example9.ui')

        # step #2B: Specify path to images and other resources
        builder.add_resource_path(".")

        # step #3: Create the mainwindow
        self.mainwindow = builder.get_object('MainWindow', self.master)

        # step #4: Configure callbacks
        builder.connect_callbacks(self)

        # step #5: Set variables
        vars = self.builder.tkvariables
        vars["checkbutton_a"].set("no")
        vars["checkbutton_b"].set("no")
        vars["checkbutton_c"].set("no")

        root.bind('<Control-q>', lambda event: self.on_button_exit_click())

    def on_quit_button_click(self):
        root.destroy()

    def on_button_display_selections_click(self):
        vars = self.builder.tkvariables

        message = \
            "Checkbutton A: {}\n" \
            "Checkbutton B: {}\n" \
            "Checkbutton C: {}\n".format(vars["checkbutton_a"].get(),
                                         vars["checkbutton_b"].get(),
                                         vars["checkbutton_c"].get())
        messagebox.askokcancel("Selections", message)


if __name__ == '__main__':
    # needed to have a menu
    root = tk.Tk()

    # style
    style = ttk.Style()

    # run the application
    app = Example9App(root)
    app.run()
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>

<pre>
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;interface version="1.1"&gt;
  &lt;object class="ttk.Frame" id="MainWindow"&gt;
    &lt;property name="height"&gt;200&lt;/property&gt;
    &lt;property name="width"&gt;200&lt;/property&gt;
    &lt;layout manager="pack"&gt;
      &lt;property name="propagate"&gt;True&lt;/property&gt;
      &lt;property name="side"&gt;top&lt;/property&gt;
    &lt;/layout&gt;
    &lt;child&gt;
      &lt;object class="ttk.Entry" id="text_entry"&gt;
        &lt;property name="textvariable"&gt;string:input_text&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="anchor"&gt;center&lt;/property&gt;
          &lt;property name="padx"&gt;10&lt;/property&gt;
          &lt;property name="pady"&gt;10&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_display_text"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_display_text_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;display.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Display text&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_quit"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_quit_button_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;application-exit.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Quit&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
  &lt;/object&gt;
&lt;/interface&gt;
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>

<pre>
"""Pygubu and Tkinter: text entry."""

# Example10.py

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import pygubu


class Example10App(pygubu.TkApplication):
    """Class representing a Tkinter based application."""

    def _create_ui(self):
        """Construct and initializes all UI-related data structures."""
        # step #1: Create a builder
        self.builder = builder = pygubu.Builder()

        # step #2: Load an ui file
        builder.add_from_file('exampleA.ui')

        # step #2B: Specify path to images and other resources
        builder.add_resource_path(".")

        # step #3: Create the mainwindow
        self.mainwindow = builder.get_object('MainWindow', self.master)

        # step #4: Configure callbacks
        builder.connect_callbacks(self)

        # step #5: Set variables
        vars = self.builder.tkvariables
        vars["input_text"].set("")

        root.bind('<Control-q>', lambda event: self.on_button_exit_click())

    def on_quit_button_click(self):
        root.destroy()

    def on_button_display_text_click(self):
        vars = self.builder.tkvariables
        text = vars["input_text"].get()

        messagebox.askokcancel("Text entered by user:", text)


if __name__ == '__main__':
    # needed to have a menu
    root = tk.Tk()

    # style
    style = ttk.Style()

    # run the application
    app = Example10App(root)
    app.run()
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>

<pre>
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;interface version="1.1"&gt;
  &lt;object class="ttk.Frame" id="MainWindow"&gt;
    &lt;property name="height"&gt;200&lt;/property&gt;
    &lt;property name="width"&gt;200&lt;/property&gt;
    &lt;layout manager="pack"&gt;
      &lt;property name="propagate"&gt;True&lt;/property&gt;
      &lt;property name="side"&gt;top&lt;/property&gt;
    &lt;/layout&gt;
    &lt;child&gt;
      &lt;object class="ttk.Entry" id="text_entry"&gt;
        &lt;property name="textvariable"&gt;string:input_text&lt;/property&gt;
        &lt;property name="validate"&gt;key&lt;/property&gt;
        &lt;property args="%P" cbtype="entry_validate" name="validatecommand" type="command"&gt;validate_input_text&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="anchor"&gt;center&lt;/property&gt;
          &lt;property name="padx"&gt;10&lt;/property&gt;
          &lt;property name="pady"&gt;10&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_display_text"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_button_display_text_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;display.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Display text&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="button_quit"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_quit_button_click&lt;/property&gt;
        &lt;property name="compound"&gt;left&lt;/property&gt;
        &lt;property name="image"&gt;application-exit.png&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Quit&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="expand"&gt;true&lt;/property&gt;
          &lt;property name="fill"&gt;x&lt;/property&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
  &lt;/object&gt;
&lt;/interface&gt;
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<p></p>

<pre>
"""Pygubu and Tkinter: text entry and validators."""

# Example11.py

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import pygubu


class Example11App(pygubu.TkApplication):
    """Class representing a Tkinter based application."""

    def _create_ui(self):
        """Construct and initializes all UI-related data structures."""
        # step #1: Create a builder
        self.builder = builder = pygubu.Builder()

        # step #2: Load an ui file
        builder.add_from_file('exampleB.ui')

        # step #2B: Specify path to images and other resources
        builder.add_resource_path(".")

        # step #3: Create the mainwindow
        self.mainwindow = builder.get_object('MainWindow', self.master)

        # step #4: Configure callbacks
        builder.connect_callbacks(self)

        # step #5: Set variables
        vars = self.builder.tkvariables
        vars["input_text"].set("")

        root.bind('<Control-q>', lambda event: self.on_button_exit_click())

    def on_quit_button_click(self):
        root.destroy()

    def on_button_display_text_click(self):
        vars = self.builder.tkvariables
        text = vars["input_text"].get()

        messagebox.askokcancel("Text entered by user:", text)

    def validate_input_text(self, value):
        if value.isdigit():
            return True
        elif value is "":
            return True
        else:
            return False


if __name__ == '__main__':
    # needed to have a menu
    root = tk.Tk()

    # style
    style = ttk.Style()

    # run the application
    app = Example11App(root)
    app.run()
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>

<pre>
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;interface version="1.1"&gt;
  &lt;object class="ttk.Frame" id="MainWindow"&gt;
    &lt;property name="height"&gt;200&lt;/property&gt;
    &lt;property name="width"&gt;200&lt;/property&gt;
    &lt;layout manager="pack"&gt;
      &lt;property name="propagate"&gt;True&lt;/property&gt;
      &lt;property name="side"&gt;top&lt;/property&gt;
    &lt;/layout&gt;
    &lt;child&gt;
      &lt;object class="tk.Canvas" id="canvas"&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
    &lt;child&gt;
      &lt;object class="ttk.Button" id="quit"&gt;
        &lt;property cbtype="simple" name="command" type="command"&gt;on_quit_button_click&lt;/property&gt;
        &lt;property name="text" translatable="yes"&gt;Quit&lt;/property&gt;
        &lt;layout manager="pack"&gt;
          &lt;property name="propagate"&gt;True&lt;/property&gt;
          &lt;property name="side"&gt;top&lt;/property&gt;
        &lt;/layout&gt;
      &lt;/object&gt;
    &lt;/child&gt;
  &lt;/object&gt;
&lt;/interface&gt;
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>

<pre>
"""Pygubu and Tkinter: changing style."""

# Example12.py

import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import pygubu


class Example12App(pygubu.TkApplication):
    """Class representing a Tkinter based application."""

    def _create_ui(self):
        """Construct and initializes all UI-related data structures."""
        # step #1: Create a builder
        self.builder = builder = pygubu.Builder()

        # step #2: Load an ui file
        builder.add_from_file('exampleC.ui')

        # step #2B: Specify path to images and other resources
        builder.add_resource_path(".")

        # step #3: Create the mainwindow
        self.mainwindow = builder.get_object('MainWindow', self.master)

        # step #4: Configure callbacks
        builder.connect_callbacks(self)

        root.bind('<Control-q>', lambda event: self.on_button_exit_click())

    def on_quit_button_click(self):
        root.destroy()


if __name__ == '__main__':
    # needed to have a menu
    root = tk.Tk()

    # style
    style = ttk.Style()

    # run the application
    app = Example12App(root)
    app.run()
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech předminule, minule i dnes popsaných demonstračních
příkladů určených pro Python 3 a nejnovější stabilní verzi knihovny Pygubu (a
pochopitelně i pro Pygubu designer) byly uloženy do Git repositáře dostupného
na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Jméno souboru</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>Ovládací prvky vložené do hlavního okna aplikace</td><td>&nbsp;</td></tr>
<tr><td> 1</td><td>example1.ui</td><td>soubor s&nbsp;návrhem GUI prvního demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example1.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example1.ui</a></td></tr>
<tr><td> 2</td><td>example1.py</td><td>implementace prvního demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example1.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>Menu, jehož jednotlivé položky obsahují i ikony</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>example2.ui</td><td>soubor s&nbsp;návrhem GUI druhého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2.ui</a></td></tr>
<tr><td> 4</td><td>example2A.py</td><td>implementace třetího demonstračního příkladu (bez menu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2A.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2A.py</a></td></tr>
<tr><td> 5</td><td>example2B.py</td><td>implementace třetího demonstračního příkladu (nespecifikován adresář s&nbsp;ikonami)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2B.py</a></td></tr>
<tr><td> 6</td><td>example2C.py</td><td>implementace třetího demonstračního příkladu (korektní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2C.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example2C.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>Menu, jehož položky volají zvolené metody</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>example3.ui</td><td>soubor s&nbsp;návrhem GUI třetího demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example3.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example3.ui</a></td></tr>
<tr><td> 8</td><td>example3.py</td><td>implementace třetího demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&bdquo;Odtrhávací&ldquo; menu</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>example4.ui</td><td>soubor s&nbsp;návrhem GUI čtvrtého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example4.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example4.ui</a></td></tr>
<tr><td>10</td><td>example4.py</td><td>implementace čtvrtého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>Klávesové zkratky přiřazené položkám menu</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>example5.ui</td><td>soubor s&nbsp;návrhem GUI pátého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example5.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example5.ui</a></td></tr>
<tr><td>12</td><td>example5.py</td><td>implementace pátého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example5.py</a></td></tr>
<tr><td>13</td><td>example5B.py</td><td>implementace pátého demonstračního příkladu s&nbsp;reakcemi na stisk kláves</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example5B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example5B.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>Změna tématu zobrazení za běhu aplikace</td><td>&nbsp;</td></tr>
<tr><td>14</td><td>example6.ui</td><td>soubor s&nbsp;návrhem GUI šestého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example6.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example6.ui</a></td></tr>
<tr><td>15</td><td>example6.py</td><td>implementace šestého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example6.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>Standardní dialogová okna</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>example7.ui</td><td>soubor s&nbsp;návrhem GUI sedmého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example7.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example7.ui</a></td></tr>
<tr><td>17</td><td>example7.py</td><td>implementace sedmého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example7.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td></td><td>&nbsp;</td></tr>
<tr><td>18</td><td>example8.ui</td><td>soubor s&nbsp;návrhem GUI osmého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example8.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example8.ui</a></td></tr>
<tr><td>19</td><td>example8.py</td><td>implementace osmého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example8.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td></td><td>&nbsp;</td></tr>
<tr><td>20</td><td>example9.ui</td><td>soubor s&nbsp;návrhem GUI devátého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example9.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example9.ui</a></td></tr>
<tr><td>21</td><td>example9.py</td><td>implementace devátého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example9.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/example9.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td></td><td>&nbsp;</td></tr>
<tr><td>22</td><td>exampleA.ui</td><td>soubor s&nbsp;návrhem GUI desátého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleA.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleA.ui</a></td></tr>
<tr><td>23</td><td>exampleA.py</td><td>implementace desátého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleA.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleA.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td></td><td>&nbsp;</td></tr>
<tr><td>24</td><td>exampleB.ui</td><td>soubor s&nbsp;návrhem GUI jedenáctého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleB.ui">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleB.ui</a></td></tr>
<tr><td>25</td><td>exampleB.py</td><td>implementace jedenáctého demonstračního příkladu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleB.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/exampleB.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td></td><td>&nbsp;</td></tr>
</table>

<p>Ve druhém a třetím demonstračním příkladu jsou navíc použity i ikony
v&nbsp;menu. Tyto ikony jsou uloženy samostatně ve formátu PNG a měly by být
umístěny do stejného adresáře, ze kterého se spouští aplikace:</p>

<table>
<tr><th>#</th><th>Jméno souboru</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td>1</td><td>application-exit.png</td><td>ikona pro položku menu sloužící k&nbsp;ukončení aplikace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/application-exit.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/application-exit.png</a></td></tr>
<tr><td>2</td><td>document-new.png</td><td>ikona pro položku menu File&rarr;New</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/document-new.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/document-new.png</a></td></tr>
<tr><td>3</td><td>document-open.png</td><td>ikona pro položku menu File&rarr;Open</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/document-open.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/document-open.png</a></td></tr>
<tr><td>4</td><td>edit-copy.png</td><td>ikona pro položku menu Edit&rarr;Copy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-copy.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-copy.png</a></td></tr>
<tr><td>5</td><td>edit-cut.png</td><td>ikona pro položku menu Edit&rarr;Cut</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-cut.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-cut.png</a></td></tr>
<tr><td>6</td><td>edit-paste.png</td><td>ikona pro položku menu Edit&rarr;Paste</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-paste.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-paste.png</a></td></tr>
<tr><td>7</td><td>edit-delete.png</td><td>ikona pro položku menu Edit&rarr;Delete</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-delete.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/edit-delete.png</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td></td><td>&nbsp;</td></tr>
<tr><td>8</td><td>application-exit.png</td><td>ikona pro tlačítko použité pro ukončení aplikace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/application-exit.png">https://github.com/tisnik/most-popular-python-libs/blob/master/pygubu/application-exit.png</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Seriál Grafické uživatelské rozhraní v Pythonu<br />
<a href="https://www.root.cz/serialy/graficke-uzivatelske-rozhrani-v-pythonu/">https://www.root.cz/serialy/graficke-uzivatelske-rozhrani-v-pythonu/</a>
</li>

<li>Pygubu na PyPi<br />
<a href="https://pypi.org/project/pygubu/">https://pypi.org/project/pygubu/</a>
</li>

<li>Repositář projektu Pygubu<br />
<a href="https://github.com/alejandroautalan/pygubu">https://github.com/alejandroautalan/pygubu</a>
</li>

<li>pygubu-designer na PyPi<br />
<a href="https://pypi.org/project/pygubu-designer/">https://pypi.org/project/pygubu-designer/</a>
</li>

<li>Repositář projektu pygubu-designer<br />
<a href="https://github.com/alejandroautalan/pygubu-designer">https://github.com/alejandroautalan/pygubu-designer</a>
</li>

<li>Pygubu Wiki<br />
<a href="https://github.com/alejandroautalan/pygubu/wiki">https://github.com/alejandroautalan/pygubu/wiki</a>
</li>

<li>How to install Tkinter in Python?<br />
<a href="https://www.tutorialspoint.com/how-to-install-tkinter-in-python">https://www.tutorialspoint.com/how-to-install-tkinter-in-python</a>
</li>

<li>Stránky projektu Glade<br />
<a href="https://glade.gnome.org/">https://glade.gnome.org/</a>
</li>

<li>Hra Breakout napísaná v&nbsp;Tkinteri<br />
<a href="https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/">https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/</a>
</li>

<li>Brython aneb použití jazyka Python ve skriptech přímo v prohlížeči<br />
<a href="https://www.root.cz/clanky/brython-aneb-pouziti-jazyka-python-ve-skriptech-primo-v-prohlizeci/">https://www.root.cz/clanky/brython-aneb-pouziti-jazyka-python-ve-skriptech-primo-v-prohlizeci/</a>
</li>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>Rapid application development<br />
<a href="https://en.wikipedia.org/wiki/Rapid_application_development">https://en.wikipedia.org/wiki/Rapid_application_development</a>
</li>

<li>Non-functional requirement<br />
<a href="https://en.wikipedia.org/wiki/Non-functional_requirement">https://en.wikipedia.org/wiki/Non-functional_requirement</a>
</li>

<li>Graphical user interface builder<br />
<a href="https://en.wikipedia.org/wiki/Graphical_user_interface_builder">https://en.wikipedia.org/wiki/Graphical_user_interface_builder</a>
</li>

<li>User interface markup language<br />
<a href="https://en.wikipedia.org/wiki/User_interface_markup_language">https://en.wikipedia.org/wiki/User_interface_markup_language</a>
</li>

<li>Top 10 programming languages that developers hate the most<br />
<a href="https://www.techworm.net/2017/11/perl-hated-programming-language-developers-says-report.html">https://www.techworm.net/2017/11/perl-hated-programming-language-developers-says-report.html</a>
</li>

<li>Raspberry Pi Tutorial: Create your own GUI (Graphical User Interface) with TkInter and Python<br />
<a href="https://www.youtube.com/watch?v=Bvq0LdBn0dY">https://www.youtube.com/watch?v=Bvq0LdBn0dY</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

