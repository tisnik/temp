<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. Projekt Minio</a></p>
<p><a href="#k06">*** 6. Spuštění Minia v&nbsp;režimu serveru</a></p>
<p><a href="#k07">*** 7. Načtení seznamu objektů uložených v&nbsp;Miniu</a></p>
<p><a href="#k08">*** 8. Seznam datových souborů s&nbsp;výsledky měření</a></p>
<p><a href="#k09">*** 9. Načtení objektů z&nbsp;Minia</a></p>
<p><a href="#k10">*** 10. Přečtení dat uložených ve formátu CSV</a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p></p>

<pre>
#!/usr/bin/env python3
# vim: set fileencoding=utf-8


def main():
    pass


if __name__ == "__main__":
    main()
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p></p>

<pre>
"Time","Value"
2020-12-01 06:21:00,30
2020-12-01 06:21:20,4
2020-12-01 06:21:40,5
2020-12-01 06:22:00,5
2020-12-01 06:22:20,5
2020-12-01 06:22:40,8
2020-12-01 06:23:00,8
2020-12-01 06:23:20,8
2020-12-01 06:23:40,11
2020-12-01 06:24:00,11
2020-12-01 06:24:20,10
2020-12-01 06:24:40,21
2020-12-01 06:25:00,21
2020-12-01 06:25:20,25
2020-12-01 06:25:40,22
2020-12-01 06:26:00,22
2020-12-01 06:26:20,23
2020-12-01 06:26:40,23
2020-12-01 06:27:00,23
2020-12-01 06:27:20,13
2020-12-01 06:27:40,15
2020-12-01 06:28:00,15
2020-12-01 06:28:20,13
2020-12-01 06:28:40,16
2020-12-01 06:29:00,16
2020-12-01 06:29:20,16
2020-12-01 06:29:40,11
2020-12-01 06:30:00,11
2020-12-01 06:30:20,22
2020-12-01 06:30:40,15
2020-12-01 06:31:00,15
2020-12-01 06:31:20,12
2020-12-01 06:31:40,18
2020-12-01 06:32:00,18
2020-12-01 06:32:20,23
2020-12-01 06:32:40,19
2020-12-01 06:33:00,19
2020-12-01 06:33:20,22
2020-12-01 06:33:40,9
2020-12-01 06:34:00,9
2020-12-01 06:34:20,9
2020-12-01 06:34:40,22
2020-12-01 06:35:00,20
2020-12-01 06:35:20,20
2020-12-01 06:35:40,17
2020-12-01 06:36:00,13
2020-12-01 06:36:20,13
2020-12-01 06:36:40,11
2020-12-01 06:37:00,16
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
#!/usr/bin/env python3

import sys
import csv
import numpy as np
import matplotlib.pyplot as plt

<i># Check if command line argument is specified (it is mandatory).</i>
if len(sys.argv) &lt; 2:
    print("Usage:")
    print("  plot_values.py input_file.csv")
    print("Example:")
    print("  plot_values.py overall.csv")
    sys.exit(1)

<i># First command line argument should contain name of input CSV.</i>
input_csv = sys.argv[1]

<i># Try to open the CSV file specified.</i>
with open(input_csv) as csv_input:
    # And open this file as CSV
    csv_reader = csv.reader(csv_input)

    # Skip header
    next(csv_reader, None)
    rows = 0

    # Read all rows from the provided CSV file
    data = [(row[0], int(row[1])) for row in csv_reader]
    print(data)

# Linear regression
time = [item[0] for item in data]
messages = [item[1] for item in data]

# Linear regression
x = np.arange(0, len(messages))
coef = np.polyfit(x, messages, 1)
poly1d_fn = np.poly1d(coef)

# Create new graph
plt.plot(messages, "b", poly1d_fn(np.arange(0, len(messages))), "y--")

# Title of a graph
plt.title("Sensor values")

# Add a label to x-axis
plt.xlabel("Time")

# Add a label to y-axis
plt.ylabel("Values")

plt.legend(loc="upper right")

# Set the plot layout
plt.tight_layout()

# And save the plot into raster format and vector format as well
plt.savefig("graph.png")
plt.savefig("graph.svg")

# Try to show the plot on screen
plt.show()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
#!/usr/bin/env python3

import sys
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Check if command line argument is specified (it is mandatory).
if len(sys.argv) &lt; 2:
    print("Usage:")
    print("  plot_values_pandas.py input_file.csv")
    print("Example:")
    print("  plot_values_pandas.py overall.csv")
    sys.exit(1)

# First command line argument should contain name of input CSV.
input_csv = sys.argv[1]

# Try to open the CSV file specified.
df = pd.read_csv(input_csv)

# Print info about data frame
print(df.info())
print(df.describe())

# Linear regression
time = df["Time"]
messages = df["Value"]

# Linear regression
x = np.arange(0, len(messages))
coef = np.polyfit(x, messages, 1)
poly1d_fn = np.poly1d(coef)

# Create new graph
plt.plot(messages, "b", poly1d_fn(np.arange(0, len(messages))), "y--")

# Title of a graph
plt.title("Sensor values")

# Add a label to x-axis
plt.xlabel("Time")

# Add a label to y-axis
plt.ylabel("Values")

plt.legend(loc="upper right")

# Set the plot layout
plt.tight_layout()

# And save the plot into raster format and vector format as well
plt.savefig("graph.png")
plt.savefig("graph.svg")

# Try to show the plot on screen
plt.show()
</pre>

<pre>
#!/usr/bin/env python3

import sys
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Check if command line argument is specified (it is mandatory).
if len(sys.argv) &lt; 2:
    print("Usage:")
    print("  plot_values_pandas.py input_file.csv")
    print("Example:")
    print("  plot_values_pandas.py overall.csv")
    sys.exit(1)

# First command line argument should contain name of input CSV.
input_csv = sys.argv[1]

# Try to open the CSV file specified.
df = pd.read_csv(input_csv)

# Print info about data frame
print(df.info())
print(df.describe())

# Linear regression
time = df["Time"]
messages = df["Value"]

# Linear regression
x = np.arange(0, len(messages))
coef = np.polyfit(x, messages, 1)
poly1d_fn = np.poly1d(coef)

# Create a figure containing a single axes.
fig, ax = plt.subplots()

# Create new graph
ax.plot(messages, "b", poly1d_fn(np.arange(0, len(messages))), "y--")

# Title of a graph
ax.set_title("Sensor values")

# Add a label to x-axis
ax.set_xlabel("Time")

# Add a label to y-axis
ax.set_ylabel("Values")

ax.legend(loc="upper right")

# And save the plot into raster format and vector format as well
fig.savefig("sensors.png")
fig.savefig("sensors.svg")

plt.show()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Projekt Minio</h2>

<p>V&nbsp;této kapitole se ve stručnosti seznámíme s&nbsp;projektem nazvaným <i>MinIO</i>. Jedná se o sadu několika služeb a nástrojů, které uživatelům poskytují distribuované datové úložiště určené pro ukládání obecných (nestrukturovaných) dat. Typicky se jedná o soubory používané v&nbsp;oblasti AI (<i>Artifical Intelligence</i>) a ML (<i>Machine Learning</i>), ovšem kromě těchto populárních (a vlastně do značné míry i módních) oblastí IT je pochopitelně možné službu MinIO použít i pro ukládání logů, souborů, k&nbsp;nimž je zapotřebí rychle přistupovat z&nbsp;mnoha různých, mnohdy vzájemně vzdálených oblastí (zde využijeme možnost distribuovaného systému), jako centrální úložiště dokumentů, obrázků, videí, pochopitelně i obrazů souborových systémů pro Docker apod. MinIO dosahuje velmi slušné rychlosti přístupu k&nbsp;datům (při vhodně nadimenzované síti, která je většinou limitujícím faktorem) a mj.&nbsp;i díky velmi dobré stabilitě ukazuje přednosti <a href="https://www.root.cz/serialy/programovaci-jazyk-go/">programovacího jazyka Go</a>, v&nbsp;němž je celý systém naprogramován.</p>

<p>Jedním z&nbsp;nejdůležitějších a v&nbsp;důsledku i nejpraktičtějších vlastností projektu MinIO je fakt, že se pro přístup k&nbsp;datům používá stejná technologie, jaká je implementována i v&nbsp;populární službě <i>Amazon S3</i> či možná přesněji <i>AWS S3</i>. To mj.&nbsp;znamená, že dodávaný <i>MinIO Client SDK</i> popsaný v&nbsp;navazujících kapitolách může sloužit jak pro přístup k&nbsp;datům uloženým v&nbsp;Miniu, tak i k&nbsp;datům uloženým ve cloudu na S3. Díky tomu lze například snadněji nastavit konfiguraci pro vývoj, konfiguraci CI, zajistit si možnost využití veřejného cloudu (S3) nebo naopak privátního cloudu (založeného na Miniu) atd. Navíc je <i>MinIO Client SDK</i> určen jen pro přístup k&nbsp;datům a nikoli pro ovládání dalších služeb, takže je jeho zahrnutí do vyvíjené aplikace méně náročné na systémové prostředky. Musíme si totiž uvědomit, že přístup k&nbsp;datům je mnohdy zapotřebí i z&nbsp;relativně málo výkonných zařízení IoT atd. (mj.&nbsp;i z&nbsp;tohoto důvodu se MinIO co do snadnosti integrace porovnává s&nbsp;Redisem, i když oblasti nasazení těchto dvou technologií jsou mnohdy značně odlišné).</p>

<p></p>

<pre>
$ <strong>pip3 install --user minio</strong>
&nbsp;
Requirement already satisfied: minio in ./.local/lib/python3.6/site-packages
Requirement already satisfied: urllib3 in /usr/lib/python3.6/site-packages (from minio)
Requirement already satisfied: pytz in /usr/lib/python3.6/site-packages (from minio)
Requirement already satisfied: certifi in ./.local/lib/python3.6/site-packages (from minio)
Requirement already satisfied: python-dateutil in ./.local/lib/python3.6/site-packages (from minio)
Requirement already satisfied: six&gt;=1.5 in ./.local/lib/python3.6/site-packages (from python-dateutil-&gt;minio)
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Spuštění Minia v&nbsp;režimu serveru</h2>

<p>Pokud již máme připravený spustitelný soubor nazvaný <strong>minio</strong>, je inicializace a následné spuštění služby MinIO na lokálním počítači otázkou jediného příkazu. Musíme pouze specifikovat, že se má spustit server a na jakém disku a adresáři budou umístěny soubory spravované službou MinIO:</p>

<p></p>

$ ./minio server .

API: http://192.168.1.34:9000  http://192.168.122.1:9000  http://192.168.130.1:9000  http://127.0.0.1:9000
RootUser: minioadmin
RootPass: minioadmin

Console: http://192.168.1.34:40747 http://192.168.122.1:40747 http://192.168.130.1:40747 http://127.0.0.1:40747
RootUser: minioadmin
RootPass: minioadmin

Command-line: https://docs.min.io/docs/minio-client-quickstart-guide
   $ mc alias set myminio http://192.168.1.34:9000 minioadmin minioadmin

Documentation: https://docs.min.io

<p>Povšimněte si, že se po spuštění zobrazily všechny informace nutné pro spuštění webového rozhraní, pro použití konzole ovládané z&nbsp;příkazového řádku i pro instalaci SDK pro podporované programovací jazyky. Dále jsme získali i dvojici klíčů, které použijeme v&nbsp;následujících kapitolách, a to jak při přístupu přes webovou konzoli, tak i v&nbsp;demonstračních příkladech založených na SDK Minia.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Načtení seznamu objektů uložených v&nbsp;Miniu</h2>

<p></p>

<pre>
<i>#!/usr/bin/env python3</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
from minio import Minio
&nbsp;
bucket_name = "sensors"
minio_address = "localhost:9000"
minio_access_key = "tester"
minio_secret_key = "tester01"
&nbsp;
&nbsp;
def <strong>main</strong>():
    client = Minio(
        minio_address,
        minio_access_key,
        minio_secret_key,
        secure=False
    )
&nbsp;
    found = client.bucket_exists(bucket_name)
    print("Bucket found:", found)
&nbsp;
    objects = client.list_objects(bucket_name, recursive=False)
&nbsp;
    for obj in objects:
        print(obj.bucket_name, obj.object_name, obj.last_modified,
              obj.etag, obj.size, obj.content_type)
&nbsp;
&nbsp;
if __name__ == "__main__":
    main()
</pre>

<pre>
$ <strong>python3 sensors_v02.py</strong>
&nbsp;
Bucket found: True
sensors pyreverse 2022-05-06 14:45:33.030000+00:00 f992f0e93eaa023caa2e9a735c344fa9 1857 None
sensors storage.go 2022-05-06 14:45:28.235000+00:00 63a36e97f46ac991ebe883c569a0fd5b 40041 None
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Seznam datových souborů s&nbsp;výsledky měření</h2>

<p></p>

<p></p>

<pre>
$ <strong>python3 sensors_v02.py</strong>
&nbsp;
Bucket found: True
sensors sensor_1.csv 2022-05-06 16:04:59.590000+00:00 6761c54a2d4d19342b0583a2350c2007 21181 None
sensors sensor_2.csv 2022-05-06 16:05:03.488000+00:00 cdc3fca684b7e7d3cba1a040caf6b571 1135 None
sensors sensor_3.csv 2022-05-06 16:05:06.402000+00:00 fbbfc6fa348238aecffca3b8fad32716 1507 None
sensors sensor_4.csv 2022-05-06 16:05:09.237000+00:00 e6822d4390400f5045a787c169036a1c 1089 None
sensors sensor_5.csv 2022-05-06 16:05:11.655000+00:00 5a48f56ce4057e360473007af2e82284 1338 None
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Načtení objektů z&nbsp;Minia</h2>

<p></p>

<pre>
#!/usr/bin/env python3
# vim: set fileencoding=utf-8

from minio import Minio, ResponseError

bucket_name = "sensors"
minio_address = "localhost:9000"
minio_access_key = "tester"
minio_secret_key = "tester01"


def main():
    client = Minio(
        minio_address,
        minio_access_key,
        minio_secret_key,
        secure=False
    )

    found = client.bucket_exists(bucket_name)
    print("Bucket found:", found)

    objects = client.list_objects(bucket_name, recursive=False)

    for obj in objects:
        print(obj.bucket_name, obj.object_name, obj.last_modified,
              obj.etag, obj.size, obj.content_type)
        try:
            response = client.get_object(bucket_name, obj.object_name)
            data = response.read().decode()
            print(data)
        except ResponseError as err:
            print(err)
        finally:
            response.close()
            response.release_conn()


if __name__ == "__main__":
    main()
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Přečtení dat uložených ve formátu CSV</h2>

<p></p>

<pre>
#!/usr/bin/env python3
# vim: set fileencoding=utf-8

from minio import Minio, ResponseError
import pandas as pd
from io import StringIO

bucket_name = "sensors"
minio_address = "localhost:9000"
minio_access_key = "tester"
minio_secret_key = "tester01"


def main():
    client = Minio(
        minio_address,
        minio_access_key,
        minio_secret_key,
        secure=False
    )

    found = client.bucket_exists(bucket_name)
    print("Bucket found:", found)

    objects = client.list_objects(bucket_name, recursive=False)

    for obj in objects:
        print(obj.bucket_name, obj.object_name, obj.last_modified,
              obj.etag, obj.size, obj.content_type)
        try:
            response = client.get_object(bucket_name, obj.object_name)
            buff = StringIO(response.read().decode())
            data = pd.read_csv(buff)
            print(data)
        except ResponseError as err:
            print(err)
        finally:
            response.close()
            response.release_conn()


if __name__ == "__main__":
    main()
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>

<pre>
#!/usr/bin/env python3
# vim: set fileencoding=utf-8

from minio import Minio, ResponseError
import pandas as pd
from io import StringIO
import numpy as np
import matplotlib
import matplotlib.pyplot as plt

matplotlib.use('agg')  # required, use a non-interactive backend

bucket_name = "sensors"
minio_address = "localhost:9000"
minio_access_key = "tester"
minio_secret_key = "tester01"


def create_graph(filename, df):
    # Linear regression
    time = df["Time"]
    messages = df["Value"]

    # Linear regression
    x = np.arange(0, len(messages))
    coef = np.polyfit(x, messages, 1)
    poly1d_fn = np.poly1d(coef)

    # Create a figure containing a single axes.
    fig, ax = plt.subplots()

    # Create new graph
    ax.plot(messages, "b", poly1d_fn(np.arange(0, len(messages))), "y--")

    # Title of a graph
    ax.set_title("Sensor values")

    # Add a label to x-axis
    ax.set_xlabel("Time")

    # Add a label to y-axis
    ax.set_ylabel("Values")

    ax.legend(loc="upper right")

    # And save the plot into raster format and vector format as well
    fig.savefig(filename)


def main():
    client = Minio(
        minio_address,
        minio_access_key,
        minio_secret_key,
        secure=False
    )

    found = client.bucket_exists(bucket_name)
    print("Bucket found:", found)

    objects = client.list_objects(bucket_name, recursive=False)

    for obj in objects:
        print(obj.bucket_name, obj.object_name, obj.last_modified,
              obj.etag, obj.size, obj.content_type)
        try:
            response = client.get_object(bucket_name, obj.object_name)
            buff = StringIO(response.read().decode())
            df = pd.read_csv(buff)
            filename = obj.object_name[0:-4] + ".png"
            create_graph(filename, df)
        except ResponseError as err:
            print(err)
        finally:
            response.close()
            response.release_conn()


if __name__ == "__main__":
    main()
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<p></p>

<pre>
$ p<strong>ip3 install --user pywebio</strong>
&nbsp;
Collecting pywebio
  Downloading https://files.pythonhosted.org/packages/a5/bd/d4e775b6bf43dc83d1c1c596ae91c5ce58baf9199ac28b67b8886a9de8aa/pywebio-1.6.0.tar.gz (468kB)
    100% |████████████████████████████████| 471kB 200kB/s 
Collecting tornado>=5.0 (from pywebio)
  Downloading https://files.pythonhosted.org/packages/01/d1/8750ad20cbcefb499bb8b405e243f83c2c89f78d139e6f8c8d800640f554/tornado-6.1-cp36-cp36m-manylinux1_x86_64.whl (427kB)
    100% |████████████████████████████████| 430kB 874kB/s 
Collecting user-agents (from pywebio)
  Downloading https://files.pythonhosted.org/packages/8f/1c/20bb3d7b2bad56d881e3704131ddedbb16eb787101306887dff349064662/user_agents-2.2.0-py3-none-any.whl
Collecting ua-parser>=0.10.0 (from user-agents->pywebio)
  Downloading https://files.pythonhosted.org/packages/9d/22/4d16b08db329fd440eed366d35e4dd7195c9babb4ecac5218f28081522a2/ua_parser-0.10.0-py2.py3-none-any.whl
Building wheels for collected packages: pywebio
  Running setup.py bdist_wheel for pywebio ... done
  Stored in directory: /home/ptisnovs/.cache/pip/wheels/fb/29/d3/09c684d68476f021ef044809643cee71560603503907dd42b3
Successfully built pywebio
Installing collected packages: tornado, ua-parser, user-agents, pywebio
Successfully installed pywebio-1.6.0 tornado-6.1 ua-parser-0.10.0 user-agents-2.2.0
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<p></p>

<pre>
from pywebio import *
from pywebio.input import *
from pywebio.output import *


def main():
    put_info("Výsledky měření senzorů")


start_server(main, port=8080, debug=True)
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>

<pre>
from pywebio import *
from pywebio.input import *
from pywebio.output import *

from minio import Minio, ResponseError


bucket_name = "sensors"
minio_address = "localhost:9000"
minio_access_key = "tester"
minio_secret_key = "tester01"

client = Minio(
    minio_address,
    minio_access_key,
    minio_secret_key,
    secure=False
)


def main():
    put_info("Výsledky měření senzorů")
    found = client.bucket_exists(bucket_name)

    if not found:
        put_error("Data nelze přečíst - chybné připojení k Miniu")

    objects = client.list_objects(bucket_name, recursive=False)

    table = [['Senzor', 'Datum', 'Graf', 'Info']]

    for obj in objects:
        row = [obj.object_name,
               obj.last_modified,
               "Graf",
               "Info"]
        table.append(row)

    put_table(table)

start_server(main, port=8080, debug=True)
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech <a
href="https://www.root.cz/clanky/pywebio-interaktivni-webove-dialogy-a-formulare-v-cistem-pythonu/">předminule</a>,
<a
href="https://www.root.cz/clanky/pywebio-interaktivni-webove-dialogy-a-formulare-v-cistem-pythonu-dokonceni/">minule</a>
i dnes popsaných demonstračních příkladů určených pro programovací jazyk Python
3 byly uloženy do Git repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_basic_output.py</td><td>zobrazení běžného textu ve webovém prohlížeči</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/01_basic_output.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/01_basic_output.py</a></td></tr>
<tr><td> 2</td><td>02_table.py</td><td>zobrazení tabulky ve webovém prohlížeči</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/02_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/02_table.py</a></td></tr>
<tr><td> 3</td><td>03_table.py</td><td>programová příprava tabulky zobrazené ve webovém prohlížeči</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/03_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/03_table.py</a></td></tr>
<tr><td> 4</td><td>04_table.py</td><td>programová příprava tabulky zobrazené ve webovém prohlížeči</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/04_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/04_table.py</a></td></tr>
<tr><td> 5</td><td>05_color.py</td><td>podpora pro symbolické názvy barev</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/05_color.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/05_color.py</a></td></tr>
<tr><td> 6</td><td>06_message.py</td><td>výpis ostylovaných zpráv do webové stránky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/06_message.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/06_message.py</a></td></tr>
<tr><td> 7</td><td>07_put_html.py</td><td>podpora pro výstup HTML kódu z&nbsp;PyWebIO</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/07_put_html.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/07_put_html.py</a></td></tr>
<tr><td> 8</td><td>08_put_markdown.py</td><td>výpis textu (dokumentu) napsaného ve značkovacím jazyku Markdown</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/08_put_markdown.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/08_put_markdown.py</a></td></tr>
<tr><td> 9</td><td>09_put_code.py</td><td>výpis zdrojového kódu se zvýrazněním syntaxe</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/09_put_code.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/09_put_code.py</a></td></tr>
<tr><td>10</td><td>10_progress_bar.py</td><td>animované zobrazení průběhu operace</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/10_progress_bar.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/10_progress_bar.py</a></td></tr>
<tr><td>11</td><td>11_loading.py</td><td>informace o výpočtu či načítání stránky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/11_loading.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/11_loading.py</a></td></tr>
<tr><td>12</td><td>12_loading.py</td><td>informace o výpočtu či načítání stránky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/12_loading.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/12_loading.py</a></td></tr>
<tr><td>13</td><td>13_input.py</td><td>vstupní textové pole</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/13_input.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/13_input.py</a></td></tr>
<tr><td>14</td><td>14_input.py</td><td>vylepšená vstupní textová pole</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/14_input.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/14_input.py</a></td></tr>
<tr><td>15</td><td>15_input_numbers.py</td><td>kontrola korektnosti numerických údajů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/15_input_numbers.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/15_input_numbers.py</a></td></tr>
<tr><td>16</td><td>16_input_numbers_required.py</td><td>povinné vstupní parametry</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/16_input_numbers_required.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/16_input_numbers_required.py</a></td></tr>
<tr><td>17</td><td>17_radio.py</td><td>přepínače</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/17_radio.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/17_radio.py</a></td></tr>
<tr><td>18</td><td>18_checkbox.py</td><td>výběrové boxy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/18_checkbox.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/18_checkbox.py</a></td></tr>
<tr><td>19</td><td>19_actions.py</td><td>skupina akcí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/19_actions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/19_actions.py</a></td></tr>
<tr><td>20</td><td>20_slider.py</td><td>interaktivní posuvník</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/20_slider.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/20_slider.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>21_more_inputs.py</td><td>postupné zadávání údajů v&nbsp;na sebe navazujících vstupních prvcích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/21_more_inputs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/21_more_inputs.py</a></td></tr>
<tr><td>22</td><td>22_more_inputs.py</td><td>seskupení ovládacích prvků do jediného formuláře</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/22_more_inputs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/22_more_inputs.py</a></td></tr>
<tr><td>23</td><td>23_input_validators.py</td><td>specifikace typů vstupních dat ve vstupních formulářích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/23_input_validators.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/23_input_validators.py</a></td></tr>
<tr><td>24</td><td>24_better_validators.py</td><td>tvorba a využití vlastních validátorů ve vstupních formulářích</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/24_better_validators.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/24_better_validators.py</a></td></tr>
<tr><td>25</td><td>25_popup.py</td><td>zobrazení vyskakovacího okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/25_popup.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/25_popup.py</a></td></tr>
<tr><td>26</td><td>26_popup.py</td><td>zobrazení vyskakovacího okna</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/26_popup.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/26_popup.py</a></td></tr>
<tr><td>27</td><td>27_rows.py</td><td>zarovnání prvků do sloupců, řádků a mřížek</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/27_rows.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/27_rows.py</a></td></tr>
<tr><td>28</td><td>28_style.py</td><td>změna stylu zobrazení ovládacích prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/28_style.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/28_style.py</a></td></tr>
<tr><td>29</td><td>29_collapse.py</td><td>sady prvků, které je možné skrýt</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/29_collapse.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/29_collapse.py</a></td></tr>
<tr><td>30</td><td>30_image.py</td><td>zobrazení rastrového obrázku přečteného ze specifikovaného zdroje</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/30_image.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/30_image.py</a></td></tr>
<tr><td>31</td><td>31_mandelbrot.py</td><td>výpočet a zobrazení Mandelbrotovy množiny</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/31_mandelbrot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/31_mandelbrot.py</a></td></tr>
<tr><td>32</td><td>32_fm_synth.py</td><td>interaktivní změna parametrů výpočtu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/32_fm_synth.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/32_fm_synth.py</a></td></tr>
<tr><td>32</td><td>server1</td><td>Server s&nbsp;několika aplikacemi, první řešení</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/server1">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/server1</a></td></tr>
<tr><td>33</td><td>server2</td><td>Server s&nbsp;několika aplikacemi, druhé řešení</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/server2">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/server2</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>34</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/</a></td></tr>
<tr><td>35</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/</a></td></tr>
<tr><td>36</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>37</td><td>sensors_v01.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v01.py</a></td></tr>
<tr><td>38</td><td>sensors_v02.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v02.py</a></td></tr>
<tr><td>39</td><td>sensors_v03.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v03.py</a></td></tr>
<tr><td>40</td><td>sensors_v04.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v04.py</a></td></tr>
<tr><td>41</td><td>sensors_v05.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v05.py</a></td></tr>
<tr><td>42</td><td>sensors_v06.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v06.py</a></td></tr>
<tr><td>43</td><td>sensors_v07.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pywebio/sensors_v07.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Low code Python web framework<br />
<a href="https://www.pyweb.io/">https://www.pyweb.io/</a>
</li>

<li>Repositář projektu<br />
<a href="https://github.com/pywebio/PyWebIO/">https://github.com/pywebio/PyWebIO/</a>
</li>

<li>Getting Started<br />
<a href="https://www.pyweb.io/tutorial.html">https://www.pyweb.io/tutorial.html</a>
</li>

<li>Dokumentace<br />
<a href="https://pywebio.readthedocs.io/en/latest/">https://pywebio.readthedocs.io/en/latest/</a>
</li>

<li>Why PyWebIO?<br />
<a href="https://github.com/pywebio/PyWebIO/wiki/Why-PyWebIO%3F">https://github.com/pywebio/PyWebIO/wiki/Why-PyWebIO%3F</a>
</li>

<li>PyWebIO demos<br />
<a href="https://pywebio-demos.pywebio.online/">https://pywebio-demos.pywebio.online/</a>
</li>

<li>PyWebIO Chart Gallery<br />
<a href="https://pywebio-charts.pywebio.online/">https://pywebio-charts.pywebio.online/</a>
</li>

<li>Awesome Python<br />
<a href="https://awesome-python.com/">https://awesome-python.com/</a>
</li>

<li>A complete guide to web development in Python<br />
<a href="https://www.educative.io/blog/web-development-in-python">https://www.educative.io/blog/web-development-in-python</a>
</li>

<li>Python Web Development Tutorials<br />
<a href="https://realpython.com/tutorials/web-dev/">https://realpython.com/tutorials/web-dev/</a>
</li>

<li>What is Flask Python<br />
<a href="https://pythonbasics.org/what-is-flask-python/">https://pythonbasics.org/what-is-flask-python/</a>
</li>

<li>CherryPy<br />
<a href="https://cherrypy.dev/">https://cherrypy.dev/</a>
</li>

<li>Projekt Zenity<br />
<a href="https://wiki.gnome.org/Projects/Zenity">https://wiki.gnome.org/Projects/Zenity</a>
</li>

<li>Nástroj Dialog<br />
<a href="http://invisible-island.net/dialog/">http://invisible-island.net/dialog/</a>
</li>

<li>Plotly<br />
<a href="https://plotly.com/">https://plotly.com/</a>
</li>

<li>Bokeh<br />
<a href="https://bokeh.org/">https://bokeh.org/</a>
</li>

<li>pyecharts<br />
<a href="https://github.com/pyecharts/pyecharts/blob/master/README.en.md">https://github.com/pyecharts/pyecharts/blob/master/README.en.md</a>
</li>

<li>Tvorba grafů v&nbsp;Jupyter Notebooku s&nbsp;využitím knihovny Matplotlib<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/">https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/</a>
</li>

<li>Alternatives to PyWebIO<br />
<a href="https://stackshare.io/pywebio/alternatives">https://stackshare.io/pywebio/alternatives</a>
</li>

<li>The fastest way to build and share data apps &ndash; Streamlit<br />
<a href="https://streamlit.io/">https://streamlit.io/</a>
</li>

<li>Dash Enterprise<br />
<a href="https://plotly.com/dash/">https://plotly.com/dash/</a>
</li>

<li>pglet<br />
<a href="https://pglet.io/">https://pglet.io/</a>
</li>

<li>Stránky projektu MinIO<br />
<a href="https://min.io/">https://min.io/</a>
</li>

<li>MinIO Quickstart Guide<br />
<a href="https://docs.min.io/docs/minio-quickstart-guide.html">https://docs.min.io/docs/minio-quickstart-guide.html</a>
</li>

<li>MinIO Go Client API Reference<br />
<a href="https://docs.min.io/docs/golang-client-api-reference">https://docs.min.io/docs/golang-client-api-reference</a>
</li>

<li>Performance at Scale: MinIO Pushes Past 1.4 terabits per second with 256 NVMe Drives<br />
<a href="https://blog.min.io/performance-at-scale-minio-pushes-past-1-3-terabits-per-second-with-256-nvme-drives/">https://blog.min.io/performance-at-scale-minio-pushes-past-1-3-terabits-per-second-with-256-nvme-drives/</a>
</li>

<li>Benchmarking MinIO vs. AWS S3 for Apache Spark<br />
<a href="https://blog.min.io/benchmarking-apache-spark-vs-aws-s3/">https://blog.min.io/benchmarking-apache-spark-vs-aws-s3/</a>
</li>

<li>MinIO Client Quickstart Guide<br />
<a href="https://docs.min.io/docs/minio-client-quickstart-guide.html">https://docs.min.io/docs/minio-client-quickstart-guide.html</a>
</li>

<li>Analýza kvality zdrojových kódů Minia<br />
<a href="https://goreportcard.com/report/github.com/minio/minio">https://goreportcard.com/report/github.com/minio/minio</a>
</li>

<li>This is MinIO<br />
<a href="https://www.youtube.com/watch?v=vF0lQh0XOCs">https://www.youtube.com/watch?v=vF0lQh0XOCs</a>
</li>

<li>Running MinIO Standalone<br />
<a href="https://www.youtube.com/watch?v=dIQsPCHvHoM">https://www.youtube.com/watch?v=dIQsPCHvHoM</a>
</li>

<li>"Amazon S3 Compatible Storage in Kubernetes" - Rob Girard, Principal Tech Marketing Engineer, Minio<br />
<a href="https://www.youtube.com/watch?v=wlpn8K0jJ4U">https://www.youtube.com/watch?v=wlpn8K0jJ4U</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

