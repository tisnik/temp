<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Grafické uživatelské rozhraní v Pythonu: další možnosti nabízené widgety Text a ScrolledText</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Grafické uživatelské rozhraní v Pythonu: další možnosti nabízené widgety Text a ScrolledText</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku o knihovně Tkinter určené pro tvorbu grafického uživatelského rozhraní v Pythonu si popíšeme další možnosti, které jsou nabízené všestranným widgetem Text. Taktéž se zmíníme o rozšířené variantě tohoto widgetu, která se jmenuje ScrolledText.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Grafické uživatelské rozhraní v&nbsp;Pythonu: další možnosti nabízené widgety Text a ScrolledText</a></p>
<p><a href="#k02">2. Složitější příklad se styly textu</a></p>
<p><a href="#k03">3. Obrázky <strong>BitmapImage</strong> a <strong>PhotoImage</strong> ve widgetu <strong>Text</strong></a></p>
<p><a href="#k04">4. Konfigurace tabulačních zarážek</a></p>
<p><a href="#k05">5. Zarovnání textu na tabulačních zarážkách</a></p>
<p><a href="#k06">6. Další vlastnosti řetězců vkládaných do widgetu <strong>Text</strong></a></p>
<p><a href="#k07">7. Automatické zvýraznění textu, nad nímž se nachází kurzor myši</a></p>
<p><a href="#k08">8. Reakce na stisk vybraného tlačítka (tlačítek) myši nad částí textu</a></p>
<p><a href="#k09">9. Další widgety vložené do widgetu <strong>Text</strong></a></p>
<p><a href="#k10">10. Přidání dalších widgetů (tlačítka, checkboxu...) do textu</a></p>
<p><a href="#k11">11. Modul <strong>ScrolledText/tkinter.scrolledtext</strong></a></p>
<p><a href="#k12">12. Příklad použití modulu <strong>ScrolledText</strong> &ndash; varianta pro Python 2.x</a></p>
<p><a href="#k13">13. Příklad použití modulu <strong>tkinter.scrolledtext</strong> &ndash; varianta pro Python 3.x</a></p>
<p><a href="#k14">14. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k15">15. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Grafické uživatelské rozhraní v&nbsp;Pythonu: další možnosti nabízené widgety Text a ScrolledText</h2>

<p><a
href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/">V&nbsp;předchozí
části</a> <a
href="https://www.root.cz/serialy/graficke-uzivatelske-rozhrani-v-pythonu/">seriálu
o tvorbě grafického uživatelského rozhraní v&nbsp;Pythonu</a> jsme se kromě
jiného seznámili i se základními vlastnostmi widgetu nazvaného
<strong>Text</strong>. Připomeňme si jen, že <strong>Text</strong> patří vedle
již popsaného widgetu <strong>canvas</strong> k&nbsp;prakticky nejsložitějším a
současně i nejflexibilnějším objektům, se kterými je možné v&nbsp;knihovně
<i>Tkinter</i> pracovat. Ve své nejjednodušší podobě slouží tento widget
k&nbsp;zobrazení víceřádkového textu. To však není zdaleka vše. Text je totiž
možné sdružovat do bloků a každému bloku nastavit nějaké atributy, typicky
font, velikost textu, barvu textu, styl znaků (tučně, kurzíva, podtrženě atd.).
Kromě toho se každý blok může chovat jako hypertextový odkaz. Dále je možné
text různě zarovnávat, přidávat do něj obrázky či další widgety atd.</p>

<img src="https://i.iinfo.cz/images/33/tkinter7-5.png" class="image-302232" alt="&#160;" width="568" height="423" />
<p><i>Obrázek 1: Nejjednodušší forma widgetu <strong>Text</strong>.</i></p>

<p>Dnes se seznámíme s&nbsp;dalšími možnostmi, které jsou tímto widgetem
nabízeny. Nejprve si ukážeme složitější formátování textu, dále vkládání
obrázků (bitmap i plnobarevných obrázků) do textu, konfiguraci tabulačních
zarážek, které lze v&nbsp;případě potřeby použít pro zarovnání textu a
nezapomeneme ani na možnost zavolání zvoleného uživatelského kódu (většinou
funkce či anonymní funkce) ve chvíli, kdy dojde k&nbsp;nějaké události. Na
závěr se seznámíme s&nbsp;widgetem nazvaným <strong>ScrollText</strong> či
<strong>scrolltext</strong> (podle použité verze Pythonu). Tento widget vlastně
spojuje možnosti klasického scrollbaru s&nbsp;widgetem <strong>Text</strong>, a
to velmi jednoduchým způsobem &ndash; celá konfigurace scrollbaru je totiž
záležitostí jediného parametru.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Složitější příklad se styly textu</h2>

<p>Kromě barev vykreslovaných řetězců je možné ve widgetu <strong>Text</strong>
měnit i typ písma, což je ukázáno na dnešním prvním demonstračním příkladu. Zde
si můžete všimnout, že vlastnosti <strong>underline</strong> (podtržení) a
<strong>overstrike</strong> (přeškrtnutí, v&nbsp;příkladu není použito, sami si
ho samozřejmě můžete vyzkoušet) se povolují a zakazují přiřazením logické
hodnoty True/False. Přesná specifikace fontu je popsána na stránce <a
href="http://www.tcl.tk/man/tcl8.5/TkCmd/font.htm#M13">http://www.tcl.tk/man/tcl8.5/TkCmd/font.htm#M13</a>,
v&nbsp;naprosté většině případů si však vystačíme s&nbsp;řetězcem obsahujícím
jméno fontu a jeho velikost, které mohou být alternativně doplněny o slovo
&bdquo;bold&ldquo; a/nebo &bdquo;italic&ldquo; (obě slova lze zkombinovat, tedy
například &bdquo;"Helvetica 12 bold italic"&ldquo;).  Kromě toho je možné font
<a href="https://www.tutorialspoint.com/python/tk_fonts.htm">specifikovat
n-ticí</a>. Do textového widgetu je vložena i bitmapa, což je problematika,
které se budeme podrobněji věnovat <a href="#k03">v&nbsp;navazující
kapitole</a>:</p>

<img src="https://i.iinfo.cz/images/533/tkinter8-1.png" class="image-303407" alt="&#160;" width="608" height="606" />
<p><i>Obrázek 2: Text s&nbsp;různými styly i s&nbsp;vloženou bitmapou.</i></p>

<p>Následuje výpis zdrojového kódu prvního demonstračního příkladu:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
image = tkinter.BitmapImage(file="test.xbm", foreground="white")
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    background="#202020",
                    width=40, height=16)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.image_create(tkinter.END, image=image)
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

<p>Poznámka: ještě bych rád připomenul, že u všech dnes popsaných
demonstračních příkladů je zachována editovatelnost textu, nejedná se tedy o
neživou část GUI, ale část aktivně komunikující s&nbsp;uživatelem.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Obrázky <strong>BitmapImage</strong> a <strong>PhotoImage</strong> ve widgetu <strong>Text</strong></h2>

<p>Mezi text umístěný na widgetu <strong>Text</strong> je možné vkládat
obrázky, a to jak <a
href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/#k03">dvoubarevné
obrázky</a>, tak i <a
href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-kouzla-s-kreslici-plochou-dokonceni/#k05">obrázky
vícebarevné</a>. Postup je ve skutečnosti velmi jednoduchý &ndash; nejdříve
obrázek načteme z&nbsp;externího datového souboru nebo z&nbsp;dat uložených
přímo ve skriptu a následně obrázek vložíme do textu metodou
<strong>text.image_create()</strong>, v&nbsp;níž specifikujeme jak bod vložení
(například na konec textu), tak i vlastní obrázek. Samotný text přitom zůstává
editovatelný; i samotné obrázky je možné mazat, posouvat atd.</p>

<p>Příklad vložení bitmapy, tedy dvoubarevného obrázku:</p>

<pre>
image = tkinter.BitmapImage(file="test.xbm", foreground="white")
&nbsp;
text.image_create(tkinter.END, image=image)
</pre>

<p>Příklad vložení vícebarevného obrázku (buď s&nbsp;barvovou paletou či
obrázku plnobarevného):</p>

<pre>
photo_image = tkinter.PhotoImage(file="icons/application-exit.gif")
&nbsp;
text.image_create(tkinter.END, image=photo_image)
</pre>

<p>Následuje výpis zdrojového kódu demonstračního příkladu, v&nbsp;němž se
používá jak objekt typu <strong>BitmapImage</strong>, tak i objekt typu
<strong>PhotoImage</strong>:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
image = tkinter.BitmapImage(file="test.xbm", foreground="white")
photo_image = tkinter.PhotoImage(file="icons/application-exit.gif")
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    background="#202020",
                    width=40, height=16)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.image_create(tkinter.END, image=image)
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink    ", "pink")
text.image_create(tkinter.END, image=photo_image)
text.insert(tkinter.END, "White", "white")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-2.png" class="image-303408" alt="&#160;" width="608" height="606" />
<p><i>Obrázek 3: Text s&nbsp;různými styly i s&nbsp;vloženou bitmapou i
barevným obrázkem. Povšimněte si, že obrázek může být umístěn na stejném řádku
s&nbsp;textem ("x").</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Konfigurace tabulačních zarážek</h2>

<p>Minule jsme si ukázali, jak se nastavují rozměry widgetu
<strong>Text</strong>. Výška je specifikována v&nbsp;poču textových řádků a
šířka v&nbsp;počtu normoznaků odvozených od metriky fontu:</p>

<pre>
text = tkinter.Text(root,
                    <strong>width=40, height=16</strong>)
</pre>

<p>Kromě rozměrů widgetu je možné specifikovat i pozice tabulačních zarážek. Ty
se zadávají pomocí pojmenované volby <strong>tabs</strong>, za níž následuje
řetězec obsahující seznam značek. Seznam obsahuje pozice tabulačních zarážek;
tyto pozice jsou chápány jako vzdálenosti zarážek od levého okraje widgetu.
Pokud je za číslem udávajícím vzdálenost zapsán znak &bdquo;c&ldquo;, znamená
to, že se vzdálenost bude počítat v&nbsp;šířkách normalizovaných znaků (což je
většinou lepší, než se snažit o přepočet na pixely či na milimetry, i to je ale
možné):</p>

<pre>
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    <strong>tabs="5c 11c 18c"</strong>,
                    width=40, height=16)
</pre>

<p>Pozor na to, že použitý font může obsahovat (a většinou i obsahuje)
proporcionální znaky a v&nbsp;některých případech nemusí výpočet šířky
normalizovaných znaků proběhnout korektně &ndash; to je případ zejména různých
sharewarových TrueType fontů, které někdy mají špatně vyplněnou tabulku
s&nbsp;metrikami (tyto fonty se však nebudou chovat korektně ani v&nbsp;dalších
aplikacích, navíc dnes pro Linux existují dostatečně kvalitní open source
fonty).</p>

<p>V&nbsp;dalším demonstračním příkladu je vytvořen widget text, který bude mít
rozměry 40×16 normoznaků. Přitom jsou nastaveny dvě tabulační zarážky.
Povšimněte si, že znak tabulátoru se do řetězce zadává naprosto stejným
způsobem jako v&nbsp;mnoha dalších programovacích jazycích (C, C++, Java,
Perl):</p>

<pre>
text.insert(tkinter.END, "Mesic\tObrat\n", "nadpis")
text.insert(tkinter.END, "leden\t100\n")
...
...
...
text.insert(tkinter.END, "suma\t3900\n", "suma")
</pre>

<p>Některé řádky textu jsou zobrazeny jinou barvou a první řádek je podtržen.
Toho bylo dosaženo vytvořením tagů nadpis a suma:</p>

<pre>
text.tag_configure("nadpis", foreground="red", underline=True)
text.tag_configure("suma", foreground="blue")
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-3.png" class="image-303409" alt="&#160;" width="608" height="606" />
<p><i>Obrázek 4: Text s&nbsp;tabulačními zarážkami použitými pro vytvoření
jednoduché tabulky.</i></p>

<p>Následuje výpis zdrojového kódu demonstračního příkladu:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    tabs="5c 11c",
                    width=40, height=16)
&nbsp;
text.tag_configure("nadpis", foreground="red", underline=True)
text.tag_configure("suma", foreground="blue")
&nbsp;
text.insert(tkinter.END, "Mesic\tObrat\n", "nadpis")
text.insert(tkinter.END, "leden\t100\n")
text.insert(tkinter.END, "unor\t200\n")
text.insert(tkinter.END, "brezen\t0\n")
text.insert(tkinter.END, "duben\t1000\n")
text.insert(tkinter.END, "kveten\t100\n")
text.insert(tkinter.END, "cerven\t200\n")
text.insert(tkinter.END, "cervenec\t0\tdovolene\n")
text.insert(tkinter.END, "srpen\t1000\n")
text.insert(tkinter.END, "zari\t100\n")
text.insert(tkinter.END, "rijen\t200\n")
text.insert(tkinter.END, "listopad\t0\n")
text.insert(tkinter.END, "prosinec\t1100\tvanoce\n\n")
text.insert(tkinter.END, "suma\t3900\n", "suma")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Zarovnání textu na tabulačních zarážkách</h2>

<p>Pokud se v&nbsp;seznamu s&nbsp;tabulačními zarážkami uvede jedno ze slov
<strong>left</strong>, <strong>right</strong>, <strong>center</strong> nebo
<strong>numeric</strong>, značí to způsob zarovnání textu vůči zarážce &ndash;
zarovnání doleva, doprava, na střed a na desetinnou tečku/čárku (zarovnání na
čárku bude funkční jen se správně nastavenou lokalizací). Tato funkce se chová
stejně jako v&nbsp;textových procesorech. Například se podívejme na specifikaci
zarovnání druhého sloupce doprava a třetího sloupce doleva (první sloupec
samozřejmě začíná na levém okraji widgetu):</p>

<pre>
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    <strong>tabs="7c right 11c left"</strong>,
                    width=40, height=16)
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-4.png" class="image-303410" alt="&#160;" width="608" height="606" />
<p><i>Obrázek 5: Text s&nbsp;tabulačními zarážkami se specifikovaným způsobem
zarovnání jednotlivých sloupců &bdquo;tabulky&ldquo;.</i></p>

<p>Opět se podívejme na to, jak vypadá celý demonstrační příklad
s&nbsp;widgetem <strong>Text</strong> a s&nbsp;nakonfigurovanými tabulačními
zarážkami:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    tabs="7c right 11c left",
                    width=40, height=16)
&nbsp;
text.tag_configure("nadpis", foreground="red", underline=True)
text.tag_configure("suma", foreground="blue")
&nbsp;
text.insert(tkinter.END, "Mesic\tObrat\n", "nadpis")
text.insert(tkinter.END, "leden\t100\n")
text.insert(tkinter.END, "unor\t200\n")
text.insert(tkinter.END, "brezen\t0\n")
text.insert(tkinter.END, "duben\t1000\n")
text.insert(tkinter.END, "kveten\t100\n")
text.insert(tkinter.END, "cerven\t200\n")
text.insert(tkinter.END, "cervenec\t0\tdovolene\n")
text.insert(tkinter.END, "srpen\t1000\n")
text.insert(tkinter.END, "zari\t100\n")
text.insert(tkinter.END, "rijen\t200\n")
text.insert(tkinter.END, "listopad\t0\n")
text.insert(tkinter.END, "prosinec\t1100\tvanoce\n\n")
text.insert(tkinter.END, "suma\t3900\n", "suma")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-5.png" class="image-303411" alt="&#160;" width="608" height="606" />
<p><i>Obrázek 6: Widget Text nemá problém ani se znaky s&nbsp;nabodeníčky.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Další vlastnosti řetězců vkládaných do widgetu <strong>Text</strong></h2>

<p>S&nbsp;využitím tagů je možné nastavit i další vlastnosti textových řetězců,
které se vkládají do widgetu <strong>Text</strong>. Pro mnoho aplikací je
důležité nastavení zarovnávání textů. To je možné obstarat buď pomocí <a
href="#k05">výše zmíněných tabulačních zarážek</a> (což je mnohdy zbytečně
komplikované), nebo využitím vlastnosti <strong>justify</strong>. Této
vlastnosti lze přiřadit více hodnot: <strong>tkinter.LEFT</strong>,
<strong>tkinter.RIGHT</strong> a <strong>tkinter.CENTER</strong> (prozatím však
není k&nbsp;dispozici možnost zarovnat text do bloku).</p>

<p>Dále je možné zvýraznit okraj okolo textu (funguje korektně i pro
víceřádkový text, teoreticky se tak dají vytvořit jednodušší tabulky). Tento
okraj může být opticky buď vysunutý nebo zasunutý
(<strong>tkinter.RAISED</strong>, <strong>tkinter.SUNKEN</strong>).</p>

<p>Horní a dolní indexy se tvoří pomocí změny hodnoty vlastnosti
<strong>offset</strong>, pomocí níž je možné text vertikálně posunout vůči
textové osnově (kromě toho je vhodné text zmenšit o jeden až dva body, což je
však již ponecháno na programátoru). Nastavení všech těchto vlastností je
patrné z&nbsp;dalšího demonstračního příkladu, který rozšiřuje příklad
předchozí:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=20)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2", "sup")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

<p>Poznámka: stále se jedná o editovatelný text!</p>

<img src="https://i.iinfo.cz/images/533/tkinter8-6.png" class="image-303412" alt="&#160;" width="408" height="542" />
<p><i>Obrázek 7: Různé styly textu, včetně horních a dolních indexů.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Automatické zvýraznění textu, nad nímž se nachází kurzor myši</h2>

<p>Každý objekt vkládaný do widgetu <strong>Text</strong> (ať se jedná o
textový řetězec, obrázek či o jiný widget), může reagovat na různé události.
Vazba objektu na události se vytvoří pomocí příkazu <strong>tag_bind</strong>
při konfiguraci tagu, který je či může být objektům přiřazen:</p>

<pre>
text.tag_bind(jméno_tagu, jméno_události, volaný_kód)
</pre>

<p>Mezi podporované události patří stisk či puštění libovolného tlačítka myši,
posun kurzoru myši, přesun kurzoru myši nad objekt či opuštění hranic objektu
atd. V&nbsp;dnešním šestém demonstračním příkazu je ukázáno, jak lze
nakonfigurovat tag pojmenovaný <strong>colorOnEnter</strong> pomocí vazeb na
dvě události. První událost nastane v&nbsp;případě, že je nad hranice objektu
přesunut kurzor myši, druhá událost nastane ve chvíli opuštění hranic objektu
kurzorem myši. Tyto události se nazývají <strong>Any-Enter</strong> a
<strong>Any-Leave</strong>:</p>

<pre>
text.tag_bind("colorOnEnter", "&lt;Any-Enter&gt;",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Any-Leave&gt;",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
text.insert(tkinter.END, "active-text", "colorOnEnter")
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-7.png" class="image-303413" alt="&#160;" width="408" height="638" />
<p><i>Obrázek 8: Aktivní text není zvýrazněn.</i></p>

<img src="https://i.iinfo.cz/images/533/tkinter8-8.png" class="image-303414" alt="&#160;" width="408" height="638" />
<p><i>Obrázek 9: Zvýraznění pozadí &bdquo;aktivního&ldquo; řetězce ve widgetu
Text.</i></p>

<p>Následuje výpis zdrojového kódu šestého demonstračního příkladu:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi pres text
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Any-Enter&gt;",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "&lt;Any-Leave&gt;",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Reakce na stisk vybraného tlačítka (tlačítek) myši nad částí textu</h2>

<p>Nepatrným rozšířením zdrojového kódu popsaného <a
href="#k07">v&nbsp;předchozí kapitole</a> dosáhneme toho, že vybraný text či
texty (s&nbsp;přiřazeným tagem <strong>colorOnEnter</strong>) budou reagovat na
stisk tlačítek myši. Připomeňme si, že tlačítka myši jsou v&nbsp;knihovně
Tkinter pojmenována takto:</p>

<table>
<tr><th>Tlačítko</th><th>Pojmenování události</th></tr>
<tr><td>levé</td><td>&lt;Button-1&gt;</td></tr>
<tr><td>prostřední</td><td>&lt;Button-2&gt;</td></tr>
<tr><td>pravé</td><td>&lt;Button-3&gt;</td></tr>
</table>

<p>Registrace handlerů událostí pro stisk levého a pravého tlačítka tedy může
vypadat následovně:</p>

<pre>
text.tag_bind("colorOnEnter", "&lt;Button-1&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "&lt;Button-3&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-9.png" class="image-303415" alt="&#160;" width="408" height="638" />
<p><i>Obrázek 10: Stisk levého tlačítka myši změní barvu textu na
modrou.</i></p>

<img src="https://i.iinfo.cz/images/533/tkinter8-10.png" class="image-303416" alt="&#160;" width="408" height="638" />
<p><i>Obrázek 11: Stisk pravého tlačítka myši změní barvu textu zpět na
černou.</i></p>

<p>Opět si ukažme celý příklad ve spustitelné formě:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Any-Enter&gt;",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "&lt;Any-Leave&gt;",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# chovani pri stisku leveho a praveho tlacitka
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Button-1&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "&lt;Button-3&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

<img src="https://i.iinfo.cz/images/533/tkinter8-11.png" class="image-303417" alt="&#160;" width="408" height="638" />
<p><i>Obrázek 12: Zvýraznění textu po najetí kurzorem myši.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Další widgety vložené do widgetu <strong>Text</strong></h2>

<p>Do widgetu <strong>Text</strong> je možné kromě textových řetězců vkládat i
další objekty a widgety. Všechny tyto objekty se vytváří pomocí oken vkládaných
do textu. Na dalších dvou programových řádcích je ukázáno, jak se do textu
vkládá widget typu <strong>button</strong>:</p>

<pre>
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.insert(tkinter.END, "Brown\n", "brown")
&nbsp;
button = tkinter.Button(root, text="Exit", command=exit)
text.window_create(tkinter.END, window=button)
&nbsp;
text.insert(tkinter.END, "Pink\n", "pink")
</pre>

<p>Velmi flexibilní (ale v&nbsp;současné verzi Tkinteru stále problematické) je
vložení plátna (canvasu) do textu nebo práce s&nbsp;obrázky &ndash; touto
problematikou, která se často používá například při tvorbě prohlížečů
dokumentace nebo nápovědy, se budeme zabývat v&nbsp;navazujících
kapitolách.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Přidání dalších widgetů (tlačítka, checkboxu...) do textu</h2>

<p>Pro zajímavost si ukažme, jakým způsobem se do widgetu <strong>Text</strong>
vloží další ovládací prvky, zejména <a
href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter/?ic=serial-box&icc=text-title#k08">tlačítka</a>,
<a
href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-2-cast/#k10">checkboxy</a>
a <a
href="https://www.root.cz/clanky/graficke-uzivatelske-rozhrani-v-pythonu-knihovna-tkinter-3-cast/#k02">přepínače
(radio buttony)</a>:</p>

<img src="https://i.iinfo.cz/images/533/tkinter8-12.png" class="image-303418" alt="&#160;" width="408" height="638" />
<p><i>Obrázek 13: Další widgety vložené do textu.</i></p>

<p>Zdrojový kód příkladu:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Any-Enter&gt;",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "&lt;Any-Leave&gt;",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# chovani pri stisku leveho a praveho tlacitka
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Button-1&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "&lt;Button-3&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
&nbsp;
checkbutton = tkinter.Checkbutton(root, text="Delete Internet?",
                                  command=lambda: print("changed"))
&nbsp;
quitButton = tkinter.Button(root, text="Exit", command=exit)
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
&nbsp;
text.window_create(tkinter.END, window=checkbutton)
&nbsp;
text.insert(tkinter.END, "\nCyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
&nbsp;
text.window_create(tkinter.END, window=quitButton)
&nbsp;
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
radio_var = tkinter.StringVar()
&nbsp;
radio1 = tkinter.Radiobutton(root, variable=radio_var, value="Assembler",
                             text="Assembler")
&nbsp;
radio2 = tkinter.Radiobutton(root, variable=radio_var, value="Basic",
                             text="Basic")
&nbsp;
radio3 = tkinter.Radiobutton(root, variable=radio_var, value="Brainfuck",
                             text="Brainfuck")
&nbsp;
radio4 = tkinter.Radiobutton(root, variable=radio_var, value="C",
                             text="C")
&nbsp;
radio5 = tkinter.Radiobutton(root, variable=radio_var, value="Python",
                             text="Python")
&nbsp;
text.insert(tkinter.END, "\nMaly vyber:\n")
text.window_create(tkinter.END, window=radio1)
text.window_create(tkinter.END, window=radio2)
text.window_create(tkinter.END, window=radio3)
text.window_create(tkinter.END, window=radio4)
text.window_create(tkinter.END, window=radio5)
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Modul <strong>ScrolledText/tkinter.scrolledtext</strong></h2>

<p>K&nbsp;widgetu <strong>Text</strong> je samozřejmě možné připojit další
widget představující scrollbar, ovšem konfigurace není v&nbsp;tomto případě
příliš příjemná záležitost, neboť je nutné oba widgety správně umístit (stejná
výška, variabilní šířka textu) a navíc i navázat scrollbar na widget
<strong>Text</strong> (reakce na posun scrollbaru) a zajistit i zpětnou vazbu
(posun kurzoru v&nbsp;textu nesmí vést k&nbsp;tomu, aby kurzor z&nbsp;okna
zmizel). Aby se těmto zbytečným komplikacím zabránilo, byl vytvořen nový
(doplňkový) &bdquo;superwidget&ldquo; nazvaný <strong>ScrollText</strong> či
<strong>scrolltext</strong>, podle toho, jakou verzi Pythonu aplikace bude
používat. Už z&nbsp;odlišného pojmenování je patrné, že se nejedná o součást
původní standardní sady widgetů knihovny Tkinter:</p>

<img src="https://i.iinfo.cz/images/533/tkinter8-13.png" class="image-303419" alt="&#160;" width="391" height="500" />
<p><i>Obrázek 14: Doplňkový widget <strong>ScrollText</strong>.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Příklad použití modulu <strong>ScrolledText</strong> &ndash; varianta pro Python 2.x</h2>

<p>Ve variantě aplikace používající widget <strong>ScrolledText</strong>, která
je psaná pro Python 2.x, je zapotřebí provést následující kroky:</p>

<p>Import modulu (liší se od Pythonu 3.x!):</p>

<pre>
from ScrolledText import *
</pre>

<p>Konstrukce widgetu (jeho jméno se opět od Pythonu 3.x odlišuje):</p>

<pre>
text = ScrolledText(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
</pre>

<p>Úplný zdrojový text příkladu:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
from ScrolledText import *
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = ScrolledText(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Any-Enter&gt;",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "&lt;Any-Leave&gt;",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# chovani pri stisku leveho a praveho tlacitka
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Button-1&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "&lt;Button-3&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
&nbsp;
def on_checkbutton():
    print "Changed"
&nbsp;
checkbutton = tkinter.Checkbutton(root, text="Delete Internet?",
                                  command=on_checkbutton)
&nbsp;
quitButton = tkinter.Button(root, text="Exit", command=exit)
&nbsp;
# prace s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
&nbsp;
text.window_create(tkinter.END, window=checkbutton)
&nbsp;
text.insert(tkinter.END, "\nCyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
&nbsp;
text.window_create(tkinter.END, window=quitButton)
&nbsp;
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
radio_var = tkinter.StringVar()
&nbsp;
radio1 = tkinter.Radiobutton(root, variable=radio_var, value="Assembler",
                             text="Assembler")
&nbsp;
radio2 = tkinter.Radiobutton(root, variable=radio_var, value="Basic",
                             text="Basic")
&nbsp;
radio3 = tkinter.Radiobutton(root, variable=radio_var, value="Brainfuck",
                             text="Brainfuck")
&nbsp;
radio4 = tkinter.Radiobutton(root, variable=radio_var, value="C",
                             text="C")
&nbsp;
radio5 = tkinter.Radiobutton(root, variable=radio_var, value="Python",
                             text="Python")
&nbsp;
text.insert(tkinter.END, "\nMaly vyber:\n")
text.window_create(tkinter.END, window=radio1)
text.window_create(tkinter.END, window=radio2)
text.window_create(tkinter.END, window=radio3)
text.window_create(tkinter.END, window=radio4)
text.window_create(tkinter.END, window=radio5)
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Příklad použití modulu <strong>tkinter.scrolledtext</strong> &ndash; varianta pro Python 3.x</h2>

<p>Verze příkladu s&nbsp;widgetem <strong>tkinter.scrolledtext</strong> pro
Python 3 má oproti předchozí variantě tyto rozdíly.</p>

<p>Odlišný modul pro import:</p>

<pre>
from tkinter.scrolledtext import *
</pre>

<p>Jiný konstruktor:</p>

<pre>
text = ScrolledText(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
</pre>

<p>Zjednodušenou reakci (handler) na událost:</p>

<pre>
checkbutton = tkinter.Checkbutton(root, text="Delete Internet?",
                                  command=lambda: print("changed"))
</pre>

<p>Celý příklad vypadá takto:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
from tkinter.scrolledtext import *
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = ScrolledText(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Any-Enter&gt;",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "&lt;Any-Leave&gt;",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# chovani pri stisku leveho a praveho tlacitka
&nbsp;
text.tag_bind("colorOnEnter", "&lt;Button-1&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "&lt;Button-3&gt;",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
&nbsp;
checkbutton = tkinter.Checkbutton(root, text="Delete Internet?",
                                  command=lambda: print("changed"))
&nbsp;
quitButton = tkinter.Button(root, text="Exit", command=exit)
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
&nbsp;
text.window_create(tkinter.END, window=checkbutton)
&nbsp;
text.insert(tkinter.END, "\nCyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
&nbsp;
text.window_create(tkinter.END, window=quitButton)
&nbsp;
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
radio_var = tkinter.StringVar()
&nbsp;
radio1 = tkinter.Radiobutton(root, variable=radio_var, value="Assembler",
                             text="Assembler")
&nbsp;
radio2 = tkinter.Radiobutton(root, variable=radio_var, value="Basic",
                             text="Basic")
&nbsp;
radio3 = tkinter.Radiobutton(root, variable=radio_var, value="Brainfuck",
                             text="Brainfuck")
&nbsp;
radio4 = tkinter.Radiobutton(root, variable=radio_var, value="C",
                             text="C")
&nbsp;
radio5 = tkinter.Radiobutton(root, variable=radio_var, value="Python",
                             text="Python")
&nbsp;
text.insert(tkinter.END, "\nMaly vyber:\n")
text.window_create(tkinter.END, window=radio1)
text.window_create(tkinter.END, window=radio2)
text.window_create(tkinter.END, window=radio3)
text.window_create(tkinter.END, window=radio4)
text.window_create(tkinter.END, window=radio5)
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů naleznete pod
následujícími odkazy:</p>

<table>
<tr><th>Příklad</th><th>Odkaz</th></tr>
<tr><td>88_text_more_styles.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/88_text_more_styles.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/88_text_more_styles.py</a></td></tr>
<tr><td>89_text_images.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/89_text_images.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/89_text_images.py</a></td></tr>
<tr><td>90_tab_stops.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/90_tab_stops.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/90_tab_stops.py</a></td></tr>
<tr><td>91_text_align.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/91_text_align.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/91_text_align.py</a></td></tr>
<tr><td>92_advanced_styles.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/92_advanced_styles.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/92_advanced_styles.py</a></td></tr>
<tr><td>93_text_interaction.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/93_text_interaction.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/93_text_interaction.py</a></td></tr>
<tr><td>94_text_interaction_2.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/94_text_interaction_2.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/94_text_interaction_2.py</a></td></tr>
<tr><td>95_text_and_other_widgets.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/95_text_and_other_widgets.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/95_text_and_other_widgets.py</a></td></tr>
<tr><td>96_text_with_scrollbar_python2.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/96_text_with_scrollbar_python2.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/96_text_with_scrollbar_python2.py</a></td></tr>
<tr><td>97_text_with_scrollbar_python3.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/97_text_with_scrollbar_python3.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/97_text_with_scrollbar_python3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>test.xbm</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/test.xbm">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/test.xbm</a></td></tr>
</table>

<p>Poznámka: poslední soubor <strong>test.xbm</strong> je bitmapou použitou
v&nbsp;některých demonstračních příkladech. Tato bitmapa musí být umístěna ve
stejném adresáři, jako všechny příklady.</p>

<img src="https://i.iinfo.cz/images/533/tkinter8-14.png" class="image-303420" alt="&#160;" width="287" height="170" />
<p><i>Obrázek 15: V&nbsp;poslední části článku o knihovně Tkinter se budeme
zabývat mj. i problematikou tvorby dialogů.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Odkazy na Internetu</h2>

<ol>

<li>Hra Breakout napísaná v Tkinteri<br />
<a href="https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/">https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/</a>
</li>

<li>Hra Snake naprogramovaná v Pythone s pomocou Tkinter<br />
<a href="https://www.root.cz/clanky/hra-snake-naprogramovana-v-pythone-s-pomocou-tkinter/">https://www.root.cz/clanky/hra-snake-naprogramovana-v-pythone-s-pomocou-tkinter/</a>
</li>

<li>Python Tkinter Fonts<br />
<a href="https://www.tutorialspoint.com/python/tk_fonts.htm">https://www.tutorialspoint.com/python/tk_fonts.htm</a>
</li>

<li>The Tkinter Canvas Widget<br />
<a href="http://effbot.org/tkinterbook/canvas.htm">http://effbot.org/tkinterbook/canvas.htm</a>
</li>

<li>Ovládací prvek (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29">https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29</a>
</li>

<li>Rezervovaná klíčová slova v&nbsp;Pythonu<br />
<a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords">https://docs.python.org/3/reference/lexical_analysis.html#keywords</a>
</li>

<li>TkDocs: Styles and Themes<br />
<a href="http://www.tkdocs.com/tutorial/styles.html">http://www.tkdocs.com/tutorial/styles.html</a>
</li>

<li>Drawing in Tkinter<br />
<a href="http://zetcode.com/gui/tkinter/drawing/">http://zetcode.com/gui/tkinter/drawing/</a>
</li>

<li>Changing ttk widget text color (StackOverflow)<br />
<a href="https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color">https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color</a>
</li>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>appJar<br />
<a href="http://appjar.info/">http://appjar.info/</a>
</li>

<li>appJar (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/AppJar">https://en.wikipedia.org/wiki/AppJar</a>
</li>

<li>appJar na Pythonhosted<br />
<a href="http://pythonhosted.org/appJar/">http://pythonhosted.org/appJar/</a>
</li>

<li>Stránky projektu PyGTK<br />
<a href="http://www.pygtk.org/">http://www.pygtk.org/</a>
</li>

<li>PyGTK (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PyGObject<br />
<a href="https://wiki.gnome.org/Projects/PyGObject">https://wiki.gnome.org/Projects/PyGObject</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Stránky projektu PyQt<br />
<a href="https://riverbankcomputing.com/software/pyqt/intro">https://riverbankcomputing.com/software/pyqt/intro</a>
</li>

<li>PyQt (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PySide<br />
<a href="https://wiki.qt.io/PySide">https://wiki.qt.io/PySide</a>
</li>

<li>PySide (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PySide">https://en.wikipedia.org/wiki/PySide</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>

<li>Kivy (framework, Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Kivy_(framework)">https://en.wikipedia.org/wiki/Kivy_(framework)</a>

<li>QML Applications<br />
<a href="http://doc.qt.io/qt-5/qmlapplications.html">http://doc.qt.io/qt-5/qmlapplications.html</a>
</li>

<li>KDE<br />
<a href="https://www.kde.org/">https://www.kde.org/</a>
</li>

<li>Qt<br />
<a href="https://www.qt.io/">https://www.qt.io/</a>
</li>

<li>GNOME<br />
<a href="https://en.wikipedia.org/wiki/GNOME">https://en.wikipedia.org/wiki/GNOME</a>
</li>

<li>Category:Software that uses PyGTK<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK</a>
</li>

<li>Category:Software that uses PyGObject<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject</a>
</li>

<li>Category:Software that uses wxWidgets<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets">https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets</a>
</li>

<li>GIO<br />
<a href="https://developer.gnome.org/gio/stable/">https://developer.gnome.org/gio/stable/</a>
</li>

<li>GStreamer<br />
<a href="https://gstreamer.freedesktop.org/">https://gstreamer.freedesktop.org/</a>
</li>

<li>GStreamer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GStreamer">https://en.wikipedia.org/wiki/GStreamer</a>
</li>

<li>Wax Gui Toolkit<br />
<a href="https://wiki.python.org/moin/Wax">https://wiki.python.org/moin/Wax</a>
</li>

<li>Python Imaging Library (PIL)<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/pil/">http://infohost.nmt.edu/tcc/help/pubs/pil/</a>
</li>

<li>Why Pyjamas Isn’t a Good Framework for Web Apps (blogpost z&nbsp;roku 2012)<br />
<a href="http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/">http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

