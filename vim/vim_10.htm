<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textový editor Vim jako IDE (10.část: různé tipy a triky)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textový editor Vim jako IDE (10.část: různé tipy a triky)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V desáté části seriálu o použití textového editoru Vim (nejenom) ve funkci vývojového prostředí si popíšeme další tipy a triky, které je možné v tomto editoru provádět. Ukážeme si především způsob změny barvy a tvaru textového kurzoru i možnosti konfigurace myši. Taktéž si řekneme, jak se mapují různé operace či makra na klávesy či kombinace kláves i možné problémy způsobené rekurzivním mapováním.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Nastavení tvaru a barvy textového kurzoru při práci Vimu s&nbsp;podporou GUI</a></p>
<p><a href="#k02">2. Možnosti volby &bdquo;guicursor&ldquo; &ndash; volba režimu, pro nějž se má kurzor nastavit</a></p>
<p><a href="#k03">3. Možnosti volby &bdquo;guicursor&ldquo; &ndash; volba barvy, tvaru a blikání kurzoru</a></p>
<p><a href="#k04">4. Řádkový a sloupcový kurzor v&nbsp;GUI i terminálu</a></p>
<p><a href="#k05">5. Změna tvaru kurzoru myši a automatické skrývání kurzoru myši při editaci</a></p>
<p><a href="#k06">6. Mapování funkcí/příkazů na různé klávesy a jejich kombinace</a></p>
<p><a href="#k07">7. Ukázka využití mapování příkazů</a></p>
<p><a href="#k08">8. Problémy s&nbsp;rekurzivním mapováním, zrušení mapování</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2>1. Nastavení tvaru a barvy textového kurzoru při práci Vimu s&nbsp;podporou GUI</h2>

<p>Prvním trikem, který si v&nbsp;dnešním článku ukážeme, je konfigurace tvaru,
barvy i chování textového kurzoru v&nbsp;případě, že je editor <i>Vim</i>
spuštěný s&nbsp;podporou grafického uživatelského rozhraní, tj.&nbsp;tehdy,
když je použita volba <strong>vim -g</strong>, popř.&nbsp;je použit příkaz
<strong>gvim</strong>. Na tomto místě je vhodné zdůraznit, že dále uvedené
příkazy nebudou plně funkční v&nbsp;případě, že je textový editor <i>Vim</i>
spuštěn v&nbsp;emulátoru terminálu, či dokonce na fyzickém terminálu
(v&nbsp;Linuxu je z&nbsp;X Window Systemu přístupný například přes klávesovou
kombinaci Ctrl+Alt+F1), protože způsob zobrazení kurzoru je v&nbsp;takových
případech závislý buď na nastavení emulátoru terminálu nebo na konfiguraci
hardware terminálu fyzického (jednou z&nbsp;výjimek je DOS a konzole ve
Windows, kde lze částečně určit tvar kurzoru). Všechny vlastnosti textového
kurzoru (při spuštění v&nbsp;GUI) jsou určeny konfiguračním parametrem
<strong>guicursor</strong> a taktéž příkazem <strong>highlight</strong>, kterým
se nastavují barvy kurzoru v&nbsp;jednotlivých režimech.</p>

<a href="http://i.iinfo.cz/images/79/vim10-1.png"><img src="http://i.iinfo.cz/images/79/vim10-1-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 1: Ukázka nastavení tvaru a barvy textového kurzoru pro Vim
spuštěný s&nbsp;podporou grafického uživatelského rozhraní. Kurzor
v&nbsp;normálním režimu má tvar plného bloku a ve všech režimech je vypnuto
jeho blikání.</i></p>

<p>Vzhledem k&nbsp;tomu, že hodnotou konfiguračního parametru
<strong>guicursor</strong> může být i poměrně komplikovaný řetězec, ukážeme si
napřed příklad z&nbsp;praxe:</p>

<pre>
:" výpis aktuálně nastavené hodnoty konfiguračního parametru guicursor
:set guicursor?
n-c-v:block-Cursor2,i-ci:block-Cursor3,r-cr:block-Cursor,a:blinkon0,v:ver20-Cursor2
</pre>

<p>Z&nbsp;vypsané hodnoty konfiguračního parametru <strong>guicursor</strong>
můžeme vyčíst, že se jedná (podobně jako u některých parametrů popsaných
v&nbsp;předchozích částech tohoto seriálu) o seznam dvojic oddělených čárkou,
přičemž každá dvojice je složena ze specifikace režimu, dvojtečky a hodnoty,
kterou je určen tvar kurzoru, jeho barva (resp.&nbsp;skupina obarvená příkazem
<strong>highlight</strong>) a taktéž režim blikání kurzoru. Výše uvedený
konfigurační řetězec se tedy rozpadá do několika skupin:</p>

<table>
<tr><th>Skupina</th><th>Význam (režim)</th><th>Význam (vlastnost kurzoru)</th></tr>
<tr><td>n-c-v:block-Cursor2</td><td>normální, příkazový a výběrový režim</td><td>blokový kurzor, barva určena pomocí <strong>highlight Cursor2</strong></td></tr>
<tr><td>i-ci:block-Cursor3</td><td>vkládací režim</td><td>blokový kurzor, barva určena pomocí <strong>highlight Cursor3</strong></td></tr>
<tr><td>r-cr:hor25-Cursor</td><td>přepisovací režim</td><td>vodorovný kurzor _, barva určena pomocí <strong>highlight Cursor</strong></td></tr>
<tr><td>a:blinkon0</td><td>platné pro všechny režimy</td><td>vypnutí blikání kurzoru</td></tr>
<tr><td>v:ver20-Cursor2</td><td>platné jen pro výběrový režim</td><td>svislý kurzor |, barva určena pomocí <strong>highlight Cursor2</strong></td></tr>
</table>

<a href="http://i.iinfo.cz/images/79/vim10-2.png"><img src="http://i.iinfo.cz/images/79/vim10-2-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 2: Změna tvaru, barvy a blikání textového kurzoru pro Vim
spuštěný s&nbsp;podporou grafického uživatelského rozhraní. Kurzor pro normální
režim byl změněn na vodorovnou zelenou čárku o tloušťce odpovídající jedné
desetině výšky znaků.</i></p>

<p>Vidíme, že pro různé režimy textového editoru <i>Vim</i> je možné nastavit
různé tvary kurzoru, jejich barvy i způsob blikání (či blikání zcela vypnout,
osobně mi například jakýkoli animovaný prvek na obrazovce spíše vadí). To je
zajisté výhodné, protože textový kurzor se vždy nachází v&nbsp;místě, na které
se soustředí uživatel, tudíž lze jeho tvarem a barvou velmi jednoduše
signalizovat aktuální režim <i>Vimu</i>, aniž by bylo nutné se dívat na
pravítko či stavovou řádku, kde je možné mít režim taktéž zobrazený; viz též
následující parametry:</p>

<pre>
:set (no)showmode
:set (no)ruler 
:set statusline=...
:set rulerformat=...
</pre>



<p><a name="k02"></a></p>
<h2>2. Možnosti volby &bdquo;guicursor&ldquo; &ndash; volba režimu, pro nějž se má kurzor nastavit</h2>

<p>Podívejme se nyní podrobněji na možnosti konfiguračního parametru
<strong>guicursor</strong>. Začněme specifikátorem režimu. Může se jednat o
libovolnou kombinaci následujících kódů, které jsou od sebe odděleny pomlčkou,
takže například řetězec <strong>n-v</strong> vybírá normální a současně i
vizuální režim:</p>

<table>
<tr><th>Kód režimu</th><th>Význam zkratky</th><th>Popis</th></tr>
<tr><td>n </td><td>normal</td><td>normální režim</td></tr>
<tr><td>o </td><td>operator</td><td>normální režim ve chvíli očekávání operátoru (posun kurzoru), běžně se odvozuje od vlastností nastavených pro normální režim</td></tr>
<tr><td>i </td><td>insert</td><td>vkládací režim (příkazy a, A, i, I, o, O, c apod.)</td></tr>
<tr><td>r </td><td>replace</td><td>přepisovací režim (příkazy r a R)</td></tr>
<tr><td>c </td><td>command</td><td>příkazový režim (barva kurzoru umístěného za posledním zapsaným znakem)</td></tr>
<tr><td>ci</td><td>command</td><td>příkazový režim při nastavení vkládání (přepíná se klávesou INSERT)</td></tr>
<tr><td>cr</td><td>command</td><td>příkazový režim při nastavení přepisování (přepíná se klávesou INSERT)</td></tr>
<tr><td>v </td><td>visual</td><td>vizuální (výběrový) režim</td></tr>
<tr><td>ve</td><td>visual exclusive</td><td>vizuální (výběrový) režim při nastavení exclusive (poslední znak není zahrnut do výběru)</td></tr>
<tr><td>sm</td><td>showmatch</td><td>zobrazení párového znaku ve vkládacím režimu (kurzor se na chvíli může přesunout na párovou závorku atd.)</td></tr>
<tr><td>a</td><td>all</td><td>všechny režimy</td></tr>
</table>

<a href="http://i.iinfo.cz/images/264/vim05-1.png"><img src="http://i.iinfo.cz/images/264/vim05-1-prev.png" width="370" height="243" alt=" " /></a>
<p><i>Obrázek 3: Pokud je Vim spuštěn v&nbsp;terminálu (tj.&nbsp;bez podpory
GUI), není možné jeho kurzor žádným významnějším způsobem konfigurovat přímo
z&nbsp;Vimu &ndash; pro tuto činnost je nutné použít konfiguraci terminálu, což
ovšem znamená, že například není možné signalizovat přepnutí režimu prostou
změnou barvy kurzoru.</i></p>



<p><a name="k03"></a></p>
<h2>3. Možnosti volby &bdquo;guicursor&ldquo; &ndash; volba barvy, tvaru a blikání kurzoru</h2>

<p>Za kódem režimu či režimů se zapisuje dvojtečka a za ní další parametry,
které jsou od sebe oddělené pomlčkou:</p>

<table>
<tr><th>Parametr</th><th>Význam</th></tr>
<tr><td>block</td><td>blokový kurzor (kurzor má tvar obdélníku s&nbsp;plochou přesně o velikosti jednoho znaku)</td></tr>
<tr><td>horXX</td><td>kurzor má tvar horizontální čáry o šířce XX procent výšky znaků (nenastavujte více než 100, jinak se kurzor nebude dobře překreslovat)</td></tr>
<tr><td>verXX</td><td>kurzor má tvar vertikální čáry o šířce XX procent šířky znaků (nenastavujte více než 100, jinak se kurzor nebude dobře překreslovat)</td></tr>
<tr><td>blinkonNN</td><td>interval, kdy je kurzor viditelný, zadaný v&nbsp;milisekundách (0=kurzor nebliká)</td></tr>
<tr><td>blinkoffNN</td><td>interval, kdy je kurzor viditelný, zadaný v&nbsp;milisekundách</td></tr>
<tr><td>blinkwaitNN</td><td>interval, kdy je kurzor po přesunu zobrazený bez blikání, zadaný v&nbsp;milisekundách</td></tr>
<tr><td>jiný text</td><td>jméno skupiny specifikované příkazem highlight</td></tr>
</table>

<a href="http://i.iinfo.cz/images/79/vim10-3.png"><img src="http://i.iinfo.cz/images/79/vim10-3-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 4: Příklad špatně překresleného okna v&nbsp;případě, že je
použita volba<br />
:set guicursor=a:ver200,<br />
tj.&nbsp;šířka textového kurzoru je nastavena na dvojnásobek (200 %) šířky
znaků.</i></p>

<p>Použití jména skupiny pro změnu barvy kurzoru je jednoduché. Následující
sekvence příkazů například nastaví barvu kurzoru pro všechny režimy na čistě
žlutou, znaky pod kurzorem budou zobrazeny tmavě červenou barvou. Kurzor má
tvar horizontální čárky, která má tloušťku jedné čtvrtiny výšky znaků (přesněji
řečeno jedné čtvrtiny výšky znaků plus hodnoty <strong>linespace</strong>
popsané v&nbsp;první části tohoto seriálu, tato hodnota je však v&nbsp;naprosté
většině případů nastavená na nulu):</p>

<pre>
:set guicursor=a:hor25-myCursorStyle
:highlight myCursorStyle guibg=yellow guifg=darkred
</pre>

<p>Teoreticky ji sice možné definovat ve skupině <strong>myCursorStyle</strong>
i vlastnosti pro textový terminál, například:</p>

<pre>
:set guicursor=a:hor25-myCursorStyle
:highlight myCursorStyle guibg=yellow guifg=darkred ctermfg=red ctermbg=blue cterm=underline
</pre>

<p>Sami se však můžete přesvědčit, že se tvar kurzoru ani styl písma pod ním
nebude měnit.</p>

<p>Následující příkaz nastaví blikání kurzoru takovým způsobem, že po poslední
operaci je kurzor trvale zobrazen půl sekundy a posléze začne blikat
s&nbsp;frekvencí přibližně 5 Hz (se střídou 1:1):</p>

<pre>
:set guicursor=a:block-blinkwait500-blinkon100-blinkoff100-myCursorColor
</pre>

<a href="http://i.iinfo.cz/images/79/vim10-4.png"><img src="http://i.iinfo.cz/images/79/vim10-4-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 5: Tvar a barva textového kurzoru při použití volby<br />
:set guicursor=a:block-myCursorStyle<br />
v&nbsp;případě, že je pozadí stylu myCursorStyle nastaveno na čistě žlutou
barvu.</i></p>



<p><a name="k04"></a></p>
<h2>4. Řádkový a sloupcový kurzor v&nbsp;GUI i terminálu</h2>

<p>Vraťme se ještě na chvíli k&nbsp;problematice zvýraznění místa, v&nbsp;němž
se nachází textový kurzor. Již ve čtvrté části tohoto seriálu jsme si řekli, že
kromě samotného textového kurzoru je možné v&nbsp;sedmé verzi <i>Vimu</i>
zvýraznit i řádek, na kterém se textový kurzor nachází. Toto nastavení je
platné jak pro <i>Vim</i> pracující v&nbsp;grafickém uživatelském rozhraní, tak
i pro <i>Vim</i> spuštěný v&nbsp;textovém režimu, tj.&nbsp;na konzoli či
v&nbsp;emulátoru terminálu. Nejprve je nutné povolit zobrazení &bdquo;řádkového
kurzoru&ldquo; a posléze lze nastavit jeho barvu pro GUI i terminál, například
následujícím způsobem:</p>

<pre>
:set cursorline
:highlight CursorLine guibg=#2d2d2d ctermbg=blue cterm=NONE
</pre>

<p>Pokud emulátor terminálu/fyzický terminál nedokáže korektně pracovat
s&nbsp;barvami, je možné celý řádek alespoň zvýraznit tučným písmem, podtrhnout
ho, nebo zobrazit inverzně (záleží ovšem jen na konfiguraci a schopnostech
terminálu, jak řádkový kurzor ve skutečnosti zobrazí):</p>

<pre>
:set cursorline
:highlight CursorLine cterm=bold term=bold
</pre>

<p>nebo:</p>

<pre>
:set cursorline
:highlight CursorLine cterm=inverse term=inverse
</pre>

<p>popř.:</p>

<pre>
:set cursorline
:highlight CursorLine cterm=underline term=underline
</pre>

<a href="http://i.iinfo.cz/images/42/vim04-15.png"><img src="http://i.iinfo.cz/images/42/vim04-15-prev.png" width="370" height="221" alt=" " /></a>
<p><i>Obrázek 6: Textový editor Vim spuštěný s&nbsp;grafickým uživatelským
rozhraním se zvýrazněným &bdquo;řádkovým&ldquo; kurzorem.</i></p>

<p>Podobným způsobem je možné zvýraznit sloupec, na kterém se textový kurzor
nachází, viz též následující příklad:</p>

<pre>
:set cursorcolumn
:highlight CursorColumn guibg=#2d2d2d ctermbg=darkred cterm=NONE
</pre>

<p>Výše uvedené příkazy nemají žádný vliv na tvar ani barvu samotného textového
kurzoru! Taktéž je dobré vědět, že výkon <i>Vimu</i> může být při zobrazení
řádkového a textového kurzoru nižší, a to zejména při práci na vzdáleném
počítači, protože se počet překreslených znaků (textový režim) či pixelů
(grafický režim) dosti podstatným způsobem zvyšuje při každém pohybu kurzoru.
Funkce řádkového i sloupcového kurzoru taktéž nemusí pracovat k&nbsp;plné
spokojenosti v&nbsp;případě, že se editují delší textové řádky rozdělené na
obrazovce pomocí volby <strong>:set wrap</strong>. V&nbsp;tomto případě totiž
<i>Vim</i> zobrazuje řádkový kurzor na celém logickém řádku, který může
přesáhnout přes více obrazovkových řádků.</p>

<a href="http://i.iinfo.cz/images/42/vim04-16.png"><img src="http://i.iinfo.cz/images/42/vim04-16-prev.png" width="370" height="221" alt=" " /></a>
<p><i>Obrázek 7: Textový editor Vim spuštěný s&nbsp;grafickým uživatelským
rozhraním se zvýrazněným &bdquo;řádkovým&ldquo; i &bdquo;sloupcovým&ldquo;
kurzorem.</i></p>



<p><a name="k05"></a></p>
<h2>5. Změna tvaru kurzoru myši a automatické skrývání kurzoru myši při editaci</h2>

<p>V&nbsp;textovém editoru <i>Vim</i> spuštěném s&nbsp;podporou GUI
(<strong>gvim, vim -g</strong>) je možné měnit tvar kurzoru myši
v&nbsp;závislosti na tom, jaká operace je v&nbsp;daný okamžik prováděna. Jedná
se tedy o podobnou funkci, jakou jsme si popsali v&nbsp;předchozích třech
kapitolách u textového kurzoru. Tvar kurzoru myši se mění pomocí konfiguračního
parametru:</p>

<pre>
:set mouseshape=
</pre>

<p>Hodnotou tohoto konfiguračního parametru je seznam dvojic obsahujících
režim, v&nbsp;němž se editor může nacházet a tvar kurzoru myši pro tento režim.
Mezi jménem režimu a tvarem kurzoru se zapisuje dvojtečka, jednotlivé dvojice
jsou od sebe odděleny čárkou. Mezi režimy, pro něž je možné automaticky měnit
tvar kurzoru myši, patří především:</p>

<table>
<tr><th>Jméno režimu</th><th>Význam</th></tr>
<tr><td>n</td><td>normální režim</td></tr>
<tr><td>v</td><td>režim vizuálního výběru</td></tr>
<tr><td>i</td><td>vkládací režim (příkazy a, A, i, I, o, O, c apod.)</td></tr>
<tr><td>r</td><td>přepisovací režim (příkazy r a R)</td></tr>
<tr><td>o</td><td>normální režim ve chvíli, kdy očekává zadání pohybového příkazu (w,e,j atd.)</td></tr>
</table>

<a href="http://i.iinfo.cz/images/79/vim10-5.png"><img src="http://i.iinfo.cz/images/79/vim10-5-prev.png" width="370" height="213" alt="&#160;" /></a>
<p><i>Obrázek 8: Textový editor Vim spuštěný v&nbsp;terminálu se zvýrazněným
&bdquo;řádkovým&ldquo; kurzorem.</i></p>

<p>V&nbsp;následující tabulce jsou vypsána jména těch tvarů kurzoru, které je
možné použít jak v&nbsp;Unixu s&nbsp;běžícím X Window Systemem, tak i
v&nbsp;operačním systému MS Windows:</p>

<table>
<tr><th>Jméno tvaru</th><th>Význam</th></tr>
<tr><td>arrow    </td><td>výchozí tvar kurzoru myši</td></tr>
<tr><td>blank    </td><td>neviditelný kurzor</td></tr>
<tr><td>beam     </td><td>kurzor ve tvaru I (používán běžně v&nbsp;editačních polích GUI)</td></tr>
<tr><td>updown   </td><td>vertikální šipka (v&nbsp;GUI běžně signalizuje změnu velikosti)</td></tr>
<tr><td>leftright</td><td>horizontální šipka (v&nbsp;GUI běžně signalizuje změnu velikosti)</td></tr>
<tr><td>up-arrow </td><td>šipka směřující nahoru</td></tr>
<tr><td>busy     </td><td>většinou animovaný kurzor používaný při déletrvajících operacích</td></tr>
<tr><td>no       </td><td>kurzor ve tvaru X (zakázaná operace...)</td></tr>
</table>

<p>Následuje ukázka změny tvaru kurzoru myši pro různé režimy pomocí parametru
<strong>mouseshape</strong>:</p>

<pre>
:set mouseshape=i:beam,r:beam,n:arrow,o:no,v:leftright
</pre>

<p>což lze zkrátit na:</p>

<pre>
:set mouseshape=i-r:beam,n:arrow,o:no,v:leftright
</pre>

<a href="http://i.iinfo.cz/images/79/vim10-6.png"><img src="http://i.iinfo.cz/images/79/vim10-6-prev.png" width="370" height="213" alt="&#160;" /></a>
<p><i>Obrázek 9: Textový editor Vim spuštěný v&nbsp;terminálu se zvýrazněným
&bdquo;řádkovým&ldquo; i &bdquo;sloupcovým&ldquo; kurzorem.</i></p>

<p>Další možností změny chování kurzoru myši je jeho automatické skrývání
v&nbsp;případě, že jsou prováděny běžné editační operace z&nbsp;klávesnice,
nebo je vytvářen nový text ve vkládacím režimu. Při těchto operacích není nutné
myš vůbec používat, kurzor myši může naopak při práci s&nbsp;<i>Vimem</i>
překážet, protože se nachází před textem. Náprava je v&nbsp;tomto případě velmi
snadná &ndash; postačuje použít volbu:</p>

<pre>
:set mousehide
</pre>

<p>V&nbsp;případě, že je tato volba použita, je kurzor myši automaticky skryt
při zápisu znaků z&nbsp;klávesnice. Kurzor se opět objeví při jakékoli
manipulaci s&nbsp;myší, buď při jejím pohybu, nebo při stlačení libovolné
kombinace tlačítek či scrollovacího kolečka. Jedná se o volbu globální,
tj.&nbsp;je platná pro všechna podokna <i>Vimu</i> i všechny editované buffery.
Vypnutí automatického skrývání kurzoru myši zařídí příkaz:</p>

<pre>
:set nomousehide
</pre>



<p><a name="k06"></a></p>
<h2>6. Mapování funkcí/příkazů na různé klávesy a jejich kombinace</h2>

<p>Mezi jednu z&nbsp;nejužitečnějších vlastností textového editoru <i>Vim</i>
patří i možnost mapování libovolných příkazů na prakticky libovolné sekvence
kláves, a to navíc v&nbsp;závislosti na použitém režimu, ve kterém se
v&nbsp;daný okamžik textový editor nachází. V&nbsp;předchozích devíti dílech
tohoto seriálu jsme se s&nbsp;mapováním příkazů již několikrát setkali, takže
si pouze v&nbsp;rychlosti ukážeme, jak lze vytvořit de facto nové příkazy
v&nbsp;normálním režimu pomocí příkazu <strong>:map</strong>:</p>

<pre>
" uložení souboru při stisku klávesy F2
" (ukončující entita &lt;cr&gt; zajišťuje automatické spuštění
" příkazu bez nutnosti stlačovat Enter)
:map &lt;F2&gt; :w&lt;cr&gt;

" zavolání externího příkazu make při stisku klávesy F9
:map &lt;F9&gt; :!make&lt;cr&gt;

" kompilace právě editovaného souboru při stisku klávesy F7
:map &lt;F7&gt; :!gcc -c %&lt;cr&gt;

" posun jednoho řádku doleva či doprava pomocí
" klávesových zkratek Tab a Shift+Tab
map &lt;Tab&gt; &gt;&gt;
map &lt;S-Tab&gt; &lt;&lt;
</pre>

<p>Kromě vytváření nových příkazů je možné měnit i příkazy již existující.
Například lze zjednodušit posun kurzoru nahoru a dolů v&nbsp;dlouhém textovém
řádku (rozděleném na obrazovce na více řádků volbou <strong>:set wrap</strong>)
pomocí těchto mapování:</p>

<pre>
:map k gk
:map j gj
</pre>

<p>Kromě mapování klávesových zkratek v&nbsp;normálním režimu je možné
přiřazovat význam klávesám v&nbsp;režimu vkládacím příkazem
<strong>:imap</strong>:</p>

<pre>
" pohyb kurzoru ve vkládacím režimu
" na začátek a konec řádku
:imap &lt;C-A&gt;      &lt;C-O&gt;g0
:imap &lt;C-E&gt;      &lt;C-O&gt;g$

" nové příkazy určené pro
" mazání znaků ve vkládacím režimu
:imap &lt;C-Y&gt;      &lt;C-O&gt;dd
:imap &lt;C-Q&gt;      &lt;C-O&gt;D
:imap &lt;C-T&gt;      &lt;C-O&gt;dw
:imap &lt;C-G&gt;      &lt;Del&gt;
</pre>

<p>Povšimněte si, že se v&nbsp;předchozích příkladech používá klávesová zkratka
Ctrl+O zajišťující přepnutí z&nbsp;režimu vkládacího či přepisovacího do režimu
normálního, ovšem pouze pro provedení jednoho příkazu. Tuto klávesovou zkratku
je mimochodem nutné využívat v&nbsp;případě, že je <i>Vim</i> vyvolán
příkazem:</p>

<pre>
evim
</pre>

<p>nebo:</p>

<pre>
vim -y
</pre>

<p>Při tomto způsobu spuštění se <i>Vim</i> snaží simulovat chování běžných
nemodálních textových editorů (i když ve skutečnosti žádný editor NENÍ
zcela nemodální).</p>



<p><a name="k07"></a></p>
<h2>7. Ukázka využití mapování příkazů</h2>

<p>Příkazem <strong>:vmap</strong> lze vytvářet nové klávesové zkratky pro
vizuální režim, tj.&nbsp;pro režim, v&nbsp;němž se vybírá textová oblast:</p>

<pre>
" posun vybraných řádků doleva či doprava pomocí
" klávesových zkratek Tab a Shift+Tab
" s obnovením výběru (výběr se tedy nezruší!)
:vmap &lt;Tab&gt; &gt;gv
:vmap &lt;S-Tab&gt; &lt;gv
</pre>

<p>To je v&nbsp;mnoha případech výhodné, protože uživatel si může vizuálně,
s&nbsp;využitím myši i všech dostupných operátorů, nejdříve vybrat text a
posléze na něj pomocí klávesové zkratky zavolat nějaký namapovaný příkaz.</p>

<a href="http://i.iinfo.cz/images/79/vim10-7.png"><img src="http://i.iinfo.cz/images/79/vim10-7-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 10: První krok při transformaci céčkového zdrojového textu do HTML
stránky &ndash; načtení příslušného textu pomocí příkazu <strong>:r</strong></i></p>

<p>Nyní si ukážeme poněkud komplikovanější příklad &ndash; v&nbsp;textu
vybraném ve vizuálním režimu se provede náhrada znaků &amp;, &lt; a &gt; za
příslušné HTML entity pomocí třech za sebou jdoucích substitucí. Volba
<strong>e</strong> v&nbsp;příkazu <strong>:substitute</strong> zajistí, aby se
provedly vždy všechny tři substituce i v&nbsp;případě, že daný znak nebyl
nalezen, volba <strong>g</strong> slouží k&nbsp;tomu, aby došlo
k&nbsp;substituci všech výskytů výše uvedených speciálních znaků. Příkaz
<strong>gv</strong> je určen k&nbsp;obnovení vybraného bloku, protože po
provedení každé substituce je označení textového bloku zrušeno. Poslední část
mapování za znakem / zvýrazní všechny výskyty HTML entit &amp;lt;, &amp;gt; a
&amp;amp;, samozřejmě za předpokladu, že je nastavena volba
<strong>hlsearch</strong>:</p>

<pre>
:vmap &lt;F12&gt; :s-&amp;-\&amp;amp;-ge&lt;cr&gt;gv:s-&lt;-\&amp;lt;-ge&lt;cr&gt;gv:s-&gt;-\&amp;gt;-ge&lt;cr&gt;/\(&amp;lt;\)\\|\(&amp;gt;\)\\|\(&amp;amp;\)&lt;cr&gt;
</pre>

<a href="http://i.iinfo.cz/images/79/vim10-8.png"><img src="http://i.iinfo.cz/images/79/vim10-8-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 11: Druhý krok při transformaci céčkového zdrojového textu do HTML
stránky &ndash; označení textu příkazem <strong>v</strong> (visual) nebo lépe
<strong>V</strong> (linewise visual).</i></p>

<p>Příkaz lze pro lepší pochopení rozepsat:</p>

<pre>
" náhrada znaku &amp; musí být první
:s-&amp;-\&amp;amp;-ge&lt;cr&gt;
</pre>

<pre>
" obnovení výběru (bloku)
gv
</pre>

<pre>
" náhrada znaku &lt;
:s-&lt;-\&amp;lt;-ge&lt;cr&gt;
</pre>

<pre>
" obnovení výběru (bloku)
gv
</pre>

<pre>
" náhrada znaku &gt;
:s-&gt;-\&amp;gt;-ge&lt;cr&gt;
</pre>

<pre>
" vyhledání všech výskytů HTML entit
/\(&amp;lt;\)
\\|             " or
\(&amp;gt;\)
\\|             " or
\(&amp;amp;\)
&lt;cr&gt;
</pre>

<a href="http://i.iinfo.cz/images/79/vim10-9.png"><img src="http://i.iinfo.cz/images/79/vim10-9-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 12: Třetí krok při transformaci céčkového zdrojového textu do HTML
stránky &ndash; zavolání sekvence příkazů namapovaných na klávesu F12. Všechny
HTML entity jsou zvýrazněny pomocí vyhledání textu na základě regulárních
výrazů.</i></p>



<p><a name="k08"></a></p>
<h2>8. Problémy s&nbsp;rekurzivním mapováním, zrušení mapování</h2>

<p>Jedním z&nbsp;problémů, na které můžeme při použití mapování narazit, je
takzvané <i>rekurzivní mapování</i>, které může nastat například
v&nbsp;případě, že se budeme snažit vyměnit význam dvou příkazů
v&nbsp;příkazovém režimu. Může se jednat o příkaz <strong>x</strong> (vymazání
znaku, na kterém se nachází kurzor) a <strong>X</strong> (vymazání znaku před
kurzorem). Potenciálně chybný způsob výměny významu těchto dvou příkazů by mohl
vypadat následovně:</p>

<pre>
:map x X
:map X x
</pre>

<a href="http://i.iinfo.cz/images/79/vim10-10.png"><img src="http://i.iinfo.cz/images/79/vim10-10-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 13: Samotným příkazem :map lze vypsat všechna aktuálně nastavená
mapování, zde se jedná o rekurzivní mapování x-&gt;X a současně
X-&gt;x.</i></p>

<p>Ovšem při vyvolání jakéhokoli z&nbsp;těchto příkazů bude neustále docházet
k&nbsp;mapování mezi <strong>x</strong> a <strong>X</strong>, které skončí až
ve chvíli, kdy se <i>Vim</i> dopočítá hodnoty specifikované
v&nbsp;konfiguračním parametru <strong>maxdepth</strong> (implicitně je tato
volba nastavena na hodnotu 1000). Poté se vypíše chybové hlášení. Rekurzivní
mapování je sice možné globálně vypnout pomocí konfiguračního parametru
<strong>remap</strong>, tj.&nbsp;následujícím způsobem:</p>

<pre>
:set noremap
</pre>

<p>Pro zajištění dobré kompatibility s&nbsp;různými doplňkovými skripty se
tento konfigurační parametr ponechává na implicitní volbě
<strong>remap</strong> (tj.&nbsp;potenciálně může docházet k&nbsp;rekurzivnímu
mapování). Ovšem rekurzi lze snadno vypnout přímo při specifikaci mapování,
postačuje namísto příkazu <strong>map</strong> použít příkaz
<strong>noremap</strong>. Následující sekvence příkazů skutečně korektně vymění
význam <strong>x</strong> a <strong>X</strong>:</p>

<pre>
:noremap x X
:noremap X x
</pre>

<p>Podobné příkazy existují i při specifikaci mapování pro další režimy:</p>

<table>
<tr><th>Příkaz</th><th>Význam</th></tr>
<tr><td>:nnoremap foo bar</td><td>nerekurzivní mapování: pouze normální režim</td></tr>
<tr><td>:inoremap foo bar</td><td>nerekurzivní mapování: vkládací režim</td></tr>
<tr><td>:vnoremap foo bar</td><td>nerekurzivní mapování: vizuální (výběrový) režim</td></tr>
</table>

<a href="http://i.iinfo.cz/images/79/vim10-11.png"><img src="http://i.iinfo.cz/images/79/vim10-11-prev.png" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 14: Při detekci rekurzivního mapování vypíše Vim chybové
hlášení.</i></p>

<p>V&nbsp;některých případech je taktéž nutné nějaké mapování zrušit. Pro tyto
účely je možné použít některý z&nbsp;následujících příkazů:</p>

<table>
<tr><th>Příkaz</th><th>Význam</th></tr>
<tr><td>:unmap foo</td><td>vymazání vybraného mapování pro normální a vizuální režim</td></tr>
<tr><td>:nunmap foo</td><td>vymazání vybraného mapování pro normální režim</td></tr>
<tr><td>:vunmap foo</td><td>vymazání vybraného mapování pro vizuální režim</td></tr>
<tr><td>:iunmap foo</td><td>vymazání vybraného mapování pro vkládací režim</td></tr>
</table>

<p>Zejména v&nbsp;souboru <strong>.vimrc</strong> je vhodné při počáteční
inicializaci smazat všechna mapování platná pro vybraný režim. Uživatelé mají
opět k&nbsp;dispozici několik příkazů pro tuto činnost, přičemž každý příkaz se
používá pro vymazání všech mapování ve specifickém režimu:</p>

<table>
<tr><th>Příkaz</th><th>Význam</th></tr>
<tr><td>:mapclear</td><td>vymazání všech mapování pro normální a vizuální režim</td></tr>
<tr><td>:nmapclear</td><td>vymazání všech mapování pro normální režim</td></tr>
<tr><td>:vmapclear</td><td>vymazání všech mapování pro vizuální režim</td></tr>
<tr><td>:imapclear</td><td>vymazání všech mapování pro vkládací režim</td></tr>
</table>



<p><a name="k09"></a></p>
<h2>9. Odkazy na Internetu</h2>

<ol>

<li>X Selections, Cut Buffers, and Kill Rings<br />
<a href="http://www.jwz.org/doc/x-cut-and-paste.html">http://www.jwz.org/doc/x-cut-and-paste.html</a>
</li>

<li>Accessing the system clipboard<br />
<a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard">http://vim.wikia.com/wiki/Accessing_the_system_clipboard</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

<li>Clewn home page<br />
<a href="http://clewn.sourceforge.net/">http://clewn.sourceforge.net/</a>
</li>

<li>How to connect vim with gdb - using clewn<br />
<a href="http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn">http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn</a>
</li>

<li>yavdb : Yet Another (Generic) Vim Debugger Integration<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1954">http://www.vim.org/scripts/script.php?script_id=1954</a>
</li>

<li>Vim home page<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>Exuberant ctags<br />
<a href="http://ctags.sourceforge.net/">http://ctags.sourceforge.net/</a>
</li>

<li>xxd (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>ctags (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags</a>
</li>

<li>cscope (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Novinky ve VIM 7: Úvodní část - speller<br />
<a href="http://www.root.cz/vim-sedm-prvni-cast/">http://www.root.cz/vim-sedm-prvni-cast/</a>
</li>

<li>Novinky ve VIM 7: Skriptovací jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>vim2elvis: Přednosti a nedostaky Elvise v porovnání s Vimem<br />
<a href="http://www.root.cz/clanky/vim2elvis-1/">http://www.root.cz/clanky/vim2elvis-1/</a>
</li>

<li>vim2elvis: Shodné znaky mezi Elvisem a Vimem, nastavení­editoru<br />
<a href="http://www.root.cz/clanky/vim2elvis-2/">http://www.root.cz/clanky/vim2elvis-2/</a>
</li>

<li>Nej... VIM pluginy (1)<br />
<a href="http://www.root.cz/clanky/nej-vim-pluginy/">http://www.root.cz/clanky/nej-vim-pluginy/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>Scroll Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Scroll_lock">http://necyklopedie.wikia.com/wiki/Scroll_lock</a>
</li>

<li>Caps Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Caps_Lock">http://necyklopedie.wikia.com/wiki/Caps_Lock</a>
</li>

<li>Avoid the escape key<br />
<a href="http://vim.wikia.com/wiki/Avoid_the_escape_key">http://vim.wikia.com/wiki/Avoid_the_escape_key</a>
</li>

<li>Map caps lock to escape in XWindows<br />
<a href="http://vim.wikia.com/wiki/VimTip166">http://vim.wikia.com/wiki/VimTip166</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2011</small></p>
</body>
</html>

