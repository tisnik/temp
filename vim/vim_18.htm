<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textový editor Vim jako IDE (18. část - konfigurace a překlad Vimu)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textový editor Vim jako IDE (18. část - konfigurace a překlad Vimu)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V osmnácté části seriálu o různých způsobech využití textového editoru Vim si řekneme, jakým způsobem je možné Vim nakonfigurovat a přeložit ze zdrojových kódů. Tato činnost může být užitečná buď při přidávání potřebných vlastností do Vimu, nebo naopak při zmenšování nároků Vimu na spotřebu operační paměti.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Konfigurace a překlad Vimu ze zdrojových kódů</a></p>
<p><a href="#k02">2. Získání zdrojových kódů Vimu</a></p>
<p><a href="#k03">3. Přímý překlad Vimu a možnosti konfigurace provedené před překladem</a></p>
<p><a href="#k04">4. Základní volby při překladu Vimu: rozdělení vlastností do pěti skupin</a></p>
<p><a href="#k05">5. Velikost spustitelného (binárního) souboru s&nbsp;Vimem</a></p>
<p><a href="#k06">6. Spotřeba operační paměti</a></p>
<p><a href="#k07">7. Přidáváme rozhraní pro různé skriptovací jazyky do Vimu</a></p>
<p><a href="#k08">8. Výpis vlastností Vimu obsažených v&nbsp;jeho různých variantách</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2>1. Konfigurace a překlad Vimu ze zdrojových kódů</h2>

<p>V&nbsp;předchozích částech seriálu o textovém editoru <i>Vim</i> jsme se
zabývali především popisem uživatelských funkcí nabízených samotným editorem,
popř.&nbsp;taktéž popisem některých zajímavých skriptů a maker, která jsou pro
<i>Vim</i> dostupná. Dnešní článek však bude určitou výjimkou, protože si
řekneme, jakým způsobem lze získat zdrojové kódy <i>Vimu</i> a jak se následně
může <i>Vim</i> nakonfigurovat a přeložit. Na první pohled by se sice mohlo
zdát, že tuto operaci by měli provádět většinou pouze autoři binárních balíčků
pro danou distribuci Linuxu (<i>.dep</i>, <i>.rpm</i> atd.), popř.&nbsp;autoři
instalačního balíčku s&nbsp;<i>Vimem</i> určeného pro systémy Microsoft Windows
(<a href="ftp://ftp.vim.org/pub/vim/pc">ftp://ftp.vim.org/pub/vim/pc</a>) a Mac
OS X (<a
href="http://sourceforge.net/projects/macosxvim/files/">http://sourceforge.net/projects/macosxvim/files/</a>),
ve skutečnosti však může být překlad vlastní binární varianty <i>Vimu</i>
mnohdy užitečný i pro jeho samotné uživatele (kteří většinou ani nechtějí či
nepotřebují upravovat jeho zdrojové kódy).</p>

<p>Důvodů pro překlad vlastní binární varianty <i>Vimu</i> může být větší
množství. Mezi hlavní důvody patří buď snaha o přidání nové vlastnosti do
<i>Vimu</i> (například se může jednat o rozhraní k&nbsp;nějakému skriptovacímu
jazyku, viz též <a
href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-17-cast-kooperace-mezi-vimem-a-jazykem-perl/">minulý</a>
a <a
href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-16-cast-kooperace-mezi-vimem-a-skriptovacimi-jazyky/">předminulý</a>
díl tohoto seriálu), použití nejnovější verze <i>Vimu</i> se všemi dostupnými
vlastnostmi a záplatami (<i>patchs</i>) nebo naopak snaha o vytvoření takové
varianty <i>Vimu</i>, která bude málo náročná na celkovou velikost alokované
operační paměti a současně zabere i méně místa na disku, což může být zajímavé
například při tvorbě live distribucí (zvláště v&nbsp;případě, pokud někomu
nevyhovuje varianta textového editoru Vi v&nbsp;projektu <a
href="http://www.busybox.net/">Busybox</a> a podobných nástrojích).</p>



<p><a name="k02"></a></p>
<h2>2. Získání zdrojových kódů Vimu</h2>

<p>Prvním krokem před spuštěním vlastního překladu <i>Vimu</i> je samozřejmě
získání jeho zdrojových kódů a dalších souborů nutných pro překlad (Makefile
apod.). Tyto soubory je možné získat různým způsobem, což je ostatně patrné i
při letmém pročtení stránky <a
href="http://www.vim.org/download.php">http://www.vim.org/download.php</a>.
Kromě tarballů obsahujících různé oficiálně vydané verze zdrojových kódů
<i>Vimu</i>, popř.&nbsp;pomocných souborů používaných pro běh <i>Vimu</i>
(takzvané <i>runtime</i> balíčky) je možné získat aktuální podobu jeho
zdrojových kódů s&nbsp;využitím nástroje pro správu verzí se jménem <a
href="http://mercurial.selenic.com/">Mercurial</a> (ten se nyní začíná používat
u stále většího množství projektů). Pokud si zvolíte tento způsob získání
zdrojových kódů <i>Vimu</i> musíte si nejprve <i>Mercurial</i> nainstalovat,
typicky jedním z&nbsp;následujících příkazů (závislých na použité
distribuci):</p>

<pre>
yum install mercurial
apt-get install mercurial
zypper mercurial
emerge mercurial
</pre>

<p>Instalaci <i>Mercurialu</i> lze ověřit jednoduchým smoke testem:</p>

<pre>
hg help
</pre>

<p><ins>Poznámka: <i>Hg</i> je značka rtuti, anglicky <i>mercury</i>, odtud
také pochází jméno příkazu <strong>hg</strong></ins></p>

<p>Po úspěšné instalaci <i>Mercurialu</i> se poslední verze zdrojových kódů
textového editoru <i>Vim</i> může stáhnout na disk pomocí následujícího
příkazu:</p>

<pre>
hg clone https://vim.googlecode.com/hg/ vim
</pre>

<p>kde poslední parametr <strong>vim</strong> určuje adresář, do něhož se obsah
repositáře má rozbalit. Pokud se tento parametr neuvede, použije se poslední
jméno z&nbsp;URL, tj.&nbsp;<strong>hg</strong>:</p>

<p><ins>Poznámka: poslední verzi zdrojových kódů je možné procházet na adrese
<a
href="http://code.google.com/p/vim/source/browse/">http://code.google.com/p/vim/source/browse/</a>.
Podle analýzy provedené na serveru <a href="http://www.ohloh.net/">Ohloh</a> je
aktivita na tomto projektu stále <a href="http://www.ohloh.net/p/vim">poměrně
vysoká</a>, což je u tak starého (čti stabilního) projektu docela
neobvyklé.</ins></p>



<p><a name="k03"></a></p>
<h2>3. Přímý překlad Vimu a možnosti konfigurace provedené před překladem</h2>

<p>Po získání poslední verze zdrojových kódů <i>Vimu</i> přichází na řadu
vlastní překlad. Ten je na Linuxu a dalších operačních systémech vybavených
potřebnými GNU nástroji (<i>gcc</i>, <i>gmake</i>, <i>autotools</i> atd.) velmi
jednoduchý, protože se zkrátí na dvojici příkazů:</p>

<pre>
cd vim/src
make
</pre>

<p>Po zadání těchto dvou příkazů by měla proběhnout konfigurace (získání
informací o hostitelském systému a dostupnosti potřebných knihoven) a následně
překlad a slinkování binárního spustitelného souboru s&nbsp;<i>Vimem</i>.
Případné chyby jsou většinou způsobeny tím, že v&nbsp;systému nejsou
nainstalovány všechny potřebné vývojové verze knihoven, počínaje <i>libc</i>
přes knihovnu <i>ncurses</i> až po knihovny vyžadované pro překlad <i>Vimu</i>
s&nbsp;podporou GUI.</p>

<p>Ovšem jak zajisté uznáte, je výše popsaný způsob překladu dosti nudný :-) a
hlavně nám nedává žádnou možnost zásahu do průběhu překladu; dokonce není ani
možné zvolit konfiguraci výsledné binární podoby <i>Vimu</i>. Proto si
v&nbsp;dalším textu popíšeme různé možnosti konfigurace výsledné (binární)
podoby <i>Vimu</i>.</p>

<p>Pokud nebudeme brát do úvahy možnost přímého zásahu do zdrojových kódů
<i>Vimu</i>, je možné konfiguraci provést libovolnou kombinací následujících
čtyř způsobů:</p>

<ol>

<li>Použitím některé volby či voleb při spuštění <strong>./configure</strong>
(asi nejpoužívanější možnost)</li>

<li>Natavením parametrů prostředí, které ovlivní překladač a/nebo linker</li>

<li>Editací souboru <strong>src/feature.h</strong> (zde je možné individuálně
zapnout a vypnout jednotlivé vlastnosti Vimu, soubor je bohatě komentován)</li>

<li>Editací souboru <strong>Makefile</strong> (ten je okomentován na místech,
kde se nejčastěji provádí změny)</li>

</ol>



<p><a name="k04"></a></p>
<h2>4. Základní volby při překladu Vimu: rozdělení vlastností do pěti skupin</h2>

<p>Při překladu <i>Vimu</i> na systémech vybavených vývojovými GNU nástroji
<i>autotools</i> je možné před spuštěním <strong>make</strong> explicitně
spustit skript <strong>./configure</strong>, který provede detekci překladače,
zjistí verze nainstalovaných knihoven atd. Ve skutečnosti se tento skript
použije vždy, tj.&nbsp;i když ho explicitně nespustíme, ovšem v&nbsp;tomto
případě se připravíme o možnost zadat skriptu různé konfigurační parametry.
Základním konfiguračním parametrem, který v&nbsp;největší míře ovlivňuje
schopnosti výsledné binární podoby <i>Vimu</i>, je parametr
<strong>--with-features=XXX</strong>, kde se za <strong>XXX</strong> doplňuje
slovo <strong>tiny</strong>, <strong>small</strong>, <strong>normal</strong>,
<strong>big</strong> či <strong>huge</strong>. Význam tohoto parametru je
jednoduchý &ndash; každá vlastnost <i>Vimu</i> spadá do jedné z&nbsp;těchto
pěti kategorií, přičemž platí, že v&nbsp;nadřazené kategorii jsou všechny
vlastnosti ležící i v&nbsp;kategorii nižší. To například znamená, že historie
příkazového řádku (zajisté užitečná vlastnost umožňující použít již jednou
zadané příkazy) spadá do kategorie <strong>small</strong>, tudíž ji lze najít i
v&nbsp;kategoriích <strong>normal</strong>, <strong>big</strong> a
<strong>huge</strong>, nikoli ale v&nbsp;kategorii <strong>tiny</strong>.</p>

<table>
<tr><th>#</th><th>Volba pro ./configure </th><th>Význam volby</th></tr>
<tr><td>1</td><td>--with-features=tiny  </td><td>Vim je přeložen pouze se základní funkcionalitou, nepodporuje ani historii či doplňování příkazů, ani více oken. Býval použit v&nbsp;šestnáctibitové variantě Vimu pro DOS (protože přece 640kB stačí každému :-)</td></tr>
<tr><td>2</td><td>--with-features=small </td><td>již poněkud užitečnější varianta Vimu, dobře emuluje schopnosti původního editoru Vi, často instalovaná pod jménem <strong>vim.tiny</strong> (což je poněkud matoucí)</td></tr>
<tr><td>3</td><td>--with-features=normal</td><td>obsahuje všechny běžné vlastnosti Vimu, použit v&nbsp;některých distribucích</td></tr>
<tr><td>4</td><td>--with-features=big   </td><td>většina vlastností je povolena, použit v&nbsp;mnoha distribucích v&nbsp;balíčku<strong> vim-enhanced</strong></td></tr>
<tr><td>5</td><td>--with-features=huge  </td><td>překlad proveden se všemi vlastnostmi (některé ve skutečnosti nemusí být použity, pokud nejsou k&nbsp;dispozici potřebné knihovny). Jedinou věcí, kterou je nutné přidat ručně, jsou rozhraní pro různé skriptovací jazyky.</td></tr>
</table>



<p><a name="k05"></a></p>
<h2>5. Velikost spustitelného (binárního) souboru s&nbsp;Vimem</h2>

<p>Každá vlastnost <i>Vimu</i> je ve zdrojových kódech představována symbolem
preprocesoru definovaným (či naopak nedefinovaným :-) v&nbsp;souboru
<strong>features.h</strong>. V&nbsp;případě již výše zmíněné historie
příkazového řádku se jedná o symbol <strong>FEAT_CMDHIST</strong>. Při spuštění
skriptu <strong>./configure</strong> je tento symbol buď definován nebo zůstane
nedefinován, což je na několika místech zdrojového kódu <i>Vimu</i> detekováno
standardně pomocí direktivy <strong>#ifdef FEAT_CMDHIST/#endif</strong>, ve
které je uzavřena část programového kódu, která s&nbsp;historií příkazového
řádku souvisí. Díky tomu se při zákazu této vlastnosti (například při překladu
<i>Vimu</i> ve variantě <strong>tiny</strong>) část zdrojového kódu odstraní
již při běhu preprocesoru a tudíž se vůbec neobjeví ve výsledném přeloženém
binárním souboru <strong>(g)vim(.exe)</strong>. Pro zajímavost se můžeme
podívat na to, jak se liší velikost spustitelného binárního souboru
<strong>vim</strong> přeloženého na 32bitové platformě x86 pro různé varianty
<i>Vimu</i>. V&nbsp;tabulce níže je uvedena jak velikost binárního souboru
ihned po překladu (se všemi symboly), tak i velikost po odstranění těchto
symbolů pomocí nástroje <strong>strip</strong>:</p>

<table>
<tr><th>#</th><th>Varianta Vimu</th><th>Velikost po překladu</th><th>Velikost po "strip"</th></tr>
<tr><td>1</td><td>tiny  </td><td>1592807</td><td> 513600</td></tr>
<tr><td>2</td><td>small </td><td>1761057</td><td> 571168</td></tr>
<tr><td>3</td><td>normal</td><td>4229575</td><td>1420128</td></tr>
<tr><td>4</td><td>big   </td><td>4687868</td><td>1626216</td></tr>
<tr><td>5</td><td>huge  </td><td>4709742</td><td>1634440</td></tr>
</table>

<p>Překlad byl proveden následujícím způsobem:</p>

<pre>
cd vim/src
./configure --with-features=tiny
make
</pre>

<pre>
cd vim/src
./configure --with-features=small
make
</pre>

<pre>
cd vim/src
./configure --with-features=normal
make
</pre>

<pre>
cd vim/src
./configure --with-features=big
make
</pre>

<pre>
cd vim/src
./configure --with-features=huge
make
</pre>

<p>A posléze:</p>

<pre>
strip vim
</pre>



<p><a name="k06"></a></p>
<h2>6. Spotřeba operační paměti</h2>

<p>Velikost binárního spustitelného souboru s&nbsp;<i>Vimem</i> bude
pravděpodobně zajímat pouze autory různých live distribucí, ovšem
v&nbsp;některých případech je důležitější sledovat velikost operační paměti
obsazené při běhu <i>Vimu</i>. Na &bdquo;nadupaných&ldquo; desktopech
s&nbsp;gigabajty operační paměti je to samozřejmě téměř bezpředmětné, ovšem na
menších zařízeních může být každý ušetřený megabajt (když už ne kilobajt :-)
znatelný. A rozdíly mezi různými variantami <i>Vimu</i> mohou být skutečně
značné, což je ostatně patrné i při pohledu na tabulku zobrazenou níže.
V&nbsp;této tabulce je zobrazena špička ve spotřebě paměti i velikost RSS,
tj.&nbsp;skutečně obsazená fyzická paměť. Z&nbsp;této tabulky mj.&nbsp;vyplývá
například to, že na 32bitové platformě x86 v&nbsp;podstatě nemá smysl se trápit
se spartánskou verzí <strong>tiny</strong> (určené původně hlavně pro 16bitový
DOS s&nbsp;640kB RAM), protože rozdíl ve spotřebě paměti mezi
<strong>tiny</strong> a <strong>small</strong> (kde již jsou obsaženy všechny
nejdůležitější vlastnosti) je minimální. Poměrně velký skok nastává až mezi
variantami <strong>small</strong> a <strong>normal</strong> (ve všech případech
byl překlad proveden BEZ knihoven GUI).</p>

<table>
<tr><th>#</th><th>Varianta Vimu</th><th>Špička při alokaci paměti</th><th>RSS</th></tr>
<tr><td>1</td><td>tiny  </td><td>3216 kB</td><td>1368 kB</td></tr>
<tr><td>2</td><td>small </td><td>3268 kB</td><td>1428 kB</td></tr>
<tr><td>3</td><td>normal</td><td>6580 kB</td><td>3344 kB</td></tr>
<tr><td>4</td><td>big   </td><td>6788 kB</td><td>3476 kB</td></tr>
<tr><td>5</td><td>huge  </td><td>6796 kB</td><td>3512 kB</td></tr>
</table>



<p><a name="k07"></a></p>
<h2>7. Přidáváme rozhraní pro různé skriptovací jazyky do Vimu</h2>

<p>K&nbsp;překladu vlastní varianty <i>Vimu</i> se mnoho uživatelů dostane
z&nbsp;toho důvodu, aby získali <i>Vim</i> s&nbsp;rozhraním pro jejich oblíbený
skriptovací jazyk (viz předchozí dva díly tohoto seriálu). Důležité přitom je,
že rozhraní pro programovací jazyky <strong>ne</strong>patří mezi vlastnosti
přidávané v&nbsp;některé standardní variantě <i>Vimu</i>, tj.&nbsp;ani jedno
z&nbsp;těchto rozhraní není do výsledného binárního souboru zahrnuto ani
v&nbsp;případě použití varianty <strong>huge</strong>! Pro přidání některého
z&nbsp;těchto rozhraní se musí použít explicitní konfigurační parametr zadávaný
při spuštění skriptu <strong>./configure</strong>. Jedná se o některý
z&nbsp;těchto parametrů:</p>

<table>
<tr><th>#</th><th>Volba pro ./configure</th><th>Význam</th></tr>
<tr><td>1</td><td>--enable_pythoninterp  </td><td>zahrnutí rozhraní pro programovací jazyk Python 2.x</td></tr>
<tr><td>2</td><td>--enable_python3interp </td><td>zahrnutí rozhraní pro programovací jazyk Python 3.x</td></tr>
<tr><td>3</td><td>--enable_tclinterp     </td><td>zahrnutí rozhraní pro programovací jazyk Tcl</td></tr>
<tr><td>4</td><td>--enable_rubyinterp    </td><td>zahrnutí rozhraní pro programovací jazyk Ruby</td></tr>
<tr><td>5</td><td>--enable_luainterp     </td><td>zahrnutí rozhraní pro programovací jazyk Lua</td></tr>
<tr><td>6</td><td>--enable_mzschemeinterp</td><td>zahrnutí rozhraní pro programovací jazyk Scheme</td></tr>
<tr><td>7</td><td>--enable_perlinterp    </td><td>zahrnutí rozhraní pro programovací jazyk Perl</td></tr>
</table>

<p>Použití výše uvedených voleb je snadné (za předpokladu, že jsou příslušné
jazyky nainstalovány):</p>

<pre>
cd vim/src
./configure --with-features=normal --enable-pythoninterp
make
</pre>

<p>Mohlo by se zdát, že rozhraní pro programovací jazyky zabere v&nbsp;binárním
spustitelném souboru poměrně dost místa, ve skutečnosti se však jedná
&bdquo;pouze&ldquo; o desítky či stovky kilobajtů. V&nbsp;následující tabulce
můžete vidět rozdíl mezi <i>Vimem</i> přeloženým pouze s&nbsp;volbou
<strong>--with-features=normal</strong> a <i>Vimem</i> přeloženým s&nbsp;volbou
<strong>--enable-pythoninterp</strong>:</p>

<table>
<tr><th>#</th><th>Varianta Vimu</th><th>Velikost po překladu</th><th>Velikost po "strip"</th></tr>
<tr><td>1</td><td>normal</td><td>4229575</td><td>1420128</td></tr>
<tr><td>2</td><td>normal+pythoninterp</td><td>4413785</td><td>1545440</td></tr>
</table>



<p><a name="k08"></a></p>
<h2>8. Výpis vlastností Vimu obsažených v&nbsp;jeho různých variantách</h2>

<p>V&nbsp;této kapitole jsou pro zajímavost vypsány vlastnosti <i>Vimu</i> zahrnuté v&nbsp;jeho jednotlivých variantách. Navíc je ještě přidána normální varianta <i>Vimu</i> přeložená s&nbsp;podporou rozhraní pro jazyk Python:</p>

<h3>Tiny</h3>

<pre>
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Nov  1 2011 09:03:02)
Included patches: 1-353
Compiled by pavel@bender
Tiny version without GUI.  Features included (+) or not (-):
-arabic -autocmd -balloon_eval -browse +builtin_terms -byte_offset -cindent
-clientserver -clipboard -cmdline_compl -cmdline_hist -cmdline_info -comments
-conceal -cryptv -cscope -cursorbind -cursorshape -dialog -diff -digraphs -dnd
-ebcdic -emacs_tags -eval -ex_extra -extra_search -farsi -file_in_path
-find_in_path -float -folding -footer +fork() -gettext -hangul_input -iconv
-insert_expand -jumplist -keymap -langmap -libcall -linebreak -lispindent
-listcmds -localmap -lua -menu -mksession -modify_fname -mouse -mouse_dec
-mouse_gpm -mouse_jsbterm -mouse_netterm -mouse_sysmouse -mouse_xterm
-mouse_urxvt -multi_byte -multi_lang -mzscheme -netbeans_intg -path_extra -perl
 -persistent_undo -printer -profile -python -python3 -quickfix -reltime
-rightleft -ruby -scrollbind -signs -smartindent -sniff -startuptime
-statusline -sun_workshop -syntax -tag_binary -tag_old_static -tag_any_white
-tcl +terminfo -termresponse -textobjects -title -toolbar -user_commands
-vertsplit -virtualedit -visual -viminfo -vreplace +wildignore -wildmenu
-windows +writebackup -X11 -xfontset -xim -xsmp -xterm_clipboard -xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -Wl,--as-needed -o vim    -lSM -lICE -lXt -lX11
-lXdmcp -lSM -lICE -lm -lncurses -lnsl
</pre>



<h3>Small</h3>

<pre>
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Nov  1 2011 09:07:54)
Included patches: 1-353
Compiled by pavel@bender
Small version without GUI.  Features included (+) or not (-):
-arabic -autocmd -balloon_eval -browse +builtin_terms -byte_offset -cindent
-clientserver -clipboard -cmdline_compl +cmdline_hist -cmdline_info -comments
-conceal -cryptv -cscope -cursorbind -cursorshape -dialog -diff -digraphs -dnd
-ebcdic -emacs_tags -eval -ex_extra -extra_search -farsi -file_in_path
-find_in_path -float -folding -footer +fork() -gettext -hangul_input -iconv
-insert_expand +jumplist -keymap -langmap -libcall -linebreak -lispindent
-listcmds -localmap -lua -menu -mksession -modify_fname -mouse -mouse_dec
-mouse_gpm -mouse_jsbterm -mouse_netterm -mouse_sysmouse -mouse_xterm
-mouse_urxvt -multi_byte -multi_lang -mzscheme -netbeans_intg -path_extra -perl
 -persistent_undo -printer -profile -python -python3 -quickfix -reltime
-rightleft -ruby -scrollbind -signs -smartindent -sniff -startuptime
-statusline -sun_workshop -syntax -tag_binary -tag_old_static -tag_any_white
-tcl +terminfo -termresponse -textobjects -title -toolbar -user_commands
-vertsplit -virtualedit +visual -visualextra -viminfo -vreplace +wildignore
-wildmenu +windows +writebackup -X11 -xfontset -xim -xsmp -xterm_clipboard
-xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -Wl,--as-needed -o vim    -lSM -lICE -lXt -lX11
-lXdmcp -lSM -lICE -lm -lncurses -lnsl
</pre>



<h3>Normal</h3>

<pre>
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Nov  1 2011 09:17:08)
Included patches: 1-353
Compiled by pavel@bender
Normal version without GUI.  Features included (+) or not (-):
-arabic +autocmd -balloon_eval -browse +builtin_terms +byte_offset +cindent
+clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments
-conceal +cryptv -cscope +cursorbind +cursorshape +dialog_con +diff +digraphs
-dnd -ebcdic -emacs_tags +eval +ex_extra +extra_search -farsi +file_in_path
+find_in_path +float +folding -footer +fork() -gettext -hangul_input -iconv
+insert_expand +jumplist -keymap -langmap +libcall +linebreak +lispindent
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape
-mouse_dec -mouse_gpm -mouse_jsbterm -mouse_netterm -mouse_sysmouse
+mouse_xterm -mouse_urxvt -multi_byte +multi_lang -mzscheme +netbeans_intg
+path_extra -perl +persistent_undo +postscript +printer -profile -python
-python3 +quickfix +reltime -rightleft -ruby +scrollbind +signs +smartindent
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 -toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo
+vreplace +wildignore +wildmenu +windows +writebackup +X11 -xfontset -xim
+xsmp_interact +xterm_clipboard -xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -Wl,--as-needed -o vim    -lSM -lICE -lXt -lX11
-lXdmcp -lSM -lICE -lm -lncurses -lnsl
</pre>



<h3>Normal+Python</h3>

<p>Povšimněte si odlišné konfigurace linkeru:</p>

<pre>
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Nov  1 2011 10:15:58)
Included patches: 1-353
Compiled by pavel@bender
Normal version without GUI.  Features included (+) or not (-):
-arabic +autocmd -balloon_eval -browse +builtin_terms +byte_offset +cindent
+clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments
-conceal +cryptv -cscope +cursorbind +cursorshape +dialog_con +diff +digraphs
-dnd -ebcdic -emacs_tags +eval +ex_extra +extra_search -farsi +file_in_path
+find_in_path +float +folding -footer +fork() -gettext -hangul_input -iconv
+insert_expand +jumplist -keymap -langmap +libcall +linebreak +lispindent
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape
-mouse_dec -mouse_gpm -mouse_jsbterm -mouse_netterm -mouse_sysmouse
+mouse_xterm -mouse_urxvt -multi_byte +multi_lang -mzscheme +netbeans_intg
+path_extra -perl +persistent_undo +postscript +printer -profile +python
-python3 +quickfix +reltime -rightleft -ruby +scrollbind +signs +smartindent
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 -toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo
+vreplace +wildignore +wildmenu +windows +writebackup +X11 -xfontset -xim
+xsmp_interact +xterm_clipboard -xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -Wl,--as-needed -o vim    -lSM -lICE -lXt -lX11
-lXdmcp -lSM -lICE -lm -lncurses -lnsl       -L/usr/lib/python2.6/config -lpytho
n2.6 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-f
unctions
</pre>



<h3>Big</h3>

<pre>
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Nov  1 2011 09:26:59)
Included patches: 1-353
Compiled by pavel@bender
Big version without GUI.  Features included (+) or not (-):
+arabic +autocmd -balloon_eval -browse ++builtin_terms +byte_offset +cindent
+clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments
+conceal +cryptv +cscope +cursorbind +cursorshape +dialog_con +diff +digraphs
-dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path
+find_in_path +float +folding -footer +fork() -gettext -hangul_input +iconv
+insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape
+mouse_dec -mouse_gpm -mouse_jsbterm +mouse_netterm -mouse_sysmouse
+mouse_xterm +mouse_urxvt +multi_byte +multi_lang -mzscheme +netbeans_intg
+path_extra -perl +persistent_undo +postscript +printer -profile -python
-python3 +quickfix +reltime +rightleft -ruby +scrollbind +signs +smartindent
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 -toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo
+vreplace +wildignore +wildmenu +windows +writebackup +X11 +xfontset -xim
+xsmp_interact +xterm_clipboard -xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -Wl,--as-needed -o vim    -lSM -lICE -lXt -lX11
-lXdmcp -lSM -lICE -lm -lncurses -lnsl
</pre>



<h3>Huge</h3>

<pre>
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Nov  1 2011 09:34:17)
Included patches: 1-353
Compiled by pavel@bender
Huge version without GUI.  Features included (+) or not (-):
+arabic +autocmd -balloon_eval -browse ++builtin_terms +byte_offset +cindent
+clientserver +clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments
+conceal +cryptv +cscope +cursorbind +cursorshape +dialog_con +diff +digraphs
-dnd -ebcdic +emacs_tags +eval +ex_extra +extra_search +farsi +file_in_path
+find_in_path +float +folding -footer +fork() -gettext -hangul_input +iconv
+insert_expand +jumplist +keymap +langmap +libcall +linebreak +lispindent
+listcmds +localmap -lua +menu +mksession +modify_fname +mouse -mouseshape
+mouse_dec -mouse_gpm -mouse_jsbterm +mouse_netterm -mouse_sysmouse
+mouse_xterm +mouse_urxvt +multi_byte +multi_lang -mzscheme +netbeans_intg
+path_extra -perl +persistent_undo +postscript +printer +profile -python
-python3 +quickfix +reltime +rightleft -ruby +scrollbind +signs +smartindent
-sniff +startuptime +statusline -sun_workshop +syntax +tag_binary
+tag_old_static -tag_any_white -tcl +terminfo +termresponse +textobjects +title
 -toolbar +user_commands +vertsplit +virtualedit +visual +visualextra +viminfo
+vreplace +wildignore +wildmenu +windows +writebackup +X11 +xfontset -xim
+xsmp_interact +xterm_clipboard -xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/local/share/vim"
Compilation:
gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -D_FORTIFY_SOURCE=1
Linking: gcc   -L/usr/local/lib -Wl,--as-needed -o vim    -lSM -lICE -lXt -lX11
-lXdmcp -lSM -lICE -lm -lncurses -lnsl
</pre>



<p><a name="k09"></a></p>
<h2>9. Odkazy na Internetu</h2>

<ol>

<li>Building Vim<br />
<a href="http://vim.wikia.com/wiki/Building_Vim">http://vim.wikia.com/wiki/Building_Vim</a>
</li>

<li>Getting the Vim source with Mercurial<br />
<a href="http://vim.wikia.com/wiki/Getting_the_Vim_source_with_Mercurial">http://vim.wikia.com/wiki/Getting_the_Vim_source_with_Mercurial</a>
</li>

<li>Vim Perl Interface<br />
<a href="http://vim.dindinx.net/vim7/html/if_perl.txt.php">http://vim.dindinx.net/vim7/html/if_perl.txt.php</a>
</li>

<li>Vim Perl Support<br />
<a href="http://www.softpanorama.org/Editors/Vimorama/vim_perl_support.shtml">http://www.softpanorama.org/Editors/Vimorama/vim_perl_support.shtml</a>
</li>

<li>VIM as Python IDE<br />
<a href="http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/">http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/</a>
</li>

<li>Stack Overflow: VIM: Perl interface: passing a variable to Perl and reading a vim variable from Perl<br />
<a href="http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from">http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from</a>
</li>

<li>Stack Overflow: Getting started with vim scripting with Perl<br />
<a href="http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl">http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl</a>
</li>

<li>Perl: home page<br />
<a href="http://www.perl.org/">http://www.perl.org/</a>
</li>

<li>Python: home page<br />
<a href="http://www.python.org/">http://www.python.org/</a>
</li>

<li>Ruby: home page<br />
<a href="http://www.ruby-lang.org/en/">http://www.ruby-lang.org/en/</a>
</li>

<li>Tcl/Tk<br />
<a href="http://www.dmoz.org/Computers/Programming/Languages/Tcl-Tk/">http://www.dmoz.org/Computers/Programming/Languages/Tcl-Tk/</a>
</li>

<li>Python with a modular IDE (Vim)<br />
<a href="http://www.sontek.net/python-with-a-modular-ide-vim">http://www.sontek.net/python-with-a-modular-ide-vim</a>
</li>

<li>PEP 8 &ndash; Style Guide for Python Code<br />
<a href="http://www.python.org/dev/peps/pep-0008/">http://www.python.org/dev/peps/pep-0008/</a>
</li>

<li>pydoc.vim: Python documentation view- and search-tool (uses pydoc)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=910">http://www.vim.org/scripts/script.php?script_id=910</a>
</li>

<li>Getting to VIM's Python interface<br />
<a href="http://zerokspot.com/weblog/2009/02/21/getting-to-know-vims-python-interface/">http://zerokspot.com/weblog/2009/02/21/getting-to-know-vims-python-interface/</a>
</li>

<li>Pretty-formatting XML<br />
<a href="http://vim.wikia.com/wiki/Pretty-formatting_XML">http://vim.wikia.com/wiki/Pretty-formatting_XML</a>
</li>

<li>Delete a pair of XML/HTML tags<br />
<a href="http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags">http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags</a>
</li>

<li>Vim as XML Editor<br />
<a href="http://www.pinkjuice.com/howto/vimxml/">http://www.pinkjuice.com/howto/vimxml/</a>
</li>

<li>xmledit: A filetype plugin to help edit XML, HTML, and SGML documents<br />
<a href="http://www.vim.org/scripts/script.php?script_id=301">http://www.vim.org/scripts/script.php?script_id=301</a>
</li>

<li>Poslední vývojová verze makra xmledit<br />
<a href="http://github.com/sukima/xmledit/">http://github.com/sukima/xmledit/</a>
</li>

<li>vim.wikia: Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>vim.wikia: Writing a valid statusline<br />
<a href="http://vim.wikia.com/wiki/Writing_a_valid_statusline">http://vim.wikia.com/wiki/Writing_a_valid_statusline</a>
</li>

<li>vim.wikia: Statusline tab level ruler<br />
<a href="http://vim.wikia.com/wiki/Statusline_tab_level_ruler">http://vim.wikia.com/wiki/Statusline_tab_level_ruler</a>
</li>

<li>vim.wikia: Switching between different statuslines<br />
<a href="http://vim.wikia.com/wiki/Switching_between_different_statuslines">http://vim.wikia.com/wiki/Switching_between_different_statuslines</a>
</li>

<li>X Selections, Cut Buffers, and Kill Rings<br />
<a href="http://www.jwz.org/doc/x-cut-and-paste.html">http://www.jwz.org/doc/x-cut-and-paste.html</a>
</li>

<li>Accessing the system clipboard<br />
<a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard">http://vim.wikia.com/wiki/Accessing_the_system_clipboard</a>
</li>

<li>xcutsel(1) - Linux man page<br />
<a href="http://linux.die.net/man/1/xcutsel">http://linux.die.net/man/1/xcutsel</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

<li>Clewn home page<br />
<a href="http://clewn.sourceforge.net/">http://clewn.sourceforge.net/</a>
</li>

<li>How to connect vim with gdb - using clewn<br />
<a href="http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn">http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn</a>
</li>

<li>yavdb : Yet Another (Generic) Vim Debugger Integration<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1954">http://www.vim.org/scripts/script.php?script_id=1954</a>
</li>

<li>Vim home page<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>Exuberant ctags<br />
<a href="http://ctags.sourceforge.net/">http://ctags.sourceforge.net/</a>
</li>

<li>xxd (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>ctags (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags</a>
</li>

<li>cscope (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Novinky ve VIM 7: Úvodní část - speller<br />
<a href="http://www.root.cz/vim-sedm-prvni-cast/">http://www.root.cz/vim-sedm-prvni-cast/</a>
</li>

<li>Novinky ve VIM 7: Skriptovací jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>vim2elvis: Přednosti a nedostaky Elvise v porovnání s Vimem<br />
<a href="http://www.root.cz/clanky/vim2elvis-1/">http://www.root.cz/clanky/vim2elvis-1/</a>
</li>

<li>vim2elvis: Shodné znaky mezi Elvisem a Vimem, nastavení­editoru<br />
<a href="http://www.root.cz/clanky/vim2elvis-2/">http://www.root.cz/clanky/vim2elvis-2/</a>
</li>

<li>Nej... VIM pluginy (1)<br />
<a href="http://www.root.cz/clanky/nej-vim-pluginy/">http://www.root.cz/clanky/nej-vim-pluginy/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>Scroll Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Scroll_lock">http://necyklopedie.wikia.com/wiki/Scroll_lock</a>
</li>

<li>Caps Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Caps_Lock">http://necyklopedie.wikia.com/wiki/Caps_Lock</a>
</li>

<li>Avoid the escape key<br />
<a href="http://vim.wikia.com/wiki/Avoid_the_escape_key">http://vim.wikia.com/wiki/Avoid_the_escape_key</a>
</li>

<li>Map caps lock to escape in XWindows<br />
<a href="http://vim.wikia.com/wiki/VimTip166">http://vim.wikia.com/wiki/VimTip166</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2011</small></p>
</body>
</html>

