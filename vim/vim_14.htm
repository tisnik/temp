<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textový editor Vim jako IDE (automatické formátování textů: dokončení)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textový editor Vim jako IDE (automatické formátování textů: dokončení)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V&nbsp;dnešní části seriálu o různých způsobech využití textového editoru Vim dokončíme téma automatického formátování odstavcových textů. Dále si ukážeme některé tipy a triky využitelné především při editacích textových dokumentů zapisovaných v&nbsp;různých značkovacích jazycích, zejména v&nbsp;XML, (X)HTML a (La)TeXu. Nezapomeneme ani na užitečné makro justify.vim.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Krátké zopakování: formátování odstavcových textů ve Vimu</a></p>
<p><a href="#k02">2. Konfigurační parametr &bdquo;formatoptions&ldquo;</a></p>
<p><a href="#k03">3. Význam jednotlivých znaků konfiguračního parametru &bdquo;formatoptions&ldquo;</a></p>
<p><a href="#k04">4. Konfigurační parametry používané při formátování poznámek a další volby</a></p>
<p><a href="#k05">5. Klávesové zkratky vhodné pro psaní dokumentů v&nbsp;(La)TeXu</a></p>
<p><a href="#k06">6. Další pomocné příkazy pro psaní dokumentů v&nbsp;(La)TeXu</a></p>
<p><a href="#k07">7. Klávesové zkratky určené pro zvýraznění textu vybraného do bloku</a></p>
<p><a href="#k08">8. Pomocné makro justify.vim</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2>1. Krátké zopakování: formátování odstavcových textů ve Vimu</h2>

<p>Ve čtrnácté části seriálu (nyní se již skutečně jedná o čtrnáctou část,
nikoli o malou mystifikaci :-) o využití textového editoru <i>Vim</i> dokončíme
téma automatického a poloautomatického formátování textů. Minule jsme si řekli,
že s&nbsp;odstavcovými texty je možné pracovat dvěma principiálně zcela
odlišnými způsoby. První způsob spočívá v&nbsp;zápisu odstavců ve formě
takzvaných &bdquo;nekonečných řádků&ldquo;, tj.&nbsp;textových řádků obecně
delších, než je vizuální šířka okna. Každý řádek, který je v&nbsp;souboru
ukončený znakem <strong>CR</strong>, popř.&nbsp;kombinací znaků
<strong>CR+LF</strong>, tedy představuje celý odstavec a jedinou úlohou
<i>Vimu</i> v&nbsp;tomto případě je zajistit vizuální zalomení každého řádku
odstavce buď na posledním zobrazitelném znaku (tuto možnost zajišťuje volba
<strong>wrap</strong>), nebo v&nbsp;mezeře mezi slovy (jedná se o kombinaci
voleb <strong>wrap</strong> a <strong>linebreak</strong>). Výhodou popsaného
způsobu práce s&nbsp;odstavci je především to, že odstavce většinou není
zapotřebí žádným způsobem formátovat, takže se práce s&nbsp;<i>Vimem</i>
v&nbsp;mnoha ohledech podobá práci s&nbsp;běžnými textovými procesory.</p>

<img src="http://i.iinfo.cz/images/67/vim1309.png" width="564" height="379" alt="&#160;" />
<p><i>Obrázek 1: Parametr <strong>nowrap</strong> zakáže vizuální zalamování
textů, takže dlouhé řádky nejsou celé viditelné. Tento způsob zobrazení je
vhodný při práci se zdrojovými kódy (a to ještě ne vždy).</i></p>

<p>Ovšem v&nbsp;některých případech je požadováno, aby byly odstavce
v&nbsp;textovém souboru skutečně naformátovány, tj.&nbsp;aby byl každý řádek
ukončen znakem <strong>CR</strong> nebo na méně vyspělých systémech dvojicí
znaků <strong>CR+LF</strong> (tvůrci těchto systémů si evidentně pletli textové
soubory a soubory obsahující data určená pro tiskárnu). Textový editor
<i>Vim</i> nabízí pomoc i v&nbsp;těchto případech &ndash; dokáže totiž text
formátovat, a to buď poloautomaticky (na vyžádání), nebo i zcela automaticky.
Pro připomenutí jsou v&nbsp;následující tabulce uvedeny konfigurační parametry,
které se používají v&nbsp;případě, že je text poloautomaticky či zcela
automaticky formátován do samostatných řádků (<i>Vim</i> tedy v&nbsp;textu
vytváří či naopak ruší znaky <strong>CR/CR+LF</strong>):</p>

<table>
<tr><th>#</th><th>Jméno parametru</th><th>Zkrácený název</th><th>Význam</th></tr>
<tr><td>1</td><td>textwidth </td><td>tw</td><td>automatické zalamování na xxx sloupci (při psaní se automaticky vkládá znak pro konec řádku)</td></tr>
<tr><td>2</td><td>wrapmargin</td><td>wm</td><td>alternativa k&nbsp;předchozí volbě, umožňuje vkládat znak konce řádku relativně vůči pravému okraji okna</td></tr>
<tr><td>3</td><td>formatoptions</td><td>fo</td><td>přesné určení způsobu formátování textů (viz další dvě kapitoly)</td></tr>
<tr><td>4</td><td>formatlistpat</td><td>flp</td><td>použit při formátování seznamů</td></tr>
</table>

<img src="http://i.iinfo.cz/images/385/vim1310.png" width="564" height="379" alt="&#160;" />
<p><i>Obrázek 2: Parametrem <strong>wrap</strong> je povoleno vizuální zalomení
textu na jakémkoli znaku, který se zrovna nachází v&nbsp;posledním sloupci
obrazovky. Nevhodné pro běžné texty, naopak vhodné v&nbsp;některých případech
při práci se zdrojovými kódy.</i></p>



<p><a name="k02"></a></p>
<h2>2. Konfigurační parametr &bdquo;formatoptions&ldquo;</h2>

<p>Při formátování textů hrají nejdůležitější roli tři konfigurační volby.
Jedná se o volbu <strong>textwidth (tw)</strong> s&nbsp;celočíselnou hodnotou,
pomocí níž se určuje maximální délka jednoho textového řádku, tj.&nbsp;pozice
pravého okraje. Částečně podobnou funkci má i volba <strong>wrapmargin
(wm)</strong>, s&nbsp;jejímž využitím se taktéž definuje pravý okraj textu,
ovšem relativně k&nbsp;šířce okna (viz též závěrečnou kapitolu <a
href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-14-cast-automaticke-formatovani-textu/">předchozí
části</a> tohoto seriálu). Ovšem to, jakým způsobem se text naformátuje a co je
vlastně považováno za odstavec (popř.&nbsp;za číslovaný seznam nebo seznam
s&nbsp;odrážkami), je určeno konfiguračním parametrem
<strong>formatoptions(fo)</strong>. Hodnotou tohoto konfiguračního parametru je
sekvence znaků, z&nbsp;nichž každý má speciální význam, podobně jako je tomu u
sekvence znaků používaných při konfiguraci pravítka a stavového řádku. Vzhledem
k&nbsp;tomu, že se poměrně často stává, že je do konfiguračního parametru
<strong>formatoptions</strong> nutné přidat jednu volbu či ji naopak odstranit,
můžeme se namísto prostého přiřazení:</p>

<pre>
:set formatoptions=_konfigurační_znaky_
</pre>

<p>setkat s&nbsp;příkazy typu:</p>

<pre>
:set formatoptions+=_znak_
</pre>

<p>či:</p>

<pre>
:set formatoptions-=_znak_
</pre>

<p>V&nbsp;některých případech, především při současné editaci většího množství
souborů různých typů, může být vhodné parametry konfiguračního příkazu
<strong>formatoptions</strong> nastavovat lokálně pro každý buffer zvlášť:</p>

<pre>
:setlocal formatoptions+=_znak_
</pre>

<p>či:</p>

<pre>
:setlocal formatoptions-=_znak_
</pre>

<a href="http://i.iinfo.cz/images/138/vim14-1.png"><img src="http://i.iinfo.cz/images/138/vim14-1-prev.png" width="329" height="270" alt="&#160;" /></a>
<p><i>Obrázek 3: Odstavec textu naformátovaný na maximální šířku řádku 64
znaků. Šířka řádku byla nastavena volbou <strong>:set textwidth=64</strong> a
odstavec byl zformátován příkazem <strong>gqap</strong></i></p>

<p><ins>Poznámka: pokud se vám nebude dařit dosáhnout toho, aby se text
skutečně automaticky či poloautomaticky formátoval, a to i v&nbsp;případě, že
jsou volby <strong>textwidth</strong>, <strong>wrapmargin</strong> a
<strong>formatoptions</strong> nastaveny správně, ujistěte se, že je nastavena
nenulová šířka textu (<strong>:set textwidth=>0</strong>) a že současně není
nastavena volba <strong>compatible</strong> ani volba
<strong>paste</strong>:</ins></p>

<pre>
:set nocompatible
:set nopaste
</pre>

<p><ins>Poznámka<sup>2</sup>: volba <strong>paste</strong> je dosti užitečná
v&nbsp;případech kopírování textů přes schránku či výběr (<i>selection</i>),
kdy nechceme, aby <i>Vim</i> jakkoli do tohoto textu zasahoval, tj.&nbsp;snažil
se ho nějak formátovat. Ovšem ihned po vložení textu je vhodné tuto volbu opět
vypnout.</ins></p>

<a href="http://i.iinfo.cz/images/138/vim14-2.png"><img src="http://i.iinfo.cz/images/138/vim14-2-prev.png" width="329" height="270" alt="&#160;" /></a>
<p><i>Obrázek 4: Odstavec textu naformátovaný na maximální šířku řádku 54
znaků. Šířka řádku byla nastavena volbou <strong>:set wrapmargin=10</strong> a
počet sloupců na obrazovce byl nastaven přes <strong>:set columns=64</strong>.
Odstavec byl zformátován příkazem <strong>gqap</strong>, stejně jako
v&nbsp;předchozím případě.</i></p>



<p><a name="k03"></a></p>
<h2>3. Význam jednotlivých znaků konfiguračního parametru &bdquo;formatoptions&ldquo;</h2>

<p>Znaky, které mohou být součástí konfiguračního řetězce volby
<strong>formatoptions</strong>, je možné podle jejich funkce rozdělit do tří
skupin. V&nbsp;první skupině (té nejdůležitější) se nachází volby ovlivňující
především způsob formátování běžných odstavcových textů a seznamů. Všechny tyto
znaky jsou vypsány v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Znak</th><th>Význam znaku</th></tr>
<tr><td>1</td><td>t</td><td>jedna z&nbsp;nejdůležitějších voleb vůbec, povoluje zalamování textů při jejich editaci</td></tr>
<tr><td>2</td><td>w</td><td>v&nbsp;případě, že je tato volba nastavena, budou řádky nekončící na bílý znak považovány za konec odstavce; v&nbsp;opačném případě jsou odstavce od sebe odděleny prázdnými řádky</td></tr>
<tr><td>3</td><td>a</td><td>opět jedna velmi důležitá volba &ndash; zapnutí automatického formátování odstavců, podobně jako v&nbsp;textových procesorech (o této volbě jsme se zmínili již v&nbsp;předchozí části seriálu)</td></tr>
<tr><td>4</td><td>n</td><td>povoluje rozeznávání očíslovaných seznamů či seznamů s&nbsp;odrážkami, které jsou formátovány s&nbsp;odsazením. Další položka seznamu se automaticky vytvoří po stisku klávesy <strong>Enter</strong>.</td></tr>
<tr><td>5</td><td>2</td><td>při formátování odstavců se třetí a každý další řádek odsadí stejně, jako řádek druhý (nikoli jako řádek první). Vhodné v&nbsp;případech, kdy má první řádek změněný levý okraj.</td></tr>
<tr><td>6</td><td>l</td><td>opět velmi užitečná volba, především při práci s&nbsp;cizími texty &ndash; řádky delší než <strong>textwidth</strong> se nebudou automaticky zalamovat, což může zabránit neúmyslným změnám v&nbsp;dokumentu</td></tr>
<tr><td>7</td><td>1</td><td>řádek se nebude zalamovat ihned za jednopísmenným slovem (předložkou); sice to nepomůže vždy, ale v mnoha případech to zabraňuje výskytu typografických hrubek typu &bdquo;v&ldquo; na konci řádku atd.</td></tr>
</table>

<a href="http://i.iinfo.cz/images/138/vim14-3.png"><img src="http://i.iinfo.cz/images/138/vim14-3-prev.png" width="329" height="270" alt="&#160;" /></a>
<p><i>Obrázek 5: Nezformátovaný text, v&nbsp;němž se vyskytuje velké množství
jednopísmenných &bdquo;předložek&ldquo; představovaných znakem X.</i></p>

<a href="http://i.iinfo.cz/images/138/vim14-4.png"><img src="http://i.iinfo.cz/images/138/vim14-4-prev.png" width="329" height="270" alt="&#160;" /></a>
<p><i>Obrázek 6: Zformátovaní odstavce příkazem <strong>gqap</strong>. Ve
<strong>formatoptions</strong> se přitom nevyskytuje řídicí znak
&bdquo;1&ldquo;, proto jsou některé předložky umístěny i na konci řádku
(zvýrazněno).</i></p>

<a href="http://i.iinfo.cz/images/138/vim14-5.png"><img src="http://i.iinfo.cz/images/138/vim14-5-prev.png" width="329" height="270" alt="&#160;" /></a>
<p><i>Obrázek 7: Zformátovaní odstavce příkazem <strong>gqap</strong>, ve
<strong>formatoptions</strong> se vyskytuje řídicí znak &bdquo;1&ldquo;
zabraňující umístění předložek na konec řádku.</i></p>



<p><a name="k04"></a></p>
<h2>4. Konfigurační parametry používané při formátování poznámek a další volby</h2>

<p>Ve druhé skupině znaků, jež mohou být součástí konfiguračního řetězce
<strong>formatoptions</strong>, můžeme nalézt volby využívané především při
formátování víceřádkových komentářů ve zdrojových kódech:</p>

<table>
<tr><th>#</th><th>Znak</th><th>Význam znaku</th></tr>
<tr><td>1</td><td>c</td><td>povoluje zalamování komentářů a případné vkládání znaků označujících začátek komentáře</td></tr>
<tr><td>2</td><td>r</td><td>povoluje automatické vložení znaků označujících začátek komentáře po stisku klávesy <strong>Enter</strong></td></tr>
<tr><td>3</td><td>o</td><td>dtto, ale pro příkazy <strong>o</strong> a <strong>O</strong> (začátek psaní nové řádky pod či nad textový kurzor)</td></tr>
<tr><td>4</td><td>q</td><td>povolení formátování komentářů příkazem <strong>gq</strong></td></tr>
</table>

<p>A konečně se ve třetí skupině vyskytují volby, které jsou v&nbsp;našich
podmínkách buď nepoužitelné, nebo jsou zcela na obtíž. Jedná se o volby
ovlivňující míru kompatibility s&nbsp;editorem <i>Vi</i> a taktéž způsob
zacházení se znaky, jejichž kód je vyšší než 255, což je i případ českých znaků
v&nbsp;případě použití Unicode:</p>

<table>
<tr><th>#</th><th>Znak</th><th>Význam znaku</th></tr>
<tr><td>1</td><td>v</td><td>zapíná režim kompatibility s&nbsp;textovým editorem <i>Vi</i>, v&nbsp;němž se zalamování provádí pouze při zápisu bílého znaku v&nbsp;současně platném vkládacím režimu, nikoli na znaku vloženém dříve</td></tr>
<tr><td>2</td><td>b</td><td>podobné předchozí volbě, ovšem pouze pro bílé znaky vložené před limitem určeným pravým okrajem textu</td></tr>
<tr><td>3</td><td>m</td><td>ovlivňuje zalamování řádků i na znacích s&nbsp;hodnotou větší než 255. Vhodné pro některé asijské znaky, které vlastně představují celá slova, ale v&nbsp;našem jazyce to znamená, že se (v&nbsp;případě UTF-8 a Unicode obecně) budou slova zalamovat na jakémkoli znaku s&nbsp;nabodeníčkem.</td></tr>
<tr><td>4</td><td>M</td><td>ovlivňuje vkládání mezer při spojování řádků příkazem <strong>J</strong> (<i>join</i>) na místě znaků s&nbsp;hodnotou větší než 255</td></tr>
<tr><td>5</td><td>B</td><td>opak předchozí volby</td></tr>
</table>

<a href="http://i.iinfo.cz/images/138/vim14-6.png"><img src="http://i.iinfo.cz/images/138/vim14-6-prev.png" width="329" height="270" alt="&#160;" /></a>
<p><i>Obrázek 8: Zformátování odstavce se znaky s&nbsp;nabodeníčky, pokud je ve
<strong>formatoptions</strong> přítomen znak &bdquo;m&ldquo;. Povšimněte si
způsobu rozdělení slova na prvním řádku, kde se nachází kurzor.</i></p>

<a href="http://i.iinfo.cz/images/138/vim14-7.png"><img src="http://i.iinfo.cz/images/138/vim14-7-prev.png" width="328" height="270" alt="&#160;" /></a>
<p><i>Obrázek 9: Zformátování odstavce se znaky s&nbsp;nabodeníčky, pokud ve
<strong>formatoptions</strong> není přítomen znak &bdquo;m&ldquo;</i></p>



<p><a name="k05"></a></p>
<h2>5. Klávesové zkratky vhodné pro psaní dokumentů v&nbsp;(La)TeXu</h2>

<p>Při tvorbě textových souborů, které mají být vysázeny systémem <i>TeX</i>
nebo <i>LaTeX</i>, se kromě běžného odstavcového textu musí do dokumentu
zapisovat i poměrně velké množství různých příkazů, jejichž ruční vkládání je
samozřejmě velmi zdlouhavé a především zbytečné. Existuje několik cest, jak
vkládání příkazů zjednodušit a urychlit &ndash; příkazy mohou být například
obsaženy v&nbsp;menu, mohou být vyvolávány kombinací funkčních kláves apod.
Ovšem z&nbsp;praktického hlediska se (nejenom) mě osvědčily klávesové zkratky
zapisované přímo ve vkládacím režimu (<i>insert mode</i>). Každá zkratka přitom
začíná čárkou, za níž následuje sekvence alfanumerických znaků. V&nbsp;tomto
případě se využívá faktu, že se v&nbsp;psané formě našeho jazyka prakticky
nevyskytne situace, kdy by se za čárkou zapisoval jiný znak než mezera či konec
řádku. Navíc je znak čárky zapisovaný nezávisle na použitém rozložení
klávesnice.</p>

<a href="http://i.iinfo.cz/images/138/vim14-8.png"><img src="http://i.iinfo.cz/images/138/vim14-8-prev.png" width="370" height="191" alt="&#160;" /></a>
<p><i>Obrázek 10: Část konfiguračního souboru .vimrc obsahujícího nové
klávesové zkratky pro editaci souborů .tex.</i></p>

<p>Pro malou inspiraci následuje část konfiguračního souboru
<strong>.vimrc</strong>, v&nbsp;níž jsou definovány klávesové zkratky pro
vkládací režim využívané pro soubory s&nbsp;koncovkou <strong>.tex</strong>.
Povšimněte si, že po vložení nového příkazu do souboru se kurzor přesune do
složených závorek, tedy tam, kam se například zapisuje nadpis kapitoly
apod.:</p>

<pre>
augroup __latex__
au!
autocmd BufRead,BufNewFile *.tex inoremap ,ch \chapter{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,sa \section{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,sb \subsection{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,sc \subsubsection{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,ee \emph{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,tt \texttt{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,bb \textbf{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,uv \uv{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,vv \verb$$&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,hh \helpref{}{}&lt;Left&gt;&lt;Left&gt;&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,cen \begin{center}&lt;CR&gt;&lt;CR&gt;\end{center}&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,quo \begin{quote}&lt;CR&gt;&lt;CR&gt;\end{quote}&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,tab \begin{tabular}{ll}&lt;CR&gt;&lt;CR&gt;\end{tabular}&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,tbl \begin{table}[htp]&lt;CR&gt;&lt;CR&gt;\caption{}&lt;CR&gt;\label{}&lt;CR&gt;\end{table}&lt;C-O&gt;3k
autocmd BufRead,BufNewFile *.tex inoremap ,ver \begin{verbatim}&lt;CR&gt;&lt;CR&gt;\end{verbatim}&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,qv \begin{quote}\begin{verbatim}&lt;CR&gt;&lt;CR&gt;\end{verbatim}\end{quote}&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,fig \begin{figure}[htp]&lt;CR&gt;&lt;CR&gt;\caption{}&lt;CR&gt;\label{}&lt;CR&gt;\end{figure}&lt;C-O&gt;3k
autocmd BufRead,BufNewFile *.tex inoremap ,it \begin{itemize}&lt;CR&gt;\item &lt;CR&gt;\end{itemize}&lt;CR&gt;&lt;Up&gt;&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,en \begin{enumerate}&lt;CR&gt;\item &lt;CR&gt;\end{enumerate}&lt;CR&gt;&lt;Up&gt;&lt;Up&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,ii \item&lt;Space&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,in \index{!}&lt;Left&gt;&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,ff \footnote{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,re \ref{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,ll \label{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,ci \cite{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,eq \begin{equation}&lt;CR&gt;&lt;CR&gt;\end{equation}&lt;CR&gt;&lt;up&gt;&lt;up&gt;
augroup END
</pre>

<a href="http://i.iinfo.cz/images/138/vim14-9.png"><img src="http://i.iinfo.cz/images/138/vim14-9-prev.png" width="370" height="191" alt="&#160;" /></a>
<p><i>Obrázek 11: Klávesové zkratky je možné definovat samostatně pro každý typ
souboru. Zde jsou například zkratky využitelné při editacích SVG (Scalable
Vector Graphics).</i></p>



<p><a name="k06"></a></p>
<h2>6. Další pomocné příkazy pro psaní dokumentů v&nbsp;(La)TeXu</h2>

<p>Nové příkazy uvedené v&nbsp;předchozí kapitole je vhodné doplnit i o poněkud
obecnější varianty. V&nbsp;následujících dvou řádcích je definice dvou
klávesových zkratek. První z&nbsp;nich (vyvolávaná dvojitým stlačením čárky)
slouží pro vložení konstrukce, z&nbsp;níž lze sestavit jakýkoliv strukturovaný
příkaz <i>LaTeXu</i>, zatímco druhý příkaz vyvolávaný klávesovou zkratkou ,.
(čárka následovaná tečkou) slouží pro ukončení příkazu začínajícího na
<strong>\begin{nějaký text}</strong> takovým způsobem, že se do dokumentu vloží
na stejný řádek <strong>\end{nějaký text}</strong>. Povšimněte si využití
příkazu <strong>y</strong> (<i>yank</i>) společně s&nbsp;operátorem
<strong>t}</strong> (<i>goto character "}"</i>):</p>

<pre>
autocmd BufRead,BufNewFile *.tex inoremap ,, \{}&lt;Left&gt;
autocmd BufRead,BufNewFile *.tex inoremap ,. &lt;Esc&gt;F{lyt}f}a\end{}&lt;Esc&gt;PF\i
</pre>

<p>Další klávesové zkratky slouží k&nbsp;přesunu textového kurzoru před začátek
příkazu, tj.&nbsp;před znak zpětného lomítka, a za konec příkazu, tj.&nbsp;za
pravou složenou závorku. Tyto funkce jsou namapovány na kombinace kláves
<strong>Alt+šipka doleva</strong> a <strong>Alt+šipka doprava</strong>, což
znamená, že v&nbsp;textové konzoli či v&nbsp;emulátoru terminálu pravděpodobně
nebudou zkratky použitelné (ovšem lze samozřejmě použít i jiné kombinace
kláves):</p>

<pre>
autocmd BufRead,BufNewFile *.tex noremap &lt;M-Right&gt; f}
autocmd BufRead,BufNewFile *.tex inoremap &lt;M-Right&gt; &lt;C-O&gt;f}&lt;Right&gt;
autocmd BufRead,BufNewFile *.tex noremap &lt;M-Left&gt; F\
autocmd BufRead,BufNewFile *.tex inoremap &lt;M-Left&gt; &lt;C-O&gt;F\
</pre>

<p>Na závěr této kapitoly si ukážeme ještě dvojici příkazů sloužících pro
nastavení chování <i>Vimu</i> při otevírání souborů s&nbsp;koncovkou
<strong>.tex</strong> (kódování souboru bude v&nbsp;současnosti pravděpodobně
již téměř všude nastaveno na UTF-8, zde se jedná o částečně historickou
konfiguraci):</p>

<pre>
autocmd BufRead,BufNewFile *.tex set tw=0 wrap linebreak expandtab fileencodings=iso-8859-2 ff=unix
autocmd BufRead,BufNewFile *.tex set iskeyword+=\_
</pre>

<p>A konečně se někomu může hodit klávesová zkratka určená pro zápis znaku
tildy, která slouží, což TeXperti samozřejmě znají, pro vložení nedělitelné
mezery do dokumentu. Někdy je totiž tildu nutné vložit ručně, protože program
<strong>vlnka</strong> si s&nbsp;některými případy nemůže poradit:</p>

<pre>
autocmd BufRead,BufNewFile *.tex inoremap ;; ~
</pre>



<p><a name="k07"></a></p>
<h2>7. Klávesové zkratky určené pro zvýraznění textu vybraného do bloku</h2>

<p>Textový editor <i>Vim</i> může alespoň částečně napodobit i některé další
funkce textových procesorů, například zvýraznění vybrané části textu tučným
písmem, kurzívou či neproporcionálním písmem (<i>dálnopis, teletype</i>).
V&nbsp;případě <i>LaTeXu</i> se toto zvýraznění provádí uzavřením části textu
do příkazů <strong>\emph{}</strong> (zvýraznění kurzivou či v&nbsp;kurzivním
textu naopak svislým písmem), <strong>{\textbf }</strong> (zvýraznění textu
tučným písmem) a <strong>{\texttt }</strong> (neproporcionální písmo). Vložení
těchto formátovacích příkazů zajišťuje trojice nových klávesových zkratek
<strong>CTRL+I</strong>, <strong>CTRL+B</strong> a <strong>CTRL+T</strong>,
které jsou ovšem platné pouze v&nbsp;režimu výběru textu, což znamená, že tyto
klávesové zkratky se v&nbsp;případě potřeby mohou v&nbsp;jiných režimech použít
pro (zcela) odlišné účely:</p>

<pre>
" funkce pro praci s bloky textu - zvyrazneni textu ve vybranem bloku
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-I&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai\emph{&lt;esc&gt;
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-B&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai{\textbf &lt;esc&gt;
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-T&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai{\texttt &lt;esc&gt;
</pre>

<p>Pokud preferujete, aby blok textu zůstal vybraný, je možné výše uvedené
příkazy modifikovat pouze minimálně přidáním volání příkazu <strong>gv</strong>
(opětovný přechod do režimu výběru bloku, ovšem s&nbsp;tím, že zůstane zachován
původní vybraný text):</p>

<pre>
" funkce pro praci s bloky textu s obnovením původně vybraného bloku
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-I&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai\emph{&lt;esc&gt;gv
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-B&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai{\textbf &lt;esc&gt;gv
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-T&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai{\texttt &lt;esc&gt;gv
</pre>

<p>Čtvrtým užitečným příkazem používaným podobným způsobem (na vybraný blok),
je uzavření textu do uvozovek, což v&nbsp;případě balíčku
<strong>czech</strong> zajišťuje makro <strong>\uv{}</strong>:</p>

<pre>
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-U&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai\uv{&lt;esc&gt;
</pre>

<p>popř.&nbsp;téměř shodný příkaz s&nbsp;obnovou bloku:</p>

<pre>
autocmd BufRead,BufNewFile *.tex vnoremap &lt;C-U&gt; omaomb&lt;esc&gt;`bi}&lt;esc&gt;`ai\uv{&lt;esc&gt;gv
</pre>

<a href="http://i.iinfo.cz/images/138/vim14-10.png"><img src="http://i.iinfo.cz/images/138/vim14-10-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 12: Rozličné užitečné klávesové zkratky využívané při editacích
(La)TeXovských dokumentů.</i></p>



<p><a name="k08"></a></p>
<h2>8. Pomocné makro justify.vim</h2>

<p>Při formátování textů nám mnohdy možnosti zabudované přímo do textového
editoru <i>Vim</i> nemusí dostačovat, zejména tehdy, když má být text zarovnán
do bloku (na pravý i levý okraj), tj.&nbsp;když mají být mezi slova vloženy
další mezery. V&nbsp;takových případech je možné buď využít nějaký externí
formátovací filtr (například <strong>fmt</strong>) nebo &ndash; což je
snadnější a současně i stylovější &ndash; zavolat makro uložené v&nbsp;souboru
<strong>justify.vim</strong>. Tento soubor je přímo součástí instalace
<i>Vimu</i> (vim-enhanced), proto ho je možné načíst přímo
z&nbsp;<strong>.vimrc</strong>, například následujícím způsobem:</p>

<pre>
if v:version&gt;=600
    source $VIMRUNTIME/macros/justify.vim
endif
</pre>

<p>Pokud došlo k&nbsp;úspěšnému načtení souboru (skriptu), je možné kdykoli
makro zavolat, přičemž formát volání je následující:</p>

<pre>
:call Justify([textwidth [,maxspaces]])
</pre>

<a href="http://i.iinfo.cz/images/138/vim14-11.png"><img src="http://i.iinfo.cz/images/138/vim14-11-prev.png" width="316" height="270" alt="&#160;" /></a>
<p><i>Obrázek 13: Odstavec zarovnaný na oba okraje zavoláním makra :call
Justify(64,3).</i></p>

<p>První nepovinný parametr obsahuje šířku textu, popř.&nbsp;řetězec 'tw' nebo
'' v&nbsp;případě, že se tato hodnota má získat z&nbsp;konfiguračního parametru
<strong>textwidth</strong>. Druhý nepovinný parametr obsahuje maximální délku
sekvence mezer vkládaných do souboru. Pokud by se při vkládání mezer vytvořila
delší sekvence mezer, než je zde uvedená hodnota, řádek by zůstal nezformátován
(a tudíž většinou zarovnán doleva).</p>

<p>Makro <strong>Justify()</strong> se používá na zarovnání jednoho řádku nebo
sekvence řádků (třeba odstavce) vybraných do bloku. Přitom platí, že délka
řádků by měla být menší nebo rovna požadované šířce odstavce po zformátování,
protože delší řádky nejsou automaticky rozděleny na větší množství řádků
&ndash; toto makro totiž pouze vkládá mezery mezi slova, žádné další
formátování se neprovádí. To však vůbec nevadí, protože těsně před voláním
makra <strong>Justify()</strong> lze celý odstavec zformátovat příkazem
<strong>gqap</strong>. Osobně používám následující mapování, které zajistí
zformátování odstavce, na němž se nachází kurzor s&nbsp;následným posunem
kurzoru pod odstavec (což umožňuje snadné formátování dalšího odstavce):</p>

<pre>
map \ gqapkvap:call Justify(80,4)&lt;cr&gt;}
</pre>

<p>Celou sekvenci <i>Vimovských</i> jednoznakových příkazů lze rozdělit na tři
části:</p>

<pre>
gqap - zformátování odstavce
k    - přesun kurzoru zpět do odstavce
vap  - výběr odstavce do bloku
</pre>

<a href="http://i.iinfo.cz/images/138/vim14-12.png"><img src="http://i.iinfo.cz/images/138/vim14-12-prev.png" width="316" height="270" alt="&#160;" /></a>
<p><i>Obrázek 14: Odstavec zarovnaný na oba okraje zavoláním makra :call
Justify(50,4). V&nbsp;tomto případě nejsou některé řádky oboustranně zarovnány,
protože by musel být použit větší počet mezer než je udaná mez 4.</i></p>



<p><a name="k09"></a></p>
<h2>9. Odkazy na Internetu</h2>

<ol>

<li>vim.wikia: Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>vim.wikia: Writing a valid statusline<br />
<a href="http://vim.wikia.com/wiki/Writing_a_valid_statusline">http://vim.wikia.com/wiki/Writing_a_valid_statusline</a>
</li>

<li>vim.wikia: Statusline tab level ruler<br />
<a href="http://vim.wikia.com/wiki/Statusline_tab_level_ruler">http://vim.wikia.com/wiki/Statusline_tab_level_ruler</a>
</li>

<li>vim.wikia: Switching between different statuslines<br />
<a href="http://vim.wikia.com/wiki/Switching_between_different_statuslines">http://vim.wikia.com/wiki/Switching_between_different_statuslines</a>
</li>

<li>X Selections, Cut Buffers, and Kill Rings<br />
<a href="http://www.jwz.org/doc/x-cut-and-paste.html">http://www.jwz.org/doc/x-cut-and-paste.html</a>
</li>

<li>Accessing the system clipboard<br />
<a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard">http://vim.wikia.com/wiki/Accessing_the_system_clipboard</a>
</li>

<li>
xcutsel(1) - Linux man page<br />
<a href="http://linux.die.net/man/1/xcutsel">http://linux.die.net/man/1/xcutsel</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

<li>Clewn home page<br />
<a href="http://clewn.sourceforge.net/">http://clewn.sourceforge.net/</a>
</li>

<li>How to connect vim with gdb - using clewn<br />
<a href="http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn">http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn</a>
</li>

<li>yavdb : Yet Another (Generic) Vim Debugger Integration<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1954">http://www.vim.org/scripts/script.php?script_id=1954</a>
</li>

<li>Vim home page<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>Exuberant ctags<br />
<a href="http://ctags.sourceforge.net/">http://ctags.sourceforge.net/</a>
</li>

<li>xxd (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>ctags (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags</a>
</li>

<li>cscope (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Novinky ve VIM 7: Úvodní část - speller<br />
<a href="http://www.root.cz/vim-sedm-prvni-cast/">http://www.root.cz/vim-sedm-prvni-cast/</a>
</li>

<li>Novinky ve VIM 7: Skriptovací jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>vim2elvis: Přednosti a nedostaky Elvise v porovnání s Vimem<br />
<a href="http://www.root.cz/clanky/vim2elvis-1/">http://www.root.cz/clanky/vim2elvis-1/</a>
</li>

<li>vim2elvis: Shodné znaky mezi Elvisem a Vimem, nastavení­editoru<br />
<a href="http://www.root.cz/clanky/vim2elvis-2/">http://www.root.cz/clanky/vim2elvis-2/</a>
</li>

<li>Nej... VIM pluginy (1)<br />
<a href="http://www.root.cz/clanky/nej-vim-pluginy/">http://www.root.cz/clanky/nej-vim-pluginy/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>Scroll Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Scroll_lock">http://necyklopedie.wikia.com/wiki/Scroll_lock</a>
</li>

<li>Caps Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Caps_Lock">http://necyklopedie.wikia.com/wiki/Caps_Lock</a>
</li>

<li>Avoid the escape key<br />
<a href="http://vim.wikia.com/wiki/Avoid_the_escape_key">http://vim.wikia.com/wiki/Avoid_the_escape_key</a>
</li>

<li>Map caps lock to escape in XWindows<br />
<a href="http://vim.wikia.com/wiki/VimTip166">http://vim.wikia.com/wiki/VimTip166</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2010</small></p>
</body>
</html>

