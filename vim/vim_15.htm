<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textový editor Vim jako IDE (15.část - editace XML a HTML)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textový editor Vim jako IDE (15.část - editace XML a HTML)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V&nbsp;patnácté části seriálu o různých způsobech využití textového editoru Vim si ukážeme některé možnosti, které nám tento editor poskytuje při editaci souborů uložených ve formátech XML (XHTML, DocBook, XSL, Ant, ...) a HTML. Taktéž si ukážeme, jaké další nástroje, především Vimovské skripty (makra) a externí utility, je možné při úpravách XML i HTML využít.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Využití textového editoru Vim při práci se soubory typu XML a HTML</a></p>
<p><a href="#k02">2. Jedna z&nbsp;největších zbraní Vimu: kombinace operátorů a příkazů pro pohyb kurzoru</a></p>
<p><a href="#k03">3. Příkazy pro pohyb kurzoru a textové objekty využitelné při práci s&nbsp;XML a HTML</a></p>
<p><a href="#k04">4. Ukázky výběru různých částí XML souboru</a></p>
<p><a href="#k05">5. Práce s&nbsp;párovými značkami &ndash; makro <strong>matchit.vim</strong></a></p>
<p><a href="#k06">6. Zjednodušení editace XML souborů &ndash; sada maker <strong>xml.vim</strong></a></p>
<p><a href="#k07">7. Funkce dostupné v&nbsp;sadě maker <strong>xml.vim</strong></a></p>
<p><a href="#k08">8. Užitečné externí příkazy (filtry) používané při práci s&nbsp;XML dokumenty</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2>1. Využití textového editoru Vim při práci se soubory typu XML a HTML</h2>

<p>Jak jsme si již řekli <a
href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-automaticke-formatovani-textu-dokonceni/">v&nbsp;předchozí
části</a> tohoto seriálu, textový editor <i>Vim</i> je možné mj.&nbsp;použít i
pro editaci souborů založených na jazyku <i>XML</i>, ať již se jedná o
<i>XHTML</i>, <i>DocBook</i>, <i>XSL (Extensible Stylesheet Language)</i>,
<i>XSLT (eXtensible Stylesheet Language Transformations)</i>, definiční soubor
pro nástroj <i>Ant</i> či o různé konfigurační soubory, kterých je i na vašem
souborovém sytému s&nbsp;velkou pravděpodobností uloženo hned několik desítek
či spíše stovek :-), a to ani nemusíme počítat <i>XML</i> &bdquo;ukryté&ldquo;
v&nbsp;souborech s&nbsp;dokumenty OpenOffice.org. Soubory zapisované
v&nbsp;některé z&nbsp;implementací (aplikací) jazyka <i>XML</i> se svojí
strukturou v&nbsp;mnoha ohledech odlišují od syntaxe používané naprostou
většinou klasických programovacích jazyků. Jeden velký rozdíl spočívá například
v&nbsp;tom, že se zapisovaný kód či dokument nestrukturuje na základě klíčových
slov a znaků se speciálním významem, ale celá struktura je určena takzvanými
<i>značkami (tag)</i> a uspořádáním celého dokumentu do stromové struktury
(s&nbsp;jediným kořenovým uzlem).</p>

<a href="http://i.iinfo.cz/images/131/vim15-01-1.png"><img src="http://i.iinfo.cz/images/131/vim15-01-1-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 1: Tabulkový procesor <strong>Gnumeric</strong> používá pro
ukládání sešitů značkovací jazyk XML, ovšem soubory s&nbsp;XML dokumentem jsou
navíc zkomprimovány <strong>gzipem</strong>.</i></p>

<p>Tato od běžných programovacích jazyků odlišná struktura dokumentu má
samozřejmě svůj vliv i na způsob práce se soubory typu <i>XML</i> ve
<i>Vimu</i>, protože klasické editační operace typu &bdquo;skok na nejbližší
pravou složenou závorku&ldquo; (<strong>f}</strong>), &bdquo;vymazání těla
funkce&ldquo; (<strong>diB</strong>), &bdquo;vložení celé věty či odstavce do
vybraného registru&ldquo; (<strong>"xyap</strong>) atd. nejsou již tak často
používány. Namísto toho by uživatelé rádi využívali editační operace typu
&bdquo;doplň počáteční resp.&nbsp;koncovou značku&ldquo;, &bdquo;vymaž celý
element (prvek)&ldquo;, &bdquo;ulož text uvnitř elementu (prvku) do vybraného
registru&ldquo; či &bdquo;skoč na odpovídající počáteční/koncovou
značku&ldquo;. V&nbsp;následujících kapitolách si ukážeme některé možnosti,
které nám textový editor <i>Vim</i> při editaci <i>XML</i> souborů nabízí.
Taktéž si řekneme, jaké další nástroje (jak Vimovské skripty, tak i externí
utility &ndash; filtry) je možné při úpravách <i>XML</i> souborů využít.</p>

<a href="http://i.iinfo.cz/images/131/vim15-01-2.png"><img src="http://i.iinfo.cz/images/131/vim15-01-2-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 2: Na značkovacím jazyku XML jsou taktéž založeny soubory
používané programem <strong>FreeMind</strong> sloužícího pro editaci takzvaných
myšlenkových map.</i></p>



<p><a name="k02"></a></p>
<h2>2. Jedna z&nbsp;největších zbraní Vimu: kombinace operátorů a příkazů pro pohyb kurzoru</h2>

<p>Začněme nejdříve popisem interních funkcí, které nám při editaci <i>XML</i>
či <i>HTML</i> nabízí samotný <i>Vim</i>. Tento textový editor totiž rozšířil
původní význam příkazů skládajících se z&nbsp;nějakého operátoru následovaného
příkazem pro pohyb kurzoru (jedná se přitom o jednu z&nbsp;nejužitečnějších
vlastností zavedených v&nbsp;rámci textového editoru <i>Vi</i>, není tedy divu,
že existuje několik desítek příkazů pro změnu pozice kurzoru v&nbsp;textu).
Mezi v&nbsp;současnosti dostupné operátory patří především:</p>

<table>
<tr><th> #</th><th>Zkratka</th><th>Operátor</th><th>Význam</th></tr>
<tr><td> 1</td><td>c   </td><td>change     </td><td>změna textu (<strong>delete</strong> a následný přechod do vkládacího režimu)</td></tr>
<tr><td> 2</td><td>d   </td><td>delete     </td><td>vymazání textu</td></tr>
<tr><td> 3</td><td>y   </td><td>yank       </td><td>kopie textu do registru</td></tr>
<tr><td> 4</td><td>!   </td><td>filter     </td><td>filtrace přes externí příkaz</td></tr>
<tr><td> 5</td><td>&gt;</td><td>shift right</td><td>posun textu doprava o <strong>shiftwidth</strong></td></tr>
<tr><td> 6</td><td>&lt;</td><td>shift left </td><td>posun textu doleva o <strong>shiftwidth</strong></td></tr>
<tr><td> 7</td><td>g~  </td><td>swap case  </td><td>změna malých písmen na velké a naopak (použil tento příkaz někdo?)</td></tr>
<tr><td> 8</td><td>gu  </td><td>lowercase  </td><td>změna na malá písmena (mínusky)</td></tr>
<tr><td> 9</td><td>gU  </td><td>Uppercase  </td><td>změna na velká písmena (verzálky)</td></tr>
<tr><td>10</td><td>gq  </td><td>format     </td><td>zformátování textu (viz předchozí část tohoto seriálu)</td></tr>
<tr><td>11</td><td>=   </td><td>indent     </td><td>změna zarovnání textu, buď interním algoritmem, nebo pomocí externího programu definovaného v&nbsp;<strong>equalprg</strong></td></tr>
</table>

<p>Seznam všech operátorů dostupných ve <i>Vimu</i> lze nalézt na stránce <a
href="http://vimdoc.sourceforge.net/htmldoc/motion.html#operator">http://vimdoc.sourceforge.net/htmldoc/motion.html#operator</a>,
popř.&nbsp;přímo z&nbsp;textového editoru:</p>

<pre>
:help operator
</pre>

<a href="http://i.iinfo.cz/images/131/vim15-01-3.png"><img src="http://i.iinfo.cz/images/131/vim15-01-3-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 3: Logo textového editoru <strong>Vim</strong> uložené ve
vektorovém formátu <strong>SVG</strong>.</i></p>



<p><a name="k03"></a></p>
<h2>3. Příkazy pro pohyb kurzoru a textové objekty využitelné při práci s&nbsp;XML a HTML</h2>

<p>Namísto pouhého příkazu pro pohyb kurzoru v&nbsp;textovém dokumentu je ve
<i>Vimu</i> (nikoli však v&nbsp;původním editoru <i>Vi</i> ani
v&nbsp;historických verzích <i>Vimu</i>) možné specifikovat i oblast, na níž je
operátor aplikován. Oblast se definuje pomocí takzvaného textového objektu,
před jehož jméno se zapisuje znak <strong>i</strong> (<i>inner</i>, bez
okrajových znaků) či <strong>a</strong> (<strong>a</strong>, včetně okrajových
znaků). Může se jednat například o slovo (<strong>w</strong> &ndash;
<i>word</i>), větu (<strong>s</strong> &ndash; <i>sentence</i>), blok textu
umístěný mezi kulatými závorkami (<strong>b</strong> &ndash; <i>block</i>) či o
odstavec (<strong>p</strong> &ndash; <i>paragraph</i>). S&nbsp;touto
funkcionalitou jsme se sice seznámili již <a
href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-3-cast/">ve třetí
části</a> tohoto seriálu, připomeňme si však, že mezi možná poněkud méně známé
textové objekty patří i takzvaný <i>tag</i> představovaný při zápisu příkazu
znakem <strong>t</strong>. Tag přitom odpovídá párovému <i>XML</i> či
<i>HTML</i> elementu (nepárové elementy nejsou podporovány).</p>

<p>Podobně jako u většiny dalších textových objektů, se i v&nbsp;případě
<i>tagu</i> rozlišuje mezi jeho vnitřní částí a celým tagem, tj.&nbsp;jeho
vnitřní částí společně s&nbsp;oběma okrajovými značkami (viz též ukázky uvedené
v&nbsp;následující kapitole). Zajímavá a velmi užitečná je i možnost
specifikace, kolik nadřazených elementů se má vybrat &ndash; tuto možnost lze
využít jak v&nbsp;<i>XML</i>, tak i v&nbsp;<i>HTML</i> za předpokladu, že se
elementy nepřekrývají (což by samozřejmě neměly, ale...) a jsou v&nbsp;sobě
vnořené. Kromě tohoto typu textového objektu se při editaci <i>XML</i> často
využívají i další textové objekty &ndash; výběr textu uzavřeného do uvozovek
(řetězec), a taktéž skok na nejbližší levou závorku i skok na nejbližší pravou
ostrou závorku. Podívejme se na několik užitečných příkazů:</p>

<table>
<tr><th>#</th><th>Příkaz/textový objekt</th><th>Mnemotechnická pomůcka</th><th>Význam</th></tr>
<tr><td> 1</td><td>it</td><td>inner tag</td><td>text umístěný uvnitř elementu</td></tr>
<tr><td> 2</td><td>at</td><td>a tag</td><td>samotný element + text umístěný uvnitř elementu</td></tr>
<tr><td> 3</td><td>2it</td><td>2&times; inner tag</td><td>výběr elementu + vnitřku nadřazeného elementu</td></tr>
<tr><td> 4</td><td>2at</td><td>2&times; a tag</td><td>výběr elementu + celého nadřazeného elementu</td></tr>
<tr><td> 5</td><td>f&gt;</td><td>find &gt;</td><td>výběr textu až do konce značky (včetně poslední ostré závorky)</td></tr>
<tr><td> 6</td><td>t&gt;</td><td>find to &gt;</td><td>výběr textu až do konce značky (kromě poslední ostré závorky)</td></tr>
<tr><td> 7</td><td>F&lt;</td><td>find &lt; backward</td><td>výběr textu do začátku značky (včetně první ostré závorky)</td></tr>
<tr><td> 8</td><td>T&lt;</td><td>find to &lt; backward</td><td>výběr textu do začátku značky (kromě první ostré závorky)</td></tr>
<tr><td> 9</td><td>a"</td><td>a string</td><td>výběr řetězce, typicky atributu, včetně uvozovek a popř.&nbsp;i okolních bílých znaků</td></tr>
<tr><td>10</td><td>i"</td><td>inner string</td><td>výběr řetězce, typicky atributu, kromě uvozovek</td></tr>
</table>

<a href="http://i.iinfo.cz/images/131/vim15-01-4.png"><img src="http://i.iinfo.cz/images/131/vim15-01-4-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 4: Další ukázka vektorové kresby uložené ve formátu
<strong>SVG</strong>, kde je vidět, že XML může obsahovat i poměrně rozsáhlé
části nestrukturovaných dat, zde konkrétně řetězců, do nichž je zakódována
cesta (path).</i></p>



<p><a name="k04"></a></p>
<h2>4. Ukázky výběru různých částí XML souboru</h2>

<p>V&nbsp;této kapitole je na několika screenshotech ukázáno využití příkazů
pro pohyb kurzoru i příkazů pro výběr textových objektů. Namísto operátoru
měnícího obsah dokumentu či pouze kopírujícího část dokumentu do vybraného
registru byl z&nbsp;ukázkových důvodů použit příkaz <strong>v</strong>, neboli
(vizuální) výběr bloku. Připomeňme si, že pomocí příkazu <strong>v</strong> se
editor <i>Vim</i> přepíná do vizuálního režimu, v&nbsp;němž je možné využívat
libovolnou sekvenci příkazů pro pohyb v&nbsp;textu. Tento režim se většinou
ukončuje zadáním operátoru (operátor se tedy používá až nakonec, což je přesně
naopak oproti obvykle používanému způsobu operátor&rarr;příkaz).</p>

<a href="http://i.iinfo.cz/images/22/vim15b-1.png"><img src="http://i.iinfo.cz/images/22/vim15b-1-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 5: Testovací dokument, na kterém budou vyzkoušeny některé příkazy
pro výběr elementů atd. Jedná se o soubor <strong>web.xml</strong> používaný
pro konfiguraci webových aplikací nasazovaných v&nbsp;rámci servlet kontejneru
(Tomcat atd.). Kurzor je umístěn v&nbsp;místě, odkud budou vyvolávány i všechny
další příkazy.</i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-2.png"><img src="http://i.iinfo.cz/images/22/vim15b-2-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 6: Výběr textu uvnitř jednoho elementu pomocí příkazu
<strong>vit</strong>.</i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-3.png"><img src="http://i.iinfo.cz/images/22/vim15b-3-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 7: Výběr celého elementu, včetně počáteční a ukončující značky
s&nbsp;využitím příkazu <strong>vat</strong></i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-4.png"><img src="http://i.iinfo.cz/images/22/vim15b-4-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 8: Efekt použití příkazu <strong>v2it</strong> &ndash; výběr
nadřazeného elementu.</i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-5.png"><img src="http://i.iinfo.cz/images/22/vim15b-5-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 9: Efekt použití příkazu <strong>v2at</strong> &ndash; výběr
nadřazeného elementu, včetně jeho počáteční a ukončující značky.</i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-6.png"><img src="http://i.iinfo.cz/images/22/vim15b-6-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 10: Blok vybraný příkazem <strong>v3at</strong> aneb který jiný
textový editor umí s&nbsp;XML zacházet tak snadno? :-)</i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-7.png"><img src="http://i.iinfo.cz/images/22/vim15b-7-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 11: Výběr textu od pozice kurzoru ke konci značky pomocí příkazu
<strong>vf&gt;</strong></i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-8.png"><img src="http://i.iinfo.cz/images/22/vim15b-8-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 12: Přesun kurzoru do textového atributu příkazem
<strong>3?"</strong> a následný výběr hodnoty atributu pomocí příkazu
<strong>vi"</strong></i></p>

<a href="http://i.iinfo.cz/images/22/vim15b-9.png"><img src="http://i.iinfo.cz/images/22/vim15b-9-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 13: Přesun na stejné místo, jako tomu bylo u předchozího
příkladu, výběr atributu včetně uvozovek příkazem <strong>va"</strong></i></p>



<p><a name="k05"></a></p>
<h2>5. Práce s&nbsp;párovými značkami &ndash; makro <strong>matchit.vim</strong></h2>

<p>Přímo v&nbsp;instalačním balíčku textového editoru <i>Vim</i> se nachází i
užitečná sada skriptů uložená v&nbsp;souboru <strong>matchit.vim</strong>. Tyto
skripty slouží především k&nbsp;usnadnění přeskoku mezi počáteční a koncovou
značkou libovolného elementu s&nbsp;využitím klávesy &bdquo;%&ldquo;
(procento), která se běžně používá na přeskoky mezi různými typy párových
závorek. Aby se tyto skripty automaticky načetly, je nutné soubor
<strong>matchit.vim</strong> zkopírovat do adresáře
<strong>~/.vim/plugin/</strong>, popř.&nbsp;zde vytvořit symbolický odkaz na
původní umístění souboru (<strong>$VIM/vimcurrent/macros/matchit.vim</strong>,
v&nbsp;mém případě
<strong>/usr/share/vim/vimcurrent/macros/matchit.vim</strong>). Dále je
většinou nutné v&nbsp;konfiguračním souboru <strong>~/.vimrc</strong> zapsat
následující sekvenci příkazů:</p>

<pre>
:filetype plugin on
:filetype detect
</pre>

<p>které by měly být zapsány až za příkazem:</p>

<pre>
:set nocompatible
</pre>

<p>Pokud jsou výše uvedené podmínky splněny, je možné po načtení libovolného
souboru uloženého ve formátu <i>XML</i> nebo <i>HTML</i> použít klávesovou
zkratku &bdquo;%&ldquo; pro přemístění kurzoru na odpovídající počáteční či
koncovou značku elementu v&nbsp;případě, že se kurzor nachází na jménu značky
(například uvnitř slova <strong>pre</strong> u značky &lt;pre&gt;. Pokud se
kurzor nachází na levé či pravé ostré závorce, přeskočí kurzor po stisku
&bdquo;%&ldquo; na odpovídající párovou závorku, což se taktéž může
v&nbsp;některých případech hodit.</p>

<a href="http://i.iinfo.cz/images/280/vim15c-1.png"><img src="http://i.iinfo.cz/images/280/vim15c-1-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 14: Po kopii souboru <strong>matchit.vim</strong> do adresáře
vypsaného v&nbsp;levé části screenshotu se bude makro uložené v&nbsp;tomto
skriptu automaticky načítat a využívat.</i></p>



<p><a name="k06"></a></p>
<h2>6. Zjednodušení editace XML souborů &ndash; sada maker <strong>xml.vim</strong></h2>

<p>Dalším užitečným skriptem, který může zjednodušit a současně i urychlit
editaci souborů typu <i>XML</i> a částečně i <i>HTML</i>, je skript nazvaný
jednoduše <strong>xml.vim</strong>, jenž však není &ndash; na rozdíl od výše
popsaného skriptu <strong>matchit.vim</strong> &ndash; standardní součástí
instalace <i>Vimu</i>. Poslední verzi skriptu <strong>xml.vim</strong> je možné
najít na adrese <a
href="http://www.vim.org/scripts/script.php?script_id=301">http://www.vim.org/scripts/script.php?script_id=301</a>.
Po stažení je nutné soubor <strong>xml.vim</strong> umístit do adresáře
<strong>~/.vim/fplugin</strong>, aby mohl být automaticky načten před začátkem
editace souborů používajících značkovací jazyk <i>XML</i>.</p>

<a href="http://i.iinfo.cz/images/280/vim15c-2.png"><img src="http://i.iinfo.cz/images/280/vim15c-2-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 15: Správné umístění souboru <strong>xml.vim</strong> do
adresářové struktury textového editoru Vim.</i></p>

<p>V&nbsp;tomto skriptu se nachází poměrně velké množství nových příkazů
popsaných v&nbsp;souboru <strong>xml-plugin.txt</strong>, nejužitečnější jsou
však nová mapování přiřazená ke znakům &gt; a &gt;&gt;. Tyto znaky, jak jistě
víte, slouží pro ukončení zápisu počáteční i koncové značky nějakého elementu.
Díky mapování je však umožněno, aby se po zápisu počáteční značky ihned
doplnila značka koncová, a to buď na stejném řádku (vhodné pro krátké
elementy), nebo na řádku novém, samozřejmě se správným zarovnáním.</p>

<a href="http://i.iinfo.cz/images/280/vim15c-3.png"><img src="http://i.iinfo.cz/images/280/vim15c-3-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 16: Soubor s&nbsp;dokumentací ke skriptu
<strong>xml.vim</strong>.</i></p>



<p><a name="k07"></a></p>
<h2>7. Funkce dostupné v&nbsp;sadě maker <strong>xml.vim</strong></h2>

<p>Podobně jako jsme to udělali ve čtvrté kapitole, i nyní si ukážeme možnosti
sady maker umístěných v&nbsp;souboru <strong>xml.vim</strong> na několika
screenshotech:</p>

<a href="http://i.iinfo.cz/images/277/vim15d-1.png"><img src="http://i.iinfo.cz/images/277/vim15d-1-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 17: Obsah souboru <strong>web.xml</strong> před začátkem
editace.</i></p>

<a href="http://i.iinfo.cz/images/277/vim15d-2.png"><img src="http://i.iinfo.cz/images/277/vim15d-2-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 18: Zápis počáteční značky elementu nazvaného
"welcome-file".</i></p>

<a href="http://i.iinfo.cz/images/277/vim15d-3.png"><img src="http://i.iinfo.cz/images/277/vim15d-3-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 19: Po zápisu znaku &gt; se automaticky doplní i koncová značka a
kurzor se umístí dovnitř elementu.</i></p>

<a href="http://i.iinfo.cz/images/277/vim15d-4.png"><img src="http://i.iinfo.cz/images/277/vim15d-4-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 20: Pokud by se namísto jediného znaku &gt; zapsaly znaky dva,
bude koncová značka umístěna na samostatný řádek a kurzor se přesune na nový
prázdný řádek, což je vhodné zejména při editaci složitější struktury.</i></p>

<a href="http://i.iinfo.cz/images/277/vim15d-5.png"><img src="http://i.iinfo.cz/images/277/vim15d-5-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 21: Nyní již můžeme dopsat požadovaný text do elementu.</i></p>

<a href="http://i.iinfo.cz/images/277/vim15d-6.png"><img src="http://i.iinfo.cz/images/277/vim15d-6-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 22: Nyní zkusíme opačný přístup: napřed zapíšeme text, jenž se má
umístit v&nbsp;elementu a vybereme ho do bloku (vap).</i></p>

<img src="http://i.iinfo.cz/images/277/vim15d-7.png" width="218" height="202" alt="&#160;" />
<p><i>Obrázek 23: Po stlačení zkratky ,x nebo \x (podle nastavení
<strong>mapleader</strong>) se Vim zeptá na jméno elementu a případné
atributy.</i></p>

<a href="http://i.iinfo.cz/images/277/vim15d-8.png"><img src="http://i.iinfo.cz/images/277/vim15d-8-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 24: Po zadání jména elementu (a vynechání atributů) vypadá soubor
<strong>web.xml</strong> takto.</i></p>



<p><a name="k08"></a></p>
<h2>8. Užitečné externí příkazy (filtry) používané při práci s&nbsp;XML dokumenty</h2>

<p>Na tomto místě je nutné přiznat, že textový editor <i>Vim</i> není sám o
sobě příliš vhodný na formátování souborů využívajících značkovací jazyk
<i>XML</i> (a většiny dalších souborů využívajících víceřádkové blokové
elementy). Ve skutečnosti to však ani není zapotřebí, protože pro tento účel je
možné využít celou řadu externích utilit použitých ve funkci filtru. Jednou
z&nbsp;nejrozšířenějších utilit vhodných pro tento účel je
<strong>xmllint</strong>, který lze zavolat s&nbsp;parametrem
<strong>--format</strong> povolujícím formátování a taktéž parametrem
<strong>-</strong> (pouze znak minus), díky němuž se <strong>xmllint</strong>
začne chovat jako filtr načítající data ze standardního vstupu a tisknoucí
zformátovaný dokument na standardní výstup. Pro zformátování celého dokumentu
lze tedy přímo ve <i>Vimu</i> použít příkaz:</p>

<pre>
:%!xmllint --format -
</pre>

<p>(znak % nahrazuje všechny řádky v&nbsp;editovaném bufferu)</p>

<a href="http://i.iinfo.cz/images/70/vim15zx-1.png"><img src="http://i.iinfo.cz/images/70/vim15zx-1-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 25: Dokument před zformátováním.</i></p>

<p>Pro zformátování části dokumentu vybraného do bloku se používá příkaz:</p>

<pre>
:'&lt;,'&gt;!xmllint --format -
</pre>

<p>(nezapomeňte na pomlčku na konci příkazu).</p>

<p>Při častějším použití se zajisté vyplatí vytvořit si novou klávesovou
zkratku:</p>

<pre>
:map =. :%!xmllint --format - &lt;cr&gt;
</pre>

<a href="http://i.iinfo.cz/images/70/vim15zx-2.png"><img src="http://i.iinfo.cz/images/70/vim15zx-2-prev.png" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 26: Výsledek zavolání příkazu <strong>:%!xmllint --format -</strong></i></p>



<p><a name="k09"></a></p>
<h2>9. Odkazy na Internetu</h2>

<ol>

<li>Pretty-formatting XML<br />
<a href="http://vim.wikia.com/wiki/Pretty-formatting_XML">http://vim.wikia.com/wiki/Pretty-formatting_XML</a>
</li>

<li>Delete a pair of XML/HTML tags<br />
<a href="http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags">http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags</a>
</li>

<li>Vim as XML Editor<br />
<a href="http://www.pinkjuice.com/howto/vimxml/">http://www.pinkjuice.com/howto/vimxml/</a>
</li>

<li>xmledit: A filetype plugin to help edit XML, HTML, and SGML documents<br />
<a href="http://www.vim.org/scripts/script.php?script_id=301">http://www.vim.org/scripts/script.php?script_id=301</a>
</li>

<li>Poslední vývojová verze makra xmledit<br />
<a href="http://github.com/sukima/xmledit/">http://github.com/sukima/xmledit/</a>
</li>

<li>vim.wikia: Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>vim.wikia: Writing a valid statusline<br />
<a href="http://vim.wikia.com/wiki/Writing_a_valid_statusline">http://vim.wikia.com/wiki/Writing_a_valid_statusline</a>
</li>

<li>vim.wikia: Statusline tab level ruler<br />
<a href="http://vim.wikia.com/wiki/Statusline_tab_level_ruler">http://vim.wikia.com/wiki/Statusline_tab_level_ruler</a>
</li>

<li>vim.wikia: Switching between different statuslines<br />
<a href="http://vim.wikia.com/wiki/Switching_between_different_statuslines">http://vim.wikia.com/wiki/Switching_between_different_statuslines</a>
</li>

<li>X Selections, Cut Buffers, and Kill Rings<br />
<a href="http://www.jwz.org/doc/x-cut-and-paste.html">http://www.jwz.org/doc/x-cut-and-paste.html</a>
</li>

<li>Accessing the system clipboard<br />
<a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard">http://vim.wikia.com/wiki/Accessing_the_system_clipboard</a>
</li>

<li>
xcutsel(1) - Linux man page<br />
<a href="http://linux.die.net/man/1/xcutsel">http://linux.die.net/man/1/xcutsel</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

<li>Clewn home page<br />
<a href="http://clewn.sourceforge.net/">http://clewn.sourceforge.net/</a>
</li>

<li>How to connect vim with gdb - using clewn<br />
<a href="http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn">http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn</a>
</li>

<li>yavdb : Yet Another (Generic) Vim Debugger Integration<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1954">http://www.vim.org/scripts/script.php?script_id=1954</a>
</li>

<li>Vim home page<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>Exuberant ctags<br />
<a href="http://ctags.sourceforge.net/">http://ctags.sourceforge.net/</a>
</li>

<li>xxd (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>ctags (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=ctags</a>
</li>

<li>cscope (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=cscope</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Novinky ve VIM 7: Úvodní část - speller<br />
<a href="http://www.root.cz/vim-sedm-prvni-cast/">http://www.root.cz/vim-sedm-prvni-cast/</a>
</li>

<li>Novinky ve VIM 7: Skriptovací jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>vim2elvis: Přednosti a nedostaky Elvise v porovnání s Vimem<br />
<a href="http://www.root.cz/clanky/vim2elvis-1/">http://www.root.cz/clanky/vim2elvis-1/</a>
</li>

<li>vim2elvis: Shodné znaky mezi Elvisem a Vimem, nastavení­editoru<br />
<a href="http://www.root.cz/clanky/vim2elvis-2/">http://www.root.cz/clanky/vim2elvis-2/</a>
</li>

<li>Nej... VIM pluginy (1)<br />
<a href="http://www.root.cz/clanky/nej-vim-pluginy/">http://www.root.cz/clanky/nej-vim-pluginy/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>Scroll Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Scroll_lock">http://necyklopedie.wikia.com/wiki/Scroll_lock</a>
</li>

<li>Caps Lock (Necyklopedie)<br />
<a href="http://necyklopedie.wikia.com/wiki/Caps_Lock">http://necyklopedie.wikia.com/wiki/Caps_Lock</a>
</li>

<li>Avoid the escape key<br />
<a href="http://vim.wikia.com/wiki/Avoid_the_escape_key">http://vim.wikia.com/wiki/Avoid_the_escape_key</a>
</li>

<li>Map caps lock to escape in XWindows<br />
<a href="http://vim.wikia.com/wiki/VimTip166">http://vim.wikia.com/wiki/VimTip166</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2011</small></p>
</body>
</html>

