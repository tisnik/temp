<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Základní vlastnosti Vimspectoru</a></p>
<p><a href="#k03">*** 3. Kontrola, s&nbsp;jakými přepínači byl přeložen Vim</a></p>
<p><a href="#k04">*** 4. Instalace Vimspectoru</a></p>
<p><a href="#k05">*** 5. 400 megabajtů pro pouhý debugger?</a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>V&nbsp;současnosti existuje hned několik přídavných modulů určených pro textový editor Vim, které do tohoto editoru více či někdy spíš méně úspěšně integrují podporu pro debuggery. Jeden z&nbsp;takových modulů se jmenuje <i>Vimspector</i>. Předností tohoto modulu je poměrně robustní chování (což není zcela obvyklé) a taktéž podpora relativně velkého množství debuggerů, včetně debuggerů dostupných přes protokol <i>DAP</i>. A samozřejmě můžeme najít i některé nevýhody. První nevýhodou je, že instalace <i>Vimspectoru</i> je obrovská &ndash; několik se megabajtů(!). Jak ovšem uvidíme dále, je to zapříčiněno tím, že součástí <i>Vimspectoru</i> jsou i samotné debuggery, tj.&nbsp;například pro Go debugger <strong>delve</strong>, pro Python debugger <strong>debugpy</strong> atd. V&nbsp;praxi to znamená, že nepoužívané debuggery lze snadno smazat. A druhou nevýhodou je nutnost přípravy konfiguračního souboru, aby Python věděl, jaký debugger a s&nbsp;jakými parametry se má spustit.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Základní vlastnosti Vimspectoru</h2>

<p>Jaké vlastnosti vlastně <i>Vimspector</i> programátorům nabízí? Jedná se o dnes zcela standardní operace, mezi něž patří zejména:</p>

<ul>
<li>Definice breakpointů</li>
<li>Možnost krokování</li>
<li>Krokování se vstupem do volané funkce</li>
<li>Automatické zobrazení lokálních proměnných</li>
<li>Možnost zobrazení (a automatického přepočtu) libovolného výrazu</li>
<li>Zobrazení zásobníkových rámců &ndash; volaných funkcí s&nbsp;jejich parametry</li>
<li>Zobrazení obsahu výrazu, nad nímž se nachází textový kurzor</li>
<li>Zobrazení výstupní konzole, rozdělení výstupu na standardní výstup a chybový výstup</li>
<li>Zobrazení konzole s&nbsp;informacemi o komunikaci mezi Vimem a debuggerem</li>
</ul>

<p>Jak je z&nbsp;výše uvedeného seznamu zřejmé, skutečně jsou zahrnuty všechny základní operace, které navíc fungují velmi stabilně (například v&nbsp;porovnání s&nbsp;integrací debuggerů do textového editoru <i>Helix</i>, což je prozatím nejvíce bolestivá část tohoto editoru).</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Kontrola, s&nbsp;jakými přepínači byl přeložen Vim</h2>

<p>V&nbsp;dalších kapitolách si ukážeme, jakým způsobem se <i>Vimspector</i> ovládá. Nejdříve je ho však nutné nainstalovat a taktéž se ujistit o tom, že tento plugin bude spustitelný. <i>Vimspector</i> je totiž částečně naprogramován v&nbsp;Pythonu, což nemusí být příliš překvapivé, když si uvědomíme, že <i>VimScript</i>, tedy skriptovací jazyk dostupný přímo ve Vimu, je pro větší přídavné moduly poměrně nešikovný. Aby byl <i>Vimspector</i> použitelný, musí být textový editor Vim přeložen s&nbsp;podporou Pythonu resp.&nbsp;Pythonu 3 &ndash; díky tomu je umožněna tvorba skriptů přímo v&nbsp;tomto populárním programovacím jazyce. O tom, zda vámi používaný <i>Vim</i> skutečně přeložen s&nbsp;podporou Pythonu, se lze přesvědčit po zadání příkazu <strong>:ver</strong>. U volby <strong>python</strong> či <strong>python3/dyn</strong> by se měl objevit znak +.</p>

<p>Jak to může vypadat v&nbsp;praxi? Níže je vidět výsledek příkazy <strong>:ver</strong> se zvýrazněnou volbou <strong>+python3/dyn</strong>. V&nbsp;takto nakonfigurovaném a přeloženém Vimu tedy bude <i>Vimspector</i> funkční:</p>

<pre>
<strong>:ver</strong>
&nbsp;
VIM - Vi IMproved 9.0 (2022 Jun 28, compiled Oct 05 2023 00:00:00)
Included patches: 1-1984
Modified by &lt;bugzilla@redhat.com&gt;
Compiled by &lt;bugzilla@redhat.com&gt;
Huge version without GUI.  Features included (+) or not (-):
+acl               +file_in_path      +mouse_urxvt       -tag_any_white
+arabic            +find_in_path      +mouse_xterm       -tcl
+autocmd           +float             +multi_byte        +termguicolors
+autochdir         +folding           +multi_lang        +terminal
-autoservername    -footer            -mzscheme          +terminfo
-balloon_eval      +fork()            +netbeans_intg     +termresponse
+balloon_eval_term +gettext           +num64             +textobjects
-browse            -hangul_input      +packages          +textprop
++builtin_terms    +iconv             +path_extra        +timers
+byte_offset       +insert_expand     +perl/dyn          +title
+channel           +ipv6              +persistent_undo   -toolbar
+cindent           +job               +popupwin          +user_commands
-clientserver      +jumplist          +postscript        +vartabs
-clipboard         +keymap            +printer           +vertsplit
+cmdline_compl     +lambda            +profile           +vim9script
+cmdline_hist      +langmap           -python            +viminfo
+cmdline_info      +libcall           <strong>+python3/dyn</strong>       +virtualedit
+comments          +linebreak         +quickfix          +visual
-- More --
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Instalace Vimspectoru</h2>

<p>Instalaci <i>Vimspectoru</i> lze provést různými způsoby, které jsou vypsány <a href="https://github.com/puremourning/vimspector#installation">zde</a>, takže je zde nebudeme znovu opisovat. Namísto toho se podívejme na ruční instalaci, která nás naučí nejvíce o tom, jak Vim dokáže pracovat s&nbsp;přídavnými moduly. Nejdříve si stáhneme poslední verzi <i>Vimspectoru</i>, kterou nalezneme na stránce <a href="https://github.com/puremourning/vimspector/releases/tag/6997902219">https://github.com/puremourning/vimspector/releases/tag/6997902219</a> (jak je patrné, k&nbsp;dispozici je varianta pro Linux i pro MacOS, čímž jsou pokryty všechny zajímavé operační systémy :-). Dále stažený tarball rozbalíme příkazem <strong>tar xvfz tarball</strong>. Lze (bez adresáře na nejvyšší úrovni) lze překopírovat do adresáře <strong>~/.vim</strong>. Jeho struktura může po provedení všech tří operací vypadat následovně:</p>

<pre>
.
├── autoload
│   └── vimspector
│       └── internal
├── configurations
│   └── linux
│       └── _all
├── doc
├── gadgets
│   └── linux
│       ├── CodeLLDB -&gt; download/CodeLLDB/v1.9.2/root/extension
│       ├── debugpy -&gt; download/debugpy/1.7.0/root/debugpy-1.7.0
│       ├── delve -&gt; download/delve
│       ├── download
│       ├── local-lua-debugger-vscode -&gt; download/local-lua-debugger-vscode
│       ├── netcoredbg -&gt; download/netcoredbg/2.2.3-992/root/netcoredbg
│       ├── tclpro -&gt; download/tclpro
│       ├── vscode-bash-debug -&gt; download/vscode-bash-debug/0.3.9/root/extension
│       ├── vscode-cpptools -&gt; download/vscode-cpptools/1.17.5/root/extension
│       ├── vscode-go -&gt; download/vscode-go/0.30.0/root/extension
│       └── vscode-js-debug -&gt; download/vscode-js-debug/v1.82.0/root
├── plugin
├── python3
│   └── vimspector
│       ├── custom
│       ├── __pycache__
│       └── vendor
├── support
│   ├── bin
│   ├── doc
│   ├── gadget_upgrade
│   ├── test
│   │   ├── bash
│   │   ├── cpp
│   │   ├── csharp
│   │   ├── example
│   │   ├── go
│   │   ├── java
│   │   ├── kotlin
│   │   ├── lua
│   │   ├── multiple_filetypes
│   │   ├── node
│   │   ├── php
│   │   ├── python
│   │   ├── ruby
│   │   ├── rust
│   │   ├── tcl
│   │   └── web
│   └── vimspector_process_list
└── tests
</pre>

<p><div class="rs-tip-major">Poznámka: samozřejmě můžeme využít schopnosti Vimu pracovat s&nbsp;balíčky a přesunout rozbalenou adresářovou strukturu do poadresáře <strong>~/.vim/pack</strong>.</div></p>

<p>Dále je vhodné provést nepatrnou změnu konfiguračního souboru <strong>.vimrc</strong>. Následující konfigurační řádek (deklarace proměnné) slouží k&nbsp;nastavení klávesových zkratek, kterými se <i>Vimspector</i> ovládá:</p>

<pre>
let g:vimspector_enable_mappings = 'HUMAN'
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. 400 megabajtů pro pouhý debugger?</h2>

<p>V&nbsp;úvodní kapitole jsme se zmínili o tom, že jednou z&nbsp;nevýhod <i>Vimspectoru</i> je fakt, že se jedná o obrovský balíček. Je tomu tak z&nbsp;toho důvodu, že tarball obsahuje i samotné debuggery. Můžeme se o tom velmi snadno přesvědčit pohledem do podadresáře <strong>... gadgets/linux</strong>, který debuggery obsahuje:</p>

<pre>
$ <strong>du -sh *</strong>
&nbsp;
197M    CodeLLDB
60M     debugpy
71M     delve
111M    local-lua-debugger-vscode
13M     netcoredbg
30M     tclpro
2.1M    vscode-bash-debug
329M    vscode-cpptools
4.6M    vscode-go
4.3M    vscode-js-debug
</pre>

<p>V&nbsp;praxi to ovšem znamená to, že pokud například budete chtít používat pouze debugger pro Python, lze smazat všechny ostatní debuggery (kromě <strong>debugpy</strong>). Dtto pro programovací jazyk Go a debugger <strong>delve</strong> atd.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Konfigurace projektu</h2>

<p>Nyní, když již (doufejme) máme <i>Vimspector</i> nainstalován, si můžeme ukázat způsoby jeho používání. To ovšem není triviální, protože chování <i>Vimspectoru</i> je ovlivněno konfiguračním souborem nazvaným <strong>.vimspector.json</strong>, který je nutné pro aktuální projekt vytvořit. Samotný konfigurační soubor umožňuje používat <i>Vimspector</i> velmi flexibilním způsobem (vzdálené ladění přes SSH), ovšem nutnost prvotního nastavení projektu je nepříjemná.</p>

<p>V&nbsp;dalším textu si ukážeme <i>Vimspector</i> použitý pro ladění Pythonovských skriptů, takže se podívejme, jak by mohl vypadat ten nejjednodušeji pojatý konfigurační soubor. Specifikujeme v&nbsp;něm jak konkrétní debugger (<strong>debugpy</strong>), tak i způsob načtení konkrétního zdrojového kódu (nebo modulu) do debuggeru (konkrétně se do debuggeru načte soubor <strong>add.py</strong>, který budeme ladit):</p>

<pre>
{
  "$schema": "https://puremourning.github.io/vimspector/schema/vimspector.schema.json",
  "configurations": {
      "main":{
          "adapter": "debugpy",
          "configuration": {
              "name": "run the executable",
              "type": "python",
              "request": "launch",
              "python.pythonPath": "/usr/bin/python3",
              "program": "~/add.py"
          },
          "breakpoints": {
              "exception": {
                  "raised": "N",
                  "caught": "N",
                  "uncaught": "Y",
                  "userUnhandled": "N"
              }
          }
      }
  }
}
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
{
  "$schema": "https://puremourning.github.io/vimspector/schema/vimspector.schema.json",
  "configurations": {
      "add":{
          "adapter": "debugpy",
          "configuration": {
              "name": "run the executable",
              "type": "python",
              "request": "launch",
              "python.pythonPath": "/usr/bin/python3",
              "program": "~/add.py"
          },
          "breakpoints": {
              "exception": {
                  "raised": "N",
                  "caught": "N",
                  "uncaught": "Y",
                  "userUnhandled": "N"
              }
          }
      },
      "ackermann":{
          "adapter": "debugpy",
          "configuration": {
              "name": "run the executable",
              "type": "python",
              "request": "launch",
              "python.pythonPath": "/usr/bin/python3",
              "program": "~/ackermann.py"
          },
          "breakpoints": {
              "exception": {
                  "raised": "N",
                  "caught": "N",
                  "uncaught": "Y",
                  "userUnhandled": "N"
              }
          }
      }
  }
}
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na relevantní články na Rootu</h2>

<ol>

<li>Užitečné skripty a pluginy pro textový editor Vim<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (2.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-2-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-2-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (3.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-3-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-3-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (4.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-4-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-4-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (5.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-5-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-5-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (6.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-6-cast-cestovani-v-case/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-6-cast-cestovani-v-case/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (7.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-7-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-7-cast/</a>
</li>

<li>Tvorba vlastního pluginu pro textový editor Vim<br />
<a href="http://www.root.cz/clanky/tvorba-vlastniho-pluginu-pro-textovy-editor-vim/">http://www.root.cz/clanky/tvorba-vlastniho-pluginu-pro-textovy-editor-vim/</a>
</li>

<li>Vim ve funkci textového editoru pro tvůrčí psaní<br />
<a href="https://www.root.cz/clanky/vim-ve-funkci-textoveho-editoru-pro-tvurci-psani/">https://www.root.cz/clanky/vim-ve-funkci-textoveho-editoru-pro-tvurci-psani/</a>
</li>

<li>Asynchronní skripty: další přiblížení Vimu k možnostem IDE<br />
<a href="https://www.root.cz/clanky/asynchronni-skripty-dalsi-priblizeni-vimu-k-moznostem-ide/">https://www.root.cz/clanky/asynchronni-skripty-dalsi-priblizeni-vimu-k-moznostem-ide/</a>
</li>

<li>Evil: kombinace editačních příkazů Vimu a síly Emacsu<br />
<a href="https://www.root.cz/clanky/evil-kombinace-editacnich-prikazu-vimu-a-sily-emacsu/">https://www.root.cz/clanky/evil-kombinace-editacnich-prikazu-vimu-a-sily-emacsu/</a>
</li>

<li>Spacemacs: to nejlepší z&nbsp;editorů Emacs a Vim<br />
<a href="https://www.root.cz/clanky/spacemacs-to-nejlepsi-z-editoru-emacs-a-vim/">https://www.root.cz/clanky/spacemacs-to-nejlepsi-z-editoru-emacs-a-vim/</a>
</li>

<li>Spacemacs: práce s&nbsp;projekty psanými v&nbsp;Pythonu a režim Org<br />
<a href="https://www.root.cz/clanky/spacemacs-prace-s-projekty-psanymi-v-pythonu-a-rezim-org/">https://www.root.cz/clanky/spacemacs-prace-s-projekty-psanymi-v-pythonu-a-rezim-org/</a>
</li>

<li>Projekt SpaceVim - moderní distribuce Vimu inspirovaná Spacemacsem<br />
<a href="https://www.root.cz/clanky/projekt-spacevim-moderni-distribuce-vimu-inspirovana-spacemacsem/">https://www.root.cz/clanky/projekt-spacevim-moderni-distribuce-vimu-inspirovana-spacemacsem/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>vimspectorpy - python default configurations for vimspector<br />
<a href="https://github.com/sagi-z/vimspectorpy">https://github.com/sagi-z/vimspectorpy</a>
</li>

<li>Setting up Vimspector<br />
<a href="https://puremourning.github.io/vimspector-web/demo-setup.html#starting-debugging">https://puremourning.github.io/vimspector-web/demo-setup.html#starting-debugging</a>
</li>

<li>Vimspector na GitHubu<br />
<a href="https://github.com/puremourning/vimspector">https://github.com/puremourning/vimspector</a>
</li>

<li>Vimspector releases<br />
<a href="https://github.com/puremourning/vimspector/releases">https://github.com/puremourning/vimspector/releases</a>
</li>

<li>Poslední dostupný build Vimspectoru<br />
<a href="https://github.com/puremourning/vimspector/releases/tag/6997902219">https://github.com/puremourning/vimspector/releases/tag/6997902219</a>
</li>

<li>Vimspector configuration<br />
<a href="https://puremourning.github.io/vimspector/configuration.html#python-debugpy-example">https://puremourning.github.io/vimspector/configuration.html#python-debugpy-example</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim: propojení Vimu s&nbsp;debuggery<br />
<a href="https://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-propojeni-vimu-s-debuggery/">https://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-propojeni-vimu-s-debuggery/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

