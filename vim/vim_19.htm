<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Užitečné skripty a pluginy pro textový editor Vim</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Užitečné skripty a pluginy pro textový editor Vim</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Vzhledem ke stále velké oblibě textového editoru Vim není divu, že pro tento nástroj vzniká velké množství skriptů a rozsáhlých pluginů. Vyvinuty byly i skripty umožňující snadnou instalaci i odinstalaci pluginů. Dnes si jeden takový skript popíšeme a navíc se budeme zabývat užitečným pluginem nazvaným vim-airline.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Užitečné skripty a pluginy pro textový editor Vim</a></p>
<p><a href="#k02">2. Skript <strong>Vim Pathogen</strong></a></p>
<p><a href="#k03">3. Instalace skriptu <strong>Vim Pathogen</strong></a></p>
<p><a href="#k04">4. Plugin <strong>vim-airline</strong></a></p>
<p><a href="#k05">5. Nastavení pluginu <strong>vim-airline</strong></a></p>
<p><a href="#k06">6. Zobrazení řádku se seznamem otevřených bufferů</a></p>
<p><a href="#k07">7. Použití fontů upravených pro <strong>vim-airline</strong></a></p>
<p><a href="#k08">8. Obsah druhé části článku</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Užitečné skripty a pluginy pro textový editor Vim</h2>

<p>Textový editor <i>Vim</i> stále náleží do skupiny nejoblíbenějších textových
editorů určených jak pro operační systém Linux, tak i pro další operační
systémy, mezi něž patří různé komerční Unixy, MS Windows, historické platformy
Amiga a Atari ST atd. K&nbsp;oblíbenosti tohoto textového editoru přispívá
&ndash; kromě modálního ovládání &ndash; jak možnost široké konfigurace jeho
parametrů, tak i možnost tvorby maker a existence skriptovacího jazyka
nazvaného <i>Vim script</i>, v&nbsp;němž je možné psát mnohdy i velmi rozsáhlé
rozšiřující moduly (pluginy). Kromě toho je možné pluginy vytvářet i
v&nbsp;dalších (skriptovacích) programovacích jazycích, například v&nbsp;Lue,
Pythonu, Perlu či v&nbsp;Ruby. V&nbsp;dříve vydaném seriálu nazvaném <a
href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide/">Textový editor
Vim jako IDE</a> byl <i>Vim script</i> zmíněn a popsána byla i rozhraní pro
další skriptovací jazyky. Kromě toho jsme se v&nbsp;tomto seriálu zmínili i o
některých pluginech užitečných zejména při vývoji aplikací v&nbsp;různých
programovacích jazycích:</p>

<ol>

<li>Textový editor Vim jako IDE (6.část - Vim Script)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-6-cast-vim-script/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide-6-cast-vim-script/</a>
</li>

<li>Textový editor Vim jako IDE (7.část - Vim Script)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-7-cast-vim-script/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide-7-cast-vim-script/</a>
</li>

<li>Textový editor Vim jako IDE (16. část - kooperace mezi Vimem a skriptovacími jazyky)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-16-cast-kooperace-mezi-vimem-a-skriptovacimi-jazyky/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide-16-cast-kooperace-mezi-vimem-a-skriptovacimi-jazyky/</a>
</li>

<li>Textový editor Vim jako IDE (17. část - kooperace mezi Vimem a jazykem Perl)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-17-cast-kooperace-mezi-vimem-a-jazykem-perl/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide-17-cast-kooperace-mezi-vimem-a-jazykem-perl/</a>
</li>

<li>Textový editor Vim jako IDE (12.část: konfigurace pravítka a stavového řádku)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide-12-cast-konfigurace-pravitka-a-stavoveho-radku/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide-12-cast-konfigurace-pravitka-a-stavoveho-radku/</a>
</li>

</ol>

<a href="http://www.root.cz/obrazek/200816/"><img src="http://i.iinfo.cz/images/317/vim-images-1-prev.png" class="image-200816" width="370" height="244" alt="&#160;" /></a>
<p><i>Obrázek 1: Nápověda k&nbsp;pluginu vim-airline popsaného v&nbsp;dalších
kapitolách. Povšimněte si použití speciálních znaků (pravá a levá šipka, zámek,
LN apod.); použití těchto znaků vyžaduje instalaci upraveného fontu, o čemž se
zmíníme v&nbsp;dalších kapitolách.</i></p>

<p>Vzhledem k&nbsp;tomu, že je textový editor <i>Vim</i> díky <i>Vim
scriptu</i> otevřenou platformou, pro kterou lze pluginy vytvářet velmi snadno,
není divu, že dnes existuje již několik tisíc různých rozšiřujících modulů,
z&nbsp;nichž většina je dostupná na serveru <a
href="http://www.vim.org">http://www.vim.org</a>. My se dnes seznámíme
s&nbsp;dvojicí pluginů. <a href="#k02">Prvním pluginem</a> je skript nazvaný
<i>Vim Pathogen</i> zajišťující jednoduchou instalaci ostatních pluginů &ndash;
jedná se tedy o jakýsi velmi snadno ovladatelný správce Vimovských balíčků. <a
href="#k04">Další plugin</a>, který se jmenuje <i>vim-airline</i>, je možné
použít pro úpravu stavového řádku a popř.&nbsp;i druhého stavového řádku se
seznamem otevřených bufferů či otevřených tabů.</p>

<a href="http://www.root.cz/obrazek/200817/"><img src="http://i.iinfo.cz/images/317/vim-images-2-prev.png" class="image-200817" width="370" height="244" alt="&#160;" /></a>
<p><i>Obrázek 2: Nápověda k&nbsp;pluginu fugitive popsaného ve druhé části
tohoto článku. I zde jsou použity speciální znaky zmíněné u prvního
obrázku.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Skript <strong>Vim Pathogen</strong></h2>

<p>První vimovský skript, který si v&nbsp;dnešním článku popíšeme, se jmenuje
<i>Vim Pathogen</i>. Jedná se o velmi užitečný skript, který lze využít pro
snadnou instalaci a odinstalaci dalších pluginů pro <i>Vim</i>. Jaká je vlastně
funkce <i>Vim Pathogenu</i>? Textový editor <i>Vim</i> ve svém výchozím
nastavení očekává, že rozšiřující moduly budou dodržovat určitou pevně danou
strukturu: plugin může obsahovat vlastní skript, nápovědu, soubor
s&nbsp;definicí syntaxe (zvýraznění syntaxe), barvové schéma, deklarace šablony
chybových hlášení překladače (pro analýzu chyb), maker atd. Každý z&nbsp;těchto
souborů se hledá v&nbsp;jiném podadresáři umístěném v&nbsp;některém adresáři
obsaženém v&nbsp;seznamu adresářů získaných konfigurační volbou
<strong>runtimepath</strong>. To však představuje problém, protože to například
znamená, že nápovědy ke všem pluginům budou umístěny v&nbsp;jednom společném
adresáři, všechny skripty v&nbsp;adresáři dalším apod. To vede jak ke kolizím
v&nbsp;názvech souborů, tak i ke složitému ručnímu odstraňování již
nepotřebných pluginů.</p>

<a href="http://www.root.cz/obrazek/200818/"><img src="http://i.iinfo.cz/images/317/vim-images-3-prev.png" class="image-200818" width="370" height="244" alt="&#160;" /></a>
<p><i>Obrázek 3: Příklad nastavení konfigurační volby nazvané
<strong>runtimepath</strong>. Toto nastavení může být na jiných systémech (či
dokonce na odlišných verzích toho samého systému) poněkud odlišné, důležité
však je, zda tato volba obsahuje i adresář <strong>~/.vim</strong> (zde je
tento adresář uveden na prvním místě).</i></p>

<p>Podívejme se na konkrétní příklad instalace <i>Vimu</i> na mém pracovním
počítači:</p>

<pre>
:set runtimepath?
</pre>

<p>Tento příkaz vrátí následující seznam adresářů (oddělených čárkou):</p>

<pre>
runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,
/usr/share/vim/vim74,/usr/share/vim/vimfiles/after,
/var/lib/vim/addons/after,~/.vim/after
</pre>

<p>Většina skriptů, maker, nápovědy, barvových schémat atd. nainstalovaných
společně s&nbsp;<i>Vimem</i> je na tomto systému uložena do adresářové
struktury umístěné v&nbsp;<strong>/usr/share/vim/vim74</strong>. Na této
adresářové struktuře je poměrně dobře patrné rozdělení jednotlivých částí
pluginů do různých podadresářů:</p>

<pre>
.
├── autoload
│   └── xml
├── colors
├── compiler
├── doc
├── ftplugin
├── indent
├── keymap
├── lang
│   ├── cs
│   │   └── LC_MESSAGES
│   ├── cs.cp1250
│   │   └── LC_MESSAGES
...
...
...
├── macros
│   ├── hanoi
│   ├── life
│   ├── maze
│   └── urm
├── plugin
├── print
├── spell
├── syntax
└── tutor
</pre>

<p>Skript <i>Vim Pathogen</i> mění nastavení textového editoru Vim takovým
způsobem, aby bylo možné každý plugin nainstalovat do samostatného podadresáře
<strong>~/.vim/bundle/${jméno_pluginu}</strong>, což vlastně znamená, že
veškerá instalace pluginu se může provést jediným příkazem <strong>cp -r
...</strong> popř.&nbsp;přímo naklonováním repositáře s&nbsp;pluginem (což si
ukážeme v&nbsp;navazujících kapitolách). Odinstalace je ještě jednodušší,
protože vše zajistí příkaz <strong>rm -rf
~/.vim/bundle/${jméno_pluginu}</strong>:</p>

<pre>
.
├── autoload
│   └── pathogen.vim
└── bundle
    ├── plugin#1
    │   ├── autoload
    │   ├── doc
    │   └── plugin
    ├── plugin#2
    │   ├── autoload
    │   ├── doc
    │   └── plugin
   ...
   ...
   ...
    └── plugin#n
        ├── autoload
        ├── doc
        └── plugin
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace skriptu <strong>Vim Pathogen</strong></h2>

<p>Instalace skriptu <i>Vim Pathogen</i> je velmi jednoduchá. Tento skript je
možné nainstalovat pro všechny uživatele, kteří se k&nbsp;danému počítači
připojují, nebo alternativně jen pro jednoho uživatele, což je pro běžné
pracovní laptopy i desktopy pravděpodobně typičtější případ. Pokud má být
<i>Vim Pathogen</i> používán všemi uživateli, bude jeho instalace probíhat do
adresáře <strong>/usr/share/vim/vimfiles</strong>,
<strong>/usr/share/vim/vim74</strong> atd. v&nbsp;závislosti na již zmíněné
konfigurační volbě <strong>runtimepath</strong>. Jednodušší a podle mého názoru
i v&nbsp;některých ohledech výhodnější je však instalace tohoto skriptu pouze
pro aktivního uživatele. Tuto instalaci si nyní popíšeme.</p>

<p>Předpokládejme, že adresář <strong>~/.vim</strong> má následující strukturu
(jediné dva zobrazené soubory jsou používány při kontrole pravopisu, ovšem ve
skutečnosti je pravděpodobné, že tento adresář již bude obsahovat pluginy
nainstalované dříve):</p>

<pre>
.vim
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<p><i>Vim Pathogen</i> je tvořen skutečně pouze jedním skriptem pojmenovaným
<strong>pathogen.vim</strong>. Tento skript se musí stáhnout a umístit do
adresáře <strong>~/.vim/autoload</strong>. Stažení a instalace skriptu je velmi
jednoduchá: zajistí ji pouhé dva příkazy vypsané pod tímto odstavcem:</p>

<pre>
mkdir -p ~/.vim/autoload
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
</pre>

<p>Výsledná adresářová struktura bude vypadat takto:</p>

<pre>
.vim
├── autoload
│   └── pathogen.vim
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<p>Aby se skript <i>Vim Pathogen</i> korektně aktivoval po každém spuštění
<i>Vimu</i>, je nutné provést ještě malou úpravu konfiguračního souboru
<strong>.vimrc</strong> umístěného v&nbsp;domácím adresáři. Do tohoto souboru
se musí dopsat volání funkce:</p>

<pre>
execute pathogen#infect()
</pre>

<p>Pozor: volání této funkce je nutné provést až ve chvíli, kdy je nastavena
volba <strong>set nocompatible</strong>, jinak inicializace neproběhne
korektně! (ostatně nastavení <strong>set nocompatible</strong> by mělo být
jednou z&nbsp;prvních věci prováděných při inicializaci <i>Vimu</i> :-)</p>

<p>Aby se správně zobrazovala i nápověda k&nbsp;nainstalovaným pluginům, je
vhodné ihned pod výše uvedený příkaz zadat i:</p>

<pre>
call pathogen#helptags()
</pre>

<p>Od této chvíle budou všechny pluginy instalovány do adresáře
<strong>~/.vim/bundle</strong>, který je nutné vytvořit, pokud již
neexistuje:</p>

<pre>
mkdir -p ~/.vim/bundle 
</pre>

<p>Výsledná struktura adresáře <strong>~/.vim</strong> by měla vypadat
následovně:</p>

<pre>
.vim
├── autoload
│   └── pathogen.vim
├── bundle
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Plugin <strong>vim-airline</strong></h2>

<p>Druhý plugin určený pro textový editor <i>Vim</i> se jmenuje
<i>vim-airline</i> (neplést prosím s&nbsp;<a
href="http://www.vim-avia.com/">Vim Airlines</a> :-). Doplňkový modul
<i>vim-airline</i> slouží především k&nbsp;úpravě stavového řádku (<i>status
line</i>), ovšem je ho možné použít taktéž k&nbsp;zobrazení dalšího řádku
obsahujícího seznam otevřených bufferů. Informace zobrazené na stavovém řádku
&ndash; včetně aktuálně nastaveného režimu editoru &ndash; jsou vizuálně
zvýrazněny různou barvou písma a pozadí, ovšem navíc je možné použít i
speciální fonty obsahující ikony, které <i>vim-airline</i> může využít pro
další &bdquo;vyšperkování&ldquo;. To je ostatně patrné i při pohledu na
screenshoty použité v&nbsp;této kapitole i v&nbsp;navazujících dvou kapitolách.
<i>vim-airline</i> lze navíc snadno upravovat, což se týká jak použitého
barvového schématu, tak i konkrétních informací, které se mají na stavovém
řádku zobrazit. V&nbsp;případě potřeby se <i>vim-airline</i> vypne jediným
příkazem, po jehož zadání se textový editor <i>Vim</i> chová tak, jakoby tento
plugin vůbec nebyl inicializován.</p>

<a href="http://www.root.cz/obrazek/200819/"><img src="http://i.iinfo.cz/images/317/vim-images-4-prev.png" class="image-200819" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek 4: Textový editor Vim bez inicializovaného pluginu vim-airline.
Stavový řádek není zobrazen vůbec, protože je otevřeno jen jedno okno a volba
<strong>laststatus</strong> je nastavena na jedničku. Poslední řádek je
rezervován pro zobrazení pravítka (ruler).</i></p>

<a href="http://www.root.cz/obrazek/200820/"><img src="http://i.iinfo.cz/images/317/vim-images-5-prev.png" class="image-200820" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek 5: Textový editor Vim s&nbsp;inicializovaným pluginem
vim-airline. Statový řádek je v&nbsp;tomto případě zobrazen, a to díky použití
konfigurační volby <strong>set laststatus=2</strong>.</i></p>

<p>Nejprve si řekněme, jakým způsobem je možné <i>vim-airline</i> nainstalovat.
Předpokládejme, že struktura adresáře <strong>~/.vim</strong> odpovídá
struktuře popsané výše a že skript <i>Vim Pathogen</i> je korektně
nakonfigurován a spouštěn:</p>

<pre>
.vim
├── autoload
│   └── pathogen.vim
├── bundle
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<p>Instalaci pluginu <i>vim-airline</i> lze nejjednodušeji provést těmito
příkazy:</p>

<pre>
wget -O airline.zip http://www.vim.org/scripts/download_script.php?src_id=22726
unzip -d ~/.vim/bundle airline.zip
</pre>

<p>Nová struktura adresáře <strong>~/.vim</strong> by měla vypadat přibližně
takto:</p>

<pre>
.vim
├── autoload
│   └── pathogen.vim
├── bundle
│   └── vim-airline
│       ├── autoload
│       │   ├── airline
│       │   │   ├── builder.vim
│       │   │   ├── debug.vim
│       │   │   ├── deprecation.vim
│       │   │   ├── extensions
│       │   │   │   ├── branch.vim
│       │   │   │   ├── bufferline.vim
│       │   │   │   ├── capslock.vim
│       │   │   │   ├── commandt.vim
│       │   │   │   ├── csv.vim
│       │   │   │   ├── ctrlp.vim
│       │   │   │   ├── ctrlspace.vim
│       │   │   │   ├── default.vim
│       │   │   │   ├── eclim.vim
│       │   │   │   ├── example.vim
│       │   │   │   ├── hunks.vim
│       │   │   │   ├── netrw.vim
│       │   │   │   ├── nrrwrgn.vim
│       │   │   │   ├── promptline.vim
│       │   │   │   ├── quickfix.vim
│       │   │   │   ├── syntastic.vim
│       │   │   │   ├── tabline
│       │   │   │   │   ├── autoshow.vim
│       │   │   │   │   ├── buffers.vim
│       │   │   │   │   ├── buflist.vim
│       │   │   │   │   ├── formatters
│       │   │   │   │   │   ├── default.vim
│       │   │   │   │   │   ├── unique_tail_improved.vim
│       │   │   │   │   │   └── unique_tail.vim
│       │   │   │   │   └── tabs.vim
│       │   │   │   ├── tabline.vim
│       │   │   │   ├── tagbar.vim
│       │   │   │   ├── tmuxline.vim
│       │   │   │   ├── undotree.vim
│       │   │   │   ├── unite.vim
│       │   │   │   ├── virtualenv.vim
│       │   │   │   ├── whitespace.vim
│       │   │   │   └── windowswap.vim
│       │   │   ├── extensions.vim
│       │   │   ├── highlighter.vim
│       │   │   ├── init.vim
│       │   │   ├── parts.vim
│       │   │   ├── section.vim
│       │   │   ├── themes
│       │   │   │   ├── badwolf.vim
│       │   │   │   ├── base16.vim
│       │   │   │   ├── bubblegum.vim
│       │   │   │   ├── dark.vim
│       │   │   │   ├── durant.vim
│       │   │   │   ├── hybrid.vim
│       │   │   │   ├── jellybeans.vim
│       │   │   │   ├── kalisi.vim
│       │   │   │   ├── kolor.vim
│       │   │   │   ├── laederon.vim
│       │   │   │   ├── light.vim
│       │   │   │   ├── lucius.vim
│       │   │   │   ├── luna.vim
│       │   │   │   ├── molokai.vim
│       │   │   │   ├── monochrome.vim
│       │   │   │   ├── murmur.vim
│       │   │   │   ├── powerlineish.vim
│       │   │   │   ├── raven.vim
│       │   │   │   ├── serene.vim
│       │   │   │   ├── silver.vim
│       │   │   │   ├── simple.vim
│       │   │   │   ├── solarized.vim
│       │   │   │   ├── sol.vim
│       │   │   │   ├── tomorrow.vim
│       │   │   │   ├── ubaryd.vim
│       │   │   │   ├── understated.vim
│       │   │   │   ├── wombat.vim
│       │   │   │   └── zenburn.vim
│       │   │   ├── themes.vim
│       │   │   └── util.vim
│       │   └── airline.vim
│       ├── doc
│       │   ├── airline.txt
│       │   └── tags
│       ├── Gemfile
│       ├── LICENSE
│       ├── plugin
│       │   └── airline.vim
│       ├── Rakefile
│       ├── README.md
│       └── t
│           ├── airline.vim
│           ├── builder.vim
│           ├── commands.vim
│           ├── extensions_default.vim
│           ├── highlighter.vim
│           ├── init.vim
│           ├── parts.vim
│           ├── section.vim
│           ├── themes.vim
│           └── util.vim
└── spell
    ├── cs.iso-8859-2.spl
    └── cs.utf-8.spl
</pre>

<a href="http://www.root.cz/obrazek/200821/"><img src="http://i.iinfo.cz/images/317/vim-images-6-prev.png" class="image-200821" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek 6: Nápověda k&nbsp;modulu vim-airline zobrazená v&nbsp;novém
(druhém) okně. Povšimněte si, že neaktivní okno má stavový řádek odlišný od
aktivního okna, tj.&nbsp;okna, v&nbsp;němž se nachází kurzor.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Nastavení pluginu <strong>vim-airline</strong></h2>

<p>Doplňkový modul <i>vim-airline</i> by měl začít automaticky pracovat již po
dalším spuštění textového editoru <i>Vim</i>. Ve skutečnosti se <i>většinou</i>
funkce tohoto modulu projeví až při otevření většího množství oken, protože
mnoho uživatelů má <i>Vim</i> nakonfigurovaný takovým způsobem, že se stavový
řádek zobrazuje až při otevření druhého (či dalšího) okna. Pokud chcete, aby se
stavový řádek zobrazoval vždy, tj.&nbsp;i ve chvíli, kdy je otevřeno jen jedno
okno, je úprava konfigurace <i>Vimu</i> velmi snadná:</p>

<pre>
set laststatus=2
</pre>

<a href="http://www.root.cz/obrazek/200822/"><img src="http://i.iinfo.cz/images/317/vim-images-7-prev.png" class="image-200822" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 7: Nastavení volby <strong>laststatus</strong> na hodnotu 2.
Nastavení této volby zajistí zobrazení stavového řádku i v&nbsp;případě, že je
zobrazeno jen jedno okno (osobně si myslím, že na širokoúhlých monitorech je to
spíše plýtvání místem :-)</i></p>

<p>Modul <i>vim-airline</i> deklaruje několik nových příkazů, především:</p>

<table>
<tr><th>#</th><th>Příkaz</th><th>Význam</th></tr>
<tr><td>1</td><td>:AirlineToggle</td><td>zapnutí či vypnutí tohoto modulu</td></tr>
<tr><td>2</td><td>:AirlineRefresh</td><td>překreslení stavové řádky</td></tr>
<tr><td>3</td><td>:AirlineTheme jméno</td><td>nastavení barvového schématu</td></tr>
</table>

<p>U posledního příkazu je možné namísto jména barvového schématu stlačit
klávesu <strong>[Tab]</strong>, která vypíše všechna dostupná barvová schémata.
Pokud tato klávesa nepracuje podle očekávání, zkontrolujte volbu <strong>:set
wildmenu</strong> (musí být nastavena/povolena). Současná verze pluginu
<i>vim-airline</i> obsahuje následující barvová schémata:</p>

<table>
<tr><td>badwolf</td></tr>
<tr><td>base16</td></tr>
<tr><td>bubblegum</td></tr>
<tr><td>dark</td></tr>
<tr><td>durant</td></tr>
<tr><td>hybrid</td></tr>
<tr><td>jellybeans</td></tr>
<tr><td>kalisi</td></tr>
<tr><td>kolor</td></tr>
<tr><td>laederon</td></tr>
<tr><td>light</td></tr>
<tr><td>lucius</td></tr>
<tr><td>luna</td></tr>
<tr><td>molokai</td></tr>
<tr><td>monochrome</td></tr>
<tr><td>murmur</td></tr>
<tr><td>powerlineish</td></tr>
<tr><td>raven</td></tr>
<tr><td>serene</td></tr>
<tr><td>silver</td></tr>
<tr><td>simple</td></tr>
<tr><td>solarized</td></tr>
<tr><td>sol</td></tr>
<tr><td>tomorrow</td></tr>
<tr><td>ubaryd</td></tr>
<tr><td>understated</td></tr>
<tr><td>wombat</td></tr>
<tr><td>zenburn</td></tr>
</table>

<a href="http://www.root.cz/obrazek/200823/"><img src="http://i.iinfo.cz/images/317/vim-images-8-prev.png" class="image-200823" width="370" height="225" alt="&#160;" /></a>
<p><i>Obrázek 8: Povšimněte si, jak stavová řádka změnila barvu při přechodu do
režimu výběru vertikálních bloků textu (horní okno).</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Zobrazení řádku se seznamem otevřených bufferů</h2>

<p>Pokud se v&nbsp;konfiguračním souboru <strong>.vimrc</strong> nastaví
následující proměnná:</p>

<pre>
let g:airline#extensions#tabline#enabled = 1
</pre>

<p>přepne se modul <i>vim-airline</i> do upravené konfigurace, v&nbsp;níž se na
prvním řádku zobrazí seznam aktuálně otevřených bufferů. Toto chování může
vyhovovat například těm uživatelům, kteří nepoužívají taby, i když ve
skutečnosti je možné kombinovat větší množství tabů i bufferů: to, zda je
zobrazován seznam tabů či bufferů, je indikováno v&nbsp;pravém horním rohu, kde
se vyskytuje buď zvýrazněné slovo <strong>[buffers]</strong> či
<strong>[tabs]</strong>. Toto slovo je dokonce v&nbsp;případě <i>GVimu</i>
aktivní, tj.&nbsp;lze na něj kliknout myší a přepínat tak režim zobrazení.</p>

<a href="http://www.root.cz/obrazek/200824/"><img src="http://i.iinfo.cz/images/317/vim-images-9-prev.png" class="image-200824" width="370" height="252" alt="&#160;" /></a>
<p><i>Obrázek 9: V&nbsp;horní části okna (na prvním řádku) je nyní zobrazen
seznam otevřených bufferů.</i></p>

<p>Kromě výše zmíněné volby lze chování pluginu <i>vim-airline</i> ovlivnit i
nastavením dalších globálních proměnných, především pak:</p>

<table>
<tr><th>Volba</th><th>Význam</th></tr>
<tr><td>g:airline_left_sep</td><td>znak použitý jako separátor na levé straně stavového řádku</td></tr>
<tr><td>g:airline_right_sep</td><td>znak použitý jako separátor na pravé straně stavového řádku</td></tr>
<tr><td>g:airline_inactive_collapse</td><td>chování zobrazení informací u neaktivních oken</td></tr>
<tr><td>g:airline_mode_map</td><td>komplexní volba pro způsob nastavení zobrazení různých režimů Vimu</td></tr>
<tr><td>g:airline_section[abc]</td><td>nastavení informací, které se mají zobrazit v&nbsp;jednotlivých sekcích stavového řádku</td></tr>
</table>

<a href="http://www.root.cz/obrazek/200825/"><img src="http://i.iinfo.cz/images/317/vim-images-10-prev.png" class="image-200825" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 10: Použití speciálního fontu pro vim-airline a seznam otevřených
bufferů v&nbsp;horní části okna.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Použití fontů upravených pro <strong>vim-airline</strong></h2>

<p>V&nbsp;případě, že se <i>Vim-airline</i> používá v&nbsp;<i>Gvimu</i> či
v&nbsp;<i>Kvimu</i>, tj.&nbsp;ve variantě textového editoru Vim
s&nbsp;grafickým uživatelským rozhraním, je možné si (lokálně) nainstalovat
fonty obsahující speciální znaky, jež mohou být použity pro vylepšení vzhledu
stavového řádku i pro zobrazení některých &bdquo;ikon&ldquo; reprezentujících
stav otevřeného bufferu, například informaci o tom, že je nějaký soubor určený
pouze pro čtení (ikona zámku). Podívejme se nyní na způsob instalace takto
upravených fontů. Ty jsou již připraveny na stránce <a
href="https://github.com/powerline/fonts">https://github.com/powerline/fonts</a>,
což mj.&nbsp;znamená, že instalace může proběhnout s&nbsp;využitím GITu:</p>

<pre>
mkdir -p ~/.fonts
git clone https://github.com/powerline/fonts.git
cd fonts
./install.sh
</pre>

<p>Po provedení těchto čtyř příkazů by se měl v&nbsp;domácím adresáři objevit
adresář nazvaný <strong>fonts</strong> obsahující tyto soubory:</p>

<pre>
Anonymice Powerline Bold Italic.ttf
Anonymice Powerline Bold.ttf
Anonymice Powerline Italic.ttf
Anonymice Powerline.ttf
DejaVu Sans Mono Bold for Powerline.ttf
DejaVu Sans Mono Bold Oblique for Powerline.ttf
DejaVu Sans Mono for Powerline.ttf
DejaVu Sans Mono Oblique for Powerline.ttf
Droid Sans Mono for Powerline.otf
FuraMono-Bold Powerline.otf
FuraMono-Medium Powerline.otf
FuraMono-Regular Powerline.otf
Inconsolata-dz for Powerline.otf
Inconsolata for Powerline.otf
Inconsolata-g for Powerline.otf
Literation Mono Powerline Bold Italic.ttf
Literation Mono Powerline Bold.ttf
Literation Mono Powerline Italic.ttf
Literation Mono Powerline.ttf
Meslo LG L DZ Regular for Powerline.otf
Meslo LG L Regular for Powerline.otf
Meslo LG M DZ Regular for Powerline.otf
Meslo LG M Regular for Powerline.otf
Meslo LG S DZ Regular for Powerline.otf
Meslo LG S Regular for Powerline.otf
Monofur Bold for Powerline.ttf
Monofur for Powerline.ttf
Monofur Italic for Powerline.ttf
Sauce Code Powerline Black.otf
Sauce Code Powerline Bold.otf
Sauce Code Powerline ExtraLight.otf
Sauce Code Powerline Light.otf
Sauce Code Powerline Medium.otf
Sauce Code Powerline Regular.otf
Sauce Code Powerline Semibold.otf
ter-powerline-x12b.pcf.gz
ter-powerline-x12n.pcf.gz
ter-powerline-x14b.pcf.gz
ter-powerline-x14n.pcf.gz
ter-powerline-x16b.pcf.gz
ter-powerline-x16n.pcf.gz
ter-powerline-x18b.pcf.gz
ter-powerline-x18n.pcf.gz
ter-powerline-x20b.pcf.gz
ter-powerline-x20n.pcf.gz
ter-powerline-x22b.pcf.gz
ter-powerline-x22n.pcf.gz
ter-powerline-x24b.pcf.gz
ter-powerline-x24n.pcf.gz
ter-powerline-x28b.pcf.gz
ter-powerline-x28n.pcf.gz
ter-powerline-x32b.pcf.gz
ter-powerline-x32n.pcf.gz
Ubuntu Mono derivative Powerline Bold Italic.ttf
Ubuntu Mono derivative Powerline Bold.ttf
Ubuntu Mono derivative Powerline Italic.ttf
Ubuntu Mono derivative Powerline.ttf
</pre>

<a href="http://www.root.cz/obrazek/200826/"><img src="http://i.iinfo.cz/images/317/vim-images-11-prev.png" class="image-200826" width="370" height="243" alt="&#160;" /></a>
<p><i>Obrázek 11: Výběr fontu po zadání příkazu <strong>:set
guifont=*</strong>. V&nbsp;okně s&nbsp;názvy fontů se nyní nachází i fonty,
v&nbsp;jejichž názvu se objevuje řetězec &bdquo;...for Powerline&ldquo;. Právě
tyto fonty obsahují speciální znaky využívané mj.&nbsp;i pluginem
vim-airline.</i></p>

<p>Jedná se o následující upravené fonty:</p>

<table>
<tr><th> #</th><th>Původní font</th><th>Nové jméno</th></tr>
<tr><td> 1</td><td>Anonymous Pro</td><td>Anonymice Powerline</td></tr>
<tr><td> 2</td><td>DejaVu Sans Mono</td><td>DejaVu Sans Mono for Powerline</td></tr>
<tr><td> 3</td><td>Droid Sans Mono</td><td>Droid Sans Mono for Powerline</td></tr>
<tr><td> 4</td><td>Inconsolata</td><td>Inconsolata for Powerline</td></tr>
<tr><td> 5</td><td>Inconsolata-dz</td><td>Inconsolata-dz for Powerline</td></tr>
<tr><td> 6</td><td>Inconsolata-g</td><td>Inconsolata-g for Powerline</td></tr>
<tr><td> 7</td><td>Liberation Mono</td><td>Literation Mono Powerline</td></tr>
<tr><td> 8</td><td>Meslo</td><td>Meslo for Powerline</td></tr>
<tr><td> 9</td><td>Source Code Pro</td><td>Sauce Code Powerline</td></tr>
<tr><td>10</td><td>Terminus</td><td>Terminess Powerline</td></tr>
<tr><td>11</td><td>Ubuntu Mono</td><td>Ubuntu Mono derivative Powerline</td></tr>
<tr><td>12</td><td>Monofur</td><td>Monofur for Powerline</td></tr>
</table>

<p>Do souboru <strong>~/.vimrc</strong> je nutné přidat tento řádek:</p>

<pre>
let g:airline_powerline_fonts = 1
</pre>

<p>Následně je již možné si interaktivně zvolit vhodný font příkazem:</p>

<pre>
:set guifont=*
</pre>

<p>Pro šťastné uživatele vlastnící displej s&nbsp;vysokým rozlišením je určen
například font <strong>Inconsolata-g</strong>, pro displeje s&nbsp;nižším
rozlišením pak font <strong>Terminess Powerline</strong>.</p>

<a href="http://www.root.cz/obrazek/200827/"><img src="http://i.iinfo.cz/images/317/vim-images-12-prev.png" class="image-200827" width="370" height="241" alt="&#160;" /></a>
<p><i>Obrázek 12: Vim-airline v&nbsp;situaci, kdy používá
&bdquo;kompatibilní&ldquo; font. Můžeme zde vidět znak se zámkem (nápověda je
vždy otevřena v&nbsp;režimu read-only), pravé a levé šipky/trojúhelníky a
mj.&nbsp;i znak LN v&nbsp;pravém dolním rohu.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Obsah druhé části článku</h2>

<p>Ve druhé části tohoto článku si popíšeme několik dalších populárních a často
využívaných pluginů určených pro rozšíření schopností textového editoru
<i>Vim</i>. Zabývat se budeme především pluginem nazvaným <i>Fugitive</i>.
Jedná se o přídavný modul užitečný zejména pro vývojáře, autory dokumentace a
administrátory používající distribuovaný systém pro správu verzí Git.
S&nbsp;využitím <i>Fugitive</i> je možné přímo z&nbsp;Vimu vyvolávat většinu
příkazů GITu, používat režim <i>diff</i> pro zobrazení změn, které se budou
commitovat, zobrazit informaci o tom, který uživatel a v&nbsp;jakém commitu
upravil jednotlivé řádky (programového) kódu atd. Kromě pluginu <i>Fugitive</i>
si popíšeme i další &ndash; většinou jednodušší &ndash; přídavné moduly,
například <i>Vim-indent-guides</i>, <i>Vim-colors-solarized</i>,
<i>SnipMate</i> atd.</p>

<a href="http://www.root.cz/obrazek/200828/"><img src="http://i.iinfo.cz/images/317/vim-images-13-prev.png" class="image-200828" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 13: Plugin fugitive v&nbsp;akci &ndash; Git commit.</i></p>

<a href="http://www.root.cz/obrazek/200829/"><img src="http://i.iinfo.cz/images/317/vim-images-14-prev.png" class="image-200829" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 14: Plugin fugitive v&nbsp;akci &ndash; Git diff.</i></p>

<a href="http://www.root.cz/obrazek/200830/"><img src="http://i.iinfo.cz/images/317/vim-images-15-prev.png" class="image-200830" width="370" height="253" alt="&#160;" /></a>
<p><i>Obrázek 15: Plugin fugitive v&nbsp;akci &ndash; Git blame.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Odkazy na Internetu</h2>

<ol>

<li>Popis skriptu Vim Pathogen<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2332">http://www.vim.org/scripts/script.php?script_id=2332</a>
</li>

<li>Poslední verze skriptu Vim Pathogen<br />
<a href="https://tpo.pe/pathogen.vim">https://tpo.pe/pathogen.vim</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://vimawesome.com/">http://vimawesome.com/</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://www.vim.org/scripts/script_search_results.php?order_by=rating">http://www.vim.org/scripts/script_search_results.php?order_by=rating</a>
</li>

<li>Vim-airline na GitHubu<br />
<a href="https://github.com/bling/vim-airline">https://github.com/bling/vim-airline</a>
</li>

<li>Vim-airline na www.vim.org<br />
<a href="http://www.vim.org/scripts/download_script.php?src_id=22726">http://www.vim.org/scripts/download_script.php?src_id=22726</a>
</li>

<li>Vim-fugitive na GitHubu<br />
<a href="https://github.com/tpope/vim-fugitive">https://github.com/tpope/vim-fugitive</a>
</li>

<li>Vim-fugitive na www.vim.org<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2975">http://www.vim.org/scripts/script.php?script_id=2975</a>
</li>

<li>Textový editor Vim jako IDE (seriál)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide/</a>
</li>

<li>Building Vim<br />
<a href="http://vim.wikia.com/wiki/Building_Vim">http://vim.wikia.com/wiki/Building_Vim</a>
</li>

<li>Getting the Vim source with Mercurial<br />
<a href="http://vim.wikia.com/wiki/Getting_the_Vim_source_with_Mercurial">http://vim.wikia.com/wiki/Getting_the_Vim_source_with_Mercurial</a>
</li>

<li>Vim Perl Interface<br />
<a href="http://vim.dindinx.net/vim7/html/if_perl.txt.php">http://vim.dindinx.net/vim7/html/if_perl.txt.php</a>
</li>

<li>Vim Perl Support<br />
<a href="http://www.softpanorama.org/Editors/Vimorama/vim_perl_support.shtml">http://www.softpanorama.org/Editors/Vimorama/vim_perl_support.shtml</a>
</li>

<li>VIM as Python IDE<br />
<a href="http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/">http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/</a>
</li>

<li>Stack Overflow: VIM: Perl interface: passing a variable to Perl and reading a vim variable from Perl<br />
<a href="http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from">http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from</a>
</li>

<li>Stack Overflow: Getting started with vim scripting with Perl<br />
<a href="http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl">http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl</a>
</li>

<li>Python with a modular IDE (Vim)<br />
<a href="http://www.sontek.net/python-with-a-modular-ide-vim">http://www.sontek.net/python-with-a-modular-ide-vim</a>
</li>

<li>Getting to VIM's Python interface<br />
<a href="http://zerokspot.com/weblog/2009/02/21/getting-to-know-vims-python-interface/">http://zerokspot.com/weblog/2009/02/21/getting-to-know-vims-python-interface/</a>
</li>

<li>Pretty-formatting XML<br />
<a href="http://vim.wikia.com/wiki/Pretty-formatting_XML">http://vim.wikia.com/wiki/Pretty-formatting_XML</a>
</li>

<li>Delete a pair of XML/HTML tags<br />
<a href="http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags">http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags</a>
</li>

<li>Vim as XML Editor<br />
<a href="http://www.pinkjuice.com/howto/vimxml/">http://www.pinkjuice.com/howto/vimxml/</a>
</li>

<li>xmledit: A filetype plugin to help edit XML, HTML, and SGML documents<br />
<a href="http://www.vim.org/scripts/script.php?script_id=301">http://www.vim.org/scripts/script.php?script_id=301</a>
</li>

<li>Poslední vývojová verze makra xmledit<br />
<a href="http://github.com/sukima/xmledit/">http://github.com/sukima/xmledit/</a>
</li>

<li>vim.wikia: Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>vim.wikia: Writing a valid statusline<br />
<a href="http://vim.wikia.com/wiki/Writing_a_valid_statusline">http://vim.wikia.com/wiki/Writing_a_valid_statusline</a>
</li>

<li>vim.wikia: Statusline tab level ruler<br />
<a href="http://vim.wikia.com/wiki/Statusline_tab_level_ruler">http://vim.wikia.com/wiki/Statusline_tab_level_ruler</a>
</li>

<li>vim.wikia: Switching between different statuslines<br />
<a href="http://vim.wikia.com/wiki/Switching_between_different_statuslines">http://vim.wikia.com/wiki/Switching_between_different_statuslines</a>
</li>

<li>X Selections, Cut Buffers, and Kill Rings<br />
<a href="http://www.jwz.org/doc/x-cut-and-paste.html">http://www.jwz.org/doc/x-cut-and-paste.html</a>
</li>

<li>Accessing the system clipboard<br />
<a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard">http://vim.wikia.com/wiki/Accessing_the_system_clipboard</a>
</li>

<li>xcutsel(1) - Linux man page<br />
<a href="http://linux.die.net/man/1/xcutsel">http://linux.die.net/man/1/xcutsel</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

<li>Clewn home page<br />
<a href="http://clewn.sourceforge.net/">http://clewn.sourceforge.net/</a>
</li>

<li>How to connect vim with gdb - using clewn<br />
<a href="http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn">http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn</a>
</li>

<li>yavdb : Yet Another (Generic) Vim Debugger Integration<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1954">http://www.vim.org/scripts/script.php?script_id=1954</a>
</li>

<li>Vim home page<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2015</small></p>
</body>
</html>

