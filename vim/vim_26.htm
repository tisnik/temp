<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba vlastního pluginu pro textový editor Vim</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba vlastního pluginu pro textový editor Vim</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V předchozích částech článku o přídavných modulech určených pro textový editor Vim jsme si popsali některé užitečné pluginy, ovšem prozatím jsme si neřekli, jakým způsobem je možné vytvořit si plugin vlastní. Proto je účelem dnešního článku seznámení čtenáře se základy tvorby a publikace přídavných modulů pro Vim.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Tvorba vlastního pluginu pro textový editor Vim</a></p>
<p><a href="#k02">2. První verze pluginu pro promítání slajdů</a></p>
<p><a href="#k03">3. Odstranění globálních proměnných</a></p>
<p><a href="#k04">4. Odstranění globálních funkcí</a></p>
<p><a href="#k05">5. Unikátní jména funkcí pro mapování příkazů na klávesy</a></p>
<p><a href="#k06">6. Adresářová struktura pluginu kompatibilního s&nbsp;modulem Pathogen</a></p>
<p><a href="#k07">7. Soubor README.md a soubor obsahující nápovědu</a></p>
<p><a href="#k08">8. Finální verze pluginu</a></p>
<p><a href="#k09">9. Repositář s&nbsp;demonstračním pluginem</a></p>
<p><a href="#k10">10. Odkazy na předchozí části článku</a></p>
<p><a href="#k11">11. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba vlastního pluginu pro textový editor Vim</h2>

<p>Používání pluginů ve Vimu je při použití nástrojů typu <i>Pathogen</i> či
<i>Vundle</i> z&nbsp;hlediska uživatele velmi jednoduché, protože samotná
instalace přídavného modulu se v&nbsp;naprosté většině případů omezuje na
naklonování repositáře s&nbsp;pluginem popř.&nbsp;na rozbalení archivu,
v&nbsp;němž je tento přídavný modul distribuován. V&nbsp;porovnání s&nbsp;dříve
používanými metodami distribuce a instalace pluginů se tedy jedná o krok vpřed,
na druhou stranu je však nutné, aby tvůrci pluginů dodržovali několik pravidel
zajišťujících například to, že si pluginy nebudou navzájem přepisovat funkce,
klávesové zkratky či proměnné. V&nbsp;dnešním článku si ukážeme způsob tvorby
velmi jednoduchého pluginu, který byl již několikrát úspěšně použit pro
promítání slajdů přímo z&nbsp;Vimu. To s&nbsp;sebou přináší &ndash; minimálně
pro skalního vimaře &ndash; poměrně velké množství výhod, například možnost
zobrazení zdrojových souborů se zvýrazněním syntaxe, možnost výběru velikosti
znaků v&nbsp;závislosti na kvalitě projektoru, mnohem rychlejší tvorbu slajdů,
úplný WYSIWYG :-) apod.</p>

<a href="http://www.root.cz/obrazek/207322/"><img src="http://i.iinfo.cz/images/137/vim-weakpoint-2-prev.png" class="image-207322" alt="&#160;" height="234" width="370" /></a>
<p><i>Obrázek 1: Promítání slajdů v&nbsp;praxi.</i></p>

<a href="http://www.root.cz/obrazek/207323/"><img src="http://i.iinfo.cz/images/137/vim-weakpoint-3-prev.png" class="image-207323" alt="&#160;" height="234" width="370" /></a>
<p><i>Obrázek 2: Promítání slajdů v&nbsp;praxi.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. První verze pluginu pro promítání slajdů</h2>

<p>Podívejme se nejdříve na první verzi skriptu určeného pro prohlížení slajdů.
Jeho funkce je poměrně jednoduchá. Nejdříve se s&nbsp;využitím externích
příkazů <strong>ls</strong> a <strong>grep</strong> získá seznam všech souborů
umístěných v&nbsp;aktuálním adresáři (do něj se lze přepnout příkazem
<strong>:cd</strong>), tento seznam se setřídí, inicializuje se počitadlo
slajdů a nastaví se mapování některých kláves (<strong>PageUp</strong>,
<strong>PageDown</strong>, <strong>Home</strong> a <strong>End</strong>) na
funkce sloužící k&nbsp;přepínání slajdů, tj.&nbsp;k&nbsp;načtení příslušného
souboru příkazem <strong>execute "edit" jméno_souboru</strong> s&nbsp;případným
nastavením Vimu takovým způsobem, aby správně obarvil jednotlivé syntaktické
kategorie. Navíc se ještě zaregistruje funkce zavolaná ve chvíli, kdy se má
překreslit stavová řádka (<i>status line</i>), což je důležité, neboť zde
potřebujeme zobrazit stav počitadla slajdů i celkový počet slajdů. Mapování
klávesových zkratek je nastaveno následujícím způsobem:</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>PageUp</td><td>přechod na předchozí slajd</td></tr>
<tr><td>PageDown</td><td>přechod na následující slajd</td></tr>
<tr><td>Home</td><td>přechod na první slajd</td></tr>
<tr><td>End</td><td>přechod na poslední slajd</td></tr>
</table>

<p>První &ndash; a hned v&nbsp;několika ohledech špatně implementovaná &ndash;
verze prohlížeče slajdů vypadá takto:</p>

<pre>
<i>" Slideshow tool v1.0</i>
<i>" Pavel Tisnovsky 2012, 2013, 2014, 2015</i>
&nbsp;
<i>" Ziskani seznamu vsech souboru v aktualnim adresari</i>
function! <strong>GetFileList</strong>()
    return split(system("ls -1 | sort"))
endfunction
&nbsp;
<i>" Prechod na prvni slajd</i>
function! <strong>GotoFirstSlide</strong>()
    let g:index = 0
endfunction
&nbsp;
<i>" Prechod na posledni slajd</i>
function! <strong>GotoLastSlide</strong>()
    let g:index = len(g:slides) - 1
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel pred prvni slajd</i>
function! <strong>BeforeFirstSlide</strong>()
    return g:index &lt; 0
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel za posledni slajd</i>
function! <strong>AfterLastSlide</strong>()
    return g:index &gt;= len(g:slides)
endfunction
&nbsp;
<i>" Zobrazeni predchoziho slajdu</i>
function! <strong>ShowNextSlide</strong>()
    let g:index += 1
    if AfterLastSlide()
        call GotoFirstSlide()
    endif
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni nasledujiciho slajdu</i>
function! <strong>ShowPrevSlide</strong>()
    let g:index -= 1
    if BeforeFirstSlide()
        call GotoLastSlide()
    endif
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni prvniho slajdu</i>
function! <strong>ShowFirstSlide</strong>()
    call GotoFirstSlide()
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni posledniho slajdu</i>
function! <strong>ShowLastSlide</strong>()
    call GotoLastSlide()
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Funkce zajistujici nacteni slajdu</i>
function! <strong>ShowActualSlide</strong>()
    execute "edit" g:slides[g:index]
endfunction
&nbsp;
<i>" Uprava stavove radky - bude se zobrazovat cislo</i>
<i>" slajdu, pocet slajdu a jmeno souboru obsahujiciho slajd</i>
function! <strong>StatusLine</strong>()
    return "Slide " . (1+g:index) . "/" . len(g:slides) . " : " . g:slides[g:index]
endfunction
&nbsp;
<i>" Nastaveni zpusobu ovladani prohlizecky</i>
function! <strong>SetupKeys</strong>()
    map &lt;PageUp&gt;   :call ShowPrevSlide()&lt;cr&gt;
    map &lt;PageDown&gt; :call ShowNextSlide()&lt;cr&gt;
    map &lt;Home&gt;     :call ShowFirstSlide()&lt;cr&gt;
    map &lt;End&gt;      :call ShowLastSlide()&lt;cr&gt;
endfunction
&nbsp;
function! <strong>WeakPoint</strong>()
    <i>" Promenna obsahujici seznam slajdu</i>
    let g:slides = GetFileList()
&nbsp;
    <i>" Index aktualniho slajdu</i>
    let g:index = 0
&nbsp;
    <i>" Kontrola</i>
    if g:slides == []
        echo "Zadne soubory v pracovnim adresari"
    else
        <i>" Registrace funkce pouzite pro zjisteni obsahu stavove radky</i>
        set statusline=%!StatusLine()
&nbsp;
        <i>" Nastaveni zobrazeni stavove radky i v pripade, ze je pouzito</i>
        <i>" jen jedno okno</i>
        set laststatus=2
&nbsp;
        call ShowFirstSlide()
        call SetupKeys()
    endif
endfunction
&nbsp;
call WeakPoint()
</pre>

<p>Poslední volání <strong>call WeakPoint()</strong> samozřejmě taktéž není
korektní, lepší bude deklarovat nový příkaz <strong>command WeakPoint :call
s:WeakPoint()</strong>.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Odstranění globálních proměnných</h2>

<p>Výše uvedený skript je sice funkční, ale trpí poměrně mnoha nectnostmi,
které budeme muset postupně odstranit. Mezi první nedostatek patří použití
globálních proměnných, tj.&nbsp;proměnných, před jejichž jména je přidán prefix
<strong>g:</strong>. Ve chvíli, kdy má uživatel nainstalováno větší množství
pluginů, může dojít k&nbsp;přepisům globálních proměnných a proto je více než
vhodné se jejich použití vyhnout, minimálně ve chvíli, kdy jsou tyto proměnné
použity pouze uvnitř skriptu/pluginu a nikoli například pro uložení
konfiguračních voleb. Řešení tohoto problému je ve skutečnosti velmi
jednoduché, protože můžeme použít proměnné lokální v&nbsp;rámci modulu,
v&nbsp;němž je skript napsán. V&nbsp;tomto případě se před jméno proměnné přidá
prefix <strong>s:</strong>, kde &bdquo;s&ldquo; znamená &bdquo;script
variable&ldquo;. Taková proměnná je sdílena mezi všemi funkcemi v&nbsp;jednom
skriptu (což potřebujeme), ale již není viditelná z&nbsp;dalších skriptů ani
modulů. Takto by mohla vypadat upravená verze našeho prohlížeče slajdů:</p>

<pre>
<i>" Slideshow tool v1.0</i>
<i>" Pavel Tisnovsky 2012, 2013, 2014, 2015</i>
&nbsp;
<i>" Ziskani seznamu vsech souboru v aktualnim adresari</i>
function! <strong>GetFileList</strong>()
    return split(system("ls -1 | sort"))
endfunction
&nbsp;
<i>" Prechod na prvni slajd</i>
function! <strong>GotoFirstSlide</strong>()
    let s:index = 0
endfunction
&nbsp;
<i>" Prechod na posledni slajd</i>
function! <strong>GotoLastSlide</strong>()
    let s:index = len(s:slides) - 1
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel pred prvni slajd</i>
function! <strong>BeforeFirstSlide</strong>()
    return s:index &lt; 0
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel za posledni slajd</i>
function! <strong>AfterLastSlide</strong>()
    return s:index &gt;= len(s:slides)
endfunction
&nbsp;
<i>" Zobrazeni predchoziho slajdu</i>
function! <strong>ShowNextSlide</strong>()
    let s:index += 1
    if AfterLastSlide()
        call GotoFirstSlide()
    endif
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni nasledujiciho slajdu</i>
function! <strong>ShowPrevSlide</strong>()
    let s:index -= 1
    if BeforeFirstSlide()
        call GotoLastSlide()
    endif
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni prvniho slajdu</i>
function! <strong>ShowFirstSlide</strong>()
    call GotoFirstSlide()
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni posledniho slajdu</i>
function! <strong>ShowLastSlide</strong>()
    call GotoLastSlide()
    call ShowActualSlide()
endfunction
&nbsp;
<i>" Funkce zajistujici nacteni slajdu</i>
function! <strong>ShowActualSlide</strong>()
    execute "edit" s:slides[s:index]
endfunction
&nbsp;
<i>" Uprava stavove radky - bude se zobrazovat cislo</i>
<i>" slajdu, pocet slajdu a jmeno souboru obsahujiciho slajd</i>
function! <strong>StatusLine</strong>()
    return "Slide " . (1+s:index) . "/" . len(s:slides) . " : " . s:slides[s:index]
endfunction
&nbsp;
<i>" Nastaveni zpusobu ovladani prohlizecky</i>
function! <strong>SetupKeys</strong>()
    map &lt;PageUp&gt;   :call ShowPrevSlide()&lt;cr&gt;
    map &lt;PageDown&gt; :call ShowNextSlide()&lt;cr&gt;
    map &lt;Home&gt;     :call ShowFirstSlide()&lt;cr&gt;
    map &lt;End&gt;      :call ShowLastSlide()&lt;cr&gt;
endfunction
&nbsp;
function! <strong>WeakPoint</strong>()
    <i>" Promenna obsahujici seznam slajdu</i>
    let s:slides = GetFileList()
&nbsp;
    <i>" Index aktualniho slajdu</i>
    let s:index = 0
&nbsp;
    <i>" Kontrola</i>
    if s:slides == []
        echo "Zadne soubory v pracovnim adresari"
    else
        <i>" Registrace funkce pouzite pro zjisteni obsahu stavove radky</i>
        set statusline=%!StatusLine()
&nbsp;
        <i>" Nastaveni zobrazeni stavove radky i v pripade, ze je pouzito</i>
        <i>" jen jedno okno</i>
        set laststatus=2
&nbsp;
        call ShowFirstSlide()
        call SetupKeys()
    endif
endfunction
&nbsp;
call WeakPoint()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Odstranění globálních funkcí</h2>

<p>Další nepříjemnou vlastností původního skriptu je použití globálních funkcí.
Textový editor <i>Vim</i> totiž za běžných podmínek nedovoluje přepis deklarace
funkce jinou funkcí stejného jména, což znamená, že následující skript skončí
s&nbsp;chybou:</p>

<pre>
function g:x()
    echo "Hello world!"
endfunction
&nbsp;
function g:x()
    echo "Hello again..."
endfunction
</pre>

<p>Tuto kontrolu lze obejít velmi snadno &ndash; za klíčové slovo
<strong>function</strong> se přidá vykřičník. V&nbsp;tomto případě <i>Vim</i>
bez jakéhokoli upozornění přepíše již deklarovanou funkci novou deklarací:</p>

<pre>
function! g:x()
    echo "Hello world!"
endfunction
&nbsp;
function! g:x()
    echo "Hello again..."
endfunction
</pre>

<p>Ani toto chování nám ovšem nevyhovuje, protože náš plugin může omylem
přepsat funkce deklarované a používané jiným pluginem. Proto musíme přistoupit
k&nbsp;deklaraci lokálních funkcí:</p>

<pre>
<i>" Ziskani seznamu vsech souboru v aktualnim adresari</i>
function! <strong>s:GetFileList</strong>()
    ...
endfunction
&nbsp;
<i>" Prechod na prvni slajd</i>
function! <strong>s:GotoFirstSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Prechod na posledni slajd</i>
function! <strong>s:GotoLastSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel pred prvni slajd</i>
function! <strong>s:BeforeFirstSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel za posledni slajd</i>
function! <strong>s:AfterLastSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Zobrazeni predchoziho slajdu</i>
function! <strong>s:ShowNextSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Zobrazeni nasledujiciho slajdu</i>
function! <strong>s:ShowPrevSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Zobrazeni prvniho slajdu</i>
function! <strong>s:ShowFirstSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Zobrazeni posledniho slajdu</i>
function! <strong>s:ShowLastSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Funkce zajistujici nacteni slajdu</i>
function! <strong>s:ShowActualSlide</strong>()
    ...
endfunction
&nbsp;
<i>" Nastaveni zpusobu ovladani prohlizecky</i>
function! <strong>s:SetupKeys</strong>()
    ...
endfunction
&nbsp;
function! <strong>s:WeakPoint</strong>()
    ...
endfunction
&nbsp;
command WeakPoint :call s:WeakPoint()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Unikátní jména funkcí pro mapování příkazů na klávesy</h2>

<p>U lokálních funkcí však nastává problém &ndash; jak lze tyto funkce
namapovat na klávesové zkratky? Konkrétně se jedná o následující řádky
skriptu:</p>

<pre>
noremap &lt;PageUp&gt;   :call s:ShowPrevSlide()&lt;cr&gt;
noremap &lt;PageDown&gt; :call s:ShowNextSlide()&lt;cr&gt;
noremap &lt;Home&gt;     :call s:ShowFirstSlide()&lt;cr&gt;
noremap &lt;End&gt;      :call s:ShowLastSlide()&lt;cr&gt;
</pre>

<p>Tyto čtyři příkazy nebudou ve skutečnosti funkční, protože nastavení
klávesových zkratek je záležitostí globálního nastavení <i>Vimu</i> a nikoli
lokálního nastavení provedeného v&nbsp;jednom modulu. Řešením je použití
symbolu &lt;SID&gt;, který je při načítání skriptu nahrazen za jednoznačný a
přitom unikátní celočíselný identifikátor, takže nedojde ke kolizi se jménem
jiné funkce. Výše uvedené mapování by tedy mělo vypadat takto:</p>

<pre>
noremap &lt;PageUp&gt;   :call &lt;SID&gt;ShowPrevSlide()&lt;cr&gt;
noremap &lt;PageDown&gt; :call &lt;SID&gt;ShowNextSlide()&lt;cr&gt;
noremap &lt;Home&gt;     :call &lt;SID&gt;ShowFirstSlide()&lt;cr&gt;
noremap &lt;End&gt;      :call &lt;SID&gt;ShowLastSlide()&lt;cr&gt;
</pre>

<p>Po načtení pluginu (a všech dalších pluginů) je možné si všechny deklarované
funkce jednoduše vypsat příkazem:</p>

<pre>
:function
</pre>

<a href="http://www.root.cz/obrazek/207324/"><img src="http://i.iinfo.cz/images/137/vim-weakpoint-4-prev.png" class="image-207324" alt="&#160;" height="236" width="370" /></a>
<p><i>Obrázek 3: Na tomto výpisu funkcí můžete mj.&nbsp;vidět i funkce
deklarované v&nbsp;pluginu <strong>vim-weakpoint</strong>. Před názvy funkcí je
uveden jednoznačný identifikátor, takže nedojde ke kolizi jmen.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Adresářová struktura pluginu kompatibilního s&nbsp;modulem Pathogen</h2>

<p>V&nbsp;současnosti se prakticky žádný přídavný modul neskládá pouze
z&nbsp;vlastního skriptu, ale minimálně ze dvou dalších souborů. Jedná se o
soubor nazvaný <strong>README</strong> či častěji <strong>README.md</strong>,
který obsahuje krátkou informaci o účelu pluginu i o způsobu jeho instalace.
Většina pluginů, jejichž repositáře jsou umístěny na GitHubu, používá soubor
<strong>README.md</strong>, v&nbsp;němž lze využít značkovací jazyk
<i>Markdown</i>, který je přímo na stránkách GitHubu korektně renderován, o
čemž se ostatně můžeme <a
href="https://github.com/tisnik/vim-weakpoint/blob/master/README.md">snadno
přesvědčit</a>. Druhým souborem je nápověda uložená v&nbsp;podadresáři
<strong>doc</strong>. Vlastní skript pluginu je pak uložen v&nbsp;podadresáři
<strong>plugin</strong>, takže celá struktura přídavného modulu by měla vypadat
následovně (předpokládejme, že plugin neobsahuje žádné soubory s&nbsp;definicí
barev, obarvení syntaxe atd.):</p>

<pre>
.
├── doc
│   └── weakpoint.txt
├── plugin
│   └── weakpoint.vim
└── README.md
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Soubor README.md a soubor obsahující nápovědu</h2>

<p>Struktura souboru <strong>README.md</strong> může být následující.
Povšimněte si použití znaků # a ## pro vytvoření základní struktury nadpisů,
dále pak způsobu zápisu odkazu a taktéž použití odsazení, které v&nbsp;tomto
případě povede k&nbsp;tisku zdrojového kódu (šedé pozadí, znaky
z&nbsp;neproporcionálního fontu atd.):</p>

<pre>
# weakpoint
&nbsp;
Simple slideshow tool
&nbsp;
## Installation
&nbsp;
With [pathogen.vim](https://github.com/tpope/vim-pathogen):
&nbsp;
    cd ~/.vim/bundle
    git clone git://github.com/tisnik
&nbsp;
## Usage
&nbsp;
    :cd directory_with_slides
    :WeakPoint
&nbsp;
If you use pathogen, you can use :Helptags to regenerate documentation.  You
then can see ":h weakpoint" for more information.
&nbsp;
## License
&nbsp;
Copyright (c) 2012-2015 Pavel Tisnovsky (BSD-Like)
</pre>

<p>Soubor s&nbsp;nápovědou je nepatrně složitější, protože i zde se používá
značkovací jazyk, konkrétně značkovací jazyk používaný všemi soubory nápovědy
ve <i>Vimu</i>. Podle mých zkušeností je nejlepší mít tento soubor otevřený
dvakrát &ndash; v&nbsp;jednom okně se zvýrazněním syntaxe, ve druhém okně bez
zvýraznění syntaxe. Důvod je jednoduchý: při zvýraznění syntaxe <i>Vim</i>
některé znaky schová, protože mají speciální význam. Jedná se například o
hvězdičky, kterými jsou uvozeny cíle odkazů (nápověda ve <i>Vimu</i> je
hypertextová):</p>

<pre>
*weakpoint.txt* Simple slideshow tool
&nbsp;
Author: Pavel Tisnovsky
License: BSD-like (see |weakpoint-license|)
&nbsp;
INTRODUCTION                                    *weakpoint* *WeakPoint*
&nbsp;
Simple slideshow tool
&nbsp;
REQUIREMENTS                                    *weakpoint-requirements*
&nbsp;
  - On Unix, you need to have "cp" and "sort" in your path.
&nbsp;
INSTALLATION                                    *weakpoint-installation*
&nbsp;
    cd ~/.vim/bundle
    git clone git://github.com/tisnik
&nbsp;
USAGE                                           *weakpoint-usage* *:WeakPoint*
 &gt;
    :WeakPoint
&lt;
LICENSE                                         *weakpoint-license*
&nbsp;
Copyright (c) 2012-2015 Pavel Tisnovsky
&nbsp;
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:
&nbsp;
  * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
  * Neither the name William Lee nor the names of its contributors may be
    used to endorse or promote products derived from this software without
    specific prior written permission.
&nbsp;
THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
WILLIAM LEE AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
&nbsp;
 vim:tw=78:et:ft=help:norl:
</pre>

<p>Zajímavé je označení příkladu, které se provádí značkami  &gt;[konec řádku]
a ^&lt; [na začátku samostatného řádku]:</p>

<pre>
  syn region helpExample        matchgroup=helpIgnore start=" &gt;$" start="^&gt;$" end="^[^ \t]"me=e-1 end="^&lt;"
</pre>

<p>Použití nápovědy:</p>

<table>
<tr><td>:help weakpoint</td><td>zobrazí nápovědu od začátku</td></tr>
<tr><td>:help weakpoint-requirements</td><td>zobrazí nápovědu od sekce <strong>REQUIREMENTS</strong></td></tr>
<tr><td>:help weakpoint-installation</td><td>zobrazí nápovědu od sekce <strong>INSTALLATION</strong></td></tr>
<tr><td>:help weakpoint-usage</td><td>zobrazí nápovědu od sekce <strong>USAGE</strong></td></tr>
<tr><td>:help weakpoint-license</td><td>zobrazí nápovědu od sekce <strong>LICENSE</strong></td></tr>
</table>

<a href="http://www.root.cz/obrazek/207321/"><img src="http://i.iinfo.cz/images/137/vim-weakpoint-1-prev.png" class="image-207321" alt="&#160;" height="234" width="370" /></a>
<p><i>Obrázek 4: Zobrazení nápovědy ve Vimu.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Finální verze pluginu</h2>

<p>Poslední verze pluginu pro zobrazení slajdů je vypsána pod tímto odstavcem.
Jedná se o stejnou verzi, jakou naleznete v&nbsp;GIT repositáři:</p>

<pre>
<i>" Slideshow tool v1.3</i>
<i>" Pavel Tisnovsky 2012, 2013, 2014, 2015</i>
&nbsp;
<i>" Ziskani seznamu vsech souboru v aktualnim adresari</i>
function! <strong>s:GetFileList</strong>()
    return split(system("ls -1 | sort"))
endfunction
&nbsp;
<i>" Prechod na prvni slajd</i>
function! <strong>s:GotoFirstSlide</strong>()
    let s:index = 0
endfunction
&nbsp;
<i>" Prechod na posledni slajd</i>
function! <strong>s:GotoLastSlide</strong>()
    let s:index = len(s:slides) - 1
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel pred prvni slajd</i>
function! <strong>s:BeforeFirstSlide</strong>()
    return s:index &lt; 0
endfunction
&nbsp;
<i>" Zjisteni, zda uzivatel nepresel za posledni slajd</i>
function! <strong>s:AfterLastSlide</strong>()
    return s:index &gt;= len(s:slides)
endfunction
&nbsp;
<i>" Zobrazeni predchoziho slajdu</i>
function! <strong>s:ShowNextSlide</strong>()
    let s:index += 1
    if s:AfterLastSlide()
        call s:GotoFirstSlide()
    endif
    call s:ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni nasledujiciho slajdu</i>
function! <strong>s:ShowPrevSlide</strong>()
    let s:index -= 1
    if s:BeforeFirstSlide()
        call s:GotoLastSlide()
    endif
    call s:ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni prvniho slajdu</i>
function! <strong>s:ShowFirstSlide</strong>()
    call s:GotoFirstSlide()
    call s:ShowActualSlide()
endfunction
&nbsp;
<i>" Zobrazeni posledniho slajdu</i>
function! <strong>s:ShowLastSlide</strong>()
    call s:GotoLastSlide()
    call s:ShowActualSlide()
endfunction
&nbsp;
<i>" Funkce zajistujici nacteni slajdu</i>
function! <strong>s:ShowActualSlide</strong>()
    execute "edit" s:slides[s:index]
endfunction
&nbsp;
<i>" Uprava stavove radky - bude se zobrazovat cislo</i>
<i>" slajdu, pocet slajdu a jmeno souboru obsahujiciho slajd</i>
function! <strong>StatusLine</strong>()
    return "Slide " . (1+s:index) . "/" . len(s:slides) . " : " . s:slides[s:index]
endfunction
&nbsp;
<i>" Nastaveni zpusobu ovladani prohlizecky</i>
function! <strong>s:SetupKeys</strong>()
    noremap &lt;PageUp&gt;   :call &lt;SID&gt;ShowPrevSlide()&lt;cr&gt;
    noremap &lt;PageDown&gt; :call &lt;SID&gt;ShowNextSlide()&lt;cr&gt;
    noremap &lt;Home&gt;     :call &lt;SID&gt;ShowFirstSlide()&lt;cr&gt;
    noremap &lt;End&gt;      :call &lt;SID&gt;ShowLastSlide()&lt;cr&gt;
endfunction
&nbsp;
function! <strong>s:WeakPoint</strong>()
    <i>" Promenna obsahujici seznam slajdu</i>
    let s:slides = s:GetFileList()
&nbsp;
    <i>" Index aktualniho slajdu</i>
    let s:index = 0
&nbsp;
    <i>" Kontrola</i>
    if s:slides == []
        echo "Zadne soubory v pracovnim adresari"
    else
        <i>" Registrace funkce pouzite pro zjisteni obsahu stavove radky</i>
        set statusline=%!StatusLine()
&nbsp;
        <i>" Nastaveni zobrazeni stavove radky i v pripade, ze je pouzito</i>
        <i>" jen jedno okno</i>
        set laststatus=2
&nbsp;
        call s:ShowFirstSlide()
        call s:SetupKeys()
    endif
endfunction
&nbsp;
command WeakPoint :call s:WeakPoint()
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Repositář s&nbsp;demonstračním pluginem</h2>

<p>Plugin, který jsme si v&nbsp;dnešním článku popsali, byl uložen do GIT
repositáře dostupného na adrese <a
href="https://github.com/tisnik/vim-weakpoint">https://github.com/tisnik/vim-weakpoint</a>.
Z&nbsp;tohoto repositáře lze provést snadnou instalaci nám již důvěrně známou
sekvencí příkazů:</p>

<pre>
<strong>cd ~/.vim/bundle</strong>
<strong>git clone https://github.com/tisnik/vim-weakpoint</strong>
Cloning into 'vim-weakpoint'...
remote: Counting objects: 18, done.
remote: Compressing objects: 100% (13/13), done.
remote: Total 18 (delta 3), reused 17 (delta 2), pack-reused 0
Unpacking objects: 100% (18/18), done.
Checking connectivity... done.
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Odkazy na předchozí části článku</h2>

<ol>

<li>Užitečné skripty a pluginy pro textový editor Vim<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (2.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-2-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-2-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (3.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-3-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-3-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (4.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-4-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-4-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (5.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-5-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-5-cast/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (6.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-6-cast-cestovani-v-case/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-6-cast-cestovani-v-case/</a>
</li>

<li>Užitečné skripty a pluginy pro textový editor Vim (7.část)<br />
<a href="http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-7-cast/">http://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim-7-cast/</a>
</li>

</ol>



<p><a name="k11"></a></p>
<h2 id="k11">11. Odkazy na Internetu</h2>

<ol>

<li>Writing Vim Plugins<br />
<a href="http://stevelosh.com/blog/2011/09/writing-vim-plugins/">http://stevelosh.com/blog/2011/09/writing-vim-plugins/</a>
</li>

<li>how to understand this vim script?<br />
<a href="http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script">http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script</a>
</li>

<li>Novinky ve VIM 7: Skriptovací jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>DirDiff.vim : A plugin to diff and merge two directories recursively.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=102">http://www.vim.org/scripts/script.php?script_id=102</a>
</li>

<li>vim-dirdiff na GitHubu<br />
<a href="https://github.com/will133/vim-dirdiff">https://github.com/will133/vim-dirdiff</a>
</li>

<li>fakeclip : pseudo clipboard register for non-GUI version of Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2098">http://www.vim.org/scripts/script.php?script_id=2098</a>
</li>

<li>vim-fakeclip na GitHubu<br />
<a href="https://github.com/kana/vim-fakeclip">https://github.com/kana/vim-fakeclip</a>
</li>

<li>vim-fakeclip: Dokumentace<br />
<a href="http://kana.github.io/config/vim/fakeclip.html">http://kana.github.io/config/vim/fakeclip.html</a>
</li>

<li>Vim Multiple Cursors na GitHubu<br />
<a href="https://github.com/terryma/vim-multiple-cursors">https://github.com/terryma/vim-multiple-cursors</a>
</li>

<li>SLIME (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/SLIME">http://en.wikipedia.org/wiki/SLIME</a>
</li>

<li>vim-slime na GitHubu<br />
<a href="https://github.com/jpalardy/vim-slime">https://github.com/jpalardy/vim-slime</a>
</li>

<li>vi Editor Commands<br />
<a href="http://www.cs.rit.edu/~cslab/vi.html#A1.4">http://www.cs.rit.edu/~cslab/vi.html#A1.4</a>
</li>

<li>vi Manual<br />
<a href="http://www.cs.fsu.edu/general/vimanual.html">http://www.cs.fsu.edu/general/vimanual.html</a>
</li>

<li>Mastering the Vi Editor<br />
<a href="http://www.susnet.uk/mastering-the-vi-editor">http://www.susnet.uk/mastering-the-vi-editor</a>
</li>

<li>Using undo branches<br />
<a href="http://vim.wikia.com/wiki/Using_undo_branches">http://vim.wikia.com/wiki/Using_undo_branches</a>
</li>

<li>Gundo<br />
<a href="http://sjl.bitbucket.org/gundo.vim/">http://sjl.bitbucket.org/gundo.vim/</a>
</li>

<li>Vim as a Python IDE, or Python IDE as Vim<br />
<a href="http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/">http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/</a>
</li>

<li>histwin na GitHubu<br />
<a href="https://github.com/chrisbra/histwin.vim">https://github.com/chrisbra/histwin.vim</a>
</li>

<li>histwin.vim : Browse the undo tree<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2932">http://www.vim.org/scripts/script.php?script_id=2932</a>
</li>

<li>undotree.vim : Display your undo history in a graph<br />
<a href="http://www.vim.org/scripts/script.php?script_id=4177">http://www.vim.org/scripts/script.php?script_id=4177</a>
</li>

<li>Surround<br />
<a href="http://www.bestofvim.com/plugin/surround/">http://www.bestofvim.com/plugin/surround/</a>
</li>

<li>SnipMate<br />
<a href="http://www.bestofvim.com/plugin/snipmate/">http://www.bestofvim.com/plugin/snipmate/</a>
</li>

<li>Getting a Clojure REPL in Vim With VimClojure, Nailgun, and Leiningen<br />
<a href="http://naleid.com/blog/2011/12/19/getting-a-clojure-repl-in-vim-with-vimclojure-nailgun-and-leiningen/">http://naleid.com/blog/2011/12/19/getting-a-clojure-repl-in-vim-with-vimclojure-nailgun-and-leiningen/</a>
</li>

<li>The NERD Commenter : A plugin that allows for easy commenting of code for many filetypes.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1218">http://www.vim.org/scripts/script.php?script_id=1218</a>
</li>

<li>NERD Commenter na GitHubu<br />
<a href="https://github.com/scrooloose/nerdcommenter">https://github.com/scrooloose/nerdcommenter</a>
</li>

<li>luarefvim : Lua reference manual<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1291">http://www.vim.org/scripts/script.php?script_id=1291</a>
</li>

<li>lua.vim : Lua file type plug-in for the Vim text editor<br />
<a href="http://www.vim.org/scripts/script.php?script_id=3625">http://www.vim.org/scripts/script.php?script_id=3625</a>
</li>

<li>vim-lua-ftplugin<br />
<a href="https://github.com/xolox/vim-lua-ftplugin">https://github.com/xolox/vim-lua-ftplugin</a>
</li>

<li>Vi Improved<br />
<a href="https://wiki.python.org/moin/Vim">https://wiki.python.org/moin/Vim</a>
</li>

<li>javacomplete : Omni Completion for JAVA<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1785">http://www.vim.org/scripts/script.php?script_id=1785</a>
</li>

<li>SearchComplete<br />
<a href="http://www.vim.org/scripts/script.php?script_id=474">http://www.vim.org/scripts/script.php?script_id=474</a>
</li>

<li>ShowMarks<br />
<a href="http://www.vim.org/scripts/script.php?script_id=152">http://www.vim.org/scripts/script.php?script_id=152</a>
</li>

<li>ctrlp.vim<br />
<a href="https://github.com/kien/ctrlp.vim">https://github.com/kien/ctrlp.vim</a>
</li>

<li>ctrlp.vim<br />
<a href="http://kien.github.io/ctrlp.vim/">http://kien.github.io/ctrlp.vim/</a>
</li>

<li>vim-signature<br />
<a href="https://github.com/kshenoy/vim-signature">https://github.com/kshenoy/vim-signature</a>
</li>

<li>Supertab<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1643">http://www.vim.org/scripts/script.php?script_id=1643</a>
</li>

<li>Supertab (GitHub)<br />
<a href="https://github.com/ervandew/supertab">https://github.com/ervandew/supertab</a>
</li>

<li>Vim Essential Plugin: NERD Tree<br />
<a href="http://code.tutsplus.com/tutorials/vim-essential-plugin-nerdtree--net-19692">http://code.tutsplus.com/tutorials/vim-essential-plugin-nerdtree--net-19692</a>
</li>

<li>The NERD tree : A tree explorer plugin for navigating the filesystem <br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=1658">http://vim.sourceforge.net/scripts/script.php?script_id=1658</a>
</li>

<li>NERD Tree Guide<br />
<a href="http://usevim.com/2012/07/18/nerdtree/">http://usevim.com/2012/07/18/nerdtree/</a>
</li>

<li>vcscommand.vim : CVS/SVN/SVK/git/hg/bzr integration plugin<br />
<a href="http://www.vim.org/scripts/script.php?script_id=90">http://www.vim.org/scripts/script.php?script_id=90</a>
</li>

<li>vcscommand na GitHubu<br />
<a href="https://github.com/vim-scripts/vcscommand.vim">https://github.com/vim-scripts/vcscommand.vim</a>
</li>

<li>Popis skriptu Vim Pathogen<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2332">http://www.vim.org/scripts/script.php?script_id=2332</a>
</li>

<li>Poslední­ verze skriptu Vim Pathogen<br />
<a href="https://tpo.pe/pathogen.vim">https://tpo.pe/pathogen.vim</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://vimawesome.com/">http://vimawesome.com/</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://www.vim.org/scripts/script_search_results.php?order_by=rating">http://www.vim.org/scripts/script_search_results.php?order_by=rating</a>
</li>

<li>Vim-airline na GitHubu<br />
<a href="https://github.com/bling/vim-airline">https://github.com/bling/vim-airline</a>
</li>

<li>Vim-airline na www.vim.org<br />
<a href="http://www.vim.org/scripts/download_script.php?src_id=22726">http://www.vim.org/scripts/download_script.php?src_id=22726</a>
</li>

<li>Vim-fugitive na GitHubu<br />
<a href="https://github.com/tpope/vim-fugitive">https://github.com/tpope/vim-fugitive</a>
</li>

<li>Vim-fugitive na www.vim.org<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2975">http://www.vim.org/scripts/script.php?script_id=2975</a>
</li>

<li>Textový editor Vim jako IDE (seriál)<br />
<a href="http://www.root.cz/clanky/textovy-editor-vim-jako-ide/">http://www.root.cz/clanky/textovy-editor-vim-jako-ide/</a>
</li>

<li>Building Vim<br />
<a href="http://vim.wikia.com/wiki/Building_Vim">http://vim.wikia.com/wiki/Building_Vim</a>
</li>

<li>Getting the Vim source with Mercurial<br />
<a href="http://vim.wikia.com/wiki/Getting_the_Vim_source_with_Mercurial">http://vim.wikia.com/wiki/Getting_the_Vim_source_with_Mercurial</a>
</li>

<li>Vim Perl Interface<br />
<a href="http://vim.dindinx.net/vim7/html/if_perl.txt.php">http://vim.dindinx.net/vim7/html/if_perl.txt.php</a>
</li>

<li>Vim Perl Support<br />
<a href="http://www.softpanorama.org/Editors/Vimorama/vim_perl_support.shtml">http://www.softpanorama.org/Editors/Vimorama/vim_perl_support.shtml</a>
</li>

<li>VIM as Python IDE<br />
<a href="http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/">http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/</a>
</li>

<li>Stack Overflow: VIM: Perl interface: passing a variable to Perl and reading a vim variable from Perl<br />
<a href="http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from">http://stackoverflow.com/questions/4999902/vim-perl-interface-passing-a-variable-to-perl-and-reading-a-vim-variable-from</a>
</li>

<li>Stack Overflow: Getting started with vim scripting with Perl<br />
<a href="http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl">http://stackoverflow.com/questions/2208618/getting-started-with-vim-scripting-with-perl</a>
</li>

<li>Python with a modular IDE (Vim)<br />
<a href="http://www.sontek.net/python-with-a-modular-ide-vim">http://www.sontek.net/python-with-a-modular-ide-vim</a>
</li>

<li>Getting to VIM's Python interface<br />
<a href="http://zerokspot.com/weblog/2009/02/21/getting-to-know-vims-python-interface/">http://zerokspot.com/weblog/2009/02/21/getting-to-know-vims-python-interface/</a>
</li>

<li>Pretty-formatting XML<br />
<a href="http://vim.wikia.com/wiki/Pretty-formatting_XML">http://vim.wikia.com/wiki/Pretty-formatting_XML</a>
</li>

<li>Delete a pair of XML/HTML tags<br />
<a href="http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags">http://vim.wikia.com/wiki/Delete_a_pair_of_XML/HTML_tags</a>
</li>

<li>Vim as XML Editor<br />
<a href="http://www.pinkjuice.com/howto/vimxml/">http://www.pinkjuice.com/howto/vimxml/</a>
</li>

<li>xmledit: A filetype plugin to help edit XML, HTML, and SGML documents<br />
<a href="http://www.vim.org/scripts/script.php?script_id=301">http://www.vim.org/scripts/script.php?script_id=301</a>
</li>

<li>Poslední vývojová verze makra xmledit<br />
<a href="http://github.com/sukima/xmledit/">http://github.com/sukima/xmledit/</a>
</li>

<li>vim.wikia: Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>vim.wikia: Writing a valid statusline<br />
<a href="http://vim.wikia.com/wiki/Writing_a_valid_statusline">http://vim.wikia.com/wiki/Writing_a_valid_statusline</a>
</li>

<li>vim.wikia: Statusline tab level ruler<br />
<a href="http://vim.wikia.com/wiki/Statusline_tab_level_ruler">http://vim.wikia.com/wiki/Statusline_tab_level_ruler</a>
</li>

<li>vim.wikia: Switching between different statuslines<br />
<a href="http://vim.wikia.com/wiki/Switching_between_different_statuslines">http://vim.wikia.com/wiki/Switching_between_different_statuslines</a>
</li>

<li>X Selections, Cut Buffers, and Kill Rings<br />
<a href="http://www.jwz.org/doc/x-cut-and-paste.html">http://www.jwz.org/doc/x-cut-and-paste.html</a>
</li>

<li>Accessing the system clipboard<br />
<a href="http://vim.wikia.com/wiki/Accessing_the_system_clipboard">http://vim.wikia.com/wiki/Accessing_the_system_clipboard</a>
</li>

<li>xcutsel(1) - Linux man page<br />
<a href="http://linux.die.net/man/1/xcutsel">http://linux.die.net/man/1/xcutsel</a>
</li>

<li>snipMate : TextMate-style snippets for Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2540">http://www.vim.org/scripts/script.php?script_id=2540</a>
</li>

<li>msanders / snipmate.vim<br />
<a href="https://github.com/msanders/snipmate.vim">https://github.com/msanders/snipmate.vim</a>
</li>

<li>snipMate.vim Introductory Screencast<br />
<a href="http://vimeo.com/3535418">http://vimeo.com/3535418</a>
</li>

<li>Clewn home page<br />
<a href="http://clewn.sourceforge.net/">http://clewn.sourceforge.net/</a>
</li>

<li>How to connect vim with gdb - using clewn<br />
<a href="http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn">http://chunhao.net/blog/how-to-connect-vim-with-gdb-using-clewn</a>
</li>

<li>yavdb : Yet Another (Generic) Vim Debugger Integration<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1954">http://www.vim.org/scripts/script.php?script_id=1954</a>
</li>

<li>Vim home page<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>Vim plugins for developers<br />
<a href="http://www.linuxtoday.com/upload/vim-plugins-for-developers-140619094010.html">http://www.linuxtoday.com/upload/vim-plugins-for-developers-140619094010.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2015</small></p>
</body>
</html>


