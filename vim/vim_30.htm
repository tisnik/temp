<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Editace tabulek ve Vimu</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Editace tabulek ve Vimu</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku věnovaném textovému editoru Vim se seznámíme s tím, jakým způsobem je možné ve Vimu pracovat s tabulkami uloženými v běžných textových souborech. Ukážeme si i použití filtru tablign a velmi užitečného přídavného modulu table-mode.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Editace tabulek ve Vimu</a></p>
<p><a href="#k02">2. Problematika tvorby a editace tabulek ve Vimu</a></p>
<p><a href="#k03">3. Režim &bdquo;virtuální editace&ldquo;</a></p>
<p><a href="#k04">4. Implementace režimu &bdquo;virtuální editace&ldquo; ve Vimu</a></p>
<p><a href="#k05">5. Změna chování některých klávesových zkratek v&nbsp;režimu &bdquo;virtuální editace&ldquo;</a></p>
<p><a href="#k06">6. Změna chování některých klávesových zkratek v&nbsp;režimu <strong>VREPLACE</strong></a></p>
<p><a href="#k07">7. Příklady použití režimu &bdquo;virtuální editace&ldquo; ve Vimu</a></p>
<p><a href="#k08">8. Pomocný nástroj (filtr) <strong>tablign</strong></a></p>
<p><a href="#k09">9. Instalace nástroje <strong>tablign</strong></a></p>
<p><a href="#k10">10. Příklady použití nástroje <strong>tablign</strong></a></p>
<p><a href="#k11">11. Editace tabulek uložených ve formátu CSV</a></p>
<p><a href="#k12">12. Plugin <strong>table-mode</strong> přidávající do Vimu další režim pro práci s&nbsp;tabulkami</a></p>
<p><a href="#k13">13. Instalace pluginu <strong>table-mode</strong></a></p>
<p><a href="#k14">14. Přepnutí do &bdquo;tabulkového režimu&ldquo;</a></p>
<p><a href="#k15">15. Vytvoření jednoduché tabulky</a></p>
<p><a href="#k16">16. Specifikace oddělovače buněk</a></p>
<p><a href="#k17">17. Ruční zápis nové tabulky z&nbsp;existujících dat</a></p>
<p><a href="#k18">18. Nové příkazy pro editaci tabulky</a></p>
<p><a href="#k19">19. Editace vzorců</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Editace tabulek ve Vimu</h2>

<p>Populární textový editor Vim, s&nbsp;jehož některými možnostmi jsme se již
seznámili <a
href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">v&nbsp;tomto
seriálu</a> i v&nbsp;několika <a href="https://www.root.cz/n/vim/">samostatných
článcích</a>, se dnes používá v&nbsp;mnoha různých oblastech. Primárně je
samozřejmě Vim využíván vývojáři pro tvorbu a úpravy zdrojových kódů,
administrátory i lidmi z&nbsp;DevOps týmů pro editaci konfiguračních souborů
atd. Ovšem to ve skutečnosti není zdaleka vše, protože Vim je možné využít
například i pro tvorbu dokumentace (v&nbsp;různých formátech, včetně TeXu,
LaTeXu, AsciiDocu, MarkDownu, RestructuredTextu atd. atd.) a mj.&nbsp;jsme se
seznámili i s&nbsp;možností použít Vim ve funkci <a
href="https://www.root.cz/clanky/plugin-vim-orgmode-portace-popularniho-orgmode-do-vimu/">nástroje
pro organizaci času a/nebo projektů</a>, i když je na tomto místě nutné
přiznat, že možnosti režimu <a
href="https://www.root.cz/clanky/zaklady-pouziti-rezimu-org-mode-v-emacsu/">OrgMode</a>
v&nbsp;konkurenčním <a href="https://www.root.cz/n/emacs/">Emacsu</a> jsou
v&nbsp;této oblasti prozatím propracovanější.</p>

<a href="https://www.root.cz/obrazek/340482/"><img src="https://i.iinfo.cz/images/80/vim-orgmode-20-prev.png" class="image-340482" alt="&#160;" width="370" height="243" /></a>
<p><i>Obrázek 1: Režim vim-OrgMode.</i></p>

<p>Pro tvorbu čistého textu, strukturovaného textu popř.&nbsp;textu napsaného
v&nbsp;nějakém značkovacím jazyce je Vim skutečně velmi dobře použitelný, ovšem
s&nbsp;jednou výjimkou &ndash; v&nbsp;běžném Vimu se (bez použití dalších
pluginů či filtrů) relativně složitě pracuje s&nbsp;tabulkami:</p>

<pre>
|--------+------+-------+--------+-----------+-------------------|
| login  |  uid | gid   | name   | homedir   | interpreter       |
|--------+------+-------+--------+-----------+-------------------|
| root   |  0   | 0     | root   | /root     | /bin/bash         |
| daemon |  1   | 1     | daemon | /usr/sbin | /usr/sbin/nologin |
| bin    |  2   | 2     | bin    | /bin      | /usr/sbin/nologin |
| sys    |  3   | 3     | sys    | /dev      | /usr/sbin/nologin |
| sync   |  4   | 65534 | sync   | /bin      | /bin/sync         |
|--------+------+-------+--------+-----------+-------------------|
</pre>

<a href="https://www.root.cz/obrazek/340463/"><img src="https://i.iinfo.cz/images/80/vim-orgmode-1-prev.png" class="image-340463" alt="&#160;" width="275" height="270" /></a>
<p><i>Obrázek 2: Jednoduchý dokument zobrazený v&nbsp;režimu Org mode
v&nbsp;textovém editoru Emacs.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Problematika tvorby a editace tabulek ve Vimu</h2>

<p>Práce s&nbsp;tabulkami ve Vimu je problematická z&nbsp;několika důvodů.
Především v&nbsp;běžných vimovských režimech (převzatých z&nbsp;původního
editoru Vi) není možné přesunout kurzor <i>za</i> konec napsaných řádků: můžeme
se přesunout pouze přesně <i>na</i> konec textu a příkazem <strong>a</strong>
přidat další znaky (popř.&nbsp;přesun a příkaz pro přidání zkombinovat do
jediného příkazu <strong>A</strong>). To je při tvorbě tabulek dosti pracné a
navíc se poněkud vytrácí elegance některých příkazů, například příkazu
<strong>n|</strong> určeného pro horizontální přesun kurzoru (v&nbsp;rámci
textového řádku) na zadaný sloupec (za <i>n</i> se pochopitelně doplní číslo
sloupce). V&nbsp;běžných režimech se například na řádku o délce 50 znaků nelze
přesunou na sloupec číslo 100 příkazem <strong>100|</strong>, protože se
textový kurzor &bdquo;zasekne&ldquo; na posledním zapsaném znaku:</p>

<pre>
Toto je text zapsaný v bufferu.
                              ^
  poslední možná pozice kurzoru
</pre>

<p>A druhý důvod spočívá v&nbsp;tom, že samotný Vim nijak nerozeznává
oddělovače sloupců, takže nemá v&nbsp;základní sadě příkazů příkazy pro pohyb
mezi sloupci, jejich mazání a pochopitelně ani příkaz pro naformátování tabulky
po provedených editačních operacích.</p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;následujících kapitolách budou
použity screenshoty Vimu otevřeného ve velmi malém terminálu. Není to
z&nbsp;toho důvodu, že by byl autor masochista a měl miniaturní monitor, ale
kvůli omezení dané designem Roota &ndash; články jsou zobrazovány jako úzké
&bdquo;nudle&ldquo; a obrázky s&nbsp;vyšším horizontálním rozlišením jsou
naškálovány do menší velikosti, což u screenshotů textového editoru postrádá
význam. Z&nbsp;tohoto důvodu má okno editoru pouze 25 řádků a 59 znaků na
řádku.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Režim &bdquo;virtuální editace&ldquo;</h2>

<p>Práce s&nbsp;tabulkami v&nbsp;běžném textovém editoru může být
v&nbsp;některých případech poměrně komplikovaná. Představme si například
situaci, kdy je nutné do tohoto souboru na konec přidat znaky s&nbsp;vertikální
úsečkou:</p>

<pre>
|----+-------+---------
| ID | name  | surname
|----+-------+---------
| 01 | Jon   | Snow
| 02 | Marty | McFly
|----+-------+---------
</pre>

<p>Výsledkem by měla být tato tabulka:</p>

<pre>
|----+-------+---------|
| ID | name  | surname |
|----+-------+---------|
| 01 | Jon   | Snow    |
| 02 | Marty | McFly   |
|----+-------+---------|
</pre>

<p>Ideální by tedy byl stav, kdy se kurzor přesune na konec prvního řádku,
vloží se znak | a poté se (buď makrem, nebo ručně) kurzor přesune na další
řádek, ovšem do stejného sloupce, aby bylo možné vložit další znak |. Ve
standardních režimech Vimu to však není možné &ndash; je nutné se přepnout do
takzvaného režimu virtuální editace, kdy se kurzor přesunuje kamkoli po
obrazovce, tedy i do míst, kde se ve skutečnosti žádný text nenachází.</p>

<a href="https://www.root.cz/obrazek/363765/"><img src="https://i.iinfo.cz/images/346/vim-30-a-1-prev.png" class="image-363765" alt="&#160;" width="370" height="231" /></a>
<p><i>Obrázek 3: Mnoho původních programátorských textových editorů pro DOS
režim virtuální editace podporovalo. Velmi dobrým příkladem může být textový
editor zabudovaný do populárního souborového manažeru Dos Navigator.</i></p>

<a href="https://www.root.cz/obrazek/363766/"><img src="https://i.iinfo.cz/images/346/vim-30-a-2-prev.png" class="image-363766" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 4: Podobnou možnosti nalezneme například v&nbsp;editoru
<strong>mcedit</strong>, který je součástí Midnight Commanderu.</i></p>

<a href="https://www.root.cz/obrazek/363767/"><img src="https://i.iinfo.cz/images/346/vim-30-a-3-prev.png" class="image-363767" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 5: Příklad přesunu kurzoru mimo vlatní oblast textu
v&nbsp;<strong>mceditu</strong>.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Implementace režimu &bdquo;virtuální editace&ldquo; ve Vimu</h2>

<p>První z&nbsp;naznačených problémů je možné poměrně snadno řešit v&nbsp;rámci
čistého Vimu, přesněji řečeno Vimu, který není (resp.&nbsp;nemusí být) doplněn
o žádný plugin. Vim totiž obsahuje speciální režim &bdquo;virtuální
editace&ldquo;, což ve skutečnosti znamená, že se textový kurzor může přesouvat
i za konec fyzické textové řádky. Pokud tedy kurzor přesuneme na stý sloupec a
přidáme do textu znak, doplní Vim textový řádek mezerami. Navíc se změní i
funkce příkazu <strong>n|</strong>, kterým je možné přesunout textový kurzor na
libovolné místo v&nbsp;rámci editovaného řádku, včetně místa za fyzickým
řádkem. Díky těmto možnostem se možnosti Vimu při tvorbě a editaci tabulek
zvětšují. Režim virtuální editace se řídí konfiguračním parametrem
<strong>virtualedit</strong>, kterému lze přiřadit jednu z&nbsp;těchto
voleb:</p>

<table>
<tr><th>#</th><th>Volba</th><th>Význam</th></tr>
<tr><td>1</td><td>block</td><td>povolení virtuální editace při práci s&nbsp;vizuálními bloky</td></tr>
<tr><td>2</td><td>insert</td><td>povolení virtuální editace ve vkládacím režimu</td></tr>
<tr><td>3</td><td>all</td><td>povolení virtuální editace ve všech režimech</td></tr>
<tr><td>4</td><td>onemore</td><td>zajímavá volba umožňující přesun kurzoru pouze ZA poslední znak</td></tr>
</table>

<p>Samotný příkaz pro nastavení či změnu volby vypadá takto:</p>

<pre>
:set virtualedit=vybraná_volba
</pre>

<p>Po zapnutí režimu virtuální editace si můžeme (například) vytvořit makro
namapované na klávesu <strong>a</strong>, které zajistí, že se na padesátou
pozici na řádku (nezávisle na jeho obsahu) vloží znak |, který může
představovat pravý okraj tabulky:</p>

<pre>
50|i|&lt;Esc&gt;&lt;Down&gt;
</pre>

<p>Makro namapujeme na klávesu <strong>a</strong> běžným způsobem,
tj.&nbsp;příkazem <strong>qa</strong>. Přehrání makra zajistí příkaz
<strong>@a</strong> a díky tomu, že se kurzor přesouvá na další řádek (do
virtuálního padesátého sloupce), je pochopitelně možné makro opakovat:
<strong>10@a</strong>.</p>

<p>Aby byl režim virtuální editace podporován, musí být Vim přeložen
s&nbsp;volbou <strong>+virtualedit</strong>, což snadno zjistíme příkazem:</p>

<pre>
:ver
</pre>

<p>Příklad výstupu:</p>

<pre>
VIM - Vi IMproved 8.1 (2018 May 18, compiled Jun 17 2019 09:09:11)
Included patches: 1-1561
Modified by &lt;bugzilla@redhat.com&gt;
Compiled by &lt;bugzilla@redhat.com&gt;
Huge version with GTK2 GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
+balloon_eval    +float           +mouse_urxvt     -tag_any_white
+browse          +folding         +mouse_xterm     +tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
+clientserver    -hangul_input    +netbeans_intg   +title
+clipboard       +iconv           +path_extra      +toolbar
+cmdline_compl   +insert_expand   +perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      <strong>+virtualedit</strong>
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      +python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con_gui  +lua             +rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      +X11
+dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     +xim
+emacs_tags      +mouseshape      -sniff           +xsmp_interact
+eval            +mouse_dec       +startuptime     +xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    +xpm
</pre>

<img src="https://i.iinfo.cz/images/173/vim-30-b-1.png" class="image-363769" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 6: Vim s&nbsp;povolenou volbou
<strong>+virtualedit</strong>.</i></p>

<img src="https://i.iinfo.cz/images/173/vim-30-b-2.png" class="image-363770" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 7: Nápověda k&nbsp;režimu virtuální editace.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Význam konfigurační volby <strong>onemore</strong></h2>

<p>Zastavme se na chvíli u poslední volby zmíněné v&nbsp;předchozí tabulce.
Jedná se o volbu nazvanou <strong>onemore</strong>. Tato relativně málo známá
volba umožňuje přesuny kurzoru ZA poslední znak zapsaný na textovém řádku, ale
ne dále (ovšem samotným přesunem se žádná nová mezera do souboru nevloží, pouze
je možné, aby kurzor stál za koncem řádku, který je možné zvýraznit volbou
<strong>set list</strong>).</p>

<p>Může se jednat o dosti zajímavou a užitečnou volbu, která zajistí, že se
mnoho příkazů stane konzistentní, a to včetně uživatelských maker atd. Můžeme
si to ostatně ukázat i na příkladu makra umožňujícího, aby se vybraný text
zvýraznil, konkrétně aby se obalil do značek <strong>&lt;strong&gt;</strong> a
<strong>&lt;/strong&gt;</strong> a následně se kurzor přesunul na začátek takto
zvýrazněného textu (toto makro používám při psaní článku):</p>

<pre>
au BufRead,BufNewFile *.htm,*.html vmap &lt;C-B&gt; omaomb&lt;esc&gt;`bi&lt;/strong&gt;&lt;esc&gt;`ai&lt;strong&gt;&lt;esc&gt;
</pre>

<p>Toto makro je sice funkční, ovšem s&nbsp;jednou výjimkou &ndash; nebude
pracovat korektně v&nbsp;případě, kdy budeme chtít zvýraznit poslední slovo na
řádku, protože nedojde ke zvýraznění posledního znaku. Pochopitelně je možné
tento problém opravit v&nbsp;samotném makru (ovšem dosti složitým způsobem),
nebo je možné pracovat v&nbsp;režimu virtuální editace s&nbsp;nastavením
<strong>onemore</strong>:</p>

<pre>
:set virtualedit=onemore
</pre>

<p><div class="rs-tip-major">Poznámka: kromě toho je nastavení
<strong>virtualedit=onemore</strong> výhodné i pro ty uživatele, kteří
s&nbsp;vimem teprve začínají a znají například jen jediný příkaz pro přepnutí
editoru do vkládacího režimu, a to klávesou klávesou <strong>i</strong> nebo
<strong>Insert</strong>. V&nbsp;takovém případě je pro uživatele dost
problematické připojit cokoli na konec řádku, protože to vyžaduje použití
příkazů <strong>a</strong> nebo  <strong>A</strong>.</div></p>

<img src="https://i.iinfo.cz/images/697/vim-30-b-07-1.png" class="image-363774" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 8: Nápověda k&nbsp;nastavení
<strong>virtualedit</strong>.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Změna chování některých klávesových zkratek v&nbsp;režimu <strong>VREPLACE</strong></h2>

<p>Kromě režimu virtuální editace se můžeme setkat i s&nbsp;režimem nazvaným
<strong>VREPLACE</strong>, který se taktéž někdy používá pro editaci tabulek.
Tento režim má poněkud odlišný význam, protože mění i chování kláves určených
pro mazání. Jedná se především o klávesy <strong>Backspace</strong>,
<strong>Ctrl+W</strong> a <strong>Ctrl+U</strong> použité v&nbsp;režimu
vkládání. Připomeňme si, že v&nbsp;klasickém režimu vkládání slouží
<strong>Backspace</strong> pro smazání znaku, který se nachází nalevo od
kurzoru (pokud tedy nepoužijeme right-to-left režim, což pravděpodobně není
případ čtenářů tohoto článku) a klávesa <strong>Ctrl+W</strong> pro smazání
slova před kurzorem. Klávesa <strong>Ctrl+U</strong> vrátí zpět všechny změny,
které byly na řádku provedeny. V&nbsp;případě, že se použije režim virtuální
editace, bude klávesa <strong>Backspace</strong> sloužit nikoli pro smazání
posledního znaku, ale pro obnovení jeho původní podoby. Podobně je tomu i u
klávesy <strong>Ctrl+W</strong>, která vrátí zpět obsah celého slova, které se
nachází nalevo od kurzoru.</p>

<img src="https://i.iinfo.cz/images/346/vim-30-a-4.png" class="image-363768" alt="&#160;" width="541" height="371" />
<p><i>Obrázek 9: Přepínání mezi režimy modálního textového editoru Vim (některé
varianty základních režimů zde nejsou pro větší názornost diagramu
nakresleny).</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Příklady použití režimu &bdquo;virtuální editace&ldquo;</h2>

<p>Podívejme se nyní na příklad použití režimu virtuální editace při úpravách
tabulky, která je součástí dokumentace projektu <i>Bootstrap</i>, se kterým
jsme se seznámili v&nbsp;článku <a
href="https://www.root.cz/clanky/muzeme-verit-prekladacum-projekty-resici-schema-duverive-duvery/#k09">Můžeme
věřit překladačům? Projekty řešící schéma „důvěřivé důvěry“</a>. Na
screenshotech jsou zvýrazněny konce řádků modrým znakem dolaru; tento režim
zobrazení je zapnut příkazem:</p>

<pre>
:set list
</pre>

<img src="https://i.iinfo.cz/images/173/vim-30-b-4.png" class="image-363772" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 10: Kurzor se může přesunout mimo vlastní text, a to i
v&nbsp;normálním režimu. Pro lepší ilustraci je zde použita volba <strong>:set
list</strong> zobrazující konce řádků s&nbsp;využitím modrého dolaru.</i></p>

<img src="https://i.iinfo.cz/images/173/vim-30-b-5.png" class="image-363773" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 11: I při editaci v&nbsp;režimu vkládání je možné kurzor
přesunout mimo vlastní text (jméno tohoto režimu je zobrazeno na pravítku vlevo
dole).</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Pomocný nástroj (filtr) <strong>tablign</strong></h2>

<p>V&nbsp;této chvíli již tedy víme, jak je možné využít režim virtuální
editace pro alespoň částečné vylepšení práce s&nbsp;tabulkami. Ovšem
pravděpodobně sami uznáte, že se v&nbsp;žádném případě nejedná o ideální
řešení, a to například tehdy, pokud potřebujeme tabulky editovat. Při editacích
dochází k&nbsp;&bdquo;rozhození&ldquo; jednotlivých buňek, které již nebudou
zarovnány pod sebe. Jedno z&nbsp;možných řešení tohoto problému spočívá
v&nbsp;použití externího filtru nazvaného <strong>tablign</strong>. Tento filtr
pracuje jednoduše. Na jeho vstupu je několik textových řádků. Filtr
v&nbsp;těchto řádcích rozpozná oddělovače sloupců a zarovná text takovým
způsobem, aby buňky pod sebou přesně lícovaly. Rozpoznáno je hned několik
oddělovačů sloupců, včetně znaku | (běžné tabulky, asi nejčitelnější a
nejpřenositelnější řešení), čárky, středníku a &amp; (tabulky z&nbsp;TeXu).</p>

<p><div class="rs-tip-major">Poznámka: striktně řečeno vlastně
<strong>tablign</strong> nepracuje jako skutečný filtr v&nbsp;unixovém slova
smyslu, protože potřebuje zjistit šířku všech buněk. Ve skutečnosti se celá
tabulka načte do paměti jako jeden řetězec, rozdělí se na řádky a ty se posléze
zpracují. Pro obrovské tabulky tedy dojde k&nbsp;vyšší spotřebě paměti, což
však při běžném použití (desítky, stovky, tisíce řádků) v&nbsp;žádném případě
nebude vadit.</div></p>

<p>Tento projekt nalezneme na GitHubu na adrese <a
href="https://github.com/nschloe/tablign">https://github.com/nschloe/tablign</a>
i ve formě balíčku pro Python na <a
href="https://pypi.org/project/tablign/">https://pypi.org/project/tablign/</a>.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Instalace nástroje <strong>tablign</strong></h2>

<p>Instalace nástroje <strong>tablign</strong> je vetšinou velmi snadná,
protože se jedná o projekt naprogramovaný v&nbsp;čistém Pythonu (bez dalších
závislostí), který je dostupný na <a
href="https://pypi.org/project/tablign/">PyPi</a>. Pro instalaci tedy můžeme
použít nástroj <strong>pip</strong> nebo <strong>pip3</strong>, a to konkrétně
následujícím způsobem:</p>

<pre>
$ <strong>pip3 install --user tablign</strong>
</pre>

<p>Instalace proběhne během několika sekund:</p>

<pre>
Downloading/unpacking tablign
  Downloading tablign-0.1.7-py2.py3-none-any.whl
Downloading/unpacking pipdate&gt;=0.3.0,&lt;0.4.0 (from tablign)
  Downloading pipdate-0.3.2-py2.py3-none-any.whl
Requirement already satisfied (use --upgrade to upgrade): appdirs in ./.local/lib/python3.4/site-packages (from pipdate&gt;=0.3.0,&lt;0.4.0-&gt;tablign)
Requirement already satisfied (use --upgrade to upgrade): requests in /usr/lib/python3/dist-packages (from pipdate&gt;=0.3.0,&lt;0.4.0-&gt;tablign)
Installing collected packages: tablign, pipdate
Successfully installed tablign pipdate
Cleaning up...
</pre>

<p>Ověřte si, že je <strong>tablign</strong> dostupný na
<strong>PATH</strong>:</p>

<pre>
$ tablign
&nbsp;
1,2,3
foo,bar,baz
hello,world,!
<strong>Ctrl+D</strong>
1     , 2     , 3
foo   , bar   , baz
hello , world , !
$
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Příklady použití nástroje <strong>tablign</strong></h2>

<p>Po instalaci by měl být nástroj <strong>tablign</strong> spustitelný
z&nbsp;příkazové řádky, což je v&nbsp;tuto chvíli vše, co budeme potřebovat,
protože externí filtry z&nbsp;Vimu dokážeme spouštět, a to příkazem
<strong>!</strong> zadávaným z&nbsp;příkazového režimu (tedy s&nbsp;dvojtečkou)
nebo z&nbsp;režimu vizuálních bloků (výběr přes <strong>v</strong>,
<strong>Ctrl+V</strong> apod.). Podívejme se tedy na několik příkladů
použití.</p>

<h3>První příklad</h3>

<img src="https://i.iinfo.cz/images/283/vim-30-c-1.png" class="image-363775" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 12: Příprava tabulky, ovšem bez snahy o zarovnání buněk.</i></p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-2.png" class="image-363776" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 13: Výběr řádků tabulky do bloku a příprava spuštění filtru
<strong>tablign</strong>.</i></p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-3.png" class="image-363777" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 14: Výsledek po zarovnání.</i></p>

<h3>Druhý příklad</h3>

<img src="https://i.iinfo.cz/images/283/vim-30-c-4.png" class="image-363778" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 15: Tabulka s&nbsp;dokumentací k&nbsp;projektu Bootstrap, jejíž
buňky nejsou zarovnány.</i></p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-5.png" class="image-363779" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 16: Výběr rozházené části tabulky do bloku.</i></p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-6.png" class="image-363780" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 17: Výsledek aplikace filtru <strong>tablign</strong>.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Editace tabulek uložených ve formátu CSV</h2>

<p>Výše popsaný příkaz <strong>tablign</strong> je dokonce možné použít i ve
chvíli, kdy budeme potřebovat upravit tabulky ve formátu <strong>CSV</strong>
(<i>Comma Separated Values</i>). Jak již název tohoto formátu naznačuje, jsou
jednotlivé buňky odděleny čárkou (a současně se jedná o lež, protože se může
jednat i o středník, ostatně na podobné chuťovky jsme u formátů navržených
v&nbsp;součinnosti s&nbsp;MS zvyklí, viz například problémy s&nbsp;formátem
BMP). U CSV formátu jsou texty umístěny do uvozovek a u čísel nehrají roli
mezery umístěné před a za číselnou hodnotu. To v&nbsp;praxi znamená, že můžeme
před nebo za čárky (středníky) oddělující jednotlivé buňky vložit mezery, aniž
by to změnilo sémantiku uložených dat. Tudíž je možné si CSV upravit takovým
způsobem, aby byl ve Vimu čitelnější a snadněji se editoval (velikost souboru
se ovšem může mnohdy i násobně zvětšit!).</p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-7.png" class="image-363781" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 18: Původní obsah souboru s&nbsp;tabulkou uloženou ve formátu
CSV.</i></p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-8.png" class="image-363782" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 19: Zavolání externího filtru <strong>tablign</strong>.</i></p>

<img src="https://i.iinfo.cz/images/283/vim-30-c-9.png" class="image-363783" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 20: Výsledek je již krásně čitelný.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Plugin <strong>table-mode</strong> přidávající do Vimu další režim pro práci s&nbsp;tabulkami</h2>

<p>I přes existenci režimu virtuální editace a filtru <strong>tablign</strong>
není práce s&nbsp;tabulkami ve Vimu zcela snadná. Jedná se jak o vlastní tvorbu
tabulek, tak i o jejich následnou editaci. A to samozřejmě nepočítáme
s&nbsp;tím, že by tabulky obsahovaly vzorečky, které by automaticky měnily
obsah vypočtených buněk tak, jak je tomu v&nbsp;běžných tabulkových
procesorech.  Určité řešení ovšem existuje. Jedná se o plugin nazvaný
<strong>table-mode</strong>, jehož repositář naleznete na adrese <a
href="https://github.com/dhruvasagar/vim-table-mode">https://github.com/dhruvasagar/vim-table-mode</a>.
Na tomto pluginu je zajímavé mj.&nbsp;i to, že je celý naprogramován přímo ve
<a
href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide-6-cast-vim-script/">VimScriptu</a>
a tudíž nevyžaduje žádné externí nástroje a dokonce ani to, aby byl Vim
přeložen s&nbsp;podporou rozhraní pro další jazyky (Python, <a
href="https://www.root.cz/clanky/tvorba-pluginu-pro-vim-s-vyuzitim-programovaciho-jazyka-lua/">Luu</a>,
<a
href="https://www.root.cz/clanky/textovy-editor-vim-jako-ide-17-cast-kooperace-mezi-vimem-a-jazykem-perl/">Perl</a>
atd.).</p>

<img src="https://i.iinfo.cz/images/66/vim-30-d-1.png" class="image-363786" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 21: Nápověda k&nbsp;pluginu <strong>table-mode</strong>.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Instalace pluginu <strong>table-mode</strong></h2>

<p>Plugin <strong>table-mode</strong> je možné využít jak ve Vimu 7.x, tak i ve
Vimu 8.x (o Vimu 7.x se zmiňuji z&nbsp;toho důvodu, že tuto verzi nalezneme na
mnoha serverech se stabilní distribucí Linuxu). Pokud používáte Vim 8.x
s&nbsp;vlastním správcem projektů, bude postačovat plugin nainstalovat do
adresáře <strong>~/.vim</strong>, který by měl mít následující strukturu
(samotná instalace se tedy provede pouhým naklonováním repositáře):</p>

<pre>
.
└── pack
    └── packages
        └── <strong>vim-table-mode</strong>
            ├── autoload
            │   └── tablemode
            │       └── spreadsheet
            ├── doc
            ├── ftplugin
            ├── plugin
            └── t
                ├── config
                └── fixtures
                    ├── align
                    ├── cell
                    ├── formula
                    └── table
</pre>

<p>V&nbsp;případě, že musíte používat Vim 7, lze použít například <a
href="https://www.root.cz/clanky/uzitecne-skripty-a-pluginy-pro-textovy-editor-vim/#k02">správce
projektů Pathogen</a>. V&nbsp;takovém případě bude struktura adresáře
<strong>~/.vim</strong> vypadat poněkud odlišně:</p>

<pre>
.
├── autoload
│   └── go
│       └── test-fixtures
│           ├── cmd
│           ├── complete
.           .
.           .
.           .
├── bundle
│   ├── calendar-vim
│   │   ├── autoload
│   │   ├── doc
│   │   └── plugin
│   ├── rainbow_parentheses.vim
│   │   ├── autoload
│   │   └── plugin
│   ├── todo.txt-vim
│   │   ├── autoload
│   │   │   └── todo
│   │   ├── doc
│   │   ├── ftdetect
│   │   ├── ftplugin
│   │   └── syntax
│   │       └── python
│   │           └── dateregex
│   │               └── dateregex
│   ├── vim-fugitive
│   │   ├── doc
│   │   └── plugin
│   ├── vim-slime
│   │   ├── doc
│   │   └── plugin
│   └── <strong>vim-table-mode</strong>
│       ├── autoload
│       │   └── tablemode
│       │       └── spreadsheet
│       ├── doc
│       ├── ftplugin
│       ├── plugin
│       └── t
│           ├── config
│           └── fixtures
│               ├── align
│               ├── cell
│               ├── formula
│               └── table
├── doc
├── ftdetect
├── plugin
├── spell
└── syntax
</pre>

<p>Jinými slovy &ndash; repositář s&nbsp;pluginem je nutné naklonovat do
podadresáře <strong>~/.vim/bundle</strong>.</p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Přepnutí do &bdquo;tabulkového režimu&ldquo;</h2>

<p>Ihned po své instalaci by měl být plugin <strong>table-mode</strong>
k&nbsp;dispozici, ovšem vzhledem k&nbsp;tomu, že poměrně zásadním způsobem mění
chování Vimu, je ho nutné explicitně aktivovat, popř.&nbsp;si explicitně
vyžádat přeformátování tabulky. K&nbsp;tomu slouží následující příkazy, všechny
zadávané v&nbsp;příkazovém režimu (proto je před nimi uvedena dvojtečka):</p>

<table>
<tr><th>#</th><th>Příkaz</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>:TableModeEnable</td><td>přepnutí do režimu editace tabulek</td></tr>
<tr><td>2</td><td>:TableModeDisable</td><td>vypnutí režimu editace tabulek</td></tr>
<tr><td>3</td><td>:TableModeToggle</td><td>přepínání mezi běžnými režimy Vimu a režimem editace tabulek</td></tr>
<tr><td>4</td><td>:Tableize</td><td>aktuální řádek se změní na tabulku</td></tr>
</table>

<img src="https://i.iinfo.cz/images/66/vim-30-d-2.png" class="image-363787" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 22: Aktivace režimu <strong>table-mode</strong>.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Vytvoření jednoduché tabulky z&nbsp;existujících dat</h2>

<p>Novou tabulku je možné vytvořit hned několika různými způsoby. Pokud již
máme k&nbsp;dispozici data s&nbsp;nějakým oddělovačem sloupců, můžeme taková
data převést na tabulku velmi snadno, a to příkazem <strong>:Tableize</strong>.
Vstupem může být soubor s&nbsp;tímto obsahem:</p>

<pre>
ID|Name|Surname
01|Foo|Bar
</pre>

<p>Výběrem obou řádků (libovolným způsobem) a spuštěním příkazu
<strong>Tableize</strong> můžeme tento buffer změnit na tabulku:</p>

<pre>
| ID | Name | Surname |
| 01 | Foo  | Bar     |
</pre>

<p>Zde jsme konkrétně použili příkaz:</p>

<pre>
:%Tableize
</pre>

<p>Zcela stejným způsobem můžeme tabulku vytvořit z&nbsp;dat, kde jsou
jednotlivé položky záznamů odděleny například čárkou:</p>

<pre>
ID,Name,Surname
01,Foo,Bar
</pre>

<p>Pro změnu použijeme odlišnou podobu příkazu <strong>:Tableize</strong>:</p>

<pre>
:1,$Tableize
</pre>

<p>Výsledek ovšem bude i v&nbsp;tomto případě totožný:</p>

<pre>
| ID | Name | Surname |
| 01 | Foo  | Bar     |
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Specifikace oddělovače buněk</h2>

<p>Poměrně často se můžeme setkat s&nbsp;tím, že soubor s&nbsp;daty bude mít
odlišný oddělovač. V&nbsp;takovém případě musíme příkazu
<strong>:Tableize</strong> tento oddělovač předat. Například soubor (či jeho
část):</p>

<pre>
ID*Name*Surname
01*Foo*Bar
02*I*Robot
</pre>

<p>Převedeme na tabulku příkazem:</p>

<pre>
:%Tableize/*
</pre>

<p>S&nbsp;výsledkem:</p>

<pre>
| ID | Name | Surname |
| 01 | Foo  | Bar     |
| 02 | I    | Robot   |
</pre>

<p><div class="rs-tip-major">Poznámka: zde je vhodné upozornit na to, že
vstupní soubor může obsahovat různá data, tj.&nbsp;například tabulky smíchané
s&nbsp;běžným textem atd. A právě v&nbsp;takových případech je
<strong>:Tableize</strong> velmi užitečný, protože nám umožňuje vybrat jen
několik řádků (ve vizuálním režimu) a poté pouze tyto řádky převést na
skutečnou tabulku. To je poměrně podstatný rozdíl od různých pomocných skriptů,
které například pracují s&nbsp;obsahem celého souboru, bez ohledu na to, že se
v&nbsp;něm mohou nacházet různé poznámky, hlavičky, generovaná metadata
apod.</div></p>

<p>Poslední příklad na dané téma. Tentokrát se bude jednat o známý soubor
<strong>/etc/passwd</strong>, jehož údaje budeme chtít převést na tabulku:</p>

<pre>
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
</pre>

<p>Soubor otevřeme (pro jistotu jen pro čtení :-) a převedeme vybranou část
(vizuální blok) na tabulku:</p>

<pre>
:'&lt;,'&gt;Tableize/:
</pre>

<p>Výsledkem by měl být buffer s&nbsp;následujícím obsahem:</p>

<pre>
| root     | x | 0  | 0     | root                 | /root           | /bin/bash         |
| daemon   | x | 1  | 1     | daemon               | /usr/sbin       | /usr/sbin/nologin |
| bin      | x | 2  | 2     | bin                  | /bin            | /usr/sbin/nologin |
| sys      | x | 3  | 3     | sys                  | /dev            | /usr/sbin/nologin |
| sync     | x | 4  | 65534 | sync                 | /bin            | /bin/sync         |
| games    | x | 5  | 60    | games                | /usr/games      | /usr/sbin/nologin |
| man      | x | 6  | 12    | man                  | /var/cache/man  | /usr/sbin/nologin |
| lp       | x | 7  | 7     | lp                   | /var/spool/lpd  | /usr/sbin/nologin |
| mail     | x | 8  | 8     | mail                 | /var/mail       | /usr/sbin/nologin |
| news     | x | 9  | 9     | news                 | /var/spool/news | /usr/sbin/nologin |
| uucp     | x | 10 | 10    | uucp                 | /var/spool/uucp | /usr/sbin/nologin |
| proxy    | x | 13 | 13    | proxy                | /bin            | /usr/sbin/nologin |
| www-data | x | 33 | 33    | www-data             | /var/www        | /usr/sbin/nologin |
| backup   | x | 34 | 34    | backup               | /var/backups    | /usr/sbin/nologin |
| list     | x | 38 | 38    | Mailing List Manager | /var/list       | /usr/sbin/nologin |
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Ruční zápis nové tabulky</h2>

<p>V&nbsp;předchozí kapitole jsme si ukázali, jakým způsobem můžeme vytvořit
tabulku ve chvíli, kdy máme k&nbsp;dispozici vstupní textový soubor
s&nbsp;daty. Ovšem nic nám nebrání si tabulku postupně vytvořit. Příkazem
<strong>:TableModeEnable</strong> si nejdříve ověřte, že je režim zápisu
tabulek povolen. Následně je možné si odzkoušet následující kroky:</p>

<img src="https://i.iinfo.cz/images/66/vim-30-d-3.png" class="image-363788" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 23: Po zápisu prvního řádku se <strong>automaticky</strong>
tabulka přeformátuje. Že se jedná o tabulku poznáme podle zvýraznění
oddělovačů.</i></p>

<img src="https://i.iinfo.cz/images/66/vim-30-d-4.png" class="image-363789" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 24: Zápis dalších řádků s&nbsp;automatickým formátováním
tabulky.</i></p>

<img src="https://i.iinfo.cz/images/66/vim-30-d-5.png" class="image-363790" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 25: Zápis dalších řádků s&nbsp;automatickým formátováním
tabulky (po přechodu na další řádek).</i></p>

<img src="https://i.iinfo.cz/images/66/vim-30-d-6.png" class="image-363791" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 26: Do tabulky lze pomocí || vložit vertikální oddělovač, který
se automaticky naformátuje.</i></p>

<img src="https://i.iinfo.cz/images/66/vim-30-d-7.png" class="image-363792" alt="&#160;" width="596" height="482" />
<p><i>Obrázek 27: A následně se tabulka automaticky přeformátuje a
zarovná.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Nové příkazy pro editaci tabulky</h2>

<p>Plugin <strong>table-mode</strong> nabízí i další příkazy, které všechny
začínají tzv.&nbsp;lokálním uvozovacím znakem. Tím bývá zpětné lomítko nebo
čárka, osobně však používám mezeru. Nastavení této volby je snadné:</p>

<pre>
let maplocalleader = ","
</pre>

<table>
<tr><th>#</th><th>Zkratka</th><th>Stručný popis příkazu</th></tr>
<tr><td>1</td><td>|</td><td>vytvoření tabulky</td></tr>
<tr><td>2</td><td>leader+tt</td><td>přeformátování tabulky</td></tr>
<tr><td>3</td><td>leader+T</td><td>dtto, ale s&nbsp;volbou oddělovače</td></tr>
<tr><td>4</td><td>[| ]|</td><td>přechod na předchozí/následující buňku</td></tr>
<tr><td>5</td><td>leader+tdd</td><td>smazání celého řádku</td></tr>
<tr><td>6</td><td>leader+tdc</td><td>smazání celého sloupce</td></tr>
<tr><td>7</td><td>leader+ts</td><td>setřídění sloupce</td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Editace vzorců</h2>

<p>Plugin <strong>table-mode</strong> podporuje i práci se vzorci, což je téma,
kterému se budeme věnovat příště (navíc možná není tak užitečné, jako schopnost
editovat ve Vimu tabulky civilizovaným způsobem).</p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>tablign na PyPi<br />
<a href="https://pypi.org/project/tablign/">https://pypi.org/project/tablign/</a>
</li>

<li>tablign na GitHubu<br />
<a href="https://github.com/nschloe/tablign">https://github.com/nschloe/tablign</a>
</li>

<li>Tables in vim (reddit)<br />
<a href="https://www.reddit.com/r/vim/comments/8lyigo/tables_in_vim/">https://www.reddit.com/r/vim/comments/8lyigo/tables_in_vim/</a>
</li>

<li>vim-table-mode (repositář na GitHubu)<br />
<a href="https://github.com/dhruvasagar/vim-table-mode">https://github.com/dhruvasagar/vim-table-mode</a>
</li>

<li>table-mode na Vim.org (starší verze!)<br />
<a href="https://www.vim.org/scripts/script.php?script_id=4501">https://www.vim.org/scripts/script.php?script_id=4501</a>
</li>

<li>Smarter Table Editing<br />
<a href="https://vim.fandom.com/wiki/Smarter_Table_Editing">https://vim.fandom.com/wiki/Smarter_Table_Editing</a>
</li>

<li>Smarter Table Editing II<br />
<a href="https://vim.fandom.com/wiki/Smarter_Table_Editing_II">https://vim.fandom.com/wiki/Smarter_Table_Editing_II</a>
</li>

<li>Články o Vimu na Root.cz:<br />
<a href="http://www.root.cz/n/vim/clanky/">http://www.root.cz/n/vim/clanky/</a>
</li>

<li>Replace and Virtual Replace Modes<br />
<a href="https://medium.com/vim-drops/replace-and-virtual-replace-modes-3e841b9161ca">https://medium.com/vim-drops/replace-and-virtual-replace-modes-3e841b9161ca</a>
</li>

<li>How can I easily create and maintain tables?<br />
<a href="https://vi.stackexchange.com/questions/363/how-can-i-easily-create-and-maintain-tables">https://vi.stackexchange.com/questions/363/how-can-i-easily-create-and-maintain-tables</a>
</li>

<li>Vim &ndash; the editor<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>Vim as a Python IDE, or Python IDE as Vim<br />
<a href="http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/">http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/</a>
</li>

<li>Popis skriptu Vim Pathogen<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2332">http://www.vim.org/scripts/script.php?script_id=2332</a>
</li>

<li>Poslední­verze skriptu Vim Pathogen<br />
<a href="https://tpo.pe/pathogen.vim">https://tpo.pe/pathogen.vim</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://vimawesome.com/">http://vimawesome.com/</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://www.vim.org/scripts/script_search_results.php?order_by=rating">http://www.vim.org/scripts/script_search_results.php?order_by=rating</a>
</li>

<li>Vi Improved<br />
<a href="https://wiki.python.org/moin/Vim">https://wiki.python.org/moin/Vim</a>
</li>

<li>Building Vim<br />
<a href="http://vim.wikia.com/wiki/Building_Vim">http://vim.wikia.com/wiki/Building_Vim</a>
</li>

<li>Vim plugins for developers<br />
<a href="http://www.linuxtoday.com/upload/vim-plugins-for-developers-140619094010.html">http://www.linuxtoday.com/upload/vim-plugins-for-developers-140619094010.html</a>
</li>

<li>Writing Vim Plugins<br />
<a href="http://stevelosh.com/blog/2011/09/writing-vim-plugins/">http://stevelosh.com/blog/2011/09/writing-vim-plugins/</a>
</li>

<li>how to understand this vim script?<br />
<a href="http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script">http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script</a>
</li>

<li>Novinky ve VIM 7: Skriptovací­ jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>DirDiff.vim : A plugin to diff and merge two directories recursively.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=102">http://www.vim.org/scripts/script.php?script_id=102</a>
</li>

<li>vim-dirdiff na GitHubu<br />
<a href="https://github.com/will133/vim-dirdiff">https://github.com/will133/vim-dirdiff</a>
</li>

<li>fakeclip : pseudo clipboard register for non-GUI version of Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2098">http://www.vim.org/scripts/script.php?script_id=2098</a>
</li>

<li>vim-fakeclip na GitHubu<br />
<a href="https://github.com/kana/vim-fakeclip">https://github.com/kana/vim-fakeclip</a>
</li>

<li>vim-fakeclip: Dokumentace<br />
<a href="http://kana.github.io/config/vim/fakeclip.html">http://kana.github.io/config/vim/fakeclip.html</a>
</li>

<li>Vim Multiple Cursors na GitHubu<br />
<a href="https://github.com/terryma/vim-multiple-cursors">https://github.com/terryma/vim-multiple-cursors</a>
</li>

<li>SLIME (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/SLIME">http://en.wikipedia.org/wiki/SLIME</a>
</li>

<li>vim-slime na GitHubu<br />
<a href="https://github.com/jpalardy/vim-slime">https://github.com/jpalardy/vim-slime</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>The History of Vim<br />
<a href="https://jovicailic.org/2014/06/the-history-of-vim/">https://jovicailic.org/2014/06/the-history-of-vim/</a>
</li>

<li>Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>Vim 8.1 is available!<br />
<a href="https://www.vim.org/vim-8.1-released.php">https://www.vim.org/vim-8.1-released.php</a>
</li>
<li>Vim 8.0 is released<br />
<a href="https://laravel-news.com/2016/09/vim-8-0-is-released/">https://laravel-news.com/2016/09/vim-8-0-is-released/</a>
</li>

<li>Vim: So long Pathogen, hello native package loading<br />
<a href="https://shapeshed.com/vim-packages/">https://shapeshed.com/vim-packages/</a>
</li>

<li>Asynchronous grep plugin for Vim<br />
<a href="https://github.com/ramele/agrep">https://github.com/ramele/agrep</a>
</li>

<li>Run Async Shell Commands in Vim 8.0 / NeoVim and Output to Quickfix Window<br />
<a href="https://github.com/skywind3000/asyncrun.vim">https://github.com/skywind3000/asyncrun.vim</a>
</li>

<li>:smile command was not backported! #5116<br />
<a href="https://github.com/neovim/neovim/issues/5116">https://github.com/neovim/neovim/issues/5116</a>
</li>

<li>Run :make and :grep in background jobs (experimental)<br />
<a href="https://github.com/edkolev/vim-amake">https://github.com/edkolev/vim-amake</a>
</li>

<li>Favorite vim plugins<br />
<a href="http://sherifsoliman.com/2016/05/30/favorite-vim-plugins/">http://sherifsoliman.com/2016/05/30/favorite-vim-plugins/</a>
</li>

<li>Makejob<br />
<a href="http://www.vim.org/scripts/script.php?script_id=5479">http://www.vim.org/scripts/script.php?script_id=5479</a>
</li>

<li>Vim sedm - první část<br />
<a href="http://www.root.cz/clanky/vim-sedm-prvni-cast/">http://www.root.cz/clanky/vim-sedm-prvni-cast/</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>History of the Text Editor<br />
<a href="http://vanstee.me/history-of-the-text-editor.html">http://vanstee.me/history-of-the-text-editor.html</a>
</li>

<li>Interview with Bill Joy<br />
<a href="http://web.cecs.pdx.edu/~kirkenda/joy84.html">http://web.cecs.pdx.edu/~kirkenda/joy84.html</a>
</li>

<li>vi Editor Commands<br />
<a href="http://www.cs.rit.edu/~cslab/vi.html#A1.4">http://www.cs.rit.edu/~cslab/vi.html#A1.4</a>
</li>

<li>vi Manual<br />
<a href="http://www.cs.fsu.edu/general/vimanual.html">http://www.cs.fsu.edu/general/vimanual.html</a>
</li>

<li>Mastering the Vi Editor<br />
<a href="http://www.susnet.uk/mastering-the-vi-editor">http://www.susnet.uk/mastering-the-vi-editor</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

