<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Vim ve funkci textového editoru pro tvůrčí psaní</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Vim ve funkci textového editoru pro tvůrčí psaní</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>S textovým editorem Vim jsme se již na stránkách Rootu mnohokrát setkali. Zabývali jsme se většinou tím, jak lze Vim použít pro vývoj popř. jako užitečnou pomůcku pro administraci systému. Ovšem Vim lze, a to navíc relativně jednoduše, upravit do podoby editoru pro tvůrčí psaní (distraction free).</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Vim ve funkci textového editoru pro tvůrčí psaní</a></p>
<p><a href="#k02">2. Co se skrývá pod termínem distraction-free editor</a></p>
<p><a href="#k03">3. Znovuobjevení kola?</a></p>
<p><a href="#k04">4. Textový editor Vim ve funkci distraction-free editoru</a></p>
<p><a href="#k05">5. Nastavení velikosti plochy pro zobrazení textu</a></p>
<p><a href="#k06">6. Vycentrování plochy pro zobrazení textu</a></p>
<p><a href="#k07">7. Skrytí okrajů pomocných oken</a></p>
<p><a href="#k08">8. Nastavení týkající se stavového řádku popř.&nbsp;ovládacích elementů GUI</a></p>
<p><a href="#k09">*** 9. Změna rozestupu mezi textovými řádky</a></p>
<p><a href="#k10">*** 10. Volba vhodného formátu pro tvorbu</a></p>
<p><a href="#k11">*** 11. Parametry editace</a></p>
<p><a href="#k12">*** 12. Režim &bdquo;Easy&ldquo;</a></p>
<p><a href="#k13">*** 13. Nastavení tvaru a barvy textového kurzoru</a></p>
<p><a href="#k14">*** 14. Jednoduchý modul pro zapnutí a opětovné vypnutí distraction-free režimu</a></p>
<p><a href="#k15">*** 15. Další pluginy pro Vim s&nbsp;podobnou funkcí</a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Vim ve funkci textového editoru pro tvůrčí psaní</h2>

<p>Jak jsem se již zmínil v&nbsp;perexu dnešního článku, čtenáři se mohli
s&nbsp;textovým editorem <a href="https://www.root.cz/n/vim/">Vim</a> na
stránkách Rootu setkat již nesčetněkrát. Většinou jsme se však zabývali těmi
vlastnostmi Vimu, které jsou užitečné pro vývojáře popř.&nbsp;pro
administrátory, tj.&nbsp;tím, jak lze Vim používat pro úpravu silně
strukturovaných dokumentů (zdrojových kódů, konfiguračních souborů, dokumentů
vytvořených ve značkovacích jazycích aj.). Příkladem takového přístupu může být
například seriál <a
href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">Textový editor
Vim jako IDE</a>. O Vimu se sice běžně mluví jako o <i>programátorském textovém
editoru</i>, ovšem ve skutečnosti jsou jeho praktické možnosti mnohem větší. O
tom se přesvědčíme dnes, protože si ukážeme, jakým způsobem lze Vim
nakonfigurovat takovým způsobem, aby byl použitelný jako takzvaný <i>editor pro
tvůrčí psaní</i>, což je velmi volný (ale příhodný) překlad termínu
<i>distraction-free editor</i>. Ukazuje se tak, jak jsou možnosti Vimu,
resp.&nbsp;přesněji řečeno možnosti jeho konfigurace, široké.</p>

<a href="http://www.root.cz/obrazek/202053/"><img src="https://i.iinfo.cz/images/173/vim3-3-prev.png" class="image-202053" alt="" width="370" height="243"></a>
<p><i>Obrázek 1: Příklad pluginu pro Vim, který z&nbsp;tohoto editoru vytvoří
užitečný diář.</i></p>

<p><div class="rs-tip-major">Poznámka: nastavení editoru, a Vim skript, který
si dnes vysvětlíme, je odvozen ze skriptu, který naleznete v&nbsp;článku <a
href="https://zserge.com/posts/vim-distraction-free/">Distraction free writing
in Vim</a>. Ovšem podobné koncepty byly (nezávisle na sobě) vyvinuty i dalšími
vývojáři.</div></p>

<a href="https://www.root.cz/obrazek/340484/"><img src="https://i.iinfo.cz/images/80/vim-orgmode-22-prev.png" class="image-340484" alt="" width="370" height="243"></a>
<p><i>Obrázek 2: Modul určený pro organizaci poznámek; lze zkombinovat
s&nbsp;výše zmíněným modulem pro diář.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Co se skrývá pod termínem distraction-free editor</h2>

<p>Co se ale vlastně skrývá pod termínem <i>editor pro tvůrčí psaní</i>
popř.&nbsp;pod jeho anglickým ekvivalentem? Termín <i>distraction-free (text)
editor</i> je poměrně vágní (autoři různého SW si ho vykládají taktéž různě),
ovšem většinou se jím označuje takový textový editor popř.&nbsp;textový
procesor, který zobrazuje své rozhraní na ploše celé obrazovky [<a
href="https://en.wikipedia.org/wiki/Full-screen_writing_program">1</a>] a
neobsahuje mnoho ovládacích prvků. V&nbsp;limitní podobě nejsou zobrazeny
prakticky žádné ovládací prvky &ndash; pouze vlastní editovaný text a kurzor
ukazující pozici, kde dochází k&nbsp;editaci. Existují ovšem i editory, které
jdou ještě dále, protože emulují mechanický nebo elektromechanický psací stroj:
text se pouze přidává na konec editovaného souboru a většinou nejsou
podporovány žádné další operace (dokonce ani pohyb v&nbsp;textu), maximálně
funkce BackSpace. To je ovšem &ndash; alespoň podle mého skromného názoru
&ndash; jen pozérství, které zcela zbytečně ignoruje vývoj posledních 45 let
v&nbsp;IT, tj.&nbsp;masivní prosazení počítačů s&nbsp;plně interaktivním
rozhraním, které umožňuje rychle opravit různé chyby a nedodělky. Proto budeme
v&nbsp;tomto článku za plnohodnotný a prakticky použitelný editor pro tvůrčí
psaní (<i>distraction-free</i>) považovat aplikaci se zhruba následujícími
vlastnostmi:</p>

<ul>

<li>Umožňuje běh (zobrazení) na celé ploše obrazovky, ať již se jedná o program
s&nbsp;grafickým uživatelským rozhraním či o editor běžící v&nbsp;terminálu (či
přímo na textové konzoli).</li>

<li>Umožňuje vypnout většinu ovládacích prvků, ideálně až do stavu, kdy je
vidět pouze editovaný text a textový kurzor.</li>

<li>Podporuje všechny základní editační operace, vyhledávání v&nbsp;textu
apod.</li>

<li>Ideálně by měl podporovat slovník a kontrolu pravopisu.</li>

<li>Taktéž by bylo dobré, aby bylo podporováno zvýrazňování syntaxe u často
používaných formátů dokumentů (AsciiDoc, MarkDown, reStructuredText, ...).</li>

<li>Měl by podporovat Unicode (což je dnes již většinou samozřejmost)</li>

<li>Někteří autoři vyžadují i funkci pro počítání slov, protože u některých
typů dokumentů je nutné se vejít do zadaného rozsahu (mnohdy je to ovšem
kontraproduktivní).</li>

<li>Osobně oceňuji i možnost konfigurace tvaru, barvy a popř.(ne)blikání
kurzoru.</li>

</ul>

*** image ***
<p><i>Obrázek 3: Typickým zástupcem editorů pro tvůrčí psaní je PyRoom. Černý
okraj je součástí designu editoru, protože jeho plocha musí zabrat celou
obrazovku a širokoúhlé obrazovky nejsou příliš vhodným médiem pro tvorbu textů
(pokud se ovšem neotočí o 90&deg;).</i></p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;některých případech je
zvýrazňování syntaxe nahrazeno přímým zobrazením dokumentu (typicky MarkDown)
v&nbsp;podobě, kterou známe z&nbsp;textových procesorů, ovšem při psaní je
lepší se soustředit na vlastní text a nikoli na způsob je pozdějšího zobrazení
(viz například mnoho užitečných rad od Stephena Kinga).</div></p>

*** image ***
<p><i>Obrázek 4: GhostWriter je dalším známým editorem pro tvůrčí psaní. Dokáže
přímo pracovat s&nbsp;MarkDownem a má jen minimum viditelných ovládacích
prvků.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Znovuobjevení kola?</h2>

<p>Popularita textových editorů určených pro tvůrčí psaní je do určité míry
reakcí na stále se zvyšující komplikovanost uživatelských rozhraní, různých
oznamovačů nových zpráv, připravených update atd. &ndash; počítač
(resp.&nbsp;jeho rozhraní viditelné uživateli) se tak ze sluhy, který pouze
tiše očekával příkazy od uživatele změnil v&nbsp;zařízení, které si (mnohdy
neustále) vyžaduje pozornost a tím pádem ji odvádí od reálné práce. Ve
skutečnosti ale nejsou distraction-free editory v&nbsp;žádném případě něčím
nově objeveným, protože mnoho textových editorů pocházejících z&nbsp;éry
osmibitových domácích mikropočítačů popř.&nbsp;osobních mikropočítačů používalo
&ndash; prakticky to byla nutnost vynucená technickými omezeními &ndash; taktéž
minimalisticky pojaté uživatelské rozhraní (a samotné desktopové rozhraní,
pokud vůbec existovalo, bylo taky relativně minimalistické a především
pasivní). Mnoho tehdejších editorů bylo vybaveno buď pouze stavovým řádkem
popř.&nbsp;kombinací stavového řádku a řádku s&nbsp;menu. A u některých editorů
bylo možné oba zmíněné ovládací prvky vypnout a mít tak k&nbsp;dispozici celou
plochu obrazovky pouze pro přípravu textu.</p>

<p><div class="rs-tip-major">Poznámka: ovšem ve skutečnosti samotné rozhraní
editoru pouze podtrhovalo tehdejší stav techniky, kdy počítač umožňoval
spuštění jediné aplikace &ndash; což je vlastně pravý význam termínu
<i>distraction-free</i>. Ostatně toto je jeden z&nbsp;důvodů, proč G.R.R.Martin
používá pro psaní starý dobrý <i>WordStar</i> pro DOS (na počítači
s&nbsp;čistým DOSem).</div></p>

<p>Některé z&nbsp;původních minimalisticky pojatých textových editorů jsme si
již popsali v&nbsp;předchozích článcích o historii vývoje výpočetní techniky a
<a
href="https://www.root.cz/serialy/historie-vyvoje-grafickeho-uzivatelskeho-rozhrani/">grafického
uživatelského rozhraní</a>, takže si zde jen ukažme několik screenshotů pro
připomenutí:</p>

*** image ***
<p><i>Obrázek 5: Relativně jednoduchý textový editor (a současně i textový
procesor) SpeedScript ve variantě určené pro osmibitové domácí mikropočítače
Atari. Tento editor nabízel základní formátovací funkce, vyhledávání,
nahrazování atd. Namísto menu byl ovládán klávesovými zkratkami, které
mj.&nbsp;ovlivňovaly i obsah stavového řádku zobrazeného v&nbsp;horní části
obrazovky. Tento textový editor byl různými programátory upravován, takže
existují minimálně dvě počeštěné verze (Čapek, Čížek) a jedna slovenská verze
(Štúr) &ndash; viz též příslušné odkazy na konci článku.</i></p>

*** image ***
<p><i>Obrázek 6: SpeedScript byl portován i na počítače kompatibilní s&nbsp;IBM
PC a operačním systémem DOS. Zde bylo možné využít zobrazení osmdesáti znaků na
textovém řádku, což byl oproti původním osmibitovým variantám velký pokrok
vzhledem k&nbsp;tomu, že se při tisku používalo cca 60 znaků na řádek.</i></p>

*** image ***
<p><i>Obrázek 7: TypeWriter je textový editor/procesor určený pro domácí
osmibitové mikropočítače ZX Spectrum.</i></p>

*** image ***
<p><i>Obrázek 8: Textový editor známý pod jménem <strong>e.com</strong> byl
vlastně prakticky ideálním minimalistickým editorem pro tvůrčí psaní. Dokázal
nastavovat oba okraje textu, provádět základní editační příkazy, vyhledávání,
spouštění maker atd. To vše zabaleno v&nbsp;jediném spustitelném souboru o
velikost nepřesahující pět kilobajtů.</i></p>

*** image ***
<p><i>Obrázek 9: Editor Joe (zde ve variantě přeložené pro Linux) v&nbsp;režimu
emulace textového procesoru WordStar. Horní nápovědu i prakticky všechny další
ovládací a informační prvky je možné vypnout a soustředit se pouze na
psaní.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Textový editor Vim ve funkci distraction-free editoru</h2>

<p><i>&bdquo;vi is small, fast, and easy to use. Emacs is huge, slow and easy
to use :)&ldquo;</i></p>

<p>Existuje sice relativně velké množství textových editorů určených přímo pro
tvůrčí psaní (viz například <a
href="https://www.root.cz/clanky/textove-editory-pro-tvurci-psani/">tento
článek</a>), ovšem ne vždy je nutné přecházet ke specializované aplikaci, u níž
prakticky vždy hrozí nebezpečí, že nebude obsahovat některou důležitou
vlastnost (a to se někdy týká i takových základních věcí, jako je kontrola
pravopisu). Namísto toho může být výhodnější použít plnohodnotný a časem
prověřený textový editor, který se náležitým způsobem upraví do podoby, jejíž
vzhled i chování bude plně odpovídat požadavkům uživatele. Podívejme se
například na plugin (přídavný modul) nazvaný <strong>Goyo</strong>, který
textový editor Vim (ideálně GVim, u nějž lze provádět mnohé další nastavení
vizuálního vzhledu) přepíná do režimu, který je již ve většině ohledů klasickým
distraction-free editorem, ovšem stále se zachováním všech původních vlastností
Vimu (a ty jsou skutečně nepřeberné):</p>

*** image ***
<p><i>Obrázek 10: Plugin <strong>Goyo</strong> je propracovaným přídavným
modulem pro Vim, který tento editor přepíná do režimu distraction-free.</i></p>

<p>Ovšem cesta od klasického Vimu či GVimu k&nbsp;editoru nastaveném takovým
způsobem, aby umožňoval tvůrčí psaní, vyžaduje několik kroků, protože původní
GUI GVimu nejenže obsahuje mnoho (mnohdy zbytečných) ovládacích prvků, ale
navíc není způsob zobrazení textů zcela ideální:</p>

*** image ***
<p><i>Obrázek 11: Gvim (Vim s&nbsp;grafickým uživatelským rozhraním) ve
výchozím nastavení se příliš nepodobá editoru pro tvůrčí psaní.</i></p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;dnešním článku se sice věnujeme
Vimu, ale podobné úpravy lze provést i v&nbsp;Emacsu. Viz například pěkný
článek na toto téma: <a href="https://bzg.fr/en/emacs-strip-tease.html/">Emacs,
naked</a>.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Nastavení velikosti plochy pro zobrazení textu</h2>

<p>Nejprve se budeme snažit o změnu velikosti plochy pro zobrazení textu.
K&nbsp;tomu (alespoň teoreticky) slouží volby <strong>columns</strong> a
<strong>lines</strong>, takže se můžeme pokusit je změnit, například na 65
znaků na řádku a 48 textových řádků:</p>

<pre>
set columns=65
set lines=48
</pre>

<p>Ve skutečnosti nám ovšem tyto volby samy o sobě příliš nepomůžou, protože
pouze zmenší okno editoru a při jeho maximalizaci (resp.&nbsp;po přepnutí do
režimu full screen) se vše vrátí zpět:</p>

*** image ***
<p><i>Obrázek 12: Změna počtu řádků a počtu sloupců.</i></p>

<p>Musíme tedy použít odlišný přístup, jenž bude popsán v&nbsp;navazující
kapitole.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Vycentrování plochy pro zobrazení textu</h2>

<p>Alternativní řešení je mnohem lepší a spočívá ve vytvoření několika oken
(<i>window</i>) v&nbsp;rámci plochy alokované pro celý editor. Tato okna
nebudou použita pro zobrazení reálného obsahu, ale pouze jako výplň plochy
nalevo, napravo, nahoře a dole pod aktivním oknem. Ke specifikaci okrajů lze
použít globálních proměnných zapsaných do nějakého Vim skriptu. Tyto proměnné
udávají potřebnou velikost pracovní plochy &ndash; prostředního okna:</p>

<pre>
let g:dfm_width = 80 "absolute width or percentage, like 0.7
let g:dfm_height = 0.8
</pre>

<p>Pro vytvoření dalších pomocných oken poslouží tato část skriptu, která volá
příkazy <strong>split</strong> a <strong>vsplit</strong> pro postupné rozdělení
plochy na podokna:</p>

<pre>
let l:w = g:dfm_width &gt; 1 ? g:dfm_width : (winwidth('%') * g:dfm_width)
&nbsp;
let l:margins = {
      \ "l": ("silent leftabove " . float2nr((winwidth('%') - l:w) / 2 - 1) . " vsplit new"),
      \ "h": ("silent rightbelow " . float2nr((winwidth('%') - l:w) / 2 - 1) . " vsplit new"),
      \ "j": ("silent leftabove " . float2nr(winheight('%') * (1 - g:dfm_height) / 2 - 1) . " split new"),
      \ "k": ("silent rightbelow " . float2nr(winheight('%') * (1 - g:dfm_height) / 2 - 1) . " split new"),
      \ }
&nbsp;
  for key in keys(l:margins)
    execute l:margins[key] . " | wincmd " . key
  endfor
</pre>

*** image ***
<p><i>Obrázek 13: Rozdělení plochy editoru na jednotlivá podokna.</i></p>

<p><div class="rs-tip-major">Poznámka: více informací získáte
příkazy:</div></p>

<pre>
:help window
:help split
:help vsplit
:help wincmd
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Skrytí okrajů pomocných oken</h2>

<p>Pomocná okna a především okraje mezi okny by neměly být viditelné. Toho není
ve Vimu problém dosáhnout, protože prakticky každý prvek jeho rozhraní má
modifikovatelnou barvu popředí, barvu pozadí a styl textu (výjimkou je kurzor
v&nbsp;textové konzoli). V&nbsp;našem konkrétním případě nastavíme vhodnou
barvu zobrazení u prvků nazvaných <strong>NonText</strong>,
<strong>VertSplit</strong>, <strong>StatusLine</strong> a
<strong>StatusLineNC</strong>, například následovně:</p>

<pre>
for key in ['NonText', 'VertSplit', 'StatusLine', 'StatusLineNC']
    execute 'hi ' . key . '  ctermbg=NONE guibg=NONE guifg=bg cterm=NONE term=NONE'
endfor
</pre>

*** image ***
<p><i>Obrázek 14: Skrytí okrajů oken a dalších prvků, které nejsou nutně
zapotřebí.</i></p>

<p><div class="rs-tip-major">Poznámka: více informací o použitých příkazech
opět naleznete v&nbsp;nápovědě samotného Vimu:</div></p>

<pre>
:help highlight
:help term
:help cterm
:help ctermfg
:help ctermbg
:help guifg
:help guibg
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Nastavení týkající se stavového řádku popř.&nbsp;ovládacích elementů GUI</h2>

<p>Dále je vhodné skrýt veškeré prvky GUI, což je velmi snadné:</p>

<pre>
set guioptions=
</pre>

<p>V&nbsp;MacOS existuje volba <strong>fullscreen</strong>, kterou lze zapnout
pro přepnutí do režimu plné obrazovky:</p>

<pre>
set fullscreen
</pre>

<p><div class="rs-tip-major">Poznámka: tuto volbu jsem nezkoušel (nemám kde),
ovšem měla by vést ke stejnému výsledku, jako stisk <strong>Alt+F11</strong> ve
správci oken v&nbsp;Linuxu.</div></p>

<p>Většinou budeme chtít vypnout i pravítko, a to příkazem:</p>

<pre>
set noruler
</pre>

<p>Popř.&nbsp;lze pravítko nechat zobrazeno, ale změnit jeho formát
(tj.&nbsp;jaké informace mají být zobrazeny). Formát pravítka se nastavuje
pomocí konfiguračního řetězce přiřazeného do konfiguračního parametru
<strong>rulerformat</strong>, zatímco u stavového řádku se jedná o konfigurační
parametr <strong>statusline</strong>. Způsob zobrazení stavového řádku pro
poslední (nejspodnější) okno se řídí pomocí volby <strong>laststatus</strong>.
Vypnutí stavového řádku zajistí volba:</p>

<pre>
set laststatus=0
</pre>

<img src="https://i.iinfo.cz/images/189/vim1301.png" alt="ruler" height="420" width="636">
<p><i>Obrázek 15: Nastavení pravítka.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Změna rozestupu mezi textovými řádky</h2>

<p></p>

<pre>
set linespace=3
</pre>

*** image ***
<p><i>Obrázek 16: </i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Volba vhodného formátu pro tvorbu</h2>

<p><a href="https://www.root.cz/clanky/rozsahly-svet-znackovacich-jazyku/">Rozsáhlý svět značkovacích jazyků </a></p>

<p><i>AsciiDoc</i>, jehož první verze vznikla v&nbsp;roce 2002 a jehož autorem je Stuart Rackham. Jedná se o značkovací jazyk, který se podobně jako ostatní postmoderní značkovací jazyky snaží o to, aby byl na prvním místě samotný dokument (text) a případné značky se přidávaly pouze tam, kde je to nutné. Navíc by měl být dokument vytvořený v&nbsp;AsciiDocu čitelný i bez použití konvertorů (asciidoc, a2×, Asciidoctor). AsciiDoc je dnes podporovaný v&nbsp;mnoha textových editorech, které mnohdy nabízí i režim náhledu na editovaný dokument, viz například textový editor Atom. Jeho předností je například podpora pro specifikaci tabulek.</p>

<p><div class="rs-tip-major">Poznámka: </div></p>

<p>V&nbsp;roce 2002, tedy ve stejném roce, kdy vznikl AsciiDoc, byl navržen i další podobný značkovací jazyk nazvaný <i>reST</i> neboli <i>reStructuredText</i>, jehož autorem je David Goodger. Jedná se o jazyk částečně postavený na značkovacím jazyku <i>StructuredText</i> používaném v Zope, který ovšem měl několik nepříjemných vlastností, které byly v reST vyřešeny. Dnes se tento značkovací jazyk používá velmi masivně, a to ve světě Pythonu (například pro dokumentaci vlastního jazyka a jeho knihoven), protože ho od roku 2008 podporuje nástroj Sphinx. Důležitou službou je Read the Docs umožňující publikování dokumentace vytvořené právě v reST popř. v Markdownu. Může se jednat jak o několik odstavců, tak i o rozsáhlé knihy.</p>

<p>Dva roky po uvedení AsciiDocu a ReStructuredTextu vznikl formát Markdown, který pravděpodobně není nutné čtenářům tohoto serveru dlouze představovat, protože soubory Markdown jsou masivně používány, zejména pro zápis kratší dokumentace, v níž se ještě neprojeví některé nepodporované vlastnosti. Původními autory Markdownu jsou John Gruber a Aaron Swartz. Původně se jednalo o velmi jednoduchý značkovací jazyk umožňující specifikaci nadpisů, seznamů s odrážkami, číslovaných seznamů, odkazů a obrázků, později ovšem došlo k několika rozšířením Markdownu o další vlastnosti, například o zaškrtávací boxy (což je pro beletrii a podobné texty zbytečné).</p>


<p><a name="k11"></a></p>
<h2 id="k11">11. Parametry editace</h2>

<p></p>

<pre>
set wrap
set linebreak
</pre>

<p></p>

<pre>
map j gj
map k gk
</pre>

<p></p>

<pre>
inoremap &lt;F1&gt;       &lt;C-O&gt;:help
inoremap &lt;F2&gt;       &lt;C-O&gt;:w&lt;CR&gt;
inoremap &lt;F3&gt;       &lt;ESC&gt;:Explore&lt;CR&gt;
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Režim &bdquo;Easy&ldquo;</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Nastavení tvaru a barvy textového kurzoru</h2>

<p>Další užitečnou vlastností Vimu je jeho schopnost měnit konfiguraci tvaru, barvy i chování textového kurzoru v&nbsp;případě, že je editor Vim spuštěný s&nbsp;podporou grafického uživatelského rozhraní, tj.&nbsp;tehdy, když je použita volba <strong>vim -g</strong>, popř.&nbsp;je použit příkaz <strong>gvim</strong>. Na tomto místě je vhodné zdůraznit, že dále uvedené příkazy nebudou plně funkční v&nbsp;případě, že je textový editor Vim spuštěn v&nbsp;emulátoru terminálu, či dokonce na fyzickém terminálu (v&nbsp;Linuxu je z&nbsp;X Window Systemu přístupný například přes klávesovou kombinaci <strong>Ctrl+Alt+F1</strong>), protože způsob zobrazení kurzoru je v&nbsp;takových případech závislý buď na nastavení emulátoru terminálu nebo na konfiguraci hardware terminálu fyzického (jednou z&nbsp;výjimek je DOS a konzole ve Windows, kde lze částečně určit tvar kurzoru). Všechny vlastnosti textového kurzoru (při spuštění v GUI) jsou určeny konfiguračním parametrem <strong>guicursor</strong> a taktéž příkazem <strong>highlight</strong>, kterým se nastavují barvy kurzoru v&nbsp;jednotlivých režimech.</p>




<p><a name="k14"></a></p>
<h2 id="k14">14. Jednoduchý modul pro zapnutí a opětovné vypnutí distraction-free režimu</h2>

<p></p>

<p><div class="rs-tip-major">Poznámka: úplný skript naleznete v&nbsp;článku <a href="https://zserge.com/posts/vim-distraction-free/">Distraction free writing in Vim</a>.</div></p>

<pre>
let g:dfm_width = 80 "absolute width or percentage, like 0.7
let g:dfm_height = 0.8
&nbsp;
let s:dfm_enabled = 0
&nbsp;
function! ToggleDistractionFreeMode()
  let l:w = g:dfm_width &gt; 1 ? g:dfm_width : (winwidth('%') * g:dfm_width)
  let l:margins = {
        \ "l": ("silent leftabove " . float2nr((winwidth('%') - l:w) / 2 - 1) . " vsplit new"),
        \ "h": ("silent rightbelow " . float2nr((winwidth('%') - l:w) / 2 - 1) . " vsplit new"),
        \ "j": ("silent leftabove " . float2nr(winheight('%') * (1 - g:dfm_height) / 2 - 1) . " split new"),
        \ "k": ("silent rightbelow " . float2nr(winheight('%') * (1 - g:dfm_height) / 2 - 1) . " split new"),
        \ }
  if (s:dfm_enabled == 0)
    let s:dfm_enabled = 1
    for key in keys(l:margins)
      execute l:margins[key] . " | wincmd " . key
    endfor
    for key in ['NonText', 'VertSplit', 'StatusLine', 'StatusLineNC']
      execute 'hi ' . key . '  ctermbg=NONE guibg=NONE guifg=bg cterm=NONE term=NONE'
    endfor
    set wrap | set linebreak
    set statusline=foo
    map j gj
    map k gk
  else
    let s:dfm_enabled = 0
    for key in keys(l:margins)
      execute "wincmd " . key . " | close "
    endfor
    set nowrap | set nolinebreak
    unmap j
    unmap k
  endif
endfunction
&nbsp;
nmap &lt;silent&gt; &lt;Leader&gt;z :call ToggleDistractionFreeMode()&lt;CR&gt;
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Další pluginy pro Vim s&nbsp;podobnou funkcí</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Goyo</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. LiteDFM</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Textové editory pro tvůrčí psaní<br />
<a href="https://www.root.cz/clanky/textove-editory-pro-tvurci-psani/">https://www.root.cz/clanky/textove-editory-pro-tvurci-psani/</a>
</li>

<li>Seriál Textový editor Vim jako IDE<br />
<a href="https://www.root.cz/serialy/textovy-editor-vim-jako-ide/">https://www.root.cz/serialy/textovy-editor-vim-jako-ide/</a>
</li>

<li>Články s&nbsp;nálepkou &bdquo;Vim&ldquo; na Rootu<br />
<a href="https://www.root.cz/n/vim/">https://www.root.cz/n/vim/</a>
</li>

<li>goyo.vim<br />
<a href="https://github.com/junegunn/goyo.vim">https://github.com/junegunn/goyo.vim</a>
</li>

<li>LiteDFM<br />
<a href="https://github.com/bilalq/lite-dfm">https://github.com/bilalq/lite-dfm</a>
</li>

<li>distraction-free-writing-vim<br />
<a href="https://github.com/laktek/distraction-free-writing-vim">https://github.com/laktek/distraction-free-writing-vim</a>
</li>

<li>Distraction Free Writing with Vim<br />
<a href="http://www.laktek.com/2012/09/05/distraction-free-writing-with-vim/">http://www.laktek.com/2012/09/05/distraction-free-writing-with-vim/</a>
</li>

<li>Distraction Free Vim<br />
<a href="http://thedarnedestthing.com/distraction%20free%20vim">http://thedarnedestthing.com/distraction%20free%20vim</a>
</li>
    
<li>Vim - The Distraction Free Editor<br />
<a href="https://matthewsetter.com/vim-the-distraction-free-editor/">https://matthewsetter.com/vim-the-distraction-free-editor/</a>
</li>

<li>Distraction free writing in Vim<br />
<a href="https://zserge.com/posts/vim-distraction-free/">https://zserge.com/posts/vim-distraction-free/</a>
</li>

<li>Distraction-free writing with vim<br />
<a href="https://www.hamvocke.com/blog/distraction-free-writing/">https://www.hamvocke.com/blog/distraction-free-writing/</a>
</li>

<li>tablign na PyPi<br />
<a href="https://pypi.org/project/tablign/">https://pypi.org/project/tablign/</a>
</li>

<li>tablign na GitHubu<br />
<a href="https://github.com/nschloe/tablign">https://github.com/nschloe/tablign</a>
</li>

<li>Tables in vim (reddit)<br />
<a href="https://www.reddit.com/r/vim/comments/8lyigo/tables_in_vim/">https://www.reddit.com/r/vim/comments/8lyigo/tables_in_vim/</a>
</li>

<li>vim-table-mode (repositář na GitHubu)<br />
<a href="https://github.com/dhruvasagar/vim-table-mode">https://github.com/dhruvasagar/vim-table-mode</a>
</li>

<li>table-mode na Vim.org (starší verze!)<br />
<a href="https://www.vim.org/scripts/script.php?script_id=4501">https://www.vim.org/scripts/script.php?script_id=4501</a>
</li>

<li>Smarter Table Editing<br />
<a href="https://vim.fandom.com/wiki/Smarter_Table_Editing">https://vim.fandom.com/wiki/Smarter_Table_Editing</a>
</li>

<li>Smarter Table Editing II<br />
<a href="https://vim.fandom.com/wiki/Smarter_Table_Editing_II">https://vim.fandom.com/wiki/Smarter_Table_Editing_II</a>
</li>

<li>Články o Vimu na Root.cz:<br />
<a href="http://www.root.cz/n/vim/clanky/">http://www.root.cz/n/vim/clanky/</a>
</li>

<li>Replace and Virtual Replace Modes<br />
<a href="https://medium.com/vim-drops/replace-and-virtual-replace-modes-3e841b9161ca">https://medium.com/vim-drops/replace-and-virtual-replace-modes-3e841b9161ca</a>
</li>

<li>How can I easily create and maintain tables?<br />
<a href="https://vi.stackexchange.com/questions/363/how-can-i-easily-create-and-maintain-tables">https://vi.stackexchange.com/questions/363/how-can-i-easily-create-and-maintain-tables</a>
</li>

<li>Vim &ndash; the editor<br />
<a href="http://www.vim.org/">http://www.vim.org/</a>
</li>

<li>Vim as a Python IDE, or Python IDE as Vim<br />
<a href="http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/">http://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/</a>
</li>

<li>Popis skriptu Vim Pathogen<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2332">http://www.vim.org/scripts/script.php?script_id=2332</a>
</li>

<li>Poslední­verze skriptu Vim Pathogen<br />
<a href="https://tpo.pe/pathogen.vim">https://tpo.pe/pathogen.vim</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://vimawesome.com/">http://vimawesome.com/</a>
</li>

<li>Nejlepší pluginy pro Vim<br />
<a href="http://www.vim.org/scripts/script_search_results.php?order_by=rating">http://www.vim.org/scripts/script_search_results.php?order_by=rating</a>
</li>

<li>Vi Improved<br />
<a href="https://wiki.python.org/moin/Vim">https://wiki.python.org/moin/Vim</a>
</li>

<li>Building Vim<br />
<a href="http://vim.wikia.com/wiki/Building_Vim">http://vim.wikia.com/wiki/Building_Vim</a>
</li>

<li>Vim plugins for developers<br />
<a href="http://www.linuxtoday.com/upload/vim-plugins-for-developers-140619094010.html">http://www.linuxtoday.com/upload/vim-plugins-for-developers-140619094010.html</a>
</li>

<li>Writing Vim Plugins<br />
<a href="http://stevelosh.com/blog/2011/09/writing-vim-plugins/">http://stevelosh.com/blog/2011/09/writing-vim-plugins/</a>
</li>

<li>how to understand this vim script?<br />
<a href="http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script">http://stackoverflow.com/questions/12625091/how-to-understand-this-vim-script</a>
</li>

<li>Novinky ve VIM 7: Skriptovací­ jazyk<br />
<a href="http://www.root.cz/vim-sedm-druha-cast/">http://www.root.cz/vim-sedm-druha-cast/</a>
</li>

<li>DirDiff.vim : A plugin to diff and merge two directories recursively.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=102">http://www.vim.org/scripts/script.php?script_id=102</a>
</li>

<li>vim-dirdiff na GitHubu<br />
<a href="https://github.com/will133/vim-dirdiff">https://github.com/will133/vim-dirdiff</a>
</li>

<li>fakeclip : pseudo clipboard register for non-GUI version of Vim<br />
<a href="http://www.vim.org/scripts/script.php?script_id=2098">http://www.vim.org/scripts/script.php?script_id=2098</a>
</li>

<li>vim-fakeclip na GitHubu<br />
<a href="https://github.com/kana/vim-fakeclip">https://github.com/kana/vim-fakeclip</a>
</li>

<li>vim-fakeclip: Dokumentace<br />
<a href="http://kana.github.io/config/vim/fakeclip.html">http://kana.github.io/config/vim/fakeclip.html</a>
</li>

<li>Vim Multiple Cursors na GitHubu<br />
<a href="https://github.com/terryma/vim-multiple-cursors">https://github.com/terryma/vim-multiple-cursors</a>
</li>

<li>SLIME (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/SLIME">http://en.wikipedia.org/wiki/SLIME</a>
</li>

<li>vim-slime na GitHubu<br />
<a href="https://github.com/jpalardy/vim-slime">https://github.com/jpalardy/vim-slime</a>
</li>

<li>The NERD tree: A tree explorer plugin for navigating the filesystem<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1658">http://www.vim.org/scripts/script.php?script_id=1658</a>
</li>

<li>JavaBrowser : Shows java file class, package in a tree as in IDEs. Java source browser.<br />
<a href="http://www.vim.org/scripts/script.php?script_id=588">http://www.vim.org/scripts/script.php?script_id=588</a>
</li>

<li>snippetsEmu : An attempt to emulate TextMate's snippet expansion<br />
<a href="http://www.vim.org/scripts/script.php?script_id=1318">http://www.vim.org/scripts/script.php?script_id=1318</a>
</li>

<li>c.vim : C/C++ IDE key mappings<br />
<a href="http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf">http://lug.fh-swf.de/vim/vim-c/c-hotkeys.pdf</a>
</li>

<li>Základní základy editoru Vim<br />
<a href="http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/">http://www.root.cz/clanky/zakladni-zaklady-editoru-vim/</a>
</li>

<li>Jak si přizpůsobit Vim<br />
<a href="http://www.root.cz/serialy/jak-si-prizpusobit-vim/">http://www.root.cz/serialy/jak-si-prizpusobit-vim/</a>
</li>

<li>Taglist (plugin)<br />
<a href="http://www.vim.org/scripts/script.php?script_id=273">http://www.vim.org/scripts/script.php?script_id=273</a>
</li>

<li>Tutorial: Make Vim as Your C/C++ IDE Using c.vim Plugin<br />
<a href="http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/">http://www.thegeekstuff.com/2009/01/tutorial-make-vim-as-your-cc-ide-using-cvim-plugin/</a>
</li>

<li>c.vim : C/C++ IDE<br />
<a href="http://vim.sourceforge.net/scripts/script.php?script_id=213">http://vim.sourceforge.net/scripts/script.php?script_id=213</a>
</li>

<li>The History of Vim<br />
<a href="https://jovicailic.org/2014/06/the-history-of-vim/">https://jovicailic.org/2014/06/the-history-of-vim/</a>
</li>

<li>Display date-and-time on status line<br />
<a href="http://vim.wikia.com/wiki/Display_date-and-time_on_status_line">http://vim.wikia.com/wiki/Display_date-and-time_on_status_line</a>
</li>

<li>Vim 8.1 is available!<br />
<a href="https://www.vim.org/vim-8.1-released.php">https://www.vim.org/vim-8.1-released.php</a>
</li>
<li>Vim 8.0 is released<br />
<a href="https://laravel-news.com/2016/09/vim-8-0-is-released/">https://laravel-news.com/2016/09/vim-8-0-is-released/</a>
</li>

<li>Vim: So long Pathogen, hello native package loading<br />
<a href="https://shapeshed.com/vim-packages/">https://shapeshed.com/vim-packages/</a>
</li>

<li>Asynchronous grep plugin for Vim<br />
<a href="https://github.com/ramele/agrep">https://github.com/ramele/agrep</a>
</li>

<li>Run Async Shell Commands in Vim 8.0 / NeoVim and Output to Quickfix Window<br />
<a href="https://github.com/skywind3000/asyncrun.vim">https://github.com/skywind3000/asyncrun.vim</a>
</li>

<li>:smile command was not backported! #5116<br />
<a href="https://github.com/neovim/neovim/issues/5116">https://github.com/neovim/neovim/issues/5116</a>
</li>

<li>Run :make and :grep in background jobs (experimental)<br />
<a href="https://github.com/edkolev/vim-amake">https://github.com/edkolev/vim-amake</a>
</li>

<li>Favorite vim plugins<br />
<a href="http://sherifsoliman.com/2016/05/30/favorite-vim-plugins/">http://sherifsoliman.com/2016/05/30/favorite-vim-plugins/</a>
</li>

<li>Makejob<br />
<a href="http://www.vim.org/scripts/script.php?script_id=5479">http://www.vim.org/scripts/script.php?script_id=5479</a>
</li>

<li>Vim sedm - první část<br />
<a href="http://www.root.cz/clanky/vim-sedm-prvni-cast/">http://www.root.cz/clanky/vim-sedm-prvni-cast/</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>History of the Text Editor<br />
<a href="http://vanstee.me/history-of-the-text-editor.html">http://vanstee.me/history-of-the-text-editor.html</a>
</li>

<li>Interview with Bill Joy<br />
<a href="http://web.cecs.pdx.edu/~kirkenda/joy84.html">http://web.cecs.pdx.edu/~kirkenda/joy84.html</a>
</li>

<li>vi Editor Commands<br />
<a href="http://www.cs.rit.edu/~cslab/vi.html#A1.4">http://www.cs.rit.edu/~cslab/vi.html#A1.4</a>
</li>

<li>vi Manual<br />
<a href="http://www.cs.fsu.edu/general/vimanual.html">http://www.cs.fsu.edu/general/vimanual.html</a>
</li>

<li>Mastering the Vi Editor<br />
<a href="http://www.susnet.uk/mastering-the-vi-editor">http://www.susnet.uk/mastering-the-vi-editor</a>
</li>

<li>PyRoom<br />
<a href="http://pyroom.org/">http://pyroom.org/</a>
</li>

<li>PyRoom<br />
<a href="https://en.wikipedia.org/wiki/PyRoom">https://en.wikipedia.org/wiki/PyRoom</a>
</li>

<li>CodeRoom<br />
<a href="https://code.google.com/archive/p/coderoom/">https://code.google.com/archive/p/coderoom/</a>
</li>

<li>Full-screen writing program<br />
<a href="https://en.wikipedia.org/wiki/Full-screen_writing_program">https://en.wikipedia.org/wiki/Full-screen_writing_program</a>
</li>

<li>Ghostwriter<br />
<a href="https://wereturtle.github.io/ghostwriter/">https://wereturtle.github.io/ghostwriter/</a>
</li>

<li>JOE - Joe's Own Editor<br />
<a href="https://joe-editor.sourceforge.io/4.6/man.html">https://joe-editor.sourceforge.io/4.6/man.html</a>
</li>

<li>Distraction Free Editing<br />
<a href="https://zim-wiki.org/manual/Plugins/Distraction_Free_Editing.html">https://zim-wiki.org/manual/Plugins/Distraction_Free_Editing.html</a>
</li>

<li>Rozsáhlý svět značkovacích jazyků<br />
<a href="https://www.root.cz/clanky/rozsahly-svet-znackovacich-jazyku/">https://www.root.cz/clanky/rozsahly-svet-znackovacich-jazyku/</a>
</li>

<li>Game of Thrones author George R.R. Martin explains why he writes on a DOS machine<br />
<a href="https://www.theverge.com/2014/5/14/5716232/george-r-r-martin-uses-dos-wordstar-to-write">https://www.theverge.com/2014/5/14/5716232/george-r-r-martin-uses-dos-wordstar-to-write</a>
</li>

<li>The Social Media (G.R.R. Martin)<br />
<a href="https://grrm.livejournal.com/197075.html">https://grrm.livejournal.com/197075.html</a>
</li>

<li>WordStar pro DOS<br />
<a href="https://en.wikipedia.org/wiki/WordStar#MS-DOS">https://en.wikipedia.org/wiki/WordStar#MS-DOS</a>
</li>

<li>Emacs, naked<br />
<a href="https://bzg.fr/en/emacs-strip-tease.html/">https://bzg.fr/en/emacs-strip-tease.html/</a>
</li>

<li>Capek<br />
<a href="http://texteditors.org/cgi-bin/wiki.pl?Capek">http://texteditors.org/cgi-bin/wiki.pl?Capek</a>
</li>

<li>Cizek<br />
<a href="http://texteditors.org/cgi-bin/wiki.pl?Cizek">http://texteditors.org/cgi-bin/wiki.pl?Cizek</a>
</li>

<li>Stur<br />
<a href="http://texteditors.org/cgi-bin/wiki.pl?Stur">http://texteditors.org/cgi-bin/wiki.pl?Stur</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

