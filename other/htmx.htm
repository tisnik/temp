<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>HTMX: knihovna pro tvorbu dynamických stránek založená na hypertextu s rozšířenými možnostmi</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>HTMX: knihovna pro tvorbu dynamických stránek založená na hypertextu s rozšířenými možnostmi</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku se seznámíme se zajímavou knihovnou nazvanou HTMX. Jedná se o knihovnu naprogramovanou v JavaScriptu, která umožňuje tvorbu jednodušších webových aplikací a dynamických prezentací, a to pouze za použití jazyka HTML rozšířeného o několik nových atributů.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. HTMX: knihovna pro tvorbu dynamických stránek založená na hypertextu s&nbsp;rozšířenými možnostmi</a></p>
<p><a href="#k02">2. Hypermedia as the Engine of Application State (HATEOAS)</a></p>
<p><a href="#k03">3. Omezení současného HTML</a></p>
<p><a href="#k04">4. Řešení nabízená projektem HTMX</a></p>
<p><a href="#k05">5. Příklad použití HTMX</a></p>
<p><a href="#k06">6. Praktický příklad</a></p>
<p><a href="#k07">7. Spuštění webového serveru s&nbsp;podporou CGI skriptů</a></p>
<p><a href="#k08">8. Modifikace stránky výměnou celé zvolené značky</a></p>
<p><a href="#k09">9. Server nahrazující zvolenou část HTML stránky HTML kódem</a></p>
<p><a href="#k10">10. Webová aplikace založená na backendu naprogramovaného v&nbsp;jazyku Go</a></p>
<p><a href="#k11">11. Jednoduchý HTTP server naprogramovaný v&nbsp;jazyku Go</a></p>
<p><a href="#k12">12. Otestování stránky s&nbsp;dynamickým obsahem</a></p>
<p><a href="#k13">13. Dynamické stránky se serverem nabízejícím pouze statický obsah</a></p>
<p><a href="#k14">14. Stránka s&nbsp;popisy vybraných programovacích jazyků</a></p>
<p><a href="#k15">15. Specifikace způsobu změny HTML stránky atributem <strong>hx-swap</strong></a></p>
<p><a href="#k16">16. Specifikace události, na kterou se má reagovat atributem <strong>hx-trigger</strong></a></p>
<p><a href="#k17">17. Další možnosti nabízené knihovnou HTMX</a></p>
<p><a href="#k18">18. Plnohodnotná alternativa pro tvorbu SPA?</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. HTMX: knihovna pro tvorbu dynamických stránek založená na hypertextu s&nbsp;rozšířenými možnostmi</h2>

<p>V&nbsp;dnešním článku se seznámíme s&nbsp;knihovnou nazvanou <a
href="https://htmx.org/">HTMX</a>. Jedná se o knihovnu naprogramovanou
v&nbsp;JavaScriptu, která umožňuje tvorbu jednodušších webových aplikací a
dynamických prezentací pouze za použití jazyka HTML rozšířeného o několik
nových atributů. Tyto nové atributy umožňují, aby se webová aplikace či
prezentace zapisovala pouze deklarativním způsobem, tj.&nbsp;v&nbsp;HTML a
popř.&nbsp;v&nbsp;CSS, tedy bez explicitního použití JavaScriptu. Podporována
je i komunikace se serverem, přičemž je možné použít sémanticky korektní HTTP
metody (GET, POST, PUT, DELETE atd.) a výsledek posílaný serverem (typicky
plain text nebo fragment HTML) lze deklarativně vložit na zvolené místo ve
webové stránce &ndash; a to opět bez explicitního volání imperativního
JavaScriptového kódu. Knihovna HTMX tedy nabízí alternativní způsob tvorby
webových aplikací, který se liší jak od klasického konceptu dotaz&rarr;nová
stránka, tak i od konceptu používaného v&nbsp;Reactu a dalších podobně
koncipovaných knihovnách (i když se v&nbsp;důsledku HTMX k&nbsp;Reactu
přibližuje, protože taktéž umožňuje tvorbu <a
href="https://en.wikipedia.org/wiki/Single-page_application">SPA</a>).</p>

<p><div class="rs-tip-major">Poznámka: minifikovaná varianta knihovny HTMX
zabere necelých 40kB, tj.&nbsp;jedná se o JavaScriptovou knihovnu spíše menší
velikosti. V&nbsp;případě, že se při přenosu používá GZIP, je nutné přenést
pouze cca 12kB, což z&nbsp;dnešní perspektivy již není mnoho.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Hypermedia as the Engine of Application State (HATEOAS)</h2>

<p>V&nbsp;souvislosti s&nbsp;knihovnou HTMX se poměrně často používá zkratka
<i>HATEOAS</i> neboli po rozepsání zkratky <i>Hypermedia as the Engine of
Application State</i>. Jedná se o jeden z&nbsp;principů, na nichž byla
postavena architektura REST, jež se ovšem později posunula poněkud odlišným
směrem. HATEOS specifikuje, že klientská aplikace, což je v&nbsp;našem případě
webová stránka (resp.&nbsp;SPA) komunikuje s&nbsp;backendem (aplikačním
serverem) přes dynamicky poskytované hypermédium. Díky tomu je klient do značné
míry oddělen od serveru &ndash; není nutné explicitně popisovat komunikační
protokol (neexistuje zde striktně vyžadovaná obdoba IDL či JSON schema), klient
může být vyvíjen nezávisle na serveru a naopak. V&nbsp;případě HTMX je oddělení
ještě větší, protože klient vlastně vůbec nemusí &bdquo;rozumět&ldquo;
posílaným datům, na rozdíl od &bdquo;moderního&ldquo; RESTu, kde klient nějakým
způsobem data zpracovává a tedy závisí na tom, v&nbsp;jakém formátu jsou data
posílána &ndash; a každá změna ve schématu může vést k&nbsp;nutnosti změny na
straně klienta a naopak.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Omezení současného HTML</h2>

<p>Autoři dále popsané knihovny <i>HTMX</i> identifikovali čtyři poměrně
zásadní omezení značkovacího jazyka HTML (a to včetně poslední verze HTML5),
které vývojáře de facto nutí k&nbsp;tomu, aby tato omezení v&nbsp;mnoha
případech obcházeli přímým použitím JavaScriptu. A to dokonce i v&nbsp;těch
situacích, kdy je JavaScriptový kód použit k&nbsp;operacím, které by
v&nbsp;ideálním případě mohly být nabízeny přímo webovým prohlížečem.</p>

<p>Konkrétně se jedná o následující omezení, která, jak je ostatně patrné,
spolu do určité míry souvisí:</p>

<ol>

<li>HTTP požadavky (posílané na server na základě akcí provedených uživatelem)
lze vyvolat pouze dvěma ovládacími prvky vytvořenými s&nbsp;využitím značek
<strong>&lt;a&gt;</strong> a <strong>&lt;form&gt;</strong>, tedy pouze
s&nbsp;využitím hypertextového odkazu a formuláře (ve skutečnosti pozapomněli
na dvojici <strong>map</strong>+<strong>area</strong> a několik dalších
drobností, což ovšem na věci nic nemění).</li>

<li>Samotný HTTP požadavek je přitom vyvolán jen dvěma možnými akcemi uživatele
&ndash; <i>click</i> a <i>submit</i>, tedy kliknutím na hypertextový odkaz
popř.&nbsp;odesláním formuláře. Žádné další uživatelské akce k&nbsp;poslání
požadavku nevedou (opět pochopitelně za předpokladu, že nepoužijeme
JavaScript).</li>

<li>Navíc jsou podporovány pouze dvě HTTP metody, a to konkrétně metoda
<strong>GET</strong> (hypertextový odkaz, formulář) a <strong>POST</strong>
(jen formulář), což omezuje <i>sémantiku</i> operací.</li>

<li>Po odeslání požadavku dojde (společně s&nbsp;příchodem odpovědi) ke změně
obsahu celé HTML stránky &ndash; celá stránka se tedy nahrazuje stránkou novou,
což dosti podstatným způsobem omezuje tvorbu složitějších stránek či aplikací
(resp.&nbsp;nutí vývojáře do volání JavaScriptu).</li>

</ol>

<p><div class="rs-tip-major">Poznámka: poslední omezení bylo do určité míry
obcházeno použitím rámců (<i>frame</i>) a vložených rámců (<i>iframe</i>), což
je dnes značně nepopulární technologie.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Řešení nabízená projektem HTMX</h2>

<p>Všechna čtyři výše uvedená (zásadní) omezení v&nbsp;současnosti používaného
značkovacího jazyka HTML jsou v&nbsp;knihovně HTMX řešena, a to takovým
způsobem, že jsou do HTML zavedeny nové atributy dostupné u prakticky všech
HTML značek (ne zcela všech, týká se to vizuálních značek). Tyto atributy
určují, na jaké události má daný prvek zobrazený na webové stránce reagovat (a
nemusí se jednat jen o reakce typu <i>click</i> či <i>submit</i>), jaký HTTP
požadavek se má poslat na server, jaká HTTP metoda se pro poslání požadavku
použije a v&nbsp;neposlední řadě se taktéž specifikuje jaká <i>oblast</i> HTML
stránky se má překreslit, tedy nahradit za data získaná ze serveru (to tedy
znamená, že se nebude nutně překreslovat celá HTML stránka).</p>

<p>Mezi nové atributy přidané do HTML značek v&nbsp;rámci projektu HTMX patří
zejména:</p>

<table>
<tr><th>Atribut</th><th>Stručný popis</th></tr>
<tr><td>hx-trigger</td><td>specifikace události, která vyvolá dotaz (požadavek) poslaný na HTTP server</td></tr>
<tr><td>hx-request</td><td>konfigurace toho, jak má vypadat dotaz (požadavek) poslaný na HTTP server</td></tr>
<tr><td>hx-target</td><td>specifikace oblasti stránky, která se překreslí po přijetí odpovědi</td></tr>
<tr><td>hx-swap hx-swap-oob</td><td>specifikace, jak se má překreslit daná oblast stránky (zda obsah značky, či značka celá)</td></tr>
<tr><td>hx-get hx-post hx-put hx-delete hx-patch</td><td>specifikace různých HTTP metod</td></tr>
<tr><td>hx-vals hx-vars</td><td>hodnoty posílané v&nbsp;požadavku (typicky v&nbsp;JSONu)</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: jak uvidíme dále, předpokládá se, že
odpovědí na HTTP požadavek bude HTML kód popř.&nbsp;čistý text, kterým se
nahradí určitá značka na HTML stránce. Stále se tedy pohybujeme v&nbsp;oblasti
<i>hypertextu</i> a nikoli dnes primárně prosazované technologie založené na
posílání JSONů s&nbsp;jejich následným &bdquo;přeskládáním&ldquo; do vizuální
podoby imperativním kódem.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Příklad použití HTMX</h2>

<p>Podívejme se nyní na velmi jednoduchý demonstrační příklad, který je
mimochodem uveden i na stránce <a
href="https://htmx.org/docs/">https://htmx.org/docs/</a>. Jedná se o standardní
ovládací prvek typu &bdquo;tlačítko&ldquo; zapsaný na HTML stránce, ovšem
s&nbsp;přidanými novými atributy podporovanými knihovnou HTMX. Všechny nové
atributy jsou zvýrazněny:</p>

<pre>
&lt;button <strong>hx-post="/clicked"</strong>
    <strong>hx-trigger="click"</strong>
    <strong>hx-target="#parent-div"</strong>
    <strong>hx-swap="outerHTML"</strong>
&gt;
    Click Me!
&lt;/button&gt;
</pre>

<p>Díky těmto novým atributům bylo možné specifikovat následující chování HTML
stránky (a to deklarativně, nikoli imperativně):</p>

<ol>

<li>Po stisku tlačítka myši (<i>click</i>) je na HTTP server poslán HTTP dotaz;
konkrétně se bude jednat o dotaz typu POST a koncovým bodem bude
&bdquo;/clicked&ldquo;</li>

<li>Přečtenou odpovědí (což bude část HTML stránky) bude nahrazen prvek
s&nbsp;identifikátorem <i>#parent-div</i>, zatímco zbytek stránky se nebude
překreslovat</li>

<li>Nahrazen přitom bude celý zvolený prvek, tedy včetně svého
&bdquo;kořenového&ldquo; elementu (dojde k&nbsp;jeho úplné náhradě)</li>

</ol>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že jsme definovali
nejenom to, <i>jaké informace</i> se mají na HTML stránce zobrazit, ale můžeme
zvolit i <i>styl zobrazení</i> (pomocí CSS) a dokonce i &bdquo;dynamické&ldquo;
<i>chování</i> stránky. To vlastně znamená, že se bude jednat o plnohodnotnou
hypermediální stránku reagující na akce prováděné uživatelem. Všechny tři
součásti této HTML stránky jsou přitom zapsány čistě deklarativním stylem,
nikoli s&nbsp;využitím imperativního kódu &ndash; tvůrce se vůbec nemusí
zabývat JavaScriptem atd.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Praktický příklad</h2>

<p>Vyzkoušejme si nyní koncept, který byl představen v&nbsp;rámci <a
href="#k05">předchozí kapitoly</a>, uplatnit v&nbsp;praxi. Pro tento účel si
vytvoříme jednoduchou webovou &bdquo;aplikaci&ldquo;, resp.&nbsp;přesněji
řečeno (postupně) několik variant takové aplikace. Každá &bdquo;aplikace&ldquo;
(a jak uvidíte dále, jsou zde uvozovky skutečně na místě) se skládá ze tří
souborů:</p>

<ol>

<li>HTML soubor, který mj.&nbsp;při otevření ve webovém prohlížeči načítá
JavaScriptový soubor <strong>htmx.min.js</strong> s&nbsp;implementací HTMX.
Tento soubor obsahuje kód HTML stránky bez imperativního kódu (vše &ndash; i
definice akce a reakce na ni &ndash; je zapsáno deklarativně).</li>

<li>Již výše zmíněný soubor <strong>htmx.min.js</strong> (vždy poslední
dostupná verze).</li>

<li>Spustitelný soubor <strong>cgi-bin/answer</strong> se skriptem, který bude
volán HTTP serverem.</li>

</ol>

<p>Adresářová struktura prvního demonstračního příkladu bude v&nbsp;té
nejjednodušší podobě vypadat následovně:</p>

<pre>
.
├── basic_example1.htm
├── cgi-bin
│   ├── answer
├── get_htmx
└── htmx.min.js
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;adresáři s&nbsp;projektem je, jak
jste si zajisté mohli povšimnout, uložen i skript nazvaný
<strong>get_htmx</strong>, který po svém spuštění stáhne poslední minifikovanou
verzi knihovny HTMX. Tento skript je tedy nutné spustit ještě před inicializací
webového serveru (v&nbsp;repositáři HTMX přímo nemám, neboť je vhodné si vždy
stáhnout poslední verzi, nehledě na licence).</div></p>

<p>Nyní se podívejme na soubor <strong>basic_example1.htm</strong>. Jedná se o
statickou HTML stránku, která načítá <strong>htmx.min.js</strong> (zvýrazněná
část). Kromě toho tato HTML stránka obsahuje definici tlačítka, po jehož stisku
se přes HTTP metodu POST zavolá skript <strong>/cgi-bin/answer</strong>, který
vrátí nějaká data (HTML kód). Tento HTML kód je vložen do HTML značky
s&nbsp;identifikátorem &bdquo;answer-div&ldquo;:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;button hx-post="/cgi-bin/answer"
                hx-trigger="click"
                hx-target="#answer-div"&gt;
            Retrieve answer!
        &lt;/button&gt;
&nbsp;
        &lt;div id="answer-div"&gt;
            Answer...?
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že na této HTML stránce
není ani jeden JavaScriptový (imperativní) kód.</div></p>

<p>Nyní se podívejme na obsah skriptu <strong>/cgi-bin/answer</strong>. Pro
jednoduchost je tento skript naprogramován v&nbsp;Pythonu a po svém spuštění
odešle na standardní výstup HTTP hlavičku 200 OK, za níž následuje tělo
(payload) obsahující pouze text &bdquo;42&ldquo;. Jak hlavička, tak i tělo jsou
HTTP serverem poslány do webového prohlížeče:</p>

<pre>
#!/usr/bin/env python3
&nbsp;
import sys
print('200 OK\r\n\r\n42')
</pre>

<p><div class="rs-tip-major">Poznámka: použití CGI skriptů může mnohým čtenářům
připadat jako již dávno překonaná technologie (což je v&nbsp;mnoha oblastech
zajisté pravda), ale tento příklad je zde uveden zejména pro ilustraci možností
HTMX i v&nbsp;těch oblastech/firmách, v&nbsp;nichž nejsou k&nbsp;dispozici
profesionální tvůrci webových aplikací.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Spuštění webového serveru s&nbsp;podporou CGI skriptů</h2>

<p>Nyní v&nbsp;adresáři s&nbsp;výše popsaným projektem spustíme webový server,
u kterého navíc budeme muset povolit spouštění CGI skriptů. Pro jednoduchost
použijeme server dodávaný společně se standardní knihovnou Pythonu. Pozor:
tento server není určen pro produkční nasazení (a už vůbec ne s&nbsp;takto
povolenými CGI skripty otevřenými &bdquo;celému světa&ldquo;). Pro lokální
testování nám však může toto řešení dostačovat:</p>

<pre>
$ <strong>python3 -m http.server --cgi 9000</strong>
&nbsp;
Serving HTTP on 0.0.0.0 port 9000 (http://0.0.0.0:9000/) ...
</pre>

<p>Ve webovém prohlížeči otevřeme stránku dostupnou na adrese <a
href="http://localhost:9000">http://localhost:9000</a>:</p>

<pre>
127.0.0.1 - - [22/Nov/2022 15:42:52] "GET / HTTP/1.1" 200 -
127.0.0.1 - - [22/Nov/2022 15:42:52] code 404, message File not found
127.0.0.1 - - [22/Nov/2022 15:42:52] "GET /favicon.ico HTTP/1.1" 404 -
127.0.0.1 - - [22/Nov/2022 15:43:39] "GET /basic_example1.htm HTTP/1.1" 200 -
127.0.0.1 - - [22/Nov/2022 15:43:39] "GET /htmx.min.js HTTP/1.1" 200 -
</pre>

<a href="https://www.root.cz/obrazek/714892/"><img src="https://i.iinfo.cz/images/660/htmx-1-prev.png" class="image-714892" data-prev-filename="https://i.iinfo.cz/images/660/htmx-1-prev.png" data-prev-width="370" data-prev-height="263" data-large-filename="https://i.iinfo.cz/images/660/htmx-1.png" data-large-width="680" data-large-height="483" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="263" /></a>
<p><i>Obrázek 1: Stránka se seznamem poskytovaných souborů poskytovaná HTTP
serverem.</i></p>

<p>Zvolíme stránku <a
href="http://localhost:9000/basic_example1.htm">http://localhost:9000/basic_example1.htm</a>:</p>

<a href="https://www.root.cz/obrazek/714893/"><img src="https://i.iinfo.cz/images/660/htmx-2-prev.png" class="image-714893" data-prev-filename="https://i.iinfo.cz/images/660/htmx-2-prev.png" data-prev-width="370" data-prev-height="113" data-large-filename="https://i.iinfo.cz/images/660/htmx-2.png" data-large-width="562" data-large-height="171" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="113" /></a>
<p><i>Obrázek 2: Stránka <strong>basic_example1.htm</strong> otevřená ve
webovém prohlížeči.</i></p>

<p>Po stisku tlačítka na stránce se provede dotaz na server:</p>

<pre>
127.0.0.1 - - [22/Nov/2022 15:44:59] "POST /cgi-bin/answer HTTP/1.1" 200 -
</pre>

<p>A stránka se na ploše prohlížeče upraví &ndash; zobrazí se odpověď
serveru:</p>

<a href="https://www.root.cz/obrazek/714894/"><img src="https://i.iinfo.cz/images/660/htmx-3-prev.png" class="image-714894" data-prev-filename="https://i.iinfo.cz/images/660/htmx-3-prev.png" data-prev-width="370" data-prev-height="88" data-large-filename="https://i.iinfo.cz/images/660/htmx-3.png" data-large-width="569" data-large-height="135" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="88" /></a>
<p><i>Obrázek 3: Stránka, jejíž část (pouze část) se překreslila
s&nbsp;odpovědí serveru.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Modifikace stránky výměnou celé zvolené značky</h2>

<p>Nyní HTML (HTMX?) stránku nepatrně upravíme &ndash; přidáme další atribut
k&nbsp;tlačítku, který říká, že odpověď dodaná serverem má nahradit
<i>celou</i> zvolenou značku, což v&nbsp;tomto konkrétním případě znamená celý
odstavec (včetně značky <strong>div</strong>):</p>

<pre>
&lt;div id="answer-div"&gt;
    Answer...?
&lt;/div&gt;
</pre>

<p>Upravená stránka bude vypadat následovně &ndash; modifikovaná část je
zvýrazněna:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;button hx-post="/cgi-bin/answer"
                hx-trigger="click"
                hx-target="#answer-div"
                <strong>hx-swap="outerHTML"</strong>&gt;
            Retrieve answer!
        &lt;/button&gt;
&nbsp;
        &lt;div id="answer-div"&gt;
            Answer...?
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>Otestujme si, co se nyní stane po otevření této stránky a stisku tlačítka na
ní:</p>

<a href="https://www.root.cz/obrazek/714895/"><img src="https://i.iinfo.cz/images/660/htmx-4-prev.png" class="image-714895" data-prev-filename="https://i.iinfo.cz/images/660/htmx-4-prev.png" data-prev-width="370" data-prev-height="104" data-large-filename="https://i.iinfo.cz/images/660/htmx-4.png" data-large-width="563" data-large-height="159" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="104" /></a>
<p><i>Obrázek 4: Stránka před stiskem tlačítka.</i></p>

<a href="https://www.root.cz/obrazek/714896/"><img src="https://i.iinfo.cz/images/660/htmx-5-prev.png" class="image-714896" data-prev-filename="https://i.iinfo.cz/images/660/htmx-5-prev.png" data-prev-width="370" data-prev-height="104" data-large-filename="https://i.iinfo.cz/images/660/htmx-5.png" data-large-width="555" data-large-height="156" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="104" /></a>
<p><i>Obrázek 5: Stránka po stisku tlačítka.</i></p>

<p>A takto HTML stránku interpretuje prohlížeč &ndash; povšimněte si, že
skutečně došlo k&nbsp;nahrazení celého odstavce za pouhý text:</p>

<a href="https://www.root.cz/obrazek/714897/"><img src="https://i.iinfo.cz/images/660/htmx-6-prev.png" class="image-714897" data-prev-filename="https://i.iinfo.cz/images/660/htmx-6-prev.png" data-prev-width="370" data-prev-height="77" data-large-filename="https://i.iinfo.cz/images/660/htmx-6-large.png" data-large-width="720" data-large-height="150" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="77" /></a>
<p><i>Obrázek 6: Tatáž stránka, ovšem zobrazená v&nbsp;Inspectoru.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Server nahrazující zvolenou část HTML stránky HTML kódem</h2>

<p>To, že je možné nahradit celou zvolenou značku kódem získaným ze serveru nám
umožňuje, aby se část &bdquo;dynamického&ldquo; renderingu stránky prováděla na
jednom místě &ndash; na serveru (třeba s&nbsp;využitím šablonovacích systémů
atd.). Ostatně si to můžeme snadno otestovat. Nejprve změníme cestu k&nbsp;CGI
skriptu:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;button hx-post="<strong>/cgi-bin/answer2</strong>"
                hx-trigger="click"
                hx-target="#answer-div"
                hx-swap="outerHTML"&gt;
            Retrieve answer!
        &lt;/button&gt;
&nbsp;
        &lt;div id="answer-div"&gt;
            Answer...?
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>A taktéž upravíme příslušný skript takovým způsobem, že se vrátí HTML kód,
konkrétně odstavec se stylem:</p>

<pre>
#!/usr/bin/env python3
&nbsp;
import sys
print('200 OK\r\n\r\n&lt;div style="color:red"&gt;42&lt;/div&gt;')
</pre>

<p>Výsledek:</p>

<a href="https://www.root.cz/obrazek/714898/"><img src="https://i.iinfo.cz/images/660/htmx-7-prev.png" class="image-714898" data-prev-filename="https://i.iinfo.cz/images/660/htmx-7-prev.png" data-prev-width="370" data-prev-height="84" data-large-filename="https://i.iinfo.cz/images/660/htmx-7.png" data-large-width="522" data-large-height="119" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="84" /></a>
<p><i>Obrázek 7: Obsah stránky před stiskem tlačítka.</i></p>

<a href="https://www.root.cz/obrazek/714899/"><img src="https://i.iinfo.cz/images/660/htmx-8-prev.png" class="image-714899" data-prev-filename="https://i.iinfo.cz/images/660/htmx-8-prev.png" data-prev-width="370" data-prev-height="100" data-large-filename="https://i.iinfo.cz/images/660/htmx-8.png" data-large-width="532" data-large-height="144" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="100" /></a>
<p><i>Obrázek 8: Obsah stránky po stisku tlačítka a překreslení místa na
stránce, kde se nacházel odstavec.</i></p>

<p>Samozřejmě nejsme omezeni pouze na použití odstavců. Můžeme do stránky
dynamicky přidat například nadpis:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;button hx-post=<strong>"/cgi-bin/answer3"</strong>
                hx-trigger="click"
                hx-target="#answer-div"
                <strong>hx-swap="outerHTML"</strong>&gt;
            Retrieve answer!
        &lt;/button&gt;
&nbsp;
        &lt;div id="answer-div"&gt;
            Answer...?
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>Upravený skript, který vrátí nadpis, bude vypadat následovně:</p>

<pre>
#!/usr/bin/env python3
&nbsp;
import sys
print('200 OK\r\n\r\n&lt;h1&gt;42&lt;/h1&gt;')
</pre>

<p>Výsledky:</p>

<a href="https://www.root.cz/obrazek/714900/"><img src="https://i.iinfo.cz/images/660/htmx-9-prev.png" class="image-714900" data-prev-filename="https://i.iinfo.cz/images/660/htmx-9-prev.png" data-prev-width="370" data-prev-height="97" data-large-filename="https://i.iinfo.cz/images/660/htmx-9.png" data-large-width="534" data-large-height="140" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="97" /></a>
<p><i>Obrázek 9: Obsah stránky před stiskem tlačítka.</i></p>

<a href="https://www.root.cz/obrazek/714901/"><img src="https://i.iinfo.cz/images/660/htmx-10-prev.png" class="image-714901" data-prev-filename="https://i.iinfo.cz/images/660/htmx-10-prev.png" data-prev-width="370" data-prev-height="127" data-large-filename="https://i.iinfo.cz/images/660/htmx-10.png" data-large-width="528" data-large-height="181" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="127" /></a>
<p><i>Obrázek 10: Obsah stránky po stisku tlačítka a překreslení té oblasti na
stránce, kde se nacházel odstavec.</i></p>

<p><div class="rs-tip-major">Poznámka: nyní bude adresář, který bude používán
HTTP serverem, vypadat následovně:</div></p>

<pre>
.
├── basic_example1.htm
├── basic_example2.htm
├── cgi-bin
│   ├── answer
│   ├── answer2
│   └── answer3
├── get_htmx
├── htmx.min.js
├── outer_div1.htm
└── outer_div2.htm
&nbsp;
1 directory, 9 files
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Webová aplikace založená na backendu naprogramovaného v&nbsp;jazyku Go</h2>

<p>Všechny předchozí demonstrační příklady byly kvůli jednoduchosti založeny na
použití CGI skriptů, což je technologie, která sice stále má své uplatnění
(intranety, různé projekty z&nbsp;oblasti zpracování dat atd.), ovšem ne vždy
se jedná o ideální řešení pro tvorbu moderních veřejně dostupných webů. Ukažme
si tedy nyní poněkud odlišný přístup, jenž je založený na backendu
naprogramovaného <a
href="https://www.root.cz/serialy/programovaci-jazyk-go/">v&nbsp;jazyku Go</a>,
jenž je pro tyto účely téměř ideální. Struktura adresáře s&nbsp;projektem je
jednoduchá:</p>

<pre>
.
├── basic_example1.htm
├── get_htmx
├── htmx.min.js
└── httpServer.go
&nbsp;
0 directories, 4 files
</pre>

<p>Nalezneme zde tyto soubory:</p>

<ul>
<li>HTML stránka dodávaná serverem</li>
<li>Skript pro stažení knihovny <strong>html.min.js</strong> (v&nbsp;minifikované podobě)</li>
<li>Samotná knihovna <strong>html.min.js</strong></li>
<li>HTTP server naprogramovaný v&nbsp;jazyku Go</li>
</ul>

<p>Nejdříve se podívejme na HTML stránku, která opět obsahuje značky
s&nbsp;atributy z&nbsp;knihovny HTMX. Povšimněte si, že adresa endpointu, jemuž
budeme posílat dotaz HTTP metodou POST je &bdquo;/answer&ldquo;:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;button hx-post="/answer"
                hx-trigger="click"
                hx-target="#answer-div"&gt;
            Retrieve answer!
        &lt;/button&gt;
&nbsp;
        &lt;div id="answer-div"&gt;
            Answer...?
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;adresáři s&nbsp;projektem je opět
uložen i skript nazvaný <strong>get_htmx</strong>, který po svém spuštění
stáhne poslední minifikovanou verzi knihovny HTMX. Tento skript je tedy nutné
spustit ještě před překladem a spuštěním webového serveru.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Jednoduchý HTTP server naprogramovaný v&nbsp;jazyku Go</h2>

<p>Samotná implementace HTTP serveru (jenž mimochodem dokáže obsluhovat dotazy
paralelně) je vytvořena v&nbsp;jazyku Go a používá pouze standardní knihovnu
tohoto jazyka. To tedy znamená, že nemusíme instalovat další podpůrné knihovny
typu <a href="https://www.gorillatoolkit.org/">Gorilla Web Toolkit</a> atd.
Server dokáže odpovídat na dotazy na trojici endpointů, přičemž pro endpointy
&bdquo;/&ldquo; a &bdquo;/htmx.min.js&ldquo; se vrátí obsah souborů načtených
z&nbsp;disku, kdežto pro endpoint &bdquo;/answer&ldquo; se odpověď vygeneruje
programově, konkrétně zápisem MIME typu odpovědi, HTTP kódu v&nbsp;hlavičce a
těla odpovědi (ovšem pro jednoduchost nezpracováváme žádné parametry požadavku
ani jeho tělo):</p>

<pre>
package <strong>main</strong>
&nbsp;
import (
        "fmt"
        "log"
        "net/http"
)
&nbsp;
func <strong>indexPageHandler</strong>(writer http.ResponseWriter, request *http.Request) {
        http.ServeFile(writer, request, "basic_example1.htm")
}
&nbsp;
func <strong>htmxHandler</strong>(writer http.ResponseWriter, request *http.Request) {
        http.ServeFile(writer, request, "htmx.min.js")
}
&nbsp;
func <strong>answerHandler</strong>(writer http.ResponseWriter, request *http.Request) {
        writer.Header().Set("Content-Type", "application/html")
        writer.WriteHeader(http.StatusOK)
        fmt.Fprint(writer, `&lt;h1&gt;42&lt;/h1&gt;`)
}
&nbsp;
func <strong>startHttpServer</strong>(address string) {
        log.Printf("Starting server on address %s", address)
&nbsp;
        http.HandleFunc("/", indexPageHandler)
        http.HandleFunc("/htmx.min.js", htmxHandler)
        http.HandleFunc("/answer", answerHandler)
        http.ListenAndServe(address, nil)
}
&nbsp;
func <strong>main</strong>() {
        startHttpServer(":8080")
}
</pre>

<p>Tento server přeložíme a spustíme příkazem:</p>

<pre>
$ <strong>go run httpServer.go</strong>
&nbsp;
2022/11/23 12:52:48 Starting server on address :8080
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Otestování stránky s&nbsp;dynamickým obsahem</h2>

<p>Po spuštění serveru naprogramovaného v&nbsp;jazyce Go můžeme velmi snadno
zjistit, jak se bude chovat takto vytvořená &bdquo;webová aplikace&ldquo;:</p>

<a href="https://www.root.cz/obrazek/714902/"><img src="https://i.iinfo.cz/images/660/htmx-11-prev.png" class="image-714902" data-prev-filename="https://i.iinfo.cz/images/660/htmx-11-prev.png" data-prev-width="370" data-prev-height="114" data-large-filename="https://i.iinfo.cz/images/660/htmx-11.png" data-large-width="432" data-large-height="133" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="114" /></a>
<p><i>Obrázek 11: Stránka poskytnutá serverem pro endpoint &bdquo;/&ldquo;.</i></p>

<a href="https://www.root.cz/obrazek/714903/"><img src="https://i.iinfo.cz/images/660/htmx-12-prev.png" class="image-714903" data-prev-filename="https://i.iinfo.cz/images/660/htmx-12-prev.png" data-prev-width="370" data-prev-height="167" data-large-filename="https://i.iinfo.cz/images/660/htmx-12.png" data-large-width="431" data-large-height="194" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="167" /></a>
<p><i>Obrázek 12: Modifikovaný obsah stránky po stisku tlačítka, poslání dotazu
na server a odpovědi serveru.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Dynamické stránky se serverem nabízejícím pouze statický obsah</h2>

<p>V&nbsp;některých případech je možné se zcela obejít bez sofistikovaného
backendu, protože všechny informace, které se mají uživatelům zobrazit (i
v&nbsp;interaktivní podobě) jsou dostupné ve formě statických dat poskytovaných
HTML serverem. Příkladem může být webová prezentace, na jejíž úvodní stránce se
nachází ikony vybraných programovacích jazyků. Uživatel si zde může jeden
z&nbsp;těchto jazyků vybrat a stránka by měla na základě této akce zobrazit
podrobnější informace o tomto jazyku. Jedná se přitom o statické informace,
které není nutné dynamicky vytvářet na základě dotazu. V&nbsp;takovém případě
můžeme (pochopitelně) použít HTMX, ovšem namísto sofistikovaného backendu nám
bude postačovat libovolný HTTP server poskytující statická data &ndash; HTML
stránky, obrázky a textové soubory.</p>

<a href="https://www.root.cz/obrazek/714904/"><img src="https://i.iinfo.cz/images/660/htmx-13-prev.png" class="image-714904" data-prev-filename="https://i.iinfo.cz/images/660/htmx-13-prev.png" data-prev-width="370" data-prev-height="72" data-large-filename="https://i.iinfo.cz/images/660/htmx-13-large.png" data-large-width="720" data-large-height="140" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="72" /></a>
<p><i>Obrázek 13: Obsah HTML stránky s&nbsp;nabídkou ikon vybraných
programovacích jazyků.</i></p>

<p>Obsah adresáře se statickými daty, které budeme používat, vypadá následovně:</p>

<pre>
apl_logo.png
APL.txt
Clojure.png
Clojure.txt
C.png
C.txt
get_htmx
Go.png
Go.txt
Java.png
Java.txt
languages.htm
languages2.htm
languages3.htm
Python.png
Python.txt
Rust.png
Rust.txt
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Stránka s&nbsp;popisy vybraných programovacích jazyků</h2>

<p>Podívejme se nyní, jak by mohla vypadat stránka obsahující ikony
programovacích jazyků, ovšem s&nbsp;tím, že po kliknutí na nějakou ikonu má
dojít k&nbsp;zobrazení podrobnějších informací o vybraném jazyku. Stránka
obsahuje sérii obrázků, přičemž po kliknutí na nějaký obrázek pošle webový
prohlížeč HTTP GET požadavek na server (například se bude jednat o požadavek na
poslání souboru &bdquo;C.txt&ldquo;). Po přijetí odpovědi se získané tělo
odpovědi zapíše do odstavce s&nbsp;identifikátorem &bdquo;language&ldquo;.
Toto chování je plně popsáno atributy <strong>hx-get</strong>,
<strong>hx-trigger</strong> a <strong>hx-target</strong>:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;img src="apl_logo.png" hx-get="APL.txt"     hx-trigger="click" hx-target="#language" /&gt;
        &lt;img src="Clojure.png"  hx-get="Clojure.txt" hx-trigger="click" hx-target="#language" /&gt;
        &lt;img src="C.png"        hx-get="C.txt"       hx-trigger="click" hx-target="#language" /&gt;
        &lt;img src="Go.png"       hx-get="Go.txt"      hx-trigger="click" hx-target="#language" /&gt;
        &lt;img src="Java.png"     hx-get="Java.txt"    hx-trigger="click" hx-target="#language" /&gt;
        &lt;img src="Python.png"   hx-get="Python.txt"  hx-trigger="click" hx-target="#language" /&gt;
        &lt;img src="Rust.png"     hx-get="Rust.txt"    hx-trigger="click" hx-target="#language" /&gt;
        &lt;div id="language"&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>Samotný obsah textových souborů obsahuje krátký popis jazyka zkopírovaný
z&nbsp;Wikipedie. Následuje příklad popisku jazyka APL uloženého v&nbsp;souboru
&bdquo;APL.txt&ldquo;:</p>

<pre>
APL (named after the book A Programming Language) is a programming language developed in the 1960s by Kenneth E. Iverson. Its central datatype is the multidimensional array. It uses a large range of special graphic symbols to represent most functions and operators, leading to very concise code. It has been an important influence on the development of concept modeling, spreadsheets, functional programming, and computer math packages. It has also inspired several other programming languages.
</pre>

<a href="https://www.root.cz/obrazek/714905/"><img src="https://i.iinfo.cz/images/660/htmx-14-prev.png" class="image-714905" data-prev-filename="https://i.iinfo.cz/images/660/htmx-14-prev.png" data-prev-width="370" data-prev-height="78" data-large-filename="https://i.iinfo.cz/images/660/htmx-14-large.png" data-large-width="720" data-large-height="153" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="78" /></a>
<p><i>Obrázek 14: Po kliknutí na ikonu jazyka Go se zobrazí stručný popis
tohoto jazyka.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Specifikace způsobu změny HTML stránky atributem <strong>hx-swap</strong></h2>

<p>Po přijetí dat ze serveru je možné určit, jakým způsobem se mají tato data
zobrazit na HTML stránce. Pro tento účel slouží atribut
<strong>hx-swap</strong>, který jsme sice již několikrát použili, ale ve
skutečnosti nám nabízí ještě další možnosti:</p>

<table>
<tr><th>hx-swap</th><th>Význam</th></tr>
<tr><td>innerHTML</td><td>data se uloží do zvoleného uzlu (již známe)</td></tr>
<tr><td>outerHTML</td><td>data zcela nahradí zvolený uzel (již známe)</td></tr>
<tr><td>beforebegin</td><td>data se vloží před uzel</td></tr>
<tr><td>afterbegin</td><td>data se vloží před první poduzel zvoleného uzlu (lze tak vytvořit sérii divů atd.)</td></tr>
<tr><td>beforeend</td><td>data se vloží za poslední poduzel zvoleného uzlu</td></tr>
<tr><td>afterend</td><td>data se vloží za uzel</td></tr>
<tr><td>delete</td><td>cílový uzel se smaže</td></tr>
<tr><td>none</td><td>nic se neprovede, dotaz tedy pouze změnil stav na serveru</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: díky hodnotám
<strong>before/after</strong> <strong>begin/end</strong> lze relativně snadno
realizovat například chat apod.</div></p>

<p>Otestujme si, co se stane ve chvíli, kdy použijeme atribut
<strong>hx-swap="afterend"</strong>. V&nbsp;tomto případě se budou na stránku
přidávat další a další textové informace o zvoleném jazyku (což nebude příliš
čitelné &ndash; lepší by bylo posílat přímo HTML značky odstavců):</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;img src="apl_logo.png" hx-get="APL.txt"     hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;img src="Clojure.png"  hx-get="Clojure.txt" hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;img src="C.png"        hx-get="C.txt"       hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;img src="Go.png"       hx-get="Go.txt"      hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;img src="Java.png"     hx-get="Java.txt"    hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;img src="Python.png"   hx-get="Python.txt"  hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;img src="Rust.png"     hx-get="Rust.txt"    hx-trigger="click" hx-target="#language" <strong>hx-swap="afterend"</strong> /&gt;
        &lt;div id="language"&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<a href="https://www.root.cz/obrazek/714906/"><img src="https://i.iinfo.cz/images/660/htmx-15-prev.png" class="image-714906" data-prev-filename="https://i.iinfo.cz/images/660/htmx-15-prev.png" data-prev-width="370" data-prev-height="87" data-large-filename="https://i.iinfo.cz/images/660/htmx-15-large.png" data-large-width="720" data-large-height="169" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="87" /></a>
<p><i>Obrázek 15: Několik popisků, které byly spojeny v&nbsp;rámci jediného
odstavce. Výsledek v&nbsp;tomto případě samozřejmě není příliš čitelný.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Specifikace události, na kterou se má reagovat atributem <strong>hx-trigger</strong></h2>

<p>V&nbsp;atributu <strong>hx-trigger</strong> jsme prozatím použili hodnotu
<strong>clicked</strong>, což znamená, že stránka reagovala na stisk tlačítka
myši nad nějakým obrázkem. Ve skutečnosti je však možné do tohoto atributu
vložit i další typ události, například <strong>mouseenter</strong> (přejetí
myší po obrázku). Další podporované typy událostí lze najít například na
stránce <a
href="https://www.javatpoint.com/javascript-events">https://www.javatpoint.com/javascript-events</a>.</p>

<p>Zkusme tedy specifikovat reakci na událost typu <strong>mouseenter</strong>
(pouhé přejetí kurzorem myši do obrázku). Je to snadné:</p>

<pre>
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;HTMX - elementary example&lt;/title&gt;
        &lt;script type="text/javascript" src="htmx.min.js"&gt;
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;img src="apl_logo.png" hx-get="APL.txt"     <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;img src="Clojure.png"  hx-get="Clojure.txt" <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;img src="C.png"        hx-get="C.txt"       <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;img src="Go.png"       hx-get="Go.txt"      <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;img src="Java.png"     hx-get="Java.txt"    <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;img src="Python.png"   hx-get="Python.txt"  <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;img src="Rust.png"     hx-get="Rust.txt"    <strong>hx-trigger="mouseenter"</strong> hx-target="#language" /&gt;
        &lt;div id="language"&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>Výsledek bude nyní vypadat následovně (na statickém obrázku se špatně
ukazuje dynamické chování):</p>

<a href="https://www.root.cz/obrazek/714907/"><img src="https://i.iinfo.cz/images/660/htmx-16-prev.png" class="image-714907" data-prev-filename="https://i.iinfo.cz/images/660/htmx-16-prev.png" data-prev-width="370" data-prev-height="90" data-large-filename="https://i.iinfo.cz/images/660/htmx-16-large.png" data-large-width="720" data-large-height="175" alt="&#160;" title="Autor: tisnik + third party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="370" height="90" /></a>
<p><i>Obrázek 16: Nyní stránka reaguje již na pouhé přejetí myši do plochy
obrázku.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Další možnosti nabízené knihovnou HTMX</h2>

<p>Mezi některé další možnosti, které jsou knihovnou HTMX nabízeny, patří:</p>

<ol>
<li>možnost informovat uživatele o tom, že se komunikuje se serverem</li>
<li>dotazy lze na server posílat pravidelně (<i>polling</i>) a měnit tak dynamicky informaci o stavu</li>
<li>větší množství dotazů lze synchronizovat</li>
<li>možnost použití přechodů (vizuálních atd.) definovaných v&nbsp;CSS</li>
<li>podpora pro Web Sockety</li>
<li>podpora pro SSE (<i>Server Sent Events</i>)</li>
<li>u libovolné značky (značek) lze specifikovat, že ji nemá HTMX modifikovat (tedy například se omylem nepřepíše titulek stránky)</li>
</ol>



<p><a name="k18"></a></p>
<h2 id="k18">18. Plnohodnotná alternativa pro tvorbu SPA?</h2>

<p>Knihovna HTMX se stává poměrně oblíbenou, zejména v&nbsp;týmech, které
nejsou specializovány na tvorbu webových aplikací s&nbsp;využitím (dnes)
moderních frameworků. O oblíbenosti HTMX ostatně vypovídá i <a
href="https://github.com/bigskysoftware/htmx">počet hvězdiček na GitHubu</a>.
Nicméně se nabízí otázka, zda HTMX skutečně dokáže nahradit plnohodnotné webové
aplikace, typicky SPA (Single Page Application), vytvářené například
s&nbsp;využitím Reactu, Vue.js atd. Nutno říci, že možnosti HTMX jsou
v&nbsp;některých ohledech omezené, a to konkrétně na realizaci vylepšeného
mechanismu pro HTTP dotazy a odpovědi s&nbsp;reakcí stránky na odpovědi. Ovšem
například přesun prvků na stránce apod. se již v&nbsp;HTMX nedá jednoduše
provést a je nutné sáhnout k&nbsp;jiným mechanismům. Dobrou zprávou je, že
kombinace HTMX s&nbsp;JavaScriptem na jediné stránce je možná a vlastně i
bezproblémová (z&nbsp;tohoto pohledu se nejedná o framework, ale o poměrně úzce
zaměřenou knihovnu).</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;HTML, Pythonu a Go, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již velmi rozsáhlý) repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>cgi-based/basic_example1.htm</td><td>tlačítko s&nbsp;akcí definovanou přes HTMX</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/basic_example1.htm">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/basic_example1.htm</a></td></tr>
<tr><td> 2</td><td>cgi-based/basic_example2.htm</td><td>využití atributu hx-swap="outerHTML"</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/basic_example2.htm">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/basic_example2.htm</a></td></tr>
<tr><td> 3</td><td>cgi-based/outer_div1.htm</td><td>využití atributu hx-swap="outerHTML", volání odlišného cgi-bin skriptu</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/outer_div1.htm">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/outer_div1.htm</a></td></tr>
<tr><td> 4</td><td>cgi-based/outer_div2.htm</td><td>využití atributu hx-swap="outerHTML", volání odlišného cgi-bin skriptu</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/outer_div2.htm">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/outer_div2.htm</a></td></tr>
<tr><td> 5</td><td>cgi-based/get_htmx</td><td>skript pro získání knihovny htmx.js</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/get_htmx">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/get_htmx</a></td></tr>
<tr><td> 6</td><td>cgi-based/cgi-bin/answer</td><td>cgi-bin skript naprogramovaný v&nbsp;Pythonu</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/cgi-bin/answer">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/cgi-bin/answer</a></td></tr>
<tr><td> 7</td><td>cgi-based/cgi-bin/answer2</td><td>cgi-bin skript naprogramovaný v&nbsp;Pythonu vracející celý odstavec</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/cgi-bin/answer2">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/cgi-bin/answer2</a></td></tr>
<tr><td> 8</td><td>cgi-based/cgi-bin/answer3</td><td>cgi-bin skript naprogramovaný v&nbsp;Pythonu vracející nadpis</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/cgi-bin/answer3">https://github.com/tisnik/presentations/blob/master/htmx/cgi-based/cgi-bin/answer3</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>go-server/get_htmx</td><td>skript pro získání knihovny htmx.js</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/go-server/get_htmx">https://github.com/tisnik/presentations/blob/master/htmx/go-server/get_htmx</a></td></tr>
<tr><td>10</td><td>go-server/basic_example1.htm</td><td>tlačítko s&nbsp;akcí definovanou přes HTMX</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/go-server/basic_example1.htm">https://github.com/tisnik/presentations/blob/master/htmx/go-server/basic_example1.htm</a></td></tr>
<tr><td>11</td><td>go-server/httpServer.go</td><td>HTTP server naprogramovaný v&nbsp;jazyku Go</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/go-server/httpServer.go">https://github.com/tisnik/presentations/blob/master/htmx/go-server/httpServer.go</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>static/languages.htm</td><td>HTML stránka nabídkou programovacích jazyků a jejich popisu</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/languages.htm">https://github.com/tisnik/presentations/blob/master/htmx/static/languages.htm</a></td></tr>
<tr><td>13</td><td>static/languages2.htm</td><td>úprava předchozí stránky &ndash; připojení textu, nikoli jeho náhrada</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/languages2.htm">https://github.com/tisnik/presentations/blob/master/htmx/static/languages2.htm</a></td></tr>
<tr><td>14</td><td>static/languages3.htm</td><td>dynamická změna stránky při najetí myši na logo nějakého jazyka</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/languages3.htm">https://github.com/tisnik/presentations/blob/master/htmx/static/languages3.htm</a></td></tr>
<tr><td>15</td><td>static/APL.txt</td><td>stručný popis programovacího jazyka APL</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/APL.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/APL.txt</a></td></tr>
<tr><td>16</td><td>static/Clojure.txt</td><td>stručný popis programovacího jazyka Clojure</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Clojure.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/Clojure.txt</a></td></tr>
<tr><td>17</td><td>static/C.txt</td><td>stručný popis programovacího jazyka C</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/C.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/C.txt</a></td></tr>
<tr><td>18</td><td>static/Go.txt</td><td>stručný popis programovacího jazyka Go</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Go.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/Go.txt</a></td></tr>
<tr><td>19</td><td>static/Java.txt</td><td>stručný popis programovacího jazyka Java</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Java.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/Java.txt</a></td></tr>
<tr><td>20</td><td>static/Python.txt</td><td>stručný popis programovacího jazyka Python</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Python.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/Python.txt</a></td></tr>
<tr><td>21</td><td>static/Rust.txt</td><td>stručný popis programovacího jazyka Rust</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Rust.txt">https://github.com/tisnik/presentations/blob/master/htmx/static/Rust.txt</a></td></tr>
<tr><td>22</td><td>static/apl_logo.png</td><td>logo programovacího jazyka APL</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/apl_logo.png">https://github.com/tisnik/presentations/blob/master/htmx/static/apl_logo.png</a></td></tr>
<tr><td>23</td><td>static/Clojure.png</td><td>logo programovacího jazyka Clojure</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Clojure.png">https://github.com/tisnik/presentations/blob/master/htmx/static/Clojure.png</a></td></tr>
<tr><td>24</td><td>static/C.png</td><td>logo programovacího jazyka C</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/C.png">https://github.com/tisnik/presentations/blob/master/htmx/static/C.png</a></td></tr>
<tr><td>25</td><td>static/Go.png</td><td>logo programovacího jazyka Go</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Go.png">https://github.com/tisnik/presentations/blob/master/htmx/static/Go.png</a></td></tr>
<tr><td>26</td><td>static/Java.png</td><td>logo programovacího jazyka Java</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Java.png">https://github.com/tisnik/presentations/blob/master/htmx/static/Java.png</a></td></tr>
<tr><td>27</td><td>static/Python.png</td><td>logo programovacího jazyka Python</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Python.png">https://github.com/tisnik/presentations/blob/master/htmx/static/Python.png</a></td></tr>
<tr><td>28</td><td>static/Rust.png</td><td>logo programovacího jazyka Rust</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/Rust.png">https://github.com/tisnik/presentations/blob/master/htmx/static/Rust.png</a></td></tr>
<tr><td>29</td><td>static/get_htmx</td><td>skript pro získání knihovny htmx.js</td><td><a href="https://github.com/tisnik/presentations/blob/master/htmx/static/get_htmx">https://github.com/tisnik/presentations/blob/master/htmx/static/get_htmx</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Dynamic Web Pages Without JavaScript? - Intro to HTMX<br />
<a href="https://www.youtube.com/watch?v=CWSmP3LSILo">https://www.youtube.com/watch?v=CWSmP3LSILo</a>
</li>

<li>htmx: Writing JavaScript to Avoid Writing JavaScript, by Carson Gross<br />
<a href="https://www.youtube.com/watch?v=u2rjnLJ1M98">https://www.youtube.com/watch?v=u2rjnLJ1M98</a>
</li>

<li>Carson Gross - REST, HATEOAS &amp; Django - It's OK to not use JSON... or Javascript<br />
<a href="https://www.youtube.com/watch?v=L_UWY-zHlOA">https://www.youtube.com/watch?v=L_UWY-zHlOA</a>
</li>

<li>htmx.org/dist<br />
<a href="https://unpkg.com/browse/htmx.org@1.7.0/dist/">https://unpkg.com/browse/htmx.org@1.7.0/dist/</a>
</li>

<li>intercooler.js<br />
<a href="https://intercoolerjs.org/">https://intercoolerjs.org/</a>
</li>

<li>htmx - GitHub repositář<br />
<a href="https://github.com/bigskysoftware/htmx">https://github.com/bigskysoftware/htmx</a>
</li>

<li>why should I use htmx ?<br />
<a href="https://www.reddit.com/r/django/comments/v4yqxi/why_should_i_use_htmx/">https://www.reddit.com/r/django/comments/v4yqxi/why_should_i_use_htmx/</a>
</li>

<li>_hyperscript<br />
<a href="https://hyperscript.org/">https://hyperscript.org/</a>
</li>

<li>alpine.js<br />
<a href="https://alpinejs.dev/">https://alpinejs.dev/</a>
</li>

<li>HATEOAS<br />
<a href="https://en.wikipedia.org/wiki/HATEOAS">https://en.wikipedia.org/wiki/HATEOAS</a>
</li>

<li>Django, HTMX and Alpine.JS: A Match Made In Heaven<br />
<a href="https://dev.to/nicholas_moen/what-i-learned-while-using-django-with-htmx-and-alpine-js-24jg">https://dev.to/nicholas_moen/what-i-learned-while-using-django-with-htmx-and-alpine-js-24jg</a>
</li>

<li>Single-page application<br />
<a href="https://en.wikipedia.org/wiki/Single-page_application">https://en.wikipedia.org/wiki/Single-page_application</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

