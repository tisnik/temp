<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Rozpoznávání obrázků s knihovnou scikit-learn</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Rozpoznávání obrázků s knihovnou scikit-learn</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku o knihovně scikit-learn si ukážeme jeden ze způsobů rozpoznání rastrových obrázků. Použijeme obrázky s rozlišením pouze 8&times;8 pixelů, které lze reprezentovat vektorem s 64 prvky. Takto krátké vektory můžeme využít pro trénink různých modelů, včetně neuronových sítí.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Rozpoznávání obrázků s&nbsp;knihovnou scikit-learn</a></p>
<p><a href="#k02">2. Rozpoznání ručně napsaných číslic</a></p>
<p><a href="#k03">3. Datová sada obsahující naskenované ručně napsané číslice</a></p>
<p><a href="#k04">4. Metadata a očekávané výsledky z&nbsp;datové sady <i>Digits</i></a></p>
<p><a href="#k05">5. Přečtení a následné vyobrazení jednotlivých ručně nakreslených číslic</a></p>
<p><a href="#k06">6. Rozpoznání číslic modelem provádějícím logistickou regresi</a></p>
<p><a href="#k07">7. Výsledky rozpoznání číslic modelem logistické regrese</a></p>
<p><a href="#k08">8. Využití modelu SVM (metoda podpůrných vektorů) pro klasifikaci obrázků</a></p>
<p><a href="#k09">9. Výsledky rozpoznání číslic metodou podpůrných vektorů</a></p>
<p><a href="#k10">10. Využití modelu pro hledání K nejbližších sousedů</a></p>
<p><a href="#k11">11. Výsledky rozpoznání číslic modelem hledajícím K nejbližších sousedů</a></p>
<p><a href="#k12">12. Rozpoznání rastrových obrázků neuronovou sítí</a></p>
<p><a href="#k13">13. Výsledky rozpoznání číslic neuronovou sítí</a></p>
<p><a href="#k14">14. Zobrazení původních obrázků i predikovaných výsledků ve vizuální podobě</a></p>
<p><a href="#k15">15. Zobrazení těch číslic, u nichž se model spletl</a></p>
<p><a href="#k16">16. Graf s&nbsp;číslicemi, které nebyly správně rozeznány</a></p>
<p><a href="#k17">17. Zobrazení číslic, které nebyly korektně rozeznány neuronovou sítí</a></p>
<p><a href="#k18">18. Číslice, které nebyly rozpoznány neuronovou sítí</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Rozpoznávání obrázků s&nbsp;knihovnou scikit-learn</h2>

<p>V&nbsp;dnešním pokračování seriálu o knihovně <i>scikit-learn</i> si ukážeme
jeden ze způsobů rozpoznání rastrových obrázků. Použijeme přitom obrázky
s&nbsp;velmi malým rozlišením 8&times;8 pixelů, které lze reprezentovat
vektorem s&nbsp;64 prvky. A takto relativně malé vektory je možné použít pro
trénink různých typů modelů &ndash; od modelu logistické regrese až po
sofistikovanou neuronovou síť. Ovšem současně se nám také ukazují limity tohoto
způsobu práce s&nbsp;modely, protože zpracování rastrových dat je dosti
specifické &ndash; dochází totiž k&nbsp;posunům popř.&nbsp;rotacím, což ve
výsledku vede k&nbsp;tomu, že se modely (i když dobře natrénované) mohou při
rozpoznávání obrázků mýlit.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Rozpoznání ručně napsaných číslic</h2>

<p>Úkol, který budeme dnes řešit, je následující: máme k&nbsp;dispozici sadu
obrázků s&nbsp;rozlišením 8&times;8 pixelů, na nichž jsou ručně napsané
číslice, někdy čitelně, jindy dost nečitelně. Našim úkolem bude natrénovat
vhodný model s&nbsp;vhodně nastavenými hyperparametry tak, aby dokázal
rozpoznat číslici. Bude se tedy jednat o model provádějící <i>klasifikaci</i>,
jehož výsledkem je symbol 0, 1, 2, .... 9. Vstupní matice <strong>X</strong>
bude obsahovat N vektorů s&nbsp;64 prvky (což je &bdquo;zploštělá&ldquo; matice
8&times;8 pixelů) a vstupní vektor <strong>y</strong> bude obsahovat hodnoty 0,
1, 2... odpovídající rastrovému obrázku číslice reprezentovaného oněmi
64prvkovými vektory.</p>

<p><div class="rs-tip-major">Poznámka: model samozřejmě natrénujeme
s&nbsp;využitím pouze části datové sady. Zbytek bude použit pro otestování
modelu.  Konkrétně použijeme 80% dat na trénink a zbývajících 20% na
otestování.</div></p>

<p>V&nbsp;knihovně <i>scikit-learn</i> máme k&nbsp;dispozici datovou sadu
s&nbsp;naskenovanými číslicemi, která vznikla z&nbsp;databáze <a href=a
"https://en.wikipedia.org/wiki/MNIST_database">MNIST</a>. Dnes použijeme tuto
sadu, příště však již budeme rozpoznávat odlišné objekty na obrázcích
z&nbsp;databáze CIFAR.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Datová sada obsahující naskenované ručně napsané číslice</h2>

<p>Víme již, že trénovací i testovací (či verifikační) sada s&nbsp;ručně
nakreslenými a naskenovanými číslicemi je přímo součástí balíčku Scikit-learn.
Načíst ji můžeme funkcí <strong>load_digits</strong> z&nbsp;podbalíčku
<strong>sklearn.datasets</strong>, což je koncept, který již velmi dobře známe
z&nbsp;dalších datových sad, tedy konkrétně z&nbsp;datové sady <i>Iris</i> a
<i>California Housings</i>. Hodnotou, kterou po načtení získáme, je datová
struktura s&nbsp;metadaty, vektory s&nbsp;obrázkem (viz další text), maticemi
představujícími obrázky, i vektorem s&nbsp;očekávanými číslicemi. V&nbsp;dalším
skriptu si ukážeme, jakým způsobem je možné některá vrácená metadata a data
zpracovat:</p>

<pre>
<i>#!/usr/bin/env python</i>
&nbsp;
<i># import funkce, která vrátí obrázky pro práci</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits_data = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits_data.DESCR)
&nbsp;
print("Data:", digits_data.data.shape)
print("Obrázky:", digits_data.images.shape)
&nbsp;
<i># výpis informací o obrázcích</i>
for i in range(0, 10):
    print(f"Image #{i}:")
    print("Data:\n", digits_data.data[i])
    print("Image:\n", digits_data.images[i])
    print("Target:\n", digits_data.target[i])
    print()
&nbsp;
<i># finito</i>
</pre>

<p>Nejprve si tímto skriptem necháme zobrazit popis dat a metadat &ndash; což
jsou informace obsažené v&nbsp;atributu <strong>DESCR</strong>:</p>

<pre>
Description: .. _digits_dataset:
&nbsp;
Optical recognition of handwritten digits dataset
--------------------------------------------------
&nbsp;
**Data Set Characteristics:**
&nbsp;
    :Number of Instances: 1797
    :Number of Attributes: 64
    :Attribute Information: 8x8 image of integer pixels in the range 0..16.
    :Missing Attribute Values: None
    :Creator: E. Alpaydin (alpaydin '@' boun.edu.tr)
    :Date: July; 1998
&nbsp;
This is a copy of the test set of the UCI ML hand-written digits datasets
https://archive.ics.uci.edu/ml/datasets/Optical+Recognition+of+Handwritten+Digits
&nbsp;
The data set contains images of hand-written digits: 10 classes where
each class refers to a digit.
&nbsp;
Preprocessing programs made available by NIST were used to extract
normalized bitmaps of handwritten digits from a preprinted form. From a
total of 43 people, 30 contributed to the training set and different 13
to the test set. 32x32 bitmaps are divided into nonoverlapping blocks of
4x4 and the number of on pixels are counted in each block. This generates
an input matrix of 8x8 where each element is an integer in the range
0..16. This reduces dimensionality and gives invariance to small
distortions.
&nbsp;
For info on NIST preprocessing routines, see M. D. Garris, J. L. Blue, G.
T. Candela, D. L. Dimmick, J. Geist, P. J. Grother, S. A. Janet, and C.
L. Wilson, NIST Form-Based Handprint Recognition System, NISTIR 5469,
1994.
&nbsp;
|details-start|
**References**
|details-split|
&nbsp;
- C. Kaynak (1995) Methods of Combining Multiple Classifiers and Their
  Applications to Handwritten Digit Recognition, MSc Thesis, Institute of
  Graduate Studies in Science and Engineering, Bogazici University.
- E. Alpaydin, C. Kaynak (1998) Cascading Classifiers, Kybernetika.
- Ken Tang and Ponnuthurai N. Suganthan and Xi Yao and A. Kai Qin.
  Linear dimensionalityreduction using relevance weighted LDA. School of
  Electrical and Electronic Engineering Nanyang Technological University.
  2005.
- Claudio Gentile. A New Approximate Maximal Margin Classification
  Algorithm. NIPS. 2000.
&nbsp;
|details-end|
</pre>

<p>V&nbsp;rámci dalšího kroku jsou zobrazeny rozměry (resp.&nbsp;přesněji
řečeno <i>tvary</i>) n-rozměrných polí uložených v&nbsp;atributech nazvaných
<strong>data</strong> a <strong>images</strong>:</p>

<pre>
Data: (1797, 64)
Obrázky: (1797, 8, 8)
</pre>

<p>Ze zobrazených zpráv vidíme, že se vlastně (jedna z&nbsp;možných
interpretací) jedná o 1797 64prvkových vektorů resp.&nbsp;o 1797 dvourozměrných
matic 8&times;8 prvků, což je ve skutečnosti jen odlišný pohled na ony
64prvkové vektory (modely budeme učit na jednorozměrných vektorech, pro
zobrazení obrázků naopak použijeme dvourozměrné matice).</p>

<p>Dále si skriptem necháme zobrazit prvních 10 vektorů i prvních 10
dvourozměrných matic:</p>

<pre>
Image #0:
Data:
 [ 0.  0.  5. 13.  9.  1.  0.  0.  0.  0. 13. 15. 10. 15.  5.  0.  0.  3.
 15.  2.  0. 11.  8.  0.  0.  4. 12.  0.  0.  8.  8.  0.  0.  5.  8.  0.
  0.  9.  8.  0.  0.  4. 11.  0.  1. 12.  7.  0.  0.  2. 14.  5. 10. 12.
  0.  0.  0.  0.  6. 13. 10.  0.  0.  0.]
Image:
 [[ 0.  0.  5. 13.  9.  1.  0.  0.]
 [ 0.  0. 13. 15. 10. 15.  5.  0.]
 [ 0.  3. 15.  2.  0. 11.  8.  0.]
 [ 0.  4. 12.  0.  0.  8.  8.  0.]
 [ 0.  5.  8.  0.  0.  9.  8.  0.]
 [ 0.  4. 11.  0.  1. 12.  7.  0.]
 [ 0.  2. 14.  5. 10. 12.  0.  0.]
 [ 0.  0.  6. 13. 10.  0.  0.  0.]]
Target:
 0
&nbsp;
Image #1:
Data:
 [ 0.  0.  0. 12. 13.  5.  0.  0.  0.  0.  0. 11. 16.  9.  0.  0.  0.  0.
  3. 15. 16.  6.  0.  0.  0.  7. 15. 16. 16.  2.  0.  0.  0.  0.  1. 16.
 16.  3.  0.  0.  0.  0.  1. 16. 16.  6.  0.  0.  0.  0.  1. 16. 16.  6.
  0.  0.  0.  0.  0. 11. 16. 10.  0.  0.]
Image:
 [[ 0.  0.  0. 12. 13.  5.  0.  0.]
 [ 0.  0.  0. 11. 16.  9.  0.  0.]
 [ 0.  0.  3. 15. 16.  6.  0.  0.]
 [ 0.  7. 15. 16. 16.  2.  0.  0.]
 [ 0.  0.  1. 16. 16.  3.  0.  0.]
 [ 0.  0.  1. 16. 16.  6.  0.  0.]
 [ 0.  0.  1. 16. 16.  6.  0.  0.]
 [ 0.  0.  0. 11. 16. 10.  0.  0.]]
Target:
 1
&nbsp;
Image #2:
Data:
 [ 0.  0.  0.  4. 15. 12.  0.  0.  0.  0.  3. 16. 15. 14.  0.  0.  0.  0.
  8. 13.  8. 16.  0.  0.  0.  0.  1.  6. 15. 11.  0.  0.  0.  1.  8. 13.
 15.  1.  0.  0.  0.  9. 16. 16.  5.  0.  0.  0.  0.  3. 13. 16. 16. 11.
  5.  0.  0.  0.  0.  3. 11. 16.  9.  0.]
Image:
 [[ 0.  0.  0.  4. 15. 12.  0.  0.]
 [ 0.  0.  3. 16. 15. 14.  0.  0.]
 [ 0.  0.  8. 13.  8. 16.  0.  0.]
 [ 0.  0.  1.  6. 15. 11.  0.  0.]
 [ 0.  1.  8. 13. 15.  1.  0.  0.]
 [ 0.  9. 16. 16.  5.  0.  0.  0.]
 [ 0.  3. 13. 16. 16. 11.  5.  0.]
 [ 0.  0.  0.  3. 11. 16.  9.  0.]]
Target:
 2
...
...
...
Image #8:
Data:
 [ 0.  0.  9. 14.  8.  1.  0.  0.  0.  0. 12. 14. 14. 12.  0.  0.  0.  0.
  9. 10.  0. 15.  4.  0.  0.  0.  3. 16. 12. 14.  2.  0.  0.  0.  4. 16.
 16.  2.  0.  0.  0.  3. 16.  8. 10. 13.  2.  0.  0.  1. 15.  1.  3. 16.
  8.  0.  0.  0. 11. 16. 15. 11.  1.  0.]
Image:
 [[ 0.  0.  9. 14.  8.  1.  0.  0.]
 [ 0.  0. 12. 14. 14. 12.  0.  0.]
 [ 0.  0.  9. 10.  0. 15.  4.  0.]
 [ 0.  0.  3. 16. 12. 14.  2.  0.]
 [ 0.  0.  4. 16. 16.  2.  0.  0.]
 [ 0.  3. 16.  8. 10. 13.  2.  0.]
 [ 0.  1. 15.  1.  3. 16.  8.  0.]
 [ 0.  0. 11. 16. 15. 11.  1.  0.]]
Target:
 8
&nbsp;
Image #9:
Data:
 [ 0.  0. 11. 12.  0.  0.  0.  0.  0.  2. 16. 16. 16. 13.  0.  0.  0.  3.
 16. 12. 10. 14.  0.  0.  0.  1. 16.  1. 12. 15.  0.  0.  0.  0. 13. 16.
  9. 15.  2.  0.  0.  0.  0.  3.  0.  9. 11.  0.  0.  0.  0.  0.  9. 15.
  4.  0.  0.  0.  9. 12. 13.  3.  0.  0.]
Image:
 [[ 0.  0. 11. 12.  0.  0.  0.  0.]
 [ 0.  2. 16. 16. 16. 13.  0.  0.]
 [ 0.  3. 16. 12. 10. 14.  0.  0.]
 [ 0.  1. 16.  1. 12. 15.  0.  0.]
 [ 0.  0. 13. 16.  9. 15.  2.  0.]
 [ 0.  0.  0.  3.  0.  9. 11.  0.]
 [ 0.  0.  0.  0.  9. 15.  4.  0.]
 [ 0.  0.  9. 12. 13.  3.  0.  0.]]
Target:
 9
</pre>

<p><div class="rs-tip-major">Poznámka: zajisté jste si povšimli, že prvky
vektorů i matic jsou skutečně shodné, pouze se odlišuje tvar n-rozměrných polí.
Není to pochopitelně náhoda, protože k&nbsp;datům můžeme přistupovat jako
k&nbsp;rastrovým obrázkům o rozměrech 8&times;8 pixelů (vhodné pro vizualizaci)
nebo jako k&nbsp;64prvkovým vektorům (<i>někdy</i> vhodné pro strojové učení a
tvorbu modelu).</div></p>

<p>Ve výpisu skriptu se objevuje i atribut nazvaný <strong>target</strong>. Je
to výsledná hodnota, na kterou by měl být natrénován model. Opět se nejedná o
žádnou novinku, protože i tento koncept velmi dobře známe z&nbsp;datových sad
<i>Iris</i> i <i>California Housings</i>.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Metadata a očekávané výsledky z&nbsp;datové sady <i>Digits</i></h2>

<p>V&nbsp;datové množině získané zavoláním funkce
<strong>load_digits()</strong> nalezneme i další potenciálně užitečné
informace. Jedná se především o názvy sloupců v&nbsp;případě, že budeme pole
uložené v&nbsp;atributu <strong>data</strong> chápat jako tabulku (v&nbsp;tomto
konkrétním případě o tabulku s&nbsp;1797 řádky a 64 sloupci). Tyto sloupce se
v&nbsp;oblasti zpracování dat taktéž nazývají <i>atributy</i>, což může být
nepatrně matoucí.</p>

<p>Názvy sloupců takového pole jsou uloženy v&nbsp;atributu
<strong>feature_names</strong>. A konečně v&nbsp;atributu
<strong>target_names</strong> nalezneme jména tříd, které dohromady představují
obor hodnot pro hodnoty <strong>target</strong> (tedy pro hodnoty, na které
budeme model trénovat a s&nbsp;jejichž pomocí budeme ověřovat přesnost jeho
předpovědí). Jak tyto informace vypadají konkrétně, nám prozradí další
skript:</p>

<pre>
<i>#!/usr/bin/env python</i>
&nbsp;
<i># import funkce, která vrátí obrázky pro práci</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits_data = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits_data.DESCR)
&nbsp;
print("Data:", digits_data.data.shape)
print("Obrázky:", digits_data.images.shape)
&nbsp;
print("Feature names")
for feature_name in digits_data.feature_names:
    print(feature_name)
&nbsp;
print()
&nbsp;
print("Target names")
for target_name in digits_data.target_names:
    print(target_name)
&nbsp;
<i># finito</i>
</pre>

<p>Po spuštění tohoto skriptu se nejprve opět vypíšou informace o dvou
n-rozměrných polích s&nbsp;trénovacími a verifikačními daty (což již
známe):</p>

<pre>
Data: (1797, 64)
Obrázky: (1797, 8, 8)
</pre>

<p>Dále se vypíšou názvy všech 64 sloupců pole <strong>data</strong>. Zde se
prozrazuje to, co již vlastně víme <a href="#k03">z&nbsp;předchozí kapitoly</a>
&ndash; že v&nbsp;tomto poli jsou uloženy vektory s&nbsp;64 hodnotami pixelů,
které tvoří logický obrázek s&nbsp;rozlišením 8&times;8 pixelů:</p>

<pre>
Feature names
pixel_0_0
pixel_0_1
pixel_0_2
pixel_0_3
pixel_0_4
pixel_0_5
pixel_0_6
pixel_0_7
pixel_1_0
pixel_1_1
pixel_1_2
pixel_1_3
...
...
...
pixel_6_5
pixel_6_6
pixel_6_7
pixel_7_0
pixel_7_1
pixel_7_2
pixel_7_3
pixel_7_4
pixel_7_5
pixel_7_6
pixel_7_7
</pre>

<p>Obsah pole <strong>target_names</strong> obsahuje u této datové množiny
hodnoty &bdquo;0&ldquo; až &bdquo;9&ldquo;, ovšem u jiných množin se může
jednat o zcela odlišné informace (například &bdquo;zapni
kotel&ldquo;/&bdquo;vyplni kotel&ldquo;, &bdquo;před autem je chodec&ldquo;
atd.):</p>

<pre>
Target names
0
1
2
3
4
5
6
7
8
9
</pre>

<p><div class="rs-tip-major">Poznámka: tato metadata tedy nejsou tak popisná,
jako tomu bylo u předchozích dvou datových sad. Je to ostatně logické, protože
u <i>Iris</i> měl každý atribut odlišný význam (jiné rozměry) a u <i>California
Housings</i> se jednalo o osm prakticky zcela odlišných atributů s&nbsp;jinými
jednotkami, rozsahy hodnot atd.:</div></p>

<pre>
Iris Data set:
----------------------------------------------------------------------------------------------------
Feature names:
['sepal length (cm)', 'sepal width (cm)', 'petal length (cm)', 'petal width (cm)']
----------------------------------------------------------------------------------------------------
Target names:
['setosa' 'versicolor' 'virginica']
----------------------------------------------------------------------------------------------------
</pre>

<pre>
California Housings:
----------------------------------------------------------------------------------------------------
Feature names:
['MedInc', 'HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'AveOccup', 'Latitude', 'Longitude']
----------------------------------------------------------------------------------------------------
Target names:
['MedHouseVal']
----------------------------------------------------------------------------------------------------
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Přečtení a následné vyobrazení jednotlivých ručně nakreslených číslic</h2>

<p>V&nbsp;datové množině, kterou dokážeme přečíst funkcí
<strong>load_digits</strong>, nalezneme (jak již víme) i atribut nazvaný
<strong>images</strong>. Jedná se o n-rozměrné pole, konkrétně o trojrozměrné
pole s&nbsp;velikostí 1797&times;8&times;8. Toto pole obsahuje 1797 matic
velikosti 8&times;8 reprezentujících malé rastrové obrázky 8&times;8 pixelů,
jejichž hodnoty jsou normalizovány do rozsahu 0..16 (to je důležité pro trénink
modelu). Takové obrázky lze snadno zobrazit:</p>

<pre>
<i>#!/usr/bin/env python</i>
&nbsp;
<i># budeme provádět vykreslování de facto standardní knihovnou Matplotlib</i>
import matplotlib.pyplot as plt
&nbsp;
<i># import funkce, která vrátí obrázky pro práci</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits_data = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print(digits_data.data.shape)
&nbsp;
<i># vykreslení a uložení prvních deseti obrázků</i>
for i in range(0, 10):
    plt.matshow(digits_data.images[i])
    <i># převod na stupně šedi</i>
    <strong>plt.gray()</strong>
&nbsp;
    plt.savefig(f"Grayscale image #{i}.png")
&nbsp;
    <i># vykreslení na obrazovku</i>
    plt.show()
&nbsp;
<i># finito</i>
</pre>

<p>Výsledkem by mělo být následujících deset grafů s&nbsp;vizualizací ručně
psaných číslic 0 až 9 (nepoužíváme zde přitom žádnou interpolaci ani žádné
další &bdquo;vylepšení&ldquo; výsledků, které by mohl mozek špatně
interpretovat):</p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-18.webp" class="image-1110860" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 1: Vizualizace pole s&nbsp;číslicí 0 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-19.webp" class="image-1110861" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 2: Vizualizace pole s&nbsp;číslicí 1 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-20.webp" class="image-1110862" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 3: Vizualizace pole s&nbsp;číslicí 2 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-21.webp" class="image-1110863" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 4: Vizualizace pole s&nbsp;číslicí 3 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-22.webp" class="image-1110864" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 5: Vizualizace pole s&nbsp;číslicí 4 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-23.webp" class="image-1110865" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 6: Vizualizace pole s&nbsp;číslicí 5 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-24.webp" class="image-1110866" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 7: Vizualizace pole s&nbsp;číslicí 6 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-25.webp" class="image-1110867" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 8: Vizualizace pole s&nbsp;číslicí 7 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-26.webp" class="image-1110868" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 9: Vizualizace pole s&nbsp;číslicí 8 ve stupních šedi.</i></p>

<img src="https://i.iinfo.cz/images/542/scikit-learn-1-27.webp" class="image-1110869" width="480" height="480" alt="&#160;" title="Autor: Tisnik+MNiST authors, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 10: Vizualizace pole s&nbsp;číslicí 9 ve stupních šedi.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Rozpoznání číslic modelem provádějícím logistickou regresi</h2>

<p>Pokusme se natrénovat model založený na logistické regresi (tedy jeden
z&nbsp;nejjednodušších dostupných modelů) tak, aby rozpoznával jednotlivé
číslice zapsané v&nbsp;rastru 8&times;8 pixelů. Model natrénujeme zcela
standardním způsobem, tedy naprosto stejně, jako bychom to udělali
s&nbsp;datovou sadou <i>Iris</i>. Jediným rozdílem je, že každý vstup nebude
mít jen čtyři hodnoty (rozměry), ale 64 hodnot (pixely) a výsledek nemá
obsahovat jen hodnotu 0, 1 nebo 2 (druh květiny) ale celočíselnou hodnotu
z&nbsp;rozsahu 0 až 9:</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import ConfusionMatrixDisplay
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
<i># rozdělení dat</i>
trainX, testX, trainY, testY = train_test_split(X, y, test_size = 0.2)
&nbsp;
print()
print("TrainX:", trainX.shape)
print("TrainY:", trainY.shape)
print("TestX:", testX.shape)
print("TestY:", testY.shape)
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = LogisticRegression(max_iter=1000)
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
&nbsp;
avg_score = scores.mean()
&nbsp;
<i># vypsani prumerneho skore</i>
print()
print("Accuracy:", avg_score)
print()
&nbsp;
<i># trening noveho modelu</i>
classifier = LogisticRegression(max_iter=1000)
classifier.fit(trainX, trainY)
&nbsp;
class_names = digits.target_names
&nbsp;
<i># absolutni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize=None,
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
plt.savefig("154_1.png")
&nbsp;
<i># vizualizace matice</i>
plt.show()
&nbsp;
<i># relativni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize="true",
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
plt.savefig("154_2.png")
&nbsp;
<i># vizualizace matice</i>
plt.show()
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Výsledky rozpoznání číslic modelem logistické regrese</h2>

<p>Jaké budou výsledky tohoto modelu a jakou bude mít úspěšnost? Tyto údaje
získáme ze skriptu <a href="#k06">z&nbsp;předchozí kapitoly</a> velmi snadno.
Nejdříve se zobrazí základní parametry datové sady a následně pak <i>tvary</i>
trénovací i testovací datové sady po jejím rozdělení v&nbsp;poměru 1:5:</p>

<pre>
Data: (1797, 64)
Obrázky: (1797, 8, 8)
&nbsp;
TrainX: (1437, 64)
TrainY: (1437,)
TestX: (360, 64)
TestY: (360,)
</pre>

<p>Následně se zobrazí úspěšnost předpovědí natrénovaného modelu. Ta je
relativně vysoká (cca 93%), i když jsme použili ten prakticky nejjednodušší
dostupný model:</p>

<pre>
Accuracy: 0.9270856610800745
</pre>

<p>Přesnější informace nám ovšem dodají až matice záměn (<i>confusion
matrix</i>) zobrazené jak s&nbsp;absolutními, tak i relativními hodnotami:</p>

<pre>
[[35  0  0  0  0  0  0  0  0  0]
 [ 0 34  0  1  1  0  0  0  0  0]
 [ 0  2 24  0  0  0  0  0  0  0]
 [ 0  0  0 33  0  1  0  0  0  0]
 [ 0  0  0  0 33  0  0  0  0  0]
 [ 0  0  0  0  0 41  0  0  0  1]
 [ 0  0  0  0  0  0 37  0  0  0]
 [ 0  0  0  0  0  0  0 40  0  0]
 [ 0  0  0  0  0  0  0  0 37  0]
 [ 0  0  0  0  0  2  0  0  1 37]]
&nbsp;
[[1.         0.         0.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.94444444 0.         0.02777778 0.02777778 0.  0.         0.         0.         0.        ]
 [0.         0.07692308 0.92307692 0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.97058824 0.         0.02941176 0.         0.         0.         0.        ]
 [0.         0.         0.         0.         1.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.97619048 0.         0.         0.         0.02380952]
 [0.         0.         0.         0.         0.         0.  1.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         1.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         0.         1.         0.        ]
 [0.         0.         0.         0.         0.         0.05 0.         0.         0.025      0.925     ]]
</pre>

<p>Vizuální podoba matic záměn:</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-1.webp" class="image-1141906" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 11: Matice záměn s&nbsp;absolutními odchylkami.</i></p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-2.webp" class="image-1141909" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 12: Matice záměn s&nbsp;relativními odchylkami.</i></p>

<p><div class="rs-tip-major">Poznámka: model měl tedy největší potíže
s&nbsp;rozpoznáním číslic 2, 3 a 9.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Využití modelu SVM (metoda podpůrných vektorů) pro klasifikaci obrázků</h2>

<p>Pro rozpoznání obrazů můžeme pochopitelně využít i sofistikovanější modely.
Jedním z&nbsp;takových modelů je i model založený na metodě podpůrných vektorů
neboli <i>Support Vector Machine (SVM)</i>. Interně tato metoda provádí
transformaci vstupů do odlišného prostoru, ve kterém se následně jednotlivé
hodnoty rozdělují tak, aby to odpovídalo požadované klasifikaci (tři druhy
kosatců, deset číslic atd.). Přepis původního skriptu tak, aby se využil model
založený na SVM, je relativně snadnou úlohou, i když interní výpočty jsou
v&nbsp;tomto případě již poměrně komplikované. Výsledek přitom vypadá
následovně:</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import ConfusionMatrixDisplay
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
<i># rozdělení dat</i>
trainX, testX, trainY, testY = train_test_split(X, y, test_size = 0.2)
&nbsp;
print()
print("TrainX:", trainX.shape)
print("TrainY:", trainY.shape)
print("TestX:", testX.shape)
print("TestY:", testY.shape)
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = svm.SVC(gamma=0.001)
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
&nbsp;
avg_score = scores.mean()
&nbsp;
<i># vypsani prumerneho skore</i>
print()
print("Accuracy:", avg_score)
print()
&nbsp;
<i># trening modelu</i>
classifier.fit(trainX, trainY)
&nbsp;
class_names = digits.target_names
&nbsp;
<i># absolutni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize=None,
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
plt.savefig("155_1.png")
&nbsp;
<i># vizualizace matice</i>
plt.show()
&nbsp;
<i># relativni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize="true",
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Výsledky rozpoznání číslic metodou podpůrných vektorů</h2>

<p>Opět se podívejme na výsledky, které získáme po spuštění skriptu <a
href="#k08">z&nbsp;předchozí kapitoly</a>. Nyní bude úspěšnost předpovědí
modelu mnohem větší &ndash; namísto necelých 93% jsme dosáhli téměř 98%:</p>

<pre>
Data: (1797, 64)
Obrázky: (1797, 8, 8)
&nbsp;
TrainX: (1437, 64)
TrainY: (1437,)
TestX: (360, 64)
TestY: (360,)
&nbsp;
Accuracy: 0.9782929857231533
</pre>

<p>Skript taktéž vypočítá a zobrazí matice záměn, které nyní vypadají
následovně:</p>

<pre>
[[42  0  0  0  0  0  0  0  0  0]
 [ 0 29  0  0  0  0  0  0  0  0]
 [ 0  0 39  0  0  0  0  0  0  0]
 [ 0  0  0 33  0  0  0  1  0  0]
 [ 0  0  0  0 48  0  0  0  0  0]
 [ 0  0  0  0  0 41  0  0  0  1]
 [ 0  0  0  0  0  0 32  0  0  0]
 [ 0  0  0  0  0  0  0 35  0  0]
 [ 0  0  0  0  0  0  0  0 19  0]
 [ 0  0  0  0  0  0  0  1  1 38]]
&nbsp;
[[1.         0.         0.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         1.         0.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         1.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.97058824 0.         0.  0.         0.02941176 0.         0.        ]
 [0.         0.         0.         0.         1.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.97619048 0.         0.         0.         0.02380952]
 [0.         0.         0.         0.         0.         0.  1.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         1.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         0.         1.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         0.025      0.025      0.95      ]]
</pre>

<p>Vizuální podoba matic záměn:</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-3.webp" class="image-1141912" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 13: Matice záměn s&nbsp;absolutními odchylkami.</i></p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-4.webp" class="image-1141915" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 14: Matice záměn s&nbsp;relativními odchylkami.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Využití modelu pro hledání K nejbližších sousedů</h2>

<p>Podobným způsobem můžeme nahradit předchozí model za model, který se snaží o
hledání K nejbližších sousedů v&nbsp;natrénované sadě n-rozměrných bodů. Tento
model je v&nbsp;knihovně scikit-learn implementován třídou
<strong>KNeighborsClassifier</strong>. Pokusme se tedy tento model použít pro
rozpoznání číslic v&nbsp;64prvkových vektorech:</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import ConfusionMatrixDisplay
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
<i># rozdělení dat</i>
trainX, testX, trainY, testY = train_test_split(X, y, test_size = 0.2)
&nbsp;
print()
print("TrainX:", trainX.shape)
print("TrainY:", trainY.shape)
print("TestX:", testX.shape)
print("TestY:", testY.shape)
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = <strong>KNeighborsClassifier(n_neighbors=5)</strong>
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
&nbsp;
avg_score = scores.mean()
&nbsp;
<i># vypsani prumerneho skore</i>
print()
print("Accuracy:", avg_score)
print()
&nbsp;
<i># trening modelu</i>
classifier.fit(trainX, trainY)
&nbsp;
class_names = digits.target_names
&nbsp;
<i># absolutni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize=None,
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
plt.savefig("156_1.png")
&nbsp;
<i># vizualizace matice</i>
plt.show()
&nbsp;
<i># relativni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize="true",
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Výsledky rozpoznání číslic modelem hledajícím K nejbližších sousedů</h2>

<p>Přesnost předpovědí modelu <i>KNeighborsClassifier</i> je poměrně vysoká
&ndash; přes 97%, což znamená, že jen tři procenta číslic se nerozeznají.
Ostatně se podívejme, jak výsledky vypadají:</p>

<pre>
Data: (1797, 64)
Obrázky: (1797, 8, 8)
&nbsp;
TrainX: (1437, 64)
TrainY: (1437,)
TestX: (360, 64)
TestY: (360,)
&nbsp;
Accuracy: 0.9716294227188081
</pre>

<p>Matice záměn opět obsahuje největší hodnoty na hlavní diagonále, což je
ostatně jen dobře (ideální by bylo získat čistě diagonální matici):</p>

<pre>
[[41  0  0  0  0  0  0  0  0  0]
 [ 0 36  0  0  0  0  0  0  0  0]
 [ 0  0 38  0  0  0  0  0  0  0]
 [ 0  0  0 35  0  0  0  0  0  0]
 [ 0  0  0  0 35  0  0  0  0  0]
 [ 0  0  0  0  0 30  1  0  0  1]
 [ 0  0  0  0  0  0 41  0  0  0]
 [ 0  0  0  0  0  0  0 31  0  0]
 [ 0  1  0  1  0  0  0  1 36  0]
 [ 0  0  0  0  1  0  0  0  0 31]]
</pre>

<pre>
[[1.         0.         0.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         1.         0.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         1.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         1.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         1.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.9375 0.03125    0.         0.         0.03125   ]
 [0.         0.         0.         0.         0.         0.  1.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         1.         0.         0.        ]
 [0.         0.02564103 0.         0.02564103 0.         0.  0.         0.02564103 0.92307692 0.        ]
 [0.         0.         0.         0.         0.03125    0.  0.         0.         0.         0.96875   ]]
</pre>

<p>Vizuální podoba matic záměn:</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-5.webp" class="image-1141918" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 15: Matice záměn s&nbsp;absolutními odchylkami.</i></p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-6.webp" class="image-1141921" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 16: Matice záměn s&nbsp;relativními odchylkami.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Rozpoznání rastrových obrázků neuronovou sítí</h2>

<p>Samozřejmě nám nic nebrání namísto &bdquo;obyčejných modelů&ldquo; použít
pro rozpoznání číslic neuronovou síť. Vzhledem k&nbsp;tomu, že provádíme
klasifikaci (výstupem má být jedna celočíselná hodnota 0 až 9), použijeme pro
realizaci neuronové sítě třídu <strong>MLPClassifier</strong>, s&nbsp;níž jsme
se již seznámili předminule i minule. Upravme si tedy demonstrační příklad tak,
aby se použil model založený na neuronové síti s&nbsp;výchozí konfigurací (100
neuronů v&nbsp;jediné skryté vrstvě):</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
<i># model zalozeny na neuronove siti</i>
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import ConfusionMatrixDisplay
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
<i># rozdělení dat</i>
trainX, testX, trainY, testY = train_test_split(X, y, test_size = 0.2)
&nbsp;
print()
print("TrainX:", trainX.shape)
print("TrainY:", trainY.shape)
print("TestX:", testX.shape)
print("TestY:", testY.shape)
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = <strong>MLPClassifier(max_iter=5000)</strong>
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
&nbsp;
avg_score = scores.mean()
&nbsp;
<i># vypsani prumerneho skore</i>
print()
print("Accuracy:", avg_score)
print()
&nbsp;
<i># trening modelu</i>
classifier.fit(trainX, trainY)
&nbsp;
class_names = digits.target_names
&nbsp;
<i># absolutni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize=None,
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
plt.savefig("157_1.png")
&nbsp;
<i># vizualizace matice</i>
plt.show()
&nbsp;
<i># relativni hodnoty</i>
disp = ConfusionMatrixDisplay.from_estimator(
    classifier,
    testX,
    testY,
    display_labels=class_names,
    cmap=plt.cm.Blues,
    normalize="true",
)
&nbsp;
<i># zobrazeni matice</i>
print(disp.confusion_matrix)
&nbsp;
<i># ulozeni vysledku</i>
plt.savefig("157_2.png")
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Výsledky rozpoznání číslic neuronovou sítí</h2>

<p>Zajímavé je, že model založený na neuronové síti má přesnost rozpoznání
pouze 95%, zatímco předchozí (interně jednodušší) model má přesnost vyšší o
celá dvě procenta:</p>

<pre>
Accuracy: 0.9493482309124767
</pre>

<p>Opět se tedy ukazuje, že neuronové sítě pochopitelně mají své využití (a
navíc si je ještě dokážeme doladit), ovšem v&nbsp;mnoha případech je jednodušší
sáhnout po interně jednodušším modelu.</p>

<p>Struktura neuronové sítě: 3 vrstvy, ve vstupní vrstvě 64 neuronů, ve skryté
vrstvě 100 neuronů a konečně ve výstupní vrstvě je deset neuronů:</p>

<pre>
Features: 64
Layers:   3
Outputs:  10
Weights:
         0 (64, 100)
         1 (100, 10)
Biases:
         0 (100,)
         1 (10,)
</pre>

<p>Vypočítat a zobrazit si můžeme i matici záměn &ndash; jak s&nbsp;absolutními
hodnotami, tak i s&nbsp;hodnotami relativními:</p>

<pre>
[[31  0  0  0  0  0  1  0  0  0]
 [ 0 37  0  0  0  0  0  0  0  0]
 [ 0  0 35  0  0  0  0  0  0  0]
 [ 0  0  0 36  0  0  0  0  0  0]
 [ 0  0  0  0 32  0  0  0  1  0]
 [ 0  0  0  0  0 33  1  0  0  2]
 [ 0  0  0  0  0  0 35  0  0  0]
 [ 0  0  0  0  0  0  0 35  0  0]
 [ 0  2  0  0  0  0  0  0 33  0]
 [ 0  0  0  0  0  1  0  0  1 44]]
&nbsp;
[[0.96875    0.         0.         0.         0.         0.  0.03125    0.         0.         0.        ]
 [0.         1.         0.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         1.         0.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         1.         0.         0.  0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.96969697 0.  0.         0.         0.03030303 0.        ]
 [0.         0.         0.         0.         0.         0.91666667 0.02777778 0.         0.         0.05555556]
 [0.         0.         0.         0.         0.         0.  1.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.         0.  0.         1.         0.         0.        ]
 [0.         0.05714286 0.         0.         0.         0.  0.         0.         0.94285714 0.        ]
 [0.         0.         0.         0.         0.         0.02173913 0.         0.         0.02173913 0.95652174]]
</pre>

<p>Vizuální podoba matic záměn:</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-7.webp" class="image-1141924" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 17: Matice záměn s&nbsp;absolutními odchylkami.</i></p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-8.webp" class="image-1141927" width="640" height="480" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 18: Matice záměn s&nbsp;relativními odchylkami.</i></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Zobrazení původních obrázků i predikovaných výsledků ve vizuální podobě</h2>

<p>Kromě matic záměn si můžeme vizualizovat i jednotlivé číslice
v&nbsp;rastrové podobě (vstup) a odpovídající predikované výsledky. Jeden
z&nbsp;možných způsobů, jak tento úkol řešit, je ukázán v&nbsp;dalším
demonstračním příkladu, v&nbsp;němž je do jednoho grafu vykreslena mřížka
s&nbsp;25 obrázky, které jsou popsány výsledkem predikce &ndash; tj.&nbsp;jakou
číslici na obrázku &bdquo;vidí&ldquo; model. Některé odhady jsou přesné, jiné
nikoli:</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
for_training = len(y) * 8 // 10
print("Vzorků pro trénink:", for_training)
&nbsp;
<i># rozdělení dat</i>
trainX = X[:for_training]
testX = X[for_training:]
trainY = y[:for_training]
testY = y[for_training:]
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
classifier = LogisticRegression(max_iter=1000)
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
avg_score = scores.mean()
print("Accuracy:", avg_score)
&nbsp;
<i># trening modelu</i>
classifier.fit(trainX, trainY)
&nbsp;
predicted_labels = classifier.predict(testX)
images = digits.images[for_training:]
&nbsp;
fig = plt.figure(figsize=(6.4, 8.0))
&nbsp;
<i># zobrazit patnáct výsledků</i>
for i in range(25):
    predicted_digit = classifier.predict([testX[i]])[0]
    correct_digit = testY[i]
    print(predicted_digit, correct_digit)
    image = images[i]
    plt.subplot(5, 5, i+1)
    plt.axis("off")
    <i># zobrazení obrázku</i>
    plt.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
    <i># a přidání predikce - o jakou číslici se jedná</i>
    plt.title("Predict: %i" % predicted_digit)
&nbsp;
<i># nakonec vše uložíme a zobrazíme</i>
plt.savefig("158.png")
plt.show()
</pre>

<p>A takto bude vypadat graf s&nbsp;oněmi 25 číslicemi:</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-9.webp" class="image-1141930" width="640" height="800" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 19: 25 ručně psaných číslic a příslušné odhady modelu.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Zobrazení těch číslic, u nichž se model spletl</h2>

<p>Mnohem zajímavější však bude zjistit, které konkrétní číslice model naopak
nerozeznal. To můžeme realizovat nepatrnou úpravou předchozího skriptu, a to
tak, že vybereme jen ty rastrové obrázky, u nichž se model spletl. Takové
obrázky si necháme zobrazit a současně si vypíšeme i predikovanou a korektní
číslici, která se na obrázku nachází (protože mnohdy to nerozezná ani
člověk):</p>

<pre>
wrong = 0
i = 0
while wrong &lt; 25:
    predicted_digit = classifier.predict([testX[i]])[0]
    correct_digit = testY[i]
    if predicted_digit != correct_digit:
        print(predicted_digit, correct_digit)
        image = images[i]
        wrong += 1
        plt.subplot(5, 5, wrong)
        plt.axis("off")
        <i># zobrazení obrázku</i>
        plt.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
        <i># a přidání predikce - o jakou číslici se jedná</i>
        plt.title(f"{predicted_digit} &lt;&gt; {correct_digit}")
    i += 1
</pre>

<p>Celý skript po výše uvedené úpravě bude vypadat následovně:</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
for_training = len(y) * 6 // 10
print("Vzorků pro trénink:", for_training)
&nbsp;
<i># rozdělení dat</i>
trainX = X[:for_training]
testX = X[for_training:]
trainY = y[:for_training]
testY = y[for_training:]
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
<i>#classifier = LogisticRegression(max_iter=1000)</i>
classifier = svm.SVC(gamma=0.001)
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
avg_score = scores.mean()
print("Accuracy:", avg_score)
&nbsp;
<i># trening modelu</i>
classifier.fit(trainX, trainY)
&nbsp;
predicted_labels = classifier.predict(testX)
images = digits.images[for_training:]
&nbsp;
fig = plt.figure(figsize=(6.4, 8.0))
&nbsp;
<i># zobrazit patnáct výsledků</i>
wrong = 0
i = 0
while wrong &lt; 25:
    predicted_digit = classifier.predict([testX[i]])[0]
    correct_digit = testY[i]
    if predicted_digit != correct_digit:
        print(predicted_digit, correct_digit)
        image = images[i]
        wrong += 1
        plt.subplot(5, 5, wrong)
        plt.axis("off")
        <i># zobrazení obrázku</i>
        plt.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
        <i># a přidání predikce - o jakou číslici se jedná</i>
        plt.title(f"{predicted_digit} &lt;&gt; {correct_digit}")
    i += 1
&nbsp;
<i># nakonec vše uložíme a zobrazíme</i>
plt.savefig("159.png")
plt.show()
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Graf s&nbsp;číslicemi, které nebyly správně rozeznány</h2>

<p>Z&nbsp;výsledného grafu, v&nbsp;němž jsou zobrazeny číslice, které model
rozeznal nesprávně, můžeme vidět určité vzory, tj.&nbsp;&bdquo;typy&ldquo;
zkreslení, s&nbsp;nimiž si model neví rady a které špatně odhadne (a navíc
prakticky vždy špatně vrátí stejnou číslici):</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-10.webp" class="image-1141933" width="640" height="800" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 20: Graf s&nbsp;číslicemi, které nebyly modelem správně rozeznány.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Zobrazení číslic, které nebyly korektně rozeznány neuronovou sítí</h2>

<p>Naprosto stejným způsobem si můžeme nechat zobrazit číslice, které
<i>ne</i>byly korektně rozpoznány neuronovou sítí, tj.&nbsp;tím nejsložitějším
modelem, který až doposud máme k&nbsp;dispozici. Skript tedy upravíme jen
nepatrně, konkrétně tak, aby se použil model realizovaný třídou
<strong>MLPClassifier</strong>, který ovšem nemá tak dobrou predikční
schopnost, jako například <strong>SVM</strong> nebo
<strong>KNeighborsClassifier</strong>, tedy alespoň v&nbsp;případě, že
výslednou neuronovou síť nebudeme dále &bdquo;ladit&ldquo;:</p>

<pre>
<i># Rozpoznání obrazu s využitím knihovny scikit-learn</i>
&nbsp;
import matplotlib.pyplot as plt
import numpy as np
&nbsp;
from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
&nbsp;
<i># Databáze ručně zapsaných číslic</i>
from sklearn.datasets import load_digits
&nbsp;
<i># načtení obrázků, s nimiž budeme dále pracovat</i>
digits = load_digits()
&nbsp;
<i># zjištění základních informací o obrázcích</i>
print("Description:", digits.DESCR)
&nbsp;
print("Data:", digits.data.shape)
print("Obrázky:", digits.images.shape)
&nbsp;
<i># X je matice (feature matrix)</i>
X = digits.data
&nbsp;
<i># y je vektor (response vector)</i>
y = digits.target
&nbsp;
for_training = len(y) * 6 // 10
print("Vzorků pro trénink:", for_training)
&nbsp;
<i># rozdělení dat</i>
trainX = X[:for_training]
testX = X[for_training:]
trainY = y[:for_training]
testY = y[for_training:]
&nbsp;
<i># provést klasifikaci</i>
<i># konstrukce klasifikatoru</i>
<i># (s hyperparametrem)</i>
<i>#classifier = LogisticRegression(max_iter=1000)</i>
classifier = MLPClassifier(max_iter=5000)
&nbsp;
<i># vypocet skore</i>
scores = cross_val_score(classifier, X, y, cv=10, scoring="accuracy")
avg_score = scores.mean()
print("Accuracy:", avg_score)
&nbsp;
<i># trening modelu</i>
classifier.fit(trainX, trainY)
&nbsp;
predicted_labels = classifier.predict(testX)
images = digits.images[for_training:]
&nbsp;
fig = plt.figure(figsize=(6.4, 8.0))
&nbsp;
<i># zobrazit 25 výsledků</i>
wrong = 0
i = 0
while wrong &lt; 25:
    predicted_digit = classifier.predict([testX[i]])[0]
    correct_digit = testY[i]
    if predicted_digit != correct_digit:
        print(predicted_digit, correct_digit)
        image = images[i]
        wrong += 1
        plt.subplot(5, 5, wrong)
        plt.axis("off")
        <i># zobrazení obrázku</i>
        plt.imshow(image, cmap=plt.cm.gray_r, interpolation="nearest")
        <i># a přidání predikce - o jakou číslici se jedná</i>
        plt.title(f"{predicted_digit} &lt;&gt; {correct_digit}")
    i += 1
&nbsp;
<i># nakonec vše uložíme a zobrazíme</i>
plt.savefig("160.png")
plt.show()
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Číslice, které nebyly rozpoznány neuronovou sítí</h2>

<p>Při porovnání obrázků číslo 20 a 21 je zřejmé, že neuronová síť
<i>ne</i>dokáže rozeznat odlišné vzory v&nbsp;porovnání s&nbsp;jednoduššími
modely. To je zajímavé zjištění. Příště si ukážeme, jak kvalitu neuronové sítě
ovlivňuje volba <i>aktivační funkce</i>, což je většinou globální nastavení pro
celou neuronovou síť (i když někdy může být vhodnější zvolit si vlastní
aktivační funkci pro každou vrstvu zvlášť).</p>

<img src="https://i.iinfo.cz/images/611/scikit-learn-7-11.webp" class="image-1141936" width="640" height="800" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 21: Graf s&nbsp;číslicemi, které nebyly neuronovou sítí správně rozeznány.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady využívající knihovnu Scikit-learn lze nalézt
v&nbsp;repositáři <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady i na (Jupyter) diáře s&nbsp;postupem
výpočtů a analýz:</p>

<table>
<tr><th>#<th>Příklad</th><th>Stručný popis</th><th>Adresa příkladu</th></tr></i>
<tr><td> 1</td><td>01_show_matrix.py</td><td>kooperace mezi knihovnami Matplotlib a NumPy: vizualizace obsahu 2D matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/01_show_matrix.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/01_show_matrix.py</a></td></tr>
<tr><td> 2</td><td>02_get_digits.py</td><td>datová množina obsahující naskenované ručně napsané číslice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/02_get_digits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/02_get_digits.py</a></td></tr>
<tr><td> 3</td><td>03_get_features.py</td><td>další atributy datové množiny, které použijeme při trénování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/03_get_features.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/03_get_features.py</a></td></tr>
<tr><td> 4</td><td>04_get_images.py</td><td>přečtení a následné vykreslení jednotlivých ručně nakreslených číslic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/04_get_images.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/04_get_images.py</a></td></tr>
<tr><td> 5</td><td>05_show_grayscale_matrix.py</td><td>odstranění umělé aplikované barvové palety (obrázky ve stupních šedi)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/05_show_grayscale_matrix.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/05_show_grayscale_matrix.py</a></td></tr>
<tr><td> 6</td><td>06_grayscale_images.py</td><td>vykreslení ručně nakreslených číslic ve formě obrázků ve stupních šedi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/06_grayscale_images.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/06_grayscale_images.py</a></td></tr>
<tr><td> 7</td><td>07_multiplot.py</td><td>rozdělení plochy grafu do oblastí; vykreslení více obrázků do jediného grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/07_multiplot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/07_multiplot.py</a></td></tr>
<tr><td> 8</td><td>08_model_preperation_1.py</td><td>obrázky s&nbsp;jejich ohodnocením</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/08_model_preperation_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/08_model_preperation_1.py</a></td></tr>
<tr><td> 9</td><td>09_training_set.py</td><td>příprava dat pro trénink</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/09_training_set.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/09_training_set.py</a></td></tr>
<tr><td>10</td><td>10_classification.py</td><td>klasifikace obrázků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/10_classification.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/10_classification.py</a></td></tr>
<tr><td>11</td><td>11_results.py</td><td>vykreslení obrázků společně s&nbsp;jejich klasifikací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/11_results.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/11_results.py</a></td></tr>
<tr><td>12</td><td>12_change_training_set.py</td><td>změna poměru rozdělení dat na tréninkovou a testovací množinu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/12_change_training_set.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/12_change_training_set.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>13_blobs.py</td><td>použití funkce <strong>make_blobs</strong> pro vygenerování sady bodů v&nbsp;rovině sdružených do oblastí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/13_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/13_blobs.py</a></td></tr>
<tr><td>14</td><td>14_swap_coords.py</td><td>úprava předchozího příkladu: prohození souřadnic na osách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/14_swap_coords.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/14_swap_coords.py</a></td></tr>
<tr><td>15</td><td>15_blobs_scatter_plot.py</td><td>základní podoba bodového diagramu (<i>scatter plot</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/15_blobs_scatter_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/15_blobs_scatter_plot.py</a></td></tr>
<tr><td>16</td><td>16_blobs_scatter_plot.py</td><td>úprava bodového diagramu při zobrazení většího množství bodů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/16_blobs_scatter_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/16_blobs_scatter_plot.py</a></td></tr>
<tr><td>17</td><td>17_colorized_blobs.py</td><td>obarvení bodů podle oblastí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/17_colorized_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/17_colorized_blobs.py</a></td></tr>
<tr><td>18</td><td>18_k-means.py</td><td>základní použití algoritmu K-means pro clustering</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/18_k-means.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/18_k-means.py</a></td></tr>
<tr><td>19</td><td>19_combination.py</td><td>zobrazení centroidů společně s&nbsp;původními body</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/19_combination.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/19_combination.py</a></td></tr>
<tr><td>20</td><td>20_combinations.py</td><td>vizualizace clusteringu původní množiny bodů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/20_combinations.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/20_combinations.py</a></td></tr>
<tr><td>21</td><td>21_other_settings.py</td><td>vizualizace clusteringu původní množiny bodů pro odlišnou množinu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/21_other_settings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/21_other_settings.py</a></td></tr>
<tr><td>22</td><td>22_random_points.py</td><td>clustering pro náhodná data</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/22_random_points.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/22_random_points.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>23</td><td>23_circles.py</td><td>pseudonáhodné rozmístění bodů do kružnic, menší náhodnost výsledku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/23_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/23_circles.py</a></td></tr>
<tr><td>24</td><td>24_more_noise_circles.py</td><td>pseudonáhodné rozmístění bodů do kružnic, větší náhodnost výsledku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/24_more_noise_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/24_more_noise_circles.py</a></td></tr>
<tr><td>25</td><td>25_moons.py</td><td>pseudonáhodné rozmístění bodů do tvaru dvou půlměsíců, menší náhodnost</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/25_moons.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/25_moons.py</a></td></tr>
<tr><td>26</td><td>26_more_noisy_moons.py</td><td>pseudonáhodné rozmístění bodů do tvaru dvou půlměsíců, větší náhodnost</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/26_more_noisy_moons.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/26_more_noisy_moons.py</a></td></tr>
<tr><td>27</td><td>27_circles_kmeans.py</td><td>výsledek clusteringu provedeného algoritmem K-means na &bdquo;kružnice&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/27_circles_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/27_circles_kmeans.py</a></td></tr>
<tr><td>28</td><td>28_moons_kmeans.py</td><td>výsledek clusteringu provedeného algoritmem K-means na &bdquo;půlměsíce&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/28_moons_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/28_moons_kmeans.py</a></td></tr>
<tr><td>29</td><td>29_blobs_spectral_clustering.py</td><td>spectral clustering pro body rozmístěné pomocí <strong>make_blobs</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/29_blobs_spectral_clustering.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/29_blobs_spectral_clustering.py</a></td></tr>
<tr><td>30</td><td>30_circles_spectral_clustering.py</td><td>spectral clustering pro body rozmístěné do kružnic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/30_circles_spectral_clustering.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/30_circles_spectral_clustering.py</a></td></tr>
<tr><td>31</td><td>31_moons_spectral_clustering.py</td><td>spectral clustering pro body rozmístěné do půlměsíců </td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/31_moons_spectral_clustering.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/31_moons_spectral_clustering.py</a></td></tr>
<tr><td>32</td><td>32_moons_spectral_clustering_limits.py</td><td>vyhledání limitů algoritmu spectral clustering</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/32_moons_spectral_clustering_limits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/32_moons_spectral_clustering_limits.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>33_particles_load.py</td><td>načtení souřadnic částic uložených v&nbsp;souboru formátu CSV</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/33_particles_load.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/33_particles_load.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>34</td><td>34_lorenz_attractor.py</td><td>zobrazení Lorenzova atraktoru formou bodů propojených úsečkami</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/34_lorenz_attractor.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/34_lorenz_attractor.py</a></td></tr>
<tr><td>35</td><td>35_lorenz_attractor_points.py</td><td>Lorenzův atraktor vykreslený formou jednotlivých bodů s&nbsp;definovaným stylem zobrazení a velikostí stopy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/35_lorenz_attractor_points.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/35_lorenz_attractor_points.py</a></td></tr>
<tr><td>36</td><td>36_blobs_3d.py</td><td>vygenerování a zobrazení sady bodů v&nbsp;3D prostoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/36_blobs_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/36_blobs_3d.py</a></td></tr>
<tr><td>37</td><td>37_spread_blobs_3d.py</td><td>vygenerování a zobrazení sady bodů v&nbsp;3D prostoru, odlišné parametry při generování</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/37_spread_blobs_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/37_spread_blobs_3d.py</a></td></tr>
<tr><td>38</td><td>38_views.py</td><td>různé pohledy na 3D graf</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/38_views.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/38_views.py</a></td></tr>
<tr><td>39</td><td>39_colorized_3d_blobs.py</td><td>obarvení bodů v&nbsp;prostoru na základě vstupních dat</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/39_colorized_3d_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/39_colorized_3d_blobs.py</a></td></tr>
<tr><td>40</td><td>40_kmeans_3d_blobs.py</td><td>shluková analýza v&nbsp;3D prostoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/40_kmeans_3d_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/40_kmeans_3d_blobs.py</a></td></tr>
<tr><td>41</td><td>41_kmeans_spread_3d_blobs.py</td><td>shluková analýza v&nbsp;3D prostoru pro odlišnou množinu bodů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/41_kmeans_spread_3d_blobs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/41_kmeans_spread_3d_blobs.py</a></td></tr>
<tr><td>42</td><td>42_kmeans_random_3d.py</td><td>shluková analýza pro body rozmístěné zcela náhodně v&nbsp;omezeném prostoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/42_kmeans_random_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/42_kmeans_random_3d.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>43</td><td>43_speed_measurements.py</td><td>benchmark pro postupně rostoucí počet bodů tvořících shluky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/43_speed_measurements.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/43_speed_measurements.py</a></td></tr>
<tr><td>44</td><td>44_speed_measurements.py</td><td>benchmark pro postupně rostoucí počet bodů rozmístěných náhodně</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/44_speed_measurements.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/44_speed_measurements.py</a></td></tr>
<tr><td>45</td><td>45_speed_measurements.py</td><td>benchmark pro stále stejný počet bodů, u jejichž rozmístění v&nbsp;prostoru se používá stále větší směrodatná odchylka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/45_speed_measurements.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/45_speed_measurements.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>46_iris_dataset.py</td><td>načtení datové kolekce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/46_iris_dataset.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/46_iris_dataset.py</a></td></tr>
<tr><td>47</td><td>47_iris_description.py</td><td>metadata o datové kolekci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/47_iris_description.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/47_iris_description.py</a></td></tr>
<tr><td>48</td><td>48_iris_data.py</td><td>tvar dat &ndash; počet záznamů a počet proměnných</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/48_iris_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/48_iris_data.py</a></td></tr>
<tr><td>49</td><td>49_iris_targets.py</td><td>jména atributů, vztah mezi numerickou hodnotou atributu a jeho jménem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/49_iris_targets.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/49_iris_targets.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>50_iris_scatter_plot_1.py</td><td>korelační diagram pro dvojici vybraných proměnných</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/50_iris_scatter_plot_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/50_iris_scatter_plot_1.py</a></td></tr>
<tr><td>51</td><td>51_iris_scatter_plot_2.py</td><td>příprava pro tvorbu složitějších grafů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/51_iris_scatter_plot_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/51_iris_scatter_plot_2.py</a></td></tr>
<tr><td>52</td><td>52_iris_mutliplot.py</td><td>mřížka obsahující více korelačních diagramů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/52_iris_mutliplot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/52_iris_mutliplot.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>53</td><td>53_iris_histograms.py</td><td>zobrazení základního histogramu pro data v&nbsp;sadě Iris</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/53_iris_histograms.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/53_iris_histograms.py</a></td></tr>
<tr><td>54</td><td>54_iris_histograms.py</td><td>úprava histogramu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/54_iris_histograms.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/54_iris_histograms.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>55</td><td>55_pca.py</td><td>analýza hlavních komponent (PCA), výsledek zobrazený v&nbsp;2D grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/55_pca.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/55_pca.py</a></td></tr>
<tr><td>56</td><td>56_pca_3d.py</td><td>analýza hlavních komponent (PCA), výsledek zobrazený v&nbsp;3D grafu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/56_pca_3d.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/56_pca_3d.py</a></td></tr>
<tr><td>57</td><td>57_kmeans.py</td><td>základní shluková analýza</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/57_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/57_kmeans.py</a></td></tr>
<tr><td>58</td><td>58_multiple_kmeans.py</td><td>větší množství výsledků shlukové analýzy pro různé atributy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/58_multiple_kmeans.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/58_multiple_kmeans.py</a></td></tr>
<tr><td>59</td><td>59_kmeans_errors.py</td><td>korektní a nekorektní výsledky základní shlukové analýzy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/59_kmeans_errors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/59_kmeans_errors.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>60</td><td>60_basic_classifier.py</td><td>aplikace jednoduchého modelu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/60_basic_classifier.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/60_basic_classifier.py</a></td></tr>
<tr><td>61</td><td>61_changed_model_parameters.py</td><td>změna parametrů modelu pro zjištění druhů rostil</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/61_changed_model_parameters.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/61_changed_model_parameters.py</a></td></tr>
<tr><td>62</td><td>62_different_model.py</td><td>použití odlišného modelu pro zjištění druhů rostlin</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/62_different_model.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/62_different_model.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>63</td><td>63_verify_on_whole_data_1.py</td><td>otestování naučeného modelu s&nbsp;využitím tréninkových dat</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/63_verify_on_whole_data_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/63_verify_on_whole_data_1.py</a></td></tr>
<tr><td>64</td><td>64_verify_on_whole_data_2.py</td><td>využití funkce <strong>metrics.accuracy_score</strong> pro zjištění kvality modelu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/64_verify_on_whole_data_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/64_verify_on_whole_data_2.py</a></td></tr>
<tr><td>65</td><td>65_basic_comparison.py</td><td>porovnání vlastností různých modelů (prozatím nekorektní řešení)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/65_basic_comparison.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/65_basic_comparison.py</a></td></tr>
<tr><td>66</td><td>66_training_testing_split_1.py</td><td>rozdělení datové sady na trénovací data a testovací data (základní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/66_training_testing_split_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/66_training_testing_split_1.py</a></td></tr>
<tr><td>67</td><td>67_training_testing_split_2.py</td><td>rozdělení datové sady na trénovací data a testovací data (náhodné rozdělení sady)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/67_training_testing_split_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/67_training_testing_split_2.py</a></td></tr>
<tr><td>68</td><td>68_training_testing_split_3.py</td><td>rozdělení datové sady na trénovací data a testovací data (využití vestavěné funkce)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/68_training_testing_split_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/68_training_testing_split_3.py</a></td></tr>
<tr><td>69</td><td>69_better_comparison.py</td><td>vylepšené porovnání vlastností různých modelů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/69_better_comparison.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/69_better_comparison.py</a></td></tr>
<tr><td>70</td><td>70_multiple_runs.py</td><td>vliv generátoru náhodných čísel na změřené výsledky</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/70_multiple_runs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/70_multiple_runs.py</a></td></tr>
<tr><td>71</td><td>71_stable_multiple_runs.py</td><td>generátor náhodných čísel a použití hodnoty <strong>random_state</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/71_stable_multiple_runs.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/71_stable_multiple_runs.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>72</td><td>72_housings_dataset.py</td><td>načtení datové sady <i>California housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/72_housings_dataset.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/72_housings_dataset.py</a></td></tr>
<tr><td>73</td><td>73_housings_dataset_description.py</td><td>metainformace o datové sadě <i>California housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/73_housings_dataset_description.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/73_housings_dataset_description.py</a></td></tr>
<tr><td>74</td><td>74_housings_data.py</td><td>n-rozměrné pole s&nbsp;atributy jednotlivých domů/bloků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/74_housings_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/74_housings_data.py</a></td></tr>
<tr><td>75</td><td>75_housings_targets.py</td><td>jména atributů, ceny domů atd.</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/75_housings_targets.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/75_housings_targets.py</a></td></tr>
<tr><td>76</td><td>76_housings_scatter_plot.py</td><td>korelační diagram pro dvojici vybraných proměnných</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/76_housings_scatter_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/76_housings_scatter_plot.py</a></td></tr>
<tr><td>77</td><td>77_housings_mutliplot.py</td><td>korelační diagram pro všechny kombinace dvojic proměnných</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/77_housings_mutliplot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/77_housings_mutliplot.py</a></td></tr>
<tr><td>78</td><td>78_scatter.py</td><td>dvourozměrné hodnoty reprezentované jako dvojice atributů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/78_scatter.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/78_scatter.py</a></td></tr>
<tr><td>79</td><td>79_linear_regression_gen_data.py</td><td>model <i>LinearRegression</i> nad uměle vytvořenými daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/79_linear_regression_gen_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/79_linear_regression_gen_data.py</a></td></tr>
<tr><td>80</td><td>80_linear_regression_predictions.py</td><td>predikce modelu provádějícího lineární regresi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/80_linear_regression_predictions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/80_linear_regression_predictions.py</a></td></tr>
<tr><td>81</td><td>81_linear_regression_random_data.py</td><td>chování modelu pro zcela náhodná data</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/81_linear_regression_random_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/81_linear_regression_random_data.py</a></td></tr>
<tr><td>82</td><td>82_linear_regression_housings.py</td><td>model <i>LinearRegression</i> pro datovou sadu <i>California housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/82_linear_regression_housings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/82_linear_regression_housings.py</a></td></tr>
<tr><td>83</td><td>83_polynomial_regression_gen_data.py</td><td>polynomiální regrese (základní příklad)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/83_polynomial_regression_gen_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/83_polynomial_regression_gen_data.py</a></td></tr>
<tr><td>84</td><td>84_polynomial_regression_housings.py</td><td>polynomiální regrese a datová sada <i>California housings</i>, první příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/84_polynomial_regression_housings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/84_polynomial_regression_housings.py</a></td></tr>
<tr><td>85</td><td>85_polynomial_regression_housings_2.py</td><td>polynomiální regrese a datová sada <i>California housings</i>, druhý příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/85_polynomial_regression_housings_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/85_polynomial_regression_housings_2.py</a></td></tr>
<tr><td>86</td><td>86_polynomial_regression_housings_3.py</td><td>polynomiální regrese a datová sada <i>California housings</i>, třetí příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/86_polynomial_regression_housings_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/86_polynomial_regression_housings_3.py</a></td></tr>
<tr><td>87</td><td>87_linear_regression_errors.py</td><td>výpočet chyby a skóre modelu lineární regrese</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/87_linear_regression_errors.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/87_linear_regression_errors.py</a></td></tr>
<tr><td>88</td><td>88_linear_regression_non_linear_data.py</td><td>lineární regrese nad nelineárními daty</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/88_linear_regression_non_linear_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/88_linear_regression_non_linear_data.py</a></td></tr>
<tr><td>89</td><td>89_polynomial_regression_error.py</td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/89_polynomial_regression_error.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/89_polynomial_regression_error.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>90</td><td>90_housings_prediction_1.py</td><td>regresní analýza nad daty <i>California housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/90_housings_prediction_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/90_housings_prediction_1.py</a></td></tr>
<tr><td>91</td><td>91_housings_prediction_2.py</td><td>korektní natrénování modelu pro regresi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/91_housings_prediction_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/91_housings_prediction_2.py</a></td></tr>
<tr><td>92</td><td>92_housings_prediction_3.py</td><td>omezení množství atributů (proměnných), na kterých je model natrénován</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/92_housings_prediction_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/92_housings_prediction_3.py</a></td></tr>
<tr><td>93</td><td>93_housings_prediction_errors_1.py</td><td>chybně natrénovaný model při náhodné volbě dat</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/93_housings_prediction_errors_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/93_housings_prediction_errors_1.py</a></td></tr>
<tr><td>94</td><td>94_housings_prediction_errors_2.py</td><td>omezení atributů + chybně natrénovaný model</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/94_housings_prediction_errors_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/94_housings_prediction_errors_2.py</a></td></tr>
<tr><td>95</td><td>95_housings_histograms.py</td><td>histogramy pro jednotlivé atributy (proměnné)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/95_housings_histograms.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/95_housings_histograms.py</a></td></tr>
<tr><td>96</td><td>96_housings_statistic.py</td><td>statistické údaje pro jednotlivé atributy (proměnné)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/96_housings_statistic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/96_housings_statistic.py</a></td></tr>
<tr><td>97</td><td>97_housings_statistic_normalized.py</td><td>statistické údaje získané po normalizaci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/97_housings_statistic_normalized.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/97_housings_statistic_normalized.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 98</td><td>98_k_fold_help.py</td><td>zobrazení nápovědy ke třídě s&nbsp;realizací k-foldingu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/98_k_fold_help.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/98_k_fold_help.py</a></td></tr>
<tr><td> 99</td><td>99_k_fold_old.py</td><td>původní (nepodporovaná) varianta provedení k-foldingu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/99_k_fold_old.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/99_k_fold_old.py</a></td></tr>
<tr><td>100</td><td>100_k_fold_1.py</td><td>interní chování algoritmu k-foldingu (základní parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/100_k_fold_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/100_k_fold_1.py</a></td></tr>
<tr><td>101</td><td>101_k_fold_2.py</td><td>interní chování algoritmu k-foldingu (odlišné parametry)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/101_k_fold_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/101_k_fold_2.py</a></td></tr>
<tr><td>102</td><td>102_k_fold_selection.py</td><td>k-folding a výběr dat pro otestování modelů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/102_k_fold_selection.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/102_k_fold_selection.py</a></td></tr>
<tr><td>103</td><td>103_average_score.py</td><td>realizace výpočtu průměrného skóre pro otestování modelů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/103_average_score.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/103_average_score.py</a></td></tr>
<tr><td>104</td><td>104_hyperparams_score.py</td><td>změna hyperparametrů s&nbsp;výpočtem průměrného skóre (tabulka)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/104_hyperparams_score.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/104_hyperparams_score.py</a></td></tr>
<tr><td>105</td><td>105_hyperparams_score_plot.py</td><td>změna hyperparametrů s&nbsp;výpočtem průměrného skóre (graf)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/105_hyperparams_score_plot.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/105_hyperparams_score_plot.py</a></td></tr>
<tr><td>106</td><td>106_model_selection.py</td><td>výběr nejlepšího modelu s&nbsp;využitím k-foldingu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/106_model_selection.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/106_model_selection.py</a></td></tr>
<tr><td>107</td><td>107_features_selection_basic.py</td><td>výběr atributů (proměnných) pro trénink modelu (základní varianta)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/107_features_selection_basic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/107_features_selection_basic.py</a></td></tr>
<tr><td>108</td><td>108_features_selection_iris.py</td><td>výběr atributů (proměnných) pro trénink modelu (datová sada Iris)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/108_features_selection_iris.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/108_features_selection_iris.py</a></td></tr>
<tr><td>109</td><td>109_features_selection_houses.py</td><td>výběr atributů (proměnných) pro trénink modelu (datová sada California Housings)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/109_features_selection_houses.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/109_features_selection_houses.py</a></td></tr>
<tr><td>110</td><td>110_best_features_selection_houses.py</td><td>získání nejlepší sady atributů (proměnných)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/110_best_features_selection_houses.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/110_best_features_selection_houses.py</a></td></tr>
<tr><td>111</td><td>111_features_selection_graphical.py</td><td>výběr atributů (proměnných) pro trénink modelu (datová sada Iris), grafický výstup</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/111_features_selection_graphical.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/111_features_selection_graphical.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>112</td><td>112_simplest_linear_regression.py</td><td>lineární regrese bodů ležících v&nbsp;rovině</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/112_simplest_linear_regression.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/112_simplest_linear_regression.py</a></td></tr>
<tr><td>113</td><td>113_linear_regression_no_intercept.py</td><td>lineární regrese při vynucení <i>w<sub>0</sub>=0</i> pro obecná data</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/113_linear_regression_no_intercept.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/113_linear_regression_no_intercept.py</a></td></tr>
<tr><td>114</td><td>114_linear_regression_from_0_0.py</td><td>lineární regrese při vynucení <i>w<sub>0</sub>=0</i> v&nbsp;případě, že vstupní body obsahují počátek souřadného systému</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/114_linear_regression_from_0_0.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/114_linear_regression_from_0_0.py</a></td></tr>
<tr><td>115</td><td>115_linear_regression_multiple_y.py</td><td>model předpovídající pro každou vstupní hodnotu dvě výstupní hodnoty (odpovědi)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/115_linear_regression_multiple_y.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/115_linear_regression_multiple_y.py</a></td></tr>
<tr><td>116</td><td>116_grid_operations.py</td><td>konstrukce matice obsahující souřadnice bodů v&nbsp;mřížce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/116_grid_operations.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/116_grid_operations.py</a></td></tr>
<tr><td>117</td><td>117_linear_regression_multiple_x.py</td><td>proložení bodů v&nbsp;prostoru rovinou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/117_linear_regression_multiple_x.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/117_linear_regression_multiple_x.py</a></td></tr>
<tr><td>118</td><td>118_linear_regression_multiple_x.py</td><td>proložení bodů s&nbsp;náhodnou výškou rovinou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/118_linear_regression_multiple_x.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/118_linear_regression_multiple_x.py</a></td></tr>
<tr><td>119</td><td>119_linear_regression_multiple_x_and_y.py</td><td>proložení dvou sad bodů dvojicí rovin</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/119_linear_regression_multiple_x_and_y.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/119_linear_regression_multiple_x_and_y.py</a></td></tr>
<tr><td>120</td><td>120_linear_regression_multiple_x_and_y.py</td><td>proložení dvou sad bodů dvojicí rovin</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/120_linear_regression_multiple_x_and_y.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/120_linear_regression_multiple_x_and_y.py</a></td></tr>
<tr><td>121</td><td>121_linear_regression_poly.py</td><td>základní polynomická regrese</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/121_linear_regression_poly.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/121_linear_regression_poly.py</a></td></tr>
<tr><td>122</td><td>122_linear_regression_poly_multiple_x.py</td><td>polynomická regrese a body v&nbsp;prostoru, první příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/122_linear_regression_poly_multiple_x.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/122_linear_regression_poly_multiple_x.py</a></td></tr>
<tr><td>123</td><td>123_linear_regression_poly_multiple_x.py</td><td>polynomická regrese a body v&nbsp;prostoru, druhý příklad</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/123_linear_regression_poly_multiple_x.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/123_linear_regression_poly_multiple_x.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>124</td><td>124_iris_set_statistic.py</td><td>získání statistických informací o datové sadě <i>Iris</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/124_iris_set_statistic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/124_iris_set_statistic.py</a></td></tr>
<tr><td>125</td><td>125_california_housings_statistic.py</td><td>získání statistických informací o datové sadě <i>California Housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/125_california_housings_statistic.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/125_california_housings_statistic.py</a></td></tr>
<tr><td>126</td><td>126_variance_threshold_1.py</td><td>výběr atributů pro trénink modelu pomocí <strong>VarianceThreshold</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/126_variance_threshold_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/126_variance_threshold_1.py</a></td></tr>
<tr><td>127</td><td>127_variance_threshold_2.py</td><td>výběr atributů pro trénink modelu pomocí <strong>VarianceThreshold</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/127_variance_threshold_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/127_variance_threshold_2.py</a></td></tr>
<tr><td>128</td><td>128_variance_threshold_3.py</td><td>výběr atributů pro trénink modelu pomocí <strong>VarianceThreshold</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/128_variance_threshold_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/128_variance_threshold_3.py</a></td></tr>
<tr><td>129</td><td>129_select_best_iris.py</td><td>výběr nejvhodnějších atributů pro datovou sadu <i>Iris</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/129_select_best_iris.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/129_select_best_iris.py</a></td></tr>
<tr><td>130</td><td>130_select_best_housings.py</td><td>výběr nejvhodnějších atributů pro datovou sadu <i>California Housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/130_select_best_housings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/130_select_best_housings.py</a></td></tr>
<tr><td>131</td><td>131_select_k_best_housings.py</td><td>výběr K nejvhodnějších atributů pro datovou sadu <i>California Housings</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/131_select_k_best_housings.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/131_select_k_best_housings.py</a></td></tr>
<tr><td>132</td><td>132_select_from_model.py</td><td>výběr atributů na základě k&nbsp;tomu určeného modelu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/132_select_from_model.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/132_select_from_model.py</a></td></tr>
<tr><td>133</td><td>133_cross_validation_1.py</td><td>křížová validace po výběru (filtraci) modelů (datová sada <i>Iris</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/133_cross_validation_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/133_cross_validation_1.py</a></td></tr>
<tr><td>134</td><td>134_cross_validation_2.py</td><td>křížová validace po výběru (filtraci) modelů (datová sada <i>California Housings</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/134_cross_validation_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/134_cross_validation_2.py</a></td></tr>
<tr><td>135</td><td>135_cross_validation_3.py</td><td>křížová validace po výběru (filtraci) modelů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/135_cross_validation_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/135_cross_validation_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>136</td><td>136_mlp_classifier_01.py</td><td>použití neuronové sítě pro klasifikaci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/136_mlp_classifier_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/136_mlp_classifier_01.py</a></td></tr>
<tr><td>137</td><td>137_mlp_classifier_02.py</td><td>výpočet úspěšnosti modelu založeného na neuronové síti</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/137_mlp_classifier_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/137_mlp_classifier_02.py</a></td></tr>
<tr><td>138</td><td>138_mlp_classifier_03.py</td><td>konfigurace vrstev neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/138_mlp_classifier_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/138_mlp_classifier_03.py</a></td></tr>
<tr><td>139</td><td>139_mlp_classifier_04.py</td><td>proměnný počet neuronů ve vrstvách neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/139_mlp_classifier_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/139_mlp_classifier_04.py</a></td></tr>
<tr><td>140</td><td>140_mlp_classifier_05.py</td><td>proměnný počet neuronů ve více vrstvách neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/140_mlp_classifier_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/140_mlp_classifier_05.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>141</td><td>141_mlp_regression_1.py</td><td>použití neuronové sítě pro regresi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/141_mlp_regression_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/141_mlp_regression_1.py</a></td></tr>
<tr><td>142</td><td>142_mlp_regression_2.py</td><td>modifikace parametrů neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/142_mlp_regression_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/142_mlp_regression_2.py</a></td></tr>
<tr><td>143</td><td>143_mlp_regression_2.py</td><td>další modifikace parametrů neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/143_mlp_regression_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/143_mlp_regression_2.py</a></td></tr>
<tr><td>144</td><td>144_mlp_regression_3.py</td><td>postupná změna počtu neuronů v&nbsp;jedné skryté vrstvě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/144_mlp_regression_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/144_mlp_regression_3.py</a></td></tr>
<tr><td>145</td><td>145_mlp_regression_4.py</td><td>postupná změna počtu neuronů ve třech skrytých vrstvách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/145_mlp_regression_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/145_mlp_regression_4.py</a></td></tr>
<tr><td>146</td><td>146_mlp_regression_5.py</td><td>postupná změna počtu neuronů v&nbsp;pěti skrytých vrstvách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/146_mlp_regression_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/146_mlp_regression_5.py</a></td></tr>
<tr><td>147</td><td>147_mlp_regression_6.py</td><td>postupná změna počtu skrytých vrstev při zachování počtu neuronů v&nbsp;každé vrstvě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/147_mlp_regression_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/147_mlp_regression_6.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>148</td><td>148_confusion_matrix_1.py</td><td>zjištění kvality modelu s&nbsp;využitím matice záměn (<i>confusion matrix</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/148_confusion_matrix_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/148_confusion_matrix_1.py</a></td></tr>
<tr><td>149</td><td>149_confusion_matrix_2.py</td><td>zjištění kvality modelu hledajícího K nejbližších sousedů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/149_confusion_matrix_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/149_confusion_matrix_2.py</a></td></tr>
<tr><td>150</td><td>150_confusion_matrix_3.py</td><td>zjištění kvality modelu tvořeného neuronovou sítí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/150_confusion_matrix_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/150_confusion_matrix_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>151</td><td>151_multiplication_table.py</td><td>využití neuronové sítě pro odhad výsledků součinu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/151_multiplication_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/151_multiplication_table.py</a></td></tr>
<tr><td>152</td><td>152_multiplication_table.py</td><td>odhad/vygenerování celé matice malé násobilky neuronovou sítí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/152_multiplication_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/152_multiplication_table.py</a></td></tr>
<tr><td>153</td><td>153_multiplication_table.py</td><td>rozšíření výpočtu součinu na rozsah 20&times;20 (při zachování původní sítě)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/153_multiplication_table.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/153_multiplication_table.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>154</td><td>154_images_1.py</td><td>rozpoznání číslic modelem provádějícím logistickou regresi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/154_images_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/154_images_1.py</a></td></tr>
<tr><td>155</td><td>155_images_2.py</td><td>rozpoznání číslic: využití modelu SVM (metoda podpůrných vektorů) pro klasifikaci obrázků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/155_images_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/155_images_2.py</a></td></tr>
<tr><td>156</td><td>156_images_3.py</td><td>rozpoznání číslic: využití modelu pro hledání K nejbližších sousedů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/156_images_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/156_images_3.py</a></td></tr>
<tr><td>157</td><td>157_images_4.py</td><td>rozpoznání rastrových obrázků neuronovou sítí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/157_images_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/157_images_4.py</a></td></tr>
<tr><td>158</td><td>158_all_predictions.py</td><td>zobrazení původních obrázků i predikovaných výsledků ve vizuální podobě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/158_all_predictions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/158_all_predictions.py</a></td></tr>
<tr><td>159</td><td>159_wrong_predictions.py</td><td>zobrazení 25 nekorektních odhadů modelu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/159_wrong_predictions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/159_wrong_predictions.py</a></td></tr>
<tr><td>160</td><td>160_nn_wrong_predictions.py</td><td>zobrazení 25 nekorektních odhadů neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/160_nn_wrong_predictions.py">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/160_nn_wrong_predictions.py</a></td></tr>
</table>

<p>V&nbsp;repositáři nalezneme taktéž projektový soubor a Jupyter Notebook
s&nbsp;vysvětlením, jak lze modely využít pro rozpoznávání obsahu rastrových
obrázků:</p>

<table>
<tr><th>#<th>Příklad</th><th>Stručný popis</th><th>Adresa příkladu</th></tr></i>
<tr><td>1</td><td>pyproject.toml</td><td>projektový soubor (pro PDM) se všemi závislostmi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pyproject.toml">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pyproject.toml</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>2</td><td>pdm.lock</td><td>lock soubor s&nbsp;konkrétními verzemi všech přímých i tranzitivních závislostí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pdm.lock">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/pdm.lock</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>3</td><td>Rozpoznání_obrazu_scikit-learn.ipynb</td><td>Jupyter notebook s&nbsp;celým postupem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/Rozpoznání_obrazu_scikit-learn.ipynb">https://github.com/tisnik/most-popular-python-libs/blob/master/sklearn/Rozpoznání_obrazu_scikit-learn.ipynb</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>4</td><td>particle_life.py</td><td>emergence: příklad vzniku struktury</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/particles/particle_life.py">https://github.com/tisnik/most-popular-python-libs/blob/master/particles/particle_life.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Shluková analýza (clustering) a knihovna Scikit-learn<br />
<a href="https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn/">https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn/</a>
</li>

<li>Shluková analýza (clustering) a knihovna Scikit-learn (2)<br />
<a href="https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-2/">https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-2/</a>
</li>

<li>Shluková analýza (clustering) a knihovna Scikit-learn (z plochy do 3D prostoru)<br />
<a href="https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-z-plochy-do-3d-prostoru/">https://www.root.cz/clanky/shlukova-analyza-clustering-a-knihovna-scikit-learn-z-plochy-do-3d-prostoru/</a>
</li>

<li>Rozpoznávání obrázků knihovnou Scikit-learn: první kroky<br />
<a href="https://www.root.cz/clanky/rozpoznavani-obrazku-knihovnou-scikit-learn-prvni-kroky/">https://www.root.cz/clanky/rozpoznavani-obrazku-knihovnou-scikit-learn-prvni-kroky/</a>
</li>

<li>scikit-learn: Machine Learning in Python<br />
<a href="https://scikit-learn.org/stable/index.html">https://scikit-learn.org/stable/index.html</a>
</li>

<li>Sklearn-pandas<br />
<a href="https://github.com/scikit-learn-contrib/sklearn-pandas">https://github.com/scikit-learn-contrib/sklearn-pandas</a>
</li>

<li>sklearn-xarray<br />
<a href="https://github.com/phausamann/sklearn-xarray/">https://github.com/phausamann/sklearn-xarray/</a>
</li>

<li>Clustering<br />
<a href="https://scikit-learn.org/stable/modules/clustering.html">https://scikit-learn.org/stable/modules/clustering.html</a>
</li>

<li>Cluster analysis (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Cluster_analysis">https://en.wikipedia.org/wiki/Cluster_analysis</a>
</li>

<li>Shluková analýza (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Shlukov%C3%A1_anal%C3%BDza">https://cs.wikipedia.org/wiki/Shlukov%C3%A1_anal%C3%BDza</a>
</li>

<li>K-means<br />
<a href="https://cs.wikipedia.org/wiki/K-means">https://cs.wikipedia.org/wiki/K-means</a>
</li>

<li>k-means clustering<br />
<a href="https://en.wikipedia.org/wiki/K-means_clustering">https://en.wikipedia.org/wiki/K-means_clustering</a>
</li>

<li>Spectral clustering<br />
<a href="https://en.wikipedia.org/wiki/Spectral_clustering">https://en.wikipedia.org/wiki/Spectral_clustering</a>
</li>

<li>Emergence<br />
<a href="https://cs.wikipedia.org/wiki/Emergence">https://cs.wikipedia.org/wiki/Emergence</a>
</li>

<li>Particle Life: Vivid structures from rudimentary rules<br />
<a href="https://particle-life.com/">https://particle-life.com/</a>
</li>

<li>Hertzsprungův–Russellův diagram<br />
<a href="https://cs.wikipedia.org/wiki/Hertzsprung%C5%AFv%E2%80%93Russell%C5%AFv_diagram">https://cs.wikipedia.org/wiki/Hertzsprung%C5%AFv%E2%80%93Russell%C5%AFv_diagram</a>
</li>

<li>Using Machine Learning in an HR Diagram<br />
<a href="https://cocalc.com/share/public_paths/08b6e03583cbdef3cdb9813a54ec68ff773c747f">https://cocalc.com/share/public_paths/08b6e03583cbdef3cdb9813a54ec68ff773c747f</a>
</li>

<li>Gaia H-R diagrams: Querying Gaia data for one million nearby stars<br />
<a href="https://vlas.dev/post/gaia-dr2-hrd/">https://vlas.dev/post/gaia-dr2-hrd/</a>
</li>

<li>The Hertzsprung–Russell diagram<br />
<a href="https://scipython.com/book2/chapter-9-data-analysis-with-pandas/problems/p92/the-hertzsprung-russell-diagram/">https://scipython.com/book2/chapter-9-data-analysis-with-pandas/problems/p92/the-hertzsprung-russell-diagram/</a>
</li>

<li>Animated Hertzsprung-Russell Diagram with 119,614 datapoints<br />
<a href="https://github.com/zonination/h-r-diagram">https://github.com/zonination/h-r-diagram</a>
</li>

<li>Neuraxle Pipelines<br />
<a href="https://github.com/Neuraxio/Neuraxle">https://github.com/Neuraxio/Neuraxle</a>
</li>

<li>scikit-learn: Getting Started<br />
<a href="https://scikit-learn.org/stable/getting_started.html">https://scikit-learn.org/stable/getting_started.html</a>
</li>

<li>Support Vector Machines<br />
<a href="https://scikit-learn.org/stable/modules/svm.html">https://scikit-learn.org/stable/modules/svm.html</a>
</li>

<li>Use Deep Learning to Detect Programming Languages<br />
<a href="http://searene.me/2017/11/26/use-neural-networks-to-detect-programming-languages/">http://searene.me/2017/11/26/use-neural-networks-to-detect-programming-languages/</a>
</li>

<li>Natural-language processing<br />
<a href="https://en.wikipedia.org/wiki/Natural-language_processing">https://en.wikipedia.org/wiki/Natural-language_processing</a>
</li>

<li>THE MNIST DATABASE of handwritten digits<br />
<a href="http://yann.lecun.com/exdb/mnist/">http://yann.lecun.com/exdb/mnist/</a>
</li>

<li>MNIST database (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/MNIST_database">https://en.wikipedia.org/wiki/MNIST_database</a>
</li>

<li>MNIST For ML Beginners<br />
<a href="https://www.tensorflow.org/get_started/mnist/beginners">https://www.tensorflow.org/get_started/mnist/beginners</a>
</li>

<li>Stránka projektu Torch<br />
<a href="http://torch.ch/">http://torch.ch/</a>
</li>

<li>Torch: Serialization<br />
<a href="https://github.com/torch/torch7/blob/master/doc/serialization.md">https://github.com/torch/torch7/blob/master/doc/serialization.md</a>
</li>

<li>Torch: modul image<br />
<a href="https://github.com/torch/image/blob/master/README.md">https://github.com/torch/image/blob/master/README.md</a>
</li>

<li>Data pro neuronové sítě<br />
<a href="http://archive.ics.uci.edu/ml/index.php">http://archive.ics.uci.edu/ml/index.php</a>
</li>

<li>Torch na GitHubu (několik repositářů)<br />
<a href="https://github.com/torch">https://github.com/torch</a>
</li>

<li>Torch (machine learning), Wikipedia<br />
<a href="https://en.wikipedia.org/wiki/Torch_%28machine_learning%29">https://en.wikipedia.org/wiki/Torch_%28machine_learning%29</a>
</li>

<li>Torch Package Reference Manual<br />
<a href="https://github.com/torch/torch7/blob/master/README.md">https://github.com/torch/torch7/blob/master/README.md</a>
</li>

<li>Torch Cheatsheet<br />
<a href="https://github.com/torch/torch7/wiki/Cheatsheet">https://github.com/torch/torch7/wiki/Cheatsheet</a>
</li>

<li>Neural network containres (Torch)<br />
<a href="https://github.com/torch/nn/blob/master/doc/containers.md">https://github.com/torch/nn/blob/master/doc/containers.md</a>
</li>

<li>Simple layers<br />
<a href="https://github.com/torch/nn/blob/master/doc/simple.md#nn.Linear">https://github.com/torch/nn/blob/master/doc/simple.md#nn.Linear</a>
</li>

<li>Transfer Function Layers<br />
<a href="https://github.com/torch/nn/blob/master/doc/transfer.md#nn.transfer.dok">https://github.com/torch/nn/blob/master/doc/transfer.md#nn.transfer.dok</a>
</li>

<li>Feedforward neural network<br />
<a href="https://en.wikipedia.org/wiki/Feedforward_neural_network">https://en.wikipedia.org/wiki/Feedforward_neural_network</a>
</li>

<li>Biologické algoritmy (4) - Neuronové sítě<br />
<a href="https://www.root.cz/clanky/biologicke-algoritmy-4-neuronove-site/">https://www.root.cz/clanky/biologicke-algoritmy-4-neuronove-site/</a>
</li>

<li>Biologické algoritmy (5) - Neuronové sítě<br />
<a href="https://www.root.cz/clanky/biologicke-algoritmy-5-neuronove-site/">https://www.root.cz/clanky/biologicke-algoritmy-5-neuronove-site/</a>
</li>

<li>Umělá neuronová síť (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Um%C4%9Bl%C3%A1_neuronov%C3%A1_s%C3%AD%C5%A5">https://cs.wikipedia.org/wiki/Um%C4%9Bl%C3%A1_neuronov%C3%A1_s%C3%AD%C5%A5</a>
</li>

<li>PyTorch<br />
<a href="http://pytorch.org/">http://pytorch.org/</a>
</li>

<li>JupyterLite na PyPi<br />
<a href="https://pypi.org/project/jupyterlite/">https://pypi.org/project/jupyterlite/</a>
</li>

<li>JupyterLite na GitHubu<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Dokumentace k&nbsp;projektu JupyterLite<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Matplotlib Home Page<br />
<a href="http://matplotlib.org/">http://matplotlib.org/</a>
</li>

<li>Matplotlib (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Matplotlib">https://en.wikipedia.org/wiki/Matplotlib</a>
</li>

<li>Popis barvových map modulu matplotlib.cm<br />
<a href="https://gist.github.com/endolith/2719900#id7">https://gist.github.com/endolith/2719900#id7</a>
</li>

<li>Ukázky (palety) barvových map modulu matplotlib.cm<br />
<a href="http://matplotlib.org/examples/color/colormaps_reference.html">http://matplotlib.org/examples/color/colormaps_reference.html</a>
</li>

<li>Galerie grafů vytvořených v&nbsp;Matplotlibu<br />
<a href="https://matplotlib.org/3.2.1/gallery/">https://matplotlib.org/3.2.1/gallery/</a>
</li>

<li>3D rendering<br />
<a href="https://en.wikipedia.org/wiki/3D_rendering">https://en.wikipedia.org/wiki/3D_rendering</a>
</li>

<li>3D computer graphics<br />
<a href="https://en.wikipedia.org/wiki/3D_computer_graphics">https://en.wikipedia.org/wiki/3D_computer_graphics</a>
</li>

<li>Primary 3D view planes<br />
<a href="https://matplotlib.org/stable/gallery/mplot3d/view_planes_3d.html">https://matplotlib.org/stable/gallery/mplot3d/view_planes_3d.html</a>
</li>

<li>Getting started in scikit-learn with the famous iris dataset<br />
<a href="https://www.youtube.com/watch?v=hd1W4CyPX58">https://www.youtube.com/watch?v=hd1W4CyPX58</a>
</li>

<li>Training a machine learning model with scikit-learn<br />
<a href="https://www.youtube.com/watch?v=RlQuVL6-qe8">https://www.youtube.com/watch?v=RlQuVL6-qe8</a>
</li>

<li>Iris (plant)<br />
<a href="https://en.wikipedia.org/wiki/Iris_(plant)">https://en.wikipedia.org/wiki/Iris_(plant)</a>
</li>

<li>Kosatec<br />
<a href="https://cs.wikipedia.org/wiki/Kosatec">https://cs.wikipedia.org/wiki/Kosatec</a>
</li>

<li>Iris setosa<br />
<a href="https://en.wikipedia.org/wiki/Iris_setosa">https://en.wikipedia.org/wiki/Iris_setosa</a>
</li>

<li>Iris versicolor<br />
<a href="https://en.wikipedia.org/wiki/Iris_versicolor">https://en.wikipedia.org/wiki/Iris_versicolor</a>
</li>

<li>Iris virginica<br />
<a href="https://en.wikipedia.org/wiki/Iris_virginica">https://en.wikipedia.org/wiki/Iris_virginica</a>
</li>

<li>Druh<br />
<a href="https://cs.wikipedia.org/wiki/Druh">https://cs.wikipedia.org/wiki/Druh</a>
</li>

<li>Iris subg. Limniris<br />
<a href="https://en.wikipedia.org/wiki/Iris_subg._Limniris">https://en.wikipedia.org/wiki/Iris_subg._Limniris</a>
</li>

<li>Iris Dataset Classification with Python: A Tutorial<br />
<a href="https://www.pycodemates.com/2022/05/iris-dataset-classification-with-python.html">https://www.pycodemates.com/2022/05/iris-dataset-classification-with-python.html</a>
</li>

<li>Iris flower data set<br />
<a href="https://en.wikipedia.org/wiki/Iris_flower_data_set">https://en.wikipedia.org/wiki/Iris_flower_data_set</a>
</li>

<li>List of datasets for machine-learning research<br />
<a href="https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research">https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research</a>
</li>

<li>Analýza hlavních komponent<br />
<a href="https://cs.wikipedia.org/wiki/Anal%C3%BDza_hlavn%C3%ADch_komponent">https://cs.wikipedia.org/wiki/Anal%C3%BDza_hlavn%C3%ADch_komponent</a>
</li>

<li>Principal component analysis<br />
<a href="https://en.wikipedia.org/wiki/Principal_component_analysis">https://en.wikipedia.org/wiki/Principal_component_analysis</a>
</li>

<li>Scikit-learn Crash Course - Machine Learning Library for Python<br />
<a href="https://www.youtube.com/watch?v=0B5eIE_1vpU">https://www.youtube.com/watch?v=0B5eIE_1vpU</a>
</li>

<li>calm-notebooks<br />
<a href="https://github.com/koaning/calm-notebooks">https://github.com/koaning/calm-notebooks</a>
</li>

<li>Should you teach Python or R for data science?<br />
<a href="https://www.dataschool.io/python-or-r-for-data-science/">https://www.dataschool.io/python-or-r-for-data-science/</a>
</li>

<li>nbviewer: A simple way to share Jupyter Notebooks<br />
<a href="https://nbviewer.org/">https://nbviewer.org/</a>
</li>

<li>AI vs Machine Learning (Youtube)<br />
<a href="https://www.youtube.com/watch?v=4RixMPF4xis">https://www.youtube.com/watch?v=4RixMPF4xis</a>
</li>

<li>Machine Learning | What Is Machine Learning? | Introduction To Machine Learning | 2024 | Simplilearn (Youtube)<br />
<a href="https://www.youtube.com/watch?v=ukzFI9rgwfU">https://www.youtube.com/watch?v=ukzFI9rgwfU</a>
</li>

<li>A Gentle Introduction to Machine Learning (Youtube)<br />
<a href="https://www.youtube.com/watch?v=Gv9_4yMHFhI">https://www.youtube.com/watch?v=Gv9_4yMHFhI</a>
</li>

<li>Machine Learning vs Deep Learning<br />
<a href="https://www.youtube.com/watch?v=q6kJ71tEYqM">https://www.youtube.com/watch?v=q6kJ71tEYqM</a>
</li>

<li>Umělá inteligence (slajdy)<br />
<a href="https://slideplayer.cz/slide/12119218/">https://slideplayer.cz/slide/12119218/</a>
</li>

<li>Úvod do umělé inteligence<br />
<a href="https://slideplayer.cz/slide/2505525/">https://slideplayer.cz/slide/2505525/</a>
</li>

<li>Umělá inteligence I / Artificial Intelligence I<br />
<a href="https://ktiml.mff.cuni.cz/~bartak/ui/">https://ktiml.mff.cuni.cz/~bartak/ui/</a>
</li>

<li>Matplotlib vs. seaborn vs. Plotly vs. MATLAB vs. ggplot2 vs. pandas<br />
<a href="https://ritza.co/articles/matplotlib-vs-seaborn-vs-plotly-vs-MATLAB-vs-ggplot2-vs-pandas/">https://ritza.co/articles/matplotlib-vs-seaborn-vs-plotly-vs-MATLAB-vs-ggplot2-vs-pandas/</a>
</li>

<li>Matplotlib, Seaborn or Plotnine?<br />
<a href="https://www.reddit.com/r/datascience/comments/jvrqxt/matplotlib_seaborn_or_plotnine/">https://www.reddit.com/r/datascience/comments/jvrqxt/matplotlib_seaborn_or_plotnine/</a>
</li>

<li>@Rabeez: Rabeez/plotting_comparison.ipynb<br />
<a href="https://gist.github.com/Rabeez/ffc0b59d4a41e20fa8d944c44a96adbc">https://gist.github.com/Rabeez/ffc0b59d4a41e20fa8d944c44a96adbc</a>
</li>

<li>Matplotlib, Seaborn, Plotly and Plotnine Comparison<br />
<a href="https://python.plainenglish.io/matplotlib-seaborn-plotly-and-plotnine-comparison-baf2db5a9c40">https://python.plainenglish.io/matplotlib-seaborn-plotly-and-plotnine-comparison-baf2db5a9c40</a>
</li>

<li>Data Visualization 101: How to Choose a Python Plotting Library<br />
<a href="https://towardsdatascience.com/data-visualization-101-how-to-choose-a-python-plotting-library-853460a08a8a">https://towardsdatascience.com/data-visualization-101-how-to-choose-a-python-plotting-library-853460a08a8a</a>
</li>

<li>Data science in Python: pandas, seaborn, scikit-learn<br />
<a href="https://www.youtube.com/watch?v=3ZWuPVWq7p4">https://www.youtube.com/watch?v=3ZWuPVWq7p4</a>
</li>

<li>7.2. Real world datasets<br />
<a href="https://scikit-learn.org/stable/datasets/real_world.html#california-housing-dataset">https://scikit-learn.org/stable/datasets/real_world.html#california-housing-dataset</a>
</li>

<li>7.2.7. California Housing dataset<br />
<a href="https://scikit-learn.org/stable/datasets/real_world.html#california-housing-dataset">https://scikit-learn.org/stable/datasets/real_world.html#california-housing-dataset</a>
</li>

<li>Comprehensive Guide to Classification Models in Scikit-Learn<br />
<a href="https://www.geeksforgeeks.org/comprehensive-guide-to-classification-models-in-scikit-learn/">https://www.geeksforgeeks.org/comprehensive-guide-to-classification-models-in-scikit-learn/</a>
</li>

<li>Tidy Data Visualization: ggplot2 vs seaborn<br />
<a href="https://blog.tidy-intelligence.com/posts/ggplot2-vs-seaborn/">https://blog.tidy-intelligence.com/posts/ggplot2-vs-seaborn/</a>
</li>

<li>seaborn: statistical data visualization<br />
<a href="https://seaborn.pydata.org/">https://seaborn.pydata.org/</a>
</li>

<li>Linear regression (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Linear_regression">https://en.wikipedia.org/wiki/Linear_regression</a>
</li>

<li>Lineární regrese (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese">https://cs.wikipedia.org/wiki/Line%C3%A1rn%C3%AD_regrese</a>
</li>

<li>Iris Flower Classification with MLP Classifier<br />
<a href="https://www.metriccoders.com/post/iris-flower-classification-with-mlp-classifier">https://www.metriccoders.com/post/iris-flower-classification-with-mlp-classifier</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

