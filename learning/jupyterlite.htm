<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">2. Architektura klasického Jupyter Notebooku</a></p>
<p><a href="#k03">*** 3. Architektura projektu JupyterLite</a></p>
<p><a href="#k04">4. Projekt Pyodide</a></p>
<p><a href="#k05">*** 5. Praktická část &ndash; příprava na instalaci projektu <i>JupyterLite</i></a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">17. Technologie WebAssembly (WASM)</a></p>
<p><a href="#k18">18. Odkazy na články o Jupyter Notebooku</a></p>
<p><a href="#k19">19. Odkazy na články a videa s&nbsp;tématem technologie WebAssembly</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p></p>

*** image ***
<p><i>Obrázek 1: Základní informace o projektu JupyterLite zobrazené přímo ve
webovém prostředí.</i></p>

<p></p>

*** image ***
<p><i>Obrázek 2: Úvodní obrazovka projektu JupyterLite při přístupu ke
statickému obsahu z&nbsp;jiného počítače.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Architektura klasického Jupyter Notebooku</h2>

<p>Připomeňme si ve stručnosti, jak vlastně vypadá architektura systému
<i>Jupyter Notebook</i>; posléze si popíšeme odlišnosti mezi klasickým
projektem Jupyter a Jupyterem Lite. Nástroj <i>Jupyter Notebook</i> je založen
na klasické technologii klient-server, kde klientem je webový prohlížeč
spuštěný u uživatele (či uživatelů) a serverem je Jupyter s&nbsp;přidaným
modulem (takzvaným <i>kernelem</i>) pro zvolený programovací jazyk nebo jazyky.
Výraz, popř.&nbsp;blok výrazů představujících programový kód napsaný ve
zvoleném programovacím jazyce, je po stlačení klávesové zkratky
<strong>Shift+Enter</strong> (v&nbsp;prostředí webového prohlížeče) přenesen na
server, kde je zpracován a výsledek je poslán zpět do prohlížeče. Prakticky
veškeré výpočty jsou tedy prováděny na straně serveru, který pochopitelně může
běžet lokálně.</p>

<img src="https://i.iinfo.cz/images/72/gorilla-repl-2.png" class="image-242638" alt="&#160;" width="660" height="341" />
<p><i>Obrázek 3: Nástroj Gorilla REPL obsahuje podporu pro doplňování názvů
funkcí a maker společně se zobrazením nápovědy (programové dokumentace). Jedná
se o nástroj založený na stejném paradigmatu jako dnes popisovaný Jupyter
Notebook resp. JupyterLite, ovšem Gorilla REPL je primárně určen pro
programovací jazyk Clojure zatímco Jupyter Notebook je více univerzální
(původně vznikl pro Python, dnes podporuje cca třicet dalších jazyků).</i></p>

<p>JavaScriptový kód na straně prohlížeče zajistí interpretaci získaných
výsledků a jejich zařazení na správné místo do dynamické webové stránky (jedná
se vlastně o variantu na dnes tak populární <a
href="https://en.wikipedia.org/wiki/Single-page_application">SPA</a> &ndash;
<i>Single-Page Application</i> se všemi přednostmi a pochopitelně i některými
zápory, které toto řešení přináší). Výsledky poslané serverem na klienta mohou
být ve skutečnosti různého typu; typicky se jedná o fragment HTML (tabulky
atd.), obrázek typu SVG (diagram, graf, histogram), rastrový obrázek (graf
získaný například ze systému R), vzorec vykreslený z&nbsp;TeXového či
LaTeXového zdrojového kódu, <a
href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">animace
či video</a> (různé formáty) apod. Samotná architektura nástroje Jupyter je
přitom do značné míry otevřená a poměrně snadno rozšiřitelná, což znamená, že
je v&nbsp;případě potřeby možné přidat například další typy grafů apod.</p>

<p><div class="rs-tip-major">Poznámka: existují i podobně koncipované projekty.
Na stránkách Rootu již vyšel článek o projektu Gorilla REPL, který je určen pro
programovací jazyk Clojure a princip diáře (notebooku) nalezneme u mnohých
&bdquo;webových IDE&ldquo;, kterých dnes existuje nepřeberné
množství.</div></p>

<img src="https://i.iinfo.cz/images/481/jupyter1-1.png" class="image-407896" alt="&#160;" width="669" height="724" />
<p><i>Obrázek 4: Dalším podobným projektem je R Markdown notebook, který je
(jak již jeho název naznačuje) určený pro jazyk R zkombinovaný
s&nbsp;Markdownem.<br />
Zdroj: dokumentace k&nbsp;projektu dostupná na https://bookdown.org/yihui/rmarkdown/notebook.html</i></p>

<p>Jak jsme si již řekli <a href="#k01">v&nbsp;úvodní kapitole</a>, vznikl
projekt Jupyter Notebook rozšířením původního projektu nazvaného IPython
Notebooks. V&nbsp;případě Jupyter Notebooku musely být provedeny některé změny
v&nbsp;celé architektuře, a to především z&nbsp;toho důvodu, aby bylo možné
podporovat různé programovací jazyky (nikoli pouze Python), další typy
specializovaných <i>kernelů</i> apod. Základem je přitom stále <i>IPython
Kernel</i>, který přijímá zprávy (příkazy, které se mají vykonat) přes <a
href="https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/">ØMQ</a>,
vykonává tyto příkazy a výsledky posílá zpět přes ØMQ (povšimněte si, že
v&nbsp;tomto případě samotný kernel vůbec nezajímá, kdo příkazy posílal):</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-2.png" class="image-407897" alt="&#160;" width="393" height="355" />
<p><i>Obrázek 5: IPython Kernel a jeho navázání na ØMQ (popř.&nbsp;alternativní
přístup přes standardní vstupně-výstupní operace přístupné přes terminál).<br
/>
Zdroj: <a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">How IPython and Jupyter Notebook work</a></i></p>

<p>IPython Kernel podporuje &ndash; což asi není při přečtení jeho jména velkým
překvapením &ndash; programovací jazyk Python. Ovšem do Jupyter Notebooku lze
přidat i další kernely (takzvané nativní kernely), které mohou podporovat další
programovací jazyky. Alternativně není nutné vytvářet celý nový kernel (což
může být komplikované kvůli nutnosti napojení na ØMQ atd.), ale lze použít
přímo IPython Kernel tak, aby volal příkazy interpretru jiného programovacího
jazyka. Teoreticky se sice nejedná o nejefektivnější řešení, ovšem musíme si
uvědomit, že spouštěny budou příkazy zapisované přímo uživatelem a že tedy
uživatel je &bdquo;úzkým hrdlem&ldquo;, ne výkonnost jednoho interpretru
volaného z&nbsp;interpretru jiného:</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-3.png" class="image-407898" alt="&#160;" width="393" height="355" />
<p><i>Obrázek 6: Dva způsoby, jakými je možné Jupyter rozšířit o další jazyky:
nepřímo přes IPython a přímo nativním kernelem.<br />
Zdroj: <a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">How IPython and Jupyter Notebook work</a></i></p>

<p>Máme tedy dva moduly &ndash; webové rozhraní (webový prohlížeč s&nbsp;JSA) a
kernel či kernely. Tyto dva moduly nejsou propojeny přímo, protože mezi nimi
leží <i>Notebook server</i>. Ten z&nbsp;jedné strany komunikuje s&nbsp;webovým
rozhraním přes HTTP a WebSockety a ze strany druhé s&nbsp;kernelem/kernely přes
ØMQ. Navíc server udržuje stav vlastního diáře. Toto řešení je snadno
rozšiřitelné, může být provozováno na jednom stroji (což si ukážeme dále) či
v&nbsp;&bdquo;cloudu&ldquo; atd. Taktéž umožňuje spolupráci na jednom diáři,
prezentaci živých výsledků apod., což je naznačeno na dalším obrázku:</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-4.png" class="image-407899" alt="&#160;" width="633" height="357" />
<p><i>Obrázek 7: Připojení vlastního uživatelského rozhraní (založeného na
webovém klientu) k&nbsp;serveru a propojení serveru s&nbsp;kernelem
(kernely).<br />
Zdroj: <a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">How IPython and Jupyter Notebook work</a></i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Architektura projektu JupyterLite</h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. Projekt Pyodide</h2>

<p>Nástroj <i>JupyterLite</i> je primárně postaven na projektu nazvaném <a
href="https://github.com/pyodide/pyodide">Pyodide</a>. Jedná se v&nbsp;prvé
řadě o upravený překlad celého standardního Pythonu (konkrétně Pythonu 3.9)
nikoli do nativního kódu spustitelného přímo z&nbsp;příkazové řádky, ale do
<i>WebAssembly</i>, což znamená, že interpret Pythonu, resp.&nbsp;přesněji
řečeno programů napsaných pro Python, lze spustit přímo z&nbsp;webového
prohlížeče, a to dokonce bez nutnosti mít Python lokálně nainstalovaný &ndash;
musíme mít pouze k&nbsp;dispozici vhodný webový server, stránky na <a
href="https://pages.github.com/">github.io</a> atd. Kromě toho je součástí
projektu <i>Pyodide</i> i poměrně velké množství důležitých balíčků používaných
ve vědeckotechnických výpočtech, zpracování numerických dat, statistických
výpočtech, strojovém učení atd. Primárně se jedná o balíčky <i>NumPy</i>,
<i>Pandas</i>, <i>Matplotlib</i>, <i>SciPy</i> a taktéž <i>scikit-learn</i>;
s&nbsp;mnohými z&nbsp;nich jsme se ostatně na stránkách Roota již setkali.
Seznam všech balíčků použitých v&nbsp;aktuální verzi <i>Pyodide</i> nalezneme
na adrese <a
href="https://github.com/pyodide/pyodide/tree/main/packages">https://github.com/pyodide/pyodide/tree/main/packages</a>:</p>

<table>
<tr><td>CLAPACK</td><td>Jinja2</td><td>MarkupSafe</td><td>Pygments</td></tr>
<tr><td>asciitree</td><td>astropy</td><td>atomicwrites</td><td>attrs</td></tr>
<tr><td>autograd</td><td>beautifulsoup4</td><td>biopython</td><td>bleach</td></tr>
<tr><td>bokeh</td><td>cloudpickle</td><td>cssselect</td><td>cycler</td></tr>
<tr><td>cytoolz</td><td>decorator</td><td>distlib</td><td>docutils</td></tr>
<tr><td>freesasa</td><td>future</td><td>glpk</td><td>html5lib</td></tr>
<tr><td>imageio</td><td>jedi</td><td>joblib</td><td>kiwisolver</td></tr>
<tr><td>libiconv</td><td>libxml</td><td>libxslt</td><td>libyaml</td></tr>
<tr><td>lxml</td><td>matplotlib</td><td>micropip</td><td>mne</td></tr>
<tr><td>more-itertools</td><td>mpmath</td><td>msgpack</td><td>networkx</td></tr>
<tr><td>nlopt</td><td>nltk</td><td>nose</td><td>numcodecs</td></tr>
<tr><td>numpy</td><td>optlang</td><td>packaging</td><td>pandas</td></tr>
<tr><td>parso</td><td>patsy</td><td>pillow</td><td>pluggy</td></tr>
<tr><td>py</td><td>pyodide-interrupts</td><td>pyparsing</td><td>pyrtl</td></tr>
<tr><td>pytest</td><td>python-dateutil</td><td>python-sat</td><td>pytz</td></tr>
<tr><td>pywavelets</td><td>pyyaml</td><td>regex</td><td>retrying</td></tr>
<tr><td>scikit-image</td><td>scikit-learn</td><td>scipy</td><td>setuptools</td></tr>
<tr><td>six</td><td>soupsieve</td><td>statsmodels</td><td>swiglpk</td></tr>
<tr><td>sympy</td><td>toolz</td><td>traits</td><td>typing-extensions</td></tr>
<tr><td>uncertainties</td><td>webencodings</td><td>xlrd</td><td>yt</td></tr>
<tr><td>zarr</td><td>zlib</td><td>&nbsp;</td><td>&nbsp;</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: s&nbsp;architekturou projektu
<i>Pyodide</i> se blíže seznámíme v&nbsp;samostatném článku.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Praktická část &ndash; příprava na instalaci projektu <i>JupyterLite</i></h2>

$ uname -a
Linux kvm-01-guest04.lab.eng.brq.redhat.com 5.12.15-200.fc33.x86_64 #1 SMP Wed Jul 7 19:56:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux

$ cat /etc/fedora-release
Fedora release 33 (Thirty Three)

$ python --version
Python 3.9.6

$ pip --version
pip 20.2.2 from /usr/lib/python3.9/site-packages/pip (python 3.9)

$ pip install --user --pre jupyterlite
Collecting jupyterlite
  Downloading jupyterlite-0.1.0a5-py3-none-any.whl (20.1 MB)
     |████████████████████████████████| 20.1 MB 2.6 MB/s
Collecting doit
  Downloading doit-0.33.1-py3-none-any.whl (84 kB)
     |████████████████████████████████| 84 kB 4.7 MB/s
Collecting jupyter_core>=4.7
  Downloading jupyter_core-4.7.1-py3-none-any.whl (82 kB)
     |████████████████████████████████| 82 kB 1.5 MB/s
Collecting entrypoints
  Downloading entrypoints-0.3-py2.py3-none-any.whl (11 kB)
Collecting pyinotify; sys_platform == "linux"
  Downloading pyinotify-0.9.6.tar.gz (60 kB)
     |████████████████████████████████| 60 kB 7.1 MB/s
Collecting cloudpickle
  Downloading cloudpickle-1.6.0-py3-none-any.whl (23 kB)
Collecting traitlets
  Downloading traitlets-5.0.5-py3-none-any.whl (100 kB)
     |████████████████████████████████| 100 kB 11.1 MB/s
Collecting ipython-genutils
  Downloading ipython_genutils-0.2.0-py2.py3-none-any.whl (26 kB)
Using legacy 'setup.py install' for pyinotify, since package 'wheel' is not installed.
Installing collected packages: pyinotify, cloudpickle, doit, ipython-genutils, traitlets, jupyter-core, entrypoints, jupyterlite
    Running setup.py install for pyinotify ... done
Successfully installed cloudpickle-1.6.0 doit-0.33.1 entrypoints-0.3 ipython-genutils-0.2.0 jupyter-core-4.7.1 jupyterlite-0.1.0a5 pyinotify-0.9.6 traitlets-5.0.5

pip3 install --user jupyter_server
Collecting jupyter_server
  Downloading jupyter_server-1.9.0-py3-none-any.whl (389 kB)
     |████████████████████████████████| 389 kB 2.8 MB/s 
Collecting nbformat
  Downloading nbformat-5.1.3-py3-none-any.whl (178 kB)
     |████████████████████████████████| 178 kB 3.8 MB/s 
Requirement already satisfied: ipython-genutils in /home/tester/.local/lib/python3.9/site-packages (from jupyter_server) (0.2.0)
Collecting Send2Trash
  Downloading Send2Trash-1.7.1-py3-none-any.whl (17 kB)
  ...
  ...
  ...
Running setup.py install for pandocfilters ... done
Successfully installed MarkupSafe-2.0.1 Send2Trash-1.7.1 anyio-3.2.1 argon2-cffi-20.1.0 async-generator-1.10 attrs-21.2.0 bleach-3.3.1 certifi-2021.5.30 cffi-1.14.6 charset-normalizer-2.0.3 defusedxml-0.7.1 idna-3.2 jinja2-3.0.1 jsonschema-3.2.0 jupyter-client-6.1.12 jupyter-server-1.9.0 jupyterlab-pygments-0.1.2 mistune-0.8.4 nbclient-0.5.3 nbconvert-6.1.0 nbformat-5.1.3 nest-asyncio-1.5.1 packaging-21.0 pandocfilters-1.4.3 prometheus-client-0.11.0 ptyprocess-0.7.0 pycparser-2.20 pygments-2.9.0 pyparsing-2.4.7 pyrsistent-0.18.0 pyzmq-22.1.0 requests-2.26.0 requests-unixsocket-0.2.0 sniffio-1.2.0 terminado-0.10.1 testpath-0.5.0 tornado-6.1 urllib3-1.26.6 webencodings-0.5.1 websocket-client-1.1.0



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

$ python -m http.server
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

jupyter lite build --files examples

https://github.com/tisnik/jupyter-notebook-examples

$ git clone http://github.com/tisnik/jupyter-notebook-examples.git
Cloning into 'jupyter-notebook-examples'...
warning: redirecting to https://github.com/tisnik/jupyter-notebook-examples.git/
remote: Enumerating objects: 643, done.
remote: Counting objects: 100% (643/643), done.
remote: Compressing objects: 100% (366/366), done.
remote: Total 643 (delta 301), reused 606 (delta 267), pack-reused 0
Receiving objects: 100% (643/643), 7.11 MiB | 9.93 MiB/s, done.
Resolving deltas: 100% (301/301), done.

$ cd jupyter-notebook-examples/

$ jupyter lite build --files .
static:jupyter-lite.json
.  pre_status:static:jupyter-lite.json
    tarball:  jupyterlite-app-0.1.0-alpha.5.tgz 19MB
    output:   /home/tester/work2/jupyter-notebook-examples/_output
    lite dir: /home/tester/work2/jupyter-notebook-examples
    apps:     ('lab', 'retro')
archive:archive
contents:contents
lite:jupyter-lite.json
serve:contents
settings:overrides
.  status:archive:archive
[LiteBuildApp] No archive (yet): jupyter-notebook-examples-jupyterlite.tgz
.  status:contents:contents
    contents: 196 files
.  status:lite:jupyter-lite.json
[LiteBuildApp]     jupyter-lite.(json|ipynb): 0 files
.  status:serve:contents
    will serve 8000 with: tornado
.  status:settings:overrides
    overrides.json: 0
static:output_dir
.  pre_init:static:output_dir
static:unpack
.  init:static:unpack
contents:copy:/files/Clojupyter - BufferedBitmap.ipynb
contents:copy:/files/Clojupyter - Importing clojure.repl namespace.ipynb

contents:contents:clojupyter-project/test/xyz
contents:contents:.
federated_extensions:patch
.  post_build:contents:contents:R
.  post_build:contents:contents:calysto_hy
.  post_build:contents:contents:clojupyter
.  post_build:contents:contents:clojupyter-project
.  post_build:contents:contents:courses
.  post_build:contents:contents:docs
.  post_build:contents:contents:matplotlib
.  post_build:contents:contents:pandas
.  post_build:contents:contents:push-pull-model-benchmarks
.  post_build:contents:contents:raster_images
.  post_build:contents:contents:clojupyter-project/doc
.  post_build:contents:contents:clojupyter-project/src
.  post_build:contents:contents:clojupyter-project/test
.  post_build:contents:contents:clojupyter-project/src/xyz
.  post_build:contents:contents:clojupyter-project/test/xyz
.  post_build:contents:contents:.
.  post_build:federated_extensions:patch

cd _output
[tester@kvm-01-guest04 _output]$ python -m http.server
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Technologie WebAssembly (WASM)</h2>

<p>V&nbsp;předchozím textu jsme se již několikrát zmínili o technologii nazvané
<i>WebAssembly</i> či zkráceně pouze <i>WASM</i>. V&nbsp;první řadě se jedná o
specifikaci virtuálního stroje, především jeho <a
href="https://webassembly.github.io/spec/core/index.html">struktury</a> (pro
zajímavost: je založen na zásobníku operandů, podobně jako například <a
href="https://www.root.cz/serialy/programovaci-jazyk-java-a-jvm/">virtuální
stroj Javy</a>) a taktéž ze specifikace jeho <a
href="https://webassembly.github.io/spec/core/appendix/index-instructions.html#index-instr">instrukčního
souboru</a>. Důležité přitom je, že současně používaná varianta WebAssembly je
skutečně dosti nízkoúrovňová, takže (alespoň prozatím) neobsahuje například ani
podporu pro automatickou správu paměti a i specifikace samotného runtime je
dosti minimalistická. To je ovšem v&nbsp;mnoha ohledech nutno chápat jako
přednost, protože u programovacích jazyků typu C, C++ či <a
href="https://www.root.cz/serialy/programovaci-jazyk-rust/">Rust</a> není
automatická správa paměti relevantní a jejich runtime je malý a naopak u jazyků
typu <a href="https://www.root.cz/serialy/programovaci-jazyk-go/">Go</a> je
správce paměti přímo součástí <i>runtime</i> (zjednodušeně řečeno knihoven,
které jsou slinkovány a tvoří výsledný bajtkód předávaný WebAssembly). Správa
paměti řízená přímo WebAssembly je prozatím ve fázi vývoje a dnes ji nebudeme
potřebovat ani si ji popisovat.</p>

<p>Již v&nbsp;předchozím odstavci jsme se zmínili o problematice
<i>runtime</i>. Virtuální stroj WebAssembly akceptuje soubory s&nbsp;MIME typem
nastaveným na <strong>application/wasm</strong>, které by měly obsahovat jak
vlastní kód aplikace přeložený do bajtkódu, tak i veškerý podpůrný kód.
V&nbsp;případě (například) programovacího jazyka Go to konkrétně znamená, že
soubory s&nbsp;přeloženou aplikací jsou poměrně velké. I ta nejjednodušší
aplikace přeložená do WebAssembly má velikost cca 1300 kB, protože je ve
výsledku obsažený celý potřebný runtime i automatický správce paměti. A
v&nbsp;případě Pythonu &ndash; viz předchozí kapitoly &ndash; je velikost
runtime ještě o mnoho větší, což znamená, že první načtení celého podpůrného
prostředí pro Jupyter Notebooky bude v&nbsp;případě <i>Jupyteru Lite</i> trvat
delší dobu. Další spuštění již budou příslušné WASM soubory načítat
z&nbsp;lokální diskové cache, takže inicializace celého prostředí by měla být
prakticky okamžitá &ndash; řádově v&nbsp;sekundách, i méně.</p>

<p><div class="rs-tip-major">Poznámka ke kombinaci WASM + Go: velikost
výsledného souboru se zvětšujícím se zdrojovým kódem aplikace dále již roste
jen pomalu, ovšem i přesto je nutné počítat s&nbsp;tím, že první načtení a
inicializace bajtkódu může být pomalá (mobilní připojení atd.) a může se tedy
jednat o jeden z&nbsp;důvodů, proč WebAssembly a Go v&nbsp;praxi spíše
nepoužívat. Na druhou stranu si představme například aplikaci typu
&bdquo;webové IDE&ldquo; nebo Google Docs &ndash; zde se doba nutná pro přenos
cca jednoho či dvou megabajtů runtime pravděpodobně ztratí mezi stovkami
kilobajtů dalších souborů (navíc se vlastně mnohdy mohou odstranit všechny
JavaScriptové knihovny); u podobných aplikací se navíc očekává, že budou
spuštěny delší dobu, na rozdíl od běžných webových prezentací.</div></p>

<p>Předností WebAssembly v&nbsp;porovnání s&nbsp;dalšími webovými technologiemi
(transpilery, <a href="http://asmjs.org/spec/latest/">asm.js</a>) by měla být
větší rychlost provádění přeloženého kódu, která by s&nbsp;kvalitním
just-in-time překladačem mohla dosahovat podobného výkonu jako nativní kód. A
nesmíme zapomenout ani na fakt, že do WebAssembly lze překládat z&nbsp;mnoha
běžných mainstreamových jazyků, například z&nbsp;C, C++, Go, Rustu atd. Pro Go
je k&nbsp;dispozici vlastní překladač, pro ostatní zmíněné jazyky lze použít
<i>Emscripten</i>.</p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Odkazy na články o Jupyter Notebooku</h2>

<p>Se samotným nástrojem Jupyter Notebook jsme se již na stránkách Rootu
čtyřikrát setkali, a to konkrétně v&nbsp;následujících článcích:</p>

<ol>

<li>Jupyter Notebook – nástroj pro programátory, výzkumníky i lektory<br />
<a href="https://www.root.cz/clanky/jupyter-notebook-nastroj-pro-programatory-vyzkumniky-i-lektory/">https://www.root.cz/clanky/jupyter-notebook-nastroj-pro-programatory-vyzkumniky-i-lektory/</a>
</li>

<li>Tvorba grafů v&nbsp;Jupyter Notebooku s&nbsp;využitím knihovny Matplotlib<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/">https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib/</a>
</li>

<li>Tvorba grafů v&nbsp;Jupyter Notebooku s&nbsp;využitím knihovny Matplotlib (dokončení)<br />
<a href="https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib-dokonceni/">https://www.root.cz/clanky/tvorba-grafu-v-jupyter-notebooku-s-vyuzitim-knihovny-matplotlib-dokonceni/</a>
</li>

<li>Jupyter Notebook – operace s rastrovými obrázky a UML diagramy, literate programming<br />
<a href="https://www.root.cz/clanky/jupyter-notebook-operace-s-rastrovymi-obrazky-a-uml-diagramy-literate-programming/">https://www.root.cz/clanky/jupyter-notebook-operace-s-rastrovymi-obrazky-a-uml-diagramy-literate-programming/</a>
</li>

<li>Interpret programovacího jazyka Clojure integrovaný do Jupyter Notebooku<br />
<a href="https://www.root.cz/clanky/interpret-programovaciho-jazyka-clojure-integrovany-do-jupyter-notebooku/">https://www.root.cz/clanky/interpret-programovaciho-jazyka-clojure-integrovany-do-jupyter-notebooku/</a>
</li>

<li>Calysto Hy: integrace programovacího jazyka Hy s&nbsp;Jupyter Notebookem<br />
<a href="https://www.root.cz/clanky/calysto-hy-integrace-programovaciho-jazyka-hy-s-jupyter-notebookem/">https://www.root.cz/clanky/calysto-hy-integrace-programovaciho-jazyka-hy-s-jupyter-notebookem/</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na články a videa s&nbsp;tématem technologie WebAssembly</h2>

<ol>

<li>Využití WebAssembly z&nbsp;programovacího jazyka Go<br />
<a href="https://www.root.cz/clanky/vyuziti-webassembly-z-programovaciho-jazyka-go/">https://www.root.cz/clanky/vyuziti-webassembly-z-programovaciho-jazyka-go/</a>
</li>

<li>WebAssembly prošlo standardizací ve W3C, byla vydána verze 1.0<br />
<a href="https://www.root.cz/zpravicky/webassembly-proslo-standardizaci-ve-w3c-byla-vydana-verze-1-0/">https://www.root.cz/zpravicky/webassembly-proslo-standardizaci-ve-w3c-byla-vydana-verze-1-0/</a>
</li>

<li>WebAssembly<br />
<a href="https://webassembly.org/">https://webassembly.org/</a>
</li>

<li>WebAssembly na Wiki Golangu<br />
<a href="https://github.com/golang/go/wiki/WebAssembly">https://github.com/golang/go/wiki/WebAssembly</a>
</li>

<li>The future of WebAssembly – A look at upcoming features and proposals<br />
<a href="https://blog.scottlogic.com/2018/07/20/wasm-future.html">https://blog.scottlogic.com/2018/07/20/wasm-future.html</a>
</li>

<li>Writing WebAssembly By Hand<br />
<a href="https://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html">https://blog.scottlogic.com/2018/04/26/webassembly-by-hand.html</a>
</li>

<li>WebAssembly Specification<br />
<a href="https://webassembly.github.io/spec/core/index.html">https://webassembly.github.io/spec/core/index.html</a>
</li>

<li>Index of Instructions<br />
<a href="https://webassembly.github.io/spec/core/appendix/in­dex-instructions.html">https://webassembly.github.io/spec/core/appendix/in­dex-instructions.html</a>
</li>

<li>The WebAssembly Binary Toolkit<br />
<a href="https://github.com/WebAssembly/wabt">https://github.com/WebAssembly/wabt</a>
</li>

<li>Will WebAssembly replace JavaScript? Or Will WASM Make JavaScript More Valuable in Future?<br />
<a href="https://dev.to/vaibhavshah/will-webassembly-replace-javascript-or-will-wasm-make-javascript-more-valuable-in-future-5c6e">https://dev.to/vaibhavshah/will-webassembly-replace-javascript-or-will-wasm-make-javascript-more-valuable-in-future-5c6e</a>
</li>

<li>Roadmap (pro WebAssemly)<br />
<a href="https://webassembly.org/roadmap/">https://webassembly.org/roadmap/</a>
</li>

<li>S-expression<br />
<a href="https://en.wikipedia.org/wiki/S-expression">https://en.wikipedia.org/wiki/S-expression</a>
</li>

<li>Understanding WebAssembly text format<br />
<a href="https://developer.mozilla.org/en-US/docs/WebAssembly/Under­standing_the_text_format">https://developer.mozilla.org/en-US/docs/WebAssembly/Under­standing_the_text_format</a>
</li>

<li>Learning Golang through WebAssembly – Part 1, Introduction and setup<br />
<a href="https://www.aaron-powell.com/posts/2019–02–04-golang-wasm-1-introduction/">https://www.aaron-powell.com/posts/2019–02–04-golang-wasm-1-introduction/</a>
</li>

<li>Learning Golang through WebAssembly – Part 2, Writing your first piece of Go<br />
<a href="https://www.aaron-powell.com/posts/2019–02–05-golang-wasm-2-writing-go/">https://www.aaron-powell.com/posts/2019–02–05-golang-wasm-2-writing-go/</a>
</li>

<li>Learning Golang through WebAssembly – Part 3, Interacting with JavaScript from Go<br />
<a href="https://www.aaron-powell.com/posts/2019–02–06-golang-wasm-3-interacting-with-js-from-go/">https://www.aaron-powell.com/posts/2019–02–06-golang-wasm-3-interacting-with-js-from-go/</a>
</li>

<li>Golang webassembly (wasm) testing with examples<br />
<a href="https://jelinden.fi/blog/golang-webassembly-wasm-testing-with-examples/qB7Tb2KmR">https://jelinden.fi/blog/golang-webassembly-wasm-testing-with-examples/qB7Tb2KmR</a>
</li>

<li>Use Cases (of WebAssembly)<br />
<a href="https://webassembly.org/docs/use-cases/">https://webassembly.org/docs/use-cases/</a>
</li>

<li>Tabulka s&nbsp;podporou WebAssembly v&nbsp;různých prohlížečích<br />
<a href="https://caniuse.com/#feat=wasm">https://caniuse.com/#feat=wasm</a>
</li>

<li>An introduction to WebAssembly<br />
<a href="https://www.youtube.com/watch?v=3sU557ZKjUs">https://www.youtube.com/watch?v=3sU557ZKjUs</a>
</li>

<li>Web Assembly (WASM) in 100 Seconds<br />
<a href="https://www.youtube.com/watch?v=cbB3QEwWMlA">https://www.youtube.com/watch?v=cbB3QEwWMlA</a>
</li>

<li>What is WebAssembly?<br />
<a href="https://www.youtube.com/watch?v=kTZoZbxDudw">https://www.youtube.com/watch?v=kTZoZbxDudw</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Další odkazy na Internetu</h2>

<ol>

<li>JupyterLite na PyPi<br />
<a href="https://pypi.org/project/jupyterlite/">https://pypi.org/project/jupyterlite/</a>
</li>

<li>JupyterLite na GitHubu<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Dokumentace k&nbsp;projektu JupyterLite<br />
<a href="https://github.com/jupyterlite/jupyterlite">https://github.com/jupyterlite/jupyterlite</a>
</li>

<li>Notebook interface<br />
<a href="https://en.wikipedia.org/wiki/Notebook_interface">https://en.wikipedia.org/wiki/Notebook_interface</a>
</li>

<li>Jypyter: open source, interactive data science and scientific computing across over 40 programming languages<br />
<a href="https://jupyter.org/">https://jupyter.org/</a>
</li>

<li>Matplotlib Home Page<br />
<a href="http://matplotlib.org/">http://matplotlib.org/</a>
</li>

<li>Matplotlib (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Matplotlib">https://en.wikipedia.org/wiki/Matplotlib</a>
</li>

<li>Popis barvových map modulu matplotlib.cm<br />
<a href="https://gist.github.com/endolith/2719900#id7">https://gist.github.com/endolith/2719900#id7</a>
</li>

<li>Ukázky (palety) barvových map modulu matplotlib.cm<br />
<a href="http://matplotlib.org/examples/color/colormaps_reference.html">http://matplotlib.org/examples/color/colormaps_reference.html</a>
</li>

<li>Galerie grafů vytvořených v&nbsp;Matplotlibu<br />
<a href="https://matplotlib.org/3.2.1/gallery/">https://matplotlib.org/3.2.1/gallery/</a>
</li>

<li>showcase example code: xkcd.py<br />
<a href="https://matplotlib.org/xkcd/examples/showcase/xkcd.html">https://matplotlib.org/xkcd/examples/showcase/xkcd.html</a>
</li>

<li>Customising contour plots in matplotlib<br />
<a href="https://philbull.wordpress.com/2012/12/27/customising-contour-plots-in-matplotlib/">https://philbull.wordpress.com/2012/12/27/customising-contour-plots-in-matplotlib/</a>
</li>

<li>Graphics with Matplotlib<br />
<a href="http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html">http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html</a>
</li>

<li>The IPython Notebook<br />
<a href="http://ipython.org/notebook.html">http://ipython.org/notebook.html</a>
</li>

<li>nbviewer: a simple way to share Jupyter Notebooks<br />
<a href="https://nbviewer.jupyter.org/">https://nbviewer.jupyter.org/</a>
</li>

<li>Back to the Future: Lisp as a Base for a Statistical Computing System<br />
<a href="https://www.stat.auckland.ac.nz/~ihaka/downloads/Compstat-2008.pdf">https://www.stat.auckland.ac.nz/~ihaka/downloads/Compstat-2008.pdf</a>
</li>

<li>gg4clj: a simple wrapper for using R's ggplot2 in Clojure and Gorilla REPL<br />
<a href="https://github.com/JonyEpsilon/gg4clj">https://github.com/JonyEpsilon/gg4clj</a>
</li>

<li>Analemma: a Clojure-based SVG DSL and charting library<br />
<a href="http://liebke.github.io/analemma/">http://liebke.github.io/analemma/</a>
</li>

<li>Clojupyter: a Jupyter kernel for Clojure<br />
<a href="https://github.com/roryk/clojupyter">https://github.com/roryk/clojupyter</a>
</li>

<li>Incanter is a Clojure-based, R-like platform for statistical computing and graphics.<br />
<a href="http://incanter.org/">http://incanter.org/</a>
</li>

<li>Evolution of incanter (Gource Visualization)<br />
<a href="https://www.youtube.com/watch?v=TVfL5nPELr4">https://www.youtube.com/watch?v=TVfL5nPELr4</a>
</li>

<li>Questions tagged [incanter] (na Stack Overflow)<br />
<a href="https://stackoverflow.com/questions/tagged/incanter?sort=active">https://stackoverflow.com/questions/tagged/incanter?sort=active</a>
</li>

<li>Data Sorcery with Clojure<br />
<a href="https://data-sorcery.org/contents/">https://data-sorcery.org/contents/</a>
</li>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>R Markdown: The Definitive Guide<br />
<a href="https://bookdown.org/yihui/rmarkdown/">https://bookdown.org/yihui/rmarkdown/</a>
</li>

<li>Single-page application<br />
<a href="https://en.wikipedia.org/wiki/Single-page_application">https://en.wikipedia.org/wiki/Single-page_application</a>
</li>

<li>Video streaming in the Jupyter Notebook<br />
<a href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85</a>
</li>

<li>How IPython and Jupyter Notebook work<br />
<a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html</a>
</li>

<li>Jupyter kernels<br />
<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a>
</li>

<li>Keras: The Python Deep Learning library<br />
<a href="https://keras.io/">https://keras.io/</a>
</li>

<li>TensorFlow<br />
<a href="https://www.tensorflow.org/">https://www.tensorflow.org/</a>
</li>

<li>PyTorch<br />
<a href="https://pytorch.org/">https://pytorch.org/</a>
</li>

<li>Seriál Torch: framework pro strojové učení<br />
<a href="https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/">https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/</a>
</li>

<li>Scikit-learn<br />
<a href="https://scikit-learn.org/stable/">https://scikit-learn.org/stable/</a>
</li>

<li>Java Interop (Clojure)<br />
<a href="https://clojure.org/reference/java_interop">https://clojure.org/reference/java_interop</a>
</li>

<li>Obrazy s&nbsp;balíčky Jupyter Notebooku pro Docker<br />
<a href="https://hub.docker.com/u/jupyter/#!">https://hub.docker.com/u/jupyter/#!</a>
</li>

<li>Správce balíčků Conda (dokumentace)<br />
<a href="https://docs.conda.io/en/latest/">https://docs.conda.io/en/latest/</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03</a>
</li>

<li>Graphics with Matplotlib<br />
<a href="http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html">http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html</a>
</li>

<li>Embedding Matplotlib Animations in Jupyter Notebooks<br />
<a href="http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/">http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/</a>
</li>

<li>Literate programing, Kolokviální práce Pavla Starého<br />
<a href="https://www.fi.muni.cz/usr/jkucera/pv109/starylp.htm">https://www.fi.muni.cz/usr/jkucera/pv109/starylp.htm</a>
</li>

<li>PlantUML (home page)<br />
<a href="http://plantuml.sourceforge.net/">http://plantuml.sourceforge.net/</a>
</li>

<li>PlantUML (download page)<br />
<a href="http://sourceforge.net/projects/plantuml/files/plantuml.jar/download">http://sourceforge.net/projects/plantuml/files/plantuml.jar/download</a>
</li>

<li>PlantUML (Language Reference Guide)<br />
<a href="http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf">http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf</a>
</li>

<li>Plain-text diagrams take shape in Asciidoctor!<br />
<a href="http://asciidoctor.org/news/2014/02/18/plain-text-diagrams-in-asciidoctor/">http://asciidoctor.org/news/2014/02/18/plain-text-diagrams-in-asciidoctor/</a>
</li>

<li>Graphviz - Graph Visualization Software<br />
<a href="http://www.graphviz.org/">http://www.graphviz.org/</a>
</li>

<li>graphviz (Manual Page)<br />
<a href="http://www.root.cz/man/7/graphviz/">http://www.root.cz/man/7/graphviz/</a>
</li>

<li>PIL: The friendly PIL fork (home page)<br />
<a href="https://python-pillow.org/">https://python-pillow.org/</a>
</li>

<li>Python Imaging Library (PIL), (home page)<br />
<a href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a>
</li>

<li>PIL 1.1.6 na PyPi<br />
<a href="https://pypi.org/project/PIL/">https://pypi.org/project/PIL/</a>
</li>

<li>Pillow 5.2.0 na PyPi<br />
<a href="https://pypi.org/project/Pillow/">https://pypi.org/project/Pillow/</a>
</li>

<li>Python Imaging Library na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/Python_Imaging_Library">https://en.wikipedia.org/wiki/Python_Imaging_Library</a>
</li>

<li>Pillow na GitHubu<br />
<a href="https://github.com/python-pillow/Pillow">https://github.com/python-pillow/Pillow</a>
</li>

<li>Pillow - dokumentace na readthedocs.io<br />
<a href="http://pillow.readthedocs.io/en/5.2.x/">http://pillow.readthedocs.io/en/5.2.x/</a>
</li>

<li>How to use Pillow, a fork of PIL<br />
<a href="https://www.pythonforbeginners.com/gui/how-to-use-pillow">https://www.pythonforbeginners.com/gui/how-to-use-pillow</a>
</li>

<li>Pyodide<br />
<a href="https://github.com/pyodide/pyodide">https://github.com/pyodide/pyodide</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

