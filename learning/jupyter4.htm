<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Jupyter Notebook &ndash; operace s&nbsp;rastrovými obrázky a UML diagramy, literate programming</a></p>
<p><a href="#k02">*** 2. Konverze diáře do zdrojového kódu Pythonu</a></p>
<p><a href="#k03">*** 3. Práce s&nbsp;rastrovými obrázky</a></p>
<p><a href="#k04">*** 4. Změna velikosti obrázku</a></p>
<p><a href="#k05">*** 5. Vykreslování na úrovni pixelů</a></p>
<p><a href="#k06">*** 6. Načtení obrázku z&nbsp;externího souboru</a></p>
<p><a href="#k07">*** 7. Vykreslování základních 2D primitiv</a></p>
<p><a href="#k08">*** 8. Aplikace jednoduchých konvolučních filtrů</a></p>
<p><a href="#k09">*** 9. Integrace Jupyter Notebooku s&nbsp;PlantUML</a></p>
<p><a href="#k10">*** 10. Diagram aktivit</a></p>
<p><a href="#k11">*** 11. Diagram tříd</a></p>
<p><a href="#k12">*** 12. Stavové diagramy</a></p>
<p><a href="#k13">*** 13. Hierarchické členění stavových diagramů</a></p>
<p><a href="#k14">*** 14. Tvorba sekvenčních diagramů v PlantUML</a></p>
<p><a href="#k15">*** 15. Složitější příklady</a></p>
<p><a href="#k16">*** 16. Jupyter Notebook a literate programming</a></p>
<p><a href="#k17">*** 17. Ukázka diáře s&nbsp;popisem všech kroků</a></p>
<p><a href="#k18">*** 18. Export diáře do dalších formátů</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Jupyter Notebook &ndash; operace s&nbsp;rastrovými obrázky a UML diagramy, literate programming</h2>

<p></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Konverze diáře do zdrojového kódu Pythonu</h2>

<pre>
$ <strong>jupyter nbconvert --to script raster_image.ipynb</strong>
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Práce s&nbsp;rastrovými obrázky</h2>

<pre>
import numpy as np
from matplotlib import pyplot as plt

raster = np.zeros(shape=(450, 450, 3), dtype=np.uint8)

plt.imshow(raster)

plt.show()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Změna velikosti obrázku</h2>

<pre>
import numpy as np
from matplotlib import pyplot as plt

raster = np.zeros(shape=(450, 450, 3), dtype=np.uint8)

plt.figure(1, figsize=(8,6), dpi=100)
plt.imshow(raster)

plt.show()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Vykreslování na úrovni pixelů</h2>

<pre>
import numpy as np
from matplotlib import pyplot as plt

WIDTH = 256
HEIGHT = 256
raster = np.zeros(shape=(HEIGHT, WIDTH, 3), dtype=np.uint8)

for y in range(HEIGHT):
    for x in range(WIDTH):
        raster[y][x][0] = x
        raster[y][x][1] = 255
        raster[y][x][2] = y

plt.figure(1, figsize=(8,6), dpi=100)
plt.imshow(raster)

plt.show()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Načtení obrázku z&nbsp;externího souboru</h2>

<pre>
import numpy as np
from PIL import Image
from matplotlib import pyplot as plt

filename="house.png"
img = Image.open(filename)

plt.figure(1, figsize=(6,6), dpi=100)
plt.imshow(img)

plt.show()
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Vykreslování základních 2D primitiv</h2>

<pre>
import numpy as np
from PIL import Image, ImageDraw
from matplotlib import pyplot as plt

filename="house.png"
img = Image.open(filename)

draw = ImageDraw.Draw(img)
width, height = img.size[0], img.size[1]

for x in range(0, width, 16):
    draw.line((x, 0, x, height-1), fill=(255, 255, 255))

for y in range(0, height, 16):
    draw.line((0, y, width-1, y), fill=(255, 255, 255))

size = 2*width/72
plt.figure(1, figsize=(size,size), dpi=100)
plt.imshow(img, interpolation="none")

plt.show()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Aplikace jednoduchých konvolučních filtrů</h2>

<pre>
import numpy as np
from PIL import Image, ImageFilter
from matplotlib import pyplot as plt

filename="house.png"
img = Image.open(filename)

blurred = img.filter(ImageFilter.BLUR)

plt.figure(1, figsize=(8,6), dpi=100)
plt.imshow(blurred)

plt.show()
</pre>

<pre>
import numpy as np
from PIL import Image, ImageFilter
from matplotlib import pyplot as plt

filename="house.png"
img = Image.open(filename)

edges = img.filter(ImageFilter.FIND_EDGES)

plt.figure(1, figsize=(6,6), dpi=100)
plt.imshow(edges)

plt.show()
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Integrace Jupyter Notebooku s&nbsp;PlantUML</h2>

<p>Nástroj <i>PlantUML</i> (<a
href="http://plantuml.sourceforge.net/">http://plantuml.sourceforge.net/</a>)
dokáže na základě textového popisu UML diagramu vytvořit bitmapový obrázek či
SVG s&nbsp;tímto diagramem, přičemž uživatel může do jisté míry ovlivnit způsob
jeho vykreslení, přidat popis hran apod. V&nbsp;současné verzi <i>PlantUML</i>
je podporováno mnoho typů UML diagramů, zejména: diagram aktivit, stavový
diagram, diagram tříd, diagram objektů, diagram komponent, diagram užití a
sekvenční diagram. Ve skutečnosti sice UML popisuje i další typy diagramů,
ovšem <i>PlantUML</i> s&nbsp;velkou pravděpodobností dokáže pokrýt většinu
potřeb analytiků i programátorů, protože v&nbsp;nabídce podporovaných diagramů
jsou zastoupeny všechny tři kategorie: popis struktury informačního systému,
popis chování informačního systému a popis interakce či komunikace.
<i>PlantUML</i> je naprogramovaný v&nbsp;Javě, ovšem jedná se o relativně malý
program, který pro svůj běh nevyžaduje enormní množství zdrojů (diskový
prostor, RAM atd.). Pro uživatele <i>PlantUML</i> je na adrese <a
href="http://sourceforge.net/projects/plantuml/files/plantuml.jar/download">http://sourceforge.net/projects/plantuml/files/plantuml.jar/download</a>
k&nbsp;dispozici spustitelný Java archiv, dále je vhodné si stáhnout referenční
příručku k&nbsp;jazyku z&nbsp;adresy <a
href="http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf">http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf</a>.</p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti dokonce ani nemusí být
nutné PlantUML instalovat, protože je k&nbsp;dispozici server, který vykreslení
diagramu dokáže provést automaticky. Daní za tuto jednoduchost je fakt, že se
diagram (zdrojový kód) posílá do cizí služby.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Diagram aktivit</h2>

<p>Klasické vývojové diagramy sice nejsou v&nbsp;UML přímo podporovány, ale
existuje zde velmi podobný typ diagramu nazvaný <i>diagram aktivit</i>. Tímto
diagramem je možné do jisté míry nahradit vývojové diagramy s&nbsp;větvením i
programovými smyčkami. Diagram aktivit lze v&nbsp;<i>PlantUML</i> vytvořit
velmi jednoduchým způsobem, což si ostatně ukážeme na několika demonstračních
příkladech (diářích).</p>

<p>První příklad obsahuje definici diagramu aktivit, který obsahuje jen jedinou
akci, tj.&nbsp;uzel představující většinou dále nedělený krok, který se
v&nbsp;systému provádí. Diagram obsahuje symbol inicializace (černá tečka),
koncový bod (kružnice s&nbsp;černou tečkou uprostřed) a uzel s&nbsp;prováděným
krokem. Mezi symbolem inicializace a uzlem je nakreslena šipka, podobná šipka
je pak nakreslena mezi uzlem a koncovým bodem. V&nbsp;<i>PlantUML</i> je tento
diagram představován následujícím kódem (textovým souborem). Povšimněte si
použití symbolů (*) jak pro symbol inicializace, tak i pro koncový bod:</p>

<pre>
@startuml
(*) --&gt; "Aktivita"
"Aktivita" --&gt; (*)
@enduml
</pre>

<p>Deklarace začíná řádkem <strong>@startuml</strong> a končí řádkem
<strong>@enduml</strong>. Zajímavé je, že není nutné uvádět typ diagramu
&ndash; ten je odvozen z&nbsp;kontextu.</p>

<p>Jak již bylo řečeno v&nbsp;předchozí kapitole, je možné při tvorbě diagramů
s&nbsp;využitím nástroje <i>PlantUML</i> ovlivnit způsob vykreslení diagramu.
V&nbsp;mnoha případech se nevyhneme přidání popisu k&nbsp;jednotlivým šipkám
diagramu aktivit, což lze zajistit zápisem poznámky do hranatých závorek:</p>

<pre>
@startuml
(*) --&gt; [začátek procesu] "Aktivita1"
--&gt; [zpracování požadavku] "Aktivita2"
--&gt; [konec procesu] (*)
@enduml
</pre>

<p>Taktéž je možné změnit uspořádání uzlů (a tím pádem i směr šipek). Namísto
symbolu --&gt; představujícího šipku je možné alternativně použít:</p>

<ol>
<li>-down-&gt; odpovídá běžné šipce směřující (šikmo) dolů</li>
<li>-right-&gt; šipka orientovaná doprava</li>
<li>-&gt; stejný význam jako má předchozí symbol</li>
<li>-left-&gt; šipka orientovaná doleva</li>
<li>-up-&gt; šipka orientovaná nahoru</li>
</ol>

<p>Zkusme si nyní předchozí diagram změnit takovým způsobem, aby byly všechny
uzly umístěné v&nbsp;jedné horizontální rovině. Úprava je ve skutečnosti velmi
jednoduchá:</p>

<pre>
@startuml
(*) -right-&gt; [začátek procesu] "Aktivita1"
-right-&gt; [zpracování požadavku] "Aktivita2"
-right-&gt; [konec procesu] (*)
@enduml
</pre>

<p>Velmi důležitou součástí naprosté většiny diagramů aktivit je rozvětvení. To
je reprezentováno malým kosočtvercem, takže se tento prvek diagramu podobá
rozvětvení používaného v&nbsp;klasickém vývojovém diagramu, ovšem s&nbsp;tím
rozdílem, že se podmínka pro rozvětvení může (ale nemusí) psát do předchozího
kroku (zde si dovolím sémantiku diagramu aktivit nepatrně pozměnit, protože
samotné rozvětvení není v&nbsp;diagramu aktivit chápáno jako samostatný krok).
Pojďme si nyní ukázat, jak by se postupovalo při vytváření diagramu
analogickému známému vtípku o univerzálním návodu na opravu všeho: <a
href="http://joyreactor.com/post/287235">http://joyreactor.com/post/287235</a>.
Zde se již setkáme s&nbsp;potřebou větvení, které se do diagramu aktivit
zapisuje &ndash; což mnoho programátorů patrně potěší &ndash; pomocí slov
<strong>if</strong>, <strong>then</strong>, <strong>else</strong> a
<strong>endif</strong>. Jednoduché rozvětvení může být zapsáno následovně:</p>

<pre>
@startuml
(*) --&gt; "Does it move?"
if "" then
--&gt; [yes] "WD-40"
else
--&gt; [no] "Duct Tape"
endif
"WD-40" --&gt; (*)
"Duct Tape" --&gt; (*)
@enduml
</pre>

<p>Pro lepší názornost je možné jednotlivé podvětve zvýraznit odsazením, které
je samozřejmě taktéž podporováno:</p>

<pre>
@startuml
(*) --&gt; "Does it move?"
&nbsp;
if "" then
&nbsp;
    --&gt; [yes] "Should it?" as s1
    if "" then
        --&gt; [yes] "No problem" as np1
        np1 --&gt; (*)
    else
        --&gt; [no] "Use duct tape" as tape
        tape --&gt; (*)
    endif
&nbsp;
else
&nbsp;
    --&gt; [no] "Should it?" as s2
    if "" then
        --&gt; [yes] "Use WD-40" as wd40
        wd40 --&gt; (*)
    else
        --&gt; [no] "No problem" as np2
        np2 --&gt; (*)
    endif
&nbsp;
endif
&nbsp;
@enduml
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Diagram tříd</h2>

<p>Druhým velmi často používaným diagramem definovaným ve standardu UML je
diagram tříd (<i>class diagram</i>). V&nbsp;tomto typu diagramu je možné
zobrazit jednoduché i složitější vztahy mezi třídami, například fakt, že třída
<strong>Boolean</strong> je potomkem třídy <strong>Object</strong> (příklad je
převzatý z&nbsp;Javy):</p>

<pre>
@startuml
Object &lt;|-- Boolean
@enduml
</pre>

<p>Můžeme samozřejmě zobrazit i vazby mezi větším počtem tříd. Povšimněte si,
že nikde není zapotřebí specifikovat, že se má zobrazit diagram tříd a ne
diagram aktivit: toto rozhodnutí provede <i>PlantUML</i> automaticky:</p>

<pre>
@startuml
Object &lt;|-- Boolean
Object &lt;|-- String
Object &lt;|-- Number
Number &lt;|-- Integer
Number &lt;|-- Double
@enduml
</pre>

<p><div class="rs-tip-major">Poznámka: automatické rozhodnutí o typu grafu je
provedeno na základě jeho obsahu, tj.&nbsp;o jaké uzly se jedná a jak jsou mezi
sebou propojeny.</div></p>

<p>V&nbsp;případě, že je nutné zvýraznit i přístupová práva k&nbsp;atributům,
je vhodnější použít alternativní způsob zápisu metadat o třídě. Ten se podobá
zápisu deklarace třídy v&nbsp;C++ či Javě, přičemž znaky se speciálním významem
před názvem atributu určují viditelnost i přístupová práva:</p>

<pre>
@startuml
class TestClass {
-privateField
#protectedField
~packageProtectedField
+publicField
}
@enduml
</pre>

<p>Pro úplnost doplňme třídu i o metody s&nbsp;různými přístupovými právy:</p>

<pre>
@startuml
class TestClass {
-privateField
#protectedField
~packageProtectedField
+publicField
-privateMethod()
#protectedMethod()
~packageProtectedMethod()
+publicMethod()
}
@enduml
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Stavové diagramy</h2>

<p>Velmi často používaným typem UML diagramů jsou <i>stavové diagramy</i>
neboli <i>state diagrams</i>, které lze využít pro popis konečného počtu stavů
popisovaného systému a především pak přechodů mezi jednotlivými stavy (navíc se
zde objevuje koncept událostí). Ve své nejjednodušší podobě je možné stavovým
diagramem reprezentovat klasický stavový automat, ovšem možnosti UML jsou
v&nbsp;tomto případě ještě rozšířeny o takzvané pseudostavy. Příkladem
pseudostavu může být rozvětvení (<i>fork</i>) či naopak spojení (<i>join</i>)
popř.&nbsp;pseudostav rozhodování (ten však nemá stejný význam, jako rozvětvení
používané v&nbsp;případě výše popsaného <i>diagramu aktivit</i>).
V&nbsp;následujících kapitolách si ukážeme, jakým způsobem je možné <i>stavové
diagramy</i> vykreslovat v&nbsp;nástroji <i>PlantUML</i> i to, jak lze stavové
diagramy hierarchicky rozdělovat, což je v&nbsp;případě složitějších systémů
nezbytné pro zachování srozumitelnosti a současně i dostatečné podrobnosti
stavového diagramu.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Hierarchické členění stavových diagramů</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Tvorba sekvenčních diagramů v PlantUML</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Složitější příklady</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Jupyter Notebook a literate programming</h2>

<p><i>&bdquo;"Změňme náš tradiční pohled na tvorbu programů. Místo toho abychom
předepsali počítači co má dělat, zkusme vysvětlovat lidským bytostem co chceme,
aby počítač dělal. 'Literární' programátor může být srovnáván s esejistou,
jehož hlavním cílem je srozumitelné vysvětlení a vybroušený styl. Takový autor
vybírá s tezaurem v ruce názvy proměnných a vysvětluje účel každé z nich. Snaží
se napsat program, který je srozumitelný, protože jeho principy jsou popsány
způsobem, který odpovídá lidskému myšlení a používá k tomu formální i
neformální prostředky, které se navzájem doplňují."&ldquo;<br />
Donald Knuth</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Ukázka diáře s&nbsp;popisem všech kroků</h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Export diáře do dalších formátů</h2>

<p>Diář, například ten zmíněný v&nbsp;předchozí kapitole, lze z&nbsp;Jupyter Notebooku v&nbsp;případě potřeby vyexportovat do dalších formátů. Můžeme se například pokusit o export do Markdownu, což bude úspěšné jen částečně, a to z&nbsp;toho důvodu, že standardní Markdown neobsahuje podporu pro tabulky. Ty tedy musí být vloženy pomocí HTML. Grafy jsou vyexportovány do rastrových obrázků uložených v&nbsp;samostatném podadresáři:</p>

<pre>
$ <strong>jupyter nbconvert --to markdown consumer_benchmarks.ipynb</strong>
</pre>

<p></p>

<pre>
$ <strong>jupyter nbconvert --to slides consumer_benchmarks.ipynb </strong>
</pre>

<p><div class="rs-tip-major">Poznámka: podporovány jsou i exporty do dalších formátů, včetně LaTeXu, PDF nebo AsciiDocu. Pro tyto typy exportů je však nutné mít nainstalován systém <a href="https://pandoc.org/">Pandoc</a></div>, jehož popisu bude věnován samostatný článek. Mimochodem &ndash; Pandoc je prakticky celý naprogramován v&nbsp;Haskellu.</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady (resp.&nbsp;přesněji řečeno diáře),
s&nbsp;nimiž jsme se seznámili v&nbsp;předchozích kapitolách, byly uloženy do
Git repositáře umístěného na GitHubu (<a
href="https://github.com/tisnik/jupyter-notebook-examples/">https://github.com/tisnik/jupyter-notebook-examples/</a>).
Poslední verze souborů s&nbsp;diáři naleznete pod odkazy uvedenými
v&nbsp;tabulce pod tímto odstavcem. Diář by se měl otevřít přímo v&nbsp;rámci
stránky GitHubu:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis</th><th>Zdrojový kód</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/</a></td></tr>
</table>

<p>Skripty naprogramované v&nbsp;Pythonu pro přímé použití (spuštění):</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Popis</th><th>Zdrojový kód</th></tr>
<tr><td>1</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
<tr><td>2</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
<tr><td>3</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
<tr><td>4</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
<tr><td>5</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
<tr><td>6</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
<tr><td>7</td><td></td><td></td><td><a href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/raster_images/">https://github.com/tisnik/jupyter-notebook-examples/blob/master/raaster_images/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Notebook interface<br />
<a href="https://en.wikipedia.org/wiki/Notebook_interface">https://en.wikipedia.org/wiki/Notebook_interface</a>
</li>

<li>Jypyter: open source, interactive data science and scientific computing across over 40 programming languages<br />
<a href="https://jupyter.org/">https://jupyter.org/</a>
</li>

<li>Matplotlib Home Page<br />
<a href="http://matplotlib.org/">http://matplotlib.org/</a>
</li>

<li>Matplotlib (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Matplotlib">https://en.wikipedia.org/wiki/Matplotlib</a>
</li>

<li>Popis barvových map modulu matplotlib.cm<br />
<a href="https://gist.github.com/endolith/2719900#id7">https://gist.github.com/endolith/2719900#id7</a>
</li>

<li>Ukázky (palety) barvových map modulu matplotlib.cm<br />
<a href="http://matplotlib.org/examples/color/colormaps_reference.html">http://matplotlib.org/examples/color/colormaps_reference.html</a>
</li>

<li>Galerie grafů vytvořených v&nbsp;Matplotlibu<br />
<a href="https://matplotlib.org/3.2.1/gallery/">https://matplotlib.org/3.2.1/gallery/</a>
</li>

<li>showcase example code: xkcd.py<br />
<a href="https://matplotlib.org/xkcd/examples/showcase/xkcd.html">https://matplotlib.org/xkcd/examples/showcase/xkcd.html</a>
</li>

<li>Customising contour plots in matplotlib<br />
<a href="https://philbull.wordpress.com/2012/12/27/customising-contour-plots-in-matplotlib/">https://philbull.wordpress.com/2012/12/27/customising-contour-plots-in-matplotlib/</a>
</li>

<li>Graphics with Matplotlib<br />
<a href="http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html">http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html</a>
</li>

<li>The IPython Notebook<br />
<a href="http://ipython.org/notebook.html">http://ipython.org/notebook.html</a>
</li>

<li>nbviewer: a simple way to share Jupyter Notebooks<br />
<a href="https://nbviewer.jupyter.org/">https://nbviewer.jupyter.org/</a>
</li>

<li>Back to the Future: Lisp as a Base for a Statistical Computing System<br />
<a href="https://www.stat.auckland.ac.nz/~ihaka/downloads/Compstat-2008.pdf">https://www.stat.auckland.ac.nz/~ihaka/downloads/Compstat-2008.pdf</a>
</li>

<li>gg4clj: a simple wrapper for using R's ggplot2 in Clojure and Gorilla REPL<br />
<a href="https://github.com/JonyEpsilon/gg4clj">https://github.com/JonyEpsilon/gg4clj</a>
</li>

<li>Analemma: a Clojure-based SVG DSL and charting library<br />
<a href="http://liebke.github.io/analemma/">http://liebke.github.io/analemma/</a>
</li>

<li>Clojupyter: a Jupyter kernel for Clojure<br />
<a href="https://github.com/roryk/clojupyter">https://github.com/roryk/clojupyter</a>
</li>

<li>Incanter is a Clojure-based, R-like platform for statistical computing and graphics.<br />
<a href="http://incanter.org/">http://incanter.org/</a>
</li>

<li>Evolution of incanter (Gource Visualization)<br />
<a href="https://www.youtube.com/watch?v=TVfL5nPELr4">https://www.youtube.com/watch?v=TVfL5nPELr4</a>
</li>

<li>Questions tagged [incanter] (na Stack Overflow)<br />
<a href="https://stackoverflow.com/questions/tagged/incanter?sort=active">https://stackoverflow.com/questions/tagged/incanter?sort=active</a>
</li>

<li>Data Sorcery with Clojure<br />
<a href="https://data-sorcery.org/contents/">https://data-sorcery.org/contents/</a>
</li>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>R Markdown: The Definitive Guide<br />
<a href="https://bookdown.org/yihui/rmarkdown/">https://bookdown.org/yihui/rmarkdown/</a>
</li>

<li>Single-page application<br />
<a href="https://en.wikipedia.org/wiki/Single-page_application">https://en.wikipedia.org/wiki/Single-page_application</a>
</li>

<li>Video streaming in the Jupyter Notebook<br />
<a href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85</a>
</li>

<li>How IPython and Jupyter Notebook work<br />
<a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html</a>
</li>

<li>Jupyter kernels<br />
<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a>
</li>

<li>Keras: The Python Deep Learning library<br />
<a href="https://keras.io/">https://keras.io/</a>
</li>

<li>TensorFlow<br />
<a href="https://www.tensorflow.org/">https://www.tensorflow.org/</a>
</li>

<li>PyTorch<br />
<a href="https://pytorch.org/">https://pytorch.org/</a>
</li>

<li>Seriál Torch: framework pro strojové učení<br />
<a href="https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/">https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/</a>
</li>

<li>Scikit-learn<br />
<a href="https://scikit-learn.org/stable/">https://scikit-learn.org/stable/</a>
</li>

<li>Java Interop (Clojure)<br />
<a href="https://clojure.org/reference/java_interop">https://clojure.org/reference/java_interop</a>
</li>

<li>Obrazy s&nbsp;balíčky Jupyter Notebooku pro Docker<br />
<a href="https://hub.docker.com/u/jupyter/#!">https://hub.docker.com/u/jupyter/#!</a>
</li>

<li>Správce balíčků Conda (dokumentace)<br />
<a href="https://docs.conda.io/en/latest/">https://docs.conda.io/en/latest/</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03</a>
</li>

<li>Graphics with Matplotlib<br />
<a href="http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html">http://kestrel.nmt.edu/~raymond/software/python_notes/paper004.html</a>
</li>

<li>Embedding Matplotlib Animations in Jupyter Notebooks<br />
<a href="http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/">http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/</a>
</li>

<li>Literate programing, Kolokviální práce Pavla Starého<br />
<a href="https://www.fi.muni.cz/usr/jkucera/pv109/starylp.htm">https://www.fi.muni.cz/usr/jkucera/pv109/starylp.htm</a>
</li>

<li>PlantUML (home page)<br />
<a href="http://plantuml.sourceforge.net/">http://plantuml.sourceforge.net/</a>
</li>

<li>PlantUML (download page)<br />
<a href="http://sourceforge.net/projects/plantuml/files/plantuml.jar/download">http://sourceforge.net/projects/plantuml/files/plantuml.jar/download</a>
</li>

<li>PlantUML (Language Reference Guide)<br />
<a href="http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf">http://plantuml.sourceforge.net/PlantUML_Language_Reference_Guide.pdf</a>
</li>

<li>Plain-text diagrams take shape in Asciidoctor!<br />
<a href="http://asciidoctor.org/news/2014/02/18/plain-text-diagrams-in-asciidoctor/">http://asciidoctor.org/news/2014/02/18/plain-text-diagrams-in-asciidoctor/</a>
</li>

<li>Graphviz - Graph Visualization Software<br />
<a href="http://www.graphviz.org/">http://www.graphviz.org/</a>
</li>

<li>graphviz (Manual Page)<br />
<a href="http://www.root.cz/man/7/graphviz/">http://www.root.cz/man/7/graphviz/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

