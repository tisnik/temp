<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Jupyter Notebook - nástroj pro programátory, výzkumníky i lektory</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Jupyter Notebook &ndash; nástroj pro programátory, výzkumníky i lektory</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Jupyter Notebook &ndash; nástroj pro programátory, výzkumníky i lektory</a></p>
<p><a href="#k02">2. Technologie, na níž je projekt Jupyter Notebook založen</a></p>
<p><a href="#k03">3. Architektura Jupyter Notebooku</a></p>
<p><a href="#k04">4. Podporované programovací jazyky</a></p>
<p><a href="#k05">5. Instalace Jupyter Notebooku</a></p>
<p><a href="#k06">6. Konfigurace a spuštění Jupyter Notebooku</a></p>
<p><a href="#k07">7. Další často používané balíčky</a></p>
<p><a href="#k08">8. Přímé použití Jupyter Notebooku bez instalace</a></p>
<p><a href="#k09">9. Použití Markdownu</a></p>
<p><a href="#k10">10. Matematická sazba</a></p>
<p><a href="#k11">11. Načtení dat uložených ve formátu CSV</a></p>
<p><a href="#k12">12. Základní analýza dat</a></p>
<p><a href="#k13">13. Zobrazení dat ve formě grafů</a></p>
<p><a href="#k14">*** 14. Vytvoření slajdů</a></p>
<p><a href="#k15">*** 15. Zobrazení diáře (notebooku) přímo na GitHubu</a></p>
<p><a href="#k16">16. Příbuzné projekty</a></p>
<p><a href="#k17">17. Gorilla REPL</a></p>
<p><a href="#k18">18. Gophernotes</a></p>
<p><a href="#k19">19. JupyterLab</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Jupyter Notebook &ndash; nástroj pro programátory, výzkumníky i lektory</h2>

<p>V&nbsp;dnešním článku si popíšeme velmi užitečný a přitom snadno ovladatelný
nástroj nazvaný <i>Jupyter Notebook</i>, který uživatelům (a zdaleka se nemusí
jednat pouze o vývojáře) používajícím programovací jazyk <i>Python</i>
(popř.&nbsp;některý další jazyk zmíněný dále) zpřístupňuje interaktivní
prostředí založené na použití webového rozhraní. <i>Jupyter Notebook</i> vznikl
z&nbsp;neméně známého a používaného projektu <i>IPython Notebook(s)</i>. Toto
interaktivní prostředí, které se zobrazuje přímo ve webovém prohlížeči,
obsahuje klasickou smyčku <a
href="https://www.root.cz/clanky/projekty-vylepsujici-interaktivni-rezim-pythonu-bpython-ptpython-dreampie-a-ipython/#k04">REPL</a>
(<i>Read&ndash;Eval&ndash;Print&ndash;Loop</i>), což mj.&nbsp;znamená, že se
jednotlivé výrazy zapsané uživatelem mohou ihned vyhodnocovat s&nbsp;prakticky
okamžitou zpětnou vazbou. Navíc však nástroj <i>Jupyter Notebook</i> dokáže do
okna prohlížeče vykreslovat tabulky, grafy či různé obrázky, a to jak
s&nbsp;přímým využitím předaných dat (vektory či sekvence čísel), tak i při
specifikaci funkce, jejíž průběh se má vykreslit (existují zde ovšem některá
omezení, kterými se budu zabývat v&nbsp;navazujících kapitolách). Třešničkou na
dortu je podpora pro práci se vzorci psanými v&nbsp;TeXu či LaTeXu, tvorba
slajdů, sdílení &bdquo;živého&ldquo; zdrojového kódu atd.</p>

<img src="https://i.iinfo.cz/images/669/gophernotes1-1.png" class="image-400279" alt="&#160;" width="708" height="762" />
<p><i>Obrázek 1: Klasický IPython notebook &ndash; jedná se o nástroj, který
umožňoval interaktivní ovládání interpretru Pythonu z&nbsp;GUI, nabízel všechny
možnosti konzolového IPythonu a navíc i podporoval práci s&nbsp;grafickými
objekty (rastrové obrázky, grafy, diagramy atd.).</i></p>

<p>Celé grafické uživatelské rozhraní <i>Jupyter Notebooku</i> napodobuje diář
(<i>notebook</i>), do kterého se zapisují jak poznámky, tak i případný
programový kód a jeho výsledek, takže se tento systém může hodit i pro tvorbu
(interaktivních) prezentací, použití sdílené pracovní plochy, zápis postupů, na
nichž jsou jednotlivé výpočty založeny atd. Ostatně v&nbsp;tomto ohledu není
přístup zvolený autory nijak nový ani přelomový, protože například i populární
Matlab používá podobnou technologii (i když založenou na jiném programovacím
jazyku).</p>

<p><div class="rs-tip-major">Poznámka: právě kvůli existenci uživatelského
rozhraní se celý projekt jmenuje <i>Jupyter Notebook</i>, i když samotné jádro
se jmenuje jen <i>Jupyter</i> popř.&nbsp;<i>Project Jupyter</i>. Existuje totiž
i nová forma uživatelského rozhraní pojmenovaná <i>JupyterLab</i>. Krátká
zmínka o tomto potenciálně velmi užitečném projektu bude uvedena <a
href="#k19">v&nbsp;devatenácté kapitole</a>.</div></p>

<img src="https://i.iinfo.cz/images/669/gophernotes1-2.png" class="image-400280" alt="&#160;" width="928" height="966" />D</p>
<p><i>Obrázek 2: Použití Pythonu v&nbsp;Jupyteru při výpočtu fraktálů.
Složitější numerické výpočty jsou jednou z&nbsp;oblastí, v&nbsp;níž by bylo
výhodnější použít jiný programovací jazyk, resp.&nbsp;přesněji jeho jádro
propojené s&nbsp;Jupyterem (Julia, Go, C/C++).<br />
<a href="https://github.com/vassilikitsios/fractals/blob/master/fractals.ipynb">Zdroj</a></i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Technologie, na níž je projekt Jupyter Notebook založen</h2>

<p>Nástroj <i>Jupyter Notebook</i> je založen na klasické technologii
klient-server, kde klientem je webový prohlížeč spuštěný u uživatele (či
uživatelů) a serverem je Jupyter s&nbsp;přidaným modulem (takzvaným kernelem)
pro zvolený programovací jazyk nebo jazyky (my dnes budeme používat Python)
&ndash; celá architektura je zmíněna <a href="#k03">v&nbsp;navazující
kapitole</a>). Výraz, popř.&nbsp;blok výrazů představujících programový kód
napsaný ve zvoleném programovacím jazyce, je po stlačení klávesové zkratky
<strong>Shift+Enter</strong> přenesen na server, kde je zpracován a výsledek je
poslán zpět do prohlížeče.</p>

<img src="https://i.iinfo.cz/images/72/gorilla-repl-2.png" class="image-242638" alt="&#160;" width="660" height="341" />
<p><i>Obrázek 3: Nástroj Gorilla REPL obsahuje podporu pro doplňování názvů
funkcí a maker společně se zobrazením nápovědy (programové dokumentace). Jedná
se o nástroj založený na stejném paradigmatu jako dnes popisovaný Jupyter
Notebook, ovšem Gorilla REPL je primárně určen pro jazyk Clojure zatímco
Jupyter Notebook je více univerzální.</i></p>

<p>JavaScriptový kód na straně prohlížeče zajistí interpretaci získaných
výsledků a jejich zařazení na správné místo do dynamické webové stránky (jedná
se vlastně o variantu na dnes tak populární <a
href="https://en.wikipedia.org/wiki/Single-page_application">SPA</a> &ndash;
<i>Single-Page Application</i> se všemi přednostmi a pochopitelně i zápory,
které toto řešení přináší). Výsledky poslané serverem na klienta mohou být ve
skutečnosti různého typu; typicky se jedná o fragment HTML (tabulky atd.),
obrázek typu SVG (graf, histogram), rastrový obrázek (graf získaný například ze
systému R), vzorec vykreslený z&nbsp;TeXového či LaTeXového zdrojového kódu, <a
href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">animace
či video</a> (různé formáty) apod. Samotná architektura nástroje Jupyter je
otevřená a poměrně snadno rozšiřitelná, což znamená, že je v&nbsp;případě
potřeby možné přidat například další typy grafů apod.</p>

<p>Existují i podobně koncipované projekty. Na stránkách Rootu již vyšel článek
o projektu Gorilla REPL, který je určen pro programovací jazyk Clojure &ndash;
s&nbsp;tímto projektem se ve stručnosti seznámíme <a
href="#k17">v&nbsp;sedmnácté kapitole</a>.</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-1.png" class="image-407896" alt="&#160;" width="669" height="724" />
<p><i>Obrázek 4: Dalším podobným projektem je R Markdown notebook.<br />
Zdroj: dokumentace k&nbsp;projektu dostupná na https://bookdown.org/yihui/rmarkdown/notebook.html</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Architektura Jupyter Notebooku</h2>

<p>Jak jsme si již řekli v&nbsp;úvodní kapitole, vznikl projekt Jupyter
Notebook rozšířením původního projektu nazvaného IPython Notebooks.
V&nbsp;případě Jupyter Notebooku musely být provedeny některé změny v&nbsp;celé
architektuře, a to především z&nbsp;toho důvodu, aby bylo možné podporovat
různé programovací jazyky, další typy specializovaných <i>kernelů</i> apod.
Základem je <i>IPython Kernel</i>, který přijímá zprávy (příkazy, které se mají
vykonat) přes <a
href="https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/">ØMQ</a>,
vykonává tyto příkazy a výsledky posílá zpět přes ØMQ (povšimněte si, že
v&nbsp;tomto případě samotný kernel vůbec nezajímá, kdo příkazy posílal):</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-2.png" class="image-407897" alt="&#160;" width="393" height="355" />
<p><i>Obrázek 5: IPython Kernel a jeho navázání na ØMQ (popř.&nbsp;alternativní přístup přes standardní vstupně-výstupní operace přístupné přes terminál).<br />
Zdroj: <a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">How IPython and Jupyter Notebook work</a></i></p>

<p>IPython Kernel podporuje &ndash; což asi není při přečtení jeho jména velkým
překvapením &ndash; programovací jazyk Python. Ovšem přidat lze i další kernely
(takzvané nativní kernely), které mohou podporovat další programovací jazyky.
Alternativně není nutné vytvářet celý nový kernel (což může být komplikované
kvůli nutnosti napojení na ØMQ atd.), ale lze použít přímo IPython Kernel tak,
aby volal příkazy interpretru jiného programovacího jazyka. Teoreticky se sice
nejedná o nejefektivnější řešení, ovšem musíme si uvědomit, že spouštěny budou
příkazy zapisované přímo uživatelem a že tedy uživatel je &bdquo;úzkým
hrdlem&ldquo;, ne výkonnost jednoho interpretru volaného z&nbsp;interpretru
jiného:</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-3.png" class="image-407898" alt="&#160;" width="393" height="355" />
<p><i>Obrázek 6: Dva způsoby, jakými je možné Jupyter rozšířit o další jazyky: nepřímo přes IPython a přímo nativním kernelem.<br />
Zdroj: <a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">How IPython and Jupyter Notebook work</a></i></p>

<p>Máme tedy dva moduly &ndash; webové rozhraní (webový prohlížeč s&nbsp;JSA) a
kernel či kernely. Tyto dva moduly nejsou propojeny přímo, protože mezi nimi
leží <i>Notebook server</i>. Ten z&nbsp;jedné strany komunikuje s&nbsp;webovým
rozhraním přes HTTP a WebSockety a ze strany druhé s&nbsp;kernelem/kernely přes
ØMQ. Navíc server udržuje stav vlastního diáře. Toto řešení je snadno
rozšiřitelné, může být provozováno na jednom stroji (což si ukážeme dále) či
v&nbsp;&bdquo;cloudu&ldquo; atd. Taktéž umožňuje spolupráci na jednom diáři,
prezentaci živých výsledků apod.:</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-4.png" class="image-407899" alt="&#160;" width="633" height="357" />
<p><i>Obrázek 7: Připojení vlastního uživatelského rozhraní (založeného na webovém klientu) k&nbsp;serveru a propojení serveru s&nbsp;kernelem (kernely).<br />
Zdroj: <a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">How IPython and Jupyter Notebook work</a></i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Podporované programovací jazyky</h2>

<p>Pro projekt Jupyter vznikla celá řada kernelů, z&nbsp;nichž mnohé podporují
další programovací jazyky (i když Python bude pravděpodobně stále
nejpoužívanějším jazykem). Jedná se například o následující jazyky:</p>

<table>
<tr><th>#</th><th>Kernel</th><th>Jazyk</th></tr>
<tr><td>1</td><td>Dyalog Jupyter Kernel</td><td>APL (Dyalog)</td></tr>
<tr><td>2</td><td>Coarray-Fortran</td><td>Fortran 2008/2015</td></tr>
<tr><td>3</td><td>IJulia</td><td>Julia</td></tr>
<tr><td>4</td><td>IHaskell</td><td>ghc &gt;= 7.6</td></tr>
<tr><td>5</td><td>IRuby</td><td>ruby &gt;= 2.3</td></tr>
<tr><td>6</td><td>tslab</td><td>Typescript 3.7.2, JavaScript ESNext</td></tr>
<tr><td>7</td><td>IJavascript</td><td>nodejs &gt;= 0.10</td></tr>
<tr><td>8</td><td>ITypeScript</td><td>Typescript &gt;= 2.0</td></tr>
<tr><td>9</td><td>jpCoffeescript</td><td>coffeescript &gt;= 1.7</td></tr>
<tr><td>10</td><td>jp-LiveScript</td><td>livescript &gt;= 1.5</td></tr>
<tr><td>11</td><td>ICSharp</td><td>C# 4.0+</td></tr>
<tr><td>12</td><td>IFSharp</td><td>F#</td></tr>
<tr><td>13</td><td>lgo</td><td>Go &gt;= 1.8</td></tr>
<tr><td>14</td><td>iGalileo</td><td>Galileo &gt;= 0.1.3</td></tr>
<tr><td>15</td><td>gopherlab</td><td>Go &gt;= 1.6</td></tr>
<tr><td>16</td><td>Gophernotes</td><td>Go &gt;= 1.9</td></tr>
<tr><td>17</td><td>IScala</td><td>Scala</td></tr>
<tr><td>18</td><td>IErlang</td><td>Erlang</td></tr>
<tr><td>19</td><td>ITorch</td><td>Torch 7 (LuaJIT)</td></tr>
<tr><td>20</td><td>IElixir</td><td>Elixir &gt;= 1.5</td></tr>
<tr><td>21</td><td>ierl</td><td>Erlang &gt;= 19, Elixir &gt;= 1.4, LFE 1.2</td></tr>
<tr><td>22</td><td>OCaml-Jupyter</td><td>OCaml &gt;= 4.02</td></tr>
<tr><td>23</td><td>IForth</td><td>Forth</td></tr>
<tr><td>24</td><td>peforth</td><td>Forth</td></tr>
<tr><td>25</td><td>IPerl</td><td>Perl 5</td></tr>
<tr><td>26</td><td>Perl6</td><td>Perl 6.c</td></tr>
<tr><td>27</td><td>IPerl6</td><td>Perl 6</td></tr>
<tr><td>28</td><td>Jupyter-Perl6</td><td>Perl 6.C</td></tr>
<tr><td>29</td><td>IPHP</td><td>PHP &gt;= 5.4</td></tr>
<tr><td>30</td><td>Jupyter-PHP</td><td>PHP &gt;= 7.0.0</td></tr>
<tr><td>31</td><td>IOctave</td><td>Octave</td></tr>
<tr><td>32</td><td>IScilab</td><td>Scilab</td></tr>
<tr><td>33</td><td>MATLAB Kernel</td><td>Matlab</td></tr>
<tr><td>34</td><td>Bash</td><td>bash</td></tr>
<tr><td>35</td><td>Z shell</td><td>zsh &gt;= 5.3</td></tr>
<tr><td>36</td><td>PowerShell</td><td>PowerShell</td></tr>
<tr><td>37</td><td>CloJupyter</td><td>Clojure &gt;= 1.7</td></tr>
<tr><td>38</td><td>jupyter-kernel-jsr223</td><td>Clojure 1.8</td></tr>
<tr><td>39</td><td>Hy Kernel</td><td>Hy</td></tr>
<tr><td>40</td><td>Calysto Hy</td><td>Hy</td></tr>
<tr><td>41</td><td>jp-babel</td><td>Babel</td></tr>
<tr><td>42</td><td>Lua Kernel</td><td>Lua</td></tr>
<tr><td>43</td><td>IPurescript</td><td>Purescript</td></tr>
<tr><td>44</td><td>IPyLua</td><td>Lua</td></tr>
<tr><td>45</td><td>ILua</td><td>Lua</td></tr>
<tr><td>46</td><td>Calysto Scheme</td><td>Scheme</td></tr>
<tr><td>47</td><td>Calysto Processing</td><td>Processing.js &gt;= 2</td></tr>
<tr><td>48</td><td>idl_kernel</td><td>IDL</td></tr>
<tr><td>49</td><td>Mochi Kernel</td><td>Mochi</td></tr>
<tr><td>50</td><td>Lua (used in Splash)</td><td>Lua</td></tr>
<tr><td>51</td><td>Calysto Bash</td><td>bash</td></tr>
<tr><td>52</td><td>IBrainfuck</td><td>Brainfuck</td></tr>
<tr><td>53</td><td>cling</td><td>C++</td></tr>
<tr><td>54</td><td>xeus-cling</td><td>C++</td></tr>
<tr><td>55</td><td>Prolog</td><td>Prolog</td></tr>
<tr><td>56</td><td>SWI-Prolog</td><td>SWI-Prolog</td></tr>
<tr><td>57</td><td>cl-jupyter</td><td>Common Lisp</td></tr>
<tr><td>58</td><td>common-lisp-jupyter</td><td>Common Lisp</td></tr>
<tr><td>59</td><td>IJython</td><td>Jython 2.7</td></tr>
<tr><td>60</td><td>ROOT</td><td>C++/python</td></tr>
<tr><td>61</td><td>Tcl</td><td>Tcl 8.5</td></tr>
<tr><td>62</td><td>J</td><td>J 805-807 (J901beta)</td></tr>
<tr><td>63</td><td>Jython</td><td>Jython&gt;=2.7.0</td></tr>
<tr><td>64</td><td>C</td><td>C</td></tr>
<tr><td>65</td><td>Coconut</td><td>Coconut</td></tr>
<tr><td>66</td><td>Pike</td><td>Pike &gt;= 7.8</td></tr>
<tr><td>67</td><td>jupyter-kotlin</td><td>Kotlin 1.1-M04 EAP</td></tr>
<tr><td>68</td><td>mit-scheme-kernel</td><td>MIT Scheme 9.2</td></tr>
<tr><td>69</td><td>elm-kernel</td><td>elm</td></tr>
<tr><td>70</td><td>SciJava Jupyter Kernel</td><td>Java + 9 scripting languages</td></tr>
<tr><td>71</td><td>BeakerX</td><td>Groovy, Java, Scala, Clojure, Kotlin, SQL</td></tr>
<tr><td>72</td><td>IJava</td><td>Java 9</td></tr>
<tr><td>73</td><td>Guile</td><td>Guile 2.0.12</td></tr>
<tr><td>74</td><td>IRacket</td><td>Racket &gt;= 6.10</td></tr>
<tr><td>75</td><td>EvCxR Jupyter Kernel</td><td>Rust &gt;= 1.29.2</td></tr>
<tr><td>76</td><td>SSH Kernel</td><td>Bash</td></tr>
<tr><td>77</td><td>Emu86 Kernel</td><td>Intel Assembly Language</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: zajímavá, i když asi ne
z&nbsp;praktického hlediska, je podpora Brainfucku. Povšimněte si taktéž
podpory mnoha překladačů, což je na první pohled neočekávané, protože Jupyter
je typickou interaktivní aplikací mířící směrem k&nbsp;interpretrům. Podpora
překladačů je tedy relativně složitá a například v&nbsp;případě Go bývá
založena na projektu <a
href="https://www.root.cz/clanky/gophernotes-kombinace-interaktivniho-prostredi-jupyteru-s-jazykem-go/#k03">GoMacro</a>,
tedy na mechanismu, který překládá jednotlivé příkazy či programové konstrukce
a snaží se tak napodobit klasické interpretry.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Instalace Jupyter Notebooku</h2>

<p>Jupyter Notebook je možné nainstalovat hned několika způsoby, podle toho,
zda se využijí balíčky dostupné přímo v&nbsp;repositáři dané linuxové
distribuce nebo se použijí jiní správci balíčků (<strong>conda</strong>,
<strong>pip</strong>). Prakticky všechny oficiálně podporované postupy
instalace jsou zmíněny v&nbsp;diagramu umístěném na stránce <a
href="https://jupyter.readthedocs.io/en/latest/projects/content-projects.html">https://jupyter.readthedocs.io/en/latest/projects/content-projects.html</a>.</p>

<p>Ve Fedoře (27 a výše) lze instalaci provést příkazem (podobné to bude i
v&nbsp;distribucích založených na debianních balíčcích, akorát se pochopitelně
použije jiný nástroj než <strong>dnf</strong>):</p>

<pre>
$ <strong>sudo dnf install python3-notebook</strong>
</pre>

<p>Využít je možné i správce balíčků <a
href="https://docs.conda.io/en/latest/">Conda</a>. V&nbsp;případě, že tento
nástroj používáte, bude instalace vypadat následovně:</p>

<pre>
$ <strong>conda install -c conda-forge notebook</strong>
</pre>

<p>A konečně lze použít i klasický <strong>pip</strong> nebo
<strong>pip3</strong> (v&nbsp;závislosti na tom, jaký je stav Pythonu 3 na
daném operačním systému):</p>

<pre>
$ <strong>pip install notebook</strong>
</pre>

<p>V&nbsp;případě, že <strong>pip</strong> instaluje balíčky pro Python 2 a
nikoli pro Python 3, použijeme:</p>

<pre>
$ <strong>pip3 install notebook</strong>
</pre>

<p>Použít je možné i spuštění v&nbsp;kontejneru. Konkrétně pro Docker je
k&nbsp;dispozici hned několik obrazů Jupyter Notebooku, každý s&nbsp;rozdílnými
kernely a dalšími moduly. Viz <a
href="https://hub.docker.com/u/jupyter/#!">https://hub.docker.com/u/jupyter/#!</a>.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Konfigurace a spuštění Jupyter Notebooku</h2>

<p>Před prvním spuštěním Jupyter Notebooku je vhodné si nastavit heslo, které
se bude zadávat pro přístup do UI:</p>

<pre>
$ <strong>jupyter notebook password</strong>
&nbsp;  
Enter password:
Verify password:
[NotebookPasswordApp] Wrote hashed password to /home/ptisnovs/.jupyter/jupyter_notebook_config.json
</pre>

<p>Dále se již může Jupyter Notebook spustit, a to jednoduše příkazem <strong>jupyter notebook</strong>:</p>

<pre>
$ <strong>jupyter notebook</strong>
&nbsp;
[I 11:26:39.019 NotebookApp] Writing notebook server cookie secret to /run/user/1000/jupyter/notebook_cookie_secret
[W 11:26:39.615 NotebookApp] <i>WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended.</i>
[I 11:26:39.629 NotebookApp] Serving notebooks from local directory: /home/ptisnovs
[I 11:26:39.629 NotebookApp] 0 active kernels
[I 11:26:39.629 NotebookApp] The Jupyter Notebook is running at:
[I 11:26:39.629 NotebookApp] <i>http://[all ip addresses on your system]:8888/</i>
[I 11:26:39.629 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 11:26:39.983 NotebookApp] 302 GET /tree (::1) 1.91ms
</pre>

<p>Pokud se zobrazí i řádky zvýrazněné kurzivou, znamená to, že server Jupyter
Notebooku bude přístupný i ostatním počítačům na síti. Toto chování (někdy ho
vyžadujeme) lze zakázat editací souboru
<strong>~/.jupyter/jupyter_notebook_config.json</strong>, konkrétně úpravou
řádku s&nbsp;klíčem &bdquo;ip&ldquo;:</p>

<pre>
{
  "NotebookApp": {
    "password": "sha1:neco-tay-je",
    "ip": <strong>"localhost"</strong>
  }
}
</pre>

<p>Nové spuštění již nebude výše zvýrazněné varování psát:</p>

<pre>
$ <strong>jupyter notebook</strong>
&nbsp;
[I 11:26:39.019 NotebookApp] Writing notebook server cookie secret to /run/user/1000/jupyter/notebook_cookie_secret
[I 11:26:39.629 NotebookApp] Serving notebooks from local directory: /home/ptisnovs
[I 11:26:39.629 NotebookApp] 0 active kernels
[I 11:26:39.629 NotebookApp] The Jupyter Notebook is running at:
[I 11:26:39.629 NotebookApp] <i>http://localhost:8888/</i>
[I 11:26:39.629 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[I 11:26:39.983 NotebookApp] 302 GET /tree (::1) 1.91ms
</pre>

<img src="https://i.iinfo.cz/images/481/jupyter1-5.png" class="image-407900" alt="&#160;" width="583" height="202" />
<p><i>Obrázek 8: Přihlašovací obrazovka.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Další často používané balíčky</h2>

<p>Programovací jazyk Python je dnes oblíben mj.&nbsp;i proto, že nabízí celou
sadu nástrojů použitelných v&nbsp;oblasti zpracování velkých dat, analýzu
nestrukturovaných dat, strojové učení, umělé inteligence atd. Proto se
v&nbsp;souvislosti s&nbsp;použitím Jupyter Notebooku ve výzkumu většinou ještě
instalují další balíčky, zejména pak:</p>

<ul>

<li><i>Numpy</i> je balíček zpřístupňující rychlé výpočty s&nbsp;vektory a
maticemi. Viz například <a
href="https://github.com/tisnik/presentations/tree/master/linuxdays2019/numpy">přednáška
na LinuxDays 2019</a></li>

<li><i>Pandas</i> lze použít pro přípravu, čtení, zpracování strukturovaných
dat získávaných z&nbsp;různých zdrojů</li>

<li><i>Matplotlib</i> je knihovna pro tvorbu konfigurovatelných grafů různých
typů</li>

<li><i>Seaborn</i> je postavena nad Matplotlibem a zpřístupňuje statistické
funkce (regresní křivky atd.)</li>

<li><i>StatsModels</i> nabízí lineární i logistickou regresi, i další skupinu
algoritmů ARIMA</li>

<li><i>Scikit-learn</i> různé metody používané v&nbsp;oblasti strojového
učení</li>

<li><i>Imbalanced Learn</i> používaná například pro detekci podvrhnutých dat
(pokud je tato sada menší, než celá sada dat).</li>

<li><i>NLTK</i> neboli <i>Natural Language toolkit</i> pro zpracování méně
strukturovaných textových dat, analýzu získávanou web crawlingem atd.</li>

<li><i>Keras</i> je (mj.&nbsp;) vysokoúrovňové API pro deep learning</li>

<li><i>TensorFlow</i> pro práci s&nbsp;neuronovými sítěmi</li>

<li><i>PyTorch</i> framework pro strojové učení (podobné <a
href="https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/">projektu
Torch</a>, který jsme si zde již představili)</li>

</ul>

<p>Samotná instalace tedy může vypadat například následovně:</p>

<pre>
$ <strong>sudo dnf install python3-seaborn python3-lxml python3-basemap python3-scikit-image python3-scikit-learn python3-sympy python3-dask+dataframe python3-nltk</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: i zde lze použít nástroj
<strong>conda</strong> nebo <strong>pip</strong>.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Přímé použití Jupyter Notebooku bez instalace</h2>

<p>Ve skutečnosti není nutné ve všech případech provádět vlastní instalaci
<i>Jupyter Notebooku</i>. Lze totiž využít již běžící server dostupný na adrese
<a href="https://jupyter.org/try">https://jupyter.org/try</a>.
V&nbsp;současnosti je k&nbsp;dispozici několik typů diářů, a to včetně diáře
nazvaného &bdquo;Classic Notebook&ldquo;, který lze použít i pro příklad,
s&nbsp;nímž se dnes seznámíme v&nbsp;rámci dalších kapitol.</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-6.png" class="image-407901" alt="&#160;" width="789" height="974" />
<p><i>Obrázek 9: Úvodní stránka zobrazená při přístupu na <a
href="https://jupyter.org/try">https://jupyter.org/try</a>.</i></p>

<p><div class="rs-tip-major">Poznámka: toto je sice jeden
z&nbsp;nejjednodušších kroků. jak pracovat s&nbsp;Jupyter Notebookem, ovšem
mnohdy narazíme na limity, konkrétně na velký počet současně připojených
uživatelů:</div></p>

<a href="https://www.root.cz/obrazek/407902/"><img src="https://i.iinfo.cz/images/481/jupyter1-7-prev.png" class="image-407902" alt="&#160;" width="370" height="230" /></a>
<p><i>Obrázek 10: V&nbsp;některých okamžicích se diář nespustí z&nbsp;důvodu
velkého zájmu dalších uživatelů o použití této služby.</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Použití Markdownu</h2>

<p>Vzhledem k&nbsp;tomu, že je možné projekt Jupyter použít i pro tvorbu
prezentací, asi nás nepřekvapí, že je podporována tvorba poznámek, které mohou
být naformátovány. Podporován je především známý a široce používaný formátovací
jazyk Markdown. Podívejme se na následující příklad, v&nbsp;němž je Markdown
použit pro zobrazení textu neproporcionálním písmem, tučným písmem a
kurzivou:</p>

<a href="https://www.root.cz/obrazek/407903/"><img src="https://i.iinfo.cz/images/481/jupyter1-8-prev.png" class="image-407903" alt="&#160;" width="370" height="58" /></a>
<p><i>Obrázek 11: Programové zobrazení textu v&nbsp;Markdownu přímým zavoláním
funkce <strong>display</strong>.</i></p>

<img src="https://i.iinfo.cz/images/481/jupyter1-9.png" class="image-407904" alt="&#160;" width="713" height="674" />
<p><i>Obrázek 12: Několikařádková buňka obsahující text zapsaný
v&nbsp;Markdownu.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Matematická sazba</h2>

<p>Podporována je i matematická sazba odvozená od možností TeXu a LaTeXu.
Příkladem může být zápis vzorce s&nbsp;integrálem a zlomkem:</p>

<pre>
F(x) &amp;= \int^a_b \frac{1}{3}x^3
</pre>

<p>Další dva příklady ukazují použití horních indexů (mocnin), zlomku a zápisu
druhé odmocniny:</p>

<pre>
display(Math(r'x^2+y^2'))
display(Math(r'\frac{1}{\sqrt{x}}'))
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se řetězce zapisují
r''. Díky tomuto zápisu lze v&nbsp;jazyce Python do řetězců zapsat libovolné
znaky bez nutnosti jejich uvození zpětným lomítkem, což je právě u
matematických vzorců TeXu a LaTeXu velmi častý znak.</div></p>

<p>Matematické vzorce lze do HTML stránky (a rozhraní Jupyter Notebooku je
tvořeno dynamicky generovanou HTML stránkou) vkládat různými způsoby &ndash;
jen s&nbsp;využitím možností samotného HTML (ovšem s&nbsp;ne zcela dobrým
výsledkem), přes MathML až po vyrendrování obrázku se vzorcem:</p>

<img src="https://i.iinfo.cz/images/481/jupyter1-10.png" class="image-407905" alt="&#160;" width="651" height="270" />
<p><i>Obrázek 13: Vykreslení vzorců pomocí značek HTML není vždy
optimální.</i></p>

<img src="https://i.iinfo.cz/images/481/jupyter1-11.png" class="image-407906" alt="&#160;" width="676" height="294" />
<p><i>Obrázek 14: Použití MathML již vede k&nbsp;mnohem lepším výsledkům.</i></p>

<img src="https://i.iinfo.cz/images/481/jupyter1-12.png" class="image-407907" alt="&#160;" width="648" height="281" />
<p><i>Obrázek 15: Nebo lze rendering (vykreslení) ponechat na LaTeXu.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Načtení dat uložených ve formátu CSV</h2>

<p>V&nbsp;dalším textu si ukážeme jednoduchý diář s&nbsp;analýzou dat pro
službu, která zpracovává data posílaná na vstup (a meziuložená
v&nbsp;databázi), která je nutné analyzovat a poslat na výstup (opět například
do databáze). Jedná se tedy o jednu z&nbsp;možných implementací
&bdquo;pipeline&ldquo;. Diář je dostupný na adrese <a
href="https://github.com/tisnik/jupyter-notebook-examples/blob/master/processing1.ipynb">https://github.com/tisnik/jupyter-notebook-examples/blob/master/processing1.ipynb</a>
a můžete si ho otevřít ve vlastním Jupyter Notebooku (ideální je repositář
naklonovat, protože obsahuje i datové soubory).</p>

<a href="https://www.root.cz/obrazek/407908/"><img src="https://i.iinfo.cz/images/481/jupyter1-13-prev.png" class="image-407908" alt="&#160;" width="370" height="87" /></a>
<p><i>Obrázek 16: Import všech balíčků.</i></p>

<p>Načtení CSV souborů provedeme přes knihovnu <i>Pandas</i> zmíněnou výše.
Jeden screenshot prý nahradí stovky (tisíce?) slov, takže jen krátce:</p>

<a href="https://www.root.cz/obrazek/407909/"><img src="https://i.iinfo.cz/images/481/jupyter1-14-prev.png" class="image-407909" alt="&#160;" width="370" height="143" /></a>
<p><i>Obrázek 17: Načtení jednoho datového souboru ve formátu CSV.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Základní analýza dat</h2>

<p>S&nbsp;využitím knihovny <i>Pandas</i> lze v&nbsp;případě potřeby provést i
základní analýzu dat, resp.&nbsp;přesněji řečeno zjištění některých
statistických informací, převzorkování dat apod. Obě zmíněné operace jsou
ukázány na dalším screenshotu, v&nbsp;němž se sloupce obsahující časy
získání/vytvoření dat převzorkují po jedné minutě, získá se četnost dat (po
minutách) a následně se zobrazí základní statistické údaje o takto vzniklé sadě
nových dat:</p>

*** image ***
<p><i>Obrázek 18: Použití knihovny Pandas pro manipulaci s&nbsp;daty.</i></p>

<p><div class="rs-tip-major">Poznámka: popis možností této knihovny překračuje
rámec dnešního článku, ale k&nbsp;Pandas se ještě vrátíme, a to
několikrát.</div></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Zobrazení dat ve formě grafů</h2>

<p>V&nbsp;rámci inicializace diáře jsme načetli i knihovnu <i>Matplotlib</i>
sloužící k&nbsp;tvorbě různých grafů. Ukažme si tedy, alespoň ve stručnosti,
alespoň dva základní typy grafů, které je možné použít a přímo zobrazit na
stránce s&nbsp;diářem. Prvním grafem je sloupcový graf, jehož základní verze
vypadá následovně:</p>

*** image ***
<p><i>Obrázek 19: Sloupcový graf.</i></p>

<p>Podporovány jsou i další typy grafů, například klasický liniový graf:</p>

*** image ***
<p><i>Obrázek 20: Četnost nových dat připravených pro analýzu zobrazená na
grafu.</i></p>

<p><div class="rs-tip-major">Poznámka: i Matplotlibu bude věnován samostatný
článek zaměřený na jeho použití přímo v&nbsp;Jupyter Notebooku, v&nbsp;němž si
popíšeme další typy grafů.</div></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Vytvoření slajdů</h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Zobrazení diáře (notebooku) přímo na GitHubu</h2>

<p></p>

*** image ***
<p><i>Obrázek 21: Repositář s&nbsp;Jupyter notebookem a datovými
soubory.</i></p>

*** image ***
<p><i>Obrázek 22: Zobrazení Jupyter Notebooku přímo na stránkách
GitHubu.</i></p>

*** image ***
<p><i>Obrázek 23: Na GitHubu lze zobrazit i grafy, což je pro prezentace velmi
dobrá vlastnost.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Příbuzné projekty</h2>

<p>Existuje několik projektů, které jsou nějakým způsobem příbuzné
s&nbsp;Jupyter Notebookem. S&nbsp;některými z&nbsp;nich se ve stručnosti
seznámíme v&nbsp;následujícím textu.</p>

<p>Předchůdcem projektu Jupyter Notebook je, jak již ostatně dobře víme,
IPython Notebooks, jenž je založený na projektu <i>IPython</i>. Jedná se o
v&nbsp;mnoha ohledech vylepšený interpret Pythonu &ndash; IPython je ve
skutečnosti jedním z&nbsp;nejpropracovanějších REPL, se kterým jsem měl možnost
pracovat. Architektura nástroje IPython je navržena takovým způsobem, že je do
značné míry modulární, což mj.&nbsp;znamená, že uživatelé mohou
s&nbsp;IPythonem komunikovat hned několika možnými způsoby. My se v&nbsp;této
kapitole zaměříme zejména na použití interaktivního shellu (což je vlastně
v&nbsp;mnoha ohledech vylepšená varianta smyčky REPL), ovšem modulární
architektura umožnila vytvořit i zmíněný IPython Notebook, což je naopak
implementace konceptu diáře (notebooku). Další množnosti komunikace
s&nbsp;IPythonem spočívají v&nbsp;použití 0MQ (Zero MQ), což je zjednodušeně
řečeno řešení postavené na bázi socketů (viz též <a
href="https://www.root.cz/clanky/0mq-knihovna-pro-asynchronni-predavani-zprav/">článek</a>
o této knihovně); tato architektura byla převzata Jupyterem.</p>

<a href="https://www.root.cz/obrazek/359776/"><img src="https://i.iinfo.cz/images/109/ipython-1-prev.png" class="image-359776" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 24: Start interaktivního prostředí IPythonu.</i></p>

<p>Možnosti IPythonu jsou však ve skutečnosti mnohem větší, než
&bdquo;pouhé&ldquo; vylepšené rozhraní mezi uživatelem a interpretrem.
Architektura IPythonu například umožňuje, aby se komplikované výpočty
neprováděly přímo na tom počítači, kde je spuštěn interaktivní shell (klient),
ale aby se pouze předaly dalším strojům tvořícím výpočetní farmu. Díky tomu
&ndash; a taktéž díky propojení IPythonu s&nbsp;knihovnami <i>NumPy</i> a
<i>SciPy</i> i s&nbsp;nástrojem <i>matplotlib</i> &ndash; se IPython používá i
v&nbsp;těch oblastech, kde se provádí mnoho složitých a/nebo časově náročných
výpočtů, což může znít poněkud paradoxně, když si uvědomíme, že samotný Python
je v&nbsp;těchto ohledech dosti pomalý jazyk (ve skutečnosti <i>NumPy</i>
předává výpočty nativnímu kódu psanému v&nbsp;C popř.&nbsp;ve Fortranu, které
obsahují optimalizované algoritmy různých výpočtů).</p>

<a href="https://www.root.cz/obrazek/359777/"><img src="https://i.iinfo.cz/images/109/ipython-2-prev.png" class="image-359777" alt="&#160;" width="370" height="242" /></a>
<p><i>Obrázek 25: Zobrazení nápovědy k&nbsp;funkci
<strong>range</strong>.</i></p>

<a href="https://www.root.cz/obrazek/359782/"><img src="https://i.iinfo.cz/images/109/ipython-7-prev.png" class="image-359782" alt="&#160;" width="330" height="270" /></a>
<p><i>Obrázek 26: Grafické rozhraní IPythonu.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Gorilla REPL</h2>

<p>Jedná se o projekt inspirovaný IPython Notebookem, ovšem v&nbsp;případě
Gorilla REPL zaměřený primárně na použití programovacího jazyka Clojure,
kterému jsme se již na stránkách Rootu <a
href="https://www.root.cz/vyhledavani/?qs=clojure">poměrně podrobně
věnovali</a>. V&nbsp;Gorilla REPL lze pochopitelně použít všechny moduly
dostupné pro Clojure a díky <a
href="https://clojure.org/reference/java_interop">Java interop</a> i prakticky
libovolnou knihovnu dostupnou pro programovací jazyk Java resp.&nbsp;přesněji
řečeno pro jakýkoli jazyk postavený nad JVM.</p>

<img src="https://i.iinfo.cz/images/72/gorilla-repl-1.png" class="image-242637" alt="&#160;" width="660" height="728" />
<p><i>Obrázek 27: Interaktivní prostředí nástroje Gorilla REPL spuštěné
v&nbsp;běžném webovém prohlížeči (zde konkrétně ve Firefoxu).</i></p>

<p><div class="rs-tip-major">Poznámka: Clojure je nyní podporováno i přímo
Jupyter Notebookem, a to díky existenci k&nbsp;tomu určených kernelů.
Podporované kernely byly vypsány ve čtvrté kapitole:</div></p>

<table>
<tr><th>#</th><th>Kernel</th></tr>
<tr><td>1</td><td>CloJupyter</td><td>Clojure &gt;= 1.7</td></tr>
<tr><td>2</td><td>jupyter-kernel-jsr223</td><td>Clojure 1.8</td></tr>
<tr><td>3</td><td>BeakerX</td><td>Groovy, Java, Scala, Clojure, Kotlin, SQL</td></tr>
</table>

<a href="http://www.root.cz/obrazek/242639/"><img src="https://i.iinfo.cz/images/72/gorilla-repl-3-prev.png" class="image-242639" alt="&#160;" width="370" height="268" /></a>
<p><i>Obrázek 28: Standardní grafy jsou v&nbsp;Gorilla REPL do stránky vkládány
ve formátu SVG.</i></p>

<img src="https://i.iinfo.cz/images/72/gorilla-repl-12.png" class="image-242648" alt="&#160;" width="660" height="397" />
<p><i>Obrázek 29: Ukázka použití jednoduchého sloupcového grafu.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Gophernotes</h2>

<p><i>&bdquo;There is a tension, especially in scientific computing, between
ease and simplicity&ldquo;</i></p>

<p>Gophernotes je projekt používající programovací jazyk <i>Go</i>, který
z&nbsp;Go zpřístupňuje interaktivní prostředí založené na dnes popisovaném
projektu <a href="https://jupyter.org/">Jupyter</a>. Nástroj Gophernotes dokáže
do okna prohlížeče vykreslovat základní grafy, a to jak s&nbsp;přímým využitím
předaných dat (vektory či sekvence čísel), tak i při specifikaci funkce, jejíž
průběh se má vykreslit (existují zde ovšem mnohá omezení, kterými se budu
zabývat v&nbsp;navazujících kapitolách). Třešničkou na dortu je podpora pro
práci se vzorci psanými v&nbsp;TeXu či LaTeXu (zde není oproti klasickému
Jupyteru žádný podstatný rozdíl).</p>

<p>Již v&nbsp;úvodním odstavci jsme si řekli, že Gophernotes je založen na
projektu Jupyter. Ve skutečnosti Gophernotes do Jupyteru doplňuje modul
(takzvaný <i>kernel</i>, jak již víme z&nbsp;úvodních kapitol) zajišťující
interakci s&nbsp;jazykem Go, podobně jako existují další podobné moduly určené
pro programovací jazyky <a href="https://www.root.cz/n/python/">Python</a>, <a
href="https://www.root.cz/serialy/programovaci-jazyk-julia/">Julia</a>, <a
href="https://www.root.cz/serialy/programovaci-jazyk-lua/">Lua</a>, <a
href="https://www.root.cz/clanky/jazyky-hy-a-clojure-py-moderni-dialekty-lispu-urcene-pro-python-vm/">jazyk
Hy</a> atd. V&nbsp;případě jazyka Go je ovšem situace poněkud složitější,
protože Go je primárně překladačem. Aby bylo možné zkombinovat možnosti
interpretru a klasického překladače, vznikl projekt pojmenovaný
<i>Gomacro</i>.</p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti existuje hned několik
kernelů pro Go. Jmenujme především IGo, gopherlab a právě Gophernotes &ndash;
viz též čtvrtou kapitolu.</div></p>

<p>Nejjednodušší způsob, jakým lze spustit Gophernotes i se všemi potřebnými
závislostmi, spočívá v&nbsp;použití Dockeru, protože již existuje připravený
obraz obsahující Gophernotes, Jupyter, gomacro i další knihovny pro numerické
výpočty a zpracování dat. Následující příkaz zajistí stažení obrazů, spuštění
Gophernotesu a namapování HTTP serveru (Jupyter) na port 8888:</p>

<pre>
$ <strong>docker run -it -p 8888:8888 gopherdata/gophernotes:latest-ds</strong>
&nbsp;
Unable to find image 'gopherdata/gophernotes:latest-ds' locally
Trying to pull repository docker.io/gopherdata/gophernotes ... 
sha256:e2ef4a5b318604b8e5116fcf470e11fecbb2c18631cb73bdbed46ed026e862a6: Pulling from docker.io/gopherdata/gophernotes
a44d943737e8: Pull complete 
0bbfb29b138b: Pull complete 
ef49c0fa046c: Pull complete 
Digest: sha256:e2ef4a5b318604b8e5116fcf470e11fecbb2c18631cb73bdbed46ed026e862a6
Status: Downloaded newer image for docker.io/gopherdata/gophernotes:latest-ds
[I 15:14:32.110 NotebookApp] Writing notebook server cookie secret to /root/.local/share/jupyter/runtime/notebook_cookie_secret
[I 15:14:32.998 NotebookApp] Serving notebooks from local directory: /
[I 15:14:32.999 NotebookApp] The Jupyter Notebook is running at:
[I 15:14:33.000 NotebookApp] http://(6c7428d3f7f9 or 127.0.0.1):8888/?token=f4d754332b4be755cfb351018840af76767e80829d7dfc61
[I 15:14:33.000 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 15:14:33.006 NotebookApp] 
&nbsp;
    To access the notebook, open this file in a browser:
        file:///root/.local/share/jupyter/runtime/nbserver-1-open.html
    Or copy and paste one of these URLs:
        http://(6c7428d3f7f9 or 127.0.0.1):8888/?token=f4d754332b4be755cfb351018840af76767e80829d7dfc61
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se zobrazil i token,
který použijeme pro přihlášení a založení nového diáře.</div></p>

<p>Do adresního řádku webového browseru napíšeme adresu:
http://127.0.0.1:8888.</p>

<img src="https://i.iinfo.cz/images/669/gophernotes1-5.png" class="image-400283" alt="&#160;" width="632" height="775" />
<p><i>Obrázek 30: Prohlížeč se zeptá na token, který zkopírujeme ze zprávy
vypsané po spuštění Dockeru s&nbsp;gophernotesem.</i></p>

<a href="https://www.root.cz/obrazek/400284/"><img src="https://i.iinfo.cz/images/669/gophernotes1-6-prev.png" class="image-400284" alt="&#160;" width="370" height="67" /></a>
<p><i>Obrázek 31: Grafické uživatelské rozhraní Jupyteru
s&nbsp;Gophernotesem.</i></p>

<a href="https://www.root.cz/obrazek/400285/"><img src="https://i.iinfo.cz/images/669/gophernotes1-7-prev.png" class="image-400285" alt="&#160;" width="370" height="269" /></a>
<p><i>Obrázek 32: Zprávy zapisované na chybový výstup jsou podbarveny červeně,
zprávy zapisované na výstup standardní nemají podbarvení žádné (implicitní
barvou je bílé pozadí).</i></p>

<a href="https://www.root.cz/obrazek/400286/"><img src="https://i.iinfo.cz/images/669/gophernotes1-8-prev.png" class="image-400286" alt="&#160;" width="370" height="225" /></a>
<p><i>Obrázek 33: Formátování matic zpracovaných kernelem Gophernotes.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. JupyterLab</h2>

<p>JupyterLab je relativně nový projekt nabízející upravené a vylepšené
grafické uživatelské rozhraní pro projekt Jupyter; jedná se tedy o alternativu
k&nbsp;celému výše popsanému Jupyter Notebooku (od kterého se sice odlišuje,
ale základ práce zůstává stejný). I JupyterLab lze použít přímo na webu (bez
nutnosti instalace), popř.&nbsp;provést jeho lokální instalaci (server+kernely
na jednom počítači). Podrobnosti o tomto zajímavém projektu budou uvedeny
v&nbsp;samostatném článku. Mimochodem: sympatické je, že vzorový příklad, na
kterém jsou některé možnosti JupyterLabu ukázány, je založen na Lorenzových
diferenciálních rovnicích, jejichž řešením vznikne slavný <a
href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02">Lorenzův
atraktor</a> (jehož objevení mělo velký vliv na rozvinutí teorie chaosu, revize
možností predikce chování systémů citlivých na počáteční podmínky aj.).</p>

*** image ***
<p><i>Obrázek 34: Grafické uživatelské rozhraní projektu JupyterLab se
zobrazeným vzorovým příkladem.</i></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Notebook interface<br />
<a href="https://en.wikipedia.org/wiki/Notebook_interface">https://en.wikipedia.org/wiki/Notebook_interface</a>
</li>

<li>Jypyter: open source, interactive data science and scientific computing across over 40 programming languages<br />
<a href="https://jupyter.org/">https://jupyter.org/</a>
</li>

<li>The IPython Notebook<br />
<a href="http://ipython.org/notebook.html">http://ipython.org/notebook.html</a>
</li>

<li>nbviewer: a simple way to share Jupyter Notebooks<br />
<a href="https://nbviewer.jupyter.org/">https://nbviewer.jupyter.org/</a>
</li>

<li>Back to the Future: Lisp as a Base for a Statistical Computing System<br />
<a href="https://www.stat.auckland.ac.nz/~ihaka/downloads/Compstat-2008.pdf">https://www.stat.auckland.ac.nz/~ihaka/downloads/Compstat-2008.pdf</a>
</li>

<li>gg4clj: a simple wrapper for using R's ggplot2 in Clojure and Gorilla REPL<br />
<a href="https://github.com/JonyEpsilon/gg4clj">https://github.com/JonyEpsilon/gg4clj</a>
</li>

<li>Analemma: a Clojure-based SVG DSL and charting library<br />
<a href="http://liebke.github.io/analemma/">http://liebke.github.io/analemma/</a>
</li>

<li>Clojupyter: a Jupyter kernel for Clojure<br />
<a href="https://github.com/roryk/clojupyter">https://github.com/roryk/clojupyter</a>
</li>

<li>Incanter is a Clojure-based, R-like platform for statistical computing and graphics.<br />
<a href="http://incanter.org/">http://incanter.org/</a>
</li>

<li>Evolution of incanter (Gource Visualization)<br />
<a href="https://www.youtube.com/watch?v=TVfL5nPELr4">https://www.youtube.com/watch?v=TVfL5nPELr4</a>
</li>

<li>Questions tagged [incanter] (na Stack Overflow)<br />
<a href="https://stackoverflow.com/questions/tagged/incanter?sort=active">https://stackoverflow.com/questions/tagged/incanter?sort=active</a>
</li>

<li>Data Sorcery with Clojure<br />
<a href="https://data-sorcery.org/contents/">https://data-sorcery.org/contents/</a>
</li>

<li>What is REPL?<br />
<a href="https://pythonprogramminglanguage.com/repl/">https://pythonprogramminglanguage.com/repl/</a>
</li>

<li>What is a REPL?<br />
<a href="https://codewith.mu/en/tutorials/1.0/repl">https://codewith.mu/en/tutorials/1.0/repl</a>
</li>

<li>Programming at the REPL: Introduction<br />
<a href="https://clojure.org/guides/repl/introduction">https://clojure.org/guides/repl/introduction</a>
</li>

<li>What is REPL? (Quora)<br />
<a href="https://www.quora.com/What-is-REPL">https://www.quora.com/What-is-REPL</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>R Markdown: The Definitive Guide<br />
<a href="https://bookdown.org/yihui/rmarkdown/">https://bookdown.org/yihui/rmarkdown/</a>
</li>

<li>Single-page application<br />
<a href="https://en.wikipedia.org/wiki/Single-page_application">https://en.wikipedia.org/wiki/Single-page_application</a>
</li>

<li>Video streaming in the Jupyter Notebook<br />
<a href="https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85">https://towardsdatascience.com/video-streaming-in-the-jupyter-notebook-635bc5809e85</a>
</li>

<li>How IPython and Jupyter Notebook work<br />
<a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html</a>
</li>

<li>Jupyter kernels<br />
<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a>
</li>

<li>Keras: The Python Deep Learning library<br />
<a href="https://keras.io/">https://keras.io/</a>
</li>

<li>TensorFlow<br />
<a href="https://www.tensorflow.org/">https://www.tensorflow.org/</a>
</li>

<li>PyTorch<br />
<a href="https://pytorch.org/">https://pytorch.org/</a>
</li>

<li>Seriál Torch: framework pro strojové učení<br />
<a href="https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/">https://www.root.cz/serialy/torch-framework-pro-strojove-uceni/</a>
</li>

<li>Scikit-learn<br />
<a href="https://scikit-learn.org/stable/">https://scikit-learn.org/stable/</a>
</li>

<li>Java Interop (Clojure)<br />
<a href="https://clojure.org/reference/java_interop">https://clojure.org/reference/java_interop</a>
</li>

<li>Obrazy s&nbsp;balíčky Jupyter Notebooku pro Docker<br />
<a href="https://hub.docker.com/u/jupyter/#!">https://hub.docker.com/u/jupyter/#!</a>
</li>

<li>Správce balíčků Conda (dokumentace)<br />
<a href="https://docs.conda.io/en/latest/">https://docs.conda.io/en/latest/</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-vi/#k02</a>
</li>

<li>Lorenzův atraktor<br />
<a href="https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03">https://www.root.cz/clanky/fraktaly-v-pocitacove-grafice-iii/#k03</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

