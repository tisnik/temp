<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Složitější příklad se styly textu</a></p>
<p><a href="#k02">*** 2. Obrázky <strong>BitmapImage</strong> a <strong>PhotoImage</strong> ve widgetu <strong>Text</strong></a></p>
<p><a href="#k03">*** 3. Konfigurace tabulačních zarážek</a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. Další vlastnosti řetězců vkládaných do widgetu <strong>Text</strong></a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k16">*** 16. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Složitější příklad se styly textu</h2>

<p>Kromě barev vykreslovaných řetězců je možné měnit i typ písma, což je
ukázáno na dalším demonstračním příkladu. Zde si můžete všimnout, že vlastnosti
<strong>underline</strong> (podtržení) a <strong>overstrike</strong>
(přeškrtnutí, v&nbsp;příkladu není použito, sami si ho samozřejmě můžete
vyzkoušet) se povolují a zakazují přiřazením logické hodnoty True/False. Do
textového widgetu je vložena i bitmapa, což je problematika, které se budeme
podrobněji věnovat <a href="#k02">v&nbsp;navazující kapitole</a>:</p>

*** image ***
<p><i>Obrázek 1: Text s&nbsp;různými styly i s&nbsp;vloženou bitmapou.</i></p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
image = tkinter.BitmapImage(file="test.xbm", foreground="white")
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    background="#202020",
                    width=40, height=16)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.image_create(tkinter.END, image=image)
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

<p>Poznámka: ještě bych rád připomenul, že u všech dnes popsaných
demonstračních příkladů je zachována editovatelnost textu, nejedná se tedy o
neživou část GUI, ale část aktivně komunikující s&nbsp;uživatelem.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Obrázky <strong>BitmapImage</strong> a <strong>PhotoImage</strong> ve widgetu <strong>Text</strong></h2>

<p></p>

<pre>
image = tkinter.BitmapImage(file="test.xbm", foreground="white")
&nbsp;
text.image_create(tkinter.END, image=image)
</pre>

<p></p>

<pre>
photo_image = tkinter.PhotoImage(file="icons/application-exit.gif")
&nbsp;
text.image_create(tkinter.END, image=photo_image)
</pre>

<p>Následuje výpis zdrojového kódu demonstračního příkladu, v&nbsp;němž se
používá jak <strong>BitmapImage</strong>, tak i
<strong>PhotoImage</strong>:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
image = tkinter.BitmapImage(file="test.xbm", foreground="white")
photo_image = tkinter.PhotoImage(file="icons/application-exit.gif")
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    background="#202020",
                    width=40, height=16)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.image_create(tkinter.END, image=image)
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink    ", "pink")
text.image_create(tkinter.END, image=photo_image)
text.insert(tkinter.END, "White", "white")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>

*** image ***
<p><i>Obrázek 2: Text s&nbsp;různými styly i s&nbsp;vloženou bitmapou i
barevným obrázkem. Povšimněte si, že obrázek může být umístěn na stejném řádku
s&nbsp;textem.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Konfigurace tabulačních zarážek</h2>

<p>Kromě rozměrů widgetu <strong>Text</strong> je možné specifikovat i pozice
tabulačních zarážek. Ty se zadávají pomocí pojmenované volby
<strong>tabs</strong>, za níž následuje řetězec obsahující seznam značek.
Seznam obsahuje pozice tabulačních zarážek; tyto pozice jsou chápány jako
vzdálenosti zarážek od levého okraje widgetu. Pokud je za číslem udávajícím
vzdálenost zapsán znak &bdquo;c&ldquo;, znamená to, že se vzdálenost bude
počítat v&nbsp;šířkách normalizovaných znaků (což je většinou lepší, než se
snažit o přepočet na pixely):</p>

<pre>
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    <strong>tabs="5c 11c 18c"</strong>,
                    width=40, height=16)
</pre>

<p>Pozor na to, že použitý font může obsahovat (a většinou i obsahuje)
proporcionální znaky a v&nbsp;některých případech nemusí výpočet šířky
normalizovaných znaků proběhnout korektně &ndash; to je případ zejména různých
sharewarových TrueType fontů, které někdy mají špatně vyplněnou tabulku
s&nbsp;metrikami (tyto fonty se však nebudou chovat korektně ani v&nbsp;dalších
aplikacích, navíc dnes pro Linux existují dostatečně kvalitní open source
fonty).</p>

<p>V&nbsp;dalším demonstračním příkladu je vytvořen widget text, který bude mít
rozměry 40×16 normoznaků. Přitom jsou nastaveny dvě tabulační zarážky.
Povšimněte si, že znak tabulátoru se do řetězce zadává naprosto stejným
způsobem jako v&nbsp;mnoha dalších programovacích jazycích (C, C++, Java,
Perl):</p>

<pre>
text.insert(tkinter.END, "Mesic\tObrat\n", "nadpis")
text.insert(tkinter.END, "leden\t100\n")
...
...
...
text.insert(tkinter.END, "suma\t3900\n", "suma")
</pre>

<p>Některé řádky textu jsou zobrazeny jinou barvou a první řádek je podtržen.
Toho bylo dosaženo vytvořením tagů nadpis a suma:</p>

<pre>
text.tag_configure("nadpis", foreground="red", underline=True)
text.tag_configure("suma", foreground="blue")
</pre>

<p>Následuje výpis zdrojového kódu demonstračního příkladu:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    tabs="5c 11c",
                    width=40, height=16)
&nbsp;
text.tag_configure("nadpis", foreground="red", underline=True)
text.tag_configure("suma", foreground="blue")
&nbsp;
text.insert(tkinter.END, "Mesic\tObrat\n", "nadpis")
text.insert(tkinter.END, "leden\t100\n")
text.insert(tkinter.END, "unor\t200\n")
text.insert(tkinter.END, "brezen\t0\n")
text.insert(tkinter.END, "duben\t1000\n")
text.insert(tkinter.END, "kveten\t100\n")
text.insert(tkinter.END, "cerven\t200\n")
text.insert(tkinter.END, "cervenec\t0\tdovolene\n")
text.insert(tkinter.END, "srpen\t1000\n")
text.insert(tkinter.END, "zari\t100\n")
text.insert(tkinter.END, "rijen\t200\n")
text.insert(tkinter.END, "listopad\t0\n")
text.insert(tkinter.END, "prosinec\t1100\tvanoce\n\n")
text.insert(tkinter.END, "suma\t3900\n", "suma")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Zarovnání textu na tabulačních zarážkách</h2>

<p>Pokud se v&nbsp;seznamu s&nbsp;tabulačními zarážkami uvede jedno ze slov
<strong>left</strong>, <strong>right</strong>, <strong>center</strong> nebo
<strong>numeric</strong>, značí to způsob zarovnání textu vůči zarážce &ndash;
zarovnání doleva, doprava, na střed a na desetinnou tečku/čárku. Tato funkce se
chová stejně jako v&nbsp;textových procesorech:</p>

<pre>
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    <strong>tabs="7c right 11c left"</strong>,
                    width=40, height=16)
</pre>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 20",
                    wrap=tkinter.WORD,
                    tabs="7c right 11c left",
                    width=40, height=16)
&nbsp;
text.tag_configure("nadpis", foreground="red", underline=True)
text.tag_configure("suma", foreground="blue")
&nbsp;
text.insert(tkinter.END, "Mesic\tObrat\n", "nadpis")
text.insert(tkinter.END, "leden\t100\n")
text.insert(tkinter.END, "unor\t200\n")
text.insert(tkinter.END, "brezen\t0\n")
text.insert(tkinter.END, "duben\t1000\n")
text.insert(tkinter.END, "kveten\t100\n")
text.insert(tkinter.END, "cerven\t200\n")
text.insert(tkinter.END, "cervenec\t0\tdovolene\n")
text.insert(tkinter.END, "srpen\t1000\n")
text.insert(tkinter.END, "zari\t100\n")
text.insert(tkinter.END, "rijen\t200\n")
text.insert(tkinter.END, "listopad\t0\n")
text.insert(tkinter.END, "prosinec\t1100\tvanoce\n\n")
text.insert(tkinter.END, "suma\t3900\n", "suma")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Další vlastnosti řetězců vkládaných do widgetu <strong>Text</strong></h2>

<p>S&nbsp;využitím tagů je možné nastavit i další vlastnosti textových řetězců,
které se vkládají do widgetu <strong>Text</strong>. Pro mnoho aplikací je
důležité nastavení zarovnávání textů. To je možné obstarat buď pomocí výše
zmíněných tabelačních zarážek (což je mnohdy zbytečně komplikované), nebo
využitím vlastnosti <strong>justify</strong>. Této vlastnosti lze přiřadit více
hodnot: <strong>tkinter.LEFT</strong>, <strong>tkinter.RIGHT</strong> a
<strong>tkinter.CENTER</strong> (prozatím však není k&nbsp;dispozici možnost
zarovnat text do bloku). Dále je možné zvýraznit okraj okolo textu (funguje
korektně i pro víceřádkový text). Tento okraj může být opticky buď vysunutý
nebo zasunutý (<strong>tkinter.RAISED</strong>,
<strong>tkinter.SUNKEN</strong>). Horní a dolní indexy se tvoří pomocí změny
hodnoty vlastnosti <strong>offset</strong>, pomocí níž je možné text vertikálně
posunout vůči textové osnově (kromě toho je vhodné text zmenšit o jeden až dva
body, což je však již ponecháno na programátoru). Nastavení všech těchto
vlastností je patrné z&nbsp;dalšího demonstračního příkladu, který rozšiřuje
příklad předchozí:</p>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=20)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2", "sup")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi pres text
&nbsp;
text.tag_bind("colorOnEnter", "<Any-Enter>",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "<Any-Leave>",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi
&nbsp;
text.tag_bind("colorOnEnter", "<Any-Enter>",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "<Any-Leave>",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# chovani pri stisku leveho a praveho tlacitka
&nbsp;
text.tag_bind("colorOnEnter", "<Button-1>",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "<Button-3>",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
text.insert(tkinter.END, "Cyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<pre>
#!/usr/bin/env python
&nbsp;
import tkinter
from tkinter import ttk
import sys
&nbsp;
&nbsp;
def exit():
    sys.exit(0)
&nbsp;
&nbsp;
root = tkinter.Tk()
&nbsp;
text = tkinter.Text(root,
                    font="Helvetica 14",
                    wrap=tkinter.WORD,
                    width=40, height=24)
&nbsp;
text.tag_configure("underlined_red", foreground="red", underline=True)
text.tag_configure("big_green", foreground="green", font="Helvetica 40")
text.tag_configure("blue", foreground="blue")
text.tag_configure("magenta", foreground="magenta")
text.tag_configure("cyan", foreground="cyan")
text.tag_configure("small_yellow", foreground="yellow", font="Helvetica 10")
text.tag_configure("brown", foreground="brown")
text.tag_configure("pink", foreground="pink")
text.tag_configure("white", foreground="white", font="Courier 20")
text.tag_configure("raised", relief=tkinter.RAISED, borderwidth=2)
text.tag_configure("sunken", relief=tkinter.SUNKEN, borderwidth=2)
text.tag_configure("center", justify=tkinter.CENTER)
text.tag_configure("left", justify=tkinter.LEFT)
text.tag_configure("right", justify=tkinter.RIGHT)
text.tag_configure("sup", offset="3p")
text.tag_configure("sub", offset="-3p")
&nbsp;
# chovani pri prejeti kurzorem mysi
&nbsp;
text.tag_bind("colorOnEnter", "<Any-Enter>",
              lambda e: text.tag_configure("colorOnEnter", background="red"))
text.tag_bind("colorOnEnter", "<Any-Leave>",
              lambda e: text.tag_configure("colorOnEnter", background=""))
&nbsp;
# chovani pri stisku leveho a praveho tlacitka
&nbsp;
text.tag_bind("colorOnEnter", "<Button-1>",
              lambda e: text.tag_configure("colorOnEnter", foreground="blue"))
text.tag_bind("colorOnEnter", "<Button-3>",
              lambda e: text.tag_configure("colorOnEnter", foreground="black"))
&nbsp;
checkbutton = tkinter.Checkbutton(root, text="Delete Internet?",
                                  command=lambda: print("changed"))
&nbsp;
quitButton = tkinter.Button(root, text="Exit", command=exit)
&nbsp;
# práce s widgetem
text.insert(tkinter.END, "Underlined Red\n", "underlined_red")
text.insert(tkinter.END, "Magenta\n", "magenta")
text.insert(tkinter.END, "Blue\n", "blue")
&nbsp;
text.window_create(tkinter.END, window=checkbutton)
&nbsp;
text.insert(tkinter.END, "\nCyan\n", "cyan")
text.insert(tkinter.END, "Big Green\n", "big_green")
text.insert(tkinter.END, "active-text", "colorOnEnter")
text.insert(tkinter.END, "Small Yellow\n", "small_yellow")
text.insert(tkinter.END, "Brown\n", "brown")
&nbsp;
text.window_create(tkinter.END, window=quitButton)
&nbsp;
text.insert(tkinter.END, "Pink\n", "pink")
text.insert(tkinter.END, "White\n", "white")
text.insert(tkinter.END, "Raised box\n", "raised")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Sunken box\n", "sunken")
text.insert(tkinter.END, "\n")
text.insert(tkinter.END, "Centered text\n", "center")
text.insert(tkinter.END, "Left justificiation\n", "left")
text.insert(tkinter.END, "Right justificiation\n", "right")
text.insert(tkinter.END, "H")
text.insert(tkinter.END, "2", "sub")
text.insert(tkinter.END, "O\n")
text.insert(tkinter.END, "E=mc")
text.insert(tkinter.END, "2\n", "sup")
text.insert(tkinter.END, "active-text", "colorOnEnter")
&nbsp;
radio_var = tkinter.StringVar()
&nbsp;
radio1 = tkinter.Radiobutton(root, variable=radio_var, value="Assembler",
                             text="Assembler")
&nbsp;
radio2 = tkinter.Radiobutton(root, variable=radio_var, value="Basic",
                             text="Basic")
&nbsp;
radio3 = tkinter.Radiobutton(root, variable=radio_var, value="Brainfuck",
                             text="Brainfuck")
&nbsp;
radio4 = tkinter.Radiobutton(root, variable=radio_var, value="C",
                             text="C")
&nbsp;
radio5 = tkinter.Radiobutton(root, variable=radio_var, value="Python",
                             text="Python")
&nbsp;
text.insert(tkinter.END, "\nMaly vyber:\n")
text.window_create(tkinter.END, window=radio1)
text.window_create(tkinter.END, window=radio2)
text.window_create(tkinter.END, window=radio3)
text.window_create(tkinter.END, window=radio4)
text.window_create(tkinter.END, window=radio5)
&nbsp;
button = tkinter.Button(root, text="Close window", command=exit)
&nbsp;
text.pack()
button.pack()
&nbsp;
root.mainloop()
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů naleznete pod
následujícími odkazy:</p>

<table>
<tr><th>Příklad</th><th>Odkaz</th></tr>
<tr><td>88_text_more_styles.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/88_text_more_styles.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/88_text_more_styles.py</a></td></tr>
<tr><td>89_text_images.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/89_text_images.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/89_text_images.py</a></td></tr>
<tr><td>90_tab_stops.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/90_tab_stops.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/90_tab_stops.py</a></td></tr>
<tr><td>91_text_align.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/91_text_align.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/91_text_align.py</a></td></tr>
<tr><td>92_advanced_styles.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/92_advanced_styles.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/92_advanced_styles.py</a></td></tr>
<tr><td>93_text_interaction.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/93_text_interaction.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/93_text_interaction.py</a></td></tr>
<tr><td>94_text_interaction_2.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/94_text_interaction_2.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/94_text_interaction_2.py</a></td></tr>
<tr><td>95_text_and_other_widgets.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/95_text_and_other_widgets.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/Tkinter/95_text_and_other_widgets.py</a></td></tr>
</table>



<p><a name="k16"></a></p>
<h2 id="k16">16. Odkazy na Internetu</h2>

<ol>

<li>Hra Breakout napísaná v Tkinteri<br />
<a href="https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/">https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/</a>
</li>

<li>Hra Snake naprogramovaná v Pythone s pomocou Tkinter<br />
<a href="https://www.root.cz/clanky/hra-snake-naprogramovana-v-pythone-s-pomocou-tkinter/">https://www.root.cz/clanky/hra-snake-naprogramovana-v-pythone-s-pomocou-tkinter/</a>
</li>

<li>The Tkinter Canvas Widget<br />
<a href="http://effbot.org/tkinterbook/canvas.htm">http://effbot.org/tkinterbook/canvas.htm</a>
</li>

<li>Ovládací prvek (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29">https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29</a>
</li>

<li>Rezervovaná klíčová slova v&nbsp;Pythonu<br />
<a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords">https://docs.python.org/3/reference/lexical_analysis.html#keywords</a>
</li>

<li>TkDocs: Styles and Themes<br />
<a href="http://www.tkdocs.com/tutorial/styles.html">http://www.tkdocs.com/tutorial/styles.html</a>
</li>

<li>Drawing in Tkinter<br />
<a href="http://zetcode.com/gui/tkinter/drawing/">http://zetcode.com/gui/tkinter/drawing/</a>
</li>

<li>Changing ttk widget text color (StackOverflow)<br />
<a href="https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color">https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color</a>
</li>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>appJar<br />
<a href="http://appjar.info/">http://appjar.info/</a>
</li>

<li>appJar (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/AppJar">https://en.wikipedia.org/wiki/AppJar</a>
</li>

<li>appJar na Pythonhosted<br />
<a href="http://pythonhosted.org/appJar/">http://pythonhosted.org/appJar/</a>
</li>

<li>Stránky projektu PyGTK<br />
<a href="http://www.pygtk.org/">http://www.pygtk.org/</a>
</li>

<li>PyGTK (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PyGObject<br />
<a href="https://wiki.gnome.org/Projects/PyGObject">https://wiki.gnome.org/Projects/PyGObject</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Stránky projektu PyQt<br />
<a href="https://riverbankcomputing.com/software/pyqt/intro">https://riverbankcomputing.com/software/pyqt/intro</a>
</li>

<li>PyQt (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PySide<br />
<a href="https://wiki.qt.io/PySide">https://wiki.qt.io/PySide</a>
</li>

<li>PySide (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PySide">https://en.wikipedia.org/wiki/PySide</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>

<li>Kivy (framework, Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Kivy_(framework)">https://en.wikipedia.org/wiki/Kivy_(framework)</a>

<li>QML Applications<br />
<a href="http://doc.qt.io/qt-5/qmlapplications.html">http://doc.qt.io/qt-5/qmlapplications.html</a>
</li>

<li>KDE<br />
<a href="https://www.kde.org/">https://www.kde.org/</a>
</li>

<li>Qt<br />
<a href="https://www.qt.io/">https://www.qt.io/</a>
</li>

<li>GNOME<br />
<a href="https://en.wikipedia.org/wiki/GNOME">https://en.wikipedia.org/wiki/GNOME</a>
</li>

<li>Category:Software that uses PyGTK<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK</a>
</li>

<li>Category:Software that uses PyGObject<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject</a>
</li>

<li>Category:Software that uses wxWidgets<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets">https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets</a>
</li>

<li>GIO<br />
<a href="https://developer.gnome.org/gio/stable/">https://developer.gnome.org/gio/stable/</a>
</li>

<li>GStreamer<br />
<a href="https://gstreamer.freedesktop.org/">https://gstreamer.freedesktop.org/</a>
</li>

<li>GStreamer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GStreamer">https://en.wikipedia.org/wiki/GStreamer</a>
</li>

<li>Wax Gui Toolkit<br />
<a href="https://wiki.python.org/moin/Wax">https://wiki.python.org/moin/Wax</a>
</li>

<li>Python Imaging Library (PIL)<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/pil/">http://infohost.nmt.edu/tcc/help/pubs/pil/</a>
</li>

<li>Why Pyjamas Isn’t a Good Framework for Web Apps (blogpost z&nbsp;roku 2012)<br />
<a href="http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/">http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel TiĹĄnovskĂ˝</a> &nbsp; 2017</small></p>
</body>
</html>

