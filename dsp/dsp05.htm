<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Digitální signálové procesory zpracovávající hodnoty s plovoucí řádovou čárkou</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Digitální signálové procesory zpracovávající hodnoty s plovoucí řádovou čárkou</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Všechny digitální signálové procesory, které jsme si až doposud popisovali, byly optimalizovány pro zpracování signálů složených z celočíselných vzorků. Existují však i mnohdy velmi výkonné DSP určené pro zpracování hodnot s plovoucí řádovou čárkou. Právě těmito čipy se budeme zabývat dnes.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Digitální signálové procesory zpracovávající hodnoty s&nbsp;plovoucí řádovou čárkou</a></p>
<p><a href="#k02">2. Historický čip TMS320C30</a></p>
<p><a href="#k03">3. Paralelní spouštění vybraných instrukcí a branch delay slot</a></p>
<p><a href="#k04">4. Moduly čipu TMS320C30</a></p>
<p><a href="#k05">5. Sada registrů čipu TMS320C30</a></p>
<p><a href="#k06">6. Celočíselné operace</a></p>
<p><a href="#k07">7. Operace s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou</a></p>
<p><a href="#k08">8. Typické doby trvání základních algoritmů pro zpracování signálu</a></p>
<p><a href="#k09">9. Digitální signálový procesor TMS320C6701</a></p>
<p><a href="#k10">10. Výkonné jednotky procesoru TMS320C6701</a></p>
<p><a href="#k11">11. Interní struktura čipů TMS320C6701</a></p>
<p><a href="#k12">12. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Digitální signálové procesory zpracovávající hodnoty s&nbsp;plovoucí řádovou čárkou</h2>

<p>V&nbsp;dnešním článku si popíšeme dva digitální signálové procesory navržené
ve společnosti Texas Instruments, které jsou primárně určeny pro zpracování
numerických hodnot reprezentovaných v&nbsp;systému plovoucí řádové čárky (<i>FP
&ndash; floating point</i>). První z&nbsp;těchto DSP se jmenuje
<i>TMS320C30</i> a je odvozen od prapředka všech DSP TI &ndash; čipu TMS32010.
Naproti tomu druhý procesor označovaný <i>TMS320C6701</i> je založen na novější
a výkonnější architektuře VLIW. V&nbsp;takzvané &bdquo;první generaci&ldquo;
digitálních signálových procesorů společnosti Texas Instruments nalezneme tyto
čipy a jejich alternativy:</p>

<table>
<tr><th>Čip</th><th>Stručný popis</th></tr>
<tr><td>TMS32010</td><td>první celočíselný DSP, který jsme si již v&nbsp;tomto seriálu popsali</td></tr>
<tr><td>TMS320M10</td><td>podobný čip, ovšem s&nbsp;interní ROM o kapacitě tří kilobajtů</td></tr>
<tr><td>TMS320C10</td><td>podobný čip, ovšem vyrobený odlišnou technologií</td></tr>
<tr><td><strong>TMS320C30</strong></td><td>DSP s&nbsp;podporou operací s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou</td></tr>
<tr><td>TMS320C40</td><td>DSP s&nbsp;podporou operací s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou</td></tr>
<tr><td>TMS320C80</td><td>MVP neboli Multimedia Video Processor</td></tr>
</table>

<p>Další důležitou řadou je řada <i>TMS320C6xx</i>, v&nbsp;níž nalezneme
procesory s&nbsp;architekturou VLIW. Již ve třetím článku o DSP jsme si řekli,
že rodina digitálních signálových procesorů TMS320C6xx je poměrně rozsáhlá,
protože v&nbsp;ní nalezneme čipy určené pro různé aplikační oblasti. Základní
dělení je na čipy, které dokážou primárně zpracovávat celočíselná data
popř.&nbsp;data s&nbsp;pevnou řádovou čárkou (<i>FX &ndash; fixed point</i>), a
na čipy, které naopak zpracovávají hodnoty s&nbsp;plovoucí řádovou čárkou
(<i>FP &ndash; floating point</i>). O jaké typy DSP se jedná, se dá poměrně
jednoduše zjistit pohledem na číslo, které se nachází na devátém místě označení
čipu. Prozatím se přidržíme původní rodiny TMS320 a nikoli složitějších
integrovaných obvodů OMAP a DaVinci:</p>

<table>
<tr><th>Označení</th><th>Fixed point</th><th>Floating point</th><th>Poznámka</th></tr>
<tr><td>TMS320C62x </td><td>&#x2713;</td><td>&times;</td><td>základní model digitálního signálového procesoru s&nbsp;VLIW</td></tr>
<tr><td><strong>TMS320C67x</strong></td><td>&times; </td><td>&#x2713;</td><td>na úrovni zdrojového kódu kompatibilní s&nbsp;prvním čipem</td></tr>
<tr><td>TMS320C64x </td><td>&#x2713;</td><td>&times;</td><td>na úrovni zdrojového kódu kompatibilní s&nbsp;prvním čipem</td></tr>
<tr><td>TMS320C67x+</td><td>&times; </td><td>&#x2713;</td><td>vylepšení čipu TMS320C67x</td></tr>
<tr><td>TMS320C64x+</td><td>&#x2713;</td><td>&times;</td><td>vylepšení čipu TMS320C64x</td></tr>
<tr><td>TMS320C674x</td><td>&#x2713;</td><td>&#x2713;</td><td>vznikl sloučením vlastností TMS320C64x+ a TMS320C67x+</td></tr>
<tr><td>TMS320C66x </td><td>&#x2713;</td><td>&#x2713;</td><td>nová řada založená na TMS320C674x</td></tr>
</table>



<p><a name="k02"></a></p>
<h2 id="k02">2. Historický čip TMS320C30</h2>

<p>Digitální signálový procesor <i>TMS320C30</i>, který byl <a
href="#k01">v&nbsp;úvodní kapitole</a> vypsán v&nbsp;první tabulce, je
z&nbsp;dnešního pohledu historickým čipem, který se již dále nevyrábí, i když
firma TI alespoň zajišťuje formu zpětné kompatibility na úrovni zdrojových kódů
(binárně již nikoli). To však nemusí vadit, protože tento DSP má jednu velkou
výhodu &ndash; jeho interní struktura je poměrně jednoduchá a je tedy snadné
celý čip prakticky kompletně pochopit (na rozdíl od procesorů VLIW, kde je to
již komplikovanější). DSP TMS320C30 byl vyráběn v&nbsp;několika základních
variantách, které se od sebe lišily především délkou hodinového cyklu (tedy
přeneseně hodinovou frekvencí) a tím pádem i maximálním teoretickým výpočetním
výkonem. Vzhledem k&nbsp;architektuře tohoto procesoru se výkon udává jak
v&nbsp;MIPS (celočíselné operace), tak i v&nbsp;MFLOPS (operace s&nbsp;FP
hodnotami):</p>

<table>
<tr><th>Model</th><th>Délka cyklu</th><th>MIPS</th><th>MFLOPS</th></tr>
<tr><td>TMS320C30-27</td><td>74ns</td><td>13,5</td><td>27</td></tr>
<tr><td>TMS320C30-33</td><td>60ns</td><td>16,7</td><td>33,3</td></tr>
<tr><td>TMS320C30-40</td><td>50ns</td><td>20</td><td>40</td></tr>
<tr><td>TMS320C30-50</td><td>40ns</td><td>25</td><td>50</td></tr>
</table>

<p>Z&nbsp;DSP je vyvedena externí datová sběrnice o šířce 32 bitů a adresová
sběrnice o šířce 24 bitů. Vzhledem k&nbsp;tomu, že se instrukce i operandy
adresují po 32bitových slovech, znamená to, že lze přistupovat k&nbsp;16Mslovům
(64 MB, kde MB v&nbsp;mých článcích odpovídá 2<sup>20</sup> bajtům). Ovšem
tento DSP obsahuje i interní paměť, konkrétně dva bloky paměti RAM, každý o
velikosti 1k&times;32 bitů, blok ROM o velikosti 4k&times;32 bitů (na začátku
jsou umístěny vektory pro přerušovací rutiny atd.) a programovou cache o
kapacitě 64&times;32 bitů. Existence těchto pamětí je velmi důležitá, protože
umožňuje dosažení vyššího výpočetního výkonu, než při použití externí RAM/ROM
(současně lze načítat dva operandy a jeden kód instrukce). Kromě těchto modulů
nalezneme na TMS32C030 i dva sériové porty a dva časovače.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Paralelní spouštění vybraných instrukcí a branch delay slot</h2>

<p>Na rozdíl od prvního DSP TMS32010 je čip TMS320C030 přece jen poněkud
sofistikovanější, protože v&nbsp;některých případech dokáže spustit dvě
instrukce současně (dalo by se říci, že se jedná o prozatím nenápadný zárodek
VLIW). Současně lze spustit (párovat) tyto typy instrukcí:</p>

<ol>
<li>Aritmetická instrukce+instrukce typu <i>store</i></li>
<li>Logická instrukce+instrukce typu <i>store</i></li>
<li>Načtení dvou registrů (<i>load+load</i>)</li>
<li>Uložení dvou registrů (<i>store+store</i>)</li>
<li>To nejdůležitější na konec: instrukce násobení a součtu (<i>multiply+add</i>)</li>
</ol>

<p>Paralelně spouštěné instrukce se zapisují způsobem, který již známe
z&nbsp;předchozího článku:</p>

<pre>
      ADDI R0, R1, R2
   || MPYI R3, R4, R5
</pre>

<p>Kromě toho lze využít <i>branch delay sloty</i>, což znamená, že instrukce
načtená ihned za instrukcí skoku je taktéž provedena (její kód je načten při
výpočtu adresy skoku). Možnosti <i>branch delay slotů</i> jsou dále rozšířeny
existencí dvou instrukcí <strong>RPTB</strong> (<i>repeat block</i>) a
<strong>RPTS</strong> (<i>repeat single</i>), které slouží pro konstrukci
počítaných programových smyček BEZ použití podmíněných skoků. Instrukce
<strong>RPTS</strong> jednoduše opakuje zadanou instrukci (počitadlem je
registr <strong>RC</strong>):</p>

<pre>
RPTS jedna_instrukce
</pre>

<p>Instrukce <strong>RPTB</strong> slouží pro implementaci konstrukce
<i>for</i>. Této instrukci se předává adresa (návěští) konce bloku a počet
opakování celého bloku:</p>

<pre>
             RPTB konec_bloku, 42
             ...
             ...
             ...
konec_bloku:
</pre>

<p>Tyto dvě instrukce provádí inicializaci trvající čtyři cykly, ovšem další
výpočty jsou již velmi rychlé, protože samotné zvýšení počitadla a opakování
smyčky je provedeno paralelně s&nbsp;vykonávanými instrukcemi. Navíc se
v&nbsp;případě <strong>RPTS</strong> opakovaná instrukce načte jen jednou.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Moduly čipu TMS320C30</h2>

<p>Digitální signálový procesor TMS320C30 je postaven okolo důležitých modulů.
Jsou jimi:</p>

<ul>
<li>Aritmeticko-logická jednotka určená pro provádění FX i FP operací.</li>
<li>Nezávisle pracující násobička určená taktéž pro FX i FP operace.</li>
</ul>

<p>Zajímavé je, že oba moduly dokážou pracovat jak s&nbsp;celočíselnými
operandy popř.&nbsp;s&nbsp;operandy s&nbsp;pevnou řádovou čárkou (FX), tak i
s&nbsp;operandy s&nbsp;plovoucí řádovou čárkou (FP). To je dosti odlišný
přístup, než jaký známe z&nbsp;běžných desktopových a serverových
mikroprocesorů (i386, x86-64, ARM32, AArch64, MIPS), v&nbsp;nichž je
matematický koprocesor většinou zcela oddělen, a to jak kvůli samostatné sadě
registrů, tak i rozdílnými instrukcemi.</p>

<p>Aritmeticko-logická jednotka na svém vstupu akceptuje 32bitové celočíselné
operandy, přičemž i výstup je v&nbsp;tomto případě 32bitový. Pro hodnoty
s&nbsp;plovoucí řádovou čárkou jsou akceptovány 32bitové operandy či operandy
40bitové, výsledek je vždy 40bitový. Násobička akceptuje v&nbsp;obou případech
(FX i FP) 32bitové vstupní operandy a výsledek je taktéž v&nbsp;obou případech
40bitový.</p>

<p>Základním FP formátem je formát <i>single/float</i> <strong>částečně
odvozený</strong> od formátu specifikovaného ve známé normě IEEE 754. Rozdíly
spočívají v&nbsp;odlišném zaokrouhlení, chování některých speciálních hodnot a
taktéž v&nbsp;tom, že jak mantisa, tak i exponent jsou vyjádřeny ve dvojkovém
doplňku. 32bitové slovo obsahuje 24 bitů mantisy a osm bitů pro exponent.
Hodnota exponentu leží v&nbsp;rozsahu -128..127 (u normy IEEE 754 jen
v&nbsp;rozsahu -127..126, protože mezní hodnoty jsou rezervovány pro speciální
použití &ndash; NaN, nekonečna atd.).</p>

<p>Pokud je zapotřebí pracovat s&nbsp;formátem <i>single/float</i> odpovídající
přesně normě IEEE 754, lze samozřejmě použít pomalou softwarovou konverzi nebo
speciální čip nazvaný <i>TMS320C30-IEEE Floating-Point Format Converter</i>,
který dokáže konvertovat data v&nbsp;rychlosti odpovídající rychlosti samotného
DSP (tedy z&nbsp;pohledu programátora v&nbsp;reálném čase, pouze se
zpožděním).</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Sada registrů čipu TMS320C30</h2>

<p>Sada registrů čipu <i>TMS320C30</i> je částečně odvozena od sady registrů,
s&nbsp;nimiž jsme se setkali u prvního modelu TMS32010. Samozřejmě ovšem muselo
dojít k&nbsp;úpravám a rozšířením, které souvisí jak s&nbsp;větší komplexností
čipu (výrazně větší množství registrů použitelných pro adresování), tak i
s&nbsp;tím, že jak ALU tak i násobička dokáže provádět operace s&nbsp;FX i FP
formáty. Pracovní registry tedy mohou obsahovat buď FP hodnotu či FX hodnotu,
mezi nimiž lze v&nbsp;případě potřeby provádět konverze pomocí speciálních
instrukcí:</p>

<table>
<tr><th>Registry</th><th>Šířka</th><th>Pojmenování</th><th>Význam</th></tr>
<tr><td>R0-R7</td><td>40 bitů</td><td>extender-precision registers</td><td>akumulátory pro FX i FP operace</td></tr>
<tr><td>AR0-AR7</td><td>32 bitů</td><td>auxiliary registers</td><td>adresování, počitadla smyček, celočíselné operace</td></tr>
<tr><td>různé (12&times;)</td><td>32 bitů</td><td>control registers</td><td>stavový registr, ukazatel na vrchol zásobníku, maskování přerušení atd.</td></tr>
</table>

<p>Připomeňme si, že u původního čipu TMS32010 byl počet i bitová šířka
registrů menší a mnohé registry byly přímo &bdquo;zadrátovány&ldquo; na určitou
pevně danou funkci. Povšimněte si rozšíření akumulátoru z&nbsp;jediného
registru na osm registrů a taktéž rozšíření adresových registrů ze sady
2&times;16 bitů na sadu 8&times;32 bitů:</p>

<table>
<tr><th>Registr</th><th>Šířka</th><th>Použití</th></tr>
<tr><td>ACC</td><td>32 bitů</td><td>akumulátor, jeden ze vstupů ALU, ukládá se do něj výsledek ALU operace</td></tr>
<tr><td>T</td><td>16 bitů</td><td>vstup do násobičky</td></tr>
<tr><td>P</td><td>32 bitů</td><td>výsledek práce násobičky</td></tr>
<tr><td>ARP</td><td>1 bit</td><td>vybírá AR0 či AR1 při nepřímém adresování</td></tr>
<tr><td>AR0</td><td>16 bitů</td><td>použit při nepřímém adresování (může se automaticky inkrementovat či dekrementovat)</td></tr>
<tr><td>AR1</td><td>16 bitů</td><td>použit při nepřímém adresování (může se automaticky inkrementovat či dekrementovat)</td></tr>
</table>



<p><a name="k06"></a></p>
<h2 id="k06">6. Celočíselné operace</h2>

<p>Digitální signálové procesory TMS320C30 podporují následující instrukce
prováděné v&nbsp;ALU a v&nbsp;násobičce s&nbsp;celočíselnými operandy:</p>

<table>
<tr><th>Zkratka instrukce</th><th>Význam</th></tr>
<tr><td>ADDI</td><td>součet dvou FX hodnot</td></tr>
<tr><td>ADDC</td><td>součet s carry (přenosem)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>SUBI</td><td>rozdíl dvou FX hodnot</td></tr>
<tr><td>SUBB</td><td>rozdíl s borrow (výpůjčkou)</td></tr>
<tr><td>SUBC</td><td>rozdíl za podmínky </td></tr>
<tr><td>SUBRI</td><td>rozdíl dvou FX hodnot, otočení obou operandů</td></tr>
<tr><td>SUBRB</td><td>rozdíl s borrow (výpůjčkou), otočení obou operandů</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>ABSI</td><td>absolutní hodnota</td></tr>
<tr><td>NEGI</td><td>změna znaménka FX hodnoty</td></tr>
<tr><td>NEGB</td><td>změna znaménka s&nbsp;výpůjčkou</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>AND </td><td>logický součin bit po bitu</td></tr>
<tr><td>ANDN</td><td>logický součin bit po bitu (druhý operand je negován)</td></tr>
<tr><td>OR  </td><td>logický součet bit po bitu</td></tr>
<tr><td>XOR </td><td>nonekvivalence bit po bitu</td></tr>
<tr><td>NOT </td><td>negace všech bitů</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>ROL </td><td>rotace doleva</td></tr>
<tr><td>ROR </td><td>rotace doprava</td></tr>
<tr><td>ROLC</td><td>rotace doleva přes carry</td></tr>
<tr><td>RORC</td><td>rotace doprava přes carry</td></tr>
<tr><td>ASH </td><td>aritmetický posun</td></tr>
<tr><td>LSH </td><td>logický posun</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>CMPI</td><td>porovnání dvou operandů s&nbsp;nastavením příznaků</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>MPYI</td><td>součin (tato operace je samozřejmě prováděna v&nbsp;násobičce)</td></tr>
</table>



<p><a name="k07"></a></p>
<h2 id="k07">7. Operace s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou</h2>

<p>Operace s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou jsou pochopitelně
odlišné od celočíselných operací, například chybí bitové rotace, posuny,
logické operace atd. Na druhou stranu se však objevují nové instrukce pro
normalizaci a zaokrouhlení FP hodnoty. Samozřejmě nechybí ani instrukce pro
vynásobení dvou FP operandů prováděné v&nbsp;násobičce (se 40 bitovým výsledkem
&ndash; dojde k&nbsp;rozšíření přesnosti):</p>

<table>
<tr><th>Zkratka instrukce</th><th>Význam</th></tr>
<tr><td>ADDF </td><td>součet dvou FP hodnot</td></tr>
<tr><td>SUBF </td><td>rozdíl dvou FP hodnot</td></tr>
<tr><td>SUBRF</td><td>dtto, ale otočení obou operandů</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>ABSF </td><td>absolutní hodnota</td></tr>
<tr><td>NEGF </td><td>změna znaménka FP hodnoty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>CMPF </td><td>porovnání dvou FP hodnot</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>MPYF </td><td>vynásobení dvou FP hodnot</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>NORM </td><td>normalizace FP hodnoty</td></tr>
<tr><td>RND  </td><td>zaokrouhlení FP hodnoty</td></tr>
</table>

<p>Pro převod mezi celočíselnými hodnotami (s&nbsp;případnou pevnou řádovou
čárkou) a FP hodnotami slouží dvě instrukce:</p>

<table>
<tr><th>Zkratka instrukce</th><th>Význam</th></tr>
<tr><td>FIX  </td><td>převod FP &rarr; FX</td></tr>
<tr><td>FLOAT</td><td>převod FX &rarr; FP</td></tr>
</table>



<p><a name="k08"></a></p>
<h2 id="k08">8. Typické doby trvání základních algoritmů pro zpracování signálu</h2>

<p>Pro zajímavost a pro ukázku, jak pečlivě byl TMS320C30 navržen
s&nbsp;ohledem na problematiku zpracování signálu, si uveďme typické doby
trvání některých optimalizovaných algoritmů. Následující hodnoty byly získány
z&nbsp;článku &bdquo;The TMS320C30 Floating-Point Digital Signal Processor
APPLICATION REPORT: SPRA397&ldquo;, jehož autory jsou Panos Papamichalis a Ray
Simar, Jr. Počet slov vyjadřuje počet 32bitových instrukcí nutných pro
implementaci algoritmu, sloupce s&nbsp;počtem cyklů pak spodní a horní mez
(například u dělení dochází buď jen k&nbsp;posunu či k&nbsp;posunu a rozdílu,
proto se minimální a maximální počet cyklů liší):</p>

<table>
<tr><th>Algoritmus</th><th>Počet slov</th><th>Min cyklů</th><th>Max cyklů</th></tr>
<tr><td>Převrácená hodnota FP</td><td>31</td><td>31</td><td>31</td></tr>
<tr><td>Celočíselné dělení</td><td>27</td><td>27</td><td>58</td></tr>
<tr><td>Druhá odmocnina</td><td>32</td><td>35</td><td>35</td></tr>
<tr><td>Matice &times; vektor</td><td>10</td><td>2+R(C+9)</td><td>dtto</td></tr>
<tr><td>Skalární součin</td><td>10</td><td>8+(N-1)</td><td>dtto</td></tr>
<tr><td>FIR</td><td>5</td><td>7+(N-1)</td><td>dtto</td></tr>
<tr><td>IIR</td><td>7</td><td>7</td><td>dtto</td></tr>
<tr><td>Komprese &micro;-law</td><td>16</td><td>16</td><td>dtto</td></tr>
<tr><td>Dekomprese &micro;-law</td><td>13</td><td>11</td><td>16</td></tr>
<tr><td>Komprese A-law</td><td>18</td><td>18</td><td>dtto</td></tr>
<tr><td>Dekomprese A-law</td><td>15</td><td>14</td><td>21</td></tr>
</table>



<p><a name="k09"></a></p>
<h2 id="k09">9. Digitální signálový procesor TMS320C6701</h2>

<p>Výše popsaný DSP TMS320C30 byl jedním z&nbsp;prvních digitálních signálových
procesorů zpracovávajících FP hodnoty, ovšem jeho výpočetní výkon pro mnohé
aplikace nebyl dostačující. Proto pochopitelně vznikaly další čipy,
z&nbsp;nichž si dnes popíšeme TMS320C6701. Z&nbsp;označení tohoto čipu (a při
pohledu na tabulku uvedenou <a href="#k01">v&nbsp;první kapitole</a>) vyplývá,
že je tento čip postavený na architektuře VLIW a že je určen pro zpracování FP
hodnot. Tyto procesory pracují na vyšších hodinových frekvencích (až 167 MHz) a
díky tomu i díky architektuře VLIW je jejich výpočetní výkon mnohem větší, než
u původního TMS320C30: teoretický 1 GFLOPS versus 50 MFLOPS u původního
čipu.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Výkonné jednotky procesoru TMS320C6701</h2>

<p>Vysoký výpočetní výkon čipu TMS320C6701 je zajištěn díky použití osmi
samostatně pracujících výkonných jednotek:</p>

<ul>
<li>Čtyři aritmeticko-logické jednotky pro zpracování hodnot uložených v&nbsp;FP i FX formátu.</li>
<li>Dvě aritmeticko-logické jednotky pouze pro FX formát.</li>
<li>Dvě násobičky pro formáty FP i FX. Dokončení každé operace trvá jeden takt.</li>
</ul>

<p>Zde můžeme vidět, jakým způsobem se vlastně došlo k&nbsp;teoretické
maximální výpočetní rychlosti 1 GFLOPS. Existuje celkem šest jednotek pro
výpočty s&nbsp;hodnotami reprezentovanými v&nbsp;systému plovoucí řádové čárky
(4&times;ALU+2&times;násobičky) a maximální hodinová frekvence čipů je 167 MHz
(přesněji 166 + 2/3 MHz). Proto maximální počet FP operací provedených za
sekundu je roven (166+2/3)&times;6&times;10<sup>6</sup>=10<sup>9</sup> FLOPS,
tedy přesně 1 GFLOPS. Ve skutečnosti lze však této rychlosti dosáhnout jen ve
chvíli, kdy jsou všechny operandy uloženy v&nbsp;pracovních registrech
(akumulátorech) a kdy se skutečně využijí všechny možnosti nabízené
architekturou VLIW &ndash; osm instrukcí v&nbsp;jednom &bdquo;dlouhém&ldquo;
slově, navíc musí být instrukce spuštěny paralelně.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Interní struktura čipů TMS320C6701</h2>

<p>Zajímavé je, že interní struktura čipů TMS320C6701 je prakticky shodná
s&nbsp;čipy popsanými minule. Jediný, zato však pro praxi podstatný rozdíl
spočívá v&nbsp;tom, že některé výkonné jednotky zpracovávají FP hodnoty:</p>

<pre>
+-----------------+-----------------+
|   Registry Ax   |   Registry Bx   |
+-----------------+-----------------+
   ⇅   ⇅   ⇅   ⇅     ⇅   ⇅   ⇅   ⇅
 +---+---+---+---+ +---+---+---+---+
 |.L1|.S1|.M1|.D1| |.D2|.M2|.S2|.L2|
 +---+---+---+---+ +---+---+---+---+
</pre>

<p>Oproti minule popsaným čipům určeným pro zpracování celočíselných signálů se
rozšířily možnosti šesti jednotek:</p>

<table>
<tr><th>Jednotka</th><th>Fixed point</th><th>Floating point</th><th>Použití</th></tr>
<tr><td>.L1</td><td>&#x2713;</td><td>&#x2713;</td><td>ALU pro FP i FX, porovnání</td></tr>
<tr><td>.S1</td><td>&#x2713;</td><td>&times;</td><td>ALU pro FX, skoky, načtení konstant</td></tr>
<tr><td>.M1</td><td>&#x2713;</td><td>&#x2713;</td><td>Násobička pro FP i FX</td></tr>
<tr><td>.D1</td><td>&#x2713;</td><td>&#x2713;</td><td>jednoduchá ALU pro FP i FX, load &amp; store</td></tr>
<tr><td>.L2</td><td>&#x2713;</td><td>&#x2713;</td><td>ALU pro FP i FX, porovnání</td></tr>
<tr><td>.S2</td><td>&#x2713;</td><td>&times;</td><td>ALU pro FX, skoky, načtení konstant</td></tr>
<tr><td>.M2</td><td>&#x2713;</td><td>&#x2713;</td><td>Násobička pro FP i FX</td></tr>
<tr><td>.D2</td><td>&#x2713;</td><td>&#x2713;</td><td>jednoduchá ALU pro FP i FX, load &amp; store</td></tr>
</table>

<p>Další podrobnosti o tomto čipu i o dalších VLIW pro FP operace si řekneme
příště.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Odkazy na Internetu</h2>

<ol>

<li>VLIW: Very Long Instruction Word: Texas Instruments TMS320C6x<br />
<a href="http://www.ecs.umass.edu/ece/koren/architecture/VLIW/2/ti1.html">http://www.ecs.umass.edu/ece/koren/architecture/VLIW/2/ti1.html</a>
</li>

<li>An Introduction To Very-Long Instruction Word (VLIW) Computer Architecture<br />
Philips Semiconductors
</li>

<li>VLIW Architectures for DSP: A Two-Part Lecture (PDF, slajdy)<br />
<a href="http://www.bdti.com/MyBDTI/pubs/vliw_icspat99.pdf">http://www.bdti.com/MyBDTI/pubs/vliw_icspat99.pdf</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Very_long_instruction_word">https://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>TMS320C3x User's Guide<br />
<a href="https://www.manualslib.com/manual/169818/Texas-Instruments-Tms320c3x.html">https://www.manualslib.com/manual/169818/Texas-Instruments-Tms320c3x.html</a>
</li>

<li>A VLIW Approach to Architecture, Compilers and Tools<br />
<a href="http://www.vliw.org/book/">http://www.vliw.org/book/</a>
</li>

<li>VEX Toolchain (VEX = VLIW Example)<br />
<a href="http://www.hpl.hp.com/downloads/vex/">http://www.hpl.hp.com/downloads/vex/</a>
</li>

<li>Elbrus (computer)<br />
<a href="https://en.wikipedia.org/wiki/Elbrus_%28computer%29">https://en.wikipedia.org/wiki/Elbrus_%28computer%29</a>
</li>

<li>Super Harvard Architecture Single-Chip Computer<br />
<a href="https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer">https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer</a>
</li>

<li>Digital Signal Processors (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/overview.page">http://www.ti.com/lsds/ti/processors/dsp/overview.page</a>
</li>

<li>C674x Low Power DSP (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page">http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page</a>
</li>

<li>TMS320C30 (stránky TI)<br />
<a href="http://www.ti.com/product/tms320c30">http://www.ti.com/product/tms320c30</a>
</li>

<li>TMS320C6722B<br />
<a href="http://www.ti.com/product/tms320c6722b/description">http://www.ti.com/product/tms320c6722b/description</a>
</li>

<li>Introduction to DSP<br />
<a href="http://www.ti.com/lit/wp/spry281/spry281.pdf">http://www.ti.com/lit/wp/spry281/spry281.pdf</a>
</li>

<li>The Evolution of TMS (Family of DSPs)<br />
<a href="http://www.slideshare.net/moto_modx/theevo1">http://www.slideshare.net/moto_modx/theevo1</a>
</li>

<li>Datasheet k TMS32010<br />
<a href="http://www.datasheetarchive.com/dlmain/49326c32a52050140abffe6f0ac4894aa09889/M/TMS32010">http://www.datasheetarchive.com/dlmain/49326c32a52050140abffe6f0ac4894aa09889/M/TMS32010</a>
</li>

<li>1979: Single Chip Digital Signal Processor Introduced<br />
<a href="http://www.computerhistory.org/siliconengine/single-chip-digital-signal-processor-introduced/">http://www.computerhistory.org/siliconengine/single-chip-digital-signal-processor-introduced/</a>
</li>

<li>The TMS32010. The DSP chip that changed the destiny of a semiconductor giant<br />
<a href="http://www.tihaa.org/historian/TMS32010-12.pdf">http://www.tihaa.org/historian/TMS32010-12.pdf</a>
</li>

<li>Texas Instruments TMS320 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Texas_Instruments_TMS320">https://en.wikipedia.org/wiki/Texas_Instruments_TMS320</a>
</li>

<li>Great Microprocessors of the Past and Present: Part IX: Signetics 8x300, Early cambrian DSP ancestor (1978):<br />
<a href="http://www.cpushack.com/CPU/cpu2.html#Sec2Part9">http://www.cpushack.com/CPU/cpu2.html#Sec2Part9</a>
</li>

<li>Great Microprocessors of the Past and Present (V 13.4.0)<br />
<a href="http://jbayko.sasktelwebsite.net/cpu.html">http://jbayko.sasktelwebsite.net/cpu.html</a>
</li>

<li>Introduction to DSP - DSP processors:<br />
<a href="http://www.bores.com/courses/intro/chips/index.htm">http://www.bores.com/courses/intro/chips/index.htm</a>
</li>

<li>The Scientist and Engineer's Guide to Digital Signal Processing:<br />
<a href="http://www.dspguide.com/">http://www.dspguide.com/</a>
</li>

<li>Digital signal processor (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Digital_signal_processor">http://en.wikipedia.org/wiki/Digital_signal_processor</a>
</li>

<li>Digitální signálový procesor (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Digitální_signálový_procesor">http://cs.wikipedia.org/wiki/Digitální_signálový_procesor</a>
</li>

<li>Digital Signal Processing FAQs<br />
<a href="http://dspguru.com/dsp/faqs">http://dspguru.com/dsp/faqs</a>
</li>

<li>Reprezentace numerických hodnot ve formátech FX a FP<br />
<a href="http://www.root.cz/clanky/fixed-point-arithmetic/">http://www.root.cz/clanky/fixed-point-arithmetic/</a>
</li>

<li>IEEE 754 a její příbuzenstvo: FP formáty<br />
<a href="http://www.root.cz/clanky/norma-ieee-754-a-pribuzni-formaty-plovouci-radove-tecky/">http://www.root.cz/clanky/norma-ieee-754-a-pribuzni-formaty-plovouci-radove-tecky/</a>
</li>

<li>Čtyři základní způsoby uložení čísel pomocí FX formátů<br />
<a href="http://www.root.cz/clanky/binarni-reprezentace-numerickych-hodnot-v-fx-formatu/">http://www.root.cz/clanky/binarni-reprezentace-numerickych-hodnot-v-fx-formatu/</a>
</li>

<li>Základní aritmetické operace prováděné v FX formátu<br />
<a href="http://www.root.cz/clanky/zakladni-aritmeticke-operace-provadene-ve-formatu-fx/">http://www.root.cz/clanky/zakladni-aritmeticke-operace-provadene-ve-formatu-fx/</a>
</li>

<li>Aritmetické operace s hodnotami uloženými ve formátu FP<br />
<a href="http://www.root.cz/clanky/aritmeticke-operace-s-hodnotami-ve-formatu-plovouci-radove-carky/">http://www.root.cz/clanky/aritmeticke-operace-s-hodnotami-ve-formatu-plovouci-radove-carky/</a>
</li>

<li>FIR Filter FAQ<br />
<a href="http://dspguru.com/dsp/faqs/fir">http://dspguru.com/dsp/faqs/fir</a>
</li>

<li>Finite impulse response (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Finite_impulse_response">http://en.wikipedia.org/wiki/Finite_impulse_response</a>
</li>

<li>DSPRelated<br />
<a href="http://www.dsprelated.com/">http://www.dsprelated.com/</a>
</li>

<li>Addressing mode (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Addressing_mode">https://en.wikipedia.org/wiki/Addressing_mode</a>
</li>

<li>Orthogonal instruction set<br />
<a href="https://en.wikipedia.org/wiki/Orthogonal_instruction_set">https://en.wikipedia.org/wiki/Orthogonal_instruction_set</a>
</li>

<li>TI 16-bit and 32-bit microcontrollers<br />
<a href="http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page">http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page</a>
</li>

<li>TMS 32010 Assembly Language Programmer's Guide (kniha na Amazonu)<br />
<a href="https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423">https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423</a>
</li>

<li>COSC2425: PC Architecture and Machine Language, PC Assembly Language<br />
<a href="http://www.austincc.edu/rblack/courses/COSC2425/index.html">http://www.austincc.edu/rblack/courses/COSC2425/index.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

