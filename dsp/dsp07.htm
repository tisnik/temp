<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Čipy DaVinci aneb úspěšná kombinace jader ARM a DSP s architekturou VLIW</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Čipy DaVinci aneb úspěšná kombinace jader ARM a DSP s architekturou VLIW</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V&nbsp;předchozím článku o architekturách počítačů a mikroprocesorů jsme si stručně popsali čipy OMAP, v&nbsp;nichž se kombinují jádra ARM s&nbsp;DSP řady TMS320C55x a TMS320C64x. Kromě těchto čipů společnost TI navrhla i čipy DaVinci, které jsou určeny především pro aplikace pracující s&nbsp;video signálem.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Čipy DaVinci aneb úspěšná kombinace jader ARM a DSP s architekturou VLIW</a></p>
<p><a href="#k02">2. Typy čipů vyvinutých v&nbsp;rámci série DaVinci</a></p>
<p><a href="#k03">3. Skupiny čipů DM36x, DM38x, DM812x, DM814x a DM816x</a></p>
<p><a href="#k04">4. Rozdíly mezi čipy ve skupině DM3xx</a></p>
<p><a href="#k05">5. Modulární struktura čipů DaVinci</a></p>
<p><a href="#k06">6. Modul s&nbsp;ARMovským jádrem a jeho paměťovým subsystémem</a></p>
<p><a href="#k07">7. ARM9</a></p>
<p><a href="#k08">8. Cortex-A8</a></p>
<p><a href="#k09">9. Modul s&nbsp;DSP jádrem a jeho paměťovým subsystémem</a></p>
<p><a href="#k10">10. Násobičky a teoretický špičkový výpočetní výkon DSP</a></p>
<p><a href="#k11">11. Video-Imaging Coprocessor (VICP) a Video-Imaging Subsystem (VPSS)</a></p>
<p><a href="#k12">12. Front-end VICP (VPFE)</a></p>
<p><a href="#k13">13. Back-end VICP (VPBE)</a></p>
<p><a href="#k14">14. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Čipy DaVinci aneb úspěšná kombinace jader ARM a DSP s architekturou VLIW</h2>

<p><a
href="https://www.root.cz/clanky/od-digitalnich-signalovych-procesoru-c5000-k-cipum-omap/">Minule</a>
jsme se seznámili s&nbsp;digitálními signálovými procesory řady C5000
(konkrétně se jednalo o čipy s&nbsp;DSP jádry TMS320C54x a TMS320C55x).
Připomeňme si, že tyto relativně jednoduché čipy určené pro typické DSP
aplikace, mezi než patří zpracování audio signálu atd., začaly být kombinovány
s&nbsp;mikroprocesorovými jádry ARM. Tímto způsobem, který je dnes
s&nbsp;úspěchem používán i mnoha dalšími firmami, vznikla série OMAP, jež se
v&nbsp;minulosti velmi často používala v&nbsp;mobilních telefonech, handheldech
a dalších podobných aplikacích. Později, kdy již výpočetní výkon jader
TMS320C55x přestal pro některé aplikace dostačovat, se v&nbsp;rámci novější
série OMAP 2 a OMAP 3 začaly používat výkonnější DSP jádra TMS320C64x+ (fixed
point) a dokonce i TMS320C674x (kombinace fixed point + floating point):</p>

<table>
<tr><th>Série OMAP</th><th>Označení</th><th>DSP</th><th>Jádro ARM</th></tr>
<tr><td>OMAP 1</td><td>OMAP171x</td><td>TMS320C55x</td><td>ARM926EJ-S</td></tr>
<tr><td>OMAP 1</td><td>OMAP162x</td><td>TMS320C55x</td><td>ARM926EJ-S</td></tr>
<tr><td>OMAP 1</td><td>OMAP5912</td><td>TMS320C55x</td><td>ARM926EJ-S</td></tr>
<tr><td>OMAP 1</td><td>OMAP161x</td><td>TMS320C55x</td><td>ARM926EJ-S</td></tr>
<tr><td>OMAP 1</td><td>OMAP1510</td><td>TMS320C55x</td><td>ARM925T</td></tr>
<tr><td>OMAP 1</td><td>OMAP5910</td><td>TMS320C55x</td><td>ARM925T</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>OMAP 2</td><td>OMAP2431</td><td>TMS320C64x</td><td>ARM1136</td></tr>
<tr><td>OMAP 2</td><td>OMAP2430</td><td>TMS320C64x</td><td>ARM1136</td></tr>
<tr><td>OMAP 2</td><td>OMAP2420</td><td>TMS320C55x</td><td>ARM1136</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>OMAP 3</td><td>OMAP3430</td><td>TMS320C64x+</td><td>Cortex-A8 + GPU</td></tr>
<tr><td>OMAP 3</td><td>OMAP3530</td><td>TMS320C64x+</td><td>Cortex-A8 + GPU</td></tr>
<tr><td>OMAP 3</td><td>OMAP3611</td><td>TMS320C64x+</td><td>Cortex-A8 + GPU</td></tr>
<tr><td>OMAP 3</td><td>OMAP3621</td><td>TMS320C64x+</td><td>Cortex-A8 + GPU</td></tr>
<tr><td>OMAP 3</td><td>OMAP3622</td><td>TMS320C64x+</td><td>Cortex-A8 + GPU</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>OMAP 4</td><td>OMAP4430</td><td>TMS320C64x+ (Tesla)</td><td>Cortex-A9 popř.&nbsp;ARMv7 + GPU</td></tr>
<tr><td>OMAP 4</td><td>OMAP4460</td><td>TMS320C64x+ (Tesla)</td><td>Cortex-A9 popř.&nbsp;ARMv7 + GPU</td></tr>
<tr><td>OMAP 4</td><td>OMAP4470</td><td>TMS320C64x+ (Tesla)</td><td>Cortex-A9 popř.&nbsp;ARMv7 + GPU</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>OMAP 5</td><td>OMAP5430</td><td>TMS320C64x+ (Tesla)</td><td>Cortex-A15 (dual core) + Cortex-M4 + GPU</td></tr>
<tr><td>OMAP 5</td><td>OMAP5432</td><td>TMS320C64x+ (Tesla)</td><td>Cortex-A15 (dual core) + Cortex-M4 + GPU</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>OMAP L-1x</td><td>OMAP-L137</td><td>TMS320C674x</td><td>ARM926EJ-S</td></tr>
<tr><td>OMAP L-1x</td><td>OMAP-L138</td><td>TMS320C674x</td><td>ARM926EJ-S</td></tr>
</table>

<p>Kromě této série, kterou nalezneme například i na <a
href="https://en.wikipedia.org/wiki/BeagleBoard">BeagleBoardu</a> či <a
href="https://en.wikipedia.org/wiki/PandaBoard">PandaBoardu</a>, však
společnost Texas Instruments v&nbsp;roce 2005 představila i novou sérii čipů
pojmenovaných DaVinci. Tyto čipy jsou určeny především pro ty aplikace,
v&nbsp;nichž se zpracovává video signál a proto je i jejich interní podoba
odlišná &ndash; obsahují ARMovská jádra ARM9 či A8 a pokud je použit DSP, jedná
se o jádro TMS320C64x (+) s&nbsp;osmi paralelně pracujícími výkonnými
jednotkami a architekturou VLIW. Navíc tyto čipy prakticky vždy obsahují i
další specializované subsystémy určené pro zpracování videa.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Typy čipů vyvinutých v&nbsp;rámci série DaVinci</h2>

<p>V&nbsp;sérii DaVinci bylo vyvinuto poměrně velké množství různých čipů,
z&nbsp;nichž některé byly běžně prodávány prakticky všem zákazníkům a jiné byly
vyvinuty na základě konkrétních požadavků jediného zákazníka (proto je o těchto
čipech dostupných méně informací). V&nbsp;následující tabulce jsou vypsány ty
základní čipy, které jsou či byly běžně dostupné. Povšimněte si zejména toho,
že název každého čipu začíná písmeny &bdquo;DM&ldquo; neboli &bdquo;Digital
Media&ldquo;. Ve skutečnosti úplné názvy těchto čipů začínají na TMS320....,
toto označení se však většinou vynechává, protože je z&nbsp;kontextu jasné, o
jaké čipy se jedná:</p>

<table>
<tr><th>Čip</th><th>Jádro ARM</th><th>Jádro DSP</th><th>OSD</th><th>VENC</th><th>HDVPSS</th></tr>
<tr><td>DM6446</td><td>ARM9  </td><td>TMS320C64x </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM6437</td><td>ARM9  </td><td>TMS320C64x </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM6441</td><td>ARM9  </td><td>TMS320C64x </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM648 </td><td>&nbsp;</td><td>TMS320C64x </td><td>&times; </td><td>&times; </td><td>&times; </td></tr>
<tr><td>DM355 </td><td>ARM9  </td><td>&nbsp;     </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM6467</td><td>ARM9  </td><td>TMS320C64x </td><td>&times; </td><td>&times; </td><td>&times; </td></tr>
<tr><td>DM335 </td><td>ARM9  </td><td>&nbsp;     </td><td>&times; </td><td>&times; </td><td>&times; </td></tr>
<tr><td>DM357 </td><td>ARM9  </td><td>&nbsp;     </td><td>&times; </td><td>&times; </td><td>&times; </td></tr>
<tr><td>DMVA2 </td><td>ARM9  </td><td>&nbsp;     </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM8107</td><td>Cortex-A8</td><td>&nbsp;     </td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>DMVA3 </td><td>Cortex-A8</td><td>&nbsp;     </td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
</table>

<p>Význam zkratek použitých v&nbsp;předchozí tabulce:</p>

<table>
<tr><th>Zkratka</th><th>Význam</th><th>Stručný popis</th></tr>
<tr><td>OSD</td><td>On-Screen Display</td><td>Modul umožňující přimíchat například menu do zpracovávaného video signálu. Podporována jsou většinou dvě samostatná okna (menu + například seznam programů atd.).</td></tr>
<tr><td>VENC</td><td>Video Encoder</td><td>Několik rychlých D/A převodníků použitých pro výstup v&nbsp;normě PAL, NTSC, S-video atd.</td></tr>
<tr><td>HDVPSS</td><td>HD Video Processing Subsystem</td><td>Jedna nebo dvě samostatné pipeline pro zpracování video signálu, včetně vstupního bloku (de-interlace, scale atd.) a bloku výstupního (HD video, demultiplexing, kompozitního výstupu atd.)</td></tr>
</table>



<p><a name="k03"></a></p>
<h2 id="k03">3. Skupiny čipů DM36x, DM38x, DM812x, DM814x a DM816x</h2>

<p>Následující řady čipů rodiny DM jsou nabízeny v&nbsp;současnosti. Povšimněte
si, že čipy jsou rozděleny do pěti skupin: DM36x, DM38x, DM812x, DM814x a
DM816x. V&nbsp;každé skupině se nachází čipy se stejným ARMovským jádrem,
stejným DSP (pokud je použit) i podobnými subsystémy.</p>

<table>
<tr><th>Čip</th><th>Jádro ARM</th><th>Jádro DSP</th><th>OSD</th><th>VENC</th><th>HDVPSS</th></tr>
<tr><td>DM365 </td><td>ARM9  </td><td>&nbsp;     </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM368 </td><td>ARM9  </td><td>&nbsp;     </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>DM369 </td><td>ARM9  </td><td>&nbsp;     </td><td>&#x2713;</td><td>&#x2713;</td><td>&times; </td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;     </td><td>&nbsp;  </td><td>&nbsp;  </td><td>&nbsp;  </td></tr>
<tr><td>DM385 </td><td>Cortex-A8</td><td>&nbsp;     </td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>DM388 </td><td>Cortex-A8</td><td>&nbsp;     </td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;     </td><td>&nbsp;  </td><td>&nbsp;  </td><td>&nbsp;  </td></tr>
<tr><td>DM8127</td><td>Cortex-A8</td><td>TMS320C64x+</td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;     </td><td>&nbsp;  </td><td>&nbsp;  </td><td>&nbsp;  </td></tr>
<tr><td>DM8147</td><td>Cortex-A8</td><td>TMS320C64x+</td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>DM8148</td><td>Cortex-A8</td><td>TMS320C64x+</td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;     </td><td>&nbsp;  </td><td>&nbsp;  </td><td>&nbsp;  </td></tr>
<tr><td>DM8165</td><td>Cortex-A8</td><td>TMS320C64x+</td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>DM8167</td><td>Cortex-A8</td><td>TMS320C64x+</td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
<tr><td>DM8168</td><td>Cortex-A8</td><td>TMS320C64x+</td><td>&times; </td><td>&times; </td><td>&#x2713;</td></tr>
</table>



<p><a name="k04"></a></p>
<h2 id="k04">4. Rozdíly mezi čipy ve skupině DM3xx</h2>

<p>Čipy patřící do jedné skupiny se od sebe liší dalšími vlastnostmi, které
jsou shrnuty v&nbsp;poslední tabulce (jedná se konkrétně o řadu DM3xx, nikoli o
řadu DM81xx):</p>

<table>
<tr><th>Čip</th><th>Jádro ARM</th><th>Frekvence ARM</th><th>Video vstupy</th><th>Kodek(y)</th><th>Max.video</th><th>Filtry</th></tr>
<tr><td>DM365</td><td>ARM9     </td><td>216-300 MHz </td><td>1&times;paralelní 8/16b</td><td>H.264 BP/MP/HP</td><td>720p30</td><td>2G Motion</td></tr>
<tr><td>DM368</td><td>ARM9     </td><td>432 MHz     </td><td>1&times;paralelní 8/16b</td><td>H.264 BP/MP/HP</td><td>1080p30</td><td>2G Motion</td></tr>
<tr><td>DM369</td><td>ARM9     </td><td>432 MHz     </td><td>1&times;paralelní 8/16b</td><td>H.264 BP/MP/HP</td><td>1080p30</td><td>2G Motion</td></tr>
<tr><td>DM385</td><td>Cortex-A8</td><td>790-1000 MHz</td><td>1&times;paralelní 8/16b nebo 1&times;CSI-2</td><td>H.264 BP/MP/HP</td><td>1080p60</td><td>3G Motion</td></tr>
<tr><td>DM388</td><td>Cortex-A8</td><td>790-1000 MHz</td><td>1&times;paralelní 8/16b nebo 1&times;CSI-2</td><td>H.264 BP/MP/HP</td><td>1080p60</td><td>4G Motion</td></tr>
</table>

<p>Poznámka: CSI znamená <i>Camera Serial Interface</i>.</p>

<p>Vidíme, že z&nbsp;hlediska zpracování video signálu skutečně mezi
jednotlivými čipy existují rozdíly, a to zejména s&nbsp;ohledem na maximální
podporované rozlišení a obnovovací frekvencí obrazu. Novější čipy navíc
podporují rozhraní <i>CSI-2</i> určené pro vstup video signálu.</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Modulární struktura čipů DaVinci</h2>

<p>Na schématu zobrazeném pod tímto odstavcem jsem se pokusil načrtnout
modulární uspořádání čipů DaVinci:</p>

<a href="https://www.root.cz/obrazek/278461/"><img src="https://i.iinfo.cz/images/138/davinci-1-prev.png" class="image-278461" alt="&#160;" width="370" height="204" /></a>
<p><i>Obrázek 1: Modulární struktura čipů DaVinci.</i></p>

<p>Všechny základní moduly jsou propojeny přes <strong>SCR</strong> neboli
<i>Switched Central Resource</i> zajišťující plynulé toky dat. Nejedná se tedy
o klasickou sběrnici, o níž by jednotlivé moduly musely &bdquo;bojovat&ldquo;,
což by ostatně odporovalo požadavku na zpracování video signálu v&nbsp;reálném
čase. K&nbsp;<strong>SCR</strong> je připojen modul s&nbsp;mikroprocesorovým
jádrem ARM a svým vlastním paměťovým subsystémem, modul s&nbsp;digitálním
signálovým procesorem a taktéž svým vlastním paměťovým subsystémem, modul pro
řízení periferních zařízení (včetně sériových sběrnic a rozhraní, PWM, časovači
a watchdogem) a v&nbsp;neposlední řadě taktéž blok nazvaný
<strong>VPSS</strong> neboli <i>Video Processing Subsystem</i>, který je
rozdělen na front end (zpracování vstupního video signálu, změna rozlišení,
deinterlace) a back end (OSD+generování výstupního video signálu). U některých
čipů je navíc přítomen i <strong>VICP</strong> neboli <i>Video-Imaging
Coprocessor</i> popř.&nbsp;i GPIO, tedy vstupně-výstupní piny, které je možné
programově ovládat.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Modul s&nbsp;ARMovským jádrem a jeho paměťovým subsystémem</h2>

<p>První modul, který si popíšeme, obsahuje jako svůj ústřední prvek ARMovské
jádro ARM9 nebo u novějších čipů Cortex-A8 (oba typy jader obsahují i MMU).
Kromě toho na tomto modulu nalezneme i instrukční cache (I-Cache) o typické
kapacitě 16 KB a datovou cache (D-Cache) o kapacitě 8 KB. U některých
modernějších čipů DaVinci jsou tyto kapacity vyšší. Dále se na tomto modulu
nachází blok RAM o velikosti 16 KB (rozdělená na dva bloky o poloviční
velikosti pro souběžný přístup k&nbsp;instrukcím i datům) a ROM/Flash o
kapacitě 8 KB, na níž se nachází bootloader. Samozřejmě se nejedná o jedinou
paměť, ke které má ARMovské jádro přístup, protože přes <i>SCR</i> jde
přistupovat k&nbsp;DRAM (většinou DDR2) popř.&nbsp;k&nbsp;externí paměti
Flash.</p>

<a href="https://www.root.cz/obrazek/278462/"><img src="https://i.iinfo.cz/images/138/davinci-2-prev.png" class="image-278462" alt="&#160;" width="370" height="204" /></a>
<p><i>Obrázek 2: Modul s&nbsp;ARMovským jádrem a jeho paměťovým
subsystémem.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. ARM9</h2>

<p>Všechny původní čipy DaVinci, včetně prvního čipu DM6446 (viz <a
href="#k02">druhou kapitolu</a>), byly (a některé dodnes jsou) vybaveny
mikroprocesorovým jádrem ze skupiny ARM9. Do této skupiny řadíme větší množství
mikroprocesorových jader, především pak jádra ARM9TDMI, ARM940T, ARM9E-S,
ARM966E-S, ARM920T, ARM922T, ARM946E-S, ARM9EJ-S, ARM926EJ-S, ARM968E-S a
ARM996HS. V&nbsp;čipech DaVinci se většinou používá jádro <i>ARM926EJ-S</i>
podporující jak původní <a
href="https://www.root.cz/clanky/instrukcni-sada-mikroprocesoru-arm/">32bitovou
RISCovou instrukční sadu</a>, tak i <a
href="https://www.root.cz/clanky/mikroprocesory-arm-a-instrukcni-sada-thumb/">16bitovou
sadu Thumb</a>, kterou lze použít při požadavku na strojový kód s&nbsp;větší
hustotou a většinou nepatrně menším výkonem. Kromě toho tato jádra obsahují i
implementaci technologie Jazelle, tedy podporu pro bajtkód virtuálního stroje
Javy (tyto čipy jsou postaveny na mikroarchitektuře ARMv5TEJ).</p>

<p>Jádra ze skupiny ARM9 jsou sice postavena na starších, ovšem velmi úspěšných
jádrech ARM7 (viz například text o čipech OMAP), ovšem interní struktura byla
v&nbsp;mnoha ohledech vylepšena. Zásadní byl přechod na modifikovanou
Harvardskou architekturu umožňující mj.&nbsp;rychlejší provádění instrukcí typu
Load &amp; Store (čtení a zápisy do datové paměti, resp.&nbsp;do datové cache
neblokovaly čtení instrukčního kódu následujících instrukcí). Taktéž se změnil
počet řezů pipeline ze tří na pět, což mimochodem znamenalo, že se při použití
stejné výrobní technologie mohla hodinová frekvence zvýšit prakticky na
dvojnásobek (instrukce ovšem na druhou stranu měly delší latenci). Díky těmto
úpravám se některé instrukce urychlily, takže původní strojový kód vygenerovaný
pro jádra ARM7 byl po přenosu na jádra ARM9 až o 30% rychlejší. Změny se
projevily i na menší spotřebě (přepočtené na počet provedených instrukcí).</p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Cortex-A8</h2>

<p>Novější čipy DaVinci již namísto jádra ARM926EJ-S používají některé jádro
Cortex-A8. Připomeňme si, že všechna nová ARMovská jádra jsou dělena do třech
skupin začínající názvem Cortex následovaným jedním z&nbsp;těchto znaků:
<u>A</u>pplication, <u>R</u>ealtime, <u>M</u>icrocontroller (název první
skupiny pravděpodobně vznikl ze snahy o její &bdquo;napasování&ldquo; na
zkratku ARM):</p>

<table>
<tr><th>#</th><th>Architektura</th><th>Adresová/datová sběrnice</th><th>Jádro</th><th>Poznámka/profil (u Cortex)</th></tr>
<tr><td>1</td><td>ARMv6-M </td><td>32 bitů   </td><td>Cortex-M0, Cortex-M0+, Cortex-M1</td><td>mikrořadiče (M v&nbsp;názvu)</td></tr>
<tr><td>2</td><td>ARMv7-M </td><td>32 bitů   </td><td>Cortex-M3</td><td>mikrořadiče (poznáme podle M v&nbsp;názvu)</td></tr>
<tr><td>3</td><td>ARMv7E-M</td><td>32 bitů   </td><td>Cortex-M4, Cortex-M7</td><td>mikrořadiče (M v&nbsp;názvu)</td></tr>
<tr><td>4</td><td>ARMv7-R </td><td>32 bitů   </td><td>Cortex-R4, Cortex-R5, Cortex-R7</td><td>realtime aplikace (R v&nbsp;názvu)</td></tr>
<tr><td>5</td><td>ARMv7-A </td><td>32 bitů   </td><td>Cortex-A5, Cortex-A7, Cortex-A8, Cortex-A9, Cortex-A12, Cortex-A15, Cortex-A17</td><td>smartphony atd.</td></tr>
<tr><td>6</td><td>ARMv8-A </td><td>32/64 bitů</td><td>Cortex-A35, Cortex-A53, A57, A72 a A73</td><td>smartphony atd.</td></tr>
</table>

<p>Oproti ARM9 došlo u jader Cortex-A8 k&nbsp;mnoha interním úpravám i
k&nbsp;rozšíření instrukční sady. Mezi interní úpravy a vylepšení patří použití
pipeline se třinácti řezy pro celočíselné operace a pipeline s&nbsp;deseti řezy
pro SIMD operace (NEON). Taktéž je použita superskalární architektura
umožňující paralelní spuštění dvou instrukcí (díky pipeline a superskalární
architektuře tedy Cortex-A8 v&nbsp;jeden okamžik zpracovává až dvě desítky
instrukcí v&nbsp;různém stavu rozpracování). Vzhledem k&nbsp;tomu, že pipeline
je velmi dlouhá, má velký vliv na celkový výpočetní výkon prediktor skoků,
který byl taktéž vylepšen &ndash; udává se, že přesnost jeho odhadu je větší
než 95%.</p>

<p>Instrukční sada Cortex-A8 obsahuje jak již zmíněné SIMD instrukce NEON, tak
i VFPv3, tedy instrukce matematického koprocesoru (viz též <a
href="https://www.root.cz/clanky/mikroprocesory-arm-a-architektura-vfp-vector-floating-point/">Mikroprocesory
ARM a architektura VFP (Vector Floating Poin</a>). Kromě toho je podporován i
<a
href="https://www.root.cz/clanky/instrukcni-sada-thumb-2-u-mikroprocesoru-arm/">instrukční
formát Thumb-2</a> s&nbsp;instrukcemi proměnné délky (16bitů či 32bitů) a
především pak prefixem <strong>IT</strong>, díky němuž je možné do velké míry
omezit počet podmíněných skoků.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Modul s&nbsp;DSP jádrem a jeho paměťovým subsystémem</h2>

<p>Modul, který obsahuje digitální signálový procesor řady TMS320C64x či
TMS320C64x+, se částečně podobá modulu s&nbsp;ARMovským jádrem. I zde kromě
vlastního CPU nalezneme cache, zde je ovšem rozdělena na dvě úrovně. Cache
první úrovně (L1-cache) obsahuje dva bloky &ndash; blok pro instrukce
s&nbsp;kapacitou až 32 KB a blok pro data s&nbsp;kapacitou 80 KB. Cache druhé
úrovně (L2-cache) je unifikovaná a její kapacita je typicky 64 KB. Povšimněte
si, že v&nbsp;tomto modulu nenalezneme ROM, protože se o inicializaci DSP
postará ARMovské jádro se svým vlastním bootloaderem (pokud se tyto čipy
používají například v&nbsp;Linuxu, běží Linux na ARMu a DSP je ovládáno přes
knihovnu).</p>

<a href="https://www.root.cz/obrazek/278463/"><img src="https://i.iinfo.cz/images/138/davinci-3-prev.png" class="image-278463" alt="&#160;" width="370" height="204" /></a>
<p><i>Obrázek 3: Modul s&nbsp;DSP jádrem a jeho paměťovým subsystémem.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Násobičky a teoretický špičkový výpočetní výkon DSP</h2>

<p>Samotný digitální signálový procesor TMS320C64x a TMS320C64x+ vznikl
z&nbsp;řady TMS320C62x, kterou jsme si již popsali. Je taktéž založen na
architektuře VLIW s&nbsp;instrukčními slovy, u nichž lze takzvanými
<i>p</i>-bity určit ty instrukce, které se budou provádět paralelně. TMS320C64x
obsahuje osm nezávisle pracujících jednotek a jeho nejdůležitější částí jsou
čtyři 16bitové násobičky spojené se sčítačkami (takže mohou provádět operace
MAC &ndash; <i>Multiply Accumulate</i>). Při paralelní práci dokážou tyto
jednotky provést 3240 milionů MAC operací za sekundu při použití hodinové
frekvence 810 MHz (v&nbsp;každém cyklu dokáže násobička dokončit jeden
výpočet). Každou 16bitovou násobičku lze v&nbsp;případě potřeby použít ve
funkci dvou osmibitových násobiček. V&nbsp;tomto případě dosahuje maximální
počet operací u optimálně napsaných algoritmů 6480 MAC za sekundu (opět při
frekvenci 810 MHz).</p>

<p>Poznámka: u mnoha algoritmů pro zpracování videa se setkáme právě
s&nbsp;použitím osmibitových vzorků, takže se rozdělení každé 16bitové
násobičky na dvě násobičky osmibitové využívá.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Video-Imaging Coprocessor (VICP) a Video-Imaging Subsystem (VPSS)</h2>

<p>Čipy DaVinci se od běžných kombinací ARM CPU+DSP odlišují především tím, že
obsahují blok <strong>VICP</strong> neboli <i>Video-Imaging Coprocessor</i> a
<strong>VPSS</strong> neboli <i>Video-Imaging Subsystem</i>.
<strong>VPSS</strong> je rozdělen na dvě části nazvané <strong>VPFE</strong> a
<strong>VPBE</strong>, kde první zkratka znamená <i>Video Processing
Front-End</i> a zkratka druhá <i>Video Processing Back-End</i> (IT firmy milují
třípísmenné a čtyřpísmenné zkratky). Důvod, proč je VICP rozdělený na dvě části
je pochopitelný, protože celé zpracování videa má typicky tři části:</p>

<ol>

<li>Čtení video signálu, například přímo z&nbsp;CCD či CMOS prvků. Během čtení
se většinou provádí i transformace barev, například aplikace <a
href="https://en.wikipedia.org/wiki/Bayer_filter">Bayerova filtru</a>. Možné
jsou i další operace, typicky změna rozlišení, deinterlace atd. Tyto operace se
provádí ve front-endu.</li>

<li>Zpracování videa. Pro tyto účely mají vývojáři k&nbsp;dispozici výkonné DSP
a univerzální ARM CPU. V&nbsp;případě kodeků lze využít <strong>VICP</strong>,
takže není nutné tyto náročné algoritmy implementovat softwarově (MPEG-4, H.264
atd.)</li>

<li>Výstup video signálu popř.&nbsp;automatické přidání dalších informací do
video signálu (menu, titulky, ...). Tyto operace se provádí
v&nbsp;back-endu.</li>

</ol>

<a href="https://www.root.cz/obrazek/278464/"><img src="https://i.iinfo.cz/images/138/davinci-4-prev.png" class="image-278464" alt="&#160;" width="370" height="203" /></a>
<p><i>Obrázek 4: Video-Imaging Coprocessor a Video-Imaging Subsystem rozdělený
na front end a back end.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Front-end VICP (VPFE)</h2>

<p>Modul <strong>VPFE</strong> se v&nbsp;první řadě stará o čtení video signálu
z&nbsp;CCD či CMOS čipů, což kromě generování příslušných řídicích signálů
většinou znamená i transformaci barev, aplikaci již zmíněného Bayerova filtru,
změnu rozlišení apod. Tento modul navíc dokáže v&nbsp;reálném čase vypočítat
histogram, provést vyvážení bílé barvy (white balance), vygenerovat náhled na
obrázek ve formátu vhodném pro zobrazení na LCD apod. Výsledkem práce tohoto
modulu je většinou kontinuální video signál ve zvoleném barvovém prostoru a
formátu (RGB, YUV...), který může být zpracován dalšími moduly, uložen na
externí médium, poslán přes EMAC (Ethernet Media Access Controller) na zvolené
zařízení atd.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Back-end VICP (VPBE)</h2>

<p>Jakmile je video signál zpracován, je nutné ho nějakým způsobem zobrazit
resp.&nbsp;přesněji řečeno poslat na zvolené zobrazovací zařízení (monitor...).
K&nbsp;tomuto účelu se používá modul <strong>VPBE</strong> vybavený čtveřicí
rychlých D/A převodníků (frekvence vzorků vstupujících do těchto převodníků
většinou překračuje 54 MHz; ostatně připomeňme si, že některé čipy DaVinci
dokážou pracovat s&nbsp;videem 1080p60). Vstupy D/A převodníků jsou
konfigurovatelné, takže je lze využít pro generování PAL či NTSC signálu
(včetně synců), S-Videa, kompozitního videa, analogového RGB atd. Kromě toho
tento modul obsahuje i digitální výstup s&nbsp;24bitovým RGB signálem, BT.656
atd. (možnosti jednotlivých čipů DaVinci se v&nbsp;tomto ohledu mohou lišit).
Navíc <strong>VPBE</strong> umožňuje do video signálu přimíchat další dvě
nezávislá &bdquo;okna&ldquo;, v&nbsp;nichž může být zobrazeno menu, titulky,
další informace (u kamery různé ikonky, zaměřovací kříž, histogram ...).</p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Odkazy na Internetu</h2>

<ol>

<li>DaVinci processor family<br />
<a href="http://www.ti.com/general/docs/datasheetdiagram.tsp?genericPartNumber=TMS320DM365&diagramId=64193">http://www.ti.com/general/docs/datasheetdiagram.tsp?genericPartNumber=TMS320DM365&diagramId=64193</a>
</li>

<li>Texas Instruments DaVinci<br />
<a href="https://en.wikipedia.org/wiki/Texas_Instruments_DaVinci">https://en.wikipedia.org/wiki/Texas_Instruments_DaVinci</a>
</li>

<li>TMS320DM6446 (DaVinci)<br />
<a href="http://www.ti.com/product/tms320dm6446">http://www.ti.com/product/tms320dm6446</a>
</li>

<li>Digital Media Video Processors (TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/media_processors/davinci/products.page#">http://www.ti.com/lsds/ti/processors/dsp/media_processors/davinci/products.page#</a>
</li>

<li>TI Wiki<br />
<a href="http://processors.wiki.ti.com/index.php/Main_Page">http://processors.wiki.ti.com/index.php/Main_Page</a>
</li>

<li>C5000 ultra-low-power DSP<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/c5000_dsp/overview.page">http://www.ti.com/lsds/ti/processors/dsp/c5000_dsp/overview.page</a>
</li>

<li>OMAP (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/OMAP">https://en.wikipedia.org/wiki/OMAP</a>
</li>

<li>OMAP - TI Wiki<br />
<a href="http://processors.wiki.ti.com/index.php/OMAP">http://processors.wiki.ti.com/index.php/OMAP</a>
</li>

<li>Why OMAP can't compete in smartphones<br />
<a href="http://www.eetimes.com/author.asp?section_id=40&doc_id=1286602">http://www.eetimes.com/author.asp?section_id=40&doc_id=1286602</a>
</li>

<li>Applications Processors – The Heart of the Smartphone<br />
<a href="http://www.engineering.com/ElectronicsDesign/ElectronicsDesignArticles/ArticleID/5791/Applications-Processors-The-Heart-of-the-Smartphone.aspx">http://www.engineering.com/ElectronicsDesign/ElectronicsDesignArticles/ArticleID/5791/Applications-Processors-The-Heart-of-the-Smartphone.aspx</a>
</li>

<li>TI cuts 1,700 jobs in OMAP shift<br />
<a href="http://www.eetimes.com/document.asp?doc_id=1262782">http://www.eetimes.com/document.asp?doc_id=1262782</a>
</li>

<li>VLIW: Very Long Instruction Word: Texas Instruments TMS320C6x<br />
<a href="http://www.ecs.umass.edu/ece/koren/architecture/VLIW/2/ti1.html">http://www.ecs.umass.edu/ece/koren/architecture/VLIW/2/ti1.html</a>
</li>

<li>An Introduction To Very-Long Instruction Word (VLIW) Computer Architecture<br />
Philips Semiconductors
</li>

<li>VLIW Architectures for DSP: A Two-Part Lecture (PDF, slajdy)<br />
<a href="http://www.bdti.com/MyBDTI/pubs/vliw_icspat99.pdf">http://www.bdti.com/MyBDTI/pubs/vliw_icspat99.pdf</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Very_long_instruction_word">https://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>A VLIW Approach to Architecture, Compilers and Tools<br />
<a href="http://www.vliw.org/book/">http://www.vliw.org/book/</a>
</li>

<li>VEX Toolchain (VEX = VLIW Example)<br />
<a href="http://www.hpl.hp.com/downloads/vex/">http://www.hpl.hp.com/downloads/vex/</a>
</li>

<li>Elbrus (computer)<br />
<a href="https://en.wikipedia.org/wiki/Elbrus_%28computer%29">https://en.wikipedia.org/wiki/Elbrus_%28computer%29</a>
</li>

<li>Super Harvard Architecture Single-Chip Computer<br />
<a href="https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer">https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer</a>
</li>

<li>Digital Signal Processors (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/overview.page">http://www.ti.com/lsds/ti/processors/dsp/overview.page</a>
</li>

<li>C674x Low Power DSP (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page">http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page</a>
</li>

<li>TMS320C30 (stránky TI)<br />
<a href="http://www.ti.com/product/tms320c30">http://www.ti.com/product/tms320c30</a>
</li>

<li>TMS320C6722B<br />
<a href="http://www.ti.com/product/tms320c6722b/description">http://www.ti.com/product/tms320c6722b/description</a>
</li>

<li>Introduction to DSP<br />
<a href="http://www.ti.com/lit/wp/spry281/spry281.pdf">http://www.ti.com/lit/wp/spry281/spry281.pdf</a>
</li>

<li>The Evolution of TMS (Family of DSPs)<br />
<a href="http://www.slideshare.net/moto_modx/theevo1">http://www.slideshare.net/moto_modx/theevo1</a>
</li>

<li>Datasheet k TMS32010<br />
<a href="http://www.datasheetarchive.com/dlmain/49326c32a52050140abffe6f0ac4894aa09889/M/TMS32010">http://www.datasheetarchive.com/dlmain/49326c32a52050140abffe6f0ac4894aa09889/M/TMS32010</a>
</li>

<li>1979: Single Chip Digital Signal Processor Introduced<br />
<a href="http://www.computerhistory.org/siliconengine/single-chip-digital-signal-processor-introduced/">http://www.computerhistory.org/siliconengine/single-chip-digital-signal-processor-introduced/</a>
</li>

<li>The TMS32010. The DSP chip that changed the destiny of a semiconductor giant<br />
<a href="http://www.tihaa.org/historian/TMS32010-12.pdf">http://www.tihaa.org/historian/TMS32010-12.pdf</a>
</li>

<li>Texas Instruments TMS320 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Texas_Instruments_TMS320">https://en.wikipedia.org/wiki/Texas_Instruments_TMS320</a>
</li>

<li>Great Microprocessors of the Past and Present: Part IX: Signetics 8x300, Early cambrian DSP ancestor (1978):<br />
<a href="http://www.cpushack.com/CPU/cpu2.html#Sec2Part9">http://www.cpushack.com/CPU/cpu2.html#Sec2Part9</a>
</li>

<li>Great Microprocessors of the Past and Present (V 13.4.0)<br />
<a href="http://jbayko.sasktelwebsite.net/cpu.html">http://jbayko.sasktelwebsite.net/cpu.html</a>
</li>

<li>Introduction to DSP - DSP processors:<br />
<a href="http://www.bores.com/courses/intro/chips/index.htm">http://www.bores.com/courses/intro/chips/index.htm</a>
</li>

<li>The Scientist and Engineer's Guide to Digital Signal Processing:<br />
<a href="http://www.dspguide.com/">http://www.dspguide.com/</a>
</li>

<li>Digital signal processor (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Digital_signal_processor">http://en.wikipedia.org/wiki/Digital_signal_processor</a>
</li>

<li>Digitální signálový procesor (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Digitální_signálový_procesor">http://cs.wikipedia.org/wiki/Digitální_signálový_procesor</a>
</li>

<li>Digital Signal Processing FAQs<br />
<a href="http://dspguru.com/dsp/faqs">http://dspguru.com/dsp/faqs</a>
</li>

<li>Reprezentace numerických hodnot ve formátech FX a FP<br />
<a href="http://www.root.cz/clanky/fixed-point-arithmetic/">http://www.root.cz/clanky/fixed-point-arithmetic/</a>
</li>

<li>IEEE 754 a její příbuzenstvo: FP formáty<br />
<a href="http://www.root.cz/clanky/norma-ieee-754-a-pribuzni-formaty-plovouci-radove-tecky/">http://www.root.cz/clanky/norma-ieee-754-a-pribuzni-formaty-plovouci-radove-tecky/</a>
</li>

<li>Čtyři základní způsoby uložení čísel pomocí FX formátů<br />
<a href="http://www.root.cz/clanky/binarni-reprezentace-numerickych-hodnot-v-fx-formatu/">http://www.root.cz/clanky/binarni-reprezentace-numerickych-hodnot-v-fx-formatu/</a>
</li>

<li>Základní aritmetické operace prováděné v FX formátu<br />
<a href="http://www.root.cz/clanky/zakladni-aritmeticke-operace-provadene-ve-formatu-fx/">http://www.root.cz/clanky/zakladni-aritmeticke-operace-provadene-ve-formatu-fx/</a>
</li>

<li>Aritmetické operace s hodnotami uloženými ve formátu FP<br />
<a href="http://www.root.cz/clanky/aritmeticke-operace-s-hodnotami-ve-formatu-plovouci-radove-carky/">http://www.root.cz/clanky/aritmeticke-operace-s-hodnotami-ve-formatu-plovouci-radove-carky/</a>
</li>

<li>FIR Filter FAQ<br />
<a href="http://dspguru.com/dsp/faqs/fir">http://dspguru.com/dsp/faqs/fir</a>
</li>

<li>Finite impulse response (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Finite_impulse_response">http://en.wikipedia.org/wiki/Finite_impulse_response</a>
</li>

<li>DSPRelated<br />
<a href="http://www.dsprelated.com/">http://www.dsprelated.com/</a>
</li>

<li>Addressing mode (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Addressing_mode">https://en.wikipedia.org/wiki/Addressing_mode</a>
</li>

<li>Orthogonal instruction set<br />
<a href="https://en.wikipedia.org/wiki/Orthogonal_instruction_set">https://en.wikipedia.org/wiki/Orthogonal_instruction_set</a>
</li>

<li>TI 16-bit and 32-bit microcontrollers<br />
<a href="http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page">http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page</a>
</li>

<li>TMS 32010 Assembly Language Programmer's Guide (kniha na Amazonu)<br />
<a href="https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423">https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423</a>
</li>

<li>COSC2425: PC Architecture and Machine Language, PC Assembly Language<br />
<a href="http://www.austincc.edu/rblack/courses/COSC2425/index.html">http://www.austincc.edu/rblack/courses/COSC2425/index.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

