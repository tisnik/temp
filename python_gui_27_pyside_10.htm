<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Tvorba GUI v Pythonu s využitím frameworku PySide: </title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Tvorba GUI v Pythonu s využitím frameworku PySide: </h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Tvorba GUI v Pythonu s využitím frameworku PySide: </a></p>
<p><a href="#k02">*** 2. Určení oblasti, která se má překreslit</a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">*** 18. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Tvorba GUI v Pythonu s využitím frameworku PySide: </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Určení oblasti, která se má překreslit</h2>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import sys
import math
&nbsp;
<i># import "jádra" frameworku Qt i modulu pro GUI</i>
from PySide import QtCore
from PySide import QtGui
&nbsp;
&nbsp;
<i># funkce pro vykreslení obdélníku zadanou barvou a se specifikovaným štětcem</i>
def <strong>drawRectangleUsingBrush</strong>(qPainter, color, x, y, width, height, brush_style, pen_width=0):
    <i># vytvoření pera a nastavení barvy kreslení</i>
    pen = QtGui.QPen(QtGui.QColor(*color))
&nbsp;
    <i># změna šířky pera</i>
    pen.setWidth(pen_width)
    qPainter.setPen(pen)
&nbsp;
    <i># změna tvaru štětce</i>
    brush = QtGui.QBrush(QtGui.QColor(*color))
    brush.setStyle(brush_style)
    qPainter.setBrush(brush)
&nbsp;
    <i># vykreslení obdélníku</i>
    qPainter.drawRect(x, y, width, height)
&nbsp;
&nbsp;
<i># nový widget bude odvozen od obecného hlavního okna</i>
class <strong>MainWindow</strong>(QtGui.QMainWindow):
&nbsp;
    <i># rozměry rastrového obrázku</i>
    IMAGE_WIDTH = 440
    IMAGE_HEIGHT = 140
&nbsp;
    def <strong>__init__</strong>(self):
        <i># zavoláme konstruktor předka</i>
        super(MainWindow, self).__init__()
&nbsp;
        self.prepareImage()
        <i># konfigurace GUI + přidání widgetu do okna</i>
        self.prepareGUI()
&nbsp;
    def <strong>prepareImage</strong>(self):
        <i># vytvoření instance třídy QImage</i>
        self.image = QtGui.QImage(MainWindow.IMAGE_WIDTH,
                                  MainWindow.IMAGE_HEIGHT,
                                  QtGui.QImage.Format_RGB32)
&nbsp;
        <i># vytvoření objektu typu QPainter s předáním</i>
        <i># reference na "pokreslovaný" objekt</i>
        qp = QtGui.QPainter(self.image)
&nbsp;
        <i># konstanty s n-ticemi představujícími základní barvy</i>
        BLACK = (0, 0, 0)
        BLUE = (0, 0, 255)
        CYAN = (0, 255, 255)
        GREEN = (0, 255, 0)
        YELLOW = (255, 255, 0)
        RED = (255, 0, 0)
        MAGENTA = (255, 0, 255)
        WHITE = (255, 255, 255)
&nbsp;
        <i># nastavení oblasti omezující vykreslování</i>
        region = QtGui.QRegion(QtCore.QRect(20, 20, MainWindow.IMAGE_WIDTH-40, MainWindow.IMAGE_HEIGHT-50))
        qp.setClipRegion(region)
&nbsp;
        <i># vykreslení obdélníků různým stylem</i>
        drawRectangleUsingBrush(qp, YELLOW, 10, 10, 50, 50, QtCore.Qt.SolidPattern)
        drawRectangleUsingBrush(qp, YELLOW, 70, 10, 50, 50, QtCore.Qt.HorPattern)
        drawRectangleUsingBrush(qp, YELLOW, 130, 10, 50, 50, QtCore.Qt.VerPattern)
        drawRectangleUsingBrush(qp, YELLOW, 190, 10, 50, 50, QtCore.Qt.CrossPattern)
        drawRectangleUsingBrush(qp, YELLOW, 250, 10, 50, 50, QtCore.Qt.BDiagPattern)
        drawRectangleUsingBrush(qp, YELLOW, 310, 10, 50, 50, QtCore.Qt.FDiagPattern)
        drawRectangleUsingBrush(qp, YELLOW, 370, 10, 50, 50, QtCore.Qt.DiagCrossPattern)
&nbsp;
        drawRectangleUsingBrush(qp, WHITE, 10, 70, 50, 50, QtCore.Qt.Dense1Pattern)
        drawRectangleUsingBrush(qp, WHITE, 70, 70, 50, 50, QtCore.Qt.Dense2Pattern)
        drawRectangleUsingBrush(qp, WHITE, 130, 70, 50, 50, QtCore.Qt.Dense3Pattern)
        drawRectangleUsingBrush(qp, WHITE, 190, 70, 50, 50, QtCore.Qt.Dense4Pattern)
        drawRectangleUsingBrush(qp, WHITE, 250, 70, 50, 50, QtCore.Qt.Dense5Pattern)
        drawRectangleUsingBrush(qp, WHITE, 310, 70, 50, 50, QtCore.Qt.Dense6Pattern)
        drawRectangleUsingBrush(qp, WHITE, 370, 70, 50, 50, QtCore.Qt.Dense7Pattern)
&nbsp;
        <i># vytvoření instance třídy QPixmap z objektu QImage</i>
        self.pixmap = QtGui.QPixmap.fromImage(self.image)
&nbsp;
    def <strong>prepareGUI</strong>(self):
        <i># velikost okna nezadávejte ručně - špatně se počítá kvůli toolbaru</i>
        <i># self.resize(256, 300)</i>
        self.setWindowTitle('QPainter')
&nbsp;
        <i># tlačítko Quit</i>
        quitAction = QtGui.QAction(QtGui.QIcon('icons/application-exit.png'),
                                   '&amp;Quit', self)
        quitAction.triggered.connect(self.close)
        quitAction.setStatusTip('Quit the application')
        quitAction.setShortcut('Ctrl+Q')
&nbsp;
        <i># nástrojový pruh</i>
        self.toolbar = self.addToolBar('title')
        self.toolbar.setMovable(False)
&nbsp;
        <i># přidání tlačítka na nástrojový pruh</i>
        self.toolbar.addAction(quitAction)
&nbsp;
        <i># doprostřed okna přidáme návěští s rastrovým obrázkem</i>
        self.addLabelWithPixmap()
&nbsp;
        <i># zobrazení hlavního okna</i>
        self.show()
&nbsp;
    def <strong>addLabelWithPixmap</strong>(self):
        <i># vytvoření návěští</i>
        label = QtGui.QLabel("test")
        <i># přiřazení rastrového obrázku k návěští</i>
        label.setPixmap(self.pixmap)
        <i># vložení návěští do hlavního okna</i>
        self.setCentralWidget(label)
&nbsp;
    def <strong>run</strong>(self, app):
        <i># zobrazení okna na obrazovce</i>
        self.show()
        <i># vstup do smyčky událostí (event loop)</i>
        app.exec_()
&nbsp;
&nbsp;
def <strong>main</strong>():
    app = QtGui.QApplication(sys.argv)
    MainWindow().run(app)
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import sys
import math
&nbsp;
<i># import "jádra" frameworku Qt i modulu pro GUI</i>
from PySide import QtCore
from PySide import QtGui
&nbsp;
&nbsp;
<i># vytvoření štětce z gradientního přechodu</i>
def <strong>createBrushFromGradient</strong>(color1, color2):
    gradient = QtGui.QLinearGradient(100, 100, 100, 160)
    gradient.setColorAt(0.2, QtGui.QColor(*color1))
    gradient.setColorAt(1.0, QtGui.QColor(*color2))
    gradient.setSpread(QtGui.QGradient.Spread.ReflectSpread)
    return QtGui.QBrush(gradient)
&nbsp;
&nbsp;
<i># funkce pro vykreslení obdélníku zadanou barvou a se specifikovaným štětcem</i>
def <strong>drawRectangleUsingCustomBrush</strong>(qPainter, color, x, y, width, height, brush, pen_width=0):
    <i># vytvoření pera a nastavení barvy kreslení</i>
    pen = QtGui.QPen(QtGui.QColor(*color))
&nbsp;
    <i># změna šířky pera</i>
    pen.setWidth(pen_width)
    qPainter.setPen(pen)
&nbsp;
    <i># změna tvaru štětce</i>
    qPainter.setBrush(brush)
&nbsp;
    <i># vykreslení obdélníku</i>
    qPainter.drawRect(x, y, width, height)
&nbsp;
&nbsp;
<i># nový widget bude odvozen od obecného hlavního okna</i>
class <strong>MainWindow</strong>(QtGui.QMainWindow):
&nbsp;
    <i># rozměry rastrového obrázku</i>
    IMAGE_WIDTH = 340
    IMAGE_HEIGHT = 250
&nbsp;
    def <strong>__init__</strong>(self):
        <i># zavoláme konstruktor předka</i>
        super(MainWindow, self).__init__()
&nbsp;
        self.prepareImage()
        <i># konfigurace GUI + přidání widgetu do okna</i>
        self.prepareGUI()
&nbsp;
    def <strong>prepareImage</strong>(self):
        <i># vytvoření instance třídy QImage</i>
        self.image = QtGui.QImage(MainWindow.IMAGE_WIDTH,
                                  MainWindow.IMAGE_HEIGHT,
                                  QtGui.QImage.Format_RGB32)
&nbsp;
        <i># vymazání obrázku</i>
        self.image.fill(0)
&nbsp;
        <i># vytvoření objektu typu QPainter s předáním</i>
        <i># reference na "pokreslovaný" objekt</i>
        qp = QtGui.QPainter(self.image)
&nbsp;
        <i># konstanty s n-ticemi představujícími základní barvy</i>
        BLACK = (0, 0, 0)
        BLUE = (0, 0, 255)
        CYAN = (0, 255, 255)
        GREEN = (0, 255, 0)
        YELLOW = (255, 255, 0)
        RED = (255, 0, 0)
        MAGENTA = (255, 0, 255)
        WHITE = (255, 255, 255)
&nbsp;
        <i># bitmapa tvořící masku regionu</i>
        bitmap = QtGui.QBitmap("bitmaps/clip.xbm")
        region = QtGui.QRegion(bitmap)
&nbsp;
        <i># nastavení oblasti vykreslování</i>
        qp.setClipRegion(region)
&nbsp;
        <i># výplň obdélníku</i>
        brush = createBrushFromGradient(YELLOW, BLACK)
&nbsp;
        <i># vykreslení obdélníku</i>
        drawRectangleUsingCustomBrush(qp, BLACK, 0, 0, 340, 240, brush)
&nbsp;
        <i># vytvoření instance třídy QPixmap z objektu QImage</i>
        self.pixmap = QtGui.QPixmap.fromImage(self.image)
&nbsp;
    def <strong>prepareGUI</strong>(self):
        <i># velikost okna nezadávejte ručně - špatně se počítá kvůli toolbaru</i>
        <i># self.resize(256, 300)</i>
        self.setWindowTitle('QPainter')
&nbsp;
        <i># tlačítko Quit</i>
        quitAction = QtGui.QAction(QtGui.QIcon('icons/application-exit.png'),
                                   '&amp;Quit', self)
        quitAction.triggered.connect(self.close)
        quitAction.setStatusTip('Quit the application')
        quitAction.setShortcut('Ctrl+Q')
&nbsp;
        <i># nástrojový pruh</i>
        self.toolbar = self.addToolBar('title')
        self.toolbar.setMovable(False)
&nbsp;
        <i># přidání tlačítka na nástrojový pruh</i>
        self.toolbar.addAction(quitAction)
&nbsp;
        <i># doprostřed okna přidáme návěští s rastrovým obrázkem</i>
        self.addLabelWithPixmap()
&nbsp;
        <i># zobrazení hlavního okna</i>
        self.show()
&nbsp;
    def <strong>addLabelWithPixmap</strong>(self):
        <i># vytvoření návěští</i>
        label = QtGui.QLabel("test")
        <i># přiřazení rastrového obrázku k návěští</i>
        label.setPixmap(self.pixmap)
        <i># vložení návěští do hlavního okna</i>
        self.setCentralWidget(label)
&nbsp;
    def <strong>run</strong>(self, app):
        <i># zobrazení okna na obrazovce</i>
        self.show()
        <i># vstup do smyčky událostí (event loop)</i>
        app.exec_()
&nbsp;
&nbsp;
def <strong>main</strong>():
    app = QtGui.QApplication(sys.argv)
    MainWindow().run(app)
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import sys
import math
&nbsp;
<i># import "jádra" frameworku Qt i modulu pro GUI</i>
from PySide import QtCore
from PySide import QtGui
&nbsp;
&nbsp;
<i># vytvoření štětce z gradientního přechodu</i>
def <strong>createBrushFromGradient</strong>(color1, color2):
    gradient = QtGui.QLinearGradient(100, 100, 100, 160)
    gradient.setColorAt(0.2, QtGui.QColor(*color1))
    gradient.setColorAt(1.0, QtGui.QColor(*color2))
    gradient.setSpread(QtGui.QGradient.Spread.ReflectSpread)
    return QtGui.QBrush(gradient)
&nbsp;
&nbsp;
<i># funkce pro vykreslení obdélníku zadanou barvou a se specifikovaným štětcem</i>
def <strong>drawRectangleUsingCustomBrush</strong>(qPainter, color, x, y, width, height, brush, pen_width=0):
    <i># vytvoření pera a nastavení barvy kreslení</i>
    pen = QtGui.QPen(QtGui.QColor(*color))
&nbsp;
    <i># změna šířky pera</i>
    pen.setWidth(pen_width)
    qPainter.setPen(pen)
&nbsp;
    <i># změna tvaru štětce</i>
    qPainter.setBrush(brush)
&nbsp;
    <i># vykreslení obdélníku</i>
    qPainter.drawRect(x, y, width, height)
&nbsp;
&nbsp;
<i># nový widget bude odvozen od obecného hlavního okna</i>
class <strong>MainWindow</strong>(QtGui.QMainWindow):
&nbsp;
    <i># rozměry rastrového obrázku</i>
    IMAGE_WIDTH = 340
    IMAGE_HEIGHT = 250
&nbsp;
    def <strong>__init__</strong>(self):
        <i># zavoláme konstruktor předka</i>
        super(MainWindow, self).__init__()
&nbsp;
        self.prepareImage()
        <i># konfigurace GUI + přidání widgetu do okna</i>
        self.prepareGUI()
&nbsp;
    def <strong>prepareImage</strong>(self):
        <i># vytvoření instance třídy QImage</i>
        self.image = QtGui.QImage(MainWindow.IMAGE_WIDTH,
                                  MainWindow.IMAGE_HEIGHT,
                                  QtGui.QImage.Format_RGB32)
&nbsp;
        <i># vymazání obrázku</i>
        self.image.fill(0)
&nbsp;
        <i># vytvoření objektu typu QPainter s předáním</i>
        <i># reference na "pokreslovaný" objekt</i>
        qp = QtGui.QPainter(self.image)
&nbsp;
        <i># konstanty s n-ticemi představujícími základní barvy</i>
        BLACK = (0, 0, 0)
        BLUE = (0, 0, 255)
        CYAN = (0, 255, 255)
        GREEN = (0, 255, 0)
        YELLOW = (255, 255, 0)
        RED = (255, 0, 0)
        MAGENTA = (255, 0, 255)
        WHITE = (255, 255, 255)
&nbsp;
        <i># bitmapa tvořící masku regionu</i>
        bitmap = QtGui.QBitmap("bitmaps/clip.xbm")
&nbsp;
        <i># vytvoření dvou regionů</i>
        region1 = QtGui.QRegion(QtCore.QRect(0, 0, 110, MainWindow.IMAGE_HEIGHT))
        region2 = QtGui.QRegion(bitmap)
&nbsp;
        <i># nastavení oblasti vykreslování s využitím operace XOR</i>
        qp.setClipRegion(region1 ^ region2)
&nbsp;
        <i># výplň obdélníku</i>
        brush = createBrushFromGradient(YELLOW, BLACK)
&nbsp;
        <i># vykreslení obdélníku</i>
        drawRectangleUsingCustomBrush(qp, BLACK, 0, 0, MainWindow.IMAGE_WIDTH, MainWindow.IMAGE_HEIGHT, brush)
&nbsp;
        <i># vytvoření instance třídy QPixmap z objektu QImage</i>
        self.pixmap = QtGui.QPixmap.fromImage(self.image)
&nbsp;
    def <strong>prepareGUI</strong>(self):
        <i># velikost okna nezadávejte ručně - špatně se počítá kvůli toolbaru</i>
        <i># self.resize(256, 300)</i>
        self.setWindowTitle('QPainter')
&nbsp;
        <i># tlačítko Quit</i>
        quitAction = QtGui.QAction(QtGui.QIcon('icons/application-exit.png'),
                                   '&amp;Quit', self)
        quitAction.triggered.connect(self.close)
        quitAction.setStatusTip('Quit the application')
        quitAction.setShortcut('Ctrl+Q')
&nbsp;
        <i># nástrojový pruh</i>
        self.toolbar = self.addToolBar('title')
        self.toolbar.setMovable(False)
&nbsp;
        <i># přidání tlačítka na nástrojový pruh</i>
        self.toolbar.addAction(quitAction)
&nbsp;
        <i># doprostřed okna přidáme návěští s rastrovým obrázkem</i>
        self.addLabelWithPixmap()
&nbsp;
        <i># zobrazení hlavního okna</i>
        self.show()
&nbsp;
    def <strong>addLabelWithPixmap</strong>(self):
        <i># vytvoření návěští</i>
        label = QtGui.QLabel("test")
        <i># přiřazení rastrového obrázku k návěští</i>
        label.setPixmap(self.pixmap)
        <i># vložení návěští do hlavního okna</i>
        self.setCentralWidget(label)
&nbsp;
    def <strong>run</strong>(self, app):
        <i># zobrazení okna na obrazovce</i>
        self.show()
        <i># vstup do smyčky událostí (event loop)</i>
        app.exec_()
&nbsp;
&nbsp;
def <strong>main</strong>():
    app = QtGui.QApplication(sys.argv)
    MainWindow().run(app)
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů byly opět,
podobně jako tomu bylo i v&nbsp;předchozích článcích, uloženy do Git repositáře
dostupného na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Pokud nechcete klonovat celý repositář, můžete namísto toho použít odkazy na
jednotlivé příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th>Příklad</th><th>Adresa</th></tr>
<tr><td>83_rectagonal_clip_region.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/83_rectagonal_clip_region.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/83_rectagonal_clip_region.py</a></td></tr>
<tr><td>84_bitmap_as_clip_region.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/84_bitmap_as_clip_region.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/84_bitmap_as_clip_region.py</a></td></tr>
<tr><td>85_region_set_ops.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/85_region_set_ops.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/85_region_set_ops.py</a></td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Odkazy na Internetu</h2>

<ol>
</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

