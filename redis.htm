<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Instalace Redisu</a></p>
<p><a href="#k03">*** 3. Konfigurace vhodná pro první seznámení s&nbsp;Redisem</a></p>
<p><a href="#k04">*** 4. Spuštění Redisu a první experimenty se systémem</a></p>
<p><a href="#k05">*** 5. Perzistentní uložení databáze</a></p>
<p><a href="#k06">*** 6. AOF &ndash; Append Only File</a></p>
<p><a href="#k07">*** 7. Formát klíčů</a></p>
<p><a href="#k08">*** 8. Podporované datové typy, s&nbsp;nimiž Redis pracuje</a></p>
<p><a href="#k09">*** 9. Práce s&nbsp;řetězci uloženými do databáze</a></p>
<p><a href="#k10">*** 10. Seznamy</a></p>
<p><a href="#k11">*** 11. Množiny a uspořádané množiny</a></p>
<p><a href="#k12">*** 12. Mapy (asociativní pole)</a></p>
<p><a href="#k13">*** 13. Bitová pole</a></p>
<p><a href="#k14">*** 14. Použití Redisu z&nbsp;Pythonu</a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. Využití &bdquo;pipeline&ldquo; pro sloučení většího množství příkazů do jediného požadavku</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>
REDIS (REmote DIctionary Server)


<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace Redisu</h2>

<p>Před otestováním možností Redisu je samozřejmě nutné tento nástroj nainstalovat. Vzhledem k&nbsp;tomu, že se jedná o (na dnešní poměry) velmi malý projekt, je instalace prakticky okamžitá. Jen pro ukázku se podívejme na instalaci na Fedoře 27 s&nbsp;využitím nástroje <strong>dnf</strong>:</p>

$ <strong>sudo dnf install redis</strong>
&nbsp;
Last metadata expiration check: 0:15:30 ago on Wed 24 Oct 2018, 22:50:11 CEST.
Dependencies resolved.
================================================================================
 Package           Arch            Version               Repository        Size
================================================================================
Installing:
 redis             x86_64          4.0.9-1.fc27          updates          580 k
Installing dependencies:
 jemalloc          x86_64          4.5.0-5.fc27          updates          210 k
&nbsp;
Transaction Summary
================================================================================
Install  2 Packages
&nbsp;
Total download size: 790 k
Installed size: 2.0 M
Is this ok [y/N]:
</pre>

<p>Samotný průběh instalace:</p>

<pre>
Downloading Packages:
(1/2): jemalloc-4.5.0-5.fc27.x86_64.rpm         1.0 MB/s | 210 kB     00:00    
(2/2): redis-4.0.9-1.fc27.x86_64.rpm            2.3 MB/s | 580 kB     00:00    
--------------------------------------------------------------------------------
Total                                           1.0 MB/s | 790 kB     00:00     
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                        1/1 
  Installing       : jemalloc-4.5.0-5.fc27.x86_64                           1/2 
  Running scriptlet: jemalloc-4.5.0-5.fc27.x86_64                           1/2 
  Running scriptlet: redis-4.0.9-1.fc27.x86_64                              2/2 
  Installing       : redis-4.0.9-1.fc27.x86_64                              2/2 
  Running scriptlet: redis-4.0.9-1.fc27.x86_64                              2/2 
Running as unit: run-r389424a3db894d8e83bddf2d54cd6d4e.service
  Verifying        : redis-4.0.9-1.fc27.x86_64                              1/2 
  Verifying        : jemalloc-4.5.0-5.fc27.x86_64                           2/2 
&nbsp;
Installed:
  redis.x86_64 4.0.9-1.fc27             jemalloc.x86_64 4.5.0-5.fc27            
&nbsp;
Complete!
</pre>

<pre>
$ <strong>apt-get install redis-server</strong>
</pre>

<p>Po instalaci se můžeme přesvědčit, že je skutečně k&nbsp;dispozici spustitelný soubor s&nbsp;Redisem:</p>

<pre>
$ <strong>whereis -b redis</strong>
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Konfigurace vhodná pro první seznámení s&nbsp;Redisem</h2>

<p>Redis je sice možné spustit jako službu, ale pro otestování jeho základní funkčnosti bude jednodušší a především bezpečnější spustit tuto aplikaci pouze lokálně &ndash; Redis sice bude pracovat ve funkci serveru, ale bude akceptovat pouze požadavky o připojení, které přichází ze stejného počítače. Nejprve si vytvoříme adresář, v&nbsp;němž bude uložena jak konfigurace, tak vytvářené datové soubory. Tento adresář vytvoříme přímo v&nbsp;domácím adresáři právě přihlášeného uživatele a přepneme se do něj:</p>

<pre>
$ <strong>mkdir redis</strong>
$ <strong>cd redis</strong>
</pre>

<p>Následně přímo v&nbsp;tomto adresáři vytvoříme konfigurační soubor nazvaný <strong>redis.conf</strong>. Můžeme se přitom inspirovat souborem <strong>/etc/redis/redis.conf</strong> (Debian) popř.&nbsp;<strong>/etc/redis.conf</strong> (Fedora, RHEL, CentOS), který je však poměrně rozsáhlý, protože kromě vlastních konfiguračních voleb obsahuje i podrobné informace o významu jednotlivých konfiguračních voleb. Tento soubor je taktéž dostupný na internetu na adrese <a href="https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf">https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf</a>.</p>

<p>Následuje výpis obsahu konfiguračního souboru, který je připraven pro lokální spuštění Redisu, bez nebezpečí, že se k&nbsp;běžícímu serveru připojí případný útočník. Důležité volby jsou zvýrazněny a některé z&nbsp;nich budou popsány na konci kapitoly. Pokud se vám soubor nechce kopírovat, naleznete ho na adrese <a href=""></a>:</p>

<pre>
<strong>bind 127.0.0.1</strong>
<strong>protected-mode yes</strong>
port 6379
tcp-backlog 511
timeout 0
tcp-keepalive 300
daemonize no
supervised no
pidfile /var/run/redis_6379.pid
loglevel notice
<strong>logfile redis.log</strong>
databases 16
always-show-logo yes
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
<strong>dir .</strong>
slave-serve-stale-data yes
slave-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no
slave-priority 100
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
slave-lazy-flush no
appendonly yes
<strong>appendfilename "appendonly.aof"</strong>
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble no
lua-time-limit 5000
slowlog-log-slower-than 10000
slowlog-max-len 128
latency-monitor-threshold 0
notify-keyspace-events ""
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
aof-rewrite-incremental-fsync yes
</pre>

<p>Popišme si nyní ve stručnosti zvýrazněné konfigurační volby:</p>

<table>
<tr><th>Volba</th><th>Význam</th></tr>
<tr><td>bind 127.0.0.1</td><td>seznam síťových rozhraní, na kterých bude Redis přijímat požadavky</td></tr>
<tr><td>protected-mode yes</td><td>pokud zapomenete na předchozí volbu a nezadáte heslo, zapne se režim přijímaní lokálních požadavků</td></tr>
<tr><td>logfile redis.log</td><td>jméno logovacího souboru, zde uvedeno bez adresáře: bude lokální</td></tr>
<tr><td>dir .</td><td>adresář, do kterého se budou ukládat soubory obsahující databázi</td></tr>
<tr><td>appendfilename "appendonly.aof"</td><td>jméno a umístění takzvaného &bdquo;append only file&ldquo; popsaného níže</td></tr>
</table>

<p>Takto nastavený Redis bude ukládat prakticky všechny své soubory do aktuálního adresáře. Jediným souborem vytvářeným mimo tento adresář bude soubor <a href="https://en.wikipedia.org/wiki/Process_identifier">s&nbsp;PID</a> běžícího Redisu.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Spuštění Redisu a první experimenty se systémem</h2>

<p></p>

<pre>
$ <strong>redis-cli</strong>
127.0.0.1:6379&gt;
</pre>

<pre>
127.0.0.1:6379&gt; <strong>ping</strong>
PONG
127.0.0.1:6379&gt; <strong>ping test</strong>
"test"
</pre>

<pre>
127.0.0.1:6379&gt; <strong>set answer 42</strong>
OK
127.0.0.1:6379&gt; <strong>get answer</strong>
"42"
127.0.0.1:6379&gt; <strong>get foobar</strong>
(nil)
</pre>

<pre>
127.0.0.1:6379&gt; <strong>shutdown</strong>
not connected&gt;
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Perzistentní uložení databáze</h2>

<p></p>

pamet + swap, lze ulozit na disk
novy soubor + prejmenovani

<p>Na discích, resp.&nbsp;obecně na paměťových médiích, je databáze ukládána do souborů s&nbsp;koncovkou <strong>.rdb</strong>. Jedná se o binární soubory, které jsou navrženy takovým způsobem, aby práce s&nbsp;nimi byla velmi rychlá. V&nbsp;případě potřeby se používá <a href="https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch">komprimace LZW</a> pro zmenšení velikosti těchto souborů. Interně je před každým objektem uloženým v&nbsp;tomto souboru specifikována i velikost objektu, což zjednodušuje načítání <strong>.rdb</strong> zpět do operační paměti. Na konci souboru je navíc (v&nbsp;závislosti na konfiguraci) uložen 64bitový kontrolní součet, který je možné použít pro jednoduchou kontrolu konzistence dat.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. AOF &ndash; Append Only File</h2>

<p></p>

zapis prikazu
lze z neho databazi obnovit
dochazi ke snizeni vykonu, lze nastavit, jak casto se zapisuje
-vyhody, nevyhody

<p>Pokud se podíváme do souboru nazvaného <strong>appendonly.aof</strong> (viz <a href="#k03">třetí kapitolu</a> s&nbsp;konfigurací), měli bychom vidět následující obsah, který odpovídá operacím, které jsme v&nbsp;databázi provedli. Samozřejmě zůstává zachováno pořadí těchto operací. Je tomu tak z&nbsp;toho důvodu, že &bdquo;přehráním&ldquo; AOF souboru bychom měli dostat přesný obraz databáze:</p>

<pre>
*2
$6
SELECT
$1
0
*3
$3
set
$6
answer
$2
42
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Formát klíčů</h2>

<p></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Podporované datové typy, s&nbsp;nimiž Redis pracuje</h2>

<p>Při ukládání a zpracování dat ukládaných do Redisu je možné data reprezentovat několika datovými typy. Jména jednotlivých typů jsou vypsána v&nbsp;tabulce a v&nbsp;navazujících kapitolách si řekneme o jednotlivých typech některé bližší informace (zaměřené spíše na jejich praktické použití):</p>

<table>
<tr><th>Jméno</th><th>Stručná charakteristika</th></tr>
<tr><td>string</td><td></td></tr>
<tr><td>list</td><td></td></tr>
<tr><td>set</td><td></td></tr>
<tr><td>hash</td><td></td></tr>
<tr><td>sorted set</td><td></td></tr>
<tr><td>bitmap (bit array)</td><td></td></tr>
<tr><td>HyperLogLogs</td><td></td></tr>
</table>



<p><a name="k09"></a></p>
<h2 id="k09">9. Práce s&nbsp;řetězci uloženými do databáze</h2>

<p></p>

<p>Zajímavé je, že i když Redis neobsahuje přímou podporu pro datový typ &bdquo;celé číslo&ldquo;, nabízí svým uživatelům několik operací určených pro <i>atomickou</i> změnu numerických hodnot reprezentovaných řetězcem v&nbsp;běžném dekadickém formátu. Pro zvýšení hodnoty o jedničku se používá operace <strong>INCR</strong>, opakem je pochopitelně funkce <strong>DECR</strong>. V&nbsp;případě, že budeme potřebovat zvýšit nebo snížit uloženou hodnotu o krok odlišný od jedničky, lze použít operaci pojmenovanou příhodně <strong>INCRBY</strong>. Podobná operace <strong>INCRBYFLOAT</strong> slouží pro změnu hodnoty čísla s&nbsp;desetinnou tečkou (opět ovšem uloženého formou běžného řetězce). Podívejme se na příklady (spouštěné přímo z&nbsp;<strong>redis-cli</strong>:</p>

<pre>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Seznamy</h2>

<p></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Množiny a uspořádané množiny</h2>

<p></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Mapy (asociativní pole)</h2>

<p></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Bitová pole</h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Použití Redisu z&nbsp;Pythonu</h2>

<p>Ve druhé části dnešního článku si ukážeme, jakým způsobem lze používat databázi Redis z&nbsp;programovacího jazyka Python. Pro Redis samozřejmě existuje knihovna (přesněji řečeno dokonce více knihoven) s&nbsp;rozhraním k&nbsp;Redisu, které je &ndash; alespoň při použití běžných datových typů &ndash; velmi jednoduše použitelné. Nejprve samozřejmě musíme příslušnou knihovnu nainstalovat, což je otázka několika sekund. Postačuje použít příkaz <strong>pip3</strong> pro instalaci knihovny <strong>redis</strong>. Pro jistotu instalaci provedeme pouze pro aktivního uživatele, takže se knihovna i její metadata uloží do adresáře <strong>~/.local/lib/python{VERZE}/site-packages/</strong>:</p>

<pre>
$ <strong>pip3 install --user redis</strong>
&nbsp;
Collecting redis
  Downloading https://files.pythonhosted.org/packages/3b/f6/7a76333cf0b9251ecf49efff635015171843d9b977e4ffcf59f9c4428052/redis-2.10.6-py2.py3-n
    100% |████████████████████████████████| 71kB 909kB/s
Installing collected packages: redis
Successfully installed redis-2.10.6
</pre>

<p>Pokud instalace knihovny <strong>redis</strong> proběhla v&nbsp;pořádku, můžeme si ji vyzkoušet. Nejprve spustíme interaktivní smyčku Pythonu:</p>

<pre>
$ <strong>python3</strong>
Python 3.6.3 (default, Oct  9 2017, 12:11:29) 
[GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] on linux
Type "help", "copyright", "credits" or "license" for more information.
</pre>

<p><div class="rs-tip-major">Poznámka: jak jste si mohli všimnout, testování provádím na stroji s&nbsp;dnes již zastaralým systémem a taktéž postarší verzí Pythonu. Ovšem knihovna <strong>redis</strong> je pochopitelně funkční i s&nbsp;nejnovějším (stabilním) Pythonem 3.7.1.</div></p>

<p>V&nbsp;interpretru Pythonu nyní nejprve naimportujeme modul <strong>redis</strong>.</p>

<pre>
&gt;&gt;&gt; import redis
</pre>

<p>Můžeme si vyzkoušet zobrazit si nápovědu:</p>

<pre>
&gt;&gt;&gt; help("redis")
</pre>

<pre>
Help on package redis:
&nbsp;
NAME
    redis
&nbsp;
PACKAGE CONTENTS
    _compat
    client
    connection
    exceptions
    lock
    sentinel
    utils
&nbsp;
CLASSES
    builtins.Exception(builtins.BaseException)
        redis.exceptions.RedisError
            redis.exceptions.AuthenticationError
            redis.exceptions.ConnectionError
                redis.exceptions.BusyLoadingError
</pre>

<p>Ovšem důležitější je samozřejmě vlastní rozhraní k&nbsp;Redisu. Nejprve vytvoříme objekt typu <strong>Redis</strong> zavoláním stejnojmenné funkce, které se předá adresa a port Redis serveru, na který se klient pokusí připojit:</p>

<pre>
&gt;&gt;&gt; r = redis.Redis(host='127.0.0.1', port=6379)
&gt;&gt;&gt; r
Redis&lt;ConnectionPool&lt;Connection&lt;host=127.0.0.1,port=6379,db=0&gt;&gt;&gt;
</pre>

<p>Pokud se připojení podařilo, můžeme se pokus přečíst z&nbsp;databáze hodnotu uloženou pod klíčem &bdquo;answer&ldquo;. To je jednoduché, protože postačuje použít metodu <strong>get()</strong>:</p>

<pre>
&gt;&gt;&gt; r.get("answer")
b'42'
</pre>

<p>V&nbsp;případě, že se pokusíme přečíst hodnotu pod neexistujícím klíčem, vrátí se <strong>None</strong>:</p>

<pre>
&gt;&gt;&gt; r.get("foo")
</pre>

<p>Samozřejmě je možné do databáze i zapisovat, a to v&nbsp;tom nejjednodušším případě metodou <strong>set</strong>:</p>

<pre>
&gt;&gt;&gt; r.set("foo", -1)
True
&gt;&gt;&gt; r.get("foo")
b'-1'
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Využití </h2>

<p></p>
skrumáž přípojek


<p><a name="k16"></a></p>
<h2 id="k16">16. Využití &bdquo;pipeline&ldquo; pro sloučení většího množství příkazů do jediného požadavku</h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Stránky projektu Redis<br />
<a href="https://redis.io/">https://redis.io/</a>
</li>

<li>Introduction to Redis<br />
<a href="https://redis.io/topics/introduction">https://redis.io/topics/introduction</a>
</li>

<li>Try Redis<br />
<a href="http://try.redis.io/">http://try.redis.io/</a>
</li>

<li>Python Redis<br />
<a href="https://redislabs.com/lp/python-redis/">https://redislabs.com/lp/python-redis/</a>
</li>

<li>Redis: key-value databáze v paměti i na disku<br />
<a href="https://www.zdrojak.cz/clanky/redis-key-value-databaze-v-pameti-i-na-disku/">https://www.zdrojak.cz/clanky/redis-key-value-databaze-v-pameti-i-na-disku/</a>
</li>

<li>Connection pool<br />
<a href="https://en.wikipedia.org/wiki/Connection_pool">https://en.wikipedia.org/wiki/Connection_pool</a>
</li>

<li>Instant Redis Sentinel Setup<br />
<a href="https://github.com/ServiceStack/redis-config">https://github.com/ServiceStack/redis-config</a>
</li>

<li>How to install REDIS in LInux<br />
<a href="https://linuxtechlab.com/how-install-redis-server-linux/">https://linuxtechlab.com/how-install-redis-server-linux/</a>
</li>

<li>Redis RDB Dump File Format<br />
<a href="https://github.com/sripathikrishnan/redis-rdb-tools/wiki/Redis-RDB-Dump-File-Format">https://github.com/sripathikrishnan/redis-rdb-tools/wiki/Redis-RDB-Dump-File-Format</a>
</li>

<li>Lempel–Ziv–Welch<br />
<a href="https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch">https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch</a>
</li>

<li>Redis Persistence<br />
<a href="https://redis.io/topics/persistence">https://redis.io/topics/persistence</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

