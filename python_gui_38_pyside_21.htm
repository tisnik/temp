<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Jazyk QML (Qt Modeling Language) a PySide</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Jazyk QML (Qt Modeling Language) a PySide</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Minule jsme si ukázali způsob použití souborů UI s deklarací grafického uživatelského rozhraní. Ovšem programátoři používající Python společně s PySide mají ještě jednu možnost &ndash; využít jazyk QML neboli Qt Modeling Language s nímž se dnes ve stručnosti seznámíme.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Specializované jazyky pro popis grafického uživatelského rozhraní</a></p>
<p><a href="#k02">2. Jazyk QML (Qt Modeling Language)</a></p>
<p><a href="#k03">3. První demonstrační příklad &ndash; jednoduchý obdélník</a></p>
<p><a href="#k04">4. Načtení a použití popisu GUI v&nbsp;aplikaci využívající PySide</a></p>
<p><a href="#k05">5. Úplný zdrojový kód prvního demonstračního příkladu</a></p>
<p><a href="#k06">6. Nepatrně složitější příklad &ndash; obdélníkové okno s&nbsp;textem</a></p>
<p><a href="#k07">7. Určení vzájemné (relativní) polohy jednotlivých prvků grafického uživatelského rozhraní</a></p>
<p><a href="#k08">8. Třetí demonstrační příklad &ndash; pozice tří čtverců v&nbsp;okně</a></p>
<p><a href="#k09">9. Naprogramování reakcí na akce prováděné uživatelem</a></p>
<p><a href="#k10">10. Reakce na stisk tlačítka myši</a></p>
<p><a href="#k11">11. Reakce na stisk klávesy</a></p>
<p><a href="#k12">12. Vylepšení předchozího příkladu &ndash; fokus nastavený na hlavní okno</a></p>
<p><a href="#k13">13. Specifikace většího množství kroků při vzniku události</a></p>
<p><a href="#k14">14. Šestý demonstrační příklad &ndash; dvě reakce na stisk tlačítka myši</a></p>
<p><a href="#k15">15. Specifikace průhlednosti</a></p>
<p><a href="#k16">16. Nastavení pořadí objektů v&nbsp;Z-ové ose</a></p>
<p><a href="#k17">17. Rotace prvků GUI</a></p>
<p><a href="#k18">18. Obsah dalšího pokračování seriálu</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Specializované jazyky pro popis grafického uživatelského rozhraní</h2>

<p>V&nbsp;dnešním článku si řekneme základní informace o jazyku QML určeného
pro popis designu i chování grafického uživatelského rozhraní. Prozatím se
zaměříme na základní vlastnosti QML, ale v&nbsp;dalších článcích si již ukážeme
napojení GUI části na skripty naprogramované v&nbsp;Pythonu s&nbsp;využitím
PySide.</p>

<p>V&nbsp;minulosti vzniklo poměrně velké množství doménově specifických jazyků
určených pro popis grafického uživatelského rozhraní. Ostatně se stačí podívat
na tabulku zobrazenou pod tímto odstavcem, ve které jsou některé tyto jazyky
zmíněny (zdaleka se ovšem nejedná o vyčerpávající seznam!):</p>

<table>
<tr><th>Zkratka</th><th>Význam</th></tr>
<tr><td>FXML</td><td>(pravděpodobně Form XML)</td></tr>
<tr><td>HMVCUL</td><td>Hierarchical Model View Controller User Interface Language</td></tr>
<tr><td>MARIA</td><td>Model-based lAnguage foR Interactive Applications</td></tr>
<tr><td>MXML</td><td>součást Adobe Flex</td></tr>
<tr><td>LZX</td><td>Laszlo XML</td></tr>
<tr><td>QML</td><td>Qt Modeling Language</td></tr>
<tr><td>SVG</td><td>Scalable Vector Graphics</td></tr>
<tr><td>UIML</td><td>User Interface Markup Language</td></tr>
<tr><td>UsiXML</td><td>User Interface Extensible Markup Language</td></tr>
<tr><td>WasabiXML</td><td>deklarace GUI pro Wasabi</td></tr>
<tr><td>XAL</td><td>eXtensible Application Language</td></tr>
<tr><td>XAML</td><td>Extensible Application Markup Language</td></tr>
<tr><td>XFD</td><td>XML Form Definition</td></tr>
<tr><td>XUL</td><td>XML User Interface Language</td></tr>
</table>

<p>Tyto jazyky můžeme rozdělit zhruba do tří skupin:</p>

<ol>

<li>Jazyky, v&nbsp;nichž je možné popsat pouze design grafického uživatelského
rozhraní, tj.&nbsp;jednotlivých oken, dialogů a ovládacích prvků v&nbsp;nich.
Návaznost na systém pro správu událostí se řeší jinými prostředky a přitom se
typicky používají ID přiřazené jednotlivým prvkům GUI. Toto zásadní omezení má
výhodu v&nbsp;tom, že design GUI zůstává přísně deklarativní.</li>

<li>Jazyky, ve kterých je možné specifikovat callback funkce/metody volané při
vzniku různých událostí (žádost o vykreslení, klik tlačítkem myši, stisk
klávesy, drag and drop atd.)</li>

<li>Jazyky kombinující jak popis designu grafického uživatelského rozhraní, tak
i zpracování událostí. Například je možné přímo do popisu GUI vkládat
programový kód napsaný v&nbsp;JavaScriptu atd.</li>

</ol>



<p><a name="k02"></a></p>
<h2 id="k02">2. Jazyk QML (Qt Modeling Language)</h2>

<p>Jazyk QML, jehož naprosté základy si vysvětlíme v&nbsp;navazujících
kapitolách, patří do třetí skupiny. Obsahuje tedy jak deklarativní, tak i
imperativní části, přičemž reakce na události, řízení animací atd. je možné
naprogramovat buď v&nbsp;JavaScriptu nebo s&nbsp;využitím callback funkcí/metod
naprogramovaných například v&nbsp;C++ nebo v&nbsp;Pythonu. V&nbsp;tomto článku
nás bude zajímat především spojení PySide+QML, tj.&nbsp;poslední možnost
zahrnující použití Pythonu.</p>

<p>Poměrně důležité je, že jazyk QML není, na rozdíl od mnoha jiných jazyků
určených pro popis GUI, založen na XML, což s&nbsp;sebou přináší některé
přednosti, ale i zápory. Díky použití složených závorek pro definici a oddělení
jednotlivých elementů je zápis čitelnější a kratší, než při použití nějaké
aplikace XML (ostatně i zápis JavaScriptu uvnitř QML je přirozenější, než
například kombinace HTML+JavaScript). Na druhou stranu však není možné (alespoň
ne jednoduše) použít běžné nástroje pro zpracování XML, tj.&nbsp;xpath atd.</p>

<p>Zajímavé jsou i možnosti popisu vzájemné pozice prvků grafického
uživatelského rozhraní. Programátor popř.&nbsp;návrhář GUI má k&nbsp;dispozici
několik možností popisu rozmístění prvků:</p>

<ol>
<li>Použití absolutních souřadnic.</li>
<li>Umístění prvků do jednoho sloupce (samotný sloupec je možné vložit do dalšího prvku)</li>
<li>Umístění prvků do jednoho řádku</li>
<li>Umístění prvků do pravidelné mřížky (<i>grid</i>)</li>
<li>Použití takzvaných kotevních přímek (přesnější český termín pravděpodobně není rozšířen)</li>
</ol>



<p><a name="k03"></a></p>
<h2 id="k03">3. První demonstrační příklad &ndash; jednoduchý obdélník</h2>

<p>Dnešní první demonstrační příklad je pojat minimalisticky. V&nbsp;jazyku QML
deklarujeme obdélník představující plochu hlavního okna aplikace. U tohoto
obdélníku specifikujeme pouze jeho rozměry (šířku, výšku); žádné další údaje
pro takto jednoduchý příklad nejsou zapotřebí. Obsah souboru pojmenovaného <a
href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/165_load_qml_1.qml">165_load_qml_1.qml</a>
vypadá následovně:</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    width: 320
    height: 240
}
</pre>

<p>První řádek s&nbsp;příkazem <strong>import</strong> má formát:</p>



<pre>
import &lt;jmenný prostor&gt; &lt;verze&gt;
</pre>

<p>Ve skutečnosti se však dá <strong>import</strong> použít i v&nbsp;dalších
situacích, například pro načtení programového kódu napsaného v&nbsp;JavaScriptu
nebo pro načtení obsahu s&nbsp;definicemi typů apod.</p>

<p><div class="rs-tip-major">Poznámka: můžeme se setkat i s&nbsp;verzí QtQuick
2.x, což ovšem vyžaduje instalaci Qt 5 a tím pádem i <a
href="https://riverbankcomputing.com/software/pyqt/download5">PyQt5</a>.
V&nbsp;našem článku ovšem používáme standardní PySide pro Qt 4.</div></p>

<p>Na dalších řádcích můžeme vidět deklaraci objektu, zde konkrétně objektu
typu <strong>Rectangle</strong> i s&nbsp;naplněním jeho dvou atributů. Každý
atribut je uveden na samostatném řádku:</p>

<pre>
<strong>Rectangle</strong> {
    width: 320
    height: 240
}
</pre>

<p>Atributy můžeme uvést i na stejném řádku, ovšem tehdy je nutné je oddělit
středníky:</p>

<pre>
<strong>Rectangle</strong> {
    width: 320; height: 240
}
</pre>

<p>Specifikace GUI je prozatím čistě deklarativní &ndash; vytváříme v&nbsp;něm
objekty (<strong>Rectangle</strong>, <strong>Text</strong>) a nastavujeme
jejich atributy. Objekty mohou obsahovat i další objekty, takže výsledkem bude
stromová struktura.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Načtení a použití popisu GUI v&nbsp;aplikaci využívající PySide</h2>

<p>Deklaraci grafického uživatelského rozhraní velmi jednoduché aplikace již
máme připravenou, takže se podívejme, jak ji načteme do skriptu napsaného
v&nbsp;Pythonu. K&nbsp;tomuto účelu se používá třída
<strong>QDeclarativeView</strong> z&nbsp;modulu <strong>QtDeclarative</strong>
(v&nbsp;Qt 5 ovšem došlo k&nbsp;přejmenování třídy
<strong>QQuickView</strong>!). Po importu modulu
<strong>QtDeclarative</strong>:</p>

<pre>
<i># modul pro práci s QML</i>
from PySide import QtDeclarative
</pre>

<p>budeme moci využít následující běžné třídy i třídy abstraktní:</p>

<table>
<tr><td>ListProperty</td></tr>
<tr><td>QDeclarativeComponent</td></tr>
<tr><td>QDeclarativeContext</td></tr>
<tr><td>QDeclarativeEngine</td></tr>
<tr><td>QDeclarativeError</td></tr>
<tr><td>QDeclarativeExpression</td></tr>
<tr><td>QDeclarativeExtensionInterface</td></tr>
<tr><td>QDeclarativeExtensionPlugin</td></tr>
<tr><td>QDeclarativeImageProvider</td></tr>
<tr><td>QDeclarativeItem</td></tr>
<tr><td>QDeclarativeListReference</td></tr>
<tr><td>QDeclarativeNetworkAccessManagerFactory</td></tr>
<tr><td>QDeclarativeParserStatus</td></tr>
<tr><td>QDeclarativeProperty</td></tr>
<tr><td>QDeclarativePropertyMap</td></tr>
<tr><td>QDeclarativePropertyValueSource</td></tr>
<tr><td>QDeclarativeScriptString</td></tr>
<tr><td>QDeclarativeView</td></tr>
</table>

<p>Od třídy <strong>QDeclarativeView</strong> totiž můžeme odvodit uživatelskou
třídu a použít metodu <strong>setSource()</strong> pro načtení QML. Dále pomocí
metody <strong>setResizeMode()</strong> zajistíme změnu velikosti okna aplikace
takovým způsobem, aby odpovídalo ploše deklarované v&nbsp;QML:</p>

<pre>
<i># nový widget bude odvozen od QDeclarativeView</i>
class <strong>MainWindow</strong>(QtDeclarative.QDeclarativeView):
&nbsp;
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setWindowTitle("QML Example")
        <i># načtení souboru QML</i>
        self.setSource(QtCore.QUrl.fromLocalFile(QML_FILE))
        <i># necháme QML změnit velikost okna</i>
        self.setResizeMode(QtDeclarative.QDeclarativeView.SizeRootObjectToView)
</pre>

<p>Takto deklarovanou třídu představující hlavní okno aplikace použijeme
naprosto stejným způsobem, jako jakékoli jiné hlavní okno:</p>

<pre>
def <strong>main</strong>():
    <i># vytvoření Qt aplikace</i>
    app = QtGui.QApplication(sys.argv)
&nbsp;
    <i># vytvoření hlavního okna</i>
    window = MainWindow()
&nbsp;
    <i># zobrazení hlavního okna</i>
    window.show()
&nbsp;
    <i># spuštění aplikace</i>
    sys.exit(app.exec_())
</pre>

<img src="https://i.iinfo.cz/images/313/qml1-1.png" class="image-330207" alt="&#160;" height="267" width="322" />
<p><i>Obrázek 1: První demonstrační příklad po svém spuštění.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Úplný zdrojový kód prvního demonstračního příkladu</h2>

<p>Úplný <a
href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/165_load_qml_1.py">zdrojový
kód</a> dnešního prvního demonstračního příkladu vypadá následovně:</p>

<pre>
<i>#!/usr/bin/env python</i>
<i># vim: set fileencoding=utf-8</i>
&nbsp;
import sys
&nbsp;
<i># import "jádra" frameworku Qt i modulu pro GUI</i>
from PySide import QtCore
from PySide import QtGui
&nbsp;
<i># modul pro práci s QML</i>
from PySide import QtDeclarative
&nbsp;
QML_FILE = "165_load_qml_1.qml"
&nbsp;
&nbsp;
<i># nový widget bude odvozen od QDeclarativeView</i>
class <strong>MainWindow</strong>(QtDeclarative.QDeclarativeView):
&nbsp;
    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.setWindowTitle("QML Example")
        # načtení souboru QML
        self.setSource(QtCore.QUrl.fromLocalFile(QML_FILE))
        # necháme QML změnit velikost okna
        self.setResizeMode(QtDeclarative.QDeclarativeView.SizeRootObjectToView)
&nbsp;
&nbsp;
def <strong>main</strong>():
    <i># vytvoření Qt aplikace</i>
    app = QtGui.QApplication(sys.argv)
&nbsp;
    <i># vytvoření hlavního okna</i>
    window = MainWindow()
&nbsp;
    <i># zobrazení hlavního okna</i>
    window.show()
&nbsp;
    <i># spuštění aplikace</i>
    sys.exit(app.exec_())
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>

<p>Bez použití QML by příklad mohl vypadat například následovně:</p>

<pre>
<i># tento import je zapotřebí kvůli nutnosti zpracování parametrů</i>
<i># předávaných přes příkazový řádek</i>
import sys
&nbsp;
<i># prozatím budeme využívat jen modul QtGui</i>
from PySide import QtGui
&nbsp;
&nbsp;
<i># nový widget bude odvozen od obecného widgetu</i>
class <strong>MainWindow</strong>(QtGui.QWidget):
&nbsp;
    def __init__(self):
        <i># zavoláme konstruktor předka</i>
        super(MainWindow, self).__init__()
&nbsp;
        <i># konfigurace GUI + přidání widgetu do okna</i>
        self.prepareGUI()
&nbsp;
    def <strong>prepareGUI</strong>(self):
        self.resize(320, 240)
        self.setWindowTitle("Window and label")
&nbsp;
        <i># návěští</i>
        label = QtGui.QLabel("Hello world!", self)
        <i># posun v rámci nadřazeného widgetu</i>
        label.move(100, 100)
&nbsp;
    def <strong>run</strong>(self, app):
        <i># zobrazení okna na obrazovce</i>
        self.show()
        <i># vstup do smyčky událostí (event loop)</i>
        sys.exit(app.exec_())
&nbsp;
&nbsp;
def <strong>main</strong>():
    app = QtGui.QApplication(sys.argv)
    MainWindow().run(app)
&nbsp;
&nbsp;
if __name__ == '__main__':
    main()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Nepatrně složitější příklad &ndash; obdélníkové okno s&nbsp;textem</h2>

<p>Na předchozím příkladu postavíme i všechny další demonstrační příklady.
První úprava (nebo vylepšení) spočívá v&nbsp;tom, že budeme specifikovat barvu
pozadí plochy okna. K&nbsp;tomu slouží atribut <strong>color</strong>, kterému
je možné předat řetězec se jménem barvy, kód barvy ve formátu
<strong>#rrggbb</strong> (<i>hexa triplet</i>) nebo ve formátu
<strong>#rrggbbAA</strong> (hexa triplet s&nbsp;průhledností). Jména všech
podporovaných barev naleznete na stránce <a
href="https://www.w3.org/TR/SVG/types.html#ColorKeywords">https://www.w3.org/TR/SVG/types.html#ColorKeywords</a>:</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    width: 320
    height: 240
    color: "lightgray"
}
</pre>

<p>Dále na plochu okna přidáme další prvek grafického uživatelského rozhraní.
Bude se jednat o text představovaný objektem typu <strong>Text</strong>. Mezi
nastavované atributy bude patřit vlastní řetězec a taktéž <i>režim uchycení</i>
objektu na plochu:</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    width: 320
    height: 240
    color: "lightgray"
&nbsp;
    <strong>Text</strong> {
        text: "Hello World"
        anchors.centerIn: parent
    }
}
</pre>

<img src="https://i.iinfo.cz/images/313/qml1-2.png" class="image-330208" alt="&#160;" height="267" width="322" />
<p><i>Obrázek 2: Druhý demonstrační příklad po svém spuštění.</i></p>

<p>Režimy uchycení jsou specifické pro QML a vzhledem k&nbsp;jejich důležitosti
pro tvorbu grafického uživatelského rozhraní si je popíšeme v&nbsp;navazující
kapitole.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Určení vzájemné (relativní) polohy jednotlivých prvků grafického uživatelského rozhraní</h2>

<p>V&nbsp;předchozím demonstračním příkladu jsme si mj.&nbsp;ukázali, jak je
možné specifikovat umístění nějakého prvku GUI (zde se konkrétně jednalo o
text) v&nbsp;rámci plochy okna aplikace nebo libovolného formuláře. Možnosti
QML jsou ovšem v&nbsp;tomto ohledu mnohem širší, neboť je možné nastavit jak
absolutní pozice prvků, tak i pozice relativní, a to vůči libovolnému jinému
prvku. Například můžeme zapsat, že dva prvky GUI (například tlačítka) mají být
zobrazeny vedle sebe, tj.&nbsp;pravý okraj levého tlačítka bude shodný
s&nbsp;levým okrajem tlačítka pravého a současně budou shodné i jejich y-ové
souřadnice. Způsob zápisu relativních pozic prvků GUI je v&nbsp;QML poměrně
intuitivní. Vše je založeno na šesti pomyslných přímkách, které jsou
automaticky vytvořeny pro každý prvek GUI:</p>

<img src="https://i.iinfo.cz/images/313/qml1-3.png" class="image-330209" alt="&#160;" height="290" width="437" />
<p><i>Obrázek 3: Pomyslné přímky, ke kterým je možné vztahovat pozice
jednotlivých komponent.<br />
Zdroj: http://doc.qt.io/archives/qt-4.8/images/edges_qml.png</i></p>

<p>Jak se tyto přímky využijí při určování vzájemné pozice prvků? Podívejme se
na příklad, v&nbsp;němž je všem prvkům GUI přiřazen jednoznačný identifikátor,
takže se na ně můžeme odkázat. Dále stanovíme, které kotevní přímky mají mít
prvky společné. Je již věcí správce geometrie, aby našel korektní řešení
zadaného problému :-):</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    id: main
    width: 320
    height: 240
    color: "lightgray"
&nbsp;
    <strong>Rectangle</strong> {
        id: r1
        width: 100
        height: 100
        color: "red"
        anchors.verticalCenter: main.verticalCenter
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r2
        width: 100
        height: 100
        color: "blue"
        anchors.left: r1.right
    }
}
</pre>

<p>Příklad je samozřejmě možné různými způsoby upravit a dosáhnout tak
odlišného rozmístění prvků na ploše. Kromě explicitního použití ID prvků můžeme
použít i označení <strong>parent</strong> pro předka (ne ve smyslu hierarchie
tříd, ale umístění objektů do stromu GUI widgetů):</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    width: 320
    height: 240
    color: "lightgray"
&nbsp;
    <strong>Rectangle</strong> {
        width: 160
        height: 160
        color: "red"
        anchors.left: parent.left
        anchors.bottom: parent.bottom
    }
&nbsp;
    <strong>Rectangle</strong> {
        width: 160
        height: 160
        color: "green"
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.top: parent.top
    }
&nbsp;
    <strong>Rectangle</strong> {
        width: 160
        height: 160
        color: "blue"
        anchors.right: parent.right
        anchors.bottom: parent.bottom
    }
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Třetí demonstrační příklad &ndash; pozice tří čtverců v&nbsp;okně</h2>

<p>Ve třetím demonstračním příkladu budou na plochu okna vloženy tři
různobarevné čtverce. První čtverec bude v&nbsp;okně vertikálně (svisle)
vycentrován (<strong>anchors.verticalCenter: main.verticalCenter</strong>),
další na něj bude navazovat (budou se dotýkat hranami), ovšem y-ová pozice bude
nulová. A konečně třetí čtverec bude svou spodní hranou zarovnán se spodním
okrajem okna:</p>

<img src="https://i.iinfo.cz/images/313/qml1-4.png" class="image-330210" alt="&#160;" height="267" width="322" />
<p><i>Obrázek 4: Třetí demonstrační příklad po svém spuštění.</i></p>

<p>Následuje ukázka QML skriptu, který toto GUI popisuje:</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    id: main
    width: 320
    height: 240
    color: "lightgray"
&nbsp;
    <strong>Rectangle</strong> {
        id: r1
        width: 100
        height: 100
        color: "red"
        anchors.verticalCenter: main.verticalCenter
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r2
        width: 100
        height: 100
        color: "blue"
        anchors.left: r1.right
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r3
        width: 100
        height: 100
        color: "yellow"
        anchors.left: r2.right
        anchors.top: r2.bottom
    }
}
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Naprogramování reakcí na akce prováděné uživatelem</h2>

<p>Všechny příklady, které jsme si až doposud ukázali, popisují pouze statický
design grafického uživatelského rozhraní. Nyní se podívejme na to, jakým
způsobem je možné naprogramovat alespoň minimální reakce na akce, které
uživatel s&nbsp;GUI prvky provádí. Základ je velmi jednoduchý &ndash;
nadeklarujeme kód (<i>handler</i>) vybrané události, která nad nějakým prvkem
GUI vznikne. Může se jednat například o kliknutí tlačítkem myši. Použijeme
přitom nový prvek nazvaný příhodně <strong>MouseArea</strong>. Ten je zcela
neviditelný a je možné ho zvětšit takovým způsobem, že svou plochou pokryje
libovolný viditelný prvek GUI. <strong>MouseArea</strong> je specifický tím, že
může přijímat a zpracovávat události, které souvisí s&nbsp;použitím myši,
tj.&nbsp;přesunutí kurzoru myši nad plochy prvku, opuštění plochy prvku,
kliknutí tlačítkem, stisk či puštění tlačítka i akce typu <i>drag and drop</i>.
Práce s&nbsp;myší je v&nbsp;určitém ohledu nejjednodušší, protože (na rozdíl od
práce s&nbsp;klávesnicí) není nutné řešit nastavení fokusu atd.</p>

<img src="https://i.iinfo.cz/images/313/qml1-5.png" class="image-330212" alt="&#160;" height="267" width="322" />
<p><i>Obrázek 5: Výchozí barvy čtverců.</i></p>

<img src="https://i.iinfo.cz/images/313/qml1-6.png" class="image-330213" alt="&#160;" height="267" width="322" />
<p><i>Obrázek 6: Barvy čtverců po kliknutí tlačítkem myši.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Reakce na stisk tlačítka myši</h2>

<p>Ukažme si tedy jednoduchý příklad, v&nbsp;němž bude možné kliknutím měnit
barvy jednotlivých čtverců zobrazených v&nbsp;hlavním okně aplikace. Povšimněte
si především způsobu zápisu reakce na událost, a to přímo v&nbsp;jazyku QML,
bez nutnosti volat kód v&nbsp;Pythonu (ovšem ne vše je samozřejmě možné
naprogramovat takto jednoduchým způsobem):</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    id: main
    width: 320
    height: 240
    color: "lightgray"
&nbsp;
    <strong>Rectangle</strong> {
        id: r1
        width: 100
        height: 100
        color: "gray"
        anchors.verticalCenter: main.verticalCenter
        <strong>MouseArea</strong> {
            anchors.fill: parent
            onClicked: r1.color = "red"
        }
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r2
        width: 100
        height: 100
        color: "gray"
        anchors.left: r1.right
        <strong>MouseArea</strong> {
            anchors.fill: parent
            onClicked: parent.color = "blue"
        }
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r3
        width: 100
        height: 100
        color: "gray"
        anchors.left: r2.right
        anchors.top: r2.bottom
        <strong>MouseArea</strong> {
            anchors.fill: parent
            onClicked: parent.color = "yellow"
        }
    }
}
</pre>

<p>Vidíme, že přímo v&nbsp;handleru události je možné měnit (prakticky)
libovolný atribut libovolného prvku GUI.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Reakce na stisk klávesy</h2>

<p>Dalším způsobem ovládání aplikací s&nbsp;grafickým uživatelským rozhraním je
samozřejmě použití klávesnice. Zde ovšem narazíme na jeden problém &ndash;
události, které vznikají při stisku jednotlivých kláves, přijímá pouze ten
element GUI, který má nastavený fokus. Ostatní elementy nebudou tuto událost
získávat a tedy na ni ani nedokáží zareagovat. Ostatně si sami můžeme
vyzkoušet, co se stane ve chvíli, kdy spustíme následující demonstrační
příklad, v&nbsp;němž (teoreticky) všechny čtverce budou reagovat na stisk
kláves <strong>1</strong>, <strong>2</strong> nebo <strong>3</strong>:</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    id: main
    width: 320
    height: 240
    color: "lightgray"
&nbsp;
    <strong>Rectangle</strong> {
        id: r1
        width: 100
        height: 100
        color: "gray"
        anchors.verticalCenter: main.verticalCenter
        <strong>Item</strong> {
           anchors.fill: parent
           focus: true
           Keys.onDigit1Pressed: parent.color = "red"
        }
        <strong>MouseArea</strong> {
            anchors.fill: parent
            onClicked: parent.color = "#ffff00"
        }
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r2
        width: 100
        height: 100
        color: "gray"
        anchors.left: r1.right
        <strong>Item</strong> {
           anchors.fill: parent
           Keys.onDigit2Pressed: parent.color = "blue"
        }
        <strong>MouseArea</strong> {
            anchors.fill: parent
            onClicked: parent.color = "#00ffff"
        }
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r3
        width: 100
        height: 100
        color: "gray"
        anchors.left: r2.right
        anchors.top: r2.bottom
        <strong>Item</strong> {
           anchors.fill: parent
           Keys.onDigit3Pressed: parent.color = "yellow"
        }
        <strong>MouseArea</strong> {
            anchors.fill: parent
            onClicked: parent.color = "#ff00ff"
        }
    }
}
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;příkladu používáme klávesy
<strong>1</strong> až <strong>3</strong> z&nbsp;toho důvodu, že se jedná o
skupinu kláves, pro něž existuje vlastní (explicitně definovaný) typ události.
To ovšem neplatí například pro znakové klávesy, které používají stejnou
událost, pouze s&nbsp;odlišným kódem stisknuté klávesy.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Vylepšení předchozího příkladu &ndash; fokus nastavený na hlavní okno</h2>

<p>Jakým způsobem je tedy možné problém s&nbsp;fokusem vyřešit? Ve skutečnosti
existuje hned několik způsobů, z&nbsp;nichž nejjednodušší spočívá v&nbsp;tom,
že události vytvořené po stisku klávesy budou zpracovávány (nebo chcete li
akceptovány) prvkem typu <strong>Rectangle</strong>, který představuje celou
plochu okna aplikace. V&nbsp;handlerech událostí použijeme jednoznačná ID
čtverců, kterým budeme nastavovat jejich barvy. Samozřejmě nesmíme zapomenout
na to, aby byl fokus skutečně přesunut na plochu okna aplikace (<strong>focus:
true</strong>), jinak nebudou události zpracovány (pokud totiž systém nezjistí,
že se událost zpracovala, jednoduše ji zahodí):</p>

<pre>
Keys.onDigit1Pressed: r1.color = "red"
Keys.onDigit2Pressed: r2.color = "cyan"
Keys.onDigit3Pressed: r3.color = "yellow"
</pre>

<p>Úplný kód tohoto příkladu vypadá následovně:</p>

<pre>
import QtQuick 1.0
&nbsp;
<strong>Rectangle</strong> {
    id: main
    width: 320
    height: 240
    color: "lightgray"
    <strong>Item</strong> {
       anchors.fill: parent
       <strong>focus: true</strong>
       Keys.onDigit1Pressed: r1.color = "red"
       Keys.onDigit2Pressed: r2.color = "cyan"
       Keys.onDigit3Pressed: r3.color = "yellow"
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r1
        width: 100
        height: 100
        color: "gray"
        anchors.verticalCenter: main.verticalCenter
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r2
        width: 100
        height: 100
        color: "gray"
        anchors.left: r1.right
    }
&nbsp;
    <strong>Rectangle</strong> {
        id: r3
        width: 100
        height: 100
        color: "gray"
        anchors.left: r2.right
        anchors.top: r2.bottom
    }
}
</pre>

<p>Oba dva přístupy je samozřejmě možné zkombinovat a reagovat tak jak na stisk
kláves, tak i na klik tlačítkem myši:</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Specifikace většího množství kroků při vzniku události</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Šestý demonstrační příklad &ndash; dvě reakce na stisk tlačítka myši</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Specifikace průhlednosti</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Nastavení pořadí objektů v&nbsp;Z-ové ose</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. Rotace prvků GUI</h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Obsah dalšího pokračování seriálu</h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů byly, podobně
jako tomu bylo i v&nbsp;předchozích článcích, uloženy do Git repositáře
dostupného na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Pokud nechcete klonovat celý repositář, můžete namísto toho použít odkazy na
jednotlivé příklady, které naleznete v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Adresa</th></tr>
<tr><td>1</td><td>165_load_qml_1.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/165_load_qml_1.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/165_load_qml_1.py</a></td></tr>
<tr><td>2</td><td>166_load_qml_2.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/166_load_qml_2.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/166_load_qml_2.py</a></td></tr>
<tr><td>3</td><td>167_load_qml_3.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/167_load_qml_3.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/167_load_qml_3.py</a></td></tr>
<tr><td>4</td><td>168_load_qml_4.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/168_load_qml_4.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/168_load_qml_4.py</a></td></tr>
<tr><td>5</td><td>169_load_qml_5.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/169_load_qml_5.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/169_load_qml_5.py</a></td></tr>
<tr><td>6</td><td>170_load_qml_6.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/170_load_qml_6.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/170_load_qml_6.py</a></td></tr>
<tr><td>7</td><td>171_load_qml_7.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/171_load_qml_7.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/171_load_qml_7.py</a></td></tr>
<tr><td>8</td><td>172_load_qml_8.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/172_load_qml_8.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/172_load_qml_8.py</a></td></tr>
<tr><td>9</td><td>173_load_qml_9.py</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/173_load_qml_9.py">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/173_load_qml_9.py</a></td></tr>
</table>

<p>Následuje tabulka s&nbsp;odkazy na soubory QML s&nbsp;popisem grafického
uživatelského rozhraní, které taktéž budete potřebovat:</p>

<table>
<tr><th>#</th><th>QML soubor</th><th>Adresa</th></tr>
<tr><td>1</td><td>165_load_qml_1.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/165_load_qml_1.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/165_load_qml_1.qml</a></td></tr>
<tr><td>2</td><td>166_load_qml_2.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/166_load_qml_2.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/166_load_qml_2.qml</a></td></tr>
<tr><td>3</td><td>167_load_qml_3.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/167_load_qml_3.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/167_load_qml_3.qml</a></td></tr>
<tr><td>4</td><td>168_load_qml_4.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/168_load_qml_4.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/168_load_qml_4.qml</a></td></tr>
<tr><td>5</td><td>169_load_qml_5.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/169_load_qml_5.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/169_load_qml_5.qml</a></td></tr>
<tr><td>6</td><td>170_load_qml_6.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/170_load_qml_6.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/170_load_qml_6.qml</a></td></tr>
<tr><td>7</td><td>171_load_qml_7.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/171_load_qml_7.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/171_load_qml_7.qml</a></td></tr>
<tr><td>8</td><td>172_load_qml_8.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/172_load_qml_8.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/172_load_qml_8.qml</a></td></tr>
<tr><td>9</td><td>173_load_qml_9.qml</td><td><a href="https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/173_load_qml_9.qml">https://github.com/tisnik/presentations/blob/master/Python_GUI/PySide/173_load_qml_9.qml</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>QML Tutorial<br />
<a href="https://pyside.github.io/docs/pyside/tutorials/qmltutorial/index.html">https://pyside.github.io/docs/pyside/tutorials/qmltutorial/index.html</a>
</li>

<li>QML Advanced Tutorial<br />
<a href="https://pyside.github.io/docs/pyside/tutorials/qmladvancedtutorial/index.html">https://pyside.github.io/docs/pyside/tutorials/qmladvancedtutorial/index.html</a>
</li>

<li>User interface markup language<br />
<a href="https://en.wikipedia.org/wiki/User_interface_markup_language">https://en.wikipedia.org/wiki/User_interface_markup_language</a>
</li>

<li>UsiXML<br />
<a href="https://en.wikipedia.org/wiki/UsiXML">https://en.wikipedia.org/wiki/UsiXML</a>
</li>

<li>Anchor-based Layout in QML<br />
<a href="https://het.as.utexas.edu/HET/Software/html/qml-anchor-layout.html#anchor-layout">https://het.as.utexas.edu/HET/Software/html/qml-anchor-layout.html#anchor-layout</a>
</li>

<li>PySide.QtDeclarative<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtDeclarative/index.html">https://pyside.github.io/docs/pyside/PySide/QtDeclarative/index.html</a>
</li>

<li>PySide and Qt Quick/QML Playground<br />
<a href="https://wiki.qt.io/PySide-and-QML-Playground">https://wiki.qt.io/PySide-and-QML-Playground</a>
</li>

<li>Hand Coded GUI Versus Qt Designer GUI<br />
<a href="https://stackoverflow.com/questions/387092/hand-coded-gui-versus-qt-designer-gui">https://stackoverflow.com/questions/387092/hand-coded-gui-versus-qt-designer-gui</a>
</li>

<li>Qt Creator Manual<br />
<a href="http://doc.qt.io/qtcreator/">http://doc.qt.io/qtcreator/</a>
</li>

<li>Qt Designer Manual<br />
<a href="http://doc.qt.io/qt-5/qtdesigner-manual.html">http://doc.qt.io/qt-5/qtdesigner-manual.html</a>
</li>

<li>Qt Creator (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Qt_Creator">https://en.wikipedia.org/wiki/Qt_Creator</a>
</li>

<li>QIODevice<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/QIODevice.html#PySide.QtCore.QIODevice">https://pyside.github.io/docs/pyside/PySide/QtCore/QIODevice.html#PySide.QtCore.QIODevice</a>
</li>

<li>QFile<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/QFile.html#PySide.QtCore.QFile">https://pyside.github.io/docs/pyside/PySide/QtCore/QFile.html#PySide.QtCore.QFile</a>
</li>

<li>QUiLoader<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtUiTools/QUiLoader.html#PySide.QtUiTools.PySide.QtUiTools.QUiLoader.load">https://pyside.github.io/docs/pyside/PySide/QtUiTools/QUiLoader.html#PySide.QtUiTools.PySide.QtUiTools.QUiLoader.load</a>
</li>

<li>QSvgWidget<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgWidget.html">https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgWidget.html</a>
</li>

<li>QByteArray<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/QByteArray.html">https://pyside.github.io/docs/pyside/PySide/QtCore/QByteArray.html</a>
</li>

<li>Python Bytes, Bytearray<br />
<a href="https://www.w3resource.com/python/python-bytes.php">https://www.w3resource.com/python/python-bytes.php</a>
</li>

<li>psep-0101.txt (mj.&nbsp;popis mapování typů Pythonu na třídy v&nbsp;PySide)<br />
<a href="https://github.com/techtonik/pseps/blob/master/psep-0101.txt">https://github.com/techtonik/pseps/blob/master/psep-0101.txt</a>
</li>

<li>QSvgRenderer<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgRenderer.html">https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgRenderer.html</a>
</li>

<li>QSvgGenerator<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgGenerator.html">https://pyside.github.io/docs/pyside/PySide/QtSvg/QSvgGenerator.html</a>
</li>

<li>QIcon<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html</a>
</li>

<li>PySide 1.2.1 documentation<br />
<a href="https://pyside.github.io/docs/pyside/index.html">https://pyside.github.io/docs/pyside/index.html</a>
</li>

<li>QStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QStyle.html</a>
</li>

<li>QCommonStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QCommonStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QCommonStyle.html</a>
</li>

<li>QPlastiqueStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QPlastiqueStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QPlastiqueStyle.html</a>
</li>

<li>QMacStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QMacStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QMacStyle.html</a>
</li>

<li>QCleanlooksStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QCleanlooksStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QCleanlooksStyle.html</a>
</li>

<li>QGtkStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QGtkStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QGtkStyle.html</a>
</li>

<li>QCDEStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QCDEStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QCDEStyle.html</a>
</li>

<li>QMotifStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QMotifStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QMotifStyle.html</a>
</li>

<li>QWindowsStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QWindowsStyle.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QWindowsStyle.html</a>
</li>

<li>QStyleFactory<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QStyleFactory.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QStyleFactory.html</a>
</li>

<li>QStyleOptionHeader<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QStyleOptionHeader.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QStyleOptionHeader.html</a>
</li>

<li>QAbstractSlider<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QAbstractSlider.html">https://pyside.github.io/docs/pyside/PySide/QtGui/AbstractSlider.html</a>
</li>

<li>QScrollBar<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QScrollBar.html">https://pyside.github.io/docs/pyside/PySide/QtGui/ScrollBar.html</a>
</li>

<li>QSlider<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QSlider.html">https://pyside.github.io/docs/pyside/PySide/QtGui/Slider.html</a>
</li>

<li>QDial<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QDial.html">https://pyside.github.io/docs/pyside/PySide/QtGui/Dial.html</a>
</li>

<li>QImage<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QImage.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QImage.html</a>
</li>

<li>QPixmap<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QPixmap.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QPixmap.html</a>
</li>

<li>QBitmap<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QBitmap.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QBitmap.html</a>
</li>

<li>QPaintDevice<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QPaintDevice.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QPaintDevice.html</a>
</li>

<li>QPicture<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QPicture.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QPicture.html</a>
</li>

<li>QPainter<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QPainter.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QPainter.html</a>
</li>

<li>QPainterPath<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QPainterPath.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QPainterPath.html</a>
</li>

<li>QGradient<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QGradient.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QGradient.html</a>
</li>

<li>QLinearGradient<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QLinearGradient.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QLinearGradient.html</a>
</li>

<li>QRadialGradient<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QRadialGradient.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QRadialGradient.html</a>
</li>

<li>QTableWidget<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QTableWidget.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QTableWidget.html</a>
</li>

<li>QTableWidgetItem<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QTableWidgetItem.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QTableWidgetItem.html</a>
</li>

<li>QTreeWidget<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QTreeWidget.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QTreeWidget.html</a>
</li>

<li>QTreeWidgetItem <br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QTreeWidgetItem.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QTreeWidgetItem.html</a>
</li>

<li>Afinní zobrazení<br />
<a href="https://cs.wikipedia.org/wiki/Afinn%C3%AD_zobrazen%C3%AD">https://cs.wikipedia.org/wiki/Afinn%C3%AD_zobrazen%C3%AD</a>
</li>

<li>Differences Between PySide and PyQt<br />
<a href="https://wiki.qt.io/Differences_Between_PySide_and_PyQt">https://wiki.qt.io/Differences_Between_PySide_and_PyQt</a>
</li>

<li>PySide 1.2.1 tutorials<br />
<a href="https://pyside.github.io/docs/pyside/tutorials/index.html">https://pyside.github.io/docs/pyside/tutorials/index.html</a>
</li>

<li>PySide tutorial<br />
<a href="http://zetcode.com/gui/pysidetutorial/">http://zetcode.com/gui/pysidetutorial/</a>
</li>

<li>Drawing in PySide<br />
<a href="http://zetcode.com/gui/pysidetutorial/drawing/">http://zetcode.com/gui/pysidetutorial/drawing/</a>
</li>

<li>Qt Core<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtCore/Qt.html">https://pyside.github.io/docs/pyside/PySide/QtCore/Qt.html</a>
</li>

<li>QLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QLayout.html</a>
</li>

<li>QValidator<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QValidator.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QValidator.html</a>
</li>

<li>QStackedLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QStackedLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QStackedLayout.html</a>
</li>

<li>QFormLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QFormLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QFormLayout.html</a>
</li>

<li>QBoxLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QBoxLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QBoxLayout.html</a>
</li>

<li>QHBoxLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QHBoxLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QHBoxLayout.html</a>
</li>

<li>QVBoxLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QVBoxLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QVBoxLayout.html</a>
</li>

<li>QGridLayout<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QGridLayout.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QGridLayout.html</a>
</li>

<li>QAction<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QAction.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QAction.html</a>
</li>

<li>QDialog<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QDialog.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QDialog.html</a>
</li>

<li>QMessageBox<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QMessageBox.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QMessageBox.html</a>
</li>

<li>QErrorMessage<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QErrorMessage.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QErrorMessage.html</a>
</li>

<li>QInputDialog<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QInputDialog.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QInputDialog.html</a>
</li>

<li>QColorDialog<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QColorDialog.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QColorDialog.html</a>
</li>

<li>QListWidget<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QListWidget.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QListWidget.html</a>
</li>

<li>Signals &amp; Slots<br />
<a href="http://doc.qt.io/qt-4.8/signalsandslots.html">http://doc.qt.io/qt-4.8/signalsandslots.html</a>
</li>

<li>Signals and Slots in PySide<br />
<a href="http://wiki.qt.io/Signals_and_Slots_in_PySide">http://wiki.qt.io/Signals_and_Slots_in_PySide</a>
</li>

<li>Intro to PySide/PyQt: Basic Widgets and Hello, World!<br />
<a href="http://www.pythoncentral.io/intro-to-pysidepyqt-basic-widgets-and-hello-world/">http://www.pythoncentral.io/intro-to-pysidepyqt-basic-widgets-and-hello-world/</a>
</li>

<li>QLineEdit<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QLineEdit.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QLineEdit.html</a>
</li>

<li>QTextEdit<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QTextEdit.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QTextEdit.html</a>
</li>

<li>QValidator<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QValidator.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QValidator.html</a>
</li>

<li>QIntValidator<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QIntValidator.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QIntValidator.html</a>
</li>

<li>QRegExpValidator<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QRegExpValidator.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QRegExpValidator.html</a>
</li>

<li>QWidget<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QWidget.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QWidget.html</a>
</li>

<li>QMainWindow<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QMainWindow.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QMainWindow.html</a>
</li>

<li>QLabel<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QLabel.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QLabel.html</a>
</li>

<li>QAbstractButton<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QAbstractButton.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QAbstractButton.html</a>
</li>

<li>QCheckBox<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QCheckBox.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QCheckBox.html</a>
</li>

<li>QRadioButton<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QRadioButton.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QRadioButton.html</a>
</li>

<li>QButtonGroup<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QButtonGroup.html">https://pyside.github.io/docs/pyside/PySide/QtGui/QButtonGroup.html</a>
</li>

<li>QFrame<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QFrame.html#PySide.QtGui.PySide.QtGui.QFrame">https://pyside.github.io/docs/pyside/PySide/QtGui/QFrame.html#PySide.QtGui.PySide.QtGui.QFrame</a>
</li>

<li>QFrame.frameStyle<br />
<a href="https://pyside.github.io/docs/pyside/PySide/QtGui/QFrame.html#PySide.QtGui.PySide.QtGui.QFrame.frameStyle">https://pyside.github.io/docs/pyside/PySide/QtGui/QFrame.html#PySide.QtGui.PySide.QtGui.QFrame.frameStyle</a>
</li>

<li>Leo editor<br />
<a href="http://leoeditor.com/">http://leoeditor.com/</a>
</li>

<li>IPython Qt Console aneb vylepšený pseudoterminál<br />
<a href="https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/#k06">https://mojefedora.cz/integrovana-vyvojova-prostredi-ve-fedore-ipython-a-ipython-notebook/#k06</a>
</li>

<li>Vývojová prostředí ve Fedoře (4. díl)<br />
<a href="https://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/">https://mojefedora.cz/vyvojova-prostredi-ve-fedore-4-dil/</a>
</li>

<li>Seriál Letní škola programovacího jazyka Logo<br />
<a href="http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/">http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/</a>
</li>

<li>Educational programming language<br />
<a href="http://en.wikipedia.org/wiki/Educational_programming_language">http://en.wikipedia.org/wiki/Educational_programming_language</a>
</li>

<li>Logo Tree Project:<br />
<a href="http://www.elica.net/download/papers/LogoTreeProject.pdf">http://www.elica.net/download/papers/LogoTreeProject.pdf</a>
</li>

<li>Hra Breakout napísaná v Tkinteri<br />
<a href="https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/">https://www.root.cz/clanky/hra-breakout-napisana-v-tkinteri/</a>
</li>

<li>Hra Snake naprogramovaná v Pythone s pomocou Tkinter<br />
<a href="https://www.root.cz/clanky/hra-snake-naprogramovana-v-pythone-s-pomocou-tkinter/">https://www.root.cz/clanky/hra-snake-naprogramovana-v-pythone-s-pomocou-tkinter/</a>
</li>

<li>24.1. turtle — Turtle graphics<br />
<a href="https://docs.python.org/3.5/library/turtle.html#module-turtle">https://docs.python.org/3.5/library/turtle.html#module-turtle</a>
</li>

<li>TkDND<br />
<a href="http://freecode.com/projects/tkdnd">http://freecode.com/projects/tkdnd</a>
</li>

<li>Python Tkinter Fonts<br />
<a href="https://www.tutorialspoint.com/python/tk_fonts.htm">https://www.tutorialspoint.com/python/tk_fonts.htm</a>
</li>

<li>The Tkinter Canvas Widget<br />
<a href="http://effbot.org/tkinterbook/canvas.htm">http://effbot.org/tkinterbook/canvas.htm</a>
</li>

<li>Ovládací prvek (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29">https://cs.wikipedia.org/wiki/Ovl%C3%A1dac%C3%AD_prvek_%28po%C4%8D%C3%ADta%C4%8D%29</a>
</li>

<li>Rezervovaná klíčová slova v&nbsp;Pythonu<br />
<a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords">https://docs.python.org/3/reference/lexical_analysis.html#keywords</a>
</li>

<li>TkDocs: Styles and Themes<br />
<a href="http://www.tkdocs.com/tutorial/styles.html">http://www.tkdocs.com/tutorial/styles.html</a>
</li>

<li>Drawing in Tkinter<br />
<a href="http://zetcode.com/gui/tkinter/drawing/">http://zetcode.com/gui/tkinter/drawing/</a>
</li>

<li>Changing ttk widget text color (StackOverflow)<br />
<a href="https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color">https://stackoverflow.com/questions/16240477/changing-ttk-widget-text-color</a>
</li>

<li>The Hitchhiker's Guide to Pyhton: GUI Applications<br />
<a href="http://docs.python-guide.org/en/latest/scenarios/gui/">http://docs.python-guide.org/en/latest/scenarios/gui/</a>
</li>

<li>7 Top Python GUI Frameworks for 2017<br />
<a href="http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/">http://insights.dice.com/2014/11/26/5-top-python-guis-for-2015/</a>
</li>

<li>GUI Programming in Python<br />
<a href="https://wiki.python.org/moin/GuiProgramming">https://wiki.python.org/moin/GuiProgramming</a>
</li>

<li>Cameron Laird's personal notes on Python GUIs<br />
<a href="http://phaseit.net/claird/comp.lang.python/python_GUI.html">http://phaseit.net/claird/comp.lang.python/python_GUI.html</a>
</li>

<li>Python GUI development<br />
<a href="http://pythoncentral.io/introduction-python-gui-development/">http://pythoncentral.io/introduction-python-gui-development/</a>
</li>

<li>Graphic User Interface FAQ<br />
<a href="https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq">https://docs.python.org/2/faq/gui.html#graphic-user-interface-faq</a>
</li>

<li>TkInter<br />
<a href="https://wiki.python.org/moin/TkInter">https://wiki.python.org/moin/TkInter</a>
</li>

<li>Tkinter 8.5 reference: a GUI for Python<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html">http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html</a>
</li>

<li>TkInter (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Tkinter">https://en.wikipedia.org/wiki/Tkinter</a>
</li>

<li>appJar<br />
<a href="http://appjar.info/">http://appjar.info/</a>
</li>

<li>appJar (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/AppJar">https://en.wikipedia.org/wiki/AppJar</a>
</li>

<li>appJar na Pythonhosted<br />
<a href="http://pythonhosted.org/appJar/">http://pythonhosted.org/appJar/</a>
</li>

<li>appJar widgets<br />
<a href="http://appjar.info/pythonWidgets/">http://appjar.info/pythonWidgets/</a>
</li>

<li>Stránky projektu PyGTK<br />
<a href="http://www.pygtk.org/">http://www.pygtk.org/</a>
</li>

<li>PyGTK (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PyGObject<br />
<a href="https://wiki.gnome.org/Projects/PyGObject">https://wiki.gnome.org/Projects/PyGObject</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Stránky projektu PyQt<br />
<a href="https://riverbankcomputing.com/software/pyqt/intro">https://riverbankcomputing.com/software/pyqt/intro</a>
</li>

<li>PyQt (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/PyGTK">https://cs.wikipedia.org/wiki/PyGTK</a>
</li>

<li>Stránky projektu PySide<br />
<a href="https://wiki.qt.io/PySide">https://wiki.qt.io/PySide</a>
</li>

<li>PySide (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/PySide">https://en.wikipedia.org/wiki/PySide</a>
</li>

<li>Stránky projektu Kivy<br />
<a href="https://kivy.org/#home">https://kivy.org/#home</a>
</li>

<li>Kivy (framework, Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Kivy_(framework)">https://en.wikipedia.org/wiki/Kivy_(framework)</a>
</li>

<li>QML Applications<br />
<a href="http://doc.qt.io/qt-5/qmlapplications.html">http://doc.qt.io/qt-5/qmlapplications.html</a>
</li>

<li>KDE<br />
<a href="https://www.kde.org/">https://www.kde.org/</a>
</li>

<li>Qt<br />
<a href="https://www.qt.io/">https://www.qt.io/</a>
</li>

<li>GNOME<br />
<a href="https://en.wikipedia.org/wiki/GNOME">https://en.wikipedia.org/wiki/GNOME</a>
</li>

<li>Category:Software that uses PyGTK<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGTK</a>
</li>

<li>Category:Software that uses PyGObject<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject">https://en.wikipedia.org/wiki/Category:Software_that_uses_PyGObject</a>
</li>

<li>Category:Software that uses wxWidgets<br />
<a href="https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets">https://en.wikipedia.org/wiki/Category:Software_that_uses_wxWidgets</a>
</li>

<li>GIO<br />
<a href="https://developer.gnome.org/gio/stable/">https://developer.gnome.org/gio/stable/</a>
</li>

<li>GStreamer<br />
<a href="https://gstreamer.freedesktop.org/">https://gstreamer.freedesktop.org/</a>
</li>

<li>GStreamer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/GStreamer">https://en.wikipedia.org/wiki/GStreamer</a>
</li>

<li>Wax Gui Toolkit<br />
<a href="https://wiki.python.org/moin/Wax">https://wiki.python.org/moin/Wax</a>
</li>

<li>Python Imaging Library (PIL)<br />
<a href="http://infohost.nmt.edu/tcc/help/pubs/pil/">http://infohost.nmt.edu/tcc/help/pubs/pil/</a>
</li>

<li>Why Pyjamas Isn’t a Good Framework for Web Apps (blogpost z&nbsp;roku 2012)<br />
<a href="http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/">http://blog.pyjeon.com/2012/07/29/why-pyjamas-isnt-a-good-framework-for-web-apps/</a>
</li>

<li>PySide na PyPi<br />
<a href="https://pypi.org/project/PySide/">https://pypi.org/project/PySide/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

