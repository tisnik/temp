<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Křivky popsané implicitní funkcí</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Křivky popsané implicitní funkcí</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve třetí části seriálu o křivkách, které můžeme nalézt v architektuře, přírodě i počítačové grafice, se primárně budeme zabývat těmi křivkami, které je možné popsat implicitní funkcí. Taktéž si ukážeme způsob animace křivek, což je technika umožňující studium jejich vlastností.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Křivky popsané implicitní funkcí</a></p>
<p><a href="#k02">2. Hodnoty implicitní funkce v&nbsp;3D grafu, průmět do z-ové roviny</a></p>
<p><a href="#k03">3. Zobrazení křivek popsaných implicitní funkcí</a></p>
<p><a href="#k04">4. Nejjednodušší, ovšem také jedna z&nbsp;nejdůležitějších křivek &ndash; přímka</a></p>
<p><a href="#k05">5. Kuželosečky popsané implicitní funkcí</a></p>
<p><a href="#k06">6. Elipsa v&nbsp;základní poloze a obecná elipsa</a></p>
<p><a href="#k07">7. Parabola</a></p>
<p><a href="#k08">8. Hyperbola s&nbsp;asymptotami otočenými o 45&deg; i s&nbsp;asymptotami rovnoběžnými s&nbsp;osami souřadného systému</a></p>
<p><a href="#k09">9. Od kuželoseček ke složitějším křivkám</a></p>
<p><a href="#k10">*** 10. Úloha z&nbsp;antického Řecka: průsečíky roviny s&nbsp;toroidem</a></p>
<p><a href="#k11">*** 11. Omyl vzniklý na základě geocentrismu &ndash; Cassiniho ovály (elipsy)</a></p>
<p><a href="#k12">*** 12. Tajemné eliptické křivky</a></p>
<p><a href="#k13">*** 13. Vytvoření katalogu eliptických křivek</a></p>
<p><a href="#k14">*** 14. Katalog eliptických křivek</a></p>
<p><a href="#k15">*** 15. Moderní pomůcka pro lepší studium křivek &ndash; animace</a></p>
<p><a href="#k16">*** 16. Animace průsečíku roviny s&nbsp;toroidem</a></p>
<p><a href="#k17">*** 17. Animace Cassiniho oválů s&nbsp;postupnou změnou vybraného koeficientu</a></p>
<p><a href="#k18">18. Obsah čtvrté části seriálu</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Křivky popsané implicitní funkcí</h2>

<p>Ve třetí části seriálu o křivkách, které můžeme nalézt v&nbsp;architektuře,
přírodě, ale i v&nbsp;moderní počítačové grafice, se primárně budeme zabývat
těmi křivkami, které je možné popsat implicitní funkcí (vyjádření
v&nbsp;implicitním tvaru):</p>

<p><strong>F(x,y)=0</strong></p>

<p>Jedná se přitom o jeden ze tří nejčastěji používaných způsobů matematického
popisu křivky ležící v&nbsp;rovině. Alternativní popisy jsou založeny na
explicitní funkci:</p>

<p><strong>y=f(x)</strong></p>

<p>která má ovšem některá omezení, například nedokáže popsat ani tak
jednoduchou křivku, jako je přímka rovnoběžná se souřadnou osou
<strong>y</strong>.</p>

<p>Třetí matematický popis křivek používá <i>bodovou funkci</i>. V&nbsp;tomto
případě jsou souřadnice na křivce vypočteny na základě parametru
<strong>t</strong> ze vztahu:</p>

<p><strong>x=f1(t)</strong><br />
<strong>y=f2(t)</strong></p>

<p>kde <strong>f1</strong> a <strong>f2</strong> jsou na sobě nezávislé
funkce.</p>

<p>Použití implicitní funkce pro popis křivek je nejobecnější a umožňuje nám
popsat i útvary, které zpočátku za křivky nebyly považovány. Příkladem mohou
být křivky vzniklé průsečíkem roviny a toroidu (anuloidu, oblounu).
V&nbsp;některých případech totiž tento řez vede ke vzniku dvou zdánlivě
samostatných uzavřených křivek (dnes samozřejmě známe nepřeberné množství
podobných křivek).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Hodnoty implicitní funkce v&nbsp;3D grafu, průmět do z-ové roviny</h2>

<p>Vraťme se ještě jednou ke vztahu s&nbsp;implicitní funkcí, která popisuje
křivku ležící v&nbsp;rovině:</p>

<p><strong>F(x,y)=0</strong></p>

<p>Pokud si z&nbsp;této rovnice vezmeme pouze levou část
<strong>F(x,y)</strong>, můžeme tuto funkci použít pro zobrazení 3D grafu:</p>

<p><strong>z=F(x,y)</strong></p>

<p>Trojrozměrné grafy je možné relativně bez problémů zobrazit i
s&nbsp;využitím knihovny Matplotlib (viz zvýrazněný kód s&nbsp;udáním typu
grafu). Příkladem může být zobrazení plochy odvozené od implicitní funkce
paraboly:</p>

<pre>
<i>"""Parabola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(0, 8, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># implicitní funkce paraboly</i>
<strong>f = 0.5</strong>
<strong>p = 2*f</strong>
<strong>z = x**2 - p*p*y</strong>
&nbsp;
fig = plt.figure()
ax = fig.gca(projection='3d')
&nbsp;
<i># zobrazení 3D grafu formou kontur</i>
ax.contour3D(x, y, z, 50, cmap='binary')
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Parabola', fontsize=15)
&nbsp;
<i># rozměry grafu ve směru osy x</i>
ax.set_xlabel('X')
ax.set_xlim(-4, 4)
&nbsp;
<i># rozměry grafu ve směru osy y</i>
ax.set_ylabel('Y')
ax.set_ylim(0, 8)
&nbsp;
<i># rozměry grafu ve směru osy z</i>
ax.set_zlabel('Z')
ax.set_zlim(0, 10)
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("parabola2.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 1: Funkce popisující parabolu v&nbsp;3D zobrazení.</i></p>

<p></p>

<pre>
<i>"""Parabola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(0, 8, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># implicitní funkce paraboly</i>
f = 0.5
p = 2*f
z = x**2 - p*p*y
&nbsp;
fig = plt.figure()
ax = fig.gca(projection='3d')
&nbsp;
<i># zobrazení 3D grafu formou kontur</i>
ax.contour3D(x, y, z, 50, cmap='binary')
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Parabola', fontsize=15)
&nbsp;
<i># kontura: průmět na rovinu x-y</i>
cset = ax.contour(x, y, z, zdir='z', offset=10)
&nbsp;
<i># rozměry grafu ve směru osy x</i>
ax.set_xlabel('X')
ax.set_xlim(-4, 4)
&nbsp;
<i># rozměry grafu ve směru osy y</i>
ax.set_ylabel('Y')
ax.set_ylim(0, 8)
&nbsp;
<i># rozměry grafu ve směru osy z</i>
ax.set_zlabel('Z')
ax.set_zlim(0, 10)
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("parabola2.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 2: Parabola a její průměty do z-ové roviny.</i></p>

<p><div class="rs-tip-major">Poznámka: z&nbsp;tohoto grafu již začíná být
patrné, jak jsou vlastně křivky zapsané implicitní funkcí
zobrazovány.</div></p>

<p>Ještě lépe je výše uvedený postup patrný na zobrazení 3D grafu funkce, která
je získána z&nbsp;implicitní funkce hyperboly. Nejprve si opět zobrazíme pouze
3D graf této funkce:</p>

<pre>
<i>"""Hyperbola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># implicitní funkce hyperboly</i>
a = 1
z = (x**2 - y**2)/a**2 - 1
&nbsp;
fig = plt.figure()
ax = fig.gca(projection='3d')
&nbsp;
<i># zobrazení 3D grafu formou plochy</i>
surface = ax.plot_surface(x, y, z, rstride=2, cstride=2, cmap=cm.coolwarm,
                          linewidth=0, antialiased=False)
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Hyperbola', fontsize=15)
&nbsp;
<i># rozměry grafu ve směru osy x</i>
ax.set_xlabel('X')
ax.set_xlim(-4, 4)
&nbsp;
<i># rozměry grafu ve směru osy y</i>
ax.set_ylabel('Y')
ax.set_ylim(-4, 4)
&nbsp;
<i># rozměry grafu ve směru osy z</i>
ax.set_zlabel('Z')
ax.set_zlim(-10, 10)
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("hyperbola.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p>S&nbsp;výsledkem:</p>

*** image ***
<p><i>Obrázek 3: Funkce popisující hyperbolu v&nbsp;3D zobrazení.</i></p>

<p>Nyní do tohoto grafu přidáme kontury promítnuté na z-ovou plochu:</p>

<pre>
<i>"""Hyperbola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.cm as cm
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># implicitní funkce hyperboly</i>
a = 1
z = (x**2 - y**2)/a**2 - 1
&nbsp;
fig = plt.figure()
ax = fig.gca(projection='3d')
&nbsp;
<i># zobrazení 3D grafu formou plochy</i>
surface = ax.plot_surface(x, y, z, rstride=2, cstride=2, cmap=cm.coolwarm,
                          linewidth=0, antialiased=False)
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Hyperbola', fontsize=15)
&nbsp;
<i># kontura: průmět na rovinu x-y</i>
cset = ax.contour(x, y, z, zdir='z', offset=10)
&nbsp;
<i># rozměry grafu ve směru osy x</i>
ax.set_xlabel('X')
ax.set_xlim(-4, 4)
&nbsp;
<i># rozměry grafu ve směru osy y</i>
ax.set_ylabel('Y')
ax.set_ylim(-4, 4)
&nbsp;
<i># rozměry grafu ve směru osy z</i>
ax.set_zlabel('Z')
ax.set_zlim(-10, 10)
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("hyperbola.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p>S&nbsp;tímto výsledkem:</p>

*** image ***
<p><i>Obrázek 4: Hyperbola a její průměty do z-ové roviny.</i></p>

<p><div class="rs-tip-major">Poznámka: z&nbsp;průmětů je patrné, že se jedná o
různé varianty hyperbolických křivek. &bdquo;Pravá&ldquo; hyperbola přitom
odpovídá z-ové hodnotě nula.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Zobrazení křivek popsaných implicitní funkcí</h2>

<pre>
<i>"""Implicitně zadaná křivka."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-3, 3, 50)
y = np.linspace(-3, 3, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># implicitní funkce</i>
z = x**2-2*x*y+y**2-2*x
&nbsp;
<i># hodnoty, které se mají zvýraznit na isoploše</i>
levels = np.arange(1, 5, 0.5)
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Implicit curve', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("implicit.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p>Samozřejmě nám nic nebrání použít i složitější funkci, tentokrát založenou
na goniometrických funkcích:</p>

<pre>
<i># implicitní funkce</i>
z = np.sin(x**2) - np.cos(y**2)
</pre>

<p>S&nbsp;výsledkem:</p>

*** image ***
<p><i>Obrázek 5: Křivky popsané implicitní funkcí.</i></p>

<p></p>

<pre>
<i>"""Implicitně zadaná křivka."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-5, 5, 150)
y = np.linspace(-5, 5, 150)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># implicitní funkce</i>
z = np.sin(x**2) - np.cos(y**2)
&nbsp;
<i># hodnoty, které se mají zvýraznit na isoploše</i>
levels = [-0.5, 0, 0.5]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Implicit curve', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("implicit3.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p><div class="rs-tip-major">Poznámka: pro zobrazení jediné křivky je nutné do
proměnné <strong>levels</strong> vložit jedinou hodnotu, a to konkrétně nulu.
To si ostatně ukážeme na všech dalších demonstračních příkladech.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Kuželosečky popsané implicitní funkcí</h2>

<p>Všechny kuželosečky je možné popsat implicitní funkcí, což si ihned ukážeme
na té nejjednodušší kuželosečce &ndash; kružnici &ndash; která je popsána všem
známou funkcí (která mimochodem do značné míry souvisí s&nbsp;Pythagorovou
větou):</p>

<p><strong></p>x<sup>2</sup>+y<sup>2</sup>-r<sup>2</sup>=0</strong></p>

<p>kde <strong>r</strong> je poloměr kružnice.</p>

<p>Kružnici lze s&nbsp;využitím tohoto vzorce zobrazit velmi snadno:</p>

<pre>
<i>"""Kružnice zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-2, 2, 10)
y = np.linspace(-2, 2, 10)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># koeficienty kružnice</i>
<strong>r = 1</strong>
&nbsp;
<i># implicitní funkce kružnice</i>
<strong>z = x**2 + y ** 2 - r ** 2</strong>
&nbsp;
<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Kružnice', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("circle1.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

<p>S&nbsp;tímto výsledkem:</p>

*** image ***
<p><i>Obrázek 7: Kružnice při volbě malé hustoty mřížky).</i></p>

*** image ***
<p><i>Obrázek 8: Kružnice při volbě větší hustoty mřížky).</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Elipsa v&nbsp;základní poloze a obecná elipsa</h2>

<p>Další kuželosečkou je elipsa. Mimochodem &ndash; důkaz toho, že řezem roviny
a kužele vznikne skutečně elipsa (kužel přece nemá tak pravidelný plášť jako
válec, takže by na první pohled mělo vzniknou nějaké &bdquo;vajíčko&ldquo;), je
poměrně elegantní a můžete ho nalézt na stránce <a
href="https://infinityisreallybig.com/2019/02/08/why-does-slicing-a-cone-give-an-ellipse/">Why
Does Slicing a Cone Give an Ellipse?</a>, i s&nbsp;odkazy na videa
s&nbsp;popisem doplněným animacemi.</p>

<p>Elipsa je popsána implicitní funkcí:</p>

<p><strong>x<sup>2</sup>/a<sup>2</sup> + y<sup>2</sup>/b<sup>2</sup> - 1 = 0</strong></p>

<p>kde <strong>a</strong> a <strong>b</strong> jsou poměry obou poloos.</p>

<p><div class="rs-tip-major">Poznámka: pokud <strong>a=b</strong>, pak můžeme
dosadit <strong>r=a=b</strong> a vzorec se po vynásobení hodnotou
<strong>r<sup>2</sup></strong> změní na popis kružnici implicitní
funkcí.</div></p>

<p>Podívejme se nyní na způsob vykreslení elipsy popsané implicitní funkcí:</p>

<pre>
<i>"""Elipsa zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># koeficienty elipsy</i>
<strong>a = 3</strong>
<strong>b = 2</strong>
&nbsp;
<i># implicitní funkce elipsy</i>
<strong>z = x**2/a**2 + y ** 2/b**2 - 1</strong>
&nbsp;
<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Elipsa', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("ellipse1.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 9: Osově symetrická Elipsa.</i></p>

<p>V&nbsp;případě, že se má vykreslit obecná elipsa (libovolně natočená a
posunutá), je implicitní funkce složitější, což je ostatně velmi dobře patrné
z&nbsp;následujícího skriptu:</p>

<pre>
<i>"""Obecná elipsa zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># parametry obecné elipsy</i>
<strong>x0 = 0</strong>
<strong>y0 = 0</strong>
<strong>a = 2</strong>
<strong>b = 3</strong>
<strong>phi = -np.pi/4</strong>
&nbsp;
<i># pomocné členy</i>
<strong>a2 = a**2</strong>
<strong>b2 = b**2</strong>
<strong>sin2 = np.sin(phi)**2</strong>
<strong>cos2 = np.cos(phi)**2</strong>
&nbsp;
<strong>A = a2 * sin2 + b2 * cos2</strong>
<strong>B = 2*(b2-a2)*np.sin(phi)*np.cos(phi)</strong>
<strong>C = a2*cos2 + b2*sin2</strong>
<strong>D = -2*A*x0 - B*y0</strong>
<strong>E = -B*x0 - 2*C*y0</strong>
<strong>F = A*x0**2 + B*x0*y0 + C*y0**2 - a2*b2</strong>
&nbsp;
<i># implicitní funkce obecné elipsy</i>
<strong>z = A* x**2 + B * x * y + C * y**2 + D * x + E * y + F</strong>
&nbsp;
<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Elipsa', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("ellipse3.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 12: Obecná elipsa.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Parabola</h2>

<p>Další kuželosečkou známou již v&nbsp;antickém Řecku je parabola, kterou lze
implicitní funkcí popsat následovně:</p>

<p><strong>x<sup>2</sup> - 2py = 0</strong></p>

<p>kde <strong>p=2f</strong></p>

<p><div class="rs-tip-major">Poznámka: opět je možné snadno odvodit, které
koeficienty u obecné rovnice kuželosečky byly vynechány z&nbsp;toho důvodu, že
jsou nulové, nebo mají hodnotu 1.</div></p>

<p>Následuje příklad skriptu pro vykreslení paraboly:</p>

<pre>
<i>"""Parabola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(0, 8, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># koeficienty paraboly</i>
<strong>f = 0.5</strong>
<strong>p = 2*f</strong>
&nbsp;
<i># implicitní funkce paraboly</i>
<strong>z = x**2 - p*p*y</strong>
&nbsp;
<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Parabola', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("parabola1.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 11: Parabola.</i></p>


<p><a name="k08"></a></p>
<h2 id="k08">8. Hyperbola s&nbsp;asymptotami otočenými o 45&deg; i s&nbsp;asymptotami rovnoběžnými s&nbsp;osami souřadného systému</h2>

<p>Poslední běžnou (nesingulární) kuželosečkou je hyperbola. Můžeme ji
vykreslit otočenou o 45&deg; (její asymptoty tedy svírají s&nbsp;osami
souřadného systému tento úhel) s&nbsp;využitím jednoduchého vzorečku:</p>

<p>(<strong>x<sup>2</sup> - y<sup>2</sup>)/a<sup>2</sup> - 1 = 0</strong></p>

<p><div class="rs-tip-major">Poznámka: opět se jedná o vhodným způsobem
upravený a zjednodušený vzorec pro obecnou kuželosečku.</div></p>

<p>Viz též následující skript pro vykreslení hyperboly:</p>

<pre>
<i>"""Hyperbola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># koeficient hyperboly</i>
<strong>a = 1</strong>
&nbsp;
<i># implicitní funkce hyperboly</i>
<strong>z = (x**2 - y**2)/a**2 - 1</strong>
&nbsp;
<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Hyperbola', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("hyperbola1.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 12: Hyperbola otočená o 45&deg;.</i></p>

<p>Pro neotočenou hyperbolu ovšem použijeme odlišný vzorec:</p>

<p><strong>a/x - y = 0</strong></p>

<p>Opět viz následující skript:</p>

<pre>
<i>"""Hyperbola zadaná implicitní funkcí."""</i>
&nbsp;
import numpy as np
import matplotlib.pyplot as plt
&nbsp;
<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-10, 10, 50)
y = np.linspace(-10, 10, 50)
&nbsp;
<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)
&nbsp;
<i># koeficient hyperboly</i>
<strong>a = 4</strong>
&nbsp;
<i># implicitní funkce hyperboly</i>
<strong>z = a/x - y</strong>
&nbsp;
<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]
&nbsp;
<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))
&nbsp;
<i># titulek grafu</i>
fig.suptitle('Hyperbola', fontsize=15)
&nbsp;
<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)
&nbsp;
<i># zobrazit mřížku</i>
ax.grid(True)
&nbsp;
<i># zachovat poměr stran</i>
ax.axis('scaled')
&nbsp;
<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')
&nbsp;
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("hyperbola2.png")
&nbsp;
<i># zobrazení grafu</i>
plt.show()
</pre>

*** image ***
<p><i>Obrázek 13: Hyperbola tak, jak je zobrazena ve škole.</i></p>

<p><div class="rs-tip-major">Poznámka: vzorec, který byl použit tentokrát,
obsahuje dělení nulou pro <strong>x=0</strong>, což vede ke vzniku (téměř)
svislé čáry v&nbsp;grafu. U reálné hyperboly tato čára (ve skutečností přímka
od y=-&infin; do y=&infin;) neexistuje. Na toto omezení Matplotlibu je
zapotřebí myslet i u vykreslování složitějších křivek.</div></p>


<p><a name="k05"></a></p>
<h2 id="k05">5. Od kuželoseček ke složitějším křivkám</h2>

<p>V&nbsp;úvodní části tohoto seriálu jsme si mj.&nbsp;řekli, že kuželosečky,
tedy křivky získané průnikem roviny a kužele, byly zkoumány již v&nbsp;antickém
Řecku. Tyto křivky objevil Menaechmus okolo roku 350 př.n.l. a na jeho spisy
navázal Eukleidés a později i Apollónios z&nbsp;Pergy (přibližně 200 př.n.l.).
Právě na studiu kuželoseček se ukázalo, že křivky nejsou pouze &bdquo;křivé
čáry&ldquo; vytvořené jediným tahem pera, protože hyperbola má dvě oddělené
větve (ty objevil právě Apollónios, zatímco Eukleidés pracoval pouze
s&nbsp;jednou větví).</p>

*** image ***
<p><i>Obrázek 16: Nesingulární kuželosečky, zde pro zjednodušení nakresleny na
jediné &bdquo;větvi&ldquo; kužele, takže i hyperbola zde má jedinou
větev.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Úloha z&nbsp;antického Řecka: průsečíky roviny s&nbsp;toroidem</h2>

<p>V&nbsp;antickém Řecku se učenci nejdříve zabývali geometrickými konstrukcemi
s&nbsp;kružítkem a pravítkem, posléze zkoumali i vlastnosti všech čtyř
kuželoseček. Ovšem již okolo roku 150 př.n.l. zkoumal učenec Perseus (nikoli
ovšem bájný hrdina) průsečíky roviny s&nbsp;toroidem (anuloidem), tedy
s&nbsp;tvarem, který mají i &bdquo;donuty&ldquo; milované Homerem Simpsonem.
Perseus tak navázal na práci Apollónia z&nbsp;Perga, jenž zkoumal kuželosečky.
Průsečíky roviny a toroidu mají složitější tvar, než běžné kuželosečky, protože
v&nbsp;některých případech se toroid rozřízne tak, že vznikne křivka
s&nbsp;dvojicí oddělených smyček, což vedlo k&nbsp;obecnějšímu pohledu na
křivky:</p>

*** image ***
<p><i>Obrázek 17: Řezy toroidem/anuloidem.</i></p>

<p></p>

<pre>
<i>"""Křivka získaná řezem toru."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)

<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)

<i># parametry toru</i>
a = 1
b = 2
c = 0

<i># pomocné členy</i>
d = 2*(a**2+b**2-c**2)
e = 2*(a**2-b**2-c**2)
f = -(a+b+c)*(a+b-c)*(a-b+c)*(a-b-c)

<i># implicitní funkce křivky</i>
z = (x**2+y**2)**2 - d*x**2 - e*y**2 - f

<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Spiric', fontsize=15)

<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)

<i># zobrazit mřížku</i>
ax.grid(True)

<i># zachovat poměr stran</i>
ax.axis('scaled')

<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("spiric1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Křivka získaná řezem toru."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 150)
y = np.linspace(-4, 4, 150)

<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)

<i># parametry toru</i>
a = 1
b = 2
c = 0.99

<i># pomocné členy</i>
d = 2*(a**2+b**2-c**2)
e = 2*(a**2-b**2-c**2)
f = -(a+b+c)*(a+b-c)*(a-b+c)*(a-b-c)

<i># implicitní funkce křivky</i>
z = (x**2+y**2)**2 - d*x**2 - e*y**2 - f

<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Spiric', fontsize=15)

<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)

<i># zobrazit mřížku</i>
ax.grid(True)

<i># zachovat poměr stran</i>
ax.axis('scaled')

<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("spiric2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Křivka získaná řezem toru."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 150)
y = np.linspace(-4, 4, 150)

<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)

<i># parametry toru</i>
a = 1
b = 2
c = 1.00

<i># pomocné členy</i>
d = 2*(a**2+b**2-c**2)
e = 2*(a**2-b**2-c**2)
f = -(a+b+c)*(a+b-c)*(a-b+c)*(a-b-c)

<i># implicitní funkce křivky</i>
z = (x**2+y**2)**2 - d*x**2 - e*y**2 - f

<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Spiric', fontsize=15)

<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)

<i># zobrazit mřížku</i>
ax.grid(True)

<i># zachovat poměr stran</i>
ax.axis('scaled')

<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("spiric2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Omyl vzniklý na základě geocentrismu &ndash; Cassiniho ovály (elipsy)</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. Tajemné eliptické křivky</h2>

<pre>
<i>"""Eliptická křivka."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-2, 2, 50)
y = np.linspace(-2, 2, 50)

<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)

<i># koeficienty eliptické křivky</i>
a = -2.0
b = 0.0

<i># implicitní funkce eliptické křivky</i>
z = x**3 + a*x + b - y**2

<i># hodnota, která se má zvýraznit na isoploše</i>
levels = [0]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Eliptická křivka', fontsize=15)

<i># vykreslení implicitní funkce</i>
ax.contour(x, y, z, levels)

<i># zobrazit mřížku</i>
ax.grid(True)

<i># zachovat poměr stran</i>
ax.axis('scaled')

<i># popisek os</i>
plt.xlabel('Osa x')
plt.ylabel('Osa y')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("elliptic1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Vytvoření katalogu eliptických křivek</h2>

<pre>
<i>"""Katalog eliptických křivek."""</i>

import numpy as np
import matplotlib.pyplot as plt

def plot_elliptic_curve(a, b):
    # příprava vektorů pro konstrukci mřížky
    x = np.linspace(-2, 2, 150)
    y = np.linspace(-2, 2, 150)

    # konstrukce mřížky
    x, y = np.meshgrid(x, y)

    # implicitní funkce eliptické křivky
    z = x**3 + a*x + b - y**2

    # hodnota, která se má zvýraznit na isoploše
    levels = [0]

    # rozměry grafu při uložení: 640x480 pixelů
    fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

    # titulek grafu
    fig.suptitle('Eliptická křivka', fontsize=15)

    # vykreslení implicitní funkce
    ax.contour(x, y, z, levels)

    # zobrazit mřížku
    ax.grid(True)

    # zachovat poměr stran
    ax.axis('scaled')

    # popisek os
    plt.xlabel('Osa x')
    plt.ylabel('Osa y')

    # uložení grafu do rastrového obrázku
    plt.savefig("elliptic_{}_{}.png".format(a, b))


for b in range(-1, 3):
    for a in range(-2, 2):
        plot_elliptic_curve(a, b)
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Katalog eliptických křivek</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Moderní pomůcka pro lepší studium křivek &ndash; animace</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Animace průsečíku roviny s&nbsp;toroidem</h2>

<pre>
<i>"""Křivka získaná řezem toru."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-4, 4, 50)
y = np.linspace(-4, 4, 50)

<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)

<i># parametry toru</i>
a = 1
b = 2
c1 = 0.0
c2 = 2.0

frame = 1
for c in np.linspace(c1, c2, 25):

    # pomocné členy
    d = 2*(a**2+b**2-c**2)
    e = 2*(a**2-b**2-c**2)
    f = -(a+b+c)*(a+b-c)*(a-b+c)*(a-b-c)

    # implicitní funkce křivky
    z = (x**2+y**2)**2 - d*x**2 - e*y**2 - f

    # hodnota, která se má zvýraznit na isoploše
    levels = [0]

    # rozměry grafu při uložení: 640x480 pixelů
    fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

    # titulek grafu
    fig.suptitle('Spiric', fontsize=15)

    # vykreslení implicitní funkce
    ax.contour(x, y, z, levels)

    # zobrazit mřížku
    ax.grid(True)

    # zachovat poměr stran
    ax.axis('scaled')

    # popisek os
    plt.xlabel('Osa x')
    plt.ylabel('Osa y')

    # uložení grafu do rastrového obrázku
    plt.savefig("spiric_anim_{:02}.png".format(frame))

    # další snímek
    frame += 1
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Animace Cassiniho oválů s&nbsp;postupnou změnou vybraného koeficientu</h2>

<p>S&nbsp;křivkou nazvanou <i>Cassiniho ovál</i> či taktéž <i>Cassiniho elipsa</i> jsme se již setkali <a href="#k11">v&nbsp;jedenácté kapitole</a>. Připomeňme si, že se jedná o křivku, jejíž tvar je určen dvěma koeficienty nazvanými <strong>a</strong> a <strong>c</strong></p>

<pre>
<i>"""Cassiniho ovál zadaný implicitní funkcí."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># příprava vektorů pro konstrukci mřížky</i>
x = np.linspace(-2, 2, 150)
y = np.linspace(-2, 2, 150)

<i># konstrukce mřížky</i>
x, y = np.meshgrid(x, y)

<i># koeficienty Cassiniho oválu</i>
a = 1.0
c1 = 0.90
c2 = 1.10

frame = 1
for c in np.linspace(c1, c2, 25):

    # implicitní funkce Cassiniho oválu
    z = (x**2 + y ** 2) ** 2 - 2*c*(x**2 - y**2) - (a**4 - c**4)

    # hodnota, která se má zvýraznit na isoploše
    levels = [0]

    # rozměry grafu při uložení: 640x480 pixelů
    fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

    # titulek grafu
    fig.suptitle('Cassiniho ovál', fontsize=15)

    # vykreslení implicitní funkce
    ax.contour(x, y, z, levels)

    # zobrazit mřížku
    ax.grid(True)

    # zachovat poměr stran
    ax.axis('scaled')

    # popisek os
    plt.xlabel('Osa x')
    plt.ylabel('Osa y')

    # uložení grafu do rastrového obrázku
    plt.savefig("cassini_anim_{:02}.png".format(frame))

    # další snímek
    frame += 1
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Kombinace knihoven Matplotlib a MoviePy</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Obsah čtvrté části seriálu</h2>

<p>Ve čtvrté části seriálu o křivkách, které můžeme nalézt v&nbsp;architektuře,
přírodě i v&nbsp;počítačové grafice, se (konečně) zaměříme právě na oblast
počítačové grafiky a designu. Budeme se totiž zabývat parametrickými křivkami,
které mají v&nbsp;moderní počítačové grafice nezastupitelné místo. Jedná se jak
o křivky interpolační, tak i o křivky aproximační. Mezi parametrické křivky
využívané v&nbsp;grafice patří například Coonsovy kubiky, dále slavné Bézierovy
křivky, dále B-spline, jejich zobecnění známé pod zkratkou NURBS atd. Ovšem
nesmíme zapomenout ani na křivky používané při animacích. Tyto křivky umožňují,
aby se automaticky dopočítaly parametry animace mezi klíčovými snímky. Na tyto
křivky jsou kladeny odlišné nároky, než na křivky využívané v&nbsp;designu
(resp.&nbsp;přesněji ve 2D designu popř.&nbsp;při návrhu takzvaných plátů).</p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny předminule, minule i dnes popisované demonstrační příklady určené
pro Python 3 a knihovnu Matplotlib byly uloženy do Git repositáře, který je
dostupný na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Příklady si můžete v&nbsp;případě potřeby stáhnout i jednotlivě bez nutnosti
klonovat celý (dnes již poměrně rozsáhlý) repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>line.py</td><td>úsečka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/line.py">https://github.com/tisnik/presentations/blob/master/curves/line.py</a></td></tr>
<tr><td> 2</td><td>parabola.py</td><td>parabola</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/parabola.py">https://github.com/tisnik/presentations/blob/master/curves/parabola.py</a></td></tr>
<tr><td> 3</td><td>hyperbola.py</td><td>hyperbola</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hyperbola.py">https://github.com/tisnik/presentations/blob/master/curves/hyperbola.py</a></td></tr>
<tr><td> 4</td><td>ellipse_parametric.py</td><td>parametricky zadaná elipsa</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/ellipse_parametric.py">https://github.com/tisnik/presentations/blob/master/curves/ellipse_parametric.py</a></td></tr>
<tr><td> 5</td><td>ellipse_general.py</td><td>obecná elipsa</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/ellipse_general.py">https://github.com/tisnik/presentations/blob/master/curves/ellipse_general.py</a></td></tr>
<tr><td> 6</td><td>circle_parametric.py</td><td>parametricky zadaná kružnice</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/circle_parametric.py">https://github.com/tisnik/presentations/blob/master/curves/circle_parametric.py</a></td></tr>
<tr><td> 7</td><td>circle_polar.py</td><td>polární souřadnice při kreslení kružnice</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/circle_polar.py">https://github.com/tisnik/presentations/blob/master/curves/circle_polar.py</a></td></tr>
<tr><td> 8</td><td>archimedes_spiral.py</td><td>Archimédova spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/archimedes_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/archimedes_spiral.py</a></td></tr>
<tr><td> 9</td><td>fermats_spiral.py</td><td>Fermatova spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/fermats_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/fermats_spiral.py</a></td></tr>
<tr><td>10</td><td>hyperbolic_spiral.py</td><td>Hyperbolická spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hyperbolic_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/hyperbolic_spiral.py</a></td></tr>
<tr><td>11</td><td>logarithmic_spiral.py</td><td>Logaritmická spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/logarithmic_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/logarithmic_spiral.py</a></td></tr>
<tr><td>12</td><td>parabola_catenary_1.py</td><td>parabola vs. řetězovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_1.py">https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_1.py</a></td></tr>
<tr><td>13</td><td>parabola_catenary_2.py</td><td>parabola vs. řetězovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_2.py">https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_2.py</a></td></tr>
<tr><td>14</td><td>cardioid.py</td><td>srdcovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/cardioid.py">https://github.com/tisnik/presentations/blob/master/curves/cardioid.py</a></td></tr>
<tr><td>15</td><td>catenary.py</td><td>řetězovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/catenary.py">https://github.com/tisnik/presentations/blob/master/curves/catenary.py</a></td></tr>
<tr><td>17</td><td>fresnel.py</td><td>Fresnelův integrál</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/fresnel.py">https://github.com/tisnik/presentations/blob/master/curves/fresnel.py</a></td></tr>
<tr><td>19</td><td>lissajous.py</td><td>Lissajousův obrazec</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/lissajous.py">https://github.com/tisnik/presentations/blob/master/curves/lissajous.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>20</td><td>superellipse1.py</td><td>superelipsa</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/superellipse1.py">https://github.com/tisnik/presentations/blob/master/curves/superellipse1.py</a></td></tr>
<tr><td>21</td><td>superellipse2.py</td><td>superelipsa, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/superellipse2.py">https://github.com/tisnik/presentations/blob/master/curves/superellipse2.py</a></td></tr>
<tr><td>22</td><td>cycloid.py</td><td>cykloida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/cycloid.py">https://github.com/tisnik/presentations/blob/master/curves/cycloid.py</a></td></tr>
<tr><td>23</td><td>epicycloid1.py</td><td>epicykloida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/epicycloid1.py">https://github.com/tisnik/presentations/blob/master/curves/epicycloid1.py</a></td></tr>
<tr><td>24</td><td>epicycloid2.py</td><td>epicykloida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/epicycloid2.py">https://github.com/tisnik/presentations/blob/master/curves/epicycloid2.py</a></td></tr>
<tr><td>25</td><td>hypocycloid1.py</td><td>hypocykloida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypocycloid1.py">https://github.com/tisnik/presentations/blob/master/curves/hypocycloid1.py</a></td></tr>
<tr><td>26</td><td>hypocycloid2.py</td><td>hypocykloida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypocycloid2.py">https://github.com/tisnik/presentations/blob/master/curves/hypocycloid2.py</a></td></tr>
<tr><td>27</td><td>hypotrochoid1.py</td><td>hypotrochoida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid1.py">https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid1.py</a></td></tr>
<tr><td>28</td><td>hypotrochoid2.py</td><td>hypotrochoida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid2.py">https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid2.py</a></td></tr>
<tr><td>29</td><td>hypotrochoid3.py</td><td>hypotrochoida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid3.py">https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid3.py</a></td></tr>
<tr><td>30</td><td>implicit/implicit.py</td><td>křivka zadaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/implicit.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/implicit.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>31</td><td>3d_plot/parabola1A.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1A.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1A.py</a></td></tr>
<tr><td>32</td><td>3d_plot/parabola1B.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1B.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1B.py</a></td></tr>
<tr><td>33</td><td>3d_plot/parabola2A.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2A.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2A.py</a></td></tr>
<tr><td>34</td><td>3d_plot/parabola2B.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2B.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2B.py</a></td></tr>
<tr><td>35</td><td>3d_plot/hyperbolaA.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaA.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaA.py</a></td></tr>
<tr><td>36</td><td>3d_plot/hyperbolaB.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaB.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaB.py</a></td></tr>
<tr><td>37</td><td>3d_plot/sin_cos_1.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_1.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_1.py</a></td></tr>
<tr><td>38</td><td>3d_plot/sin_cos_2.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_2.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_2.py</a></td></tr>
<tr><td>39</td><td>anim/cassini_anim.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/anim/cassini_anim.py">https://github.com/tisnik/presentations/blob/master/curves/anim/cassini_anim.py</a></td></tr>
<tr><td>40</td><td>anim/spiric_anim.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/anim/spiric_anim.py">https://github.com/tisnik/presentations/blob/master/curves/anim/spiric_anim.py</a></td></tr>
<tr><td>41</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>42</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>43</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>44</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>45</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>46</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>47</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>48</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>49</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>50</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>51</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Famous Curves Index<br />
<a href="https://mathshistory.st-andrews.ac.uk/Curves/">https://mathshistory.st-andrews.ac.uk/Curves/</a>
</li>

<li>Curve (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Curve">https://en.wikipedia.org/wiki/Curve</a>
</li>

<li>Mathematical curves<br />
<a href="https://www.2dcurves.com/index.html">https://www.2dcurves.com/index.html</a>
</li>

<li>Curves (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/topics/Curves.html">https://mathworld.wolfram.com/topics/Curves.html</a>
</li>

<li>Smooth Curve (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/SmoothCurve.html">https://mathworld.wolfram.com/SmoothCurve.html</a>
</li>

<li>Spirals (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/topics/Spirals.html">https://mathworld.wolfram.com/topics/Spirals.html</a>
</li>

<li>An Interactive Introduction to Splines<br />
<a href="https://ibiblio.org/e-notes/Splines/Intro.htm">https://ibiblio.org/e-notes/Splines/Intro.htm</a>
</li>

<li>Parabola<br />
<a href="https://www.2dcurves.com/conicsection/conicsectionp.html">https://www.2dcurves.com/conicsection/conicsectionp.html</a>
</li>

<li>Hyperbola<br />
<a href="https://www.2dcurves.com/conicsection/conicsectionh.html">https://www.2dcurves.com/conicsection/conicsectionh.html</a>
</li>

<li>Dioklova kisoida<br />
<a href="https://cs.wikipedia.org/wiki/Dioklova_kisoida">https://cs.wikipedia.org/wiki/Dioklova_kisoida</a>
</li>

<li>Archimédova spirála<br />
<a href="https://cs.wikipedia.org/wiki/Archim%C3%A9dova_spir%C3%A1la">https://cs.wikipedia.org/wiki/Archim%C3%A9dova_spir%C3%A1la</a>
</li>

<li>Conchoid (mathematics)<br />
<a href="https://en.wikipedia.org/wiki/Conchoid_(mathematics)">https://en.wikipedia.org/wiki/Conchoid_(mathematics)</a>
</li>

<li>Algebraic curve<br />
<a href="https://en.wikipedia.org/wiki/Algebraic_curve">https://en.wikipedia.org/wiki/Algebraic_curve</a>
</li>

<li>Transcendental curve<br />
<a href="https://en.wikipedia.org/wiki/Transcendental_curve">https://en.wikipedia.org/wiki/Transcendental_curve</a>
</li>

<li>Spiral<br />
<a href="https://en.wikipedia.org/wiki/Spiral">https://en.wikipedia.org/wiki/Spiral</a>
</li>

<li>List of spirals<br />
<a href="https://en.wikipedia.org/wiki/List_of_spirals">https://en.wikipedia.org/wiki/List_of_spirals</a>
</li>

<li>Hyperbolická spirála<br />
<a href="https://cs.wikipedia.org/wiki/Hyperbolick%C3%A1_spir%C3%A1la">https://cs.wikipedia.org/wiki/Hyperbolick%C3%A1_spir%C3%A1la</a>
</li>

<li>Hyperbolic Spiral<br />
<a href="https://mathworld.wolfram.com/HyperbolicSpiral.html">https://mathworld.wolfram.com/HyperbolicSpiral.html</a>
</li>

<li>Lituus (mathematics)<br />
<a href="https://en.wikipedia.org/wiki/Lituus_(mathematics)">https://en.wikipedia.org/wiki/Lituus_(mathematics)</a>
</li>

<li>Spiral of Spirals Fractals 2 with Python Turtle (Source Code)<br />
<a href="https://pythonturtle.academy/spiral-of-spirals-fractals-2-with-python-turtle-source-code/">https://pythonturtle.academy/spiral-of-spirals-fractals-2-with-python-turtle-source-code/</a>
</li>

<li>Cornu Spiral<br />
<a href="http://hyperphysics.gsu.edu/hbase/phyopt/cornu.html">http://hyperphysics.gsu.edu/hbase/phyopt/cornu.html</a>
</li>

<li>Spiral<br />
<a href="https://www.2dcurves.com/spiral/spiral.html">https://www.2dcurves.com/spiral/spiral.html</a>
</li>

<li>Algebraic Curves<br />
<a href="https://mathworld.wolfram.com/topics/AlgebraicCurves.html">https://mathworld.wolfram.com/topics/AlgebraicCurves.html</a>
</li>

<li>Elliptic Curves<br />
<a href="https://mathworld.wolfram.com/topics/EllipticCurves.html">https://mathworld.wolfram.com/topics/EllipticCurves.html</a>
</li>

<li>Eukleidovská konstrukce<br />
<a href="https://cs.wikipedia.org/wiki/Eukleidovsk%C3%A1_konstrukce">https://cs.wikipedia.org/wiki/Eukleidovsk%C3%A1_konstrukce</a>
</li>

<li>Euclidean Constructions<br />
<a href="http://www.cs.cas.cz/portal/AlgoMath/Geometry/PlaneGeometry/GeometricConstructions/EuclideanConstructions.htm">http://www.cs.cas.cz/portal/AlgoMath/Geometry/PlaneGeometry/GeometricConstructions/EuclideanConstructions.htm</a>
</li>

<li>Kvadratura kruhu<br />
<a href="https://cs.wikipedia.org/wiki/Kvadratura_kruhu">https://cs.wikipedia.org/wiki/Kvadratura_kruhu</a>
</li>

<li>Trisekce úhlu<br />
<a href="https://cs.wikipedia.org/wiki/Trisekce_%C3%BAhlu">https://cs.wikipedia.org/wiki/Trisekce_%C3%BAhlu</a>
</li>

<li>Straightedge and compass construction<br />
<a href="https://en.wikipedia.org/wiki/Straightedge_and_compass_construction">https://en.wikipedia.org/wiki/Straightedge_and_compass_construction</a>
</li>

<li>C.a.R.<br />
<a href="http://car.rene-grothmann.de/doc_en/index.html">http://car.rene-grothmann.de/doc_en/index.html</a>
</li>

<li>CaRMetal (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/C.a.R.">https://en.wikipedia.org/wiki/C.a.R.</a>
</li>

<li>CaRMetal (Španělsky a Francouzsky)<br />
<a href="http://carmetal.org/index.php/fr/">http://carmetal.org/index.php/fr/</a>
</li>

<li>CaRMetal (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/CaRMetal">https://en.wikipedia.org/wiki/CaRMetal</a>
</li>

<li>Regular Polygon<br />
<a href="http://mathforum.org/dr.math/faq/formulas/faq.regpoly.html">http://mathforum.org/dr.math/faq/formulas/faq.regpoly.html</a>
</li>

<li>Geometric Construction with the Compass Alone<br />
<a href="http://www.cut-the-knot.org/do_you_know/compass.shtml">http://www.cut-the-knot.org/do_you_know/compass.shtml</a>
</li>

<li>Kvadratura kruhu (Wikipedie)<br />
<a href="https://cs.wikipedia.org/wiki/Kvadratura_kruhu">https://cs.wikipedia.org/wiki/Kvadratura_kruhu</a>
</li>

<li>Compass equivalence theorem<br />
<a href="https://en.wikipedia.org/wiki/Compass_equivalence_theorem">https://en.wikipedia.org/wiki/Compass_equivalence_theorem</a>

<li>Curves we (mostly) don't learn in high school (and applications)<br />
<a href="https://www.youtube.com/watch?v=3izFMB91K_Q">https://www.youtube.com/watch?v=3izFMB91K_Q</a>
</li>

<li>Can You Really Derive Conic Formulae from a Cone? - Menaechmus' Constructions<br />
<a href="https://www.maa.org/press/periodicals/convergence/can-you-really-derive-conic-formulae-from-a-cone-menaechmus-constructions">https://www.maa.org/press/periodicals/convergence/can-you-really-derive-conic-formulae-from-a-cone-menaechmus-constructions</a>
</li>

<li>Apollonius of Perga<br />
<a href="https://en.wikipedia.org/wiki/Apollonius_of_Perga">https://en.wikipedia.org/wiki/Apollonius_of_Perga</a>
</li>

<li>Catenary arch<br />
<a href="https://en.wikipedia.org/wiki/Catenary_arch">https://en.wikipedia.org/wiki/Catenary_arch</a>
</li>

<li>Parabolic arch<br />
<a href="https://en.wikipedia.org/wiki/Parabolic_arch">https://en.wikipedia.org/wiki/Parabolic_arch</a>
</li>

<li>Wattova křivka<br />
<a href="https://www.geogebra.org/m/gNh4bW9r">https://www.geogebra.org/m/gNh4bW9r</a>
</li>

<li>Model stegosaura byl získán na stránce<br />
<a href="http://www.tur­bosquid.com/HTMLCli­ent/FullPrevi­ew/Index.cfm/ID/1710­71/Action/FullPreview">http://www.tur­bosquid.com/HTMLCli­ent/FullPrevi­ew/Index.cfm/ID/1710­71/Action/FullPreview</a>
</li>

<li>Obrázek nohy dinosaura byl získán na adrese<br />
<a href="http://perso.wa­nadoo.fr/rimas­son/3d/leg.htm">http://perso.wa­nadoo.fr/rimas­son/3d/leg.htm</a>
</li>

<li>Spirograph<br />
<a href="https://en.wikipedia.org/wiki/Spirograph">https://en.wikipedia.org/wiki/Spirograph</a>
</li>

<li>Epicykloida<br />
<a href="https://cs.wikipedia.org/wiki/Epicykloida">https://cs.wikipedia.org/wiki/Epicykloida</a>
</li>

<li>Hypocykloida<br />
<a href="https://cs.wikipedia.org/wiki/Hypocykloida">https://cs.wikipedia.org/wiki/Hypocykloida</a>
</li>

<li>Hypotrochoida<br />
<a href="https://cs.wikipedia.org/wiki/Hypotrochoida">https://cs.wikipedia.org/wiki/Hypotrochoida</a>
</li>

<li>Superelipsoidy a kvadriky v POV-Rayi<br />
<a href="https://www.root.cz/clanky/superelipsoidy-a-kvadriky-v-pov-rayi/">https://www.root.cz/clanky/superelipsoidy-a-kvadriky-v-pov-rayi/</a>
</li>

<li>Fifty Famous Curves, Lots of Calculus Questions, And a Few Answers<br />
<a href="https://elepa.files.wordpress.com/2013/11/fifty-famous-curves.pdf">https://elepa.files.wordpress.com/2013/11/fifty-famous-curves.pdf</a>
</li>

<li>Barr, A.H.: Superquadrics and Angle Preserving Transformations,<br />
IEEE Computer Graphics and Applications, January 1981
</li>

<li>Bourke Paul: Quadrics,<br />
July 1996
</li>

<li>Bourke Paul: Superellipse and Superellipsoid,<br />
January 1990
</li>

<li>Faux, I.D. a Pratt, M.J.: Computational Geometry for Design and Manufacture,<br />
Ellis Horwood Ltd., Wiley &amp; Sons, 1979
</li>

<li>Wallace A.: Differential Topology,<br />
Benjamin/Cummings Co., Reading, Massachussetts, USA, 1968
</li>

<li>Glossary of Bridge Terminology<br />
<a href="http://sdrc.lib.uiowa.edu/eng/bridges/WaddellGlossary/GlossC.htm">http://sdrc.lib.uiowa.edu/eng/bridges/WaddellGlossary/GlossC.htm</a>
</li>

<li>Brachistochrona<br />
<a href="https://cs.wikipedia.org/wiki/Brachistochrona">https://cs.wikipedia.org/wiki/Brachistochrona</a>
</li>

<li>Missions: Cassini<br />
<a href="https://solarsystem.nasa.gov/missions/cassini/overview/">https://solarsystem.nasa.gov/missions/cassini/overview/</a>
</li>

<li>Giovanni Domenico Cassini<br />
<a href="https://en.wikipedia.org/wiki/Giovanni_Domenico_Cassini">https://en.wikipedia.org/wiki/Giovanni_Domenico_Cassini</a>
</li>

<li>Cassini Ovals<br />
<a href="https://mathworld.wolfram.com/CassiniOvals.html">https://mathworld.wolfram.com/CassiniOvals.html</a>
</li>

<li>Geocentrismus<br />
<a href="https://cs.wikipedia.org/wiki/Geocentrismus">https://cs.wikipedia.org/wiki/Geocentrismus</a>
</li>

<li>Who was Giovanni Cassini?<br />
<a href="https://www.universetoday.com/130823/who-was-giovanni-cassini/">https://www.universetoday.com/130823/who-was-giovanni-cassini/</a>
</li>

<li>Special plane curves<br />
<a href="http://xahlee.info/SpecialPlaneCurves_dir/ConicSections_dir/conicSections.html">http://xahlee.info/SpecialPlaneCurves_dir/ConicSections_dir/conicSections.html</a>
</li>

<li>Why Does Slicing a Cone Give an Ellipse?<br />
<a href="https://infinityisreallybig.com/2019/02/08/why-does-slicing-a-cone-give-an-ellipse/">https://infinityisreallybig.com/2019/02/08/why-does-slicing-a-cone-give-an-ellipse/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

