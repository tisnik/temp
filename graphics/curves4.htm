<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Křivky určené polynomem &ndash; nejpoužívanější křivky v&nbsp;současnosti</a></p>
<p><a href="#k02">*** 2. Interpolační a aproximační křivky</a></p>
<p><a href="#k03">*** 3. Interpolační polynom</a></p>
<p><a href="#k04">*** 4. Interpolační křivka získaná Lagrangeovou metodou</a></p>
<p><a href="#k05">*** 5. Zákmity interpolační křivky u polynomů vyšších stupňů</a></p>
<p><a href="#k06">*** 6. Aproximační polynom</a></p>
<p><a href="#k07">*** 7. Metoda nejmenších čtverců</a></p>
<p><a href="#k08">*** 8. Lineární regrese</a></p>
<p><a href="#k09">*** 9. Použití polynomů vyšších stupňů namísto přímky</a></p>
<p><a href="#k10">*** 10. Aproximace funkce Taylorovou řadou</a></p>
<p><a href="#k11">*** 11. Aproximační parametrické křivky pro počítačovou grafiku</a></p>
<p><a href="#k12">*** 12. Coonsova kubika</a></p>
<p><a href="#k13">*** 13. Bézierova kvadrika</a></p>
<p><a href="#k14">*** 14. Bézierova kubika</a></p>
<p><a href="#k15">*** 15. B-spline zkonstruovaná z&nbsp;Coonsových oblouků</a></p>
<p><a href="#k16">*** 16. Násobné body v&nbsp;B-spline</a></p>
<p><a href="#k17">*** 17. Geometrická konstrukce Bézierovy kubiky</a></p>
<p><a href="#k18">*** 18. Křivky pro počítačovou animaci</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Křivky určené polynomem &ndash; nejpoužívanější křivky v&nbsp;současnosti</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Interpolační a aproximační křivky</h2>

Typickou interpolační křivkou je např. Lagrangeův polynom – je to polynom, jehož grafem je křivka procházející předem danými (uzlovými) body. 
Typickou křivkou aproximační je polynom určený metodou nejmenších čtverců.
řitom se bere do úvahy skutečnost, že měření je zatíženo chybami, proto nalezená křivka naměřenými hodnotami většinou neprochází a rozdíly jsou interpretovány jako chyby měření.


<p><a name="k03"></a></p>
<h2 id="k03">3. Interpolační polynom</h2>

Jedná se o polynom  stupně, který má procházet n zadanými body. Tento problém lze řešit tzv. metodou neurčitých koeficientů: Polynom  stupně má obecně rovnici

y = c<sub>n-1</sub>x<sup>n-1</sup> + c<sub>n-2</sub>x<sup>n-2</sup> + c<sub>1</sub>x + c<sub>0</sub>

Dosadíme-li do této rovnice postupně všechny body , kterými má polynom procházet, dostaneme pro neznámé koeficienty c soustavu lineárních rovnic
Metoda neurčitých koeficientů je však značně nevhodná, a to zvláště tehdy, je-ji počet uzlových bodů větší a soustava (1) řešena Gaussovou  eliminací. Je totiž velmi špatně podmíněna a výsledky jsou značně nejisté.

interpolační  polynom Lagrangeovou metodou.

<pre>
"Koeficienty Lagrangeova polynomu."""

<i># Založeno na příkladu z článku:</i>
<i># https://pythonnumericalmethods.berkeley.edu/notebooks/chapter17.04-Lagrange-Polynomial-Interpolation.html</i>

import numpy as np
import numpy.polynomial.polynomial as poly
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = [0, 1, 2]

<i># vstupní koeficienty</i>
P1_coeff = [1,-1.5,.5]
P2_coeff = [0, 2,-1]
P3_coeff = [0,-.5,.5]

<i># získání funkcí pro výpočet křivky na základě báze</i>
P1 = poly.Polynomial(P1_coeff)
P2 = poly.Polynomial(P2_coeff)
P3 = poly.Polynomial(P3_coeff)

x_new = np.arange(-1.0, 3.1, 0.1)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig = plt.figure(figsize=(6.4, 4.8))

<i># vykreslení jednotlivých bází</i>
plt.plot(x_new, P1(x_new), 'b', label = 'P1')
plt.plot(x_new, P2(x_new), 'r', label = 'P2')
plt.plot(x_new, P3(x_new), 'g', label = 'P3')

<i># zobrazení pomocných bodů v mřížce</i>

plt.plot(x, np.ones(len(x)), 'ko', x, np.zeros(len(x)), 'ko')

<i># popisky grafu</i>
plt.title('Lagrange Basis Polynomials')
plt.xlabel('x')
plt.ylabel('y')
plt.grid()
plt.legend()

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("langrange_poly_1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>


<p><a name="k04"></a></p>
<h2 id="k04">4. Interpolační křivka získaná Lagrangeovou metodou</h2>

<pre>
"Koeficienty Lagrangeova polynomu + výpočet interpolační křivky."""

<i># Založeno na příkladu z článku:</i>
<i># https://pythonnumericalmethods.berkeley.edu/notebooks/chapter17.04-Lagrange-Polynomial-Interpolation.html</i>

import numpy as np
import numpy.polynomial.polynomial as poly
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = [0, 1, 2]

<i># hodnoty na y-ové ose</i>
y = [1, 3, 2]

P1_coeff = [1,-1.5,.5]
P2_coeff = [0, 2,-1]
P3_coeff = [0,-.5,.5]

<i># získání funkcí pro výpočet křivky na základě báze</i>
P1 = poly.Polynomial(P1_coeff)
P2 = poly.Polynomial(P2_coeff)
P3 = poly.Polynomial(P3_coeff)

x_new = np.arange(-1.0, 3.1, 0.1)

<i># interpolační křivka</i>
L = P1 + 3*P2 + 2*P3

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig = plt.figure(figsize=(6.4, 4.8))

<i># vykreslení interpolační křivky i vstupních bodů</i>
plt.plot(x_new, L(x_new), 'b', x, y, 'ro')

<i># popisky grafu</i>
plt.title('Lagrange Polynomial')
plt.xlabel('x')
plt.ylabel('y')
plt.grid()
plt.legend()

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("langrange_poly_2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Interpolace Lagrangeovým polynomem."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = [0, 1, 2]

<i># hodnoty na y-ové ose</i>
y = [1, 3, 2]

<i># odvození stupně Lagrangeova polynomu</i>
n = len(x)

<i># příprava polí pro výpočet hodnot Lagrangeovým polynomem</i>
xp = np.arange(-1.0, 3.0, 0.1)
yp = np.zeros(40)

<i># výpočet interpolační křivky</i>
for i in range(n):
    p = 1
    for j in range(n):
        if i != j:
            p = p * (xp-x[j])/(x[i] - x[j])
    yp += p * y[i]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig = plt.figure(figsize=(6.4, 4.8))

<i># vstupní hodnoty</i>
plt.plot(x, y, 'ko')

<i># vlastní interpolace polynomem</i>
plt.plot(xp, yp, 'r-')

<i># popisky grafu</i>
plt.title('Lagrange Interpolation')
plt.xlabel('x')
plt.ylabel('y')

<i># zobrazení mřížky</i>
plt.grid()

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("langrange_interpolation_1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Zákmity interpolační křivky u polynomů vyšších stupňů</h2>

<pre>
<i>"""Interpolace Lagrangeovým polynomem."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(1, 11, 1)

<i># hodnoty na y-ové ose</i>
y = [1, 3, 2, 3, -1, 3, 2, 2, -1, 0]

<i># odvození stupně Lagrangeova polynomu</i>
n = len(x)

<i># příprava polí pro výpočet hodnot Lagrangeovým polynomem</i>
xp = np.arange(1, 10.1, 0.1)
yp = np.zeros(91)

<i># výpočet interpolační křivky</i>
for i in range(n):
    p = 1
    for j in range(n):
        if i != j:
            p = p * (xp-x[j])/(x[i] - x[j])
    yp += p * y[i]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig = plt.figure(figsize=(6.4, 4.8))

<i># vstupní hodnoty</i>
plt.plot(x, y, 'ko')

<i># vlastní interpolace polynomem</i>
plt.plot(xp, yp, 'r-')

<i># popisky grafu</i>
plt.title('Lagrange Interpolation')
plt.xlabel('x')
plt.ylabel('y')

<i># zobrazení mřížky</i>
plt.grid()

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("langrange_interpolation_2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Aproximační polynom</h2>

Aproximační křivky



Polynom metodou nejmenších čtverců
V technické praxi stojíme často před problémem nalézt křivku, která neprochází přesně zadanými body, ale vystihuje závislost dvou veličin, jejichž hodnoty získáme měřením. Tyto křivky získáváme tzv. metodou nejmenších čtverců a nejčastěji je hledáme ve tvaru polynomu


<p><a name="k07"></a></p>
<h2 id="k07">7. Metoda nejmenších čtverců</h2>

<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(-20, 20)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = x + 10*rng.random((40))

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Pseudonáhodná data', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("random_data_linear.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Lineární regrese</h2>

<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat + lineární regrese."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(0, 50)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = x + 10*rng.random((len(x))) - 5

<i># výpočet lineární regrese</i>
coefficients = np.polyfit(x, y, 1)

<i># koeficienty úsečky</i>
print(coefficients)

<i># konstrukce lineární funkce</i>
poly1d_fn = np.poly1d(coefficients)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Lineární regrese', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># vykreslení interpolační křivky</i>
plt.plot(poly1d_fn(np.arange(0, len(x))), 'r-')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("linear_regression_1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat + lineární regrese."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(0, 50)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = x + 2*rng.random((len(x))) - 1

<i># výpočet lineární regrese</i>
coefficients = np.polyfit(x, y, 1)

<i># koeficienty úsečky</i>
print(coefficients)

<i># konstrukce lineární funkce</i>
poly1d_fn = np.poly1d(coefficients)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Lineární regrese', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># vykreslení interpolační křivky</i>
plt.plot(poly1d_fn(np.arange(0, len(x))), 'r-')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("linear_regression_2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat + lineární regrese."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(0, 10)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = x + 20*rng.random((len(x))) - 10

<i># výpočet lineární regrese</i>
coefficients = np.polyfit(x, y, 1)

<i># koeficienty úsečky</i>
print(coefficients)

<i># konstrukce lineární funkce</i>
poly1d_fn = np.poly1d(coefficients)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Lineární regrese', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># vykreslení interpolační křivky</i>
plt.plot(poly1d_fn(np.arange(0, len(x))), 'r-')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("linear_regression_3.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Použití polynomů vyšších stupňů namísto přímky</h2>

<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(0, 50)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = np.power(x, 2) + 10*rng.random((len(x))) - 5

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Pseudonáhodná data', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("random_data_poly.png")

<i># zobrazení grafu</i>
plt.show()
</pre>
<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat + polynomiální regrese."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(0, 50)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = np.power(x, 2) + 100*rng.random((len(x))) - 50

<i># výpočet lineární regrese</i>
coefficients = np.polyfit(x, y, 1)

<i># koeficienty úsečky</i>
print(coefficients)

<i># konstrukce polynomu</i>
poly1d_fn = np.poly1d(coefficients)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Polynomiální regrese', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># vykreslení interpolační křivky</i>
plt.plot(poly1d_fn(np.arange(0, len(x))), 'r-')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("poly_regression_1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Vykreslení sady (pseudo)náhodných dat + polynomiální regrese."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty na x-ové ose</i>
x = np.arange(0, 50)

<i># generátor pseudonáhodných dat</i>
rng = np.random.default_rng(seed=42)

<i># hodnoty na y-ové ose</i>
y = np.power(x, 2) + 100*rng.random((len(x))) - 50

<i># výpočet lineární regrese</i>
coefficients = np.polyfit(x, y, 2)

<i># koeficienty úsečky</i>
print(coefficients)

<i># konstrukce polynomu</i>
poly1d_fn = np.poly1d(coefficients)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Polynomiální regrese', fontsize=15)

<i># vrcholy na křivce</i>
ax.plot(x, y, 'go')

<i># vykreslení interpolační křivky</i>
plt.plot(poly1d_fn(np.arange(0, len(x))), 'r-')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("poly_regression_2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Aproximace funkce Taylorovou řadou</h2>

<pre>
<i>"""Výpočet aproximace hodnoty funkce pomocí Taylorovy řady."""</i>

import numpy as np
import matplotlib.pyplot as plt


def taylor_series(x, order):
    """Výpočet aproximace hodnoty funkce pomocí Taylorovy řady."""
    a = x
    sum = a
    for i in range(1, order):
        a *= -1 * x**2 / ((2 * i) * (2 * i + 1))
        sum += a
    return sum
 
 
<i># průběh nezávislé proměnné x</i>
<i># (hodnoty na x-ové ose)</i>
x = np.linspace(-20, 20, 500)
 
<i># funkce kterou aproximujeme Taylorovou řadou</i>
y = np.sin(x)
 
<i># vykreslení původní funkce</i>
plt.plot(x, y, label='sin(x)')

<i># příprava pro vlastní výpočet</i>
ys = np.vectorize(taylor_series)
 
<i># aproximace Taylorovou řadou</i>
N = 1

<i># výpočet s převodem na typ numpy.array</i>
approx = ys(x, N)

<i># vykreslení aproximace funkce</i>
plt.plot(x, approx, label='order {o}'.format(o=N))
 
<i># limity na ose y</i>
plt.ylim([-3, 3])
 
<i># legenda grafu</i>
plt.legend()
 
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("taylor_sin_1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Výpočet aproximace hodnoty funkce pomocí Taylorovy řady."""</i>

import numpy as np
import matplotlib.pyplot as plt


def taylor_series(x, order):
    """Výpočet aproximace hodnoty funkce pomocí Taylorovy řady."""
    a = x
    sum = a
    for i in range(1, order):
        a *= -1 * x**2 / ((2 * i) * (2 * i + 1))
        sum += a
    return sum
 
 
<i># průběh nezávislé proměnné x</i>
<i># (hodnoty na x-ové ose)</i>
x = np.linspace(-20, 20, 500)
 
<i># funkce kterou aproximujeme Taylorovou řadou</i>
y = np.sin(x)
 
<i># vykreslení původní funkce</i>
plt.plot(x, y, label='sin(x)')

<i># příprava pro vlastní výpočet</i>
ys = np.vectorize(taylor_series)
 
<i># aproximace Taylorovou řadou</i>
N = 2

<i># výpočet s převodem na typ numpy.array</i>
approx = ys(x, N)

<i># vykreslení aproximace funkce</i>
plt.plot(x, approx, label='order {o}'.format(o=N))
 
<i># limity na ose y</i>
plt.ylim([-3, 3])
 
<i># legenda grafu</i>
plt.legend()
 
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("taylor_sin_2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>

<pre>
<i>"""Výpočet aproximace hodnoty funkce pomocí Taylorovy řady."""</i>

import numpy as np
import matplotlib.pyplot as plt


def taylor_series(x, order):
    """Výpočet aproximace hodnoty funkce pomocí Taylorovy řady."""
    a = x
    sum = a
    for i in range(1, order):
        a *= -1 * x**2 / ((2 * i) * (2 * i + 1))
        sum += a
    return sum
 
 
<i># průběh nezávislé proměnné x</i>
<i># (hodnoty na x-ové ose)</i>
x = np.linspace(-20, 20, 500)
 
<i># funkce kterou aproximujeme Taylorovou řadou</i>
y = np.sin(x)
 
<i># vykreslení původní funkce</i>
plt.plot(x, y, label='sin(x)')

<i># příprava pro vlastní výpočet</i>
ys = np.vectorize(taylor_series)
 
<i># aproximace</i>
N = 12
 
for order in range(1, N+1):
    # výpočet s převodem na typ numpy.array
    approx = ys(x, order)
    plt.plot(x, approx, label='order {o}'.format(o=order))
 
<i># limity na ose y</i>
plt.ylim([-3, 3])
 
<i># legenda grafu</i>
plt.legend()
 
<i># uložení grafu do rastrového obrázku</i>
plt.savefig("taylor_sin_1_12.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Aproximační parametrické křivky pro počítačovou grafiku</h2>

<pre>
<i>"""Parametrická křivka: kružnice."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty parametru t</i>
t = np.arange(0, 2*np.pi, 0.1)

<i># poloměr kružnice</i>
r = 2.0

<i># výpočet bodů ležících na kružnici</i>
x = r*np.cos(t)
y = r*np.sin(t)

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Kružnice', fontsize=15)

<i># určení rozsahů na obou souřadných osách</i>
ax.set_xlim(-4, 4)
ax.set_ylim(-3, 3)

<i># vrcholy na křivce pospojované úsečkami</i>
ax.plot(x, y, 'g-')

<i># vrcholy na křivce (každý čtvrtý)</i>
ax.plot(x[::4], y[::4], 'ro')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("circle.png")

<i># zobrazení grafu</i>
plt.show()
</pre>


<p><a name="k12"></a></p>
<h2 id="k12">12. Coonsova kubika</h2>

<pre>
<i>"""Parametrická křivka: Coonsova kubika."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty parametru t</i>
t = np.arange(0, 1.05, 0.05)

<i># řídicí body Coonsovy kubiky</i>
xc = (1, 1, 3, 3)
yc = (1, 2, 2, 0.5)

<i># Coonsovy polynomy</i>
C = [(1-t)**3,
     3*t**3 - 6*t**2 + 4,
     -3*t**3 + 3*t**2 + 3*t + 1,
     t**3]

<i># výpočet bodů ležících na Coonsově kubice</i>
x = 0
y = 0
for i in range(0, 4):
    x += xc[i]*C[i]
    y += yc[i]*C[i]

<i># konečná úprava sumy</i>
x /= 6
y /= 6

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Coonsova kubika', fontsize=15)

<i># určení rozsahů na obou souřadných osách</i>
ax.set_xlim(0, 4)
ax.set_ylim(0, 3)

<i># vrcholy na křivce pospojované úsečkami</i>
ax.plot(x, y, 'g-')

<i># řídicí body Coonsovy kubiky</i>
ax.plot(xc, yc, 'ro')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("coons.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Bézierova kvadrika</h2>

<pre>
<i>"""Parametrická křivka: Bézierova kvadrika."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty parametru t</i>
t = np.arange(0, 1.05, 0.05)

<i># řídicí body Bézierovy kubiky</i>
xc = (1, 2, 3)
yc = (1, 2.9, 1)

<i># Bernsteinovy polynomy</i>
B = [(1-t)**2,
     2*t*(1-t),
     t**2]

<i># výpočet bodů ležících na Bézierově kvadrice</i>
x = 0
y = 0
for i in range(0, 3):
    x += xc[i]*B[i]
    y += yc[i]*B[i]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Bézierova kvadrika', fontsize=15)

<i># určení rozsahů na obou souřadných osách</i>
ax.set_xlim(0, 4)
ax.set_ylim(0, 3)

<i># vrcholy na křivce pospojované úsečkami</i>
ax.plot(x, y, 'g-')

<i># řídicí body Bézierovy kvadriky</i>
ax.plot(xc, yc, 'ro')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("bezier_quadric.png")

<i># zobrazení grafu</i>
plt.show()
</pre>


<p><a name="k14"></a></p>
<h2 id="k14">14. Bézierova kubika</h2>

<pre>
<i>"""Parametrická křivka: Bézierova kubika."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty parametru t</i>
t = np.arange(0, 1.05, 0.05)

<i># řídicí body Bézierovy kubiky</i>
xc = (1, 1, 3, 3)
yc = (1, 2.9, 0.1, 2)

<i># Bernsteinovy polynomy</i>
B = [(1-t)**3,
     3*t*(1-t)**2,
     3*t**2*(1-t),
     t**3]

<i># výpočet bodů ležících na Bézierově kubice</i>
x = 0
y = 0
for i in range(0, 4):
    x += xc[i]*B[i]
    y += yc[i]*B[i]

<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('Bézierova kubika', fontsize=15)

<i># určení rozsahů na obou souřadných osách</i>
ax.set_xlim(0, 4)
ax.set_ylim(0, 3)

<i># vrcholy na křivce pospojované úsečkami</i>
ax.plot(x, y, 'g-')

<i># řídicí body Bézierovy kubiky</i>
ax.plot(xc, yc, 'ro')

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("bezier.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. B-spline zkonstruovaná z&nbsp;Coonsových oblouků</h2>

<pre>
<i>"""Parametrická křivka: B-spline složená z Coonsových oblouků."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty parametru t</i>
t = np.arange(0, 1.05, 0.05)

<i># řídicí body B-spline</i>
xc = (1, 1, 2, 2.5, 3, 2)
yc = (1, 2, 2, 0.1, 2.9, 2.9)

<i># Coonsovy polynomy</i>
C = [(1-t)**3,
     3*t**3 - 6*t**2 + 4,
     -3*t**3 + 3*t**2 + 3*t + 1,
     t**3]


def draw_coons_arc(xc, yc, ax, style):
    # výpočet bodů ležících na Coonsově kubice
    x = 0
    y = 0
    for i in range(0, 4):
        x += xc[i]*C[i]
        y += yc[i]*C[i]

    # konečná úprava sumy
    x /= 6
    y /= 6

    # vrcholy na křivce pospojované úsečkami
    ax.plot(x, y, style)


<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('B-spline', fontsize=15)

<i># určení rozsahů na obou souřadných osách</i>
ax.set_xlim(0, 4)
ax.set_ylim(0, 3)

<i># řídicí body B-spline</i>
ax.plot(xc, yc, 'k--', alpha=0.5)
ax.plot(xc, yc, 'ro')

<i># první oblouk</i>
draw_coons_arc(xc[0:4], yc[0:4], ax, "r-")

<i># druhý oblouk</i>
draw_coons_arc(xc[1:5], yc[1:5], ax, "b-")

<i># třetí oblouk</i>
draw_coons_arc(xc[2:6], yc[2:6], ax, "g-")

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("B-spline_1.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Násobné body v&nbsp;B-spline</h2>

<pre>
<i>"""Parametrická křivka: B-spline složená z Coonsových oblouků, násobné body."""</i>

import numpy as np
import matplotlib.pyplot as plt

<i># hodnoty parametru t</i>
t = np.arange(0, 1.05, 0.05)

<i># řídicí body B-spline</i>
xc = (1, 1, 2, 2.5, 3, 2)
yc = (1, 2, 2, 0.1, 2.9, 2.9)

<i># Coonsovy polynomy</i>
C = [(1-t)**3,
     3*t**3 - 6*t**2 + 4,
     -3*t**3 + 3*t**2 + 3*t + 1,
     t**3]


def draw_coons_arc(xc, yc, ax, style):
    # výpočet bodů ležících na Coonsově kubice
    x = 0
    y = 0
    for i in range(0, 4):
        x += xc[i]*C[i]
        y += yc[i]*C[i]

    # konečná úprava sumy
    x /= 6
    y /= 6

    # vrcholy na křivce pospojované úsečkami
    ax.plot(x, y, style)


<i># rozměry grafu při uložení: 640x480 pixelů</i>
fig, ax = plt.subplots(1, figsize=(6.4, 4.8))

<i># titulek grafu</i>
fig.suptitle('B-spline', fontsize=15)

<i># určení rozsahů na obou souřadných osách</i>
ax.set_xlim(0, 4)
ax.set_ylim(0, 3)

<i># řídicí body B-spline</i>
ax.plot(xc, yc, 'k--', alpha=0.5)
ax.plot(xc, yc, 'ro')

<i># oblouk s násobnými body</i>
draw_coons_arc((xc[0], xc[0], xc[1], xc[2]),
               (yc[0], yc[0], yc[1], yc[2]), ax, "k-")

<i># první oblouk</i>
draw_coons_arc(xc[0:4], yc[0:4], ax, "r-")

<i># druhý oblouk</i>
draw_coons_arc(xc[1:5], yc[1:5], ax, "b-")

<i># třetí oblouk</i>
draw_coons_arc(xc[2:6], yc[2:6], ax, "g-")

<i># oblouk s násobnými body</i>
draw_coons_arc((xc[3], xc[4], xc[5], xc[5]),
               (yc[3], yc[4], yc[5], yc[5]), ax, "k-")

<i># uložení grafu do rastrového obrázku</i>
plt.savefig("B-spline_2.png")

<i># zobrazení grafu</i>
plt.show()
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Geometrická konstrukce Bézierovy kubiky</h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Křivky pro počítačovou animaci</h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny předminule, minule i dnes popisované demonstrační příklady určené
pro Python 3 a knihovnu Matplotlib byly uloženy do Git repositáře, který je
dostupný na adrese <a
href="https://github.com/tisnik/presentations">https://github.com/tisnik/presentations</a>.
Příklady si můžete v&nbsp;případě potřeby stáhnout i jednotlivě bez nutnosti
klonovat celý (dnes již poměrně rozsáhlý) repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>line.py</td><td>úsečka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/line.py">https://github.com/tisnik/presentations/blob/master/curves/line.py</a></td></tr>
<tr><td> 2</td><td>parabola.py</td><td>parabola</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/parabola.py">https://github.com/tisnik/presentations/blob/master/curves/parabola.py</a></td></tr>
<tr><td> 3</td><td>hyperbola.py</td><td>hyperbola</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hyperbola.py">https://github.com/tisnik/presentations/blob/master/curves/hyperbola.py</a></td></tr>
<tr><td> 4</td><td>ellipse_parametric.py</td><td>parametricky zadaná elipsa</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/ellipse_parametric.py">https://github.com/tisnik/presentations/blob/master/curves/ellipse_parametric.py</a></td></tr>
<tr><td> 5</td><td>ellipse_general.py</td><td>obecná elipsa</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/ellipse_general.py">https://github.com/tisnik/presentations/blob/master/curves/ellipse_general.py</a></td></tr>
<tr><td> 6</td><td>circle_parametric.py</td><td>parametricky zadaná kružnice</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/circle_parametric.py">https://github.com/tisnik/presentations/blob/master/curves/circle_parametric.py</a></td></tr>
<tr><td> 7</td><td>circle_polar.py</td><td>polární souřadnice při kreslení kružnice</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/circle_polar.py">https://github.com/tisnik/presentations/blob/master/curves/circle_polar.py</a></td></tr>
<tr><td> 8</td><td>archimedes_spiral.py</td><td>Archimédova spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/archimedes_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/archimedes_spiral.py</a></td></tr>
<tr><td> 9</td><td>fermats_spiral.py</td><td>Fermatova spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/fermats_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/fermats_spiral.py</a></td></tr>
<tr><td>10</td><td>hyperbolic_spiral.py</td><td>Hyperbolická spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hyperbolic_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/hyperbolic_spiral.py</a></td></tr>
<tr><td>11</td><td>logarithmic_spiral.py</td><td>Logaritmická spirála</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/logarithmic_spiral.py">https://github.com/tisnik/presentations/blob/master/curves/logarithmic_spiral.py</a></td></tr>
<tr><td>12</td><td>parabola_catenary_1.py</td><td>parabola vs. řetězovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_1.py">https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_1.py</a></td></tr>
<tr><td>13</td><td>parabola_catenary_2.py</td><td>parabola vs. řetězovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_2.py">https://github.com/tisnik/presentations/blob/master/curves/parabola_catenary_2.py</a></td></tr>
<tr><td>14</td><td>cardioid.py</td><td>srdcovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/cardioid.py">https://github.com/tisnik/presentations/blob/master/curves/cardioid.py</a></td></tr>
<tr><td>15</td><td>catenary.py</td><td>řetězovka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/catenary.py">https://github.com/tisnik/presentations/blob/master/curves/catenary.py</a></td></tr>
<tr><td>17</td><td>fresnel.py</td><td>Fresnelův integrál</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/fresnel.py">https://github.com/tisnik/presentations/blob/master/curves/fresnel.py</a></td></tr>
<tr><td>19</td><td>lissajous.py</td><td>Lissajousův obrazec</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/lissajous.py">https://github.com/tisnik/presentations/blob/master/curves/lissajous.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>20</td><td>superellipse1.py</td><td>superelipsa</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/superellipse1.py">https://github.com/tisnik/presentations/blob/master/curves/superellipse1.py</a></td></tr>
<tr><td>21</td><td>superellipse2.py</td><td>superelipsa, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/superellipse2.py">https://github.com/tisnik/presentations/blob/master/curves/superellipse2.py</a></td></tr>
<tr><td>22</td><td>cycloid.py</td><td>cykloida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/cycloid.py">https://github.com/tisnik/presentations/blob/master/curves/cycloid.py</a></td></tr>
<tr><td>23</td><td>epicycloid1.py</td><td>epicykloida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/epicycloid1.py">https://github.com/tisnik/presentations/blob/master/curves/epicycloid1.py</a></td></tr>
<tr><td>24</td><td>epicycloid2.py</td><td>epicykloida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/epicycloid2.py">https://github.com/tisnik/presentations/blob/master/curves/epicycloid2.py</a></td></tr>
<tr><td>25</td><td>hypocycloid1.py</td><td>hypocykloida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypocycloid1.py">https://github.com/tisnik/presentations/blob/master/curves/hypocycloid1.py</a></td></tr>
<tr><td>26</td><td>hypocycloid2.py</td><td>hypocykloida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypocycloid2.py">https://github.com/tisnik/presentations/blob/master/curves/hypocycloid2.py</a></td></tr>
<tr><td>27</td><td>hypotrochoid1.py</td><td>hypotrochoida</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid1.py">https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid1.py</a></td></tr>
<tr><td>28</td><td>hypotrochoid2.py</td><td>hypotrochoida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid2.py">https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid2.py</a></td></tr>
<tr><td>29</td><td>hypotrochoid3.py</td><td>hypotrochoida, ovšem s&nbsp;odlišnými parametry</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid3.py">https://github.com/tisnik/presentations/blob/master/curves/hypotrochoid3.py</a></td></tr>
<tr><td>30</td><td>implicit/implicit.py</td><td>křivka zadaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/implicit.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/implicit.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>31</td><td>3d_plot/parabola1A.py</td><td>funkce pro parabolu ve 3D</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1A.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1A.py</a></td></tr>
<tr><td>32</td><td>3d_plot/parabola1B.py</td><td>funkce pro parabolu ve 3D + kontury</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1B.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola1B.py</a></td></tr>
<tr><td>33</td><td>3d_plot/parabola2A.py</td><td>funkce pro parabolu ve 3D</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2A.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2A.py</a></td></tr>
<tr><td>34</td><td>3d_plot/parabola2B.py</td><td>funkce pro parabolu ve 3D + kontury</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2B.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/parabola2B.py</a></td></tr>
<tr><td>35</td><td>3d_plot/hyperbolaA.py</td><td>funkce pro hyperbolu ve 3D</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaA.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaA.py</a></td></tr>
<tr><td>36</td><td>3d_plot/hyperbolaB.py</td><td>funkce pro hyperbolu ve 3D + kontury</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaB.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/hyperbolaB.py</a></td></tr>
<tr><td>37</td><td>3d_plot/sin_cos_1.py</td><td>goniometrická funkce ve 3D</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_1.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_1.py</a></td></tr>
<tr><td>38</td><td>3d_plot/sin_cos_2.py</td><td>goniometrická funkce ve 3D</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_2.py">https://github.com/tisnik/presentations/blob/master/curves/3d_plot/sin_cos_2.py</a></td></tr>
<tr><td>39</td><td>anim/cassini_anim.py</td><td>animace změny koeficientů Cassiniho oválu</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/anim/cassini_anim.py">https://github.com/tisnik/presentations/blob/master/curves/anim/cassini_anim.py</a></td></tr>
<tr><td>40</td><td>anim/spiric_anim.py</td><td>animace změny koeficientů průsečíku roviny s&nbsp;toroidem</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/anim/spiric_anim.py">https://github.com/tisnik/presentations/blob/master/curves/anim/spiric_anim.py</a></td></tr>
<tr><td>41</td><td>implicit/cassini1.py</td><td>Cassiniho ovál</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini1.py</a></td></tr>
<tr><td>42</td><td>implicit/cassini2.py</td><td>Cassiniho ovál</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini2.py</a></td></tr>
<tr><td>43</td><td>implicit/cassini3.py</td><td>Cassiniho ovál</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini3.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini3.py</a></td></tr>
<tr><td>44</td><td>implicit/cassini4.py</td><td>Cassiniho ovál</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini4.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/cassini4.py</a></td></tr>
<tr><td>45</td><td>implicit/circle1.py</td><td>kružnice specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/circle1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/circle1.py</a></td></tr>
<tr><td>46</td><td>implicit/circle2.py</td><td>kružnice specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/circle2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/circle2.py</a></td></tr>
<tr><td>47</td><td>implicit/ellipse1.py</td><td>elipsa specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/ellipse1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/ellipse1.py</a></td></tr>
<tr><td>48</td><td>implicit/ellipse2.py</td><td>elipsa specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/ellipse2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/ellipse2.py</a></td></tr>
<tr><td>49</td><td>implicit/ellipse3.py</td><td>elipsa specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/ellipse3.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/ellipse3.py</a></td></tr>
<tr><td>50</td><td>implicit/elliptic1.py</td><td>eliptická křivka</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/elliptic1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/elliptic1.py</a></td></tr>
<tr><td>51</td><td>implicit/elliptic2.py</td><td>mřížka několika eliptických křivek</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/elliptic2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/elliptic2.py</a></td></tr>
<tr><td>52</td><td>implicit/flower.py</td><td>křivka připomínající květ</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/flower.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/flower.py</a></td></tr>
<tr><td>53</td><td>implicit/hyperbola1.py</td><td>hyperbola specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/hyperbola1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/hyperbola1.py</a></td></tr>
<tr><td>54</td><td>implicit/hyperbola2.py</td><td>hyperbola specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/hyperbola2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/hyperbola2.py</a></td></tr>
<tr><td>55</td><td>implicit/line1.py</td><td>přímka specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/line1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/line1.py</a></td></tr>
<tr><td>56</td><td>implicit/line2.py</td><td>přímka specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/line2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/line2.py</a></td></tr>
<tr><td>57</td><td>implicit/parabola1.py</td><td>parabola specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/parabola1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/parabola1.py</a></td></tr>
<tr><td>58</td><td>implicit/parabola2.py</td><td>parabola specifikovaná implicitní funkcí</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/parabola2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/parabola2.py</a></td></tr>
<tr><td>59</td><td>implicit/sin_cos_1.py</td><td>implicitní funkce obsahující goniometrické funkce</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/sin_cos_1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/sin_cos_1.py</a></td></tr>
<tr><td>60</td><td>implicit/sin_cos_2.py</td><td>implicitní funkce obsahující goniometrické funkce</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/sin_cos_2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/sin_cos_2.py</a></td></tr>
<tr><td>61</td><td>implicit/spiric1.py</td><td>řez toroidu plochou</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/spiric1.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/spiric1.py</a></td></tr>
<tr><td>62</td><td>implicit/spiric2.py</td><td>řez toroidu plochou</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/spiric2.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/spiric2.py</a></td></tr>
<tr><td>63</td><td>implicit/spiric3.py</td><td>řez toroidu plochou</td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/implicit/spiric3.py">https://github.com/tisnik/presentations/blob/master/curves/implicit/spiric3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>64</td><td>interpolation/lagrange_interpolation_1.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_interpolation_1.py">https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_interpolation_1.py</a></td></tr>
<tr><td>65</td><td>interpolation/lagrange_interpolation_2.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_interpolation_2.py">https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_interpolation_2.py</a></td></tr>
<tr><td>66</td><td>interpolation/lagrange_poly_1.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_poly_1.py">https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_poly_1.py</a></td></tr>
<tr><td>67</td><td>interpolation/lagrange_poly_2.py</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_poly_2.py">https://github.com/tisnik/presentations/blob/master/curves/interpolation/lagrange_poly_2.py</a></td></tr>
<tr><td>68</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>68</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>69</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>70</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>71</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>72</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>73</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>74</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>75</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>76</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>77</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>78</td><td>approximation/</td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/approximation/">https://github.com/tisnik/presentations/blob/master/curves/approximation/</a></td></tr>
<tr><td>79</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>80</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
<tr><td>81</td><td></td><td></td><td><a href="https://github.com/tisnik/presentations/blob/master/curves/">https://github.com/tisnik/presentations/blob/master/curves/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Famous Curves Index<br />
<a href="https://mathshistory.st-andrews.ac.uk/Curves/">https://mathshistory.st-andrews.ac.uk/Curves/</a>
</li>

<li>Curve (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Curve">https://en.wikipedia.org/wiki/Curve</a>
</li>

<li>Mathematical curves<br />
<a href="https://www.2dcurves.com/index.html">https://www.2dcurves.com/index.html</a>
</li>

<li>Curves (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/topics/Curves.html">https://mathworld.wolfram.com/topics/Curves.html</a>
</li>

<li>Smooth Curve (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/SmoothCurve.html">https://mathworld.wolfram.com/SmoothCurve.html</a>
</li>

<li>Spirals (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/topics/Spirals.html">https://mathworld.wolfram.com/topics/Spirals.html</a>
</li>

<li>An Interactive Introduction to Splines<br />
<a href="https://ibiblio.org/e-notes/Splines/Intro.htm">https://ibiblio.org/e-notes/Splines/Intro.htm</a>
</li>

<li>Parabola<br />
<a href="https://www.2dcurves.com/conicsection/conicsectionp.html">https://www.2dcurves.com/conicsection/conicsectionp.html</a>
</li>

<li>Hyperbola<br />
<a href="https://www.2dcurves.com/conicsection/conicsectionh.html">https://www.2dcurves.com/conicsection/conicsectionh.html</a>
</li>

<li>Dioklova kisoida<br />
<a href="https://cs.wikipedia.org/wiki/Dioklova_kisoida">https://cs.wikipedia.org/wiki/Dioklova_kisoida</a>
</li>

<li>Archimédova spirála<br />
<a href="https://cs.wikipedia.org/wiki/Archim%C3%A9dova_spir%C3%A1la">https://cs.wikipedia.org/wiki/Archim%C3%A9dova_spir%C3%A1la</a>
</li>

<li>Conchoid (mathematics)<br />
<a href="https://en.wikipedia.org/wiki/Conchoid_(mathematics)">https://en.wikipedia.org/wiki/Conchoid_(mathematics)</a>
</li>

<li>Algebraic curve<br />
<a href="https://en.wikipedia.org/wiki/Algebraic_curve">https://en.wikipedia.org/wiki/Algebraic_curve</a>
</li>

<li>Transcendental curve<br />
<a href="https://en.wikipedia.org/wiki/Transcendental_curve">https://en.wikipedia.org/wiki/Transcendental_curve</a>
</li>

<li>Spiral<br />
<a href="https://en.wikipedia.org/wiki/Spiral">https://en.wikipedia.org/wiki/Spiral</a>
</li>

<li>List of spirals<br />
<a href="https://en.wikipedia.org/wiki/List_of_spirals">https://en.wikipedia.org/wiki/List_of_spirals</a>
</li>

<li>Hyperbolická spirála<br />
<a href="https://cs.wikipedia.org/wiki/Hyperbolick%C3%A1_spir%C3%A1la">https://cs.wikipedia.org/wiki/Hyperbolick%C3%A1_spir%C3%A1la</a>
</li>

<li>Hyperbolic Spiral<br />
<a href="https://mathworld.wolfram.com/HyperbolicSpiral.html">https://mathworld.wolfram.com/HyperbolicSpiral.html</a>
</li>

<li>Lituus (mathematics)<br />
<a href="https://en.wikipedia.org/wiki/Lituus_(mathematics)">https://en.wikipedia.org/wiki/Lituus_(mathematics)</a>
</li>

<li>Spiral of Spirals Fractals 2 with Python Turtle (Source Code)<br />
<a href="https://pythonturtle.academy/spiral-of-spirals-fractals-2-with-python-turtle-source-code/">https://pythonturtle.academy/spiral-of-spirals-fractals-2-with-python-turtle-source-code/</a>
</li>

<li>Cornu Spiral<br />
<a href="http://hyperphysics.gsu.edu/hbase/phyopt/cornu.html">http://hyperphysics.gsu.edu/hbase/phyopt/cornu.html</a>
</li>

<li>Spiral<br />
<a href="https://www.2dcurves.com/spiral/spiral.html">https://www.2dcurves.com/spiral/spiral.html</a>
</li>

<li>Algebraic Curves<br />
<a href="https://mathworld.wolfram.com/topics/AlgebraicCurves.html">https://mathworld.wolfram.com/topics/AlgebraicCurves.html</a>
</li>

<li>Elliptic Curves<br />
<a href="https://mathworld.wolfram.com/topics/EllipticCurves.html">https://mathworld.wolfram.com/topics/EllipticCurves.html</a>
</li>

<li>Eukleidovská konstrukce<br />
<a href="https://cs.wikipedia.org/wiki/Eukleidovsk%C3%A1_konstrukce">https://cs.wikipedia.org/wiki/Eukleidovsk%C3%A1_konstrukce</a>
</li>

<li>Euclidean Constructions<br />
<a href="http://www.cs.cas.cz/portal/AlgoMath/Geometry/PlaneGeometry/GeometricConstructions/EuclideanConstructions.htm">http://www.cs.cas.cz/portal/AlgoMath/Geometry/PlaneGeometry/GeometricConstructions/EuclideanConstructions.htm</a>
</li>

<li>Kvadratura kruhu<br />
<a href="https://cs.wikipedia.org/wiki/Kvadratura_kruhu">https://cs.wikipedia.org/wiki/Kvadratura_kruhu</a>
</li>

<li>Trisekce úhlu<br />
<a href="https://cs.wikipedia.org/wiki/Trisekce_%C3%BAhlu">https://cs.wikipedia.org/wiki/Trisekce_%C3%BAhlu</a>
</li>

<li>Straightedge and compass construction<br />
<a href="https://en.wikipedia.org/wiki/Straightedge_and_compass_construction">https://en.wikipedia.org/wiki/Straightedge_and_compass_construction</a>
</li>

<li>C.a.R.<br />
<a href="http://car.rene-grothmann.de/doc_en/index.html">http://car.rene-grothmann.de/doc_en/index.html</a>
</li>

<li>CaRMetal (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/C.a.R.">https://en.wikipedia.org/wiki/C.a.R.</a>
</li>

<li>CaRMetal (Španělsky a Francouzsky)<br />
<a href="http://carmetal.org/index.php/fr/">http://carmetal.org/index.php/fr/</a>
</li>

<li>CaRMetal (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/CaRMetal">https://en.wikipedia.org/wiki/CaRMetal</a>
</li>

<li>Regular Polygon<br />
<a href="http://mathforum.org/dr.math/faq/formulas/faq.regpoly.html">http://mathforum.org/dr.math/faq/formulas/faq.regpoly.html</a>
</li>

<li>Geometric Construction with the Compass Alone<br />
<a href="http://www.cut-the-knot.org/do_you_know/compass.shtml">http://www.cut-the-knot.org/do_you_know/compass.shtml</a>
</li>

<li>Kvadratura kruhu (Wikipedie)<br />
<a href="https://cs.wikipedia.org/wiki/Kvadratura_kruhu">https://cs.wikipedia.org/wiki/Kvadratura_kruhu</a>
</li>

<li>Compass equivalence theorem<br />
<a href="https://en.wikipedia.org/wiki/Compass_equivalence_theorem">https://en.wikipedia.org/wiki/Compass_equivalence_theorem</a>

<li>Curves we (mostly) don't learn in high school (and applications)<br />
<a href="https://www.youtube.com/watch?v=3izFMB91K_Q">https://www.youtube.com/watch?v=3izFMB91K_Q</a>
</li>

<li>Can You Really Derive Conic Formulae from a Cone? - Menaechmus' Constructions<br />
<a href="https://www.maa.org/press/periodicals/convergence/can-you-really-derive-conic-formulae-from-a-cone-menaechmus-constructions">https://www.maa.org/press/periodicals/convergence/can-you-really-derive-conic-formulae-from-a-cone-menaechmus-constructions</a>
</li>

<li>Apollonius of Perga<br />
<a href="https://en.wikipedia.org/wiki/Apollonius_of_Perga">https://en.wikipedia.org/wiki/Apollonius_of_Perga</a>
</li>

<li>Catenary arch<br />
<a href="https://en.wikipedia.org/wiki/Catenary_arch">https://en.wikipedia.org/wiki/Catenary_arch</a>
</li>

<li>Parabolic arch<br />
<a href="https://en.wikipedia.org/wiki/Parabolic_arch">https://en.wikipedia.org/wiki/Parabolic_arch</a>
</li>

<li>Wattova křivka<br />
<a href="https://www.geogebra.org/m/gNh4bW9r">https://www.geogebra.org/m/gNh4bW9r</a>
</li>

<li>Model stegosaura byl získán na stránce<br />
<a href="http://www.tur­bosquid.com/HTMLCli­ent/FullPrevi­ew/Index.cfm/ID/1710­71/Action/FullPreview">http://www.tur­bosquid.com/HTMLCli­ent/FullPrevi­ew/Index.cfm/ID/1710­71/Action/FullPreview</a>
</li>

<li>Obrázek nohy dinosaura byl získán na adrese<br />
<a href="http://perso.wa­nadoo.fr/rimas­son/3d/leg.htm">http://perso.wa­nadoo.fr/rimas­son/3d/leg.htm</a>
</li>

<li>Spirograph<br />
<a href="https://en.wikipedia.org/wiki/Spirograph">https://en.wikipedia.org/wiki/Spirograph</a>
</li>

<li>Epicykloida<br />
<a href="https://cs.wikipedia.org/wiki/Epicykloida">https://cs.wikipedia.org/wiki/Epicykloida</a>
</li>

<li>Hypocykloida<br />
<a href="https://cs.wikipedia.org/wiki/Hypocykloida">https://cs.wikipedia.org/wiki/Hypocykloida</a>
</li>

<li>Hypotrochoida<br />
<a href="https://cs.wikipedia.org/wiki/Hypotrochoida">https://cs.wikipedia.org/wiki/Hypotrochoida</a>
</li>

<li>Superelipsoidy a kvadriky v POV-Rayi<br />
<a href="https://www.root.cz/clanky/superelipsoidy-a-kvadriky-v-pov-rayi/">https://www.root.cz/clanky/superelipsoidy-a-kvadriky-v-pov-rayi/</a>
</li>

<li>Fifty Famous Curves, Lots of Calculus Questions, And a Few Answers<br />
<a href="https://elepa.files.wordpress.com/2013/11/fifty-famous-curves.pdf">https://elepa.files.wordpress.com/2013/11/fifty-famous-curves.pdf</a>
</li>

<li>Barr, A.H.: Superquadrics and Angle Preserving Transformations,<br />
IEEE Computer Graphics and Applications, January 1981
</li>

<li>Bourke Paul: Quadrics,<br />
July 1996
</li>

<li>Bourke Paul: Superellipse and Superellipsoid,<br />
January 1990
</li>

<li>Faux, I.D. a Pratt, M.J.: Computational Geometry for Design and Manufacture,<br />
Ellis Horwood Ltd., Wiley &amp; Sons, 1979
</li>

<li>Wallace A.: Differential Topology,<br />
Benjamin/Cummings Co., Reading, Massachussetts, USA, 1968
</li>

<li>Glossary of Bridge Terminology<br />
<a href="http://sdrc.lib.uiowa.edu/eng/bridges/WaddellGlossary/GlossC.htm">http://sdrc.lib.uiowa.edu/eng/bridges/WaddellGlossary/GlossC.htm</a>
</li>

<li>Brachistochrona<br />
<a href="https://cs.wikipedia.org/wiki/Brachistochrona">https://cs.wikipedia.org/wiki/Brachistochrona</a>
</li>

<li>Missions: Cassini<br />
<a href="https://solarsystem.nasa.gov/missions/cassini/overview/">https://solarsystem.nasa.gov/missions/cassini/overview/</a>
</li>

<li>Giovanni Domenico Cassini<br />
<a href="https://en.wikipedia.org/wiki/Giovanni_Domenico_Cassini">https://en.wikipedia.org/wiki/Giovanni_Domenico_Cassini</a>
</li>

<li>Cassini Ovals<br />
<a href="https://mathworld.wolfram.com/CassiniOvals.html">https://mathworld.wolfram.com/CassiniOvals.html</a>
</li>

<li>Geocentrismus<br />
<a href="https://cs.wikipedia.org/wiki/Geocentrismus">https://cs.wikipedia.org/wiki/Geocentrismus</a>
</li>

<li>Who was Giovanni Cassini?<br />
<a href="https://www.universetoday.com/130823/who-was-giovanni-cassini/">https://www.universetoday.com/130823/who-was-giovanni-cassini/</a>
</li>

<li>Special plane curves<br />
<a href="http://xahlee.info/SpecialPlaneCurves_dir/ConicSections_dir/conicSections.html">http://xahlee.info/SpecialPlaneCurves_dir/ConicSections_dir/conicSections.html</a>
</li>

<li>Why Does Slicing a Cone Give an Ellipse?<br />
<a href="https://infinityisreallybig.com/2019/02/08/why-does-slicing-a-cone-give-an-ellipse/">https://infinityisreallybig.com/2019/02/08/why-does-slicing-a-cone-give-an-ellipse/</a>
</li>

<li>Interpolace<br />
<a href="https://mathonline.fme.vutbr.cz/pg/Algoritmy/05_APROX_KRIVKY.htm">https://mathonline.fme.vutbr.cz/pg/Algoritmy/05_APROX_KRIVKY.htm</a>
</li>

<li>Lagrange Polynomial Interpolation<br />
<a href="https://pythonnumericalmethods.berkeley.edu/notebooks/chapter17.04-Lagrange-Polynomial-Interpolation.html">https://pythonnumericalmethods.berkeley.edu/notebooks/chapter17.04-Lagrange-Polynomial-Interpolation.html</a>
</li>

<li>Python Program for Lagrange Interpolation Method (with Output)<br />
<a href="https://www.codesansar.com/numerical-methods/python-program-lagrange-interpolation-method.htm">https://www.codesansar.com/numerical-methods/python-program-lagrange-interpolation-method.htm</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

