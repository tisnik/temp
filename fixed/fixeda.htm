<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Výpočty v systému pevné řádové tečky X</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Výpočty v systému pevné řádové tečky X - Algoritmus CORDIC v FX formátu a goniometrické funkce</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V desáté a zároveň i poslední části seriálu věnovaného matematickým výpočtům s numerickými hodnotami uloženými ve formátu pevné i plovoucí řádové binární čárky dokončíme popis implementace všestranného algoritmu CORDIC realizovaného nad čísly s pevnou řádovou čárkou. Zaměříme se na zbylé goniometrické funkce a také si přiblížíme problematiku chyb vzniklých volbou malého počtu iterací při provádění rotací vektorů algoritmem CORDIC.</p>



<h1>Obsah</h1>
<p>
<a href="#k01">1. Výpočet goniometrických funkcí sin() a cos()</a><br />
<a href="#k02">2. Funkce pro výpočet sin() algoritmem CORDIC</a><br />
<a href="#k03">3. Vliv počtu iterací na přesnost výpočtů funkce sin()</a><br />
<a href="#k04">4. Funkce pro výpočet cos() algoritmem CORDIC</a><br />
<a href="#k05">5. Vliv počtu iterací na přesnost výpočtů funkce cos()</a><br />
<a href="#k06">6. Literatura</a><br />
<a href="#k07">7. Odkazy na Internetu</a><br />
<a href="#k08">8. Slovo závěrem</a><br />
</p>



<p><a name="k01"></a></p>
<h1>1. Výpočet goniometrických funkcí sin() a cos()</h1>

<p>Jak je již z&nbsp;názvu první kapitoly patrné, dnes se budeme zabývat
výpočty goniometrických funkcí pomocí algoritmu CORDIC, přičemž všechny výpočty
budou prováděny ve formátu pevné řádové binární čárky. Konkrétně se bude jednat
o formát čísel se znaménkem, kde počet bitů před binární řádovou čárkou i za
binární řádovou čárkou je shodný a dosahuje hodnoty šestnácti bitů:
<strong>A=B=16</strong>. Na začátku si pro zopakování řekněme, jakým způsobem
se algoritmus CORDIC používá pro výpočet funkcí sinus a kosinus. Nejprve je
vypočtena tabulka úhlů (tj.&nbsp;arkustangenty záporných druhých mocnin dvojky)
naprosto stejným způsobem, jako v&nbsp;demonstračním příkladu uvedeném minule.
Po vytvoření této tabulky je již možné CORDIC spustit. Počáteční souřadnice
vektoru <strong>r</strong> jsou nastaveny na hodnotu <i>[1, 0]</i> (samozřejmě
až po převodu na formát pevné řádové binární čárky, což je ovšem pro hodnoty 1
a 0 triviální). Vektor je posléze v&nbsp;iterační smyčce rotován tak dlouho,
dokud neproběhne daný počet iterací.</p>

<p>Úhel vektoru <strong>r</strong> se přitom z&nbsp;počáteční hodnoty 0
neustále přibližuje k&nbsp;zadanému úhlu <i>&delta;</i>, jelikož se
v&nbsp;iterační smyčce zadaný úhel adaptivně buď zmenšuje či zvětšuje o hodnotu
uloženou v&nbsp;tabulce <i>atans[]</i> (zde se jedná o posloupnost, ve které se
čísla neustále zmenšují, proto je konvergence ke správnému výsledku zaručena).
Výsledek, tj.&nbsp;hodnoty funkcí sinus a kosinus, je uložen v&nbsp;nových
souřadnicích vektoru <strong>r</strong> (v&nbsp;našem případě vynásobený o
konstantu <i>K_fx</i>, což je ve skutečnosti konstanta <i>F_float</i> převedená
pro snazší výpočty do formátu FX) a to z&nbsp;toho důvodu, že vektor rotoval na
jednotkové kružnici a souřadnice jakéhokoli bodu ležícího na jednotkové
kružnici přímo odpovídají hodnotám sinu a kosinu úhlu tohoto bodu a počátku
souřadné soustavy počítaného od kladné horizontální poloosy. Nejprve si ukažme
funkci, která vypočte tabulku úhlů pro záporné druhé mocniny čísla dvě (i tuto
funkci jsme si uváděli minule):</p>

<pre>

#define MAX_ITER dostatečně_velké_číslo

/*
 * Vytvoření tabulky pro výpočet goniometrických
 * funkcí pomocí algoritmu CORDIC
 */
void fx_create_tables(void)
{
    int i;
    for (i=0; i&lt;MAX_ITER; i++) {
        double p=pow(2.0, -i);
        atans[i]=fp2fx(atan(p));
        pows[i]=fp2fx(p);
    }
}

</pre>

<p>Obsah tabulky si můžeme pro jistotu vypsat na standardní výstup:</p>

<pre>

    /* kontrolní výpis tabulky atans[] */
    for (i=0; i&lt;MAX_ITER; i++)
        printf("%d\t%f\n", i, fx2fp(rad2deg(atans[i])));

</pre>

<p>Dále si uveďme výpočet konstanty <i>K</i> uložené ve formátu pevné řádové binární čárky:</p>

<pre>

/* počet míst před a za binární řádovou čárkou */
#define A 16
#define B 16

/* "zesílení" při rotacích */
#define K_float 0.6073

/* převod K do formátu FX */
static fx K_fx=(fx)(K_float*(2&lt;&lt;(B-1)));

</pre>



<p><a name="k02"></a></p>
<h1>2. Funkce pro výpočet sin() algoritmem CORDIC</h1>

<p>Výpočet goniometrické funkce <i>sin()</i> pomocí algoritmu CORDIC je při
použití formátu pevné řádové binární čárky velmi snadný a současně i přímočarý.
Dokonce je možné říci, že výpočet je oproti verzi používající plovoucí řádovou
čárku jednodušší, a to z&nbsp;toho důvodu, že se místo pomocné tabulky
s&nbsp;druhými mocninami čísla dvě přímo používá operace pro aritmetický posuv
doprava (ten je podporován přímo centrální procesorovou jednotkou, jedná se
tedy o znatelné zrychlení celého výpočtu). Při implementaci algoritmu CORDIC
v&nbsp;programovacím jazyku C může funkce pro výpočet sinu vypadat následovně
(připomeňme si, že výsledek je uložen v&nbsp;y-ové složce orotovaného vektoru
<strong>r</strong>):</p>

<pre>

/* výpočet funkce sin() pro zadaný úhel delta */
fx fx_sin_cordic_optim(fx delta)
{
    int i;
    static fx K_fx=(fx)(K_float*(2&lt;&lt;(B-1)));
    /* nastavení počátečních podmínek */
    fx x0=int2fx(1);
    fx y0=0;
    fx xn;
    for (i=0; i&lt;MAX_ITER; i++) {            /* iterační smyčka */
        if (delta&lt;0) {                      /* úhel je záporný =&gt; rotace doleva */
            xn=fx_add(x0, y0&gt;&gt;i);           /* místo násobení bitový posuv */
            y0=fx_sub(y0, x0&gt;&gt;i);
            delta=fx_add(delta, atans[i]);
        }
        else {                              /* úhel je kladný =&gt; rotace doprava */
            xn=fx_sub(x0, y0&gt;&gt;i);
            y0=fx_add(y0, x0&gt;&gt;i);
            delta=fx_sub(delta, atans[i]);
        }
        x0=xn;
    }
    return fx_mul(y0, K_fx);                /* opravit "zesílení" výsledku */
}

</pre>

<p>Výše uvedenou Céčkovskou funkci <strong>fx_sin_cordic_optim()</strong> si
můžeme otestovat na výpočtu úhlů ležících v&nbsp;prvním kvadrantu, tj.&nbsp;od
0&deg; do 90&deg;. Kromě vypočtených hodnot je u každého úhlu uvedena i hodnota
vypočtená pomocí FPU, dále pak absolutní a relativní chyba. Tučně jsou
zvýrazněny ty relativní chyby, které jsou menší než jedno procento:</p>

<h2>Výpočet funkce sin() optimalizovanou metodou CORDIC</h2>

<table>
<tr><th>Úhel</th><th>sin() dle CORDIC</th><th>sin() dle FPU</th><th>absolutní chyba</th><th>relativní chyba</th></tr>
<tr><td>00</td><td>  0.0000000000</td><td>  0.0000000000</td><td>0.0000000000</td><td><strong>   0.000%</strong></td></tr>
<tr><td>01</td><td>  0.0165557861</td><td>  0.0174524064</td><td>0.0008966203</td><td>   5.138%</td></tr>
<tr><td>02</td><td>  0.0331115723</td><td>  0.0348994967</td><td>0.0017879244</td><td>   5.123%</td></tr>
<tr><td>03</td><td>  0.0520324707</td><td>  0.0523359562</td><td>0.0003034855</td><td><strong>   0.580%</strong></td></tr>
<tr><td>04</td><td>  0.0685882568</td><td>  0.0697564737</td><td>0.0011682169</td><td>   1.675%</td></tr>
<tr><td>05</td><td>  0.0851440430</td><td>  0.0871557427</td><td>0.0020116998</td><td>   2.308%</td></tr>
<tr><td>06</td><td>  0.1040649414</td><td>  0.1045284633</td><td>0.0004635219</td><td><strong>   0.443%</strong></td></tr>
<tr><td>07</td><td>  0.1206207275</td><td>  0.1218693434</td><td>0.0012486159</td><td>   1.025%</td></tr>
<tr><td>08</td><td>  0.1371765137</td><td>  0.1391731010</td><td>0.0019965873</td><td>   1.435%</td></tr>
<tr><td>09</td><td>  0.1537322998</td><td>  0.1564344650</td><td>0.0027021652</td><td>   1.727%</td></tr>
<tr><td>10</td><td>  0.1726531982</td><td>  0.1736481777</td><td>0.0009949794</td><td><strong>   0.573%</strong></td></tr>
<tr><td>11</td><td>  0.1892089844</td><td>  0.1908089954</td><td>0.0016000110</td><td><strong>   0.839%</strong></td></tr>
<tr><td>12</td><td>  0.2057647705</td><td>  0.2079116908</td><td>0.0021469203</td><td>   1.033%</td></tr>
<tr><td>13</td><td>  0.2223205566</td><td>  0.2249510543</td><td>0.0026304977</td><td>   1.169%</td></tr>
<tr><td>14</td><td>  0.2388763428</td><td>  0.2419218956</td><td>0.0030455528</td><td>   1.259%</td></tr>
<tr><td>15</td><td>  0.2577972412</td><td>  0.2588190451</td><td>0.0010218039</td><td><strong>   0.395%</strong></td></tr>
<tr><td>16</td><td>  0.2743530273</td><td>  0.2756373558</td><td>0.0012843285</td><td><strong>   0.466%</strong></td></tr>
<tr><td>17</td><td>  0.2909088135</td><td>  0.2923717047</td><td>0.0014628912</td><td><strong>   0.500%</strong></td></tr>
<tr><td>18</td><td>  0.3074645996</td><td>  0.3090169944</td><td>0.0015523948</td><td><strong>   0.502%</strong></td></tr>
<tr><td>19</td><td>  0.3240203857</td><td>  0.3255681545</td><td>0.0015477687</td><td><strong>   0.475%</strong></td></tr>
<tr><td>20</td><td>  0.3405761719</td><td>  0.3420201433</td><td>0.0014439715</td><td><strong>   0.422%</strong></td></tr>
<tr><td>21</td><td>  0.3571319580</td><td>  0.3583679495</td><td>0.0012359915</td><td><strong>   0.345%</strong></td></tr>
<tr><td>22</td><td>  0.3713226318</td><td>  0.3746065934</td><td>0.0032839616</td><td><strong>   0.877%</strong></td></tr>
<tr><td>23</td><td>  0.3878784180</td><td>  0.3907311285</td><td>0.0028527105</td><td><strong>   0.730%</strong></td></tr>
<tr><td>24</td><td>  0.4044342041</td><td>  0.4067366431</td><td>0.0023024390</td><td><strong>   0.566%</strong></td></tr>
<tr><td>25</td><td>  0.4209899902</td><td>  0.4226182617</td><td>0.0016282715</td><td><strong>   0.385%</strong></td></tr>
<tr><td>26</td><td>  0.4351806641</td><td>  0.4383711468</td><td>0.0031904827</td><td><strong>   0.728%</strong></td></tr>
<tr><td>27</td><td>  0.4517364502</td><td>  0.4539904997</td><td>0.0022540495</td><td><strong>   0.496%</strong></td></tr>
<tr><td>28</td><td>  0.4659271240</td><td>  0.4694715628</td><td>0.0035444388</td><td><strong>   0.755%</strong></td></tr>
<tr><td>29</td><td>  0.4824829102</td><td>  0.4848096202</td><td>0.0023267101</td><td><strong>   0.480%</strong></td></tr>
<tr><td>30</td><td>  0.4966735840</td><td>  0.5000000000</td><td>0.0033264160</td><td><strong>   0.665%</strong></td></tr>
<tr><td>31</td><td>  0.5132293701</td><td>  0.5150380749</td><td>0.0018087048</td><td><strong>   0.351%</strong></td></tr>
<tr><td>32</td><td>  0.5274200439</td><td>  0.5299192642</td><td>0.0024992203</td><td><strong>   0.472%</strong></td></tr>
<tr><td>33</td><td>  0.5416107178</td><td>  0.5446390350</td><td>0.0030283172</td><td><strong>   0.556%</strong></td></tr>
<tr><td>34</td><td>  0.5558013916</td><td>  0.5591929035</td><td>0.0033915119</td><td><strong>   0.607%</strong></td></tr>
<tr><td>35</td><td>  0.5699920654</td><td>  0.5735764364</td><td>0.0035843709</td><td><strong>   0.625%</strong></td></tr>
<tr><td>36</td><td>  0.5841827393</td><td>  0.5877852523</td><td>0.0036025130</td><td><strong>   0.613%</strong></td></tr>
<tr><td>37</td><td>  0.5983734131</td><td>  0.6018150232</td><td>0.0034416101</td><td><strong>   0.572%</strong></td></tr>
<tr><td>38</td><td>  0.6125640869</td><td>  0.6156614753</td><td>0.0030973884</td><td><strong>   0.503%</strong></td></tr>
<tr><td>39</td><td>  0.6267547607</td><td>  0.6293203910</td><td>0.0025656303</td><td><strong>   0.408%</strong></td></tr>
<tr><td>40</td><td>  0.6385803223</td><td>  0.6427876097</td><td>0.0042072874</td><td><strong>   0.655%</strong></td></tr>
<tr><td>41</td><td>  0.6527709961</td><td>  0.6560590290</td><td>0.0032880329</td><td><strong>   0.501%</strong></td></tr>
<tr><td>42</td><td>  0.6669616699</td><td>  0.6691306064</td><td>0.0021689364</td><td><strong>   0.324%</strong></td></tr>
<tr><td>43</td><td>  0.6787872314</td><td>  0.6819983601</td><td>0.0032111286</td><td><strong>   0.471%</strong></td></tr>
<tr><td>44</td><td>  0.6906127930</td><td>  0.6946583705</td><td>0.0040455775</td><td><strong>   0.582%</strong></td></tr>
<tr><td>45</td><td>  0.7048034668</td><td>  0.7071067812</td><td>0.0023033144</td><td><strong>   0.326%</strong></td></tr>
<tr><td>46</td><td>  0.7166290283</td><td>  0.7193398003</td><td>0.0027107720</td><td><strong>   0.377%</strong></td></tr>
<tr><td>47</td><td>  0.7284545898</td><td>  0.7313537016</td><td>0.0028991118</td><td><strong>   0.396%</strong></td></tr>
<tr><td>48</td><td>  0.7402801514</td><td>  0.7431448255</td><td>0.0028646741</td><td><strong>   0.385%</strong></td></tr>
<tr><td>49</td><td>  0.7521057129</td><td>  0.7547095802</td><td>0.0026038673</td><td><strong>   0.345%</strong></td></tr>
<tr><td>50</td><td>  0.7615661621</td><td>  0.7660444431</td><td>0.0044782810</td><td><strong>   0.585%</strong></td></tr>
<tr><td>51</td><td>  0.7733917236</td><td>  0.7771459615</td><td>0.0037542378</td><td><strong>   0.483%</strong></td></tr>
<tr><td>52</td><td>  0.7852172852</td><td>  0.7880107536</td><td>0.0027934685</td><td><strong>   0.354%</strong></td></tr>
<tr><td>53</td><td>  0.7946777344</td><td>  0.7986355100</td><td>0.0039577757</td><td><strong>   0.496%</strong></td></tr>
<tr><td>54</td><td>  0.8065032959</td><td>  0.8090169944</td><td>0.0025136985</td><td><strong>   0.311%</strong></td></tr>
<tr><td>55</td><td>  0.8159637451</td><td>  0.8191520443</td><td>0.0031882992</td><td><strong>   0.389%</strong></td></tr>
<tr><td>56</td><td>  0.8254241943</td><td>  0.8290375726</td><td>0.0036133782</td><td><strong>   0.436%</strong></td></tr>
<tr><td>57</td><td>  0.8348846436</td><td>  0.8386705679</td><td>0.0037859244</td><td><strong>   0.451%</strong></td></tr>
<tr><td>58</td><td>  0.8443450928</td><td>  0.8480480962</td><td>0.0037030034</td><td><strong>   0.437%</strong></td></tr>
<tr><td>59</td><td>  0.8538055420</td><td>  0.8571673007</td><td>0.0033617587</td><td><strong>   0.392%</strong></td></tr>
<tr><td>60</td><td>  0.8632659912</td><td>  0.8660254038</td><td>0.0027594126</td><td><strong>   0.319%</strong></td></tr>
<tr><td>61</td><td>  0.8703613281</td><td>  0.8746197071</td><td>0.0042583790</td><td><strong>   0.487%</strong></td></tr>
<tr><td>62</td><td>  0.8798217773</td><td>  0.8829475929</td><td>0.0031258155</td><td><strong>   0.354%</strong></td></tr>
<tr><td>63</td><td>  0.8869171143</td><td>  0.8910065242</td><td>0.0040894099</td><td><strong>   0.459%</strong></td></tr>
<tr><td>64</td><td>  0.8940124512</td><td>  0.8987940463</td><td>0.0047815951</td><td><strong>   0.532%</strong></td></tr>
<tr><td>65</td><td>  0.9034729004</td><td>  0.9063077870</td><td>0.0028348866</td><td><strong>   0.313%</strong></td></tr>
<tr><td>66</td><td>  0.9105682373</td><td>  0.9135454576</td><td>0.0029772203</td><td><strong>   0.326%</strong></td></tr>
<tr><td>67</td><td>  0.9176635742</td><td>  0.9205048535</td><td>0.0028412792</td><td><strong>   0.309%</strong></td></tr>
<tr><td>68</td><td>  0.9223937988</td><td>  0.9271838546</td><td>0.0047900557</td><td><strong>   0.517%</strong></td></tr>
<tr><td>69</td><td>  0.9294891357</td><td>  0.9335804265</td><td>0.0040912908</td><td><strong>   0.438%</strong></td></tr>
<tr><td>70</td><td>  0.9365844727</td><td>  0.9396926208</td><td>0.0031081481</td><td><strong>   0.331%</strong></td></tr>
<tr><td>71</td><td>  0.9413146973</td><td>  0.9455185756</td><td>0.0042038783</td><td><strong>   0.445%</strong></td></tr>
<tr><td>72</td><td>  0.9460449219</td><td>  0.9510565163</td><td>0.0050115944</td><td><strong>   0.527%</strong></td></tr>
<tr><td>73</td><td>  0.9531402588</td><td>  0.9563047560</td><td>0.0031644972</td><td><strong>   0.331%</strong></td></tr>
<tr><td>74</td><td>  0.9578704834</td><td>  0.9612616959</td><td>0.0033912125</td><td><strong>   0.353%</strong></td></tr>
<tr><td>75</td><td>  0.9626007080</td><td>  0.9659258263</td><td>0.0033251183</td><td><strong>   0.344%</strong></td></tr>
<tr><td>76</td><td>  0.9673309326</td><td>  0.9702957263</td><td>0.0029647937</td><td><strong>   0.306%</strong></td></tr>
<tr><td>77</td><td>  0.9696960449</td><td>  0.9743700648</td><td>0.0046740199</td><td><strong>   0.480%</strong></td></tr>
<tr><td>78</td><td>  0.9744262695</td><td>  0.9781476007</td><td>0.0037213312</td><td><strong>   0.380%</strong></td></tr>
<tr><td>79</td><td>  0.9767913818</td><td>  0.9816271834</td><td>0.0048358016</td><td><strong>   0.493%</strong></td></tr>
<tr><td>80</td><td>  0.9815216064</td><td>  0.9848077530</td><td>0.0032861466</td><td><strong>   0.334%</strong></td></tr>
<tr><td>81</td><td>  0.9838867188</td><td>  0.9876883406</td><td>0.0038016218</td><td><strong>   0.385%</strong></td></tr>
<tr><td>82</td><td>  0.9862518311</td><td>  0.9902680687</td><td>0.0040162377</td><td><strong>   0.406%</strong></td></tr>
<tr><td>83</td><td>  0.9886169434</td><td>  0.9925461516</td><td>0.0039292083</td><td><strong>   0.396%</strong></td></tr>
<tr><td>84</td><td>  0.9909820557</td><td>  0.9945218954</td><td>0.0035398397</td><td><strong>   0.356%</strong></td></tr>
<tr><td>85</td><td>  0.9909820557</td><td>  0.9961946981</td><td>0.0052126424</td><td><strong>   0.523%</strong></td></tr>
<tr><td>86</td><td>  0.9933471680</td><td>  0.9975640503</td><td>0.0042168823</td><td><strong>   0.423%</strong></td></tr>
<tr><td>87</td><td>  0.9933471680</td><td>  0.9986295348</td><td>0.0052823668</td><td><strong>   0.529%</strong></td></tr>
<tr><td>88</td><td>  0.9957122803</td><td>  0.9993908270</td><td>0.0036785467</td><td><strong>   0.368%</strong></td></tr>
<tr><td>89</td><td>  0.9957122803</td><td>  0.9998476952</td><td>0.0041354149</td><td><strong>   0.414%</strong></td></tr>
<tr><td>90</td><td>  0.9957122803</td><td>  1.0000000000</td><td>0.0042877197</td><td><strong>   0.429%</strong></td></tr>
</table>

<h2>Statistické vlastnosti výpočtu</h2>

<table>
<tr><td><strong>Počet iterací:</strong></td><td>16</td></tr>
<tr><td><strong>Součet absolutních chyb:</strong></td><td>   0.270</td></tr>
<tr><td><strong>Součet relativních chyb:</strong></td><td>  59.119%</td></tr>
<tr><td><strong>Průměrná absolutní chyba:</strong></td><td>   0.003</td></tr>
<tr><td><strong>Průměrná relativní chyba:</strong></td><td>   0.650%</td></tr>
</table>



<p><a name="k03"></a></p>
<h1>3. Vliv počtu iterací na přesnost výpočtů funkce sin()</h1>

<p>V&nbsp;předchozí kapitole jsme si uvedli výsledky výpočtů funkce sinus pro
<strong>šestnáct</strong> iterací. Proč jsem však zvolil zrovna tuto hodnotu?
Stanovit optimální počet iterací je poněkud ošemetné. Malý počet iterací má za
následek zvýšení chyb při výpočtu, výpočty však budou prováděny značně
rychleji. Naopak příliš velký počet iterací může výpočet zpomalit a to bez
vlivu na přesnost výsledku, protože při použití FX aritmetiky je pouze omezený
počet bitů za binární řádovou čárkou. Jako pravidlo je možné uvést, že počet
iterací by měl být zhruba shodný s&nbsp;počtem významových bitů umístěných za
binární řádovou čárkou. Dokonce se o tom můžeme přesvědčit při použití mírně
upravené funkce pro výpočet sinu algoritmem CORDIC:</p>

<pre>

/* výpočet funkce sin() pro zadaný úhel delta */
/* a maximální počet iterací                  */
fx fx_sin_cordic_optim_iter(fx delta, int iter)
{
    int i;
    static fx K_fx=(fx)(K_float*(2&lt;&lt;(B-1)));
    /* nastavení počátečních podmínek */
    fx x0=int2fx(1);
    fx y0=0;
    fx xn;
    for (i=0; i&lt;iter; i++) {                /* iterační smyčka */
        if (delta&lt;0) {                      /* úhel je záporný =&gt; rotace doleva */
            xn=fx_add(x0, y0&gt;&gt;i);           /* místo násobení bitový posuv */
            y0=fx_sub(y0, x0&gt;&gt;i);
            delta=fx_add(delta, atans[i]);
        }
        else {                              /* úhel je kladný =&gt; rotace doprava */
            xn=fx_sub(x0, y0&gt;&gt;i);
            y0=fx_add(y0, x0&gt;&gt;i);
            delta=fx_sub(delta, atans[i]);
        }
        x0=xn;
    }
    return fx_mul(y0, K_fx);                /* opravit "zesílení" výsledku */
}

</pre>

<p>Tuto funkci využijeme v&nbsp;následujícím testovacím programu, který vypočte
statistické informace o chybách pro maximální počet iterací jdoucí od 1 do
32:</p>

<pre>

int main(void)
{
    int i;
    fx     sinfx;
    double delta;                           /* úhel, ze kterého se funkce počítá */
    double value;                           /* vypočtené hodnoty */
    double abs_err;                         /* absolutní chyby */
    double rel_err;                         /* relativní chyby */
    double sum_abs_err=0.0;                 /* součet chyb */
    double sum_rel_err=0.0;                 /* součet chyb */
    int iter;                               /* počitadlo iterací */

    fx_create_tables();

    /* výpočet sin() optimalizovanou metodou CORDIC */
    puts("\n&lt;h2&gt;Vliv počtu iterací na výpočet sin() optimalizovanou metodou CORDIC&lt;/h2&gt;\n");
    puts("&lt;table&gt;");
    puts("&lt;tr&gt;"\
         "&lt;th&gt;&lt;strong&gt;Počet iterací:&lt;/strong&gt;&lt;/th&gt;"\
         "&lt;th&gt;&lt;strong&gt;Součet absolutních chyb:&lt;/strong&gt;&lt;/th&gt;"\
         "&lt;th&gt;&lt;strong&gt;Součet relativních chyb:&lt;/strong&gt;&lt;/th&gt;"\
         "&lt;th&gt;&lt;strong&gt;Průměrná absolutní chyba:&lt;/strong&gt;&lt;/th&gt;"\
         "&lt;th&gt;&lt;strong&gt;Průměrná relativní chyba:&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;");
    for (iter=1; iter&lt;=32; iter++) {
        sum_abs_err=0.0;
        sum_rel_err=0.0;
        for (i=0; i&lt;=90; i++) {                 /* výpočetní smyčka */
            delta=deg2rad(i);                   /* převod úhlu na radiány */
            sinfx=fx_sin_cordic_optim_iter(fp2fx(delta), iter);  /* aplikace algoritmu CORDIC */
            value=fx2fp(sinfx);                 /* výpočet funkce sin */
            abs_err=fabs(value-sin(delta));     /* výpočet absolutních chyb */
            rel_err=sin(delta)==0 ? 0:100.0*abs_err/sin(delta);
            sum_abs_err+=abs_err;
            sum_rel_err+=rel_err;
        }
        printf("&lt;tr&gt;&lt;td&gt;%d&lt;/td&gt;&lt;td&gt;%5.3f&lt;/td&gt;&lt;td&gt;%5.3f%%&lt;/td&gt;&lt;td&gt;%5.3f&lt;/td&gt;&lt;td&gt;%5.3f%%&lt;/td&gt;&lt;/tr&gt;\n",
               iter, sum_abs_err, sum_rel_err, sum_abs_err/91.0, sum_rel_err/91.0);
    }
    puts("&lt;/table&gt;");
    return 0;
}

</pre>

<p>Výsledky běhu předešlého testovacího příkladu jsou velmi zajímavé, zejména
při pohledu na zlom okolo hranice čtrnácti iterací:</p>


<h2>Vliv počtu iterací na výpočet sin() optimalizovanou metodou CORDIC</h2>

<table>
<tr><th><strong>Počet iterací:</strong></th><th><strong>Součet absolutních chyb:</strong></th><th><strong>Součet relativních chyb:</strong></th><th><strong>Průměrná absolutní chyba:</strong></th><th><strong>Průměrná relativní chyba:</strong></th></tr>
<tr><td>1</td><td>25.036</td><td>12524.416%</td><td>0.275</td><td>137.631%</td></tr>
<tr><td>2</td><td>11.925</td><td>5697.160%</td><td>0.131</td><td>62.606%</td></tr>
<tr><td>3</td><td>6.387</td><td>2056.063%</td><td>0.070</td><td>22.594%</td></tr>
<tr><td>4</td><td>3.565</td><td>1876.936%</td><td>0.039</td><td>20.626%</td></tr>
<tr><td>5</td><td>1.741</td><td>673.899%</td><td>0.019</td><td>7.405%</td></tr>
<tr><td>6</td><td>0.939</td><td>461.678%</td><td>0.010</td><td>5.073%</td></tr>
<tr><td>7</td><td>0.547</td><td>231.200%</td><td>0.006</td><td>2.541%</td></tr>
<tr><td>8</td><td>0.362</td><td>113.516%</td><td>0.004</td><td>1.247%</td></tr>
<tr><td>9</td><td>0.294</td><td>68.732%</td><td>0.003</td><td>0.755%</td></tr>
<tr><td>10</td><td>0.272</td><td>60.653%</td><td>0.003</td><td>0.667%</td></tr>
<tr><td>11</td><td>0.268</td><td>59.101%</td><td>0.003</td><td>0.649%</td></tr>
<tr><td>12</td><td>0.265</td><td>57.142%</td><td>0.003</td><td>0.628%</td></tr>
<tr><td>13</td><td>0.275</td><td>63.638%</td><td>0.003</td><td>0.699%</td></tr>
<tr><td>14</td><td>0.265</td><td>57.773%</td><td>0.003</td><td>0.635%</td></tr>
<tr><td>15</td><td>0.270</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>16</td><td>0.270</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>17</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>18</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>19</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>20</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>21</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>22</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>23</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>24</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>25</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>26</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>27</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>28</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>29</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>30</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>31</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>32</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
</table>



<p><a name="k04"></a></p>
<h1>4. Funkce pro výpočet cos() algoritmem CORDIC</h1>

<p>Goniometrická funkce kosinus se při použití algoritmu CORDIC počítá
prakticky stejným způsobem, jako funkce sinus. Jediný rozdíl spočívá
v&nbsp;tom, že po dokončení rotace vektoru <strong>r</strong> je hodnota sinu
uložena v&nbsp;jeho y-ové složce, zatímco hodnota kosinu ve složce x-ové.
Zdrojový tvar Céčkovské funkce na výpočet kosinu je tedy nepatrně odlišný
v&nbsp;posledním řádku:</p>

<pre>

/* výpočet funkce cos() pro zadaný úhel delta */
fx fx_cos_cordic_optim(fx delta)
{
    int i;
    static fx K_fx=(fx)(K_float*(2&lt;&lt;(B-1)));
    /* nastavení počátečních podmínek */
    fx x0=int2fx(1);
    fx y0=0;
    fx xn;
    for (i=0; i&lt;MAX_ITER; i++) {            /* iterační smyčka */
        if (delta&lt;0) {                      /* úhel je záporný =&gt; rotace doleva */
            xn=fx_add(x0, y0&gt;&gt;i);           /* místo násobení bitový posuv */
            y0=fx_sub(y0, x0&gt;&gt;i);
            delta=fx_add(delta, atans[i]);
        }
        else {                              /* úhel je kladný =&gt; rotace doprava */
            xn=fx_sub(x0, y0&gt;&gt;i);
            y0=fx_add(y0, x0&gt;&gt;i);
            delta=fx_sub(delta, atans[i]);
        }
        x0=xn;
    }
    return fx_mul(x0, K_fx);                /* opravit "zesílení" výsledku */
}

</pre>

<h2>Výpočet funkce cos() optimalizovanou metodou CORDIC</h2>

<p>Výsledky výpočtu funkce kosinus pro šestnáct iterací algoritmu CORDIC jsou
zobrazeny v&nbsp;následující tabulce. Opět jsou zvýrazněny ty úhly, pro něž je
relativní chyba menší než jedno procento.</p>

<table>
<tr><th>Úhel</th><th>cos() dle CORDIC</th><th>cos() dle FPU</th><th>absolutní chyba</th><th>relativní chyba</th></tr>
<tr><td>00</td><td>0.996</td><td>1.000</td><td>0.004</td><td><strong>0.429%</strong></td></tr>
<tr><td>01</td><td>0.996</td><td>1.000</td><td>0.004</td><td><strong>0.414%</strong></td></tr>
<tr><td>02</td><td>0.996</td><td>0.999</td><td>0.004</td><td><strong>0.368%</strong></td></tr>
<tr><td>03</td><td>0.993</td><td>0.999</td><td>0.005</td><td><strong>0.529%</strong></td></tr>
<tr><td>04</td><td>0.993</td><td>0.998</td><td>0.004</td><td><strong>0.423%</strong></td></tr>
<tr><td>05</td><td>0.991</td><td>0.996</td><td>0.005</td><td><strong>0.523%</strong></td></tr>
<tr><td>06</td><td>0.991</td><td>0.995</td><td>0.004</td><td><strong>0.356%</strong></td></tr>
<tr><td>07</td><td>0.989</td><td>0.993</td><td>0.004</td><td><strong>0.396%</strong></td></tr>
<tr><td>08</td><td>0.986</td><td>0.990</td><td>0.004</td><td><strong>0.406%</strong></td></tr>
<tr><td>09</td><td>0.984</td><td>0.988</td><td>0.004</td><td><strong>0.385%</strong></td></tr>
<tr><td>10</td><td>0.982</td><td>0.985</td><td>0.003</td><td><strong>0.334%</strong></td></tr>
<tr><td>11</td><td>0.977</td><td>0.982</td><td>0.005</td><td><strong>0.493%</strong></td></tr>
<tr><td>12</td><td>0.974</td><td>0.978</td><td>0.004</td><td><strong>0.380%</strong></td></tr>
<tr><td>13</td><td>0.970</td><td>0.974</td><td>0.005</td><td><strong>0.480%</strong></td></tr>
<tr><td>14</td><td>0.967</td><td>0.970</td><td>0.003</td><td><strong>0.306%</strong></td></tr>
<tr><td>15</td><td>0.963</td><td>0.966</td><td>0.003</td><td><strong>0.344%</strong></td></tr>
<tr><td>16</td><td>0.958</td><td>0.961</td><td>0.003</td><td><strong>0.353%</strong></td></tr>
<tr><td>17</td><td>0.953</td><td>0.956</td><td>0.003</td><td><strong>0.331%</strong></td></tr>
<tr><td>18</td><td>0.946</td><td>0.951</td><td>0.005</td><td><strong>0.527%</strong></td></tr>
<tr><td>19</td><td>0.941</td><td>0.946</td><td>0.004</td><td><strong>0.445%</strong></td></tr>
<tr><td>20</td><td>0.937</td><td>0.940</td><td>0.003</td><td><strong>0.331%</strong></td></tr>
<tr><td>21</td><td>0.929</td><td>0.934</td><td>0.004</td><td><strong>0.438%</strong></td></tr>
<tr><td>22</td><td>0.922</td><td>0.927</td><td>0.005</td><td><strong>0.517%</strong></td></tr>
<tr><td>23</td><td>0.918</td><td>0.921</td><td>0.003</td><td><strong>0.309%</strong></td></tr>
<tr><td>24</td><td>0.911</td><td>0.914</td><td>0.003</td><td><strong>0.326%</strong></td></tr>
<tr><td>25</td><td>0.903</td><td>0.906</td><td>0.003</td><td><strong>0.313%</strong></td></tr>
<tr><td>26</td><td>0.894</td><td>0.899</td><td>0.005</td><td><strong>0.532%</strong></td></tr>
<tr><td>27</td><td>0.887</td><td>0.891</td><td>0.004</td><td><strong>0.459%</strong></td></tr>
<tr><td>28</td><td>0.880</td><td>0.883</td><td>0.003</td><td><strong>0.354%</strong></td></tr>
<tr><td>29</td><td>0.870</td><td>0.875</td><td>0.004</td><td><strong>0.487%</strong></td></tr>
<tr><td>30</td><td>0.863</td><td>0.866</td><td>0.003</td><td><strong>0.319%</strong></td></tr>
<tr><td>31</td><td>0.854</td><td>0.857</td><td>0.003</td><td><strong>0.392%</strong></td></tr>
<tr><td>32</td><td>0.844</td><td>0.848</td><td>0.004</td><td><strong>0.437%</strong></td></tr>
<tr><td>33</td><td>0.835</td><td>0.839</td><td>0.004</td><td><strong>0.451%</strong></td></tr>
<tr><td>34</td><td>0.825</td><td>0.829</td><td>0.004</td><td><strong>0.436%</strong></td></tr>
<tr><td>35</td><td>0.816</td><td>0.819</td><td>0.003</td><td><strong>0.389%</strong></td></tr>
<tr><td>36</td><td>0.807</td><td>0.809</td><td>0.003</td><td><strong>0.311%</strong></td></tr>
<tr><td>37</td><td>0.795</td><td>0.799</td><td>0.004</td><td><strong>0.496%</strong></td></tr>
<tr><td>38</td><td>0.785</td><td>0.788</td><td>0.003</td><td><strong>0.354%</strong></td></tr>
<tr><td>39</td><td>0.773</td><td>0.777</td><td>0.004</td><td><strong>0.483%</strong></td></tr>
<tr><td>40</td><td>0.762</td><td>0.766</td><td>0.004</td><td><strong>0.585%</strong></td></tr>
<tr><td>41</td><td>0.752</td><td>0.755</td><td>0.003</td><td><strong>0.345%</strong></td></tr>
<tr><td>42</td><td>0.740</td><td>0.743</td><td>0.003</td><td><strong>0.385%</strong></td></tr>
<tr><td>43</td><td>0.728</td><td>0.731</td><td>0.003</td><td><strong>0.396%</strong></td></tr>
<tr><td>44</td><td>0.717</td><td>0.719</td><td>0.003</td><td><strong>0.377%</strong></td></tr>
<tr><td>45</td><td>0.705</td><td>0.707</td><td>0.002</td><td><strong>0.326%</strong></td></tr>
<tr><td>46</td><td>0.691</td><td>0.695</td><td>0.004</td><td><strong>0.582%</strong></td></tr>
<tr><td>47</td><td>0.679</td><td>0.682</td><td>0.003</td><td><strong>0.471%</strong></td></tr>
<tr><td>48</td><td>0.667</td><td>0.669</td><td>0.002</td><td><strong>0.324%</strong></td></tr>
<tr><td>49</td><td>0.653</td><td>0.656</td><td>0.003</td><td><strong>0.501%</strong></td></tr>
<tr><td>50</td><td>0.639</td><td>0.643</td><td>0.004</td><td><strong>0.655%</strong></td></tr>
<tr><td>51</td><td>0.627</td><td>0.629</td><td>0.003</td><td><strong>0.408%</strong></td></tr>
<tr><td>52</td><td>0.613</td><td>0.616</td><td>0.003</td><td><strong>0.503%</strong></td></tr>
<tr><td>53</td><td>0.598</td><td>0.602</td><td>0.003</td><td><strong>0.572%</strong></td></tr>
<tr><td>54</td><td>0.584</td><td>0.588</td><td>0.004</td><td><strong>0.613%</strong></td></tr>
<tr><td>55</td><td>0.570</td><td>0.574</td><td>0.004</td><td><strong>0.625%</strong></td></tr>
<tr><td>56</td><td>0.556</td><td>0.559</td><td>0.003</td><td><strong>0.607%</strong></td></tr>
<tr><td>57</td><td>0.542</td><td>0.545</td><td>0.003</td><td><strong>0.556%</strong></td></tr>
<tr><td>58</td><td>0.527</td><td>0.530</td><td>0.002</td><td><strong>0.472%</strong></td></tr>
<tr><td>59</td><td>0.513</td><td>0.515</td><td>0.002</td><td><strong>0.351%</strong></td></tr>
<tr><td>60</td><td>0.497</td><td>0.500</td><td>0.003</td><td><strong>0.665%</strong></td></tr>
<tr><td>61</td><td>0.482</td><td>0.485</td><td>0.002</td><td><strong>0.480%</strong></td></tr>
<tr><td>62</td><td>0.466</td><td>0.469</td><td>0.004</td><td><strong>0.755%</strong></td></tr>
<tr><td>63</td><td>0.452</td><td>0.454</td><td>0.002</td><td><strong>0.496%</strong></td></tr>
<tr><td>64</td><td>0.435</td><td>0.438</td><td>0.003</td><td><strong>0.728%</strong></td></tr>
<tr><td>65</td><td>0.421</td><td>0.423</td><td>0.002</td><td><strong>0.385%</strong></td></tr>
<tr><td>66</td><td>0.404</td><td>0.407</td><td>0.002</td><td><strong>0.566%</strong></td></tr>
<tr><td>67</td><td>0.388</td><td>0.391</td><td>0.003</td><td><strong>0.730%</strong></td></tr>
<tr><td>68</td><td>0.371</td><td>0.375</td><td>0.003</td><td><strong>0.877%</strong></td></tr>
<tr><td>69</td><td>0.357</td><td>0.358</td><td>0.001</td><td><strong>0.345%</strong></td></tr>
<tr><td>70</td><td>0.341</td><td>0.342</td><td>0.001</td><td><strong>0.422%</strong></td></tr>
<tr><td>71</td><td>0.324</td><td>0.326</td><td>0.002</td><td><strong>0.475%</strong></td></tr>
<tr><td>72</td><td>0.307</td><td>0.309</td><td>0.002</td><td><strong>0.502%</strong></td></tr>
<tr><td>73</td><td>0.291</td><td>0.292</td><td>0.001</td><td><strong>0.500%</strong></td></tr>
<tr><td>74</td><td>0.274</td><td>0.276</td><td>0.001</td><td><strong>0.466%</strong></td></tr>
<tr><td>75</td><td>0.258</td><td>0.259</td><td>0.001</td><td><strong>0.395%</strong></td></tr>
<tr><td>76</td><td>0.239</td><td>0.242</td><td>0.003</td><td>1.259%</td></tr>
<tr><td>77</td><td>0.222</td><td>0.225</td><td>0.003</td><td>1.169%</td></tr>
<tr><td>78</td><td>0.206</td><td>0.208</td><td>0.002</td><td>1.033%</td></tr>
<tr><td>79</td><td>0.189</td><td>0.191</td><td>0.002</td><td><strong>0.839%</strong></td></tr>
<tr><td>80</td><td>0.173</td><td>0.174</td><td>0.001</td><td><strong>0.573%</strong></td></tr>
<tr><td>81</td><td>0.154</td><td>0.156</td><td>0.003</td><td>1.727%</td></tr>
<tr><td>82</td><td>0.137</td><td>0.139</td><td>0.002</td><td>1.435%</td></tr>
<tr><td>83</td><td>0.121</td><td>0.122</td><td>0.001</td><td>1.025%</td></tr>
<tr><td>84</td><td>0.104</td><td>0.105</td><td>0.000</td><td><strong>0.443%</strong></td></tr>
<tr><td>85</td><td>0.085</td><td>0.087</td><td>0.002</td><td>2.308%</td></tr>
<tr><td>86</td><td>0.069</td><td>0.070</td><td>0.001</td><td>1.675%</td></tr>
<tr><td>87</td><td>0.052</td><td>0.052</td><td>0.000</td><td><strong>0.580%</strong></td></tr>
<tr><td>88</td><td>0.033</td><td>0.035</td><td>0.002</td><td>5.123%</td></tr>
<tr><td>89</td><td>0.017</td><td>0.017</td><td>0.001</td><td>5.138%</td></tr>
<tr><td>90</td><td>-0.002</td><td>0.000</td><td>0.002</td><td><strong>0.000%</strong></td></tr>
</table>



<p><a name="k05"></a></p>
<h1>5. Vliv počtu iterací na přesnost výpočtů funkce cos()</h1>

<p>Podobně jako u funkce sinus, i u kosinu je možné zjistit vliv maximálního
počtu iterací algoritmu CORDIC na přesnost výpočtů funkce. Jelikož jsme použili
FX formát s&nbsp;šestnácti bity umístěnými za binární řádovou čárkou, je možné
předpokládat, že optimální bude použití šestnácti iterací, o čemž se můžeme
přesvědčit po překladu a spuštění následujícího testovacího příkladu.</p>

<h2>Vliv počtu iterací na výpočet cos() optimalizovanou metodou CORDIC</h2>

<pre>

int main(void)
{
    int i;
    fx     cosfx;
    double delta;                           /* úhel, ze kterého se funkce počítá */
    double value;                           /* vypočtené hodnoty */
    double abs_err;                         /* absolutní chyby */
    double rel_err;                         /* relativní chyby */
    char  *zvyr1, *zvyr2;                   /* ukazatele na konstantní řetězce pro */
                                            /* generování HTML */

    fx_create_tables();

    puts("\n&lt;h2&gt;Výpočet funkce cos() optimalizovanou metodou CORDIC&lt;/h2&gt;\n");
    puts("&lt;table&gt;");
    for (i=0; i&lt;=90; i++) {                 /* výpočetní smyčka */
        delta=deg2rad(i);                   /* převod úhlu na radiány */
        cosfx=fx_cos_cordic_optim(fp2fx(delta));  /* aplikace algoritmu CORDIC */
        value=fx2fp(cosfx);                 /* výpočet funkce cos */
        abs_err=fabs(value-cos(delta));     /* výpočet absolutních chyb */
        rel_err=cos(delta)&lt;=1e-10 ? 0:100.0*abs_err/cos(delta);
        if (rel_err&lt;=1.0) {
            zvyr1="&lt;strong&gt;";
            zvyr2="&lt;/strong&gt;";
        }
        else {
            zvyr1="";
            zvyr2="";
        }
        printf("&lt;tr&gt;&lt;td&gt;%02d&lt;/td&gt;&lt;td&gt;%5.3f&lt;/td&gt;&lt;td&gt;%5.3f%&lt;/td&gt;&lt;td&gt;%5.3f&lt;/td&gt;&lt;td&gt;%s%5.3f%%%s&lt;/td&gt;&lt;/tr&gt;\n",
           i, value, cos(delta), abs_err, zvyr1, rel_err, zvyr2);
    }
    puts("&lt;/table&gt;");
    return 0;
}

</pre>

<p>Výsledky běhu testovacího příkladu odpovídají hodnotám zjištěným u funkce
sinus:</p>

<table>
<tr><th><strong>Počet iterací:</strong></th><th><strong>Součet absolutních chyb:</strong></th><th><strong>Součet relativních chyb:</strong></th><th><strong>Průměrná absolutní chyba:</strong></th><th><strong>Průměrná relativní chyba:</strong></th></tr>
<tr><td>1</td><td>25.036</td><td>12524.416%</td><td>0.275</td><td>137.631%</td></tr>
<tr><td>2</td><td>12.128</td><td>5725.907%</td><td>0.133</td><td>62.922%</td></tr>
<tr><td>3</td><td>6.439</td><td>2063.404%</td><td>0.071</td><td>22.675%</td></tr>
<tr><td>4</td><td>3.579</td><td>1878.925%</td><td>0.039</td><td>20.648%</td></tr>
<tr><td>5</td><td>1.748</td><td>674.885%</td><td>0.019</td><td>7.416%</td></tr>
<tr><td>6</td><td>0.942</td><td>462.012%</td><td>0.010</td><td>5.077%</td></tr>
<tr><td>7</td><td>0.540</td><td>230.214%</td><td>0.006</td><td>2.530%</td></tr>
<tr><td>8</td><td>0.355</td><td>112.530%</td><td>0.004</td><td>1.237%</td></tr>
<tr><td>9</td><td>0.289</td><td>68.081%</td><td>0.003</td><td>0.748%</td></tr>
<tr><td>10</td><td>0.270</td><td>60.319%</td><td>0.003</td><td>0.663%</td></tr>
<tr><td>11</td><td>0.265</td><td>58.767%</td><td>0.003</td><td>0.646%</td></tr>
<tr><td>12</td><td>0.265</td><td>57.142%</td><td>0.003</td><td>0.628%</td></tr>
<tr><td>13</td><td>0.275</td><td>63.638%</td><td>0.003</td><td>0.699%</td></tr>
<tr><td>14</td><td>0.268</td><td>57.773%</td><td>0.003</td><td>0.635%</td></tr>
<tr><td>15</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>16</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>17</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>18</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>19</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>20</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>21</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>22</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>23</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>24</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>25</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>26</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>27</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>28</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>29</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>30</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>31</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
<tr><td>32</td><td>0.272</td><td>59.119%</td><td>0.003</td><td>0.650%</td></tr>
</table>



<p><a name="k06"></a></p>
<h1>6. Literatura</h1>

<ol>
<li>Yates Randy: <i>Fixed-Point Arithmetic: An Introduction</i>,<br />
    Digital Sound Labs, March 3, 2001</li>
<li>Hook Brian: <i>An Introduction to Fixed Point Math</i>,<br />
    Game Design and Review, 2003</li>
<li>Andraka, Ray: <i>"A survey of CORDIC algorithms for FPGA based computers"</i>,<br />ACM, 1998</li>
<li>Despain, A.M.:<i>"Fourier Transform Computations Using CORDIC Iterations"</i>,<br />IEEE Transactions on Computers, Volume 23, strany 993-1001, 1974</li>
<li>Mazenc C., Merrheim, X., Muller, J.M.: <i>"Computing Functions Arccos and Arcsin Using CORDIC"</i>,<br />IEEE Transactions on Computers, Volume 42, strany 118-122, 1993</li>
<li>Volder, Jack: <i>"Binary computation algorithms for coordinate rotation and function generation"</i>,<br />Convair Report IAR-1, 1956</li>
<li>Volder, Jack: <i>"The CORDIC Trigonometric Computing Technique"</i>,<br />IRE Transactions on Electronic Computing, Vol EC-8, strany 330-334, 1959</li>
<li>NVIDIA Corporation: <i>"Floating-Point Specials on the GPU"</i>,<br />2005</li>

</ol>



<p><a name="k07"></a></p>
<h1>7. Odkazy na Internetu</h1>

<ol>
<li>P.&nbsp;Mikulec, M.&nbsp;Vojtíšek: <i>Procesor IBM RS 6000</i>,<br />
    <a href="http://petam.chytrak.cz/skola/RS6000">http://petam.chytrak.cz/skola/RS6000</a></li>
<li>Wikipedia: <i>Fixed-point arithmetic</i>,<br />
    <a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic">http://en.wikipedia.org/wiki/Fixed-point_arithmetic</a></li>
<li>Wikipedia: <i>Floating point</i>,<br />
    <a href="http://en.wikipedia.org/wiki/Floating_point">http://en.wikipedia.org/wiki/Floating_point</a></li>
<li>Wikipedia: <i>IEEE floating-point standard</i>,<br />
    <a href="http://en.wikipedia.org/wiki/IEEE_Floating_Point_Standard">http://en.wikipedia.org/wiki/IEEE_Floating_Point_Standard</a></li>
<li>Grant R. Griffin: <i>CORDIC FAQ</i>,<br />
<a href="http://www.dspguru.com/info/faqs/cordic.htm">http://www.dspguru.com/info/faqs/cordic.htm</a></li>
<li>Andraka Consulting Group, Inc.: <i>What is all this CORDIC stuff anyhow?</i>,<br />
<a href="http://www.andraka.com/cordic.htm">http://www.andraka.com/cordic.htm</a></li>
<li>Cyliax Ingo: <i>CORDIC (COordinate Rotation DIgital Computer), the swiss army knife for computing math functions...</i><br />
<a href="http://www.ee.ualberta.ca/courses/ee401/microboard/cordic_CCink.html">http://www.ee.ualberta.ca/courses/ee401/microboard/cordic_CCink.html</a></li>

</ol>



<p><a name="k08"></a></p>
<h1>8. Slovo závěrem</h1>

<p>V&nbsp;tomto desetidílném seriálu jsme si přiblížili způsob použití dvou základních formátů podmnožiny racionálních čísel v&nbsp;operační paměti počítače. Jednalo se o široce používaný a podporovaný formát pohyblivé řádové binární čárky a již méně známý, ale stále užitečný a nenahraditelný formát pevné řádové binární čárky. Popsali jsme si vlastnosti obou formátů, včetně předností a záporů při jejich použití v&nbsp;různých typech úloh, jakými jsou počty s&nbsp;měnou, zpracování signálů, výpočty goniometrických funkcí atd. Také jsme si ukázali, jakým způsobem jsou v&nbsp;obou zmiňovaných formátech implementovány základní aritmetické operace (součet, rozdíl, součin, podíl), ale i operace složitější &ndash; výpočet druhé odmocniny, vyčíslení goniometrických funkcí, výpočet délky vektoru atd. V&nbsp;neposlední řadě byl v&nbsp;několika demonstračních příkladech prakticky ukázán algoritmus CORDIC, který má v&nbsp;mnoha systémech i výpočetně náročných aplikacích svoji nezastupitelnou úlohu.</p>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2006</small></p>
</body>
</html>

