<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<pre>
import torch
from torch.utils.data import Dataset
import numpy as np


# konverze původních dat z NumPy do tenzorů
class Data(Dataset):
    def __init__(self, X, y):
        self.X = torch.from_numpy(X.astype(np.float32))
        self.y = torch.from_numpy(y.astype(np.float32))
        self.len = self.X.shape[0]

    def __getitem__(self, index):
        return self.X[index], self.y[index]

    def __len__(self):
        return self.len


# číslice reprezentované v masce 8x8 pixelů
digits = (
    (0x00, 0x3C, 0x66, 0x76, 0x6E, 0x66, 0x3C, 0x00),
    (0x00, 0x18, 0x1C, 0x18, 0x18, 0x18, 0x7E, 0x00),
    (0x00, 0x3C, 0x66, 0x30, 0x18, 0x0C, 0x7E, 0x00),
    (0x00, 0x7E, 0x30, 0x18, 0x30, 0x66, 0x3C, 0x00),
    (0x00, 0x30, 0x38, 0x3C, 0x36, 0x7E, 0x30, 0x00),
    (0x00, 0x7E, 0x06, 0x3E, 0x60, 0x66, 0x3C, 0x00),
    (0x00, 0x3C, 0x06, 0x3E, 0x66, 0x66, 0x3C, 0x00),
    (0x00, 0x7E, 0x60, 0x30, 0x18, 0x0C, 0x0C, 0x00),
    (0x00, 0x3C, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00),
    (0x00, 0x3C, 0x66, 0x7C, 0x60, 0x30, 0x1C, 0x00),
)


def digit_to_array(digits, n):
    digit = digits[n]
    rows = []
    # převod jednotlivých řádků na osmici bitů
    for scanline in digit:
        row = []
        # převod bitmapy představující řádek na osmici bitů
        for _ in range(8):
            bit = scanline & 0x01
            row.append(float(bit))
            scanline >>= 1
        rows.append(row)
    # transformace na n-dimenzionální pole
    return np.array(rows)


def prepare_data(digits, length):
    # příprava dat pro trénink a testování
    X = []
    y = []

    for i in range(length):
        # cislice
        digit = i % 10
        # vstupy
        array = digit_to_array(digits, digit)
        # prevod na vektor
        x_vector = array.flatten()
        X.append(x_vector)
        # očekávané výstupy
        y_vector = [0.0] * 10
        y_vector[digit] = 1.0
        y.append(y_vector)

    return Data(np.array(X), np.array(y))


data = prepare_data(digits, 1000)
print(len(data))

for i in range(10):
    print(data[i])
</pre>

<pre>
1000
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 1., 1., 1., 0., 0., 1., 1., 1.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), tensor([0., 1., 0., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 1., 1.,
        1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 0.]))
...
...
...
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0.,
        0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), tensor([0., 0., 0., 0., 0., 0., 0., 0., 1., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 1., 1., 0., 0., 0., 1.,
        1., 0., 0., 1., 1., 0., 0., 0., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 1., 1., 1., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]), tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]))
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<pre>
import random
import torch
from torch.utils.data import Dataset
import numpy as np


# konverze původních dat z NumPy do tenzorů
class Data(Dataset):
    def __init__(self, X, y):
        self.X = torch.from_numpy(X.astype(np.float32))
        self.y = torch.from_numpy(y.astype(np.float32))
        self.len = self.X.shape[0]

    def __getitem__(self, index):
        return self.X[index], self.y[index]

    def __len__(self):
        return self.len


# číslice reprezentované v masce 8x8 pixelů
digits = (
    (0x00, 0x3C, 0x66, 0x76, 0x6E, 0x66, 0x3C, 0x00),
    (0x00, 0x18, 0x1C, 0x18, 0x18, 0x18, 0x7E, 0x00),
    (0x00, 0x3C, 0x66, 0x30, 0x18, 0x0C, 0x7E, 0x00),
    (0x00, 0x7E, 0x30, 0x18, 0x30, 0x66, 0x3C, 0x00),
    (0x00, 0x30, 0x38, 0x3C, 0x36, 0x7E, 0x30, 0x00),
    (0x00, 0x7E, 0x06, 0x3E, 0x60, 0x66, 0x3C, 0x00),
    (0x00, 0x3C, 0x06, 0x3E, 0x66, 0x66, 0x3C, 0x00),
    (0x00, 0x7E, 0x60, 0x30, 0x18, 0x0C, 0x0C, 0x00),
    (0x00, 0x3C, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00),
    (0x00, 0x3C, 0x66, 0x7C, 0x60, 0x30, 0x1C, 0x00),
)


def digit_to_array(digits, n):
    digit = digits[n]
    rows = []
    # převod jednotlivých řádků na osmici bitů
    for scanline in digit:
        row = []
        # převod bitmapy představující řádek na osmici bitů
        for _ in range(8):
            bit = scanline & 0x01
            row.append(float(bit))
            scanline >>= 1
        rows.append(row)
    # transformace na n-dimenzionální pole
    return np.array(rows)


def add_noise(array, level):
    return (1.0 - level) * array + level * np.random.rand(8, 8)


def shift(arr, x_shift, y_shift):
    # horizontální posun
    arr = np.roll(arr, x_shift, axis=1)

    # výplně těch částí, které byly orotovány na druhou stranu
    if x_shift < 0:
        arr[:, x_shift:] = 0.0
    elif x_shift > 0:
        arr[:, :x_shift] = 0.0

    # vertikální posun
    arr = np.roll(arr, y_shift, axis=0)

    # výplně těch částí, které byly orotovány na druhou stranu
    if y_shift < 0:
        arr[y_shift:] = 0.0
    elif y_shift > 0:
        arr[:y_shift] = 0.0
    return arr


def prepare_data(digits, length, noise_level=0.0, x_shift_amount=0, y_shift_amount=0):
    # příprava dat pro trénink a testování
    X = []
    y = []

    for i in range(length):
        # cislice
        digit = i % 10
        # vstupy
        array = digit_to_array(digits, digit)
        # zasumeni
        array = add_noise(array, noise_level)
        # posuny
        x_shift = random.randint(-x_shift_amount, x_shift_amount)
        y_shift = random.randint(-y_shift_amount, y_shift_amount)
        array = shift(array, 1, 1)
        # prevod na vektor
        x_vector = array.flatten()
        X.append(x_vector)
        # očekávané výstupy
        y_vector = [0.0] * 10
        y_vector[digit] = 1.0
        y.append(y_vector)

    return Data(np.array(X), np.array(y))


data = prepare_data(digits, 1000, noise_level=0.0, x_shift_amount=2, y_shift_amount=2)
print(len(data))

for i in range(10):
    print(data[i])
</pre>

<pre>
1000
(tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1000, 0.1873, 0.0974, 0.0848, 0.1543, 0.0974, 0.0428, 0.0000, 0.1263,
        0.1107, 0.8607, 0.9148, 0.9497, 0.9471, 0.0924, 0.0000, 0.1961, 0.9425,
        0.8221, 0.0723, 0.0170, 0.8101, 0.8760, 0.0000, 0.1700, 0.8301, 0.9405,
        0.1713, 0.8644, 0.8193, 0.8569, 0.0000, 0.1581, 0.8143, 0.8589, 0.8762,
        0.1081, 0.8304, 0.8003, 0.0000, 0.0663, 0.8490, 0.9864, 0.1368, 0.1216,
        0.9924, 0.9133, 0.0000, 0.1835, 0.1250, 0.8358, 0.8555, 0.8437, 0.9039,
        0.1730]), tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1859, 0.0505, 0.0202, 0.1579, 0.1691, 0.1497, 0.1880, 0.0000, 0.1869,
        0.1795, 0.0506, 0.8242, 0.8013, 0.0550, 0.1158, 0.0000, 0.1546, 0.0962,
        0.8500, 0.9150, 0.8049, 0.0297, 0.0783, 0.0000, 0.1362, 0.0658, 0.0720,
        0.8066, 0.8981, 0.1245, 0.0939, 0.0000, 0.0901, 0.0095, 0.0271, 0.9690,
        0.9647, 0.1053, 0.1772, 0.0000, 0.1369, 0.1596, 0.0043, 0.9538, 0.8454,
        0.1836, 0.1481, 0.0000, 0.0724, 0.9613, 0.8801, 0.9022, 0.9929, 0.9343,
        0.8284]), tensor([0., 1., 0., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.0482, 0.1780, 0.0252, 0.1057, 0.0387, 0.1626, 0.1500, 0.0000, 0.0144,
        0.1140, 0.8891, 0.9987, 0.9017, 0.9266, 0.1840, 0.0000, 0.0920, 0.9391,
        0.8050, 0.0521, 0.0226, 0.9832, 0.9505, 0.0000, 0.1262, 0.1288, 0.1932,
        0.1287, 0.8839, 0.9835, 0.0121, 0.0000, 0.0989, 0.0343, 0.1061, 0.8406,
        0.9444, 0.1876, 0.0553, 0.0000, 0.1523, 0.0414, 0.9970, 0.8119, 0.1074,
        0.0618, 0.1787, 0.0000, 0.1392, 0.9856, 0.9153, 0.9528, 0.8425, 0.9621,
        0.8097]), tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 0.]))
...
...
...
(tensor([0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
        0.1872, 0.1687, 0.1529, 0.0941, 0.0442, 0.1684, 0.0257, 0.0000, 0.0612,
        0.1502, 0.9957, 0.8073, 0.9577, 0.8697, 0.0698, 0.0000, 0.1350, 0.9443,
        0.8681, 0.1374, 0.1762, 0.9109, 0.8752, 0.0000, 0.0979, 0.0321, 0.9314,
        0.9269, 0.8164, 0.9570, 0.1131, 0.0000, 0.0259, 0.9306, 0.8343, 0.1441,
        0.0628, 0.9338, 0.9514, 0.0000, 0.0448, 0.9390, 0.9168, 0.1404, 0.1396,
        0.8429, 0.9483, 0.0000, 0.0177, 0.0544, 0.8122, 0.8863, 0.9927, 0.9182,
        0.0934]), tensor([0., 0., 0., 0., 0., 0., 0., 0., 1., 0.]))
(tensor([0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 1.3351e-01, 1.6440e-01, 1.9716e-01,
        6.7939e-02, 3.6941e-02, 4.3844e-02, 1.9463e-01, 0.0000e+00, 8.3067e-02,
        1.1585e-01, 9.1198e-01, 9.2619e-01, 9.7104e-01, 9.0118e-01, 1.2479e-01,
        0.0000e+00, 1.9136e-01, 8.1373e-01, 8.8950e-01, 1.8006e-01, 1.4111e-01,
        8.0376e-01, 9.2949e-01, 0.0000e+00, 7.9622e-02, 1.0389e-01, 8.2851e-01,
        9.4779e-01, 9.8552e-01, 8.0434e-01, 8.6395e-01, 0.0000e+00, 3.7410e-02,
        1.8535e-01, 6.1101e-04, 1.5324e-01, 1.8622e-01, 8.1680e-01, 8.7898e-01,
        0.0000e+00, 1.6229e-01, 1.4432e-03, 9.2399e-02, 1.7621e-01, 8.1480e-01,
        9.9750e-01, 7.3067e-02, 0.0000e+00, 1.7871e-01, 2.0714e-02, 8.0718e-01,
        9.3515e-01, 9.5129e-01, 1.2791e-01, 1.5687e-01]), tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]))
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<pre>
import random
from sklearn.model_selection import train_test_split
import torch
from torch.utils.data import Dataset
import numpy as np


# konverze původních dat z NumPy do tenzorů
class Data(Dataset):
    def __init__(self, X, y):
        self.X = torch.from_numpy(X.astype(np.float32))
        self.y = torch.from_numpy(y.astype(np.float32))
        self.len = self.X.shape[0]

    def __getitem__(self, index):
        return self.X[index], self.y[index]

    def __len__(self):
        return self.len


# číslice reprezentované v masce 8x8 pixelů
digits = (
    (0x00, 0x3C, 0x66, 0x76, 0x6E, 0x66, 0x3C, 0x00),
    (0x00, 0x18, 0x1C, 0x18, 0x18, 0x18, 0x7E, 0x00),
    (0x00, 0x3C, 0x66, 0x30, 0x18, 0x0C, 0x7E, 0x00),
    (0x00, 0x7E, 0x30, 0x18, 0x30, 0x66, 0x3C, 0x00),
    (0x00, 0x30, 0x38, 0x3C, 0x36, 0x7E, 0x30, 0x00),
    (0x00, 0x7E, 0x06, 0x3E, 0x60, 0x66, 0x3C, 0x00),
    (0x00, 0x3C, 0x06, 0x3E, 0x66, 0x66, 0x3C, 0x00),
    (0x00, 0x7E, 0x60, 0x30, 0x18, 0x0C, 0x0C, 0x00),
    (0x00, 0x3C, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00),
    (0x00, 0x3C, 0x66, 0x7C, 0x60, 0x30, 0x1C, 0x00),
)


def digit_to_array(digits, n):
    digit = digits[n]
    rows = []
    # převod jednotlivých řádků na osmici bitů
    for scanline in digit:
        row = []
        # převod bitmapy představující řádek na osmici bitů
        for _ in range(8):
            bit = scanline & 0x01
            row.append(float(bit))
            scanline >>= 1
        rows.append(row)
    # transformace na n-dimenzionální pole
    return np.array(rows)


def add_noise(array, level):
    return (1.0 - level) * array + level * np.random.rand(8, 8)


def shift(arr, x_shift, y_shift):
    # horizontální posun
    arr = np.roll(arr, x_shift, axis=1)

    # výplně těch částí, které byly orotovány na druhou stranu
    if x_shift < 0:
        arr[:, x_shift:] = 0.0
    elif x_shift > 0:
        arr[:, :x_shift] = 0.0

    # vertikální posun
    arr = np.roll(arr, y_shift, axis=0)

    # výplně těch částí, které byly orotovány na druhou stranu
    if y_shift < 0:
        arr[y_shift:] = 0.0
    elif y_shift > 0:
        arr[:y_shift] = 0.0
    return arr


def prepare_data(digits, length, noise_level=0.0, x_shift_amount=0, y_shift_amount=0, test_size=1/2):
    # příprava dat pro trénink a testování
    X = []
    y = []

    for i in range(length):
        # cislice
        digit = i % 10
        # vstupy
        array = digit_to_array(digits, digit)
        # zasumeni
        array = add_noise(array, noise_level)
        # posuny
        x_shift = random.randint(-x_shift_amount, x_shift_amount)
        y_shift = random.randint(-y_shift_amount, y_shift_amount)
        array = shift(array, 1, 1)
        # prevod na vektor
        x_vector = array.flatten()
        X.append(x_vector)
        # očekávané výstupy
        y_vector = [0.0] * 10
        y_vector[digit] = 1.0
        y.append(y_vector)

    X_train, X_test, y_train, y_test = train_test_split(
        np.array(X), np.array(y),
        test_size=test_size, random_state=26
    )

    # trénovací sada
    train_data = Data(X_train, y_train)

    # testovací sada
    test_data = Data(X_test, y_test)

    return train_data, test_data


train, test = prepare_data(digits, 1000, noise_level=0.0, x_shift_amount=2, y_shift_amount=2)
print(len(train))
print(len(test))

for i in range(10):
    print(train[i])
</pre>

<pre>
500
500
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 0.]), tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 1., 1.]), tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 1.,
        1., 1., 1., 1., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1.,
        1., 0., 0., 0., 0., 1., 1., 1., 0., 0.]), tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 1.]))
...
...
...
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 0., 0.,
        0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0.,
        0., 0., 0., 0., 1., 1., 1., 1., 1., 1.]), tensor([0., 0., 1., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 1., 1., 1., 1., 0., 0., 0., 1., 1., 0., 0., 1., 1., 0., 0., 1., 1.,
        0., 1., 1., 1., 0., 0., 1., 1., 1., 0., 1., 1., 0., 0., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 0.]), tensor([1., 0., 0., 0., 0., 0., 0., 0., 0., 0.]))
(tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        1., 1., 1., 1., 1., 1., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0.,
        1., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0., 0., 1., 1., 0., 0.,
        1., 1., 0., 0., 0., 1., 1., 1., 1., 0.]), tensor([0., 0., 0., 1., 0., 0., 0., 0., 0., 0.]))
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny demonstrační příklady využívající knihovnu PyTorch lze nalézt
v&nbsp;repositáři <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
Následují odkazy na jednotlivé příklady:</p>

<table>
<tr><th>#<th>Příklad</th><th>Stručný popis</th><th>Adresa příkladu</th></tr></i>
<tr><td>  1</td><td>tensor_constructor_scalar_1.py</td><td>konstrukce tenzoru nultého a prvního řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_scalar_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_scalar_1.py</a></td></tr>
<tr><td>  2</td><td>tensor_constructor_scalar_2.py</td><td>inicializace tenzoru prvního řádu s&nbsp;jedním prvkem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_scalar_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_scalar_2.py</a></td></tr>
<tr><td>  3</td><td>tensor_constructor_vector_1.py</td><td>konstrukce tenzoru prvního řádu (tříprvkový vektor)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_1.py</a></td></tr>
<tr><td>  4</td><td>tensor_constructor_vector_2.py</td><td>konstrukce tenzoru prvního řádu s&nbsp;inicializací prvků</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_2.py</a></td></tr>
<tr><td>  5</td><td>tensor_constructor_vector_3.py</td><td>konstrukce tenzoru prvního řádu s&nbsp;využitím generátoru <strong>range</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_3.py</a></td></tr>
<tr><td>  6</td><td>tensor_constructor_matrix_1.py</td><td>vytvoření a inicializace tenzoru druhého řádu, který může být reprezentován maticí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_matrix_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_matrix_1.py</a></td></tr>
<tr><td>  7</td><td>tensor_constructor_matrix_2.py</td><td>inicializace prvků matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_matrix_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_matrix_2.py</a></td></tr>
<tr><td>  8</td><td>tensor_constructor_3D_1.py</td><td>tenzor třetího řádu reprezentovaný &bdquo;3D maticí&ldquo;</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_3D_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_3D_1.py</a></td></tr>
<tr><td>  9</td><td>tensor_constructor_3D_2.py</td><td>tenzor třetího řádu reprezentovaný &bdquo;3D maticí&ldquo; (jiná forma inicializace)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_3D_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_3D_2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 10</td><td>tensor_constructor_scalar_zero.py</td><td>vynulování prvků tenzoru nultého řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_scalar_zero.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_scalar_zero.py</a></td></tr>
<tr><td> 11</td><td>tensor_constructor_vector_zero.py</td><td>vynulování prvků tenzoru prvního řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_zero.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_vector_zero.py</a></td></tr>
<tr><td> 12</td><td>tensor_constructor_matrix_zero.py</td><td>vynulování prvků tenzoru druhého řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_matrix_zero.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_matrix_zero.py</a></td></tr>
<tr><td> 13</td><td>tensor_constructor_3D_zero.py</td><td>vynulování prvků tenzoru třetího řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_3D_zero.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_constructor_3D_zero.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 14</td><td>tensor_zeros_shape.py</td><td>použití konstruktoru <strong>zeros</strong> pro tenzory různých řádů a tvarů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_zeros_shape.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_zeros_shape.py</a></td></tr>
<tr><td> 15</td><td>tensor_ones_shape.py</td><td>použití konstruktoru <strong>ones</strong> pro tenzory různých řádů a tvarů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_ones_shape.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_ones_shape.py</a></td></tr>
<tr><td> 16</td><td>tensor_eye.py</td><td>konstrukce jednotkové matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_eye.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_eye.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 17</td><td>tensor_range.py</td><td>využití konstruktoru <strong>range</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_range.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_range.py</a></td></tr>
<tr><td> 18</td><td>tensor_arange.py</td><td>využití konstruktoru <strong>arange</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_arange.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_arange.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 19</td><td>tensor_shape.py</td><td>zjištění tvaru tenzoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_shape.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_shape.py</a></td></tr>
<tr><td> 20</td><td>tensor_zeros_shape.py</td><td>zjištění tvaru tenzoru vytvořeného konstruktorem <strong>zeros</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_zeros_shape.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_zeros_shape.py</a></td></tr>
<tr><td> 21</td><td>tensor_ones_shape.py</td><td>zjištění tvaru tenzoru vytvořeného konstruktorem <strong>ones</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_ones_shape.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_ones_shape.py</a></td></tr>
<tr><td> 22</td><td>tensor_read_dtype.py</td><td>zjištění, jakého typu jsou prvky tenzoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_read_dtype.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_read_dtype.py</a></td></tr>
<tr><td> 23</td><td>tensor_set_dtype.py</td><td>nastavení či změna typu prvků tenzoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_set_dtype.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_set_dtype.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 24</td><td>tensor_storage_1.py</td><td>získání datové struktury se zdrojem dat pro tenzor</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_1.py</a></td></tr>
<tr><td> 25</td><td>tensor_storage_2.py</td><td>získání datové struktury se zdrojem dat pro tenzor</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_2.py</a></td></tr>
<tr><td> 26</td><td>tensor_storage_3.py</td><td>získání datové struktury se zdrojem dat pro tenzor</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_3.py</a></td></tr>
<tr><td> 27</td><td>tensor_storage_casts.py</td><td>přetypování datové struktury se zdrojem dat pro tenzor</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_casts.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_storage_casts.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 28</td><td>tensor_slice_operation_1.py</td><td>konstrukce řezu z&nbsp;tenzoru prvního řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_1.py</a></td></tr>
<tr><td> 29</td><td>tensor_slice_operation_2.py</td><td>konstrukce řezu z&nbsp;tenzoru druhého řádu (přes řádky a sloupce)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_2.py</a></td></tr>
<tr><td> 30</td><td>tensor_slice_operation_3.py</td><td>konstrukce řezu s&nbsp;jeho následnou modifikací</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_3.py</a></td></tr>
<tr><td> 31</td><td>tensor_slice_operation_4.py</td><td>konstrukce řezu s&nbsp;jeho následnou modifikací (odlišné operace od předchozího příkladu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_slice_operation_4.py</a></td></tr>
<tr><td> 32</td><td>tensor_is_slice.py</td><td>test základních vlastností řezů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_is_slice.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_is_slice.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 33</td><td>tensor_stride_1.py</td><td>význam atributů <strong>stride</strong> a <strong>storage_offset</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_stride_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_stride_1.py</a></td></tr>
<tr><td> 34</td><td>tensor_stride_2.py</td><td>význam atributů <strong>stride</strong> a <strong>storage_offset</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_stride_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_stride_2.py</a></td></tr>
<tr><td> 35</td><td>tensor_stride_3.py</td><td>význam atributů <strong>stride</strong> a <strong>storage_offset</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_stride_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_stride_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 36</td><td>tensor_reshape.py</td><td>změna tvaru tenzoru operací <strong>reshape</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_reshape.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_reshape.py</a></td></tr>
<tr><td> 37</td><td>tensor_reshape_2.py</td><td>změna tvaru tenzoru operací <strong>reshape</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_reshape_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_reshape_2.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 38</td><td>tensor_narrow_operation_1.py</td><td>operace nad celým tenzorem typu <i>narrow</i>, první ukázka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_1.py</a></td></tr>
<tr><td> 39</td><td>tensor_narrow_operation_1_B.py</td><td>operace nad celým tenzorem typu <i>narrow</i>, první ukázka přepsaná do volání metody</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_1_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_1_B.py</a></td></tr>
<tr><td> 40</td><td>tensor_narrow_operation_2.py</td><td>operace nad celým tenzorem typu <i>narrow</i>, druhá ukázka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_2.py</a></td></tr>
<tr><td> 41</td><td>tensor_narrow_operation_2_B.py</td><td>operace nad celým tenzorem typu <i>narrow</i>, druhá ukázka přepsaná do volání metody</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_2_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_2_B.py</a></td></tr>
<tr><td> 42</td><td>tensor_narrow_operation_3.py</td><td>operace nad celým tenzorem typu <i>narrow</i>, třetí ukázka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_3.py</a></td></tr>
<tr><td> 43</td><td>tensor_narrow_operation_3_B.py</td><td>operace nad celým tenzorem typu <i>narrow</i>, třetí ukázka přepsaná do volání metody</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_3_B.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_3_B.py</a></td></tr>
<tr><td> 44</td><td>tensor_narrow_operation_4.py</td><td>přepis původní matice přes pohled na ni (<i>view</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_4.py</a></td></tr>
<tr><td> 45</td><td>tensor_narrow_operation_5.py</td><td>přepis původní matice přes pohled na ni (<i>view</i>)<i>narrow</i>, třetí ukázka</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_narrow_operation_5.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 46</td><td>tensor_operator_add.py</td><td>součet dvou tenzorů prvek po prvku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_add.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_add.py</a></td></tr>
<tr><td> 47</td><td>tensor_operator_sub.py</td><td>rozdíl dvou tenzorů prvek po prvku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_sub.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_sub.py</a></td></tr>
<tr><td> 48</td><td>tensor_operator_mul.py</td><td>součin dvou tenzorů prvek po prvku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_mul.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_mul.py</a></td></tr>
<tr><td> 49</td><td>tensor_operator_div.py</td><td>podíl dvou tenzorů prvek po prvku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_div.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_div.py</a></td></tr>
<tr><td> 50</td><td>tensor_dot_product.py</td><td>skalární součin dvou tenzorů prvního řádu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_dot_product.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_dot_product.py</a></td></tr>
<tr><td> 50</td><td>tensor_operator_matmul.py</td><td>maticové násobení (dvou tenzorů druhého řádu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul.py</a></td></tr>
<tr><td> 51</td><td>tensor_operator_matmul_2.py</td><td>maticové násobení (dvou tenzorů druhého řádu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_2.py</a></td></tr>
<tr><td> 52</td><td>tensor_operator_matmul_3.py</td><td>maticové násobení v&nbsp;případě nekompatibilních tvarů matic</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_3.py</a></td></tr>
<tr><td> 53</td><td>tensor_operator_matmul_4.py</td><td>maticové násobení s&nbsp;broadcastingem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_4.py</a></td></tr>
<tr><td> 54</td><td>tensor_operator_matmul_5.py</td><td>násobení vektoru a matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_operator_matmul_5.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 55</td><td>tensor_broadcast_1.py</td><td>operace <i>broadcast</i> (součin každého prvku tenzoru se skalárem)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_1.py</a></td></tr>
<tr><td> 56</td><td>tensor_broadcast_2.py</td><td>operace <i>broadcast</i> (součin tenzoru druhého řádu s vektorem)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_2.py</a></td></tr>
<tr><td> 57</td><td>tensor_broadcast_3.py</td><td>operace <i>broadcast</i> (součin vektoru s&nbsp;tenzorem druhého řádu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_3.py</a></td></tr>
<tr><td> 58</td><td>tensor_broadcast_4.py</td><td>operace <i>broadcast</i> (součet tenzorů druhého a třetího řádu)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_broadcast_4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 59</td><td>tensor_sparse.py</td><td>konstrukce řídkého tenzoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_sparse.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/tensor_sparse.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 60</td><td>activation_function_relu_.py</td><td>aktivační funkce ReLU vypočtená knihovnou NumPy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_relu_numpy.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_relu_numpy.py</a></td></tr>
<tr><td> 61</td><td>activation_function_relu_pytorch.py</td><td>aktivační funkce ReLU vypočtená knihovnou PyTorch</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_relu_pytorch.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_relu_pytorch.py</a></td></tr>
<tr><td> 62</td><td>activation_function_sigmoid_.py</td><td>aktivační funkce sigmoid vypočtená knihovnou NumPy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_sigmoid_numpy.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_sigmoid_numpy.py</a></td></tr>
<tr><td> 63</td><td>activation_function_sigmoid_pytorch.py</td><td>aktivační funkce sigmoid vypočtená knihovnou PyTorch</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_sigmoid_pytorch.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_sigmoid_pytorch.py</a></td></tr>
<tr><td> 64</td><td>activation_function_tanh_.py</td><td>aktivační funkce tanh vypočtená knihovnou NumPy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_tanh_numpy.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_tanh_numpy.py</a></td></tr>
<tr><td> 65</td><td>activation_function_tanh_pytorch.py</td><td>aktivační funkce tanh vypočtená knihovnou PyTorch</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_tanh_pytorch.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/activation_function_tanh_pytorch.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 66</td><td>make_circles.py</td><td>vygenerování dat pro neuronovou síť funkcí <strong>make_circles</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_circles.py</a></td></tr>
<tr><td> 67</td><td>make_circles_labels.py</td><td>vizualizace dat společně s&nbsp;jejich skupinou (ohodnocením)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_circles_labels.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_circles_labels.py</a></td></tr>
<tr><td> 68</td><td>make_more_noise_circles.py</td><td>získání náhodnějších dat funkcí <strong>make_circles</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_more_noise_circles.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_more_noise_circles.py</a></td></tr>
<tr><td> 69</td><td>make_data_set.py</td><td>náhodné rozdělení datové sady funkcí <strong>train_test_split</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_data_set.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/make_data_set.py</a></td></tr>
<tr><td> 70</td><td>prepare_for_training.py</td><td>konverze původních dat z&nbsp;n-dimenzionálních polí do tenzorů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/prepare_for_training.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/prepare_for_training.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 71</td><td>compute_train_and_test_data.py</td><td>výpočet trénovacích a testovacích dat pro neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/compute_train_and_test_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/compute_train_and_test_data.py</a></td></tr>
<tr><td> 72</td><td>print_train_and_test_data.py</td><td>tisk dat získaných předchozím skriptem</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/print_train_and_test_data.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/print_train_and_test_data.py</a></td></tr>
<tr><td> 73</td><td>nn_01.py</td><td>deklarace třídy představující neuronovou síť</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_01.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_01.py</a></td></tr>
<tr><td> 74</td><td>nn_02.py</td><td>definice vrstev neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_02.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_02.py</a></td></tr>
<tr><td> 75</td><td>nn_03.py</td><td>trénink neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_03.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_03.py</a></td></tr>
<tr><td> 76</td><td>nn_04.py</td><td>trénink neuronové sítě se zobrazením kvality tréninku</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_04.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_04.py</a></td></tr>
<tr><td> 77</td><td>nn_05.py</td><td>neuronová síť s&nbsp;jednou skrytou vrstvou</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_05.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_05.py</a></td></tr>
<tr><td> 78</td><td>nn_06.py</td><td>neuronová síť s&nbsp;více skrytými vrstvami, která nebude dotrénována</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_06.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_06.py</a></td></tr>
<tr><td> 79</td><td>nn_07.py</td><td>vliv parametru <strong>learning_rate</strong> na rychlosti naučení sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_07.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_07.py</a></td></tr>
<tr><td> 80</td><td>nn_08.py</td><td>výpočet kvality neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_08.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_08.py</a></td></tr>
<tr><td> 81</td><td>nn_09.py</td><td>vizualizace predikce neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_09.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_09.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 82</td><td>nn_linear_help.py</td><td>zobrazení nápovědy ke třídě <strong>torch.nn.Linear</strong> i k&nbsp;parametrům konstruktorů této třídy</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_help.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_help.py</a></td></tr>
<tr><td> 83</td><td>nn_linear_1.py</td><td>konstrukce objektu typu <strong>torch.nn.Linear</strong> s&nbsp;biasem (transformace s&nbsp;jedním vstupem a jedním výstupem)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_1.py</a></td></tr>
<tr><td> 84</td><td>nn_linear_2.py</td><td>konstrukce objektu typu <strong>torch.nn.Linear</strong> bez biasu (transformace s&nbsp;jedním vstupem a jedním výstupem)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_2.py</a></td></tr>
<tr><td> 85</td><td>nn_linear_3.py</td><td>specifikace vah a biasu po konstrukci objektu typu <strong>torch.nn.Linear</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_3.py</a></td></tr>
<tr><td> 86</td><td>nn_linear_4.py</td><td>aplikace lineární transformace reprezentované objektem typu <strong>torch.nn.Linear</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_4.py</a></td></tr>
<tr><td> 87</td><td>nn_linear_5.py</td><td>aplikace lineární transformace na větší soubor vstupních tenzorů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_5.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_5.py</a></td></tr>
<tr><td> 88</td><td>nn_linear_6.py</td><td>2D transformace prováděná objektem typu <strong>torch.nn.Linear</strong></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_6.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_6.py</a></td></tr>
<tr><td> 89</td><td>nn_linear_7.py</td><td>2D transformace &ndash; otočení bodů v&nbsp;rovině</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_7.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_7.py</a></td></tr>
<tr><td> 90</td><td>nn_linear_zeros.py</td><td>konstrukce objektu typu <strong>torch.nn.Linear</strong> pro nulový počet vstupů a/nebo výstupů</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_zeros.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_linear_zeros.py</a></td></tr>
<tr><td> 91</td><td>nn_forward_1.py</td><td>neuronová síť s&nbsp;jedním vstupem a jedním výstupem, bez aktivační funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_1.py</a></td></tr>
<tr><td> 92</td><td>nn_forward_2.py</td><td>neuronová síť s&nbsp;jedním vstupem a dvěma výstupy, bez aktivační funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_2.py</a></td></tr>
<tr><td> 93</td><td>nn_forward_3.py</td><td>neuronová síť se dvěma vstupy a jedním výstupem, bez aktivační funkce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_3.py</a></td></tr>
<tr><td> 94</td><td>nn_forward_4.py</td><td>přidání aktivační funkce do neuronové sítě</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_forward_4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 95</td><td>conv_nn_01_digits.py</td><td>první verze generátoru trénovacích obrázků číslic od 0 do 9</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_01_digits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_01_digits.py</a></td></tr>
<tr><td> 96</td><td>conv_nn_02_digits_as_bitmaps.py</td><td>konstrukce dvourozměrné matice 8&times;8 bodů pro vybranou číslici</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_02_digits_as_bitmaps.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_02_digits_as_bitmaps.py</a></td></tr>
<tr><td> 97</td><td>conv_nn_03_show_digits.py</td><td>vizualizace matic s&nbsp;obrazy číslic v&nbsp;rastru 8&times;8 v&nbsp;nepravých barvách</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_03_show_digits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_03_show_digits.py</a></td></tr>
<tr><td> 98</td><td>conv_nn_04_show_digits.py</td><td>vizualizace matic s&nbsp;obrazy číslic v&nbsp;rastru 8&times;8 ve stupních šedi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_04_show_digits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_04_show_digits.py</a></td></tr>
<tr><td> 99</td><td>conv_nn_05_show_all_digits.py</td><td>vizualizace všech deseti matic s&nbsp;číslicemi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_05_show_all_digits.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_05_show_all_digits.py</a></td></tr>
<tr><td>100</td><td>conv_nn_06_noise.py</td><td>přidání šumu do obrázků s&nbsp;číslicemi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_06_noise.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_06_noise.py</a></td></tr>
<tr><td>101</td><td>conv_nn_07_noise_levels.py</td><td>šum se sílou od 0% do 100%</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_07_noise_levels.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_07_noise_levels.py</a></td></tr>
<tr><td>102</td><td>conv_nn_08_5_6_or_8.py</td><td>rozdíl mezi číslicemi 5, 6 a 8</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_08_5_6_or_8.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_08_5_6_or_8.py</a></td></tr>
<tr><td>103</td><td>conv_nn_09_shift.py</td><td>posun obrazu číslice v&nbsp;rámci matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_09_shift.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_09_shift.py</a></td></tr>
<tr><td>104</td><td>conv_nn_10_shifts.py</td><td>různé posuny obrazu číslice v&nbsp;rámci matice</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_10_shifts.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_10_shifts.py</a></td></tr>
<tr><td>105</td><td>conv_nn_11_classification_report.py</td><td>numerická podoba ověření sítě provádějící klasifikaci</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_11_classification_report.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_11_classification_report.py</a></td></tr>
<tr><td>106</td><td>conv_nn_12_confusion_matrix.py</td><td>výpočet a vizualizace matice záměn (<i>confusion matrix</i>)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_12_confusion_matrix.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/conv_nn_12_confusion_matrix.py</a></td></tr>
<tr><td>107</td><td>nn_10.py</td><td>jednoduchá neuronová síť provádějící klasifikaci (nikoli regresi)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_10.py">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/nn_10.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>109</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>110</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>111</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>112</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>113</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>114</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
<tr><td>115</td><td></td><td></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/">https://github.com/tisnik/most-popular-python-libs/blob/master/PyTorch/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Seriál Programovací jazyk Lua na Rootu:<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-lua/">https://www.root.cz/serialy/programovaci-jazyk-lua/</a>
</li>

<li>PDM: moderní správce balíčků a virtuálních prostředí Pythonu:<br />
<a href="https://www.root.cz/clanky/pdm-moderni-spravce-balicku-a-virtualnich-prostredi-pythonu/">https://www.root.cz/clanky/pdm-moderni-spravce-balicku-a-virtualnich-prostredi-pythonu/</a>
</li>

<li>PyTorch Tutorial: Building a Simple Neural Network From Scratch<br />
<a href="https://www.datacamp.com/tutorial/pytorch-tutorial-building-a-simple-neural-network-from-scratch">https://www.datacamp.com/tutorial/pytorch-tutorial-building-a-simple-neural-network-from-scratch</a>
</li>

<li>Interní reprezentace numerických hodnot: od skutečného počítačového pravěku po IEEE 754–2008:<br />
<a href="https://www.root.cz/clanky/interni-reprezentace-numerickych-hodnot-od-skutecneho-pocitacoveho-praveku-po-ieee-754-2008/">https://www.root.cz/clanky/interni-reprezentace-numerickych-hodnot-od-skutecneho-pocitacoveho-praveku-po-ieee-754-2008/</a>
</li>

<li>Interní reprezentace numerických hodnot: od skutečného počítačového pravěku po IEEE 754–2008 (dokončení):<br />
<a href="https://www.root.cz/clanky/interni-reprezentace-numerickych-hodnot-od-skutecneho-pocitacoveho-praveku-po-ieee-754-2008-dokonceni/">https://www.root.cz/clanky/interni-reprezentace-numerickych-hodnot-od-skutecneho-pocitacoveho-praveku-po-ieee-754-2008-dokonceni/</a>
</li>

<li>Brain Floating Point &ndash; nový formát uložení čísel pro strojové učení a chytrá čidla:<br />
<a href="https://www.root.cz/clanky/brain-floating-point-ndash-novy-format-ulozeni-cisel-pro-strojove-uceni-a-chytra-cidla/">https://www.root.cz/clanky/brain-floating-point-ndash-novy-format-ulozeni-cisel-pro-strojove-uceni-a-chytra-cidla/</a>
</li>

<li>Stránky projektu PyTorch:<br />
<a href="https://pytorch.org/">https://pytorch.org/</a>
</li>

<li>Informace o instalaci PyTorche:<br />
<a href="https://pytorch.org/get-started/locally/">https://pytorch.org/get-started/locally/</a>
</li>

<li>Tenzor (Wikipedia):<br />
<a href="https://cs.wikipedia.org/wiki/Tenzor">https://cs.wikipedia.org/wiki/Tenzor</a>
</li>

<li>Introduction to Tensors:<br />
<a href="https://www.youtube.com/watch?v=uaQeXi4E7gA">https://www.youtube.com/watch?v=uaQeXi4E7gA</a>
</li>

<li>Introduction to Tensors: Transformation Rules:<br />
<a href="https://www.youtube.com/watch?v=j6DazQDbEhQ">https://www.youtube.com/watch?v=j6DazQDbEhQ</a>
</li>

<li>Tensor Attributes:<br />
<a href="https://pytorch.org/docs/stable/tensor_attributes.html">https://pytorch.org/docs/stable/tensor_attributes.html</a>
</li>

<li>Tensors Explained Intuitively: Covariant, Contravariant, Rank :<br />
<a href="https://www.youtube.com/watch?v=CliW7kSxxWU">https://www.youtube.com/watch?v=CliW7kSxxWU</a>
</li>

<li>What is the relationship between PyTorch and Torch?:<br />
<a href="https://stackoverflow.com/questions/44371560/what-is-the-relationship-between-pytorch-and-torch">https://stackoverflow.com/questions/44371560/what-is-the-relationship-between-pytorch-and-torch</a>
</li>

<li>What is a tensor anyway?? (from a mathematician):<br />
<a href="https://www.youtube.com/watch?v=K7f2pCQ3p3U">https://www.youtube.com/watch?v=K7f2pCQ3p3U</a>
</li>

<li>Visualization of tensors - part 1 :<br />
<a href="https://www.youtube.com/watch?v=YxXyN2ifK8A">https://www.youtube.com/watch?v=YxXyN2ifK8A</a>
</li>

<li>Visualization of tensors - part 2A:<br />
<a href="https://www.youtube.com/watch?v=A95jdIuUUW0">https://www.youtube.com/watch?v=A95jdIuUUW0</a>
</li>

<li>Visualization of tensors - part 2B:<br />
<a href="https://www.youtube.com/watch?v=A95jdIuUUW0">https://www.youtube.com/watch?v=A95jdIuUUW0</a>
</li>

<li>What the HECK is a Tensor?!?:<br />
<a href="https://www.youtube.com/watch?v=bpG3gqDM80w">https://www.youtube.com/watch?v=bpG3gqDM80w</a>
</li>

<li>Stránka projektu Torch<br />
<a href="http://torch.ch/">http://torch.ch/</a>
</li>

<li>Torch na GitHubu (několik repositářů)<br />
<a href="https://github.com/torch">https://github.com/torch</a>
</li>

<li>Torch (machine learning), Wikipedia<br />
<a href="https://en.wikipedia.org/wiki/Torch_%28machine_learning%29">https://en.wikipedia.org/wiki/Torch_%28machine_learning%29</a>
</li>

<li>Torch Package Reference Manual<br />
<a href="https://github.com/torch/torch7/blob/master/README.md">https://github.com/torch/torch7/blob/master/README.md</a>
</li>

<li>Torch Cheatsheet<br />
<a href="https://github.com/torch/torch7/wiki/Cheatsheet">https://github.com/torch/torch7/wiki/Cheatsheet</a>
</li>

<li>An Introduction to Tensors<br />
<a href="https://math.stackexchange.com/questions/10282/an-introduction-to-tensors">https://math.stackexchange.com/questions/10282/an-introduction-to-tensors</a>
</li>

<li>Differences between a matrix and a tensor<br />
<a href="https://math.stackexchange.com/questions/412423/differences-between-a-matrix-and-a-tensor">https://math.stackexchange.com/questions/412423/differences-between-a-matrix-and-a-tensor</a>
</li>

<li>Qualitatively, what is the difference between a matrix and a tensor?<br />
<a href="https://math.stackexchange.com/questions/1444412/qualitatively-what-is-the-difference-between-a-matrix-and-a-tensor?">https://math.stackexchange.com/questions/1444412/qualitatively-what-is-the-difference-between-a-matrix-and-a-tensor?</a>
</li>

<li>Tensors for Neural Networks, Clearly Explained!!!:<br />
<a href="https://www.youtube.com/watch?v=L35fFDpwIM4">https://www.youtube.com/watch?v=L35fFDpwIM4</a>
</li>

<li>Tensor Processing Unit:<br />
<a href="https://en.wikipedia.org/wiki/Tensor_Processing_Unit">https://en.wikipedia.org/wiki/Tensor_Processing_Unit</a>
</li>

<li>Třída Storage:<br />
<a href="http://docs.pytorch.wiki/en/storage.html">http://docs.pytorch.wiki/en/storage.html</a>
</li>

<li>Funkce torch.dot<br />
<a href="https://pytorch.org/docs/stable/generated/torch.dot.html#torch.dot">https://pytorch.org/docs/stable/generated/torch.dot.html#torch.dot</a>
</li>

<li>Funkce torch.narrow<br />
<a href="https://pytorch.org/docs/stable/generated/torch.narrow.html">https://pytorch.org/docs/stable/generated/torch.narrow.html</a>
</li>

<li>Funkce torch.matmul<br />
<a href="https://pytorch.org/docs/stable/generated/torch.matmul.html">https://pytorch.org/docs/stable/generated/torch.matmul.html</a>
</li>

<li>Funkce torch.reshape<br />
<a href="https://pytorch.org/docs/stable/generated/torch.reshape.html">https://pytorch.org/docs/stable/generated/torch.reshape.html</a>
</li>

<li>Funkce torch.arange<br />
<a href="https://pytorch.org/docs/stable/generated/torch.arange.html">https://pytorch.org/docs/stable/generated/torch.arange.html</a>
</li>

<li>Funkce torch.range<br />
<a href="https://pytorch.org/docs/stable/generated/torch.range.html">https://pytorch.org/docs/stable/generated/torch.range.html</a>
</li>

<li>Třída torch.Tensor<br />
<a href="https://pytorch.org/docs/stable/tensors.html">https://pytorch.org/docs/stable/tensors.html</a>
</li>

<li>Atributy tenzorů<br />
<a href="https://pytorch.org/docs/stable/tensor_attributes.html">https://pytorch.org/docs/stable/tensor_attributes.html</a>
</li>

<li>Pohledy vytvořené nad tenzory<br />
<a href="https://pytorch.org/docs/stable/tensor_view.html">https://pytorch.org/docs/stable/tensor_view.html</a>
</li>

<li>Broadcasting v&nbsp;knihovně <br />
<a href="https://.org/doc/stable/user/basics.broadcasting.html">https://numpy.org/doc/stable/user/basics.broadcasting.html</a>
</li>

<li>Broadcasting semantics (v&nbsp;knihovně PyTorch)<br />
<a href="https://pytorch.org/docs/stable/notes/broadcasting.html">https://pytorch.org/docs/stable/notes/broadcasting.html</a>
</li>

<li>Dot Product In Physics: What Is The Physical Meaning of It?<br />
<a href="https://profoundphysics.com/dot-product-in-physics-what-is-the-physical-meaning-of-it/">https://profoundphysics.com/dot-product-in-physics-what-is-the-physical-meaning-of-it/</a>
</li>

<li>scikit-learn: Getting Started<br />
<a href="https://scikit-learn.org/stable/getting_started.html">https://scikit-learn.org/stable/getting_started.html</a>
</li>

<li>Support Vector Machines<br />
<a href="https://scikit-learn.org/stable/modules/svm.html">https://scikit-learn.org/stable/modules/svm.html</a>
</li>

<li>Use Deep Learning to Detect Programming Languages<br />
<a href="http://searene.me/2017/11/26/use-neural-networks-to-detect-programming-languages/">http://searene.me/2017/11/26/use-neural-networks-to-detect-programming-languages/</a>
</li>

<li>Data pro neuronové sítě<br />
<a href="http://archive.ics.uci.edu/ml/index.php">http://archive.ics.uci.edu/ml/index.php</a>
</li>

<li>Feedforward neural network<br />
<a href="https://en.wikipedia.org/wiki/Feedforward_neural_network">https://en.wikipedia.org/wiki/Feedforward_neural_network</a>
</li>

<li>Biologické algoritmy (4) - Neuronové sítě<br />
<a href="https://www.root.cz/clanky/biologicke-algoritmy-4-neuronove-site/">https://www.root.cz/clanky/biologicke-algoritmy-4-neuronove-site/</a>
</li>

<li>Biologické algoritmy (5) - Neuronové sítě<br />
<a href="https://www.root.cz/clanky/biologicke-algoritmy-5-neuronove-site/">https://www.root.cz/clanky/biologicke-algoritmy-5-neuronove-site/</a>
</li>

<li>Umělá neuronová síť (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Um%C4%9Bl%C3%A1_neuronov%C3%A1_s%C3%AD%C5%A5">https://cs.wikipedia.org/wiki/Um%C4%9Bl%C3%A1_neuronov%C3%A1_s%C3%AD%C5%A5</a>
</li>

<li>AI vs Machine Learning (Youtube)<br />
<a href="https://www.youtube.com/watch?v=4RixMPF4xis">https://www.youtube.com/watch?v=4RixMPF4xis</a>
</li>

<li>Machine Learning | What Is Machine Learning? | Introduction To Machine Learning | 2024 | Simplilearn (Youtube)<br />
<a href="https://www.youtube.com/watch?v=ukzFI9rgwfU">https://www.youtube.com/watch?v=ukzFI9rgwfU</a>
</li>

<li>A Gentle Introduction to Machine Learning (Youtube)<br />
<a href="https://www.youtube.com/watch?v=Gv9_4yMHFhI">https://www.youtube.com/watch?v=Gv9_4yMHFhI</a>
</li>

<li>Machine Learning vs Deep Learning<br />
<a href="https://www.youtube.com/watch?v=q6kJ71tEYqM">https://www.youtube.com/watch?v=q6kJ71tEYqM</a>
</li>

<li>Umělá inteligence (slajdy)<br />
<a href="https://slideplayer.cz/slide/12119218/">https://slideplayer.cz/slide/12119218/</a>
</li>

<li>Úvod do umělé inteligence<br />
<a href="https://slideplayer.cz/slide/2505525/">https://slideplayer.cz/slide/2505525/</a>
</li>

<li>Umělá inteligence I / Artificial Intelligence I<br />
<a href="https://ktiml.mff.cuni.cz/~bartak/ui/">https://ktiml.mff.cuni.cz/~bartak/ui/</a>
</li>

<li>Třída torch.nn.Linear<br />
<a href="https://pytorch.org/docs/stable/generated/torch.nn.Linear.html">https://pytorch.org/docs/stable/generated/torch.nn.Linear.html</a>
</li>

<li>Třída torch.nn.Parameter<br />
<a href="https://pytorch.org/docs/stable/generated/torch.nn.parameter.Parameter.html">https://pytorch.org/docs/stable/generated/torch.nn.parameter.Parameter.html</a>
</li>

<li>Třída torch.nn.Sigmoid<br />
<a href="https://pytorch.org/docs/stable/generated/torch.nn.Sigmoid.html">https://pytorch.org/docs/stable/generated/torch.nn.Sigmoid.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

