<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Ovládání GPIO na Raspberry Pi z programovacího jazyka Lua</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Ovládání GPIO na Raspberry Pi z programovacího jazyka Lua</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Většina článků, které se zabývají ovládáním GPIO na jednodeskových mikropočítačích Raspberry Pi, se věnuje použití Pythonu či jazyka C. Ovšem v některých případech může být výhodnější namísto Pythonu použít jazyk Lua, jehož nároky na systémové prostředky jsou menší.</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Ovládání GPIO na Raspberry Pi z&nbsp;programovacího jazyka Lua</a></p>
<p><a href="#k02">*** 2. Základní informace o správci balíčků <strong>LuaRocks</strong></a></p>
<p><a href="#k03">*** 3. Instalace správce balíčků <strong>LuaRocks-gpio</strong></a></p>
<p><a href="#k04">*** 4. Instalace modulu <strong>rpi-gpio</strong> s&nbsp;využitím správce balíčků <strong>LuaRocks</strong></a></p>
<p><a href="#k05">*** 5. Kontrola instalace</a></p>
<p><a href="#k06">*** 6. Funkce nabízené modulem <strong>rpi-gpio</strong></a></p>
<p><a href="#k07">*** 7. Základní otestování funkčnosti modulu <strong>rpi-gpio</strong></a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Alternativní modul se základními funkcemi</a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Ovládání GPIO na Raspberry Pi z&nbsp;programovacího jazyka Lua</h2>

<p>Jednodeskový mikropočítač Raspberry Pi, který dnes existuje hned v&nbsp;několika variantách, pravděpodobně nemusíme čtenářům tohoto serveru podrobněji představovat. Za připomínku však stojí fakt, že &ndash; na rozdíl od některých dalších podobně koncipovaných zařízení &ndash; Raspberry Pi nevznikl jako čistě hardwarový projekt, ale patří k&nbsp;němu i dnes již velmi rozsáhlý softwarový ekosystém, v&nbsp;němž se mj.&nbsp;preferují určité vybrané programovací jazyky. Nesmíme zapomenout ani na mnoho článků a knih, které jsou zaměřeny na programování Raspberry Pi: ve většině publikací najdeme zmínky o jazyku C a taktéž o jazyku Python. Proč tomu tak je?</p>

<p>Programovací jazyk Lua sice skutečně není na Raspberry Pi mainstreamovým jazykem, ovšem programátorům může při správném použití nabídnout to nejlepší ze světa Pythonu i C &ndash; programy psané v&nbsp;jazyku Lua totiž mohou používat prakticky stejnou vysokou úroveň abstrakce jako Python a přitom jsou paměťové nároky interpretru Lua mnohem menší (ostatně samotná velikost interpretru jazyka Lua je na mém Raspberry Pi pouze 126 kilobajtů, zatímco interpret Pythonu 3 má na stejném stroji velikost 2,7 megabajtů (toto srovnání není samozřejmě zcela férové, protože Python obsahuje i větší množství vestavěných funkcí). I běh programů (skriptů) naprogramovaných v&nbsp;Lue většinou rychlost Pythonu překonává; viz též benchmarky, které naleznete na adrese <a href=""></a>.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Základní informace o správci balíčků <strong>LuaRocks</strong></h2>

<p></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace správce balíčků <strong>LuaRocks-gpio</strong></h2>

<p></p>

<pre>
Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
</pre>

<p>Nejprve nainstalujeme nejnovější verze interpretru jazyka Lua a základních knihoven používaných interpretrem i všemi programy napsanými v&nbsp;Lue. Tento krok je u některých verzí Raspibanu nutný, protože by jinak došlo ke kolizi verzí při instalaci balíčku <strong>liblua5.1-dev</strong>:</p>

<pre>
sudo apt-get upgrade lua liblua5.1
</pre>

<p>Dále nainstalujeme již zmíněný balíček <strong>liblua5.1-dev</strong>, který mj.&nbsp;obsahuje hlavičkové soubory s&nbsp;funkcemi používanými pro přístup k&nbsp;interpretru Luy z&nbsp;céčka, nebo jiného programovacího jazyka překládaného do nativního kódu:</p>

<pre>
sudo apt-get install liblua5.1-dev
</pre>

<p>Pokud předchozí kroky proběhly korektně, můžeme nainstalovat samotný správce <strong>luarocks</strong> a navíc ještě knihovnu <strong>luasec</strong> používanou mj.&nbsp;i při stahování balíčků (tuto jedinou knihovnu nemusí <strong>luarocks</strong> stáhnout sám automaticky):</p>

<pre>
sudo apt-get install luarocks luasec
</pre>

<pre>
LuaRocks 2.0.8, a module deployment system for Lua
&nbsp;
NAME
	luarocks - LuaRocks main command-line interface
&nbsp;
SYNOPSIS
	luarocks [--from=<server> | --only-from=<server>] [--to=<tree>] [VAR=VALUE]... <command> [<argument>] 
&nbsp;
GENERAL OPTIONS
	These apply to all commands, as appropriate:

	--server=<server>      Fetch rocks/rockspecs from this server
	                       (takes priority over config file)
	--only-server=<server> Fetch rocks/rockspecs from this server only
	                       (overrides any entries in the config file)
	--only-sources=<url>   Restrict downloads to paths matching the
	                       given URL.
	--tree=<tree>          Which tree to operate on.
	--local                Use the tree in the user's home directory.
&nbsp;
VARIABLES
	Variables from the "variables" table of the configuration file
	can be overriden with VAR=VALUE assignments.
&nbsp;
COMMANDS
	build
		Build/compile a rock.
	download
		Download a specific rock file from a rocks server.
	help
		Help on commands. Type 'luarocks help <command>' for more.
	install
		Install a rock.
	list
		Lists currently installed rocks.
	make
		Compile package in current directory using a rockspec.
	new_version
		Auto-write a rockspec for a new version of a rock.
	pack
		Create a rock, packing sources or binaries.
	path
		Return the currently configured package path.
	remove
		Uninstall a rock.
	search
		Query the LuaRocks servers.
	show
		Shows information about an installed rock.
	unpack
		Unpack the contents of a rock.
&nbsp;
CONFIGURATION
	System configuration file: /etc/luarocks/config.lua (ok)
	User configuration file: /home/pi/.luarocks/config.lua (not found)
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Instalace modulu <strong>rpi-gpio</strong> s&nbsp;využitím správce balíčků <strong>LuaRocks</strong></h2>

<p>Ukažme si nyní, jakým způsobem se nainstaluje modul <strong>rpi-gpio</strong> s&nbsp;využitím správce balíčků <strong>LuaRocks</strong>. Všechny další příkazy jsou platné pro Rasbian.</p>

<p>Pod tímto odstavcem je vypsán obsah souboru (manifestu) popisujícího modul <strong>rpi-gpio</strong>. Povšimněte si, že se skutečně jedná o zdrojový kód zpracovatelný interpretrem jazyka Lua. Pole a slovníky jsou zapsány ve formě tabulek (tyto dva datové typy totiž v&nbsp;jazyku Lua do značné míry splývají), u popisu modulu se používá víceřádkový řetězec, klíče slovníků nejsou uzavřeny do uvozovek, na jeden řádek autor vložil komentáře uvozené dvojicí znaků -- atd.:</p>

<pre>
package = "rpi-gpio"
version = "0.2-1"
source = {
    url = "https://github.com/Tieske/rpi-gpio/archive/lua_version_0.2.tar.gz",
    dir = "rpi-gpio-lua_version_0.2",
}
description = {
   summary = "Lua module to control the GPIO on a Raspberry Pi",
   detailed = [[
      This package provides a Lua module to control the GPIO on a Raspberry Pi.
      The main functionality is provided by the RPi.GPIO Python Module of Ben 
      Croston, and the Lua binding was continued upon the work of Andre Simon.
      Additional modules migrated from Adafruit python code.
   ]],
   homepage = "https://github.com/Tieske/rpi-gpio",
   license = "MIT"
}
dependencies = {
   "lua &gt;= 5.1, < 5.2",
   "bit32",
   "copastimer >= 1.0", -- pulls in copas, luasocket, coxpcall
}
build = {
  type = "builtin",
  modules = {
    -- Main GPIO module
    ["GPIO"] = {
      sources = {
        "lua/RPi_GPIO_Lua_module.c",
        "lua/darksidesync_aux.c",
        "source/c_gpio.c",
        "source/cpuinfo.c",
        "source/event_gpio.c",
        "source/soft_pwm.c",
      },
      libraries = {
        "pthread"
      },
      incdirs = {
        "source",
        "lua",
      },
    },
    -- additional Lua code files
    ["GPIO.lcd-hd44780"] = "lua/module/lcd-hd44780.lua",
  },
}
</pre>

<p>Vlastní instalace se provede jediným příkazem:</p>

<pre>
<strong>sudo luarocks install rpi-gpio</strong>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Kontrola instalace</h2>

<p></p>

<pre>
<strong>luarocks list</strong>
</pre>

<p></p>

<pre>
Installed rocks:
----------------
&nbsp;
bit32
   5.3.0-1 (installed) - /usr/local/lib/luarocks/rocks
&nbsp;
copas
   2.0.2-1 (installed) - /usr/local/lib/luarocks/rocks
&nbsp;
copastimer
   1.0.0-1 (installed) - /usr/local/lib/luarocks/rocks
&nbsp;
coxpcall
   1.16.0-1 (installed) - /usr/local/lib/luarocks/rocks
&nbsp;
luasocket
   3.0rc1-2 (installed) - /usr/local/lib/luarocks/rocks
&nbsp;
rpi-gpio
   0.2-1 (installed) - /usr/local/lib/luarocks/rocks
</pre>

<p>Můžeme se podívat i na podrobnější informace o vybraném balíčku. Zajímat nás bude především balíček <strong>rpi-gpio</strong>. Informace o tomto balíčku získáme velmi jednoduše následujícím příkazem:</p>

<pre>
<strong>luarocks show rpi-gpio</strong>
</pre>

<pre>
rpi-gpio 0.2-1 - Lua module to control the GPIO on a Raspberry Pi
&nbsp;
This package provides a Lua module to control the GPIO on a Raspberry Pi. The
main functionality is provided by the RPi.GPIO Python Module of Ben  Croston,
and the Lua binding was continued upon the work of Andre Simon. Additional
modules migrated from Adafruit python code.
&nbsp;
License:        MIT
Homepage:       https://github.com/Tieske/rpi-gpio
Installed in:   /usr/local
&nbsp;
Modules:
        scripts.test_switches
        GPIO
        INSTALL.txt
        RPi_GPIO_Lua_module.o
        README.md
        module.lcd-hd44780
        darksidesync_aux.c
        scripts.test_leds
        darksidesync_aux.h
        scripts.test2_input
        darksidesync_api.h
        scripts.test_lcd
        scripts.test6_callbacks
        config.ld
        makefile
        scripts.test5_pwm
        RPi_GPIO_Lua_module.c
        scripts.test4_edge
        CHANGELOG.txt
        scripts.test3_inout
        doc/index.html
        scripts.test1_blink
        doc/modules/GPIO.lcd-hd44780.html
        doc/modules/GPIO.html
        LICENCE.txt
        darksidesync_aux.o
        doc/ldoc.css
        GPIO.lcd-hd44780
&nbsp;
Depends on:
        coxpcall
        copas
        copastimer
        luasocket
        bit32
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Funkce nabízené modulem <strong>rpi-gpio</strong></h2>

<p>Po zkompilování binární knihovny <strong>GPIO.so</strong> se výsledný soubor uloží do adresáře <strong>/usr/local/lib/lua/5.1/</strong>, takže si můžeme poměrně snadno nechat vypsat všechny funkce, které tato knihovna obsahuje a které budou přímo či nepřímo z&nbsp;modulu dostupné. Pro výpis všech viditelných funkcí použijeme utilitu <strong>objdump</strong>, kterou spustíme s&nbsp;těmito parametry:</p>

<pre>
objdump -T -j .text /usr/local/lib/lua/5.1/GPIO.so
</pre>

<p>Výsledek size může na první pohled vypadat poněkud zmateně, ale pro naše účely nám budou postačovat informace vypsané v&nbsp;posledním sloupci, který obsahuje jména nativních funkcí:</p>

<pre>
/usr/local/lib/lua/5.1/GPIO.so:     file format elf32-littlearm
&nbsp;
DYNAMIC SYMBOL TABLE:
00004278 g    DF .text  00000080  Base        DSS_shutdown
0000445c g    DF .text  00000078  Base        set_rising_event
00004c64 g    DF .text  00000088  Base        gpio_set_direction
00004848 g    DF .text  00000048  Base        input_gpio
00003488 g    DF .text  000000b4  Base        remove_lua_callbacks
00004554 g    DF .text  00000078  Base        set_high_event
00004724 g    DF .text  00000080  Base        setup_gpio
00003a00 g    DF .text  000005c0  Base        luaopen_GPIO
000059ac g    DF .text  00000060  Base        pwm_start
0000543c g    DF .text  00000040  Base        event_cleanup
0000547c g    DF .text  00000198  Base        blocking_wait_for_edge
00004a34 g    DF .text  000000cc  Base        gpio_export
00005830 g    DF .text  00000058  Base        add_new_pwm
00005074 g    DF .text  00000044  Base        set_initial_false
00005618 g    DF .text  0000007c  Base        remove_pwm
00004248 g    DF .text  00000030  Base        DSS_deliver
000042f8 g    DF .text  00000014  Base        short_wait
00005750 g    DF .text  00000038  Base        full_sleep
00004ff8 g    DF .text  0000007c  Base        remove_callbacks
00004cec g    DF .text  00000088  Base        gpio_set_edge
00005408 g    DF .text  00000034  Base        event_detected
00003fc0 g    DF .text  00000200  Base        DSS_initialize
00002ba4 g    DF .text  000000cc  Base        lua_get_gpio_number
00004b88 g    DF .text  000000dc  Base        gpio_unexport
00005a0c g    DF .text  00000018  Base        pwm_stop
00004890 g    DF .text  00000014  Base        cleanup
00004d74 g    DF .text  00000060  Base        add_fd_list
000047a4 g    DF .text  00000040  Base        gpio_function
00005694 g    DF .text  000000bc  Base        calculate_times
0000497c g    DF .text  000000b8  Base        get_rpi_revision
00004644 g    DF .text  000000e0  Base        set_pullupdn
00005888 g    DF .text  0000007c  Base        find_pwm
00004edc g    DF .text  00000040  Base        exports_cleanup
00002918 g    DF .text  00000034  Base        dss_cancel
000048a4 g    DF .text  000000d8  Base        get_cpuinfo_revision
0000430c g    DF .text  00000098  Base        setup
00005954 g    DF .text  00000058  Base        pwm_set_frequency
00003650 g    DF .text  00000130  Base        add_lua_callback
00003614 g    DF .text  0000003c  Base        lua_remove_event_detect
00005114 g    DF .text  000000f4  Base        poll_thread
00004f1c g    DF .text  00000078  Base        add_edge_callback
00005904 g    DF .text  00000050  Base        pwm_set_duty_cycle
000041c0 g    DF .text  00000088  Base        DSS_getutilid
000044d4 g    DF .text  00000080  Base        set_falling_event
00004e84 g    DF .text  00000058  Base        open_value_file
000045cc g    DF .text  00000078  Base        set_low_event
000047e4 g    DF .text  00000064  Base        output_gpio
00004e2c g    DF .text  00000058  Base        fd_lookup
00004f94 g    DF .text  00000064  Base        run_callbacks
00005788 g    DF .text  000000a8  Base        pwm_thread
00004dd4 g    DF .text  00000058  Base        gpio_lookup
00004404 g    DF .text  00000058  Base        eventdetected
000043a4 g    DF .text  00000060  Base        clear_event_detect
0000526c g    DF .text  0000011c  Base        add_edge_detect
00005388 g    DF .text  00000080  Base        remove_edge_detect
00004b00 g    DF .text  00000088  Base        close_value_fd
000050b8 g    DF .text  0000005c  Base        gpio_initial
00005208 g    DF .text  00000064  Base        gpio_event_added
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Základní otestování funkčnosti modulu <strong>rpi-gpio</strong></h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Alternativní modul se základními funkcemi</h2>

<pre>
git clone https://github.com/rsisto/luaGpio
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Lua (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Lua_(programming_language)">http://en.wikipedia.org/wiki/Lua_(programming_language)</a>
</li>

<li>LuaRocks: the package manager for Lua modules<br />
<a href="https://luarocks.org/">https://luarocks.org/</a>
</li>

<li>Balíček rpi-gpio na serveru LuaRocks<br />
<a href="https://luarocks.org/modules/tieske/rpi-gpio">https://luarocks.org/modules/tieske/rpi-gpio</a>
</li>

<li>Lua module for Raspberry Pi<br />
<a href="http://andre-simon.de/doku/rpi_gpio_lua/en/rpi_gpio_lua.php">http://andre-simon.de/doku/rpi_gpio_lua/en/rpi_gpio_lua.php</a>
</li>

<li>Seriál o programovacím jazyku Lua<br />
<a href="http://www.root.cz/serialy/programovaci-jazyk-lua/">http://www.root.cz/serialy/programovaci-jazyk-lua/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (2)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-2/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-2/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (3)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-3/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-3/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (4)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-4/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-4/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (5 - tabulky a pole)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-5-tabulky-a-pole/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-5-tabulky-a-pole/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (6 - překlad programových smyček do mezijazyka LuaJITu)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-6-preklad-programovych-smycek-do-mezijazyka-luajitu/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-6-preklad-programovych-smycek-do-mezijazyka-luajitu/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (7 - dokončení popisu mezijazyka LuaJITu)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-7-dokonceni-popisu-mezijazyka-luajitu/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-7-dokonceni-popisu-mezijazyka-luajitu/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (8 - základní vlastnosti trasovacího JITu)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-8-zakladni-vlastnosti-trasovaciho-jitu/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-8-zakladni-vlastnosti-trasovaciho-jitu/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (9 - další vlastnosti trasovacího JITu)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-9-dalsi-vlastnosti-trasovaciho-jitu/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-9-dalsi-vlastnosti-trasovaciho-jitu/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (10 - JIT překlad do nativního kódu)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-10-jit-preklad-do-nativniho-kodu/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-10-jit-preklad-do-nativniho-kodu/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (11 - JIT překlad do nativního kódu procesorů s architekturami x86 a ARM)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-11-jit-preklad-do-nativniho-kodu-procesoru-s-architekturami-x86-a-arm/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-11-jit-preklad-do-nativniho-kodu-procesoru-s-architekturami-x86-a-arm/</a>
</li>

<li>LuaJIT - Just in Time překladač pro programovací jazyk Lua (12 - překlad operací s reálnými čísly)<br />
<a href="http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-12-preklad-operaci-s-realnymi-cisly/">http://www.root.cz/clanky/luajit-just-in-time-prekladac-pro-programovaci-jazyk-lua-12-preklad-operaci-s-realnymi-cisly/</a>
</li>

<li>Lua Profiler (GitHub)<br />
<a href="https://github.com/luaforge/luaprofiler">https://github.com/luaforge/luaprofiler</a>
</li>

<li>Lua Profiler (LuaForge)<br />
<a href="http://luaforge.net/projects/luaprofiler/">http://luaforge.net/projects/luaprofiler/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

