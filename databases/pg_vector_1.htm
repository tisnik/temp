<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">4. Vytvoření tabulky pro 3D vektory</a></p>
<p><a href="#k05">5. Operace zápisu a čtení 3D vektorů</a></p>
<p><a href="#k06">*** 6. Tabulka pro uložení 2D vektorů: základ pro další demonstrační příklady</a></p>
<p><a href="#k07">7. Vizualizace výpočtů vzdáleností pro 2D vektory</a></p>
<p><a href="#k08">*** 8. Výběry vektorů na základě jejich podobnosti</a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

$ pg_config --pkglibdir
/usr/lib64/pgsql

$ pg_config --sharedir
/usr/share/pgsql

$ ls -l `pg_config --pkglibdir`

-rwxr-xr-x. 1 root root  15248 Feb 26  2024 utf8_and_iso8859_1.so
-rwxr-xr-x. 1 root root  35736 Feb 26  2024 utf8_and_iso8859.so
-rwxr-xr-x. 1 root root 174992 Feb 26  2024 utf8_and_johab.so
-rwxr-xr-x. 1 root root 142192 Feb 26  2024 utf8_and_sjis2004.so
-rwxr-xr-x. 1 root root  97160 Feb 26  2024 utf8_and_sjis.so
-rwxr-xr-x. 1 root root 179088 Feb 26  2024 utf8_and_uhc.so
-rwxr-xr-x. 1 root root  39800 Feb 26  2024 utf8_and_win.so
-rwxr-xr-x. 1 root root  15568 Feb 26  2024 uuid-ossp.so
-rwxr-xr-x. 1 root root 119528 Apr  3  2024 vector.so



$ ls -1 `pg_config --sharedir`/extension

vector--0.4.1--0.4.2.sql
vector--0.4.2--0.4.3.sql
vector--0.4.3--0.4.4.sql
vector--0.4.4--0.5.0.sql
vector--0.5.0--0.5.1.sql
vector--0.5.1--0.6.0.sql
vector--0.6.0--0.6.1.sql
vector--0.6.1--0.6.2.sql
vector--0.6.2.sql
vector.control
xml2--1.0--1.1.sql
xml2--1.1.sql
xml2.control

$ cat `pg_config --sharedir`/extension/vector.control
comment = 'vector data type and ivfflat and hnsw access methods'
default_version = '0.6.2'
module_pathname = '$libdir/vector'
relocatable = true
trusted = true[ptisnovs@ptisnovs-thinkpadt14gen3 xy]$ 


<p><a name="k03"></a></p>
<h2 id="k03">3. </h2>

<pre>
test=&gt; <strong>CREATE EXTENSION IF NOT EXISTS vector;</strong>
</pre>

<pre>
test=&gt; <strong>\dx</strong>
                             List of installed extensions
  Name   | Version |   Schema   |                     Description                      
---------+---------+------------+------------------------------------------------------
 plpgsql | 1.0     | pg_catalog | PL/pgSQL procedural language
 vector  | 0.6.2   | public     | vector data type and ivfflat and hnsw access methods
(2 rows)
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Vytvoření tabulky pro 3D vektory</h2>

<p>V&nbsp;tomto okamžiku již můžeme v&nbsp;tabulkách použít pro vybrané sloupce
typ <i>vector</i>. Vyzkoušejme si to na jednoduchém příkladu; konkrétně na
tabulce nazvané <strong>v3</strong>, která bude obsahovat sloupec
<strong>id</strong> s&nbsp;jednoznačným identifikátorem (primární klíč) a další
sloupec <strong>embedding</strong> s&nbsp;třídimenzionálními vektory,
tj.&nbsp;vektory obsahujícími tři prvky. Takovou tabulku lze vytvořit
následujícím příkazem:</p>

<pre>
test=&gt; <strong>CREATE TABLE v3 (id bigserial PRIMARY KEY, embedding vector(3));</strong>
&nbsp;
CREATE TABLE
</pre>

<p>Vypíšeme si všechny tabulky, které byly vytvořeny a do kterých je možné
přistupovat:</p>

<pre>
test=&gt; <strong>\dt</strong>
&nbsp;
           List of relations
 Schema |     Name     | Type  | Owner
--------+--------------+-------+--------
 public | v3           | table | tester
(1 row)
</pre>

<p>Výpis struktury (schématu) právě vytvořené tabulky <strong>v3</strong>:</p>

<pre>
test=&gt; <strong>\d+ v3</strong>
&nbsp;
                                                          Table "public.v3"
  Column   |   Type    | Collation | Nullable |            Default             | Storage  | Compression | Stats target | Description
-----------+-----------+-----------+----------+--------------------------------+----------+-------------+--------------+-------------
 id        | bigint    |           | not null | nextval('v3_id_seq'::regclass) | plain    |             |              |
 embedding | vector(3) |           |          |                                | external |             |              |
Indexes:
    "v3_pkey" PRIMARY KEY, btree (id)
Access method: heap
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že je prozatím vytvořen
pouze jediný index umožňující rychlý výběr záznamů na základě zadaného
primárního klíče. To je v&nbsp;praxi nedostačující; podrobnosti si vysvětlíme
příště.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Operace zápisu a čtení 3D vektorů</h2>

<p>Pro vložení nových záznamů do tabulky <strong>v3</strong> je nutné nějakým
způsobem specifikovat i zapisované vektory. Musí se jednat o trojice hodnot
(pro jednoduchost předpokládejme, že se prozatím bude jednat o trojici celých
čísel). Taková trojice se zapíše do řetězce (!) s&nbsp;tímto formátem:</p>

<pre>
'[hodnota1, hodnota2, hodnota3]'
</pre>

<p>Můžeme si to otestovat na příkazu <strong>INSERT</strong>, kterým do tabulky
vložíme čtyři vektory. V&nbsp;příkazu jsou specifikovány pouze hodnoty ukládané
do sloupce <strong>embedding</strong>; zápis jednoznačných identifikátorů do
sloupce <strong>id</strong> ponecháme na databázi:</p>

<pre>
test=&gt; <strong>INSERT INTO v3 (embedding) VALUES ('[1,2,3]'), ('[1,2,2]'), ('[4,5,6]'), ('[5, 5, 5]');</strong>
&nbsp;
INSERT 0 4
</pre>

<p>V&nbsp;dalším kroku se přesvědčíme, že do tabulky skutečně byly vloženy
čtyři záznamy:</p>

<pre>
test=&gt; <strong>SELECT * FROM v3;</strong>
&nbsp;
 id | embedding
----+-----------
  1 | [1,2,3]
  2 | [1,2,2]
  3 | [4,5,6]
  4 | [5,5,5]
(4 rows)
</pre>

<p>Výpis hodnot pouze ze sloupce obsahující vektory:</p>

<pre>
test=&gt; <strong>SELECT embedding FROM v3;</strong>
&nbsp;
 embedding
-----------
 [1,2,3]
 [1,2,2]
 [4,5,6]
 [5,5,5]
(4 rows)
</pre>

<p>K&nbsp;dispozici jsou i všechny další klauzule podporované dotazem <strong>SELECT</strong>, například:</p>

<pre>
test=&gt; <strong>SELECT * FROM v3 LIMIT 1;</strong>
&nbsp;
 id | embedding 
----+-----------
  1 | [1,2,3]
(1 row)
&nbsp;
&nbsp;
&nbsp;
test=&gt; <strong>select * from v3 order by id desc;</strong>
 id | embedding 
----+-----------
  4 | [5,5,5]
  3 | [4,5,6]
  2 | [1,2,2]
  1 | [1,2,3]
(4 rows)
</pre>

<p>Ovšem navíc jsou k&nbsp;dispozici i speciální operátory určené pro zápis
podmínek na základě vzdálenosti (resp.&nbsp;přesněji řečeno podobnosti)
vektorů. Tomuto tématu se budeme podrobněji věnovat v&nbsp;navazujících
kapitolách, protože se jedná o jednu z&nbsp;nejdůležitějších vlastností
rozšíření <strong>pgvector</strong>.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Tabulka pro uložení 2D vektorů: základ pro další demonstrační příklady</h2>

test=&gt; <strong>CREATE TABLE v2 (id bigserial PRIMARY KEY, embedding vector(2));</strong>
CREATE TABLE

INSERT INTO v2 (embedding) VALUES ('[-5,  5]'), ('[-4,  3]'), ('[-3,  5]');
INSERT INTO v2 (embedding) VALUES ('[ 3, -5]'), ('[ 4, -3]'), ('[ 5, -5]');
INSERT INTO v2 (embedding) VALUES ('[ 3,  3]'), ('[ 3,  4]'), ('[ 3,  5]');
INSERT INTO v2 (embedding) VALUES ('[ 4,  3]'), ('[ 4,  4]'), ('[ 4,  5]');
INSERT INTO v2 (embedding) VALUES ('[ 5,  3]'), ('[ 5,  4]'), ('[ 5,  5]');




<p><a name="k07"></a></p>
<h2 id="k07">7. Vizualizace výpočtů vzdáleností pro 2D vektory</h2>

<p>Tabulka s&nbsp;dvoudimenzionálními vektory nám poměrně dobře poslouží pro
popis nových operátorů, které byly do databáze PostgreSQL přidány
v&nbsp;rozšíření <strong>pgvector</strong>. Nejprve si vypišme obsah této
tabulky. Není to nic těžkého:</p>

<pre>
test=&gt; <strong>SELECT * FROM v2;</strong>
&nbsp;
 id | embedding
----+-----------
  1 | [-5,5]
  2 | [-4,3]
  3 | [-3,5]
  4 | [3,-5]
  5 | [4,-3]
  6 | [5,-5]
  7 | [3,3]
  8 | [3,4]
  9 | [3,5]
 10 | [4,3]
 11 | [4,4]
 12 | [4,5]
 13 | [5,3]
 14 | [5,4]
 15 | [5,5]
(15 rows)
</pre>

<p>Na 2D vektory se můžeme (i když to není zcela přesné) dívat jako na koncové
souřadnice orientovaných šipek vycházejících z&nbsp;počátku kartézské soustavy
souřadnic. V&nbsp;případě, že si tyto souřadnice vykreslíme, získáme
následující graf (do kterého jsem doplnil numerické souřadnice u vybraných
koncových bodů):</p>

<pre>
                                       │ y
                                       │
                                       │
                                       │
                                       │                [5,5]
                     o       o         │          o   o   o
                                       │          o   o   o
                         o             │          o   o   o
                      [-4, 3]          │
                                       │
─────────────────────────────────────[0,0]──────────────────────────────────────
                                       │                                       x
                                       │              o
                                       │
                                       │          o       o
                                       │                [5,-5]
                                       │
                                       │
                                       │
                                       │
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Výběry vektorů na základě jejich podobnosti</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech prozatím popsaných demonstračních příkladů určených pro
programovací jazyk Python s&nbsp;nainstalovanými balíčky
<strong>psycopg2</strong> a <strong>pgvector</strong> byly uloženy do
repositáře dostupného na adrese <a
href="https://github.com/tisnik/most-popular-python-libs">https://github.com/tisnik/most-popular-python-libs</a>.
V&nbsp;tabulce zobrazené níže jsou odkazy na jednotlivé příklady:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>create_extension.py</td><td>registrace rozšíření <i>vector</i> pro uživatele připojeného k&nbsp;databázi</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/create_extension.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/create_extension.py</a></td></tr>
<tr><td> 2</td><td>insert_into_v2.py</td><td>zápis 2D vektorů do tabulky <i>v2</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/insert_into_v2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/insert_into_v2.py</a></td></tr>
<tr><td> 3</td><td>insert_normalized.py</td><td>zápis normalizovaných 2D vektorů do tabulky <i>normalized</i></td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/insert_normalized.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/insert_normalized.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>read_vectors_1.py</td><td>přečtení vektorů bez jejich konverze na skutečné vektory</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/read_vectors_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/read_vectors_1.py</a></td></tr>
<tr><td> 5</td><td>read_vectors_2.py</td><td>důkaz, že přečtené vektory jsou vráceny jako řetězce</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/read_vectors_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/read_vectors_2.py</a></td></tr>
<tr><td> 6</td><td>read_vectors_3.py</td><td>přečtení vektorů z&nbsp;databáze ve formě N-dimenzionálních polí</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/read_vectors_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/read_vectors_3.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>select_by_distance_1.py</td><td>výběr vektorů na základě jejich odlišnosti od zadaného vektoru</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_1.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_1.py</a></td></tr>
<tr><td> 8</td><td>select_by_distance_2.py</td><td>dtto, ale s&nbsp;lepším naformátováním SQL dotazu</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_2.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_2.py</a></td></tr>
<tr><td> 9</td><td>select_by_distance_3.py</td><td>výběr vektorů s&nbsp;nejmenší odlišností (vzdáleností)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_3.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_3.py</a></td></tr>
<tr><td>10</td><td>select_by_distance_4.py</td><td>výběr vektorů se zadanou nejmenší odlišností (vzdáleností)</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_4.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/select_by_distance_4.py</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>various_distances.py</td><td>použití různých metrik na nenormalizované vektory</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/various_distances.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/various_distances.py</a></td></tr>
<tr><td>12</td><td>various_distances_normalized.py</td><td>použití různých metrik na normalizované vektory</td><td><a href="https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/various_distances_normalized.py">https://github.com/tisnik/most-popular-python-libs/blob/master/pgvector/various_distances_normalized.py</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Vector database<br />
<a href="https://en.wikipedia.org/wiki/Vector_database">https://en.wikipedia.org/wiki/Vector_database</a>
</li>

<li>Nearest neighbor search<br />
<a href="https://en.wikipedia.org/wiki/Nearest_neighbor_search#Approximation_methods">https://en.wikipedia.org/wiki/Nearest_neighbor_search#Approximation_methods</a>
</li>

<li>RAG - Retrieval-augmented generation<br />
<a href="https://en.wikipedia.org/wiki/Retrieval-augmented_generation">https://en.wikipedia.org/wiki/Retrieval-augmented_generation</a>
</li>

<li>pgvector na GitHubu<br />
<a href="https://github.com/pgvector/pgvector">https://github.com/pgvector/pgvector</a>
</li>

<li>Why we replaced Pinecone with PGVector<br />
<a href="https://www.confident-ai.com/blog/why-we-replaced-pinecone-with-pgvector">https://www.confident-ai.com/blog/why-we-replaced-pinecone-with-pgvector</a>
</li>

<li>PostgreSQL as VectorDB - Beginner Tutorial<br />
<a href="https://www.youtube.com/watch?v=Ff3tJ4pJEa4">https://www.youtube.com/watch?v=Ff3tJ4pJEa4</a>
</li>

<li>What is a Vector Database? (neobsahuje odpověď na otázku v titulku :-)<br />
<a href="https://www.youtube.com/watch?v=t9IDoenf-lo">https://www.youtube.com/watch?v=t9IDoenf-lo</a>
</li>

<li>PGVector: Turn PostgreSQL Into A Vector Database<br />
<a href="https://www.youtube.com/watch?v=j1QcPSLj7u0">https://www.youtube.com/watch?v=j1QcPSLj7u0</a>
</li>

<li>Milvus<br />
<a href="https://milvus.io/">https://milvus.io/</a>
</li>

<li>Vector Databases simply explained! (Embeddings &amp; Indexes)<br />
<a href="https://www.youtube.com/watch?v=dN0lsF2cvm4">https://www.youtube.com/watch?v=dN0lsF2cvm4</a>
</li>

<li>Vector databases are so hot right now. WTF are they?<br />
<a href="https://www.youtube.com/watch?v=klTvEwg3oJ4">https://www.youtube.com/watch?v=klTvEwg3oJ4</a>
</li>

<li>Step-by-Step Guide to Installing “pgvector” and Loading Data in PostgreSQL<br />
<a href="https://medium.com/@besttechreads/step-by-step-guide-to-installing-pgvector-and-loading-data-in-postgresql-f2cffb5dec43">https://medium.com/@besttechreads/step-by-step-guide-to-installing-pgvector-and-loading-data-in-postgresql-f2cffb5dec43</a>
</li>

<li>Best 17 Vector Databases for 2025<br />
<a href="https://lakefs.io/blog/12-vector-databases-2023/">https://lakefs.io/blog/12-vector-databases-2023/</a>
</li>

<li>Top 15 Vector Databases that You Must Try in 2025<br />
<a href="https://www.geeksforgeeks.org/top-vector-databases/">https://www.geeksforgeeks.org/top-vector-databases/</a>
</li>

<li>Picking a vector database: a comparison and guide for 2023<br />
<a href="https://benchmark.vectorview.ai/vectordbs.html">https://benchmark.vectorview.ai/vectordbs.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

