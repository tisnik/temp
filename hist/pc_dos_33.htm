<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Matematické koprocesory na platformě 80x86 prakticky</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Matematické koprocesory na platformě 80x86 prakticky</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Matematické koprocesory na platformě 80x86 prakticky</a></p>
<p><a href="#k02">2. Rychlost matematického koprocesoru v&nbsp;porovnání se SW výpočty</a></p>
<p><a href="#k03">3. Otestování, zda je matematický koprocesor nainstalován</a></p>
<p><a href="#k04">4. Základní aritmetické operace v&nbsp;praxi</a></p>
<p><a href="#k05">5. První demonstrační příklad: základní aritmetické operace</a></p>
<p><a href="#k06">6. Operace podílu, podíl s&nbsp;prohozenými operandy</a></p>
<p><a href="#k07">7. Dělení nulou</a></p>
<p><a href="#k08">8. Demonstrační příklady: dělení kladnou a zápornou nulou</a></p>
<p><a href="#k09">9. Speciální případ: výpočet 0/0</a></p>
<p><a href="#k10">10. Další výpočty, které dokáže matematický koprocesor provádět</a></p>
<p><a href="#k11">11. Demonstrační příklad: výpočet druhé odmocniny</a></p>
<p><a href="#k12">12. Demonstrační příklad: výpočet druhé odmocniny ze záporné hodnoty</a></p>
<p><a href="#k13">*** 13. Řídicí registr matematického koprocesoru</a></p>
<p><a href="#k14">14. Demonstrační příklad: detekce typu matematického koprocesoru</a></p>
<p><a href="#k15">15. Stavový registr matematického koprocesoru</a></p>
<p><a href="#k16">*** 16. Změna ukazatele na vrchol zásobníku při manipulaci s&nbsp;operandy</a></p>
<p><a href="#k17">*** 17. Porovnání dvou operandů s&nbsp;nastavením bitů <strong>C2</strong>, <strong>C1</strong> a <strong>C0</strong></a></p>
<p><a href="#k18">18. Pomocný program pro převod FPU hodnot do jejich hexadecimální podoby</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Matematické koprocesory na platformě 80x86 prakticky</h2>

30kbit microcode
cca 500 radku pro transcendentni funkce<F2>


<p><a name="k02"></a></p>
<h2 id="k02">2. Rychlost matematického koprocesoru v&nbsp;porovnání se SW výpočty</h2>

<p>Původní matematické koprocesory 8087 byly nabízeny ve třech variantách
s&nbsp;frekvencemi 5MHz, 8MHz a 10MHz (a tomu odpovídala cena od zhruba 150
dolarů až 270 dolarů). U původní verze 8087 se uváděla výpočetní rychlost
dosahující až 50000 FLOPS, což průměrně odpovídá 20µs pro provedení jedné
operace. Ovšem musíme k&nbsp;tomu připočítat i instrukce nutné pro načtení a
uložení hodnot do operační paměti atd. Nicméně i za těchto podmínek byla
rychlost provádění výpočtů matematickým koprocesorem mnohem rychlejší, než
softwarové implementace těchto výpočtů. Podívejme se na tabulku s&nbsp;časy
provádění vybraných matematických operací (v&nbsp;µs), přičemž je použita
frekvence hodin 5 MHz:</p>

<table>
<tr><th>Operace</th><th>Přesnost/rozsah</th><th>8087 (FPU)</th><th>Emulace v&nbsp;8086</th></tr>
<tr><td>Součet</td><td>single i double</td><td> 17</td><td> 1600</td></tr>
<tr><td>Porovnání</td><td>single i double</td><td>  9</td><td> 1300</td></tr>
<tr><td>Součin</td><td>single</td><td> 19</td><td> 1600</td></tr>
<tr><td>Součin</td><td>double</td><td> 27</td><td> 2100</td></tr>
<tr><td>Podíl</td><td>single</td><td> 39</td><td> 3200</td></tr>
<tr><td>Načtení hodnoty (konverze)</td><td>single</td><td>  9</td><td> 1700</td></tr>
<tr><td>Uložení hodnoty (konverze)</td><td>single</td><td> 18</td><td> 1200</td></tr>
<tr><td>Druhá odmocnina</td><td>temp</td><td> 36</td><td>19600</td></tr>
<tr><td>Tangent</td><td>temp</td><td> 90</td><td>13000</td></tr>
<tr><td>Umocnění</td><td></td><td>100</td><td>17100</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: samozřejmě bylo možné SW implementaci
výpočtů realizovat tak, že výsledky neodpovídaly normě IEEE 754 (nekonečna,
NaN, denormalizované hodnoty), ale dané aplikaci plně postačovaly. Ovšem
pokračující standardizace IT vedla k&nbsp;tomu, že se hromadně přecházelo právě
na formáty <i>single</i> a <i>double</i>.</div></p>

<p>Pro zajímavost se ještě podívejme na tabulku, která uvádí relativní rychlost
operace <strong>FMUL</strong> (součin) na čipech, které následovaly po původní
8087:</p>

<table>
<tr><th>Čip</th><th>Frekvence (MHz)</th><th>Relativní zrychlení</th></tr>
<tr><td>8087</td><td>5</td><td>1&times;</td></tr>
<tr><td>8087</td><td>10</td><td>2&times;</td></tr>
<tr><td>80287</td><td>12</td><td>2,4&times;</td></tr>
<tr><td>80387</td><td>16</td><td>10&times;</td></tr>
<tr><td>80387</td><td>32</td><td>20&times;</td></tr>
<tr><td>80486/7</td><td>16</td><td>18&times;</td></tr>
<tr><td>80486/7</td><td>50</td><td>56&times;</td></tr>
<tr><td>Cyrix 6x86</td><td>66</td><td>320&times;</td></tr>
<tr><td>Cyrix 6x86</td><td>300</td><td>1400&times;</td></tr>
<tr><td>AMD K6</td><td>166</td><td>1500&times;</td></tr>
<tr><td>AMD K6</td><td>550</td><td>5000&times;</td></tr>
<tr><td>Pentium</td><td>60</td><td>1100&times;</td></tr>
<tr><td>Pentium</td><td>300</td><td>5400&times;</td></tr>
<tr><td>Pentium Pro</td><td>150</td><td>1400&times;</td></tr>
<tr><td>Pentium Pro</td><td>200</td><td>1800&times;</td></tr>
<tr><td>Pentium II</td><td>233</td><td>2100&times;</td></tr>
<tr><td>Pentium II</td><td>1400</td><td>13000&times;</td></tr>
<tr><td>Athlon</td><td>500</td><td>9000&times;</td></tr>
<tr><td>Athlon</td><td>2300</td><td>42000&times;</td></tr>
<tr><td>Athlon 64</td><td>1000</td><td>18000&times;</td></tr>
<tr><td>Athlon 64</td><td>3200</td><td>58000&times;</td></tr>
<tr><td>Pentium 4</td><td>1300</td><td>11000&times;</td></tr>
<tr><td>Pentium 4</td><td>3800</td><td>34000&times;</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: SSE, SSE2 a AVX přidávají další
možnosti, těm se však budeme věnovat později.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Otestování, zda je matematický koprocesor nainstalován</h2>

<p>Jednou z&nbsp;prvních praktických operací je detekce, zda je matematický
koprocesor vůbec nainstalován. Tato detekce vlastně není vůbec triviální. U PC
XT se musel po instalaci koprocesoru ještě přehodit switch na základní desce,
viz například <a
href="https://www.dosdays.co.uk/topics/xt_dip_switches.php">https://www.dosdays.co.uk/topics/xt_dip_switches.php</a>.
Hodnotu tohoto přepínače bylo možné přečíst přes čip 8255 (s&nbsp;nímž jsme se
seznámili). U PX AT a obecně u počítačů vybavených minimálně mikroprocesorem
80286, již bylo možné matematický koprocesor detekovat přečtením stavového
slova <strong>MSW</strong> (<i>machine status word</i>), konkrétně třetího
nejnižšího bitu (ten byl později zkopírován do registru <strong>CR0</strong>,
kde lze ještě rozlišit mezi staršími a novějšími verzemi, později ještě přibyla
instrukce <strong>CPUID</strong>). Detekci koprocesoru z&nbsp;obsahu
<strong>MSW</strong> je možné provést následujícím způsobem:</p>

<pre>
<i>; Otestovani, jestli je nainstalovan matematicky koprocesor.</i>
<i>; Kompatibilni i s cipem Intel 80286</i>
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU  286        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; tisk retezce na obrazovku</i>
%macro <strong>print</strong> 1
        mov     dx, %1
        mov     ah, 9
        int     0x21
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100                     <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        smsw ax                    <i>; prenos MSW do registru AX</i>
        test ax, 0x4               <i>; test tretiho nejnizsiho bitu MSW (EM)</i>
&nbsp;
        jz fpu_present             <i>; nulovy bit? -&gt; 80287 je nainstalovan</i>
        print fpu_not_present_message  <i>; nenulovy bit? -&gt; koprocesor chybi</i>
        jmp end
<strong>fpu_present</strong>:
        print fpu_present_message
<strong>end</strong>:
        wait_key                   <i>; cekani na stisk klavesy</i>
        exit                       <i>; navrat do DOSu</i>
&nbsp;
<i>; datova cast</i>
<strong>fpu_present_message</strong>:
    db "FP unit is present", 0x0a, 0x0d, "$"
&nbsp;
<strong>fpu_not_present_message</strong>:
    db "FP unit is NOT present", 0x0a, 0x0d, "$"
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Základní aritmetické operace v&nbsp;praxi</h2>

<p>V&nbsp;předchozím článku jsme se taktéž seznámili s&nbsp;instrukcemi
matematického koprocesoru určenými pro provedení základních aritmetických
operací. Tyto operace jsou prováděny s&nbsp;předem zvolenou přesností a
vypočtené výsledky jsou zaokrouhleny předem zvoleným zaokrouhlovacím režimem
(k&nbsp;tomu se ještě vrátíme). Připomeňme si, že se jedná o následující
instrukce:</p>

<table>
<tr><th>#</th><th>Instrukce</th><th>Význam</th></tr>
<tr><td>1</td><td>FADD</td><td>součet</td></tr>
<tr><td>2</td><td>FSUB</td><td>rozdíl</td></tr>
<tr><td>3</td><td>FSUBR</td><td>rozdíl, ale operandy jsou prohozeny</td></tr>
<tr><td>4</td><td>FMUL</td><td>součin</td></tr>
<tr><td>5</td><td>FDIV</td><td>podíl</td></tr>
<tr><td>6</td><td>FDIVR</td><td>podíl, ale operandy jsou prohozeny</td></tr>
</table>

<p>U všech těchto instrukcí lze navíc specifikovat příponu <strong>P</strong>,
podobně jako u <strong>FST/FSTP</strong>. Pokud je tato přípona uvedena, budou
ze zásobníku tvořeném pracovními registry odstraněny oba vstupní operandy, a
teprve až poté se na zásobník uloží výsledek aritmetické operace.</p>

<p>Způsob načtení konstant do pracovních registrů (a tím pádem i do zásobníku)
matematického koprocesoru již známe, takže si nyní již můžeme ukázat, jakým
způsobem se v&nbsp;praxi provádí základní aritmetické operace. Začneme podobně
jako žáčci v&nbsp;první třídě &ndash; součtem dvou jedniček. To se
v&nbsp;assembleru provede velmi jednoduše: nejdříve se na vrchol zásobníku,
tj.&nbsp;do pracovního registru <strong>st(0)</strong>, uloží první konstanta
1.0, a ve druhém kroku se na posunutý vrchol zásobníku (tj.&nbsp;do sousedního
pracovního registru) uloží druhá konstanta 1.0. V&nbsp;kroku třetím se provede
instrukce <strong>FADDP</strong>, která nejenže obě hodnoty uložené na vrcholu
zásobníku a těsně pod ním sečte, ale navíc je ještě ze zásobníku odstraní
(odstranění druhého operandu je zajištěno použitím <strong>FADDP</strong>
namísto <strong>FADD</strong>).</p>

<p>Celý výpočet tedy může vypadat takto:</p>

<pre>
fld1                   <i>; nacteni FP konstanty 1.0</i>
fld1                   <i>; nacteni FP konstanty 1.0</i>
faddp                  <i>; soucet dvou hodnot na zasobniku</i>
fstp dword ptr number  <i>; ulozeni do pameti (4 bajty)</i>
</pre>

<p>Podívejme se nyní na součet tří hodnot, resp.&nbsp;na jednu z&nbsp;možností,
jak tento výpočet naprogramovat. Zde můžeme postupovat několika způsoby,
z&nbsp;nichž nejjednodušší způsob spočívá v&nbsp;uložení všech tří hodnot na
zásobník s&nbsp;následným použitím dvojice instrukcí <strong>FADDP</strong>.
První instrukce sečte poslední dvě hodnoty uložené na zásobníku, takže jeho
nový obsah bude [1.0, 2.0], druhá instrukce pak sečte 1.0+2.0 s&nbsp;uložením
celkového výsledku zpět:</p>

<pre>
fld1                   <i>; nacteni FP konstanty 1.0</i>
fld1                   <i>; nacteni FP konstanty 1.0</i>
fld1                   <i>; nacteni FP konstanty 1.0</i>
faddp                  <i>; soucet poslednich dvou hodnot, ulozeni vysledku zpet na zasobnik</i>
faddp                  <i>; soucet vsech tri hodnot (1.0+(1.0+1.0))</i>
&nbsp;
fstp dword ptr number  <i>; ulozeni do pameti (4 bajty)</i>
</pre>

<p>V&nbsp;případě, že budeme chtít vynásobit hodnoty 2.0 a 3.0, můžeme oba
výpočty spojit dohromady a díky tomu, že zásobník má kapacitu pro osm hodnot,
vyhneme se jakýmkoli přesunům dat mezi zásobníkem a operační pamětí (což jsou
poměrně pomalé operace, které navíc vyžadují pozastavení mikroprocesoru
8088/8086):</p>

<pre>
fld1                   <i>; nacteni FP konstanty 1.0</i>
fld1                   <i>; nacteni FP konstanty 1.0</i>
faddp                  <i>; soucet obou hodnot (1.0+1.0)</i>
                       <i>; nyni je na zasobniku ulozena hodnota 2</i>
&nbsp;
fld1                   <i>; nacteni FP konstanty 1.0</i>
fld1                   <i>; nacteni FP konstanty 1.0</i>
fld1                   <i>; nacteni FP konstanty 1.0</i>
faddp                  <i>; soucet poslednich dvou hodnot, ulozeni vysledku zpet na zasobnik</i>
faddp                  <i>; soucet vsech tri hodnot (1.0+(1.0+1.0))</i>
                       <i>; vysledek 3.0 je ulozen zpet na zasobnik</i>
&nbsp;
fmulp                  <i>; nyni jsou na zasobniku ulozeny hodnoty 2 a 3 ktere vynasobime</i>
&nbsp;
fstp dword ptr number  <i>; ulozeni do pameti (4 bajty)</i>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. První demonstrační příklad: základní aritmetické operace</h2>

<p>V&nbsp;dnešním prvním demonstračním příkladu je ukázán způsob práce se
zásobníkem tvořeným osmi pracovními registry matematického koprocesoru. Nejprve
jsou na zásobník uloženy dvě konstanty 1.0 a následně je proveden součet těchto
dvou hodnot s&nbsp;vytištěním výsledku této operace. Dále se provádí dvě po
sobě jdoucí operace součtu se třemi hodnotami uloženými na zásobníku. A konečně
se v&nbsp;poslední části připraví hodnoty 2.0 a 3.0 kombinacemi instrukcí
<strong>fld1</strong> a <strong>faddp</strong>. Tyto hodnoty se následně
vynásobí operací <strong>fmulp</strong> a výsledek se opět vytiskne na
obrazovku MS DOSu:</p>

<pre>
1.0+1.0:      Hex value: 0x40000000
1.0+1.0+1.0:  Hex value: 0x40400000
2.0*3.0:      Hex value: 0x40C00000
</pre>

<p>Zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; soucet dvou hodnot na zasobniku</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; soucet dvou hodnot na zasobniku</i>
        faddp                <i>; soucet dvou hodnot na zasobniku</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; soucet dvou hodnot na zasobniku</i>
&nbsp;
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; soucet dvou hodnot na zasobniku</i>
        faddp                <i>; soucet dvou hodnot na zasobniku</i>
&nbsp;
        fmulp                <i>; nyni jsou na zasobniku ulozeny hodnoty 2 a 3 ktere vynasobime</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Zajímavé bude zjistit, jak se jednotlivé instrukce matematického koprocesoru
přeložily do strojového kódu:</p>

<pre>
    18                  main:
    19 0000005E D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    20 00000060 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    21 00000062 DEC1            faddp                <i>; soucet dvou hodnot na zasobniku</i>
    23                  
    24 00000081 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    25 00000083 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    26 00000085 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    27 00000087 DEC1            faddp                <i>; soucet dvou hodnot na zasobniku</i>
    28 00000089 DEC1            faddp                <i>; soucet dvou hodnot na zasobniku</i>
    30                  
    31 000000A8 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    32 000000AA D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    33 000000AC DEC1            faddp                <i>; soucet dvou hodnot na zasobniku</i>
    34                  
    35 000000AE D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    36 000000B0 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    37 000000B2 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    38 000000B4 DEC1            faddp                <i>; soucet dvou hodnot na zasobniku</i>
    39 000000B6 DEC1            faddp                <i>; soucet dvou hodnot na zasobniku</i>
    40                  
    41 000000B8 DEC9            fmulp                <i>; nyni jsou na zasobniku ulozeny hodnoty 2 a 3 ktere vynasobime</i>
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že všechny vypsané
instrukce začínají nibblem s&nbsp;hodnotou 0xD. Ve skutečnosti začínají všechny
instrukce koprocesoru bajtem, jenž má hodnotu 0xD8 až 0xDF, tj.&nbsp;nejvyšších
pět bitů má fixní hodnotu a nejnižší tři bity společně s&nbsp;následujícím
bajtem (bajty) doplňuje kód instrukce a její parametry.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Operace podílu, podíl s&nbsp;prohozenými operandy</h2>

<p>V&nbsp;předchozím demonstračním příkladu jsme si mj.&nbsp;ukázali instrukci
<strong>FMUL</strong> resp.&nbsp;<strong>FMULP</strong> sloužící
k&nbsp;vynásobení obou vstupních operandů. Dá se tedy předpokládat, že bude
existovat i opačná instrukce určená pro dělení operandů. Taková instrukce
skutečně existuje a její varianty se jmenují <strong>FDIV</strong> a
<strong>FDIVP</strong>. Samotné dělení je prováděno obvyklým způsobem, jen si
musíme dát pozor na pořadí operandů na zásobníku. Nejdříve provedeme dělení ve
chvíli, kdy na vrcholu zásobníku je uložena hodnota 2.0 a pod vrcholem hodnota
1.0:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; součet, takže na zásobníku budou konstanty 1.0 a 2.0</i>
        fdivp                <i>; vypocet podilu</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Výsledkem bude hodnota 0x3f000000 odpovídající 1/2 neboli 0.5.</p>

<p>Způsob zakódování instrukcí ve strojovém kódu:</p>

<pre>
    18                  main:
    19 0000005E D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    20 00000060 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    21 00000062 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    22 00000064 DEC1            faddp                <i>; součet, takže na zásobníku budou konstanty 1.0 a 2.0</i>
    23 00000066 DEF9            fdivp                <i>; vypocet podilu</i>
</pre>

<p>Instrukce <strong>FDIVR</strong> resp.&nbsp;<strong>FDIVRP</strong> taktéž
provádí výpočet podílu, ovšem operandy jsou prohozeny. Pokusme se tedy použít
tuto instrukci v&nbsp;situaci, kdy zásobník obsahuje naprosto stejné hodnoty,
jako příklad předchozí:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; součet, takže na zásobníku budou konstanty 1.0 a 2.0</i>
        fdivrp               <i>; vypocet podilu</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Výsledkem bude hodnota 0x40000000, která skutečně odpovídá 2.0.</p>

<p>Způsob zakódování instrukcí ve strojovém kódu:</p>

<pre>
    19                  main:
    20 0000005E D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    21 00000060 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    22 00000062 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    23 00000064 DEC1            faddp                <i>; součet, takže na zásobníku budou konstanty 1.0 a 2.0</i>
    24 00000066 DEF1            fdivrp               <i>; vypocet podilu</i>
</pre>

<p><div class="rs-tip-major">Poznámka: prohození operandů lze realizovat i u
operace rozdílu. U součtu a součinu to pochopitelně nemá význam.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Dělení nulou</h2>

<p>Zaměřme se nyní na to, co se stane v&nbsp;případě, že se provádí dělení
nulou. Navíc je nutné připomenout, že ve formátech <i>single</i> i
<i>double</i> (a pochopitelně i <i>extended</i>) je znaménko reprezentováno
samostatným bitem, což mj.&nbsp;znamená, že existuje kladná a záporná nula.</p>

<p>Dělení kladnou nulou je jednoduché a lze ho realizovat například takto:</p>

<pre>
fld1                 <i>; nacteni FP konstanty 1.0</i>
fldz                 <i>; nacteni FP konstanty 0.0</i>
fdivp                <i>; vypocet podilu</i>
&nbsp;
print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
</pre>

<p>Nulou pochopitelně můžeme dělit i zápornou hodnotu, například -1.0. To lze
opět realizovat velmi snadno, bez nutnosti načítání konstant z&nbsp;operační
paměti:</p>

<pre>
fld1                 <i>; nacteni FP konstanty 1.0</i>
fchs                 <i>; zmena znamenka</i>
fldz                 <i>; nacteni FP konstanty 0.0</i>
fdivp                <i>; vypocet podilu</i>
&nbsp;
print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
</pre>

<p>Dělení zápornou nulou (tedy skutečně hodnotou -0.0) vyžaduje taktéž použití
instrukce <strong>FCHS</strong>, která otočí znaménko svého operandu (zde
konkrétně oné nuly):</p>

<pre>
fld1                 <i>; nacteni FP konstanty 1.0</i>
fldz                 <i>; nacteni FP konstanty 0.0</i>
fchs                 <i>; zmena znamenka</i>
fdivp                <i>; vypocet podilu</i>
&nbsp;
print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Demonstrační příklady: dělení kladnou a zápornou nulou</h2>

<p>Různé varianty dělení nulou si nyní otestujeme prakticky. Nejdříve je ukázán
demonstrační příklad, který provede výpočet 1.0/0.0:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fldz                 <i>; nacteni FP konstanty 0.0</i>
        fdivp                <i>; vypocet podilu</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Výsledkem je hodnota 0x7f800000, což odpovídá kladnému nekonečnu.</p>

<table>
<tr><th>Hexa</th><th>Binárně</th><th>s</th><th>Exponent</th><th>Mantisa</th></tr>
<tr><td>0x7F800000</td><td>01111111100000000000000000000000</td><td>+</td><td>255 (spec)</td><td>0</td></tr>
<tr><td>0xFF800000</td><td>11111111100000000000000000000000</td><td>-</td><td>255 (spec)</td><td>0</td></tr>
</table>

<p>Ve druhém příkladu je proveden výpočet -1.0/0.0, tj.&nbsp;dělíme zápornou
hodnotu kladnou nulou:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fchs                 <i>; zmena znamenka</i>
        fldz                 <i>; nacteni FP konstanty 0.0</i>
        fdivp                <i>; vypocet podilu</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Výsledkem je v&nbsp;tomto případě hodnota 0xff800000, což odpovídá zápornému
nekonečnu (znaménko je uloženo v&nbsp;nejvyšším bitu).</p>

<p>Oba výsledky se tedy od sebe liší jen nejvyšším bitem, což je znaménko. Dále
následuje osm bitů exponentu. Tyto bity jsou v&nbsp;obou případech nastaveny na
samé jedničky, samotný exponent je pak nulový. To odpovídá tabulce speciálních
hodnot, s&nbsp;níž jsme se seznámili minule:</p>

<table>
<tr><th>s-bit</th><th>exponent</th><th>mantisa</th><th>význam</th><th>šestnáctkově</th></tr>
<tr><td>0</td><td>255</td><td>0</td><td>kladné nekonečno</td><td>0x7F800000</td></tr>
<tr><td>1</td><td>255</td><td>0</td><td>záporné nekonečno</td><td>0xFF800000</td></tr>
</table>

<p>A konečně provedeme výpočet 1.0/-0.0, tj.&nbsp;podíl kladné hodnoty a
záporné nuly:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fldz                 <i>; nacteni FP konstanty 0.0</i>
        fchs                 <i>; zmena znamenka</i>
        fdivp                <i>; vypocet podilu</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Výsledek je totožný s&nbsp;předchozím příkladem.</p>

<p>Pro úplnost si ještě ukážeme překlad instrukcí matematického koprocesoru
z&nbsp;prvního příkladu do strojového kódu:</p>

<pre>
    18                  main:
    19 0000005E D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    20 00000060 D9EE            fldz                 <i>; nacteni FP konstanty 0.0</i>
    21 00000062 DEF9            fdivp                <i>; vypocet podilu</i>
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Speciální případ: výpočet 0/0</h2>

<p>Ještě jsme si však nevyzkoušeli další speciální případ &ndash; dělení 0/0. I
to lze realizovat velmi snadno následujícími třemi instrukcemi:</p>

<pre>
fldz             <i>; nacteni FP konstanty 0.0</i>
fldz             <i>; nacteni FP konstanty 0.0</i>
fdivp            <i>; vypocet 0.0/0.0</i>
</pre>

<p>Výsledkem bude hodnota:</p>

<pre>
0/0:   Hex value: 0xFFC00000
</pre>

<p>Po převodu na binární tvar a rozdělení bitových polí:</p>

<table>
<tr><th>Hexa</th><th>Binárně</th><th>s</th><th>Exponent</th><th>Mantisa</th></tr>
<tr><td>0xFFC00000</td><td>11111111110000000000000000000000</td><td>+</td><td>255 (spec)</td><td>dva nejvyšší bity jednička</td></tr>
</table>

<p>Opět nahlédněme do tabulky zveřejněné minule, abychom zjistili, co tato
hodnota znamená:</p>

<table>
<tr><th>s-bit</th><th>exponent</th><th>mantisa</th><th>význam</th></tr>
<tr><td>0</td><td>255</td><td>&gt;0</td><td>NaN &ndash; not a number</td></tr>
<tr><td>1</td><td>255</td><td>&gt;0</td><td>NaN &ndash; not a number</td></tr>
</table>

<p>Vidíme, že vydělením nuly nulou (ať již kladnou či zápornou) získáme
speciální hodnotu <strong>NaN</strong>. Většina dalších instrukcí sice
<strong>NaN</strong> může akceptovat, ale výsledkem operace bude opět
<strong>NaN</strong>, na což je zapotřebí dávat při programování (nejenom
v&nbsp;assembleru) pozor.</p>

<p>Úplný zdrojový kód příkladu, který toto dělení provede, vypadá
následovně:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fldz                 <i>; nacteni FP konstanty 0.0</i>
        fldz                 <i>; nacteni FP konstanty 0.0</i>
        fdivp                <i>; vypocet podilu</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Další výpočty, které dokáže matematický koprocesor provádět</h2>

<p>Matematický koprocesor 8087 dokáže kromě aritmetických operací provádět i
některé další výpočty. Pokud se zaměříme na výpočty prováděné s&nbsp;hodnotami
s&nbsp;plovoucí řádovou čárkou, bude se jednat o následující instrukce:</p>

<table>
<tr><th>#</th><th>Instrukce</th><th>Význam</th></tr>
<tr><td>1</td><td>FABS</td><td>výpočet absolutní hodnoty</td></tr>
<tr><td>2</td><td>FSQRT</td><td>výpočet druhé odmocniny</td></tr>
<tr><td>3</td><td>FPREM</td><td>výpočet modulo</td></tr>
<tr><td>4</td><td>FPTAN</td><td>tangens pro úhel v&nbsp;rozmezí &pm; &pi;/4</td></tr>
<tr><td>5</td><td>FPATAN</td><td>arkus tangens</td></tr>
<tr><td>6</td><td>FSCALE</td><td>násobení či dělení mocninou 2</td></tr>
<tr><td>7</td><td>F2XM1</td><td>2<sup>x</sup>-1</td></tr>
<tr><td>8</td><td>FYL2X</td><td>y log<sub>2</sub>x</td></tr>
<tr><td>9</td><td>FYL2XP1</td><td>y log<sub>2</sub>(x+1)</td></tr>
</table>

<p>Navíc jsou k&nbsp;dispozici i celočíselné operace, které lze poznat podle
toho, že začínají prefixem <strong>FI</strong>. Jejich praktické použití bude
ukázáno příště:</p>

<table>
<tr><th>#</th><th>Instrukce</th><th>Význam</th></tr>
<tr><td>1</td><td>FIADD</td><td>součet</td></tr>
<tr><td>2</td><td>FISUB</td><td>rozdíl</td></tr>
<tr><td>3</td><td>FISUBR</td><td>rozdíl s&nbsp;prohozenými operandy</td></tr>
<tr><td>4</td><td>FIMUL</td><td>součin</td></tr>
<tr><td>5</td><td>FIDIV</td><td>podíl</td></tr>
<tr><td>6</td><td>FIDIVR</td><td>podíl s&nbsp;prohozenými operandy</td></tr>
<tr><td>7</td><td>FRNDINT</td><td>převod FP hodnoty na celé číslo</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: z&nbsp;trigonometrických funkcí je
k&nbsp;dispozici jen výpočet tangens úhlu zadaného v&nbsp;radiánech (a to ještě
v&nbsp;omezeném rozsahu vstupu!). To znamenalo, že na koprocesorech 8087
(později tomu bylo jinak) se musely další goniometrické funkce dopočítat právě
z&nbsp;tangens. Příkladem může být výpočet kosinu realizovaného například
takto:</div></p>

<pre>
FPTAN
FMUL ST(0)  <i>; druhá mocnina</i>
FLD1
FADDP       <i>; přičíst jedničku</i>
FSQRT       <i>; výsledek odmocnit</i>
FLD1
FDIVP       <i>; převrácená hodnota mezivýsledku</i>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Demonstrační příklad: výpočet druhé odmocniny</h2>

<p>Pro mnoho praktických algoritmů je důležité umět vypočítat druhou odmocninu
nějaké hodnoty. Pro tento účel slouží instrukce nazvaná <strong>FSQRT</strong>,
kterou si nyní otestujeme. V&nbsp;dalším demonstračním příkladu se pokusíme o
výpočet druhé odmocniny (kladné) nuly, jedničky a taktéž dvojky:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fldz                 <i>; nacteni FP konstanty 0.0</i>
        fsqrt                <i>; vypocet druhe odmocniny</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fsqrt                <i>; vypocet druhe odmocniny</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        faddp                <i>; soucet -&gt; na zasobnik se ulozi hodnota 2.0</i>
        fsqrt                <i>; vypocet druhe odmocniny</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Po překladu a spuštění tohoto příkladu se zobrazí trojice hexadecimálních
hodnot, které si převedeme na desítkové hodnoty s&nbsp;desetinnou čárkou:</p>

<pre>
00000000 = 0,0
3fb00000 = 1,0
3fb504f3 = 1,4142135
</pre>

<p>A pro úplnost si ukažme, jak se instrukce <strong>FSQRT</strong> přeložila
do strojového kódu společně s&nbsp;dalšími instrukcemi matematického
koprocesoru:</p>

<pre>
    13                  main:
    14 0000005E D9EE            fldz                 <i>; nacteni FP konstanty 0.0</i>
    15 00000060 D9FA            fsqrt                <i>; vypocet druhe odmocniny</i>
    16                          print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
    17                  
    18 0000007F D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    19 00000081 D9FA            fsqrt                <i>; vypocet druhe odmocniny</i>
    20                          print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
    21                  
    22 000000A0 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    23 000000A2 D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    24 000000A4 DEC1            faddp                <i>; soucet -&gt; na zasobnik se ulozi hodnota 2.0</i>
    25 000000A6 D9FA            fsqrt                <i>; vypocet druhe odmocniny</i>
    26                          print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
    27                  
    28                          wait_key             <i>; cekani na klavesu</i>
    29                          exit                 <i>; navrat do DOSu</i>
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Demonstrační příklad: výpočet druhé odmocniny ze záporné hodnoty</h2>

<p>V&nbsp;oboru reálných hodnot není možné vypočítat druhou odmocninu ze
záporné hodnoty. Jak se tedy zachová matematický koprocesor v&nbsp;případě, že
se o takový výpočet pokusíme? Můžeme si to velmi snadno otestovat, a to pokusem
a výpočet druhé odmocniny z&nbsp;hodnoty -1 (kterou snadno získáme kombinací
instrukcí <strong>FLD1</strong> a <strong>FCHS</strong>:</p>

<pre>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main             <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"            <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"         <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fld1                 <i>; nacteni FP konstanty 1.0</i>
        fchs                 <i>; zmena znamenka</i>
        fsqrt                <i>; vypocet druhe odmocniny</i>
        print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
&nbsp;
        wait_key             <i>; cekani na klavesu</i>
        exit                 <i>; navrat do DOSu</i>
</pre>

<p>Výsledkem je hexadecimální 32bitová hodnota <strong>ffc00000</strong>, což
odpovídá speciální hodnotě <i>Not A Number</i>. Jedná se v&nbsp;tomto případě o
očekávaný výsledek.</p>

<p>Opět se pro úplnost podívejme na způsob překladu tohoto demonstračního
příkladu (resp.&nbsp;jeho FPU instrukcí) do strojového kódu:</p>

<pre>
    13                  main:
    14 0000005E D9E8            fld1                 <i>; nacteni FP konstanty 1.0</i>
    15 00000060 D9E0            fchs                 <i>; zmena znamenka</i>
    16 00000062 D9FA            fsqrt                <i>; vypocet druhe odmocniny</i>
    17                          print_float32_as_hex <i>; zobrazeni FP hodnoty v hexadecimalnim tvaru</i>
    18                  
    19                          wait_key             <i>; cekani na klavesu</i>
    20                          exit                 <i>; navrat do DOSu</i>
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Řídicí registr matematického koprocesoru</h2>

<table>
<tr><th> #</th><th>Označení</th><th>Význam</th></tr>
<tr><td> 0</td><td>IM</td><td>maska výjimky Invalid Operation</td></tr>
<tr><td> 1</td><td>DM</td><td>maska výjimky Denormalized Operand</td></tr>
<tr><td> 2</td><td>ZM</td><td>maska výjimky Zero Divide</td></tr>
<tr><td> 3</td><td>OM</td><td>maska výjimky Overflow</td></tr>
<tr><td> 4</td><td>UM</td><td>maska výjimky Underflow</td></tr>
<tr><td> 5</td><td>PM</td><td>maska výjimky Precision</td></tr>
<tr><td> 6</td><td>&times;</td><td></td></tr>
<tr><td> 7</td><td>IE</td><td>povolení přerušení (dnes nevyužito)</td></tr>
<tr><td> 8</td><td>PC1</td><td>volba přesnosti výpočtů (viz tabulku níže)</td></tr>
<tr><td> 9</td><td>PC2</td><td>-//-</td></tr>
<tr><td>10</td><td>RC1</td><td>volba zaokrouhlovacího režimu (viz tabulku níže)</td></tr>
<tr><td>11</td><td>RC2</td><td>-//-</td></tr>
<tr><td>12</td><td>IC</td><td>dnes nepoužito, pro kompatibilitu s&nbsp;80287</td></tr>
<tr><td>13</td><td>&times;</td><td></td></tr>
<tr><td>14</td><td>&times;</td><td></td></tr>
<tr><td>15</td><td>&times;</td><td></td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Demonstrační příklad: detekce typu matematického koprocesoru</h2>

<p>Řídicí registr matematického koprocesoru lze využít v&nbsp;těch případech,
kdy potřebujeme detekovat jeho konkrétní typ. Takový test je většinou nutné
provést ještě předtím, než lze zavolat ty instrukce, které byly přidány až do
čipu 80387 (SINCOS apod.). K&nbsp;rozlišení typů koprocesorů se využívá faktu,
že novější čipy nenastavují ve výchozím stavu bit <strong>IE</strong>, takže
ihned po inicializaci koprocesoru instrukcí <strong>FNINIT</strong> a po
přečtení stavového registru je možné rozlišit hodnoty 0x03ff (původní čipy
Intel 8087) od 0x037f (novější čipy). Nejedná se sice o ideální řešení, ale
taková je prostě platforma IBM PC bez ústředních &bdquo;registrů&ldquo;
s&nbsp;konkrétní konfigurací počítače:</p>

<pre>
<i>; Otestovani, jestli je k dispozici matematický koprocesor a jakeho je typu.</i>
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; tisk retezce na obrazovku</i>
%macro <strong>print</strong> 1
        mov     dx, %1
        mov     ah, 9
        int     0x21
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100                         <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
<strong>main</strong>:
        fninit
        mov cx, 100                <i>; nechame koprocesor "vydechnout"</i>
&nbsp;
 .wait:
        loop .wait
&nbsp;
        fnstcw word [test_word]    <i>; ulozeni ridiciho slova</i>
        cmp word [test_word], 0x03FF  <i>; vychozi bitova pole ukladana cipem 8087</i>
        je  fpu_8087_present
&nbsp;
        cmp word [test_word], 0x037F  <i>; vychozi bitova pole ukladana cipem 80287 a vyssim</i>
        je  fpu_present
&nbsp;
        print fpu_not_present_message
        jmp end
<strong>fpu_8087_present</strong>:
        print fpu_8087_present_message
        jmp end
<strong>fpu_present</strong>:
        print fpu_present_message
<strong>end</strong>:
        wait_key                   <i>; cekani na stisk klavesy</i>
        exit                       <i>; navrat do DOSu</i>
&nbsp;
<i>; datova cast</i>
<strong>test_word</strong>: dw 0
&nbsp;
<strong>fpu_8087_present_message</strong>:
    db "Math coprocessor 8087 is present", 0x0a, 0x0d, "$"
&nbsp;
<strong>fpu_present_message</strong>:
    db "Math coprocessor &gt;8087 is present", 0x0a, 0x0d, "$"
&nbsp;
<strong>fpu_not_present_message</strong>:
    db "Math coprocessor is NOT present", 0x0a, 0x0d, "$"
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Stavový registr matematického koprocesoru</h2>

<p>Jednotlivé matematické operace prováděné matematickým koprocesorem nastavují
bity v&nbsp;takzvaném stavovém registru (<i>status register</i>), o němž jsme
se již zmínili minule. Tento registr má šířku šestnácti bitů a jeho struktura
vypadá následovně:</p>

<table>
<tr><th> #</th><th>Označení</th><th>Význam</th></tr>
<tr><td> 0</td><td>IE</td><td>výjimka Invalid Operation</td></tr>
<tr><td> 1</td><td>DE</td><td>výjimka Denormalized Operand</td></tr>
<tr><td> 2</td><td>ZO</td><td>výjimka Zero Divide</td></tr>
<tr><td> 3</td><td>OE</td><td>výjimka Overflow</td></tr>
<tr><td> 4</td><td>UE</td><td>výjimka Underflow</td></tr>
<tr><td> 5</td><td>PE</td><td>výjimka Precision</td></tr>
<tr><td> 6</td><td>SF</td><td>špatná manipulace se zásobníkem operandů</td></tr>
<tr><td> 7</td><td>ES</td><td>Error summary</td></tr>
<tr><td> 8</td><td>C0</td><td>výsledek porovnání (příznakový bit)</td></tr>
<tr><td> 9</td><td>C1</td><td>výsledek porovnání (příznakový bit)</td></tr>
<tr><td>10</td><td>C2</td><td>výsledek porovnání (příznakový bit)</td></tr>
<tr><td>11</td><td>ST0</td><td>ukazatel vrcholu zásobníku</td></tr>
<tr><td>12</td><td>ST1</td><td>ukazatel vrcholu zásobníku</td></tr>
<tr><td>13</td><td>ST2</td><td>ukazatel vrcholu zásobníku</td></tr>
<tr><td>14</td><td>C3</td><td>výsledek porovnání (příznakový bit)</td></tr>
<tr><td>15</td><td>B</td><td>busy bit (provádí se operace)</td></tr>
</table>

<p>Samotné přečtení a zobrazení stavového slova (registru) matematického
koprocesoru je snadné. Opět zde ovšem musíme data mezi koprocesorem a hlavním
procesorem přenášet přes operační paměť; v&nbsp;našem ukázkovém příkladu
konkrétně přes dvojici bajtů umístěných na adrese
<strong>test_word</strong>:</p>

<pre>
<i>; Precteni stavoveho slova matematickeho koprocesoru</i>
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16           <i>; 16bitovy vystup pro DOS</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        fninit                     <i>; inicializace koprocesoru</i>
        fnstsw word [test_word]    <i>; ulozeni stavoveho slova</i>
        mov ax, word [test_word]
        print_hex_16 ax            <i>; tisk stavoveho slova v hexadecimalnim formatu</i>
&nbsp;
        wait_key                   <i>; cekani na klavesu</i>
        exit                       <i>; navrat do DOSu</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; datova cast</i>
<strong>test_word</strong>: dw 0
</pre>

<p>Ihned po inicializaci matematického koprocesoru by se měla vypsat tato
hodnota:</p>

<pre>
0000
</pre>

<p>To znamená, že prozatím nedošlo k&nbsp;žádné výjimce, nedošlo
k&nbsp;porovnání operandů, zásobník je prázdný a neprovádí se žádná
operace.</p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Změna ukazatele na vrchol zásobníku při manipulaci s&nbsp;operandy</h2>

<p></p>

<pre>
<i>; Precteni stavoveho slova matematickeho koprocesoru</i>
<i>; Změna obsazení zásobníku: vliv na obsah stavového slova</i>
<i>;-----------------------------------------------------------------------------</i>

BITS 16         <i>; 16bitovy vystup pro DOS</i>

<i>;-----------------------------------------------------------------------------</i>

org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>

<strong>start</strong>:
        jmp main                   ; skok na zacatek kodu

%include "io.asm"                  ; nacist symboly, makra a podprogramy
%include "print.asm"               ; nacist symboly, makra a podprogramy

main:
        fninit                     ; inicializace koprocesoru
        call print_status_word     ; tisk stavového slova

        fldz                       ; uložení hodnoty na zásobník
        call print_status_word     ; tisk stavového slova

        fldz                       ; uložení druhé hodnoty na zásobník
        call print_status_word     ; tisk stavového slova

        fldz                       ; uložení třetí hodnoty na zásobník
        call print_status_word     ; tisk stavového slova

        faddp                      ; výpočet s odstraněním původní hodnoty
        call print_status_word     ; tisk stavového slova

        faddp                      ; výpočet s odstraněním původní hodnoty
        call print_status_word     ; tisk stavového slova

        faddp                      ; výpočet s odstraněním původní hodnoty
        call print_status_word     ; tisk stavového slova

        faddp                      ; nyní by měl zásobník "podtéct"
        call print_status_word     ; tisk stavového slova

        wait_key                   ; cekani na klavesu
        exit                       ; navrat do DOSu

;-----------------------------------------------------------------------------

print_status_word:
        fnstsw word [test_word]    ; ulozeni stavoveho slova
        mov ax, word [test_word]
        print_hex_16 ax            ; tisk stavoveho slova v hexadecimalnim formatu
        ret

; datova cast
test_word: dw 0
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Porovnání dvou operandů s&nbsp;nastavením bitů <strong>C2</strong>, <strong>C1</strong> a <strong>C0</strong></h2>

<p></p>

<pre>
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Pomocný program pro převod FPU hodnot do jejich hexadecimální podoby</h2>

<p>Hodnoty s&nbsp;plovoucí řádovou čárkou samozřejmě není nutné převádět do
jejich bitové či hexadecimální podoby ručně. Pro zpětný převod FP hodnot, tedy
hodnot reprezentovaných v&nbsp;systému plovoucí řádové čárky do hexadecimální
32bitové reprezentace je možné použít i následující jednoduchý program napsaný
v&nbsp;céčku. Pokud při spuštění programu specifikujete na příkazové řádce FP
hodnotu, například 0.5, vypíše se ihned její obraz v&nbsp;paměti, tj.&nbsp;to,
jak je číslo interně reprezentováno (logiku programu lze v&nbsp;případě potřeby
jednoduše i obrátit tak, aby převádět hexadecimální reprezentaci na FP
hodnotu):</p>

<pre>
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
&nbsp;
union {
    float flt;
    int   hex;
} float_hex;
&nbsp;
int main(int argc, char **argv)
{
    if (argc == 2) {
        float_hex.flt = atof(argv[1]);
        printf("%08x\n", float_hex.hex);
    }
    return 0;
}
</pre>

<p>Funkci tohoto prográmku si můžeme jednoduše odzkoušet:</p>

<pre>
<strong>gcc -o fp2hex fp2hex.c </strong>
&nbsp;
<strong>./fp2hex 0</strong>
00000000
&nbsp;
<strong>./fp2hex 1</strong>
3f800000
&nbsp;
<strong>./fp2hex -1</strong>
bf800000
&nbsp;
<strong>./fp2hex 3.14</strong>
40490fdb
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů s&nbsp;256 barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm</a></td></tr>
<tr><td>63</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>64</td><td>vga_gfx_mode_dac_1.asm</td><td>využití DAC (neočekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm</a></td></tr>
<tr><td>65</td><td>vga_gfx_mode_dac_2.asm</td><td>využití DAC (očekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>vga_640x480_putpixel.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
<tr><td>67</td><td>vga_320x200_putpixel_1.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm</a></td></tr>
<tr><td>68</td><td>vga_320x200_putpixel_2.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (rychlejší varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>69</td><td>vga_gfx_mode_dac_3.asm</td><td>přímé využití DAC v&nbsp;grafickém režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>vga_gfx_mode_unchained_step_1.asm</td><td>zobrazení barevných pruhů v&nbsp;režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm</a></td></tr>
<tr><td>71</td><td>vga_gfx_mode_unchained_step_2.asm</td><td>vypnutí zřetězení bitových rovin a změna způsobu adresování pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm</a></td></tr>
<tr><td>72</td><td>vga_gfx_mode_unchained_step_3.asm</td><td>vykreslení barevných pruhů do vybraných bitových rovin</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>73</td><td>vga_gfx_mode_320x400.asm</td><td>nestandardní grafický režim s&nbsp;rozlišením 320&times;400 pixelů a 256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm</a></td></tr>
<tr><td>74</td><td>vga_320x200_image.asm</td><td>zobrazení rastrového obrázku ve standardním grafickém režimu 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm</a></td></tr>
<tr><td>75</td><td>vga_320x200_unchained_image_1.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm</a></td></tr>
<tr><td>76</td><td>vga_320x200_unchained_image_2.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm</a></td></tr>
<tr><td>77</td><td>vga_320x400_unchained_image.asm</td><td>zobrazení rastrového obrázku v&nbsp;nestandardním režimu 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>78</td><td>vga_vertical_scroll_1.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm</a></td></tr>
<tr><td>79</td><td>vga_vertical_scroll_2.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm</a></td></tr>
<tr><td>80</td><td>vga_split_screen_1.asm</td><td>režim split-screen a scrolling, nefunční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm</a></td></tr>
<tr><td>81</td><td>vga_split_screen_2.asm</td><td>režim split-screen a scrolling, plně funkční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm</a></td></tr>
<tr><td>82</td><td>vga_horizontal_scroll_1.asm</td><td>horizontální scrolling bez rozšíření počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm</a></td></tr>
<tr><td>83</td><td>vga_horizontal_scroll_2.asm</td><td>horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm</a></td></tr>
<tr><td>84</td><td>vga_horizontal_scroll_3.asm</td><td>jemný horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>85</td><td>vga_320x240_image.asm</td><td>nastavení grafického režimu Mode-X, načtení a vykreslení obrázku, scrolling</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>io.asm</td><td>knihovna maker pro I/O operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>87</td><td>vga_lib.asm</td><td>knihovna maker a podprogramů pro programování karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm</a></td></tr>
<tr><td>88</td><td>vga_320x240_lib.asm</td><td>nastavení grafického režimu Mode-X, tentokrát knihovními funkcemi</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>89</td><td>vga_bitblt_1.asm</td><td>první (naivní) implementace operace <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm</a></td></tr>
<tr><td>90</td><td>vga_bitblt_2.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm</a></td></tr>
<tr><td>91</td><td>vga_bitblt_3.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro čtení i zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm</a></td></tr>
<tr><td>92</td><td>vga_bitblt_4.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace makry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm</a></td></tr>
<tr><td>93</td><td>vga_bitblt_5.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace podprogramem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>94</td><td>vga_bitblt_rotate.asm</td><td>zápisový režim s&nbsp;rotací bajtu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm</a></td></tr>
<tr><td>95</td><td>vga_bitblt_fast.asm</td><td>rychlá korektní 32bitová operace typu <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm</a></td></tr>
<tr><td>96</td><td>vga_320x400_bitblt_1.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (neúplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm</a></td></tr>
<tr><td>97</td><td>vga_320x400_bitblt_2.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (úplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm</a></td></tr>
<tr><td>98</td><td>vga_write_modes_1.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis bez úpravy latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm</a></td></tr>
<tr><td>99</td><td>vga_write_modes_2.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis s&nbsp;modifikací latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm</a></td></tr>
<tr><td>100</td><td>vga_write_modes_3.asm</td><td>volitelné zápisové režimy grafické karty VGA, cílená modifikace latche vzorkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>101</td><td>instruction_jump.asm</td><td>použití instrukce <strong>JMP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm</a></td></tr>
<tr><td>102</td><td>instruction_jnz.asm</td><td>použití instrukce <strong>JNZ</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm</a></td></tr>
<tr><td>103</td><td>instruction_jz_jmp.asm</td><td>použití instrukcí <strong>JZ</strong> a <strong>JMP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm</a></td></tr>
<tr><td>104</td><td>instruction_loop.asm</td><td>použití instrukce <strong>LOOP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>105</td><td>instruction_template.asm</td><td>šablona všech následujících demonstračních příkladů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm</a></td></tr>
<tr><td>106</td><td>instruction_print_hex.asm</td><td>tisk osmibitové hexadecimální hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm</a></td></tr>
<tr><td>107</td><td>instruction_xlat.asm</td><td>využití instrukce <strong>XLAT</strong> pro získání tisknutelné hexadecimální cifry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td>instruction_daa.asm</td><td>operace součtu s&nbsp;využitím binární i BCD aritmetiky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm</a></td></tr>
<tr><td>109</td><td>instruction_daa_sub.asm</td><td>instrukce <strong>DAA</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm</a></td></tr>
<tr><td>110</td><td>instruction_das.asm</td><td>instrukce <strong>DAS</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm</a></td></tr>
<tr><td>111</td><td>instruction_aaa.asm</td><td>korekce výsledku na jedinou BCD cifru operací <strong>AAA</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm</a></td></tr>
<tr><td>112</td><td>instruction_mul.asm</td><td>ukázka výpočtu součinu dvou osmibitových hodnot</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm</a></td></tr>
<tr><td>113</td><td>instruction_aam.asm</td><td>BCD korekce po výpočtu součinu instrukcí <strong>AAM</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>114</td><td>instruction_stosb.asm</td><td>blokový zápis dat instrukcí <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm</a></td></tr>
<tr><td>115</td><td>instruction_rep_stosb.asm</td><td>opakované provádění instrukce <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm</a></td></tr>
<tr><td>116</td><td>instruction_lodsb.asm</td><td>čtení dat instrukcí <strong>LODSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm</a></td></tr>
<tr><td>117</td><td>instruction_movsb.asm</td><td>přenos jednoho bajtu instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm</a></td></tr>
<tr><td>118</td><td>instruction_rep_movsb.asm</td><td>blokový přenos po bajtech instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm</a></td></tr>
<tr><td>119</td><td>instruction_rep_scas.asm</td><td>vyhledávání v&nbsp;řetězci instrukcí <strong>SCAS</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>120</td><td>vga_320x200_image_0B.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm</a></td></tr>
<tr><td>121</td><td>vga_320x200_image_64kB.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0xffff</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm</a></td></tr>
<tr><td>122</td><td>vga_320x200_image_movsb.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm</a></td></tr>
<tr><td>123</td><td>vga_320x200_image_movsw.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm</a></td></tr>
<tr><td>124</td><td>vga_320x200_image_movsd.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSD</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm</a></td></tr>
<tr><td>125</td><td>vga_320x200_image_movsb_forward.asm</td><td>blokový přenos překrývajících se bloků paměti (zvyšující se adresy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm</a></td></tr>
<tr><td>126</td><td>vga_320x200_image_movsb_backward_1.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, nekorektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm</a></td></tr>
<tr><td>127</td><td>vga_320x200_image_movsb_backward_2.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, korektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>128</td><td>sound_bell.asm</td><td>přehrání zvuku pomocí tisku ASCII znaku BELL</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm</a></td></tr>
<tr><td>129</td><td>sound_beep.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm</a></td></tr>
<tr><td>130</td><td>sound_play_pitch.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru, použití maker</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>131</td><td>sound_opl2_basic.asm</td><td>přehrání komorního A na OPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm</a></td></tr>
<tr><td>132</td><td>sound_opl2_table.asm</td><td>přehrání komorního A na OPL2, použití tabulky s&nbsp;hodnotami registrů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>133</td><td>sound_opl2_table_2.asm</td><td>přepis tabulky s&nbsp;obsahy registrů pro přehrání komorního A</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm</a></td></tr>
<tr><td>134</td><td>sound_key_on.asm</td><td>přímé ovládání bitu KEY ON mezerníkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm</a></td></tr>
<tr><td>135</td><td>sound_adsr.asm</td><td>nastavení obálky pro tón přehrávaný prvním kanálem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm</a></td></tr>
<tr><td>136</td><td>sound_modulation.asm</td><td>řízení frekvence modulátoru klávesami 1 a 0</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>137</td><td>keyboard_basic.asm</td><td>přímá práce s&nbsp;klávesnicí IBM PC</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>138</td><td>sound_stereo_opl2.asm</td><td>stereo zvuk v&nbsp;konfiguraci DualOPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm</a></td></tr>
<tr><td>139</td><td>sound_opl2_multichannel.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), delší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm</a></td></tr>
<tr><td>140</td><td>sound_opl2_multichannel_2.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), kratší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm</a></td></tr>
<tr><td>141</td><td>sound_opl3_stereo_1.asm</td><td>stereo výstup na OPL3 (v&nbsp;kompatibilním režimu)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm</a></td></tr>
<tr><td>142</td><td>sound_opl3_stereo_2.asm</td><td>stereo výstup na OPL3 (v&nbsp;režimu OPL3)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm</a></td></tr>
<tr><td>143</td><td>sound_opl3_multichannel.asm</td><td>vícekanálový zvuk na OPL3 (klávesy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>144</td><td>sound_opl3_waveform_1.asm</td><td>interaktivní modifikace tvaru vlny u prvního operátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm</a></td></tr>
<tr><td>145</td><td>sound_opl3_waveform_2.asm</td><td>oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm</a></td></tr>
<tr><td>146</td><td>sound_opl3_waveform_3.asm</td><td>vliv tvaru vln na zvukový kanál s&nbsp;FM syntézou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm</a></td></tr>
<tr><td>147</td><td>sound_opl3_waveform_4.asm</td><td>modifikace tvaru vlny nosné vlny i modulátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm</a></td></tr>
<tr><td>148</td><td>sound_opl3_4operators_1.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm</a></td></tr>
<tr><td>149</td><td>sound_opl3_4operators_2.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>150</td><td>timer_basic.asm</td><td>základní obsluha přerušení od časovače/čítače</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm</a></td></tr>
<tr><td>151</td><td>timer_restore.asm</td><td>obnovení původní obsluhy přerušení při ukončování aplikace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm</a></td></tr>
<tr><td>152</td><td>timer_restore_better_structure.asm</td><td>refaktoring předchozího demonstračního příkladu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm</a></td></tr>
<tr><td>153</td><td>timer_faster_clock.asm</td><td>zrychlení čítače na 100 přerušení za sekundu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>154</td><td>instruction_push_imm.asm</td><td>instrukce <strong>PUSH</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm</a></td></tr>
<tr><td>155</td><td>instruction_imul_imm.asm</td><td>instrukce <strong>IMUL</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm</a></td></tr>
<tr><td>156</td><td>instruction_into_1.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm</a></td></tr>
<tr><td>157</td><td>instruction_into_2.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm</a></td></tr>
<tr><td>158</td><td>instruction_bound_1.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm</a></td></tr>
<tr><td>159</td><td>instruction_bound_2.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm</a></td></tr>
<tr><td>160</td><td>vga_320x200_putpixel_286.asm</td><td>instrukce bitového posunu s&nbsp;konstantou větší než 1</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm</a></td></tr>
<tr><td>161</td><td>instruction_push_pop.asm</td><td>instrukce <strong>PUSH</strong> a <strong>POP</strong> se všemi pracovními registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>162</td><td>instruction_push_pop_B.asm</td><td>instrukce s&nbsp;novými segmentovými registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm</a></td></tr>
<tr><td>163</td><td>instruction_near_jz_jmp.asm</td><td>blízké skoky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm</a></td></tr>
<tr><td>164</td><td>instruction_bsf.asm</td><td>nová instrukce <strong>BSF</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm</a></td></tr>
<tr><td>165</td><td>instruction_bsr.asm</td><td>nová instrukce <strong>BSR</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm</a></td></tr>
<tr><td>166</td><td>instruction_add_32bit.asm</td><td>32bitový součet</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm</a></td></tr>
<tr><td>167</td><td>instruction_inc_32bit.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;šestnáctibitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm</a></td></tr>
<tr><td>168</td><td>instruction_inc_32bit_B.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;32bitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>169</td><td>ems_status.asm</td><td>zjištění stavu (emulace) paměti EMS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm</a></td></tr>
<tr><td>170</td><td>ems_total_mem.asm</td><td>získání celkové kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm</a></td></tr>
<tr><td>171</td><td>ems_free_mem.asm </td><td>získání volné kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm</a></td></tr>
<tr><td>172</td><td>xms_free_mem.asm </td><td>získání volné kapacity paměti XMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>173</td><td>vga_320x200_short_address_1.asm</td><td>blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm</a></td></tr>
<tr><td>174</td><td>vga_320x200_short_address_2.asm</td><td>rozepsaný blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm</a></td></tr>
<tr><td>175</td><td>vga_320x200_short_address_3.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm</a></td></tr>
<tr><td>176</td><td>vga_320x200_short_address_4.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm</a></td></tr>
<tr><td>177</td><td>vga_320x200_long_address_1.asm</td><td>32bitový blokový přenos</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm</a></td></tr>
<tr><td>178</td><td>vga_320x200_long_address_2.asm</td><td>rozepsaný 32bitový blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm</a></td></tr>
<tr><td>179</td><td>vga_320x200_long_address_3.asm</td><td>přístup do obrazové paměti přes segment 0x0000 a 32bitový offset</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm</a></td></tr>
<tr><td>180</td><td>vga_320x200_long_address_4.asm</td><td>otestování, jak lze přenášet data s&nbsp;využitím 32bitového offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>181</td><td>print_msw.asm</td><td>přečtení a zobrazení obsahu speciálního registru MSW</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm</a></td></tr>
<tr><td>182</td><td>print_cr0.asm</td><td>přečtení a zobrazení obsahu speciálního registru <strong>CR0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm</a></td></tr>
<tr><td>183</td><td>prot_mode_286.asm</td><td>přechod do chráněného režimu na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm</a></td></tr>
<tr><td>184</td><td>prot_mode_386.asm</td><td>přechod do chráněného režimu na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm</a></td></tr>
<tr><td>185</td><td>prot_mode_back_to_real_mode_286.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm</a></td></tr>
<tr><td>186</td><td>prot_mode_back_to_real_mode_386.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm</a></td></tr>
<tr><td>187</td><td>prot_mode_check.asm</td><td>test, zda se mikroprocesor již nachází v&nbsp;chráněném režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm</a></td></tr>
<tr><td>188</td><td>unreal_mode.asm</td><td>nastavení nereálného režimu (platné pro Intel 80386)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>189</td><td>float32_constants.asm</td><td>vytištění základních FP konstant typu <i>single</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm</a></td></tr>
<tr><td>190</td><td>float64_constants.asm</td><td>vytištění základních FP konstant typu <i>double</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm</a></td></tr>
<tr><td>191</td><td>fpu_arithmetic.asm</td><td>základní aritmetické operace prováděné matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm</a></td></tr>
<tr><td>192</td><td>fpu_divide_by_zero.asm</td><td>dělení nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm</a></td></tr>
<tr><td>193</td><td>fpu_divide_by_neg_zero.asm </td><td>dělení záporné hodnoty nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm</a></td></tr>
<tr><td>194</td><td>fpu_divide_by_neg_zero_2.asm </td><td>dělení hodnoty zápornou nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm</a></td></tr>
<tr><td>195</td><td>fpu_divide_zero_by_zero.asm</td><td>výpočet 0/0 matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>196</td><td>io.asm</td><td>pomocná makra pro komunikaci s&nbsp;DOSem a BIOSem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>197</td><td>print.asm</td><td>pomocná makra pro tisk FPU hodnot typu <i>single</i> a <i>double</i> v&nbsp;hexadecimálním tvaru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>198</td><td>fpu_divide.asm</td><td>operace podílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm</a></td></tr>
<tr><td>199</td><td>fpu_divide_r.asm</td><td>operace podílu s&nbsp;prohozenými operandy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm</a></td></tr>
<tr><td>200</td><td>fpu_sqrt.asm</td><td>výpočet druhé odmocniny</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm</a></td></tr>
<tr><td>201</td><td>fpu_sqrt_neg_value.asm</td><td>výpočet druhé odmocniny ze záporné hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm</a></td></tr>
<tr><td>202</td><td>fpu_check.asm</td><td>detekce typu matematického koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm</a></td></tr>
<tr><td>203</td><td>fpu_compare.asm</td><td>porovnání dvou hodnot s&nbsp;vyhodnocením výsledku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm</a></td></tr>
<tr><td>204</td><td>fpu_status_word.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm</a></td></tr>
<tr><td>205</td><td>fpu_status_word_stack.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

<li>The LOADALL Instruction by Robert Collins<br />
<a href="https://www.rcollins.org/articles/loadall/tspec_a3_doc.html">https://www.rcollins.org/articles/loadall/tspec_a3_doc.html</a>
</li>

<li>How do you put a 286 in Protected Mode?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode">https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode</a>
</li>

<li>Control register<br />
<a href="https://en.wikipedia.org/wiki/Control_register">https://en.wikipedia.org/wiki/Control_register</a>
</li>

<li>CPU Registers x86<br />
<a href="https://wiki.osdev.org/CPU_Registers_x86">https://wiki.osdev.org/CPU_Registers_x86</a>
</li>

<li>x86 Assembly/Protected Mode<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode">https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode</a>
</li>

<li>MSW: Machine Status Word<br />
<a href="https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html">https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html</a>
</li>

<li>80x87 Floating Point Opcodes<br />
<a href="http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html">http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html</a>
</li>

<li>Page Translation<br />
<a href="https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm">https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm</a>
</li>

<li>80386 Paging and Segmenation<br />
<a href="https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation">https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation</a>
</li>

<li>80386 Memory Management<br />
<a href="https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html">https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html</a>
</li>

<li>DOSEMU<br />
<a href="http://www.dosemu.org/">http://www.dosemu.org/</a>
</li>

<li>Intel 80386, a revolutionary CPU<br />
<a href="https://www.xtof.info/intel80386.html">https://www.xtof.info/intel80386.html</a>
</li>

<li>PAI Unit 3 Paging in 80386 Microporcessor<br />
<a href="https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor">https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor</a>
</li>

<li>64 Terabytes of virtual memory for 32-bit x86 using segmentation: how?<br />
<a href="https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how">https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how</a>
</li>

<li>Pi in the Pentium: reverse-engineering the constants in its floating-point unit<br />
<a href="http://www.righto.com/2025/01/pentium-floating-point-ROM.html">http://www.righto.com/2025/01/pentium-floating-point-ROM.html</a>
</li>

<li>Simply FPU<br />
<a href="http://www.website.masmforum.com/tutorials/fptute/">http://www.website.masmforum.com/tutorials/fptute/</a>
</li>

<li>Art of Assembly language programming: The 80x87 Floating Point Coprocessors<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html</a>
</li>

<li>Art of Assembly language programming: The FPU Instruction Set<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html</a>
</li>

<li>INTEL 80387 PROGRAMMER'S REFERENCE MANUAL<br />
<a href="http://www.ragestorm.net/downloads/387intel.txt">http://www.ragestorm.net/downloads/387intel.txt</a>
</li>

<li>x86 Instruction Set Reference: FLD<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_100.html">http://x86.renejeschke.de/html/file_module_x86_id_100.html</a>
</li>

<li>x86 Instruction Set Reference: FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_101.html">http://x86.renejeschke.de/html/file_module_x86_id_101.html</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>8087 Numeric Data Processor<br />
<a href="https://www.eeeguide.com/8087-numeric-data-processor/">https://www.eeeguide.com/8087-numeric-data-processor/</a>
</li>

<li>Data Types and Instruction Set of 8087 co-processor<br />
<a href="https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/">https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/</a>
</li>

<li>8087 instruction set and examples<br />
<a href="https://studylib.net/doc/5625221/8087-instruction-set-and-examples">https://studylib.net/doc/5625221/8087-instruction-set-and-examples</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

