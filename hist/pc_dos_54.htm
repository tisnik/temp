<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textové režimy grafických karet SVGA na platformě IBM PC</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textové režimy grafických karet SVGA na platformě IBM PC</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Jednou z vlastností platformy IBM PC byl naprostý chaos vládnoucí grafickém subsystému. Existuje zde však jeden desítky let stabilní prvek: textové režimy. Dnes si řekneme, jak se možnosti textových režimů rozšířily s příchodem karet SVGA a proč měly 132 znaků na řádku.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Textové režimy grafických karet SVGA na platformě IBM PC</a></p>
<p><a href="#k02">2. Seznam textových režimů</a></p>
<p><a href="#k03">3. Proč vznikly režimy se 132 znaky na řádku?</a></p>
<p><a href="#k04">4. Zjištění, které rozšíření textové režimy jsou grafickou kartou podporovány</a></p>
<p><a href="#k05">5. Test, zda je režim textový nebo grafický</a></p>
<p><a href="#k06">6. První demonstrační příklad: výpis všech rozšířených textových režimů</a></p>
<p><a href="#k07">7. Zjištění podrobnějších informací o vybraném textovém režimu</a></p>
<p><a href="#k08">8. Druhý demonstrační příklad: podrobné informace o vybraném textovém režimu</a></p>
<p><a href="#k09">9. Přepnutí do textového režimu karet SVGA</a></p>
<p><a href="#k10">10. Třetí demonstrační příklad: přepnutí do vybraného textového režimu</a></p>
<p><a href="#k11">11. Text a atributy &ndash; standard, který přežil až do dnešní doby</a></p>
<p><a href="#k12">12. Vyplnění části obrazovky přepnuté do textového režimu</a></p>
<p><a href="#k13">13. Čtvrtý demonstrační příklad: vyplnění části obrazové paměti znaky a jejich atributy</a></p>
<p><a href="#k14">14. Pátý demonstrační příklad: tatáž operace, ovšem provedená v&nbsp;odlišném textovém režimu</a></p>
<p><a href="#k15">15. Textový kurzor</a></p>
<p><a href="#k16">16. Řídicí registry čipu MC6845</a></p>
<p><a href="#k17">17. Změna tvaru textového kurzoru modifikací HW registrů</a></p>
<p><a href="#k18">18. Šestý demonstrační příklad: změna tvaru textového kurzoru</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Textové režimy grafických karet SVGA na platformě IBM PC</h2>

<p>Jak jsme si již naznačili v&nbsp;perexu dnešního článku, byla tvorba
aplikací s&nbsp;grafickým výstupem na platformě IBM PC dosti složitá a
v&nbsp;důsledku i neefektivní. V&nbsp;závislosti na době, ve které aplikace
vznikala, i na požadavcích na zpětnou kompatibilitu, bylo nutné podporovat
grafické karty se zcela různými způsoby organizace grafické (video) paměti.
Například grafická karta CGA mapovala (v&nbsp;grafických režimech) video RAM do
segmentu 0xB800 a celá její kapacita 16kB byla rozdělena do dvou banků o
velikosti 8kB. V&nbsp;prvním banku byly uloženy liché řádky, ve druhém banku
řádky sudé. A hodnoty pixelů (1 bit či 2 bity) byly ukládány do jediné bitové
roviny.</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 700px"><a href="https://www.root.cz/obrazek/1205565/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-1-large.png" class="image-1205565" width="700" height="525" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-1-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-1-prev.webp" data-prev-width="360" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-1-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-1-large.webp" data-large-width="700" data-large-height="525" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 700px" /></a><p>Obrázek 1: IDE běžící ve standardním textovém režimu 80x25 znaků. <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a></p></div>

<p>Naproti tomu karta Hercules mapovala svoji video RAM do segmentu 0xB000
a paměť byla rozdělena nikoli do dvou, ale do čtyřech paměťových banků.
Grafická karta EGA zavedla <i>planární grafiku</i> (až čtyři bitové roviny) a
mapování video RAM do segmentu 0xA000. Karta VGA tuto techniku rozšířila o
další grafické režimy a aby toho nebylo málo, byla zavedena <i>zřetězená
grafika</i> používaná v&nbsp;grafickém režimu s&nbsp;rozlišením 320&times;200
pixelů (jediný příčetný grafický režim v&nbsp;historii IBM PC :-).</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 700px"><a href="https://www.root.cz/obrazek/1205568/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-2-large.png" class="image-1205568" width="700" height="525" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-2-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-2-prev.webp" data-prev-width="360" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-2-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-2-large.webp" data-large-width="700" data-large-height="525" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 700px" /></a><p>Obrázek 2: Přepnutí do režimu s dvojnásobným počtem textových řádků (50). <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>

<p>Situace se (oproti možná až příliš optimistickému očekávání) nezlepšila ani
s&nbsp;příchodem grafických karet SVGA a později i standardu VESA (a rozšíření
VBE). Standard VESA totiž konstruktérům grafických karet ponechával velkou
volnost v&nbsp;tom, jakým způsobem vlastně budou ukládány hodnoty pixelů
v&nbsp;grafických režimech s&nbsp;15, 16, 24 či 32 bity na pixel. Navíc bylo
nutné nějakým způsobem vyřešit mapování obrazové paměti (nyní již o velkých
kapacitách 512kB, 1MB nebo dokonce 2MB) do jediného dostupného segmentu 0xA000.
Opět bylo k&nbsp;dispozici několik možností, nikoli jeden uznávaný standardní
způsob.</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 720px"><a href="https://www.root.cz/obrazek/1205571/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-3-large.png" class="image-1205571" width="720" height="524" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-3-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-3-prev.webp" data-prev-width="370" data-prev-height="269" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-3-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-3-large.webp" data-large-width="720" data-large-height="524" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 720px" /></a><p>Obrázek 3: Přepnutí do režimu s vyšším počtem sloupců (132). <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>

<p>Ovšem jedna věc zůstávala po celou dobu existence IBM PC (a to se bavíme o
několika desítkách let) prakticky nezměněná &ndash; textové režimy. Již
grafické karty CGA a MDA podporovaly textový režim s&nbsp;80 sloupci a 25
textovými řádky, přičemž každému znaku bylo možné přiřadit barvové
aj.&nbsp;(blikání, podtržení) atributy. Na grafických kartách EGA a VGA bylo
navíc možné zvýšit počet textových řádků na 30, 43 či 60 řádků (i více, ovšem
to již bylo poněkud nestandardní). Organizace grafické (textové?) paměti
zůstala po celou dobu existence platformy IBM PC stejná a vlastně ji můžeme
využívat dodnes.</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 720px"><a href="https://www.root.cz/obrazek/1205574/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-4-large.png" class="image-1205574" width="720" height="518" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-4-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-4-prev.webp" data-prev-width="370" data-prev-height="266" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-4-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-4-large.webp" data-large-width="720" data-large-height="518" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 720px" /></a><p>Obrázek 4: Největší počet znaků je zobrazen v režimu 132x60 znaků. <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>

<p>Další zvýšení počtu textových řádků a/nebo sloupců poskytly až grafické
karty SVGA. A právě textovými režimy těchto karet se budeme zabývat
v&nbsp;dnešním článku.</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 720px"><a href="https://www.root.cz/obrazek/1205577/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-5-large.png" class="image-1205577" width="720" height="518" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-5-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-5-prev.webp" data-prev-width="370" data-prev-height="266" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-5-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-5-large.webp" data-large-width="720" data-large-height="518" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 720px" /></a><p>Obrázek 5:&#160; 132x60 znaků dává spoustu místa pro zobrazení důležitých informací.</p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>



<p><a name="k02"></a></p>
<h2 id="k02">2. Seznam textových režimů</h2>

<p>V&nbsp;následující tabulce jsou zobrazeny textové režimy dostupné na
platformě IBM PC (samozřejmě v&nbsp;závislosti na použité grafické kartě).
Obecně platí prakticky stoprocentní zpětná kompatibilita, takže i moderní karty
by měly dokázat pracovat ve starodávném režimu 40&times;25 atd.:</p>

<table>
<tr><th>Rozlišení (znaky)</th><th>Maska znaků (pixely)</th><th>Použité rozlišení obrazovky</th><th>Atributy</th><th>Grafické karty</th></tr>
<tr><td> 80&times;25</td><td>9&times;14</td><td>720&times;350</td><td>monochrom</td><td>MDA, Hercules</td></tr>
<tr><td> 40&times;25</td><td>8&times;8 </td><td>320&times;200</td><td>16 colors</td><td>CGA, EGA</td></tr>
<tr><td> 80&times;25</td><td>8&times;8 </td><td>640&times;200</td><td>16 colors</td><td>CGA, EGA</td></tr>
<tr><td> 80&times;25</td><td>8&times;14</td><td>640&times;350</td><td>16 colors</td><td>EGA</td></tr>
<tr><td> 80&times;43</td><td>8&times;8 </td><td>640&times;350</td><td>16 colors</td><td>EGA</td></tr>
<tr><td> 80&times;25</td><td>9&times;16</td><td>720&times;400</td><td>16 colors</td><td>VGA</td></tr>
<tr><td> 80&times;30</td><td>8&times;16</td><td>640&times;480</td><td>16 colors</td><td>VGA</td></tr>
<tr><td> 80&times;50</td><td>9&times;8 </td><td>720&times;400</td><td>16 colors</td><td>VGA</td></tr>
<tr><td> 80&times;60</td><td>různá     </td><td>různá        </td><td>16 colors</td><td>VESA-compatible Super VGA</td></tr>
<tr><td>132&times;25</td><td>různá     </td><td>různá        </td><td>16 colors</td><td>VESA-compatible Super VGA</td></tr>
<tr><td>132&times;43</td><td>různá     </td><td>různá        </td><td>16 colors</td><td>VESA-compatible Super VGA</td></tr>
<tr><td>132&times;50</td><td>různá     </td><td>různá        </td><td>16 colors</td><td>VESA-compatible Super VGA</td></tr>
<tr><td>132&times;60</td><td>různá     </td><td>různá        </td><td>16 colors</td><td>VESA-compatible Super VGA</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti byla práce se všemi výše
zmíněnými režimy prakticky totožná, takže aplikace pouze musela zjistit počet
znaků na řádku (tři možnosti, v&nbsp;praxi však jen dvě: 80 a 132) a počet
textových řádků. Ostatní operace byly totožné.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Proč vznikly režimy se 132 znaky na řádku?</h2>

<p>Při pohledu na tabulku uvedenou <a href="#k02">v&nbsp;předchozí kapitole</a>
vás možná napadne, proč se vlastně v&nbsp;nových textových režimech SVGA
používá 132 znaků na řádku, když by hodnota 128 znaků byla
&bdquo;zaokrouhlenější&ldquo; a více by odpovídala rozlišením grafických režimů
(1024 pixelů / 8 = 128). Tato hodnota má ve skutečnosti za sebou poměrně dlouhý
vývoj, který ovšem souvisí s&nbsp;řádkovými tiskárnami vyráběnými společností
IBM (od které tuto hodnotu okopírovali i další výrobci). A ještě před těmito
tiskárnami (a vůbec před vznikem moderních počítačů) existovaly stroje nazývané
<i>tabulating machine</i>, které dokázaly sečíst výsledky voleb, výsledky
sčítání lidu atd. Některé z&nbsp;těchto strojů tiskly výsledky na papírový pás
o šířce 14 palců a přitom bylo možné zobrazit 10 znaků na palec.</p>

<p>Tyto rozměry převzala společnost IBM a používala je u tiskáren systému IBM
1400 (začátek prodeje se datuje až do roku 1959). Šířka 14 palců a 10 znaků na
palec znamená 140 znaků na řádku, ovšem osm znaků bylo rezervováno na
perforované okraje (traktorový papír a traktorový podavač). Výsledkem je tedy
132 znaků na řádku.</p>

<p>Jen pro zajímavost se podívejme, jaké modely tiskáren pro systém IBM 1400
(počítač měl číslo 1401, tiskárny <a
href="https://en.wikipedia.org/wiki/IBM_1403">1403</a>) byly
k&nbsp;dispozici:</p>

<table>
<tr><th>Tiskárna</th><th>Znaků/řádek</th><th>Rychlost tisku</th><th>Rychlost tisku (jen čísla)</th></tr>
<tr><td>Model 1 </td><td>100</td><td> 600</td><td>1285</td></tr>
<tr><td>Model 2 </td><td>132</td><td> 600</td><td>1285</td></tr>
<tr><td>Model 3 </td><td>132</td><td>1100</td><td>1400</td></tr>
<tr><td>Model 4 </td><td>100</td><td> 465</td><td>&times;</td></tr>
<tr><td>Model 5 </td><td>132</td><td> 465</td><td>&times;</td></tr>
<tr><td>Model 6 </td><td>120</td><td> 340</td><td>&times;</td></tr>
<tr><td>Model 7 </td><td>120</td><td> 600</td><td>&times;</td></tr>
<tr><td>Model N1</td><td>132</td><td>1100</td><td>1400</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: tyto tiskárny vždy tiskly celý řádek a
nebylo možné měnit šířku ani počet znaků na řádku.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Zjištění, které rozšíření textové režimy jsou grafickou kartou podporovány</h2>

<p><a href="#k02">Ve druhé kapitole</a> jsme si (kromě dalších režimů) vypsali
i de facto standardní textové režimy karet SVGA s&nbsp;vyšším počtem textových
řádků a popř.&nbsp;s&nbsp;podporou 132 znaků na řádku. Některé grafické karty
ovšem umožňovaly zobrazit i vyšší počty znaků &ndash; relativně typické byly
režimy se 160 znaky na řádku atd. Jak je ovšem možné zjistit, které
z&nbsp;těchto režimů jsou podporovány? Budeme postupovat následovně:</p>

<ol>
<li>Zjistíme čísla všech dostupných režimů (ať již grafických či textových)</li>
<li>Pro každý z&nbsp;režimů si necháme zjistit jeho základní charakteristiky (typ atd.)</li>
<li>Pokud se jedná o textový režim, necháme si tento režim vypsat</li>
<li>Skok zpět na 2</li>
</ol>

<p>Připomeňme si, že informace o grafické kartě vrácené přes VBE vypadají následovně:</p>

<pre>
<strong>vesa_block_info</strong>:
        Signature               resb 4
        Version                 resw 1
        OEMNamePtr              resd 1
        Capabilities            resd 1
&nbsp;
        VideoModesOffset        resw 1
        VideoModesSegment       resw 1
&nbsp;
        CountOf64KBlocks        resw 1
        OEMSoftwareRevision     resw 1
        OEMVendorNamePtr        resd 1
        OEMProductNamePtr       resd 1
        OEMProductRevisionPtr   resd 1
        Reserved                resb 222
        OEMData                 resb 256
</pre>

<p>Velmi důležitým údajem, který o sobě grafická karta přes VBE prozrazuje, je
tabulka s&nbsp;čísly grafických ale i textových režimů (ovšem bez dalších
podrobností). Adresa (ukazatel) na tuto tabulku je uložena ve dvojici
<strong>VideoModesSegment</strong> a <strong>VideoModesOffset</strong>, přičemž
každé číslo režimu je šestnáctibitové. Na konci tabulky je uložena
šestnáctibitová hodnota -1 (tedy 0xffff), kterou budeme hledat, aby bylo možné
ukončit smyčku, která čísla všech grafických režimů vypíše:</p>

<pre>
        mov es, [VideoModesSegment] <i>; tabulka s cisly grafickych rezimu</i>
        mov bx, [VideoModesOffset]
&nbsp;
<strong>next_mode</strong>:
        xor eax, eax
        mov ax, es:[bx]            <i>; nacteni cisla rezimu</i>
        cmp ax, -1                 <i>; jde o posledni zaznam?</i>
        je  last_mode              <i>; ano -> koncime</i>
        print_dec eax              <i>; tisk cisla rezimu</i>
        inc bx                     <i>; offset pro dalsi rezim</i>
        inc bx
        jmp next_mode              <i>; pokracujeme</i>
<strong>last_mode</strong>:
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Test, zda je režim textový nebo grafický</h2>

<p>To, zda je nějaký režim textový nebo grafický, se pozná z&nbsp;pátého bitu
(s&nbsp;indexem 4) v&nbsp;prvku <strong>ModeAttributes</strong> získaného ze
struktury <strong>graphics_mode_block_info</strong>. Pokud se jedná o textový
režim, bude jeho rozlišení specifikováno ve znacích (nikoli v&nbsp;pixelech) a
současně prvky <strong>XCharSize</strong> a <strong>YCharSize</strong> budou
obsahovat velikost masky znaků (tentokrát pochopitelně v&nbsp;pixelech).
Typické hodnoty jsou 8&times;8 a 8&times;16 (zmizel tedy devátý sloupec). Test
na textový režim a výpis jeho základních informací lze realizovat relativně
snadno (kód není optimalizován):</p>

<pre>
<strong>print_mode_info</strong>:
        pushad                     <i>; uschovat pracovni registry</i>
        push es                    <i>; pro pozdejsi obnovu na konci subrutiny</i>
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
        mov  dx, ax
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o grafickem rezimu</i>
        mov  di, graphics_mode_block_info
        mov  cx, ax                <i>; cislo rezimu</i>
        mov  ax, 0x4f01
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     not_text_mode
&nbsp;
        mov ax, [ModeAttributes]   <i>; bit cislo 4 je u textovych rezimu nastaven na hodnotu 0</i>
        and ax, 16                 <i>; test bitu cislo 4</i>
        jnz  not_text_mode
&nbsp;
        <i>; je to textovy rezim!</i>
        mov ax, dx                 <i>; tisk cisla rezimu</i>
        print_dec_16
&nbsp;
        mov ax, [XResolution]      <i>; horizontalni rozliseni ve znacich</i>
        print_dec_16
&nbsp;
        mov ax, [YResolution]      <i>; vertikalni rozliseni ve znacich</i>
        print_dec_16
&nbsp;
        mov ax, [XCharSize]        <i>; sirka znaku v pixelech</i>
        print_dec_8
&nbsp;
        mov ax, [YCharSize]        <i>; vyska znaku v pixelech</i>
        print_dec_8
&nbsp;
        print_string eoln          <i>; na konci odradkovat</i>
&nbsp;
<strong>not_text_mode</strong>:
        pop es                     <i>; obnoveni vsech relevantnich registru</i>
        popad
        ret                        <i>; a navrat ze subrutiny</i>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. První demonstrační příklad: výpis všech rozšířených textových režimů</h2>

<p>V&nbsp;dnešním prvním demonstračním příkladu si necháme vypsat všechny
textové režimy podporované SVGA kartou. U každého režimu se vypíše jeho
rozlišení (ve znacích) i velikost masek znaků (typicky 8&times;8 nebo
8&times;16 pixelů):</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        mov  byte [dec_message+10], ' '  <i>; trik -> nechceme odradkovat po tisku hodnoty</i>
        mov  byte [dec_message+11], ' '
&nbsp;
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o VESA rezimech</i>
        mov  di, vesa_block_info
        mov ax, 0x4f00
        int     0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
        mov es, [VideoModesSegment] <i>; tabulka s cisly grafickych rezimu</i>
        mov bx, [VideoModesOffset]
&nbsp;
<strong>next_mode</strong>:
        xor eax, eax
        mov ax, es:[bx]            <i>; nacteni cisla rezimu</i>
        cmp ax, -1                 <i>; jde o posledni zaznam?</i>
        je  last_mode              <i>; ano -> koncime</i>
        inc bx                     <i>; offset pro dalsi rezim</i>
        inc bx
&nbsp;
        mov ax, es:[bx]            <i>; znovu nacist cislo rezimu</i>
        call print_mode_info       <i>; a vypsat podrobejsi informace o nem</i>
&nbsp;
        jmp next_mode              <i>; pokracujeme</i>
<strong>last_mode</strong>:
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key                   <i>; cekani na klavesu</i>
        exit                       <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<strong>print_mode_info</strong>:
        pushad                     <i>; uschovat pracovni registry</i>
        push es                    <i>; pro pozdejsi obnovu na konci subrutiny</i>
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
        mov  dx, ax
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o grafickem rezimu</i>
        mov  di, graphics_mode_block_info
        mov  cx, ax                <i>; cislo rezimu</i>
        mov  ax, 0x4f01
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     not_text_mode
&nbsp;
        mov ax, [ModeAttributes]   <i>; bit cislo 4 je u textovych rezimu nastaven na hodnotu 0</i>
        and ax, 16                 <i>; test bitu cislo 4</i>
        jnz  not_text_mode
&nbsp;
        <i>; je to textovy rezim!</i>
        mov ax, dx                 <i>; tisk cisla rezimu</i>
        print_dec_16
&nbsp;
        mov ax, [XResolution]      <i>; horizontalni rozliseni ve znacich</i>
        print_dec_16
&nbsp;
        mov ax, [YResolution]      <i>; vertikalni rozliseni ve znacich</i>
        print_dec_16
&nbsp;
        mov ax, [XCharSize]        <i>; sirka znaku v pixelech</i>
        print_dec_8
&nbsp;
        mov ax, [YCharSize]        <i>; vyska znaku v pixelech</i>
        print_dec_8
&nbsp;
        print_string eoln          <i>; na konci odradkovat</i>
&nbsp;
<strong>not_text_mode</strong>:
        pop es                     <i>; obnoveni vsech relevantnich registru</i>
        popad
        ret                        <i>; a navrat ze subrutiny</i>
&nbsp;
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
<strong>eoln</strong>:            db 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>vesa_block_info</strong>:
        Signature               resb 4
        Version                 resw 1
        OEMNamePtr              resd 1
        Capabilities            resd 1
&nbsp;
        VideoModesOffset        resw 1
        VideoModesSegment       resw 1
&nbsp;
        CountOf64KBlocks        resw 1
        OEMSoftwareRevision     resw 1
        OEMVendorNamePtr        resd 1
        OEMProductNamePtr       resd 1
        OEMProductRevisionPtr   resd 1
        Reserved                resb 222
        OEMData                 resb 256
&nbsp;
<strong>graphics_mode_block_info</strong>:
        ModeAttributes      resw 1 <i>; mode attributes</i>
        WinAAttributes      resb 1 <i>; window A attributes</i>
        WinBAttributes      resb 1 <i>; window B attributes</i>
        WinGranularity      resw 1 <i>; window granularity</i>
        WinSize             resw 1 <i>; window size</i>
        WinASegment         resw 1 <i>; window A start segment</i>
        WinBSegment         resw 1 <i>; window B start segment</i>
        WinFuncPtr          resd 1 <i>; pointer to windor function</i>
        BytesPerScanLine    resw 1 <i>; bytes per scan line</i>
&nbsp;
        XResolution         resw 1 <i>; horizontal resolution</i>
        YResolution         resw 1 <i>; vertical resolution</i>
        XCharSize           resb 1 <i>; character cell width</i>
        YCharSize           resb 1 <i>; character cell height</i>
        NumberOfPlanes      resb 1 <i>; number of memory planes</i>
        BitsPerPixel        resb 1 <i>; bits per pixel</i>
        NumberOfBanks       resb 1 <i>; number of banks</i>
        MemoryModel         resb 1 <i>; memory model type</i>
        BankSize            resb 1 <i>; bank size in kb</i>
        NumberOfImagePages  resb 1 <i>; number of images</i>
        Reserved1           resb 1 <i>; reserved for page function</i>
&nbsp;
        RedMaskSize         resb 1 <i>; size of direct color red mask in bits</i>
        RedFieldPosition    resb 1 <i>; bit position of LSB of red mask</i>
        GreenMaskSize       resb 1 <i>; size of direct color green mask in bits</i>
        GreenFieldPosition  resb 1 <i>; bit position of LSB of green mask</i>
        BlueMaskSize        resb 1 <i>; size of direct color blue mask in bits</i>
        BlueFieldPosition   resb 1 <i>; bit position of LSB of blue mask</i>
        RsvdMaskSize        resb 1 <i>; size of direct color reserved mask in bits</i>
        DirectColorModeInfo resb 1 <i>; Direct Color mode attributes</i>
        Reserved2           resb 216 <i>; remainder of ModeInfoBlock</i>
</pre>

<p>Výsledky by mohly vypadat následovně:</p>

<pre>
0000000264  0000000080  0000000060  0000000008  0000000008  
0000000265  0000000132  0000000025  0000000008  0000000016  
0000000266  0000000132  0000000043  0000000008  0000000008  
0000000267  0000000132  0000000050  0000000008  0000000008  
0000000268  0000000132  0000000060  0000000008  0000000008  
</pre>

<p>Což snadno převedeme do čitelné tabulky:</p>

<pre>
Režim Znaků Řádků Šířka Výška (pixely)
======================================
264     80    60     8    8  
265    132    25     8   16  
266    132    43     8    8  
267    132    50     8    8  
268    132    60     8    8  
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Zjištění podrobnějších informací o vybraném textovém režimu</h2>

<p>Z&nbsp;předchozích částí tohoto seriálu již víme, že podrobné informace o
jednom <i>vybraném</i> textovém nebo grafickém režimu musíme zjistit službou
číslo 0x4F a podslužbou 1. Do registru <strong>CX</strong> je nutné zadat číslo
režimu, který potřebujeme prozkoumat a v&nbsp;registrovém páru
<strong>ES:DI</strong> musí být předán ukazatel na buffer o délce 256 bajtů, do
kterého se uloží podrobné informace o zvoleném režimu:</p>

<pre>
Vstup:  AH = 4Fh        Služby SVGA
        AL = 01h        Získání informací o zvoleném grafickém režimu
        CX = číslo režimu
        ES:DI = ukazatel na buffer (256 bajtů)
&nbsp;
Výstup: AL = 4Fh pokud je služba podporována, jinak odlišná hodnota
        AH = 00h pokud je volání úspěšné, jinak hodnota 01h
</pre>

<p>Blok o délce 256 bajtů, který je vyplněn, má tuto strukturu:</p>

<pre>
<strong>graphics_mode_block_info</strong>:
        ModeAttributes      resw 1 <i>; mode attributes</i>
        WinAAttributes      resb 1 <i>; window A attributes</i>
        WinBAttributes      resb 1 <i>; window B attributes</i>
        WinGranularity      resw 1 <i>; window granularity</i>
        WinSize             resw 1 <i>; window size</i>
        WinASegment         resw 1 <i>; window A start segment</i>
        WinBSegment         resw 1 <i>; window B start segment</i>
        WinFuncPtr          resd 1 <i>; pointer to windor function</i>
        BytesPerScanLine    resw 1 <i>; bytes per scan line</i>
&nbsp;
        XResolution         resw 1 <i>; horizontal resolution</i>
        YResolution         resw 1 <i>; vertical resolution</i>
        XCharSize           resb 1 <i>; character cell width</i>
        YCharSize           resb 1 <i>; character cell height</i>
        NumberOfPlanes      resb 1 <i>; number of memory planes</i>
        BitsPerPixel        resb 1 <i>; bits per pixel</i>
        NumberOfBanks       resb 1 <i>; number of banks</i>
        MemoryModel         resb 1 <i>; memory model type</i>
        BankSize            resb 1 <i>; bank size in kb</i>
        NumberOfImagePages  resb 1 <i>; number of images</i>
        Reserved1           resb 1 <i>; reserved for page function</i>
&nbsp;
        RedMaskSize         resb 1 <i>; size of direct color red mask in bits</i>
        RedFieldPosition    resb 1 <i>; bit position of LSB of red mask</i>
        GreenMaskSize       resb 1 <i>; size of direct color green mask in bits</i>
        GreenFieldPosition  resb 1 <i>; bit position of LSB of green mask</i>
        BlueMaskSize        resb 1 <i>; size of direct color blue mask in bits</i>
        BlueFieldPosition   resb 1 <i>; bit position of LSB of blue mask</i>
        RsvdMaskSize        resb 1 <i>; size of direct color reserved mask in bits</i>
        DirectColorModeInfo resb 1 <i>; Direct Color mode attributes</i>
        Reserved2           resb 216 <i>; remainder of ModeInfoBlock</i>
</pre>

<p>Mnohé atributy postrádají v&nbsp;případě textových režimů význam (například
bitové masky a velikosti), ovšem minimálně tyto atributy jsou velmi
důležité:</p>

<pre>
        ModeAttributes      resw 1 <i>; atributy režimu, včetně rozlišení text/grafika</i>
        WinAAttributes      resb 1 <i>; zajímá nás jen, jestli okno existuje</i>
        WinASegment         resw 1 <i>; segment pro okno A (měl by být 0xB800)</i>
        BytesPerScanLine    resw 1 <i>; počet bajtů, tentokrát na textový řádek (počet znaků*2)</i>
&nbsp;
        XResolution         resw 1 <i>; počet znaků na textovém řádku</i>
        YResolution         resw 1 <i>; počet textových řádků</i>
        XCharSize           resb 1 <i>; šířka znaku v pixelech</i>
        YCharSize           resb 1 <i>; výška znaku v pixelech</i>
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Druhý demonstrační příklad: podrobné informace o vybraném textovém režimu</h2>

<p>V&nbsp;dnešním druhém demonstračním příkladu si ukážeme, jakým způsobem lze
získat a zobrazit podrobnější informace o vybraném textovém režimu. Konkrétně
budeme zjišťovat informace o režimu s&nbsp;číslem 0x108. Tyto informace se
přečtou a následně zobrazí na terminálu:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o grafickem rezimu</i>
        mov  di, graphics_mode_block_info
        mov  cx, 0x108             <i>; cislo rezimu</i>
        mov  ax, 0x4f01
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        mov ax, [XResolution]
        print_dec_16
&nbsp;
        mov ax, [YResolution]
        print_dec_16
&nbsp;
        mov ax, [BytesPerScanLine]
        print_dec_16
&nbsp;
        mov al, [BitsPerPixel]
        print_dec_8
&nbsp;
        mov al, [NumberOfPlanes]
        print_dec_8
&nbsp;
        mov ax, [XCharSize]
        print_dec_8
&nbsp;
        mov ax, [YCharSize]
        print_dec_8
&nbsp;
        xor eax, eax
        mov al, [WinAAttributes]
        print_hex eax
&nbsp;
        xor eax, eax
        mov al, [WinBAttributes]
        print_hex eax
&nbsp;
        xor eax, eax
        mov ax, [WinGranularity]
        print_dec_16
&nbsp;
        xor eax, eax
        mov ax, [WinSize]
        print_dec_16
&nbsp;
        xor eax, eax
        mov ax, [WinASegment]
        print_hex eax
&nbsp;
        xor eax, eax
        mov ax, [WinBSegment]
        print_hex eax
&nbsp;
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>graphics_mode_block_info</strong>:
        ModeAttributes      resw 1 <i>; mode attributes</i>
        WinAAttributes      resb 1 <i>; window A attributes</i>
        WinBAttributes      resb 1 <i>; window B attributes</i>
        WinGranularity      resw 1 <i>; window granularity</i>
        WinSize             resw 1 <i>; window size</i>
        WinASegment         resw 1 <i>; window A start segment</i>
        WinBSegment         resw 1 <i>; window B start segment</i>
        WinFuncPtr          resd 1 <i>; pointer to windor function</i>
        BytesPerScanLine    resw 1 <i>; bytes per scan line</i>
&nbsp;
        XResolution         resw 1 <i>; horizontal resolution</i>
        YResolution         resw 1 <i>; vertical resolution</i>
        XCharSize           resb 1 <i>; character cell width</i>
        YCharSize           resb 1 <i>; character cell height</i>
        NumberOfPlanes      resb 1 <i>; number of memory planes</i>
        BitsPerPixel        resb 1 <i>; bits per pixel</i>
        NumberOfBanks       resb 1 <i>; number of banks</i>
        MemoryModel         resb 1 <i>; memory model type</i>
        BankSize            resb 1 <i>; bank size in kb</i>
        NumberOfImagePages  resb 1 <i>; number of images</i>
        Reserved1           resb 1 <i>; reserved for page function</i>
&nbsp;
        RedMaskSize         resb 1 <i>; size of direct color red mask in bits</i>
        RedFieldPosition    resb 1 <i>; bit position of LSB of red mask</i>
        GreenMaskSize       resb 1 <i>; size of direct color green mask in bits</i>
        GreenFieldPosition  resb 1 <i>; bit position of LSB of green mask</i>
        BlueMaskSize        resb 1 <i>; size of direct color blue mask in bits</i>
        BlueFieldPosition   resb 1 <i>; bit position of LSB of blue mask</i>
        RsvdMaskSize        resb 1 <i>; size of direct color reserved mask in bits</i>
        DirectColorModeInfo resb 1 <i>; Direct Color mode attributes</i>
        Reserved2           resb 216 <i>; remainder of ModeInfoBlock</i>
</pre>

<p>Podívejme se nyní, jaké informace se vypsaly:</p>

<pre>
Success
0000000080
0000000060
0000000160
0000000004
0000000004
0000000008
0000000008
00000007
00000000
0000000032
0000000032
0000B800
00000000
</pre>

<p>Rozklíčovat je můžeme následujícím způsobem:</p>

<pre>
Počet znaků na řádku:   80
Počet textových řádků:  60
Počet bajtů na řádek:  160 (80&times;2)
Bitů na pixel:           4 (postrádá přímý význam)
Počet rovin:             4 (postrádá přímý význam)
Šířka znaku v pixelech:  8
Výška znaku v pixelech:  8
Atributy okna A:         7 (lze měnit)
Atributy okna B:         0 (neexistuje)
Granularita oken:       32 kB (prakticky postrádá význam)
Velikost oken:          32 kB (prakticky taktéž postrádá význam)
Segment okna A:         B800 (naprostý standard pro textové režimy)
Segment okna B:         0000 (okno B neexistuje)
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Přepnutí do textového režimu karet SVGA</h2>

<p>Textový režim SVGA se nastavuje naprosto stejným způsobem, jako režim
grafický. Pouze musíme zavolat službu 02 rozšíření VBE a v&nbsp;registru
<strong>BX</strong> jí předat číslo požadovaného režimu. A &ndash; podobně jako
u dalších volání VBE &ndash; se v&nbsp;pracovním registru <strong>AX</strong>
vrátí hodnota 0x004f v&nbsp;případě, že byl režim korektně nastaven:</p>

<pre>
Vstup:  AH = 4Fh        Služby SVGA
        AL = 02h        Podslužba pro nastavení grafického nebo textového režimu
        BX = číslo režimu (nejvyšší bit řídí, zda se má video paměť vymazat či nikoli)
&nbsp;
Výstup: AL = 4Fh pokud je služba podporována, jinak odlišná hodnota
        AH = 00h pokud je volání úspěšné, jinak hodnota 01h
</pre>

<p>V&nbsp;praxi tedy může nastavení textového režimu číslo 0x108 (80&times;60
znaků) vypadat následovně:</p>

<pre>
        mov  bx, 0x108             <i>; cislo rezimu</i>
        mov  ax, 0x4f02            <i>; nastaveni grafickeho rezimu</i>
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success:</strong>
        <i>; v pořádku</i>
<strong>failed:</strong>
        <i>; nějaká chyba</i>
</pre>

<p><div class="rs-tip-major">Poznámka: nikde však není provedena kontrola,
jestli je režim podporován monitorem!</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Třetí demonstrační příklad: přepnutí do vybraného textového režimu</h2>

<p>V&nbsp;dnešním třetím demonstračním příkladu se pokusíme o přepnutí grafické
karty SVGA (prakticky jakékoli karty podporované rozšířením BIOSu VBE) do
vybraného textového režimu. Konkrétně se bude jednat o režim číslo 0x108, což
je v&nbsp;oblasti SVGA de facto standardní textový režim s&nbsp;osmdesáti znaky
na řádku a šedesáti textovými řádky.  Následně použijeme službu DOSu (tedy
vlastně vysokoúrovňovou službu) pro tisk zprávy, abychom si ověřili, že vše
pracuje podle očekávání:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
&nbsp;
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        mov  bx, 0x108             <i>; cislo rezimu</i>
        mov  ax, 0x4f02            <i>; nastaveni grafickeho rezimu</i>
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
&nbsp;
<strong>success</strong>:
        print_string success_msg
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
</pre>

<p>Výsledek by mohl vypadat následovně:</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 700px"><a href="https://www.root.cz/obrazek/1205580/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-6-large.png" class="image-1205580" width="700" height="525" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-6-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-6-prev.webp" data-prev-width="360" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-6-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-6-large.webp" data-large-width="700" data-large-height="525" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 700px" /></a><p>Obrázek 6: Přepnutí do SVGA textového režimu. <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>

<p>Po přiblížení zjistíme, jak vypadají masky jednotlivých znaků na
obrazovce:</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 720px"><a href="https://www.root.cz/obrazek/1205583/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-7-large.png" class="image-1205583" width="720" height="199" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-7-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-7-prev.webp" data-prev-width="370" data-prev-height="102" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-7-large.png" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-7-large.webp" data-large-width="720" data-large-height="199" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 720px" /></a><p>Obrázek 7: Bližší pohled na zobrazený text i textový kurzor. <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>



<p><a name="k11"></a></p>
<h2 id="k11">11. Text a atributy &ndash; standard, který přežil až do dnešní doby</h2>

<p>Již u pradávných karet CGA a MDA byl stanoven standard pro to, jak je
organizována video paměť v&nbsp;textových režimech. V&nbsp;sudém bajtu
(číslujeme od nuly) je uložen ASCII kód zobrazovaného znaku a v&nbsp;bajtu
lichém jeho atribut.  Struktura video paměti v&nbsp;textových režimech tedy
vypadá takto (ukázka pro režim 80&times;25 znaků):</p>

<pre>
      0   1 ║ 2   3 ║ 4   5 ║ ... ║158 159
    ┌───┼───╫───┼───╫───┼───╫─────╫───┼───╖
   0│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 0
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
 160│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 1
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
 320│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 2
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
 480│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
    .                                     .
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
3840│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 24
    └───┴───╨───┴───╨───┴───╨─────╨───┴───╜
</pre>

<p>Samotný atributový bajt (samostatný pro každý znak) má tuto strukturu:</p>

<pre>
 ╓7┬6┬5┬4┬3┬2┬1┬0╖
 ║ │bkgnd│ frgnd ║
 ╙─┴─┴─┴─┴─┴─┴─┴─╜ bity
  ║ ╚═╦═╝ ╚═════╩═► 0-3:  barva popředí 0-15
  ║   ╚═══════════► 4-6:  barva pozadí 0-7
  ╚═══════════════►   7:  povolení blikání
</pre>

<p>Pokud je blikání vypnuto (viz další text), význam se nepatrně změní:</p>

<pre>
 ╓7┬6┬5┬4┬3┬2┬1┬0╖
 ║ bkgnd │ frgnd ║
 ╙─┴─┴─┴─┴─┴─┴─┴─╜ bity
  ╚══╦══╝ ╚═════╩═► 0-3:  barva popředí 0-15
     ╚════════════► 4-6:  barva pozadí 0-15
</pre>

<p>Tento způsob organizace video paměti v&nbsp;textových režimech zůstal
zachován až do doby grafických karet SVGA. Došlo pouze k&nbsp;rozšíření
celkového počtu znaků na obrazovce a taktéž nově existuje možnost mapovat barvy
přes DAC (barvovou paletu), takže se nutně nemusí používat základní sada
šestnácti barev.</p>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že i v&nbsp;textovém
režimu s&nbsp;největším počtem znaků nepřesáhneme velikost jednoho segmentu:
132&times;60 znaků znamená 132&times;60&times;2 bajtů, což je relativně nízká
hodnota 15840 bajtů, tedy necelá čtvrtina velikosti segmentu.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Vyplnění části obrazovky přepnuté do textového režimu</h2>

<p>Ukažme si nyní, jak vypadá obrazovka nějakého textového režimu.  Obrazovku
vyplníme různými kombinacemi atributů a znaků. Pokud bude atribut pozadí vyšší
než hodnota 7, bude text blikat (což známe například ze ZX Spectra atd.):</p>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 667px"><a href="https://www.root.cz/obrazek/1205586/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-8-large.jpg" class="image-1205586" width="667" height="525" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-8-prev.jpg" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-8-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-8-large.jpg" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-8-large.webp" data-large-width="667" data-large-height="525" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 667px" /></a><p>Obrázek 8: Textový režim 40x25 znaků podporovaný již kartou CGA. <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>

<div class="rs-img-center" style="margin-left: auto; margin-right: auto; max-width: 667px"><a href="https://www.root.cz/obrazek/1205589/"><img src="https://i.iinfo.cz/images/434/svga-text-modes-9-large.jpg" class="image-1205589" width="667" height="525" data-prev-filename="https://i.iinfo.cz/images/434/svga-text-modes-9-prev.jpg" data-prev-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-9-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/434/svga-text-modes-9-large.jpg" data-large-filename-webp="https://i.iinfo.cz/images/434/svga-text-modes-9-large.webp" data-large-width="667" data-large-height="525" alt="SVGA text modes" data-description="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" style="width: 100%; height: auto; max-width: 667px" /></a><p>Obrázek 9: Textový režim 80x25 znaků podporovaný již kartou CGA.&#160; <br class="_remove" /></p><p class="author">Autor: tisnik, podle licence: <a href="http://en.wikipedia.org/wiki/Rights_Managed">Rights Managed</a><br class="_remove" /></p></div>



<p><a name="k13"></a></p>
<h2 id="k13">13. Čtvrtý demonstrační příklad: vyplnění části obrazové paměti znaky a jejich atributy</h2>

<p>Vyzkoušejme si nyní, jak bude vypadat obsah obrazovky (ať již reálné nebo
emulované) v&nbsp;případě, že vyplníme její část (konkrétně blok
40&times;25&times;2 bajtů) nějakým obsahem.  Výše zmíněný počet bajtů nebyl
zvolen náhodně, protože přesně odpovídá původnímu textovému režimu grafické
karty CGA, konkrétně textovému režimu zobrazujícího na monitoru 40&times;25
znaků se dvěma bajty na znak (kód znaku+atribut). Opět nejdříve vyzkoušíme
režim číslo 0x108, tedy textový režim s&nbsp;osmdesáti znaky na řádku a
šedesáti textovými řádky:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
&nbsp;
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        mov  bx, 0x108             <i>; cislo rezimu</i>
        mov  ax, 0x4f02            <i>; nastaveni grafickeho rezimu</i>
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
&nbsp;
<strong>success</strong>:
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
</pre>

<p>Výsledek by měl vypadat následovně:</p>

*** image ***



<p><a name="k14"></a></p>
<h2 id="k14">14. Pátý demonstrační příklad: tatáž operace, ovšem provedená v&nbsp;odlišném textovém režimu</h2>

<p>Největší počet znaků je možné zobrazit v&nbsp;textovém režimu s&nbsp;číslem
0x10c, který nabízí šedesát textových řádků a celých 132 znaků na řádku (tedy
skoro osm tisíc znaků!) Vyzkoušejme si tedy, jakým způsobem se změní obsah
obrazovky po přepnutí do tohoto textového režimu a nastavení prvních
40&times;25 znaků i jejich atributů:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
&nbsp;
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        mov  bx, 0x10c             <i>; cislo rezimu</i>
        mov  ax, 0x4f02            <i>; nastaveni grafickeho rezimu</i>
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
&nbsp;
<strong>success</strong>:
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
</pre>

<p>Nyní by obrazovka měla vypadat takto:</p>

*** image ***



<p><a name="k15"></a></p>
<h2 id="k15">15. Textový kurzor</h2>

<p>Všechny skutečné (nikoli emulované) textové režimy mají na platformě IBM PC
společné vlastnosti:</p>

<ul>
<li>První stránka textového režimu ve výchozím nastavení začíná na segmentu B800</li>
<li>Každá pozice znaku je uložena ve dvou bajtech; jeden bajt obsahuje kód znaku, druhý bajt jeho atributy</li>
<li>Textový kurzor je řízen hardwarem (nemusí se například vykreslovat jako inverzní znak, pouze se nastavuje jeho pozice)</li>
<li>Blikání kurzoru je řízeno hardwarem (kurzor bude blikat, i když se CPU zcela &bdquo;zasekne&ldquo;)</li>
<li>Tvar kurzoru je řízen hardwarem (lze ovlivnit jen začátek a konec kurzoru ve vertikálním směru)</li>
</ul>

<p>Zaměřme se nyní na způsob řízení tvaru textového kurzoru. Většina SVGA karet
se v&nbsp;tomto ohledu snaží o plnohodnotnou kompatibilitu s&nbsp;původní
grafickou kartou CGA(!) a MDA. A připomeňme si, že srdcem grafické karty CGA
(ale i mnoha dalších grafických video subsystémů té doby) je čip <i>Motorola
6845</i>, zkráceně <i>MC6845</i>. SVGA karty se tedy snaží o emulaci činnosti
tohoto čipu, aby bylo možné textové režimy ovládat stále stejným způsobem. A
tato vlastnost platí i pro nové textové režimy s&nbsp;větším počtem textových
řádků a/nebo sloupců.</p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Řídicí registry čipu MC6845</h2>

<p>Nastavení resp.&nbsp;přesněji řečeno konfigurace grafického řadiče
<i>MC6845</i> se provádělo přes celkem osmnáct osmibitových řídicích registrů.
Některé z&nbsp;těchto registrů byly určeny pro zápis (například registr
s&nbsp;počtem znaků na řádek atd.), jiné zase pro čtení (pozice světelného
pera). Číselné hodnoty, které mohly být větší než 2<sup>8</sup> (což je
počáteční adresa obrazové paměti, adresa kurzoru a adresa světelného pera), se
musely ukládat do dvou sousedních osmibitových registrů.</p>

<p>Registry byly programátorům přístupné nepřímo, konkrétně přes dvojici adres
&ndash; zápis do první adresy vybíral příslušný řídicí registr, čtení či zápis
do druhé adresy (o jedničku vyšší) již vedl ke čtení či zápisu do příslušného
řídicího registru. Díky tomu bylo možné <i>MC6845</i> použít v&nbsp;prakticky
jakémkoli počítačovém systému, a to i v&nbsp;případě, kdy je počet I/O portů
zásadně omezen (teoreticky lze tak zkombinovat MC6845 například
s&nbsp;osmibitovým mikrořadičem 8051). O které adresy oněch dvou registrů se
konkrétně jedná záleželo na zapojení konkrétní grafické karty. Například u
grafické karty <i>CGA</i> se jedná o I/O porty na adresách 0x3d4 a 0x3d5 a u
grafické karty <i>Hercules</i> (taktéž IBM PC) se naopak jednalo o I/O porty
0x3b4 a 0x3b5. Moderní SVGA karty emulují CGA.</p>

<p>Význam jednotlivých řídicích registrů čipu 6845 je uveden v&nbsp;následující
tabulce. Povšimněte si, že jednotkami při udávání horizontálních velikostí jsou
vždy znaky a nikoli pixely &ndash; přesné časování je odvozeno od externího
hodinového signálu řízeného krystalem:</p>

<table>
<tr><th>Číslo registru</th><th>Šířka (b)</th><th>Význam</th></tr>
<tr><td> 0</td><td>8</td><td>celkový počet znaků horizontálně - 1, včetně okrajů (tedy nezobrazených znaků)</td></tr>
<tr><td> 1</td><td>8</td><td>počet horizontálně zobrazených znaků (typicky 40 či 80)</td></tr>
<tr><td> 2</td><td>8</td><td>horizontální pozice synchronizačního signálu (lze tedy posouvat obrazem na monitoru, ovšem omezeně)</td></tr>
<tr><td> 3</td><td>8</td><td>šířka horizontálního synchronizačního signálu (záleží na konkrétním monitoru, řádkové frekvenci atd.)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>7</td><td>celkový počet textových řádků, včetně okrajů (například 27, maximálně však 128)</td></tr>
<tr><td> 5</td><td>5</td><td>mikroposun textových řádků po jednotlivých obrazových řádcích</td></tr>
<tr><td> 6</td><td>7</td><td>zobrazený počet textových řádků (například 25)</td></tr>
<tr><td> 7</td><td>7</td><td>vertikální pozice synchronizačního signálu (lze posouvat obrazem, opět omezeně)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 8</td><td>8</td><td>režim prokládání (interlace) a posunutí</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>5</td><td>počet obrazových řádků pro jeden textový řádek - 1 &ndash; výška znaku (většinou 8 či 14)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>5+2</td><td>začátek hardwarového kurzoru (většinou výška_znaku-3)</td></tr>
<tr><td>11</td><td>5</td><td>konec hardwarového kurzoru (kurzor může mít například výšku dvou obrazových řádků)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>6</td><td>počáteční adresa obrazové paměti (vyšší bajt)</td></tr>
<tr><td>13</td><td>8</td><td>počáteční adresa obrazové paměti (nižší bajt)</td></tr>
<tr><td>14</td><td>6</td><td>adresa kurzoru &ndash; vyšší bajt (klasický posun hardwarového kurzoru)</td></tr>
<tr><td>15</td><td>8</td><td>adresa kurzoru &ndash; nižší bajt</td></tr>
<tr><td>16</td><td>6</td><td>adresa světelného pera &ndash; vyšší bajt</td></tr>
<tr><td>17</td><td>8</td><td>adresa světelného pera &ndash; nižší bajt</td></tr>
</table>



<p><a name="k17"></a></p>
<h2 id="k17">17. Změna tvaru textového kurzoru modifikací HW registrů</h2>

<p>Čip 6845, který je srdcem grafické karty MDA, CGA i Herculesu (a je emulován
moderními SVGA), dokáže posílat signál o tom, že se má zobrazit textový kurzor.
Toto je velmi zajímavá a možná i unikátní funkce, která je ovšem interně řešena
velmi jednoduše. Adresu znaku, na kterém je textový kurzor, je nutné zapsat do
dvou řídicích registrů, konkrétně do registrů R14 a R15. Dále se
v&nbsp;registrech R10 a R11 nachází číslo mikrořádku (v&nbsp;rámci textového
řádku), na kterém se má kurzor zobrazit &ndash; ten je totiž tvořen obdélníkem,
který začíná (v&nbsp;rámci znaku) právě na řádku v&nbsp;R10 a končí na řádku
uloženého v&nbsp;R11 (řekneme, že se jedná o hodnoty 12 a 14 pro znaky vysoké
šestnáct mikrořádků).</p>

<p>Podívejme se nyní na způsob, jakým lze modifikovat tvar textového kurzoru.
Nastavit lze počáteční obrazový řádek (v&nbsp;rámci výšky znaku, takže typicky
v&nbsp;rozsahu 0 až 7 nebo 0 až 15) a koncový obrazový řádek. Oficiálně platí,
že pokud je počáteční řádek větší, než řádek koncový, není kurzor zobrazen,
ovšem existují neoficiální klony CGA, které v&nbsp;tomto případě zobrazí
rozpůlený kurzor (první polovina začíná na řádku 0, druhá polovina končí na
posledním znakovém řádku). Nastavení kurzoru bude vypadat následovně:</p>

<pre>
        mov dx, 0x3d4
        mov al, <strong>0x0a</strong>    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, <strong>0</strong>       <i>; scanline, kde kurzor zacina </i>
        out dx, al
&nbsp;
        mov dx, 0x3d4
        mov al, <strong>0x0b</strong>    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, <strong>5</strong>       <i>; scanline, kde kurzor konci</i>
        out dx, al
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Šestý demonstrační příklad: změna tvaru textového kurzoru</h2>

<p>V&nbsp;dnešním posledním demonstračním příkladu je ukázáno, jakým způsobem
je možné přímou modifikací registrů (dnes již emulovaného) čipu MC6845
dosáhnout změny tvaru textového kurzoru. Nejdříve je provedeno přepnutí do
textového režimu s&nbsp;vyšším počtem znaků, počká se na stisk klávesy, a
posléze se tvar kurzoru změní:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
&nbsp;
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        mov  bx, 0x108             <i>; cislo rezimu</i>
        mov  ax, 0x4f02            <i>; nastaveni grafickeho rezimu</i>
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d4
        mov al, 0x0a    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, 0       <i>; scanline, kde kurzor zacina </i>
        out dx, al
&nbsp;
        mov dx, 0x3d4
        mov al, 0x0b    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, 5       <i>; scanline, kde kurzor konci</i>
        out dx, al
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
</pre>

<p>Screenshoty pořízené před změnou textového kurzoru a po této změně:</p>

*** image ***

*** image ***



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů s&nbsp;256 barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm</a></td></tr>
<tr><td>63</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>64</td><td>vga_gfx_mode_dac_1.asm</td><td>využití DAC (neočekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm</a></td></tr>
<tr><td>65</td><td>vga_gfx_mode_dac_2.asm</td><td>využití DAC (očekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>vga_640x480_putpixel.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
<tr><td>67</td><td>vga_320x200_putpixel_1.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm</a></td></tr>
<tr><td>68</td><td>vga_320x200_putpixel_2.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (rychlejší varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>69</td><td>vga_gfx_mode_dac_3.asm</td><td>přímé využití DAC v&nbsp;grafickém režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>vga_gfx_mode_unchained_step_1.asm</td><td>zobrazení barevných pruhů v&nbsp;režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm</a></td></tr>
<tr><td>71</td><td>vga_gfx_mode_unchained_step_2.asm</td><td>vypnutí zřetězení bitových rovin a změna způsobu adresování pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm</a></td></tr>
<tr><td>72</td><td>vga_gfx_mode_unchained_step_3.asm</td><td>vykreslení barevných pruhů do vybraných bitových rovin</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>73</td><td>vga_gfx_mode_320x400.asm</td><td>nestandardní grafický režim s&nbsp;rozlišením 320&times;400 pixelů a 256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm</a></td></tr>
<tr><td>74</td><td>vga_320x200_image.asm</td><td>zobrazení rastrového obrázku ve standardním grafickém režimu 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm</a></td></tr>
<tr><td>75</td><td>vga_320x200_unchained_image_1.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm</a></td></tr>
<tr><td>76</td><td>vga_320x200_unchained_image_2.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm</a></td></tr>
<tr><td>77</td><td>vga_320x400_unchained_image.asm</td><td>zobrazení rastrového obrázku v&nbsp;nestandardním režimu 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>78</td><td>vga_vertical_scroll_1.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm</a></td></tr>
<tr><td>79</td><td>vga_vertical_scroll_2.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm</a></td></tr>
<tr><td>80</td><td>vga_split_screen_1.asm</td><td>režim split-screen a scrolling, nefunční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm</a></td></tr>
<tr><td>81</td><td>vga_split_screen_2.asm</td><td>režim split-screen a scrolling, plně funkční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm</a></td></tr>
<tr><td>82</td><td>vga_horizontal_scroll_1.asm</td><td>horizontální scrolling bez rozšíření počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm</a></td></tr>
<tr><td>83</td><td>vga_horizontal_scroll_2.asm</td><td>horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm</a></td></tr>
<tr><td>84</td><td>vga_horizontal_scroll_3.asm</td><td>jemný horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>85</td><td>vga_320x240_image.asm</td><td>nastavení grafického režimu Mode-X, načtení a vykreslení obrázku, scrolling</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>io.asm</td><td>knihovna maker pro I/O operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>87</td><td>vga_lib.asm</td><td>knihovna maker a podprogramů pro programování karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm</a></td></tr>
<tr><td>88</td><td>vga_320x240_lib.asm</td><td>nastavení grafického režimu Mode-X, tentokrát knihovními funkcemi</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>89</td><td>vga_bitblt_1.asm</td><td>první (naivní) implementace operace <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm</a></td></tr>
<tr><td>90</td><td>vga_bitblt_2.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm</a></td></tr>
<tr><td>91</td><td>vga_bitblt_3.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro čtení i zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm</a></td></tr>
<tr><td>92</td><td>vga_bitblt_4.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace makry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm</a></td></tr>
<tr><td>93</td><td>vga_bitblt_5.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace podprogramem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>94</td><td>vga_bitblt_rotate.asm</td><td>zápisový režim s&nbsp;rotací bajtu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm</a></td></tr>
<tr><td>95</td><td>vga_bitblt_fast.asm</td><td>rychlá korektní 32bitová operace typu <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm</a></td></tr>
<tr><td>96</td><td>vga_320x400_bitblt_1.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (neúplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm</a></td></tr>
<tr><td>97</td><td>vga_320x400_bitblt_2.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (úplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm</a></td></tr>
<tr><td>98</td><td>vga_write_modes_1.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis bez úpravy latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm</a></td></tr>
<tr><td>99</td><td>vga_write_modes_2.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis s&nbsp;modifikací latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm</a></td></tr>
<tr><td>100</td><td>vga_write_modes_3.asm</td><td>volitelné zápisové režimy grafické karty VGA, cílená modifikace latche vzorkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>101</td><td>instruction_jump.asm</td><td>použití instrukce <strong>JMP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm</a></td></tr>
<tr><td>102</td><td>instruction_jnz.asm</td><td>použití instrukce <strong>JNZ</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm</a></td></tr>
<tr><td>103</td><td>instruction_jz_jmp.asm</td><td>použití instrukcí <strong>JZ</strong> a <strong>JMP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm</a></td></tr>
<tr><td>104</td><td>instruction_loop.asm</td><td>použití instrukce <strong>LOOP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>105</td><td>instruction_template.asm</td><td>šablona všech následujících demonstračních příkladů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm</a></td></tr>
<tr><td>106</td><td>instruction_print_hex.asm</td><td>tisk osmibitové hexadecimální hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm</a></td></tr>
<tr><td>107</td><td>instruction_xlat.asm</td><td>využití instrukce <strong>XLAT</strong> pro získání tisknutelné hexadecimální cifry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td>instruction_daa.asm</td><td>operace součtu s&nbsp;využitím binární i BCD aritmetiky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm</a></td></tr>
<tr><td>109</td><td>instruction_daa_sub.asm</td><td>instrukce <strong>DAA</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>VESA BIOS Extensions<br />
<a href="https://en.wikipedia.org/wiki/VESA_BIOS_Extensions">https://en.wikipedia.org/wiki/VESA_BIOS_Extensions</a>
</li>

<li>Video Electronics Standards Association<br />
<a href="https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association">https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association</a>
</li>

<li>DJGPP (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/DJGPP">https://cs.wikipedia.org/wiki/DJGPP</a>
</li>

<li>DJGPP home page<br />
<a href="http://www.delorie.com/djgpp/">http://www.delorie.com/djgpp/</a>
</li>

<li>DJGPP Zip File Picker<br />
<a href="http://www.delorie.com/djgpp/zip-picker.html">http://www.delorie.com/djgpp/zip-picker.html</a>
</li>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

<li>The LOADALL Instruction by Robert Collins<br />
<a href="https://www.rcollins.org/articles/loadall/tspec_a3_doc.html">https://www.rcollins.org/articles/loadall/tspec_a3_doc.html</a>
</li>

<li>How do you put a 286 in Protected Mode?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode">https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode</a>
</li>

<li>Control register<br />
<a href="https://en.wikipedia.org/wiki/Control_register">https://en.wikipedia.org/wiki/Control_register</a>
</li>

<li>CPU Registers x86<br />
<a href="https://wiki.osdev.org/CPU_Registers_x86">https://wiki.osdev.org/CPU_Registers_x86</a>
</li>

<li>x86 Assembly/Protected Mode<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode">https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode</a>
</li>

<li>MSW: Machine Status Word<br />
<a href="https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html">https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html</a>
</li>

<li>80x87 Floating Point Opcodes<br />
<a href="http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html">http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html</a>
</li>

<li>Page Translation<br />
<a href="https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm">https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm</a>
</li>

<li>80386 Paging and Segmenation<br />
<a href="https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation">https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation</a>
</li>

<li>80386 Memory Management<br />
<a href="https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html">https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html</a>
</li>

<li>DOSEMU<br />
<a href="http://www.dosemu.org/">http://www.dosemu.org/</a>
</li>

<li>Intel 80386, a revolutionary CPU<br />
<a href="https://www.xtof.info/intel80386.html">https://www.xtof.info/intel80386.html</a>
</li>

<li>PAI Unit 3 Paging in 80386 Microporcessor<br />
<a href="https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor">https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor</a>
</li>

<li>64 Terabytes of virtual memory for 32-bit x86 using segmentation: how?<br />
<a href="https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how">https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how</a>
</li>

<li>Pi in the Pentium: reverse-engineering the constants in its floating-point unit<br />
<a href="http://www.righto.com/2025/01/pentium-floating-point-ROM.html">http://www.righto.com/2025/01/pentium-floating-point-ROM.html</a>
</li>

<li>Simply FPU<br />
<a href="http://www.website.masmforum.com/tutorials/fptute/">http://www.website.masmforum.com/tutorials/fptute/</a>
</li>

<li>Art of Assembly language programming: The 80x87 Floating Point Coprocessors<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html</a>
</li>

<li>Art of Assembly language programming: The FPU Instruction Set<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html</a>
</li>

<li>INTEL 80387 PROGRAMMER'S REFERENCE MANUAL<br />
<a href="http://www.ragestorm.net/downloads/387intel.txt">http://www.ragestorm.net/downloads/387intel.txt</a>
</li>

<li>x86 Instruction Set Reference: FLD<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_100.html">http://x86.renejeschke.de/html/file_module_x86_id_100.html</a>
</li>

<li>x86 Instruction Set Reference: FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_101.html">http://x86.renejeschke.de/html/file_module_x86_id_101.html</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>8087 Numeric Data Processor<br />
<a href="https://www.eeeguide.com/8087-numeric-data-processor/">https://www.eeeguide.com/8087-numeric-data-processor/</a>
</li>

<li>Data Types and Instruction Set of 8087 co-processor<br />
<a href="https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/">https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/</a>
</li>

<li>8087 instruction set and examples<br />
<a href="https://studylib.net/doc/5625221/8087-instruction-set-and-examples">https://studylib.net/doc/5625221/8087-instruction-set-and-examples</a>
</li>

<li>GCC documentation: Extensions to the C Language Family<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions">https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions</a>
</li>

<li>GCC documentation: Using Vector Instructions through Built-in Functions<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html">https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html</a>
</li>

<li>SSE (Streaming SIMD Extentions)<br />
<a href="http://www.songho.ca/misc/sse/sse.html">http://www.songho.ca/misc/sse/sse.html</a>
</li>

<li>Timothy A. Chagnon: SSE and SSE2<br />
<a href="http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf">http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf</a>
</li>

<li>Intel corporation: Extending the Worldr's Most Popular Processor Architecture<br />
<a href="http://download.intel.com/technology/architecture/new-instructions-paper.pdf">http://download.intel.com/technology/architecture/new-instructions-paper.pdf</a>
</li>

<li>SIMD architectures:<br />
<a href="http://arstechnica.com/old/content/2000/03/simd.ars/">http://arstechnica.com/old/content/2000/03/simd.ars/</a>
</li>

<li>Tour of the Black Holes of Computing!: Floating Point<br />
<a href="http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt">http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt</a>
</li>

<li>3Dnow! Technology Manual<br />
AMD Inc., 2000</li>

<li>Intel MMX<sup>TM</sup> Technology Overview<br />
Intel corporation, 1996</li>

<li>MultiMedia eXtensions<br />
<a href="http://softpixel.com/~cwright/programming/simd/mmx.php">http://softpixel.com/~cwright/programming/simd/mmx.php</a>i
</li>

<li>AMD K5 ("K5" / "5k86")<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g5K5-c.html">http://www.pcguide.com/ref/cpu/fam/g5K5-c.html</a>
</li>

<li>Sixth Generation Processors<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g6.htm">http://www.pcguide.com/ref/cpu/fam/g6.htm</a>
</li>

<li>Great Microprocessors of the Past and Present<br />
<a href="http://www.cpushack.com/CPU/cpu1.html">http://www.cpushack.com/CPU/cpu1.html</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Very_long_instruction_word">http://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>CPU design (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CPU_design">http://en.wikipedia.org/wiki/CPU_design</a>
</li>

<li>Grafické karty a grafické akcelerátory (14)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/</a>
</li>

<li>Grafické karty a grafické akcelerátory (15)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/</a>
</li>

<li>Grafické karty a grafické akcelerátory (16)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/</a>
</li>

<li>VESA Video Modes<br />
<a href="https://wiki.osdev.org/VESA_Video_Modes">https://wiki.osdev.org/VESA_Video_Modes</a>
</li>

<li>Introduction to VESA programming<br />
<a href="http://www.monstersoft.com/tutorial1/VESA_intro.html">http://www.monstersoft.com/tutorial1/VESA_intro.html</a>
</li>

<li>Guide: VBE 2.0 graphics modes<br />
<a href="https://delorie.com/djgpp/doc/ug/graphics/vbe20.html">https://delorie.com/djgpp/doc/ug/graphics/vbe20.html</a>
</li>

<li>NASM instruction list<br />
<a href="https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html">https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html</a>
</li>

<li>BitBlt function (wingdi.h)<br />
<a href="https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt">https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt</a>
</li>

<li>SetDIBitsToDevice function (wingdi.h)<br />
<a href="https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice">https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice</a>
</li>

<li>Why did line printers have 132 columns?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7838/why-did-line-printers-have-132-columns">https://retrocomputing.stackexchange.com/questions/7838/why-did-line-printers-have-132-columns</a>
</li>

<li>Tabulating machine<br />
<a href="https://en.wikipedia.org/wiki/Tabulating_machine">https://en.wikipedia.org/wiki/Tabulating_machine</a>
</li>

<li>Why do printers print 132 columns on 14 7/8″ paper? It’s history<br />
<a href="https://blog.adafruit.com/2019/01/22/why-do-printers-print-132-columns-on-14-7-8-paper-its-history-vintagecomputing-kenshirriff-ibm/">https://blog.adafruit.com/2019/01/22/why-do-printers-print-132-columns-on-14-7-8-paper-its-history-vintagecomputing-kenshirriff-ibm/</a>
</li>

<li>IBM 1403 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_1403">https://en.wikipedia.org/wiki/IBM_1403</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

