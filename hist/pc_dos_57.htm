<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Výpočty v systému pevné řádové čárky na platformě IBM PC (3. část)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Výpočty v systému pevné řádové čárky na platformě IBM PC (3. část)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Výpočty v&nbsp;systému pevné řádové čárky na platformě IBM PC (3. část)</a></p>
<p><a href="#k02">*** 2. Univerzální algoritmus CORDIC</a></p>
<p><a href="#k03">*** 3. Princip činnosti CORDICu: rotace vektoru okolo počátku souřadného systému</a></p>
<p><a href="#k04">*** 4. Modifikace výpočtu rotace vektoru pro algoritmus CORDIC</a></p>
<p><a href="#k05">5. Náhrada výpočtu tangenty za bitový posun</a></p>
<p><a href="#k06">6. Hodnoty úhlů, po kterých se provádí rotace vektoru</a></p>
<p><a href="#k07">7. Výpočet funkcí sinus a kosinus pomocí algoritmu CORDIC</a></p>
<p><a href="#k08">8. Úplný zdrojový kód programu pro výpočet funkcí <i>sin</i> a <i>cos</i> algoritmem CORDIC</a></p>
<p><a href="#k09">9. Výsledky výpočtů goniometrických funkcí: absolutní a relativní chyby</a></p>
<p><a href="#k10">10. Vizualizace výsledků pro 5, 7 a 10 iterací algoritmu CORDIC</a></p>
<p><a href="#k11">11. Výpočet tangenty s&nbsp;využitím algoritmu CORDIC</a></p>
<p><a href="#k12">12. Demonstrační příklad: realizace výpočtu funkce <i>tan</i></a></p>
<p><a href="#k13">*** 13. Výsledky výpočtů hodnot funkce <i>tan</i></a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Literatura</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Výpočty v&nbsp;systému pevné řádové čárky na platformě IBM PC (3. část)</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Univerzální algoritmus CORDIC</h2>

<p><a href="">V&nbsp;předchozí části</a> <a href="">tohoto seriálu</a> jsme si uvedli stručné informace o algoritmu <strong>CORDIC</strong>, neboli <i><strong>CO</strong>ordinate <strong>RO</strong>tation <strong>DI</strong>gital <strong>C</strong>omputer</i>. Jedná se o výpočetní metodu využívající iteraci, kterou pro účely jednoduchého a rychlého výpočtu goniometrických funkcí bez použití násobiček a děliček navrhl a zpopularizoval Jack Volder už v&nbsp;polovině minulého století (viz literatura uvedená ve <a href="#k20">dvacáté kapitole</a>). Později se ukázalo, že tuto metodu je možné po malých úpravách použít i pro výpočty dalších matematických funkcí, například arkustangenty, arkussinu, arkuskosinu, ale i pro vyčíslení délky vektoru či jeho rychlou rotaci o libovolný úhel; včetně transformace bodu či vektoru z&nbsp;polárních souřadnic do souřadnic kartézských. Již větší úpravy si vyžádala aplikace metody CORDIC pro výpočet hyperbolických funkcí (<i>sinh()</i>, <i>cosh()</i>, <i>tanh()</i>) a funkcí logaritmických, základní myšlenka a princip práce však zůstává stejný.</p>

<p>Vzhledem k&nbsp;tomu, že se při aplikaci algoritmu CORDIC využívají pouze ty nejzákladnější matematické operace (bitový posun doleva a doprava, sečítání, odečítání a porovnání dvou hodnot), je možné CORDIC využít ve všech číslicových systémech, ve kterých je zapotřebí šetřit použitými prostředky, tj.&nbsp;počtem logických hradel, kapacitou obsazené paměti, možnostmi použitých čipů atd.  CORDIC tak byl implementován a s&nbsp;úspěchem používán například v&nbsp;kalkulačkách, osmibitových mikrořadičích (řada Intel 8051 a Motorola 68HC11), osmibitových domácích počítačích (Atari, Sinclair ZX Spectrum atd.) a mnoha specializovaných obvodech vytvořených pomocí programovatelných polí FPGA.</p>

<p>Zajímavá je implementace CORDICu na mikrořadičové stavebnici Basic STAMP. V&nbsp;největší míře však bylo CORDICu využito v&nbsp;některých matematických koprocesorech (FPU), protože bylo zjištěno, že některé funkční bloky zabezpečující chod CORDICu zůstávají stále stejné, bez ohledu na to, jaká funkce je počítána, což do značné míry zjednodušilo (a tím pádem i zlevnilo) výrobu FPU. Samozřejmě se také snížil počet hradel nutných pro implementaci goniometrických, hyperbolických a logaritmických funkcí.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Princip činnosti CORDICu: rotace vektoru okolo počátku souřadného systému</h2>

<p>Princip práce algoritmu CORDIC vychází z&nbsp;vyjádření rotace vektoru o určitý úhel <i>&delta;</i> a z&nbsp;následné úpravy vzorce pro rotaci tak, aby se eliminovaly zbytečně složité a časově náročné multiplikativní operace.  Nejprve si napišme vzorce pro hodnoty funkcí sinus a kosinus součtu dvou úhlů.  Jedná se o známé středoškolské vztahy používané pro úpravu výrazů s&nbsp;goniometrickými funkcemi:</p>

<p><i>sin(&alpha;+&beta;)=sin &alpha; cos &beta; + cos &alpha; sin &beta;</i><br />
<i>cos(&alpha;+&beta;)=cos &alpha; cos &beta; - sin &alpha; sin &beta;</i></p>

<p>Jak si ukážeme o několik odstavců níže, je možné tyto vzorečky použít pro vyjádření rotace vektoru. Vektor <strong>r</strong>, kterým budeme rotovat, může být vyjádřen souřadnicemi <i>[x<sub>0</sub>, y<sub>0</sub>]</i>, přičemž je možné provést převod z&nbsp;kartézských souřadnic do souřadnic polárních:</p>

<p><i>x<sub>0</sub>=r cos &phi;</i><br />
<i>y<sub>0</sub>=r sin &phi;</i></p>

<p>kde <i>r</i> představuje délku vektoru <strong>r</strong> a <i>&phi;</i> je úhel vektoru měřený od kladné horizontální poloosy souřadného systému. Pokud bude vektor <strong>r</strong> rotován o úhel <i>&delta;</i>, změní se koncový bod vektoru tak, že bude ležet na kružnici o stejném poloměru <i>r</i>, ale úhel vektoru (opět měřený od kladné horizontální poloosy) se zvětší o <i>&delta;</i>. Tuto skutečnost je možné vyjádřit vztahy:</p>

<p><i>x<sub>r</sub>=r cos (&phi;+&delta;)</i><br />
<i>y<sub>r</sub>=r sin (&phi;+&delta;)</i></p>

<p>Dále je možné rozepsat výrazy <i>cos (&phi;+&delta;)</i> a <i>sin (&phi;+&delta;)</i> podle prvních dvou uvedených vzorečků a následně zpětně dosadit za výrazy <i>r cos &phi;</i> a <i>r sin &phi;</i> původní souřadnice vektoru <strong>r</strong>, tj.&nbsp;<i>x<sub>0</sub></i> a <i>y<sub>0</sub></i>:</p>

<p><i>x<sub>r</sub>=r (cos &phi; cos &delta; - sin &phi; sin &delta;)=x<sub>0</sub> cos &delta; - y<sub>0</sub> sin &delta;</i><br />
<i>y<sub>r</sub>=r (sin &phi; cos &delta; + cos &phi; sin &delta;)=x<sub>0</sub> sin &delta; + y<sub>0</sub> cos &delta;</i></p>

<p>Všimněte si, že se ve výsledných vztazích nevyskytuje ani hodnota <i>r</i> ani úhel původního vektoru <i>&phi;</i>. To znamená, že převod na polární souřadnice pro nás byl pouze matematickou pomůckou při odvozování vzorce pro rotaci a ve skutečnosti se nebude nikdy provádět.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Modifikace výpočtu rotace vektoru pro algoritmus CORDIC</h2>

<p>V&nbsp;<a href="#k03">předchozí kapitole</a> jsme si odvodili, že rotaci jakéhokoli vektoru o úhel <i>&delta;</i> je možné zapsat pomocí vztahů:</p>

<p><i>x<sub>r</sub>=x<sub>0</sub> cos &delta; - y<sub>0</sub> sin &delta;</i><br />
<i>y<sub>r</sub>=x<sub>0</sub> sin &delta; + y<sub>0</sub> cos &delta;</i></p>

<p>Pro účely algoritmu CORDIC se tento vztah dále upravuje. První úprava spočívá v&nbsp;tom, že se obě rovnice vydělí hodnotou <i>cos &delta;</i>, takže dostaneme vztahy:</p>

<p><i>x<sub>r</sub> /cos &delta;=x<sub>0</sub> - y<sub>0</sub> sin &delta;/cos &delta;</i><br />
<i>y<sub>r</sub> /cos &delta;=x<sub>0</sub> sin &delta;/cos &delta; + y<sub>0</sub></i></p>

<p>Pokud si uvědomíme skutečnost, že <i>sin &delta;/cos &delta;=tan &delta;</i>, můžeme pokračovat v&nbsp;úpravách:</p>

<p><i>x<sub>r</sub> /cos &delta;=x<sub>0</sub> - y<sub>0</sub> tan &delta;</i><br />
<i>y<sub>r</sub> /cos &delta;=y<sub>0</sub> + x<sub>0</sub> tan &delta;</i></p>

<p>a následně:</p>

<p><i>x<sub>r</sub>=cos &delta;(x<sub>0</sub> - y<sub>0</sub> tan &delta;)</i><br />
<i>y<sub>r</sub>=cos &delta;(y<sub>0</sub> + x<sub>0</sub> tan &delta;)</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Náhrada výpočtu tangenty za bitový posun</h2>

<p>Nyní přichází základní myšlenka, na které je CORDIC postaven. Pokud budeme
volit úhel <i>&delta;</i> takovým vhodným způsobem, aby jeho tangenta nabývala
hodnot <i>2<sup>-i</sup></i> (pro <i>i&gt;0</i>), je možné tangentu ve vzorci
nahradit násobením zvolenou hodnotou <i>2<sup>-i</sup></i>; v&nbsp;tomto
případě je však možné násobení nahradit jednoduchým a přitom rychlým bitovým
posunem. Omezení hodnoty tangenty na zvolenou sadu hodnot však znamená, že se
vektor nemůže rotovat o libovolný úhel, ale pouze o úhel odpovídající tangentě
z&nbsp;dané sady. To však není v&nbsp;praxi problém, protože rotaci o libovolný
je možné zapsat pomocí série rotací (doprava či doleva), například:</p>

<p><i>&delta;=&delta;<sub>1</sub>+&delta;<sub>2</sub>-&delta;<sub>3</sub>+...</i></p>

<p>Naproti tomu, že se parciální rotace mohou provádět v&nbsp;obou směrech
(tj.&nbsp;jak doprava, tak i doleva), můžeme místo hodnoty <i>cos &delta;</i>
dosadit konstantu <i>K<sub>i</sub></i>, protože platí <i>cos &delta;=cos
-&delta;</i>. Nakonec místo <i>tan &delta;</i> přímo dosadíme mocninu dvojky
<i>2<sup>-i</sup></i> a s&nbsp;využitím parametru <i>d<sub>i</sub></i> směr
rotace (parametr <i>d<sub>i</sub></i> nabývá pouze hodnot +1 a -1):</p>

<p><i>x<sub>r</sub>=K<sub>i</sub> (x<sub>0</sub> - y<sub>0</sub> d<sub>i</sub> 2<sup>-i</sup>)</i><br />
<i>y<sub>r</sub>=K<sub>i</sub> (y<sub>0</sub> + x<sub>0</sub> d<sub>i</sub> 2<sup>-i</sup>)</i></p>

<p>Zbývá nám zjistit hodnotu konstanty <i>K<sub>i</sub></i>. Platí:</p>

<p><i>K<sub>i</sub>=cos (arctan 2<sup>-i</sup>)=1/(1+2<sup>-2i</sup>)<sup>1/2</sup></i></p>

<p>Limitně se součin hodnot <i>K<sub>i</sub></i> (po nekonečně mnoha iteracích)
blíží k&nbsp;<strong>0,6073</strong>, to znamená, že touto hodnotou bude
v&nbsp;některých případech nutné vydělit výsledek (v&nbsp;jiných případech nám
naopak toto <i>zesílení</i> při rotaci vadit nebude, protože se například
vyruší podílem).</p>

<p>Veškerá práce algoritmu CORDIC spočívá v&nbsp;tom, že se nastaví počáteční
souřadnice vektoru <strong>r</strong> a iterativně se provádí rotace o předem
známé úhly <i>&delta;<sub>1</sub>...&delta;<sub>n</sub></i> tak, aby se dosáhlo
požadované hodnoty rotace <i>&delta;</i>.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Hodnoty úhlů, po kterých se provádí rotace vektoru</h2>

<p>Jak jsme si již uvedli v&nbsp;<a href="#k05">předchozí kapitole</a>, musí
tangenty úhlů použitých v&nbsp;algoritmu <i>CORDIC</i> splňovat podmínku <i>tan
&delta;=2<sup>-i</sup></i> (pro celočíselné hodnoty <i>i</i>). V&nbsp;případě,
že budeme veškeré výpočty provádět v&nbsp;prvním kvadrantu (ve skutečnosti je
však snadné počítat i ve čtvrtém kvadrantu), začíná se s&nbsp;úhlem 45&deg;,
tj.&nbsp;&pi;/4, protože <i>tan &pi;/4=1</i>. Další úhly použité při výpočtech
jsou samozřejmě menší. O jaké hodnoty se v&nbsp;algoritmu CORDIC konkrétně
jedná, nám dá přehled následující jednoduchý program:</p>

<pre>
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
&nbsp;
#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif
&nbsp;
int <strong>main</strong>(void)
{
    double tan_value=1.0;
    double delta;
    int i;
    for (i=0; i&lt;10; i++) {
        delta=atan(tan_value)*180.0/M_PI;
        printf("%d\t%12.10f\t%12.9f\n", i+1, tan_value, delta);
        tan_value/=2.0;
    }
    return 0;
}
</pre>

<p>Výsledek běhu tohoto programu nám ukazuje, že se hodnoty úhlů postupně
(logicky) zmenšují a to vždy na více než polovinu předchozí hodnoty (například
45/2&lt;26 nebo 26/2&lt;14). Z&nbsp;toho také vyplývá, že jakýkoli úhel
v&nbsp;prvním a čtvrtém kvadrantu je opravdu možné složit ze součtu těchto úhlů
(musíme je samozřejmě vhodně vybrat). Ideální by sice byly hodnoty odpovídající
přesně polovině hodnoty úhlu předchozího, tj.&nbsp;řada úhlů 45&deg;,
45/2&deg;, 45/4&deg;..., tím by se však porušila podmínka <i>tan
&delta;=2<sup>-i</sup></i>, díky níž je algoritmus CORDIC tak rychlý a přitom
implementačně velmi jednoduchý:</p>

<table>
<tr><th>i</th><th>2<sup>1-i</sup></th><th>úhel &delta;</th></tr>
<tr><td>1 </td><td>1.0000000000</td><td>45.000000000&deg;</td></tr>
<tr><td>2 </td><td>0.5000000000</td><td>26.565051177&deg;</td></tr>
<tr><td>3 </td><td>0.2500000000</td><td>14.036243468&deg;</td></tr>
<tr><td>4 </td><td>0.1250000000</td><td> 7.125016349&deg;</td></tr>
<tr><td>5 </td><td>0.0625000000</td><td> 3.576334375&deg;</td></tr>
<tr><td>6 </td><td>0.0312500000</td><td> 1.789910608&deg;</td></tr>
<tr><td>7 </td><td>0.0156250000</td><td> 0.895173710&deg;</td></tr>
<tr><td>8 </td><td>0.0078125000</td><td> 0.447614171&deg;</td></tr>
<tr><td>9 </td><td>0.0039062500</td><td> 0.223810500&deg;</td></tr>
<tr><td>10</td><td>0.0019531250</td><td> 0.111905677&deg;</td></tr>
</table>



<p><a name="k07"></a></p>
<h2 id="k07">7. Výpočet funkcí sinus a kosinus pomocí algoritmu CORDIC</h2>

<p>Nyní si konečně na reálném příkladu ukážeme, jakým způsobem je možné
algoritmus <i>CORDIC</i> použít pro výpočet hodnot goniometrických funkcí sinus
a kosinus pro zadaný vstupní úhel. Nejprve jsou spočteny tabulky úhlů a hodnota
druhých záporných mocnin hodnoty 2 (viz též <a href="#k06">předchozí
kapitolu</a>). Při implementaci CORDICu na FPU či FPGA by se tyto tabulky
samozřejmě znovu nevytvářely: tabulka úhlů by byla uložena v&nbsp;paměti (či
masce obvodu) a tabulka mocnin hodnoty 2 by se triviálně implementovala pomocí
bitových posunů:</p>

<pre>
<i>// tabulka arkustangentu úhlů</i>
double atans[MAX_ITER];
&nbsp;
<i>// tabulka záporných celočíselných mocnin hodnoty 2</i>
double pows[MAX_ITER];
&nbsp;
<i>// naplnění tabulek atans[] a pows[]</i>
void <strong>createTables</strong>(void) {
    int i;
    for (i = 0; i &lt; MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = atan(p);
        pows[i] = p;
    }
}
</pre>

<p>Po konstrukci a naplnění tabulek je již možné algoritmus CORDIC spustit.
Počáteční souřadnice vektoru <strong>r</strong> jsou nastaveny na hodnotu
<i>[1, 0]</i>:</p>

<pre>
<i>// výpočet funkcí sin() a cos() pro zadaný úhel delta</i>
void <strong>sincos</strong>(double delta, double *sin_value, double *cos_value) {
    int i;
    double x0 = 1.0; <i>// nastavení počátečních podmínek</i>
    double y0 = 0.0;
    ...
    ...
    ...
</pre>

<p>Vektor je posléze v&nbsp;iterační smyčce rotován tak dlouho, dokud
neproběhne daný počet iterací. Úhel vektoru <strong>r</strong> se přitom
neustále přibližuje k&nbsp;zadanému úhlu <i>&delta;</i>, jelikož se
v&nbsp;iterační smyčce adaptivně zadaný úhel buď zmenšuje či zvětšuje o hodnotu
uloženou v&nbsp;tabulce <i>atans[]</i>:</p>

<pre>
    double xn;
    for (i = 0; i &lt; MAX_ITER; i++) { <i>// iterační smyčka</i>
        if (delta &lt; 0) {             <i>// úhel je záporný =&gt; rotace doleva</i>
            xn = x0 + y0 * pows[i];
            y0 -= x0 * pows[i];
            delta += atans[i];
        } else { <i>// úhel je kladný =&gt; rotace doprava</i>
            xn = x0 - y0 * pows[i];
            y0 += x0 * pows[i];
            delta -= atans[i];
        }
        x0 = xn;
    }
    ...
    ...
    ...
</pre>

<p>Výsledek, tj.&nbsp;hodnoty funkcí sinus a kosinus, je uložen v&nbsp;nových
souřadnicích vektoru <strong>r</strong> (vynásobený o konstantu K) a to
z&nbsp;toho důvodu, že vektor rotoval na jednotkové kružnici a souřadnice
jakéhokoli bodu ležícího na jednotkové kružnici přímo odpovídají hodnotám sinu
a kosinu úhlu tohoto bodu počítaného od kladné horizontální poloosy:</p>

<pre>
    *sin_value = y0 * K; <i>// opravit "zesílení" výsledku</i>
    *cos_value = x0 * K;
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Úplný zdrojový kód programu pro výpočet funkcí <i>sin</i> a <i>cos</i> algoritmem CORDIC</h2>

<p>Celý program, který vypočte tabulku hodnot funkcí <i>sin</i> a <i>cos</i>
s&nbsp;využitím algoritmu CORDIC a následně ještě vyjádří absolutní a relativní
chyby výpočtu, vypadá následovně:</p>

<pre>
<i>// --------------------------------------------------------</i>
<i>// Výpočet hodnot funkcí sin() a cos() pomocí iteračního</i>
<i>// algoritmu CORDIC.</i>
<i>// --------------------------------------------------------</i>
&nbsp;
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
&nbsp;
#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif
&nbsp;
<i>// maximální počet iterací při běhu algoritmu</i>
#define MAX_ITER 10
&nbsp;
<i>// "zesílení" při rotacích</i>
#define K 0.6073
&nbsp;
<i>// tabulka arkustangentu úhlů</i>
double atans[MAX_ITER];
&nbsp;
<i>// tabulka záporných celočíselných mocnin hodnoty 2</i>
double pows[MAX_ITER];
&nbsp;
<i>// naplnění tabulek atans[] a pows[]</i>
void <strong>createTables</strong>(void) {
    int i;
    for (i = 0; i &lt; MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = atan(p);
        pows[i] = p;
    }
}
&nbsp;
<i>// výpočet funkcí sin() a cos() pro zadaný úhel delta</i>
void <strong>sincos</strong>(double delta, double *sin_value, double *cos_value) {
    int i;
    double x0 = 1.0; <i>// nastavení počátečních podmínek</i>
    double y0 = 0.0;
    double xn;
    for (i = 0; i &lt; MAX_ITER; i++) { <i>// iterační smyčka</i>
        if (delta &lt; 0) {             <i>// úhel je záporný =&gt; rotace doleva</i>
            xn = x0 + y0 * pows[i];
            y0 -= x0 * pows[i];
            delta += atans[i];
        } else { <i>// úhel je kladný =&gt; rotace doprava</i>
            xn = x0 - y0 * pows[i];
            y0 += x0 * pows[i];
            delta -= atans[i];
        }
        x0 = xn;
    }
    *sin_value = y0 * K; <i>// opravit "zesílení" výsledku</i>
    *cos_value = x0 * K;
}
&nbsp;
int <strong>main</strong>(void) {
    int i;
    createTables();
    for (i = 0; i &lt;= 90; i++) { <i>// výpočetní smyčka</i>
        double delta;           <i>// úhel, ze kterého se počítá sin a cos</i>
        double sin_value;          <i>// vypočtené hodnoty</i>
        double cos_value;
        double sin_error; <i>// absolutní chyby</i>
        double cos_error;
        delta = i * M_PI / 180.0;           <i>// převod úhlu na radiány</i>
        sincos(delta, &amp;sin_value, &amp;cos_value);    <i>// výpočet sinu a kosinu</i>
        sin_error = fabs(sin_value - sin(delta)); <i>// výpočet absolutních chyb</i>
        cos_error = fabs(cos_value - cos(delta));
        <i>// tisk výsledků</i>
        printf("%02d\t%12.10f\t%12.10f\t%12.10f\t%12.10f\t%8.3f%%\t%8.3f%%\n",
               i,
               sin_value,
               cos_value,
               sin_error,
               cos_error,
               (sin_value != 0.0) ? 100.0 * sin_error / fabs(sin_value) : 0.0,
               (cos_value != 0.0) ? 100.0 * cos_error / fabs(cos_value) : 0.0);
    }
    return 0;
}
&nbsp;
<i>// finito</i>
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Výsledky výpočtů goniometrických funkcí: absolutní a relativní chyby</h2>

<p>Výsledek běhu <a href="#k08">předchozího programu</a> je zobrazen
v&nbsp;následující tabulce. Kromě vypočtených hodnot sinů a kosinů zadaného
úhlu je spočtena i absolutní a relativní chyba, přičemž je zapotřebí upozornit
na to, že relativní chyba pro obě krajní hodnoty (ty by měly vyjít nulové) je
poněkud zavádějící. V&nbsp;každém případě však výsledky běhu algoritmu pro
deset iterací nejsou špatné, zvláště když si uvědomíme, že se v&nbsp;každé
iteraci provádělo pouze několik základních operací, konkrétně dva bitové posuvy
a tři součty (či rozdíly):</p>

<table>
<tr><th>vstupní</th><th>vypočtená hodnota</th><th>vypočtená hodnota</th><th>absolutní chyba</th><th>absolutní chyba</th><th>relativní chyba</th><th>relativní chyba</th></tr>
<tr><th>úhel</th><th>sin()</th><th>cos()</th><th>sin()</th><th>cos()</th><th>sin()</th><th>cos()</th></tr>
<tr><td>00</td><td>0.0011726802</td><td>1.0000761814</td><td>0.0011726802</td><td>0.0000761814</td><td>100.000%</td><td>0.008%</td></tr>
<tr><td>01</td><td>0.0167806202</td><td>0.9999360752</td><td>0.0006717863</td><td>0.0000883801</td><td>  4.003%</td><td>0.009%</td></tr>
<tr><td>02</td><td>0.0363058568</td><td>0.9994176447</td><td>0.0014063601</td><td>0.0000268177</td><td>  3.874%</td><td>0.003%</td></tr>
<tr><td>03</td><td>0.0519144682</td><td>0.9987285075</td><td>0.0004214880</td><td>0.0000989728</td><td>  0.812%</td><td>0.010%</td></tr>
<tr><td>04</td><td>0.0714093909</td><td>0.9975241564</td><td>0.0016529171</td><td>0.0000398938</td><td>  2.315%</td><td>0.004%</td></tr>
<tr><td>05</td><td>0.0858859660</td><td>0.9963821278</td><td>0.0012697767</td><td>0.0001874297</td><td>  1.478%</td><td>0.019%</td></tr>
<tr><td>06</td><td>0.1053286152</td><td>0.9945147694</td><td>0.0008001519</td><td>0.0000071260</td><td>  0.760%</td><td>0.001%</td></tr>
<tr><td>07</td><td>0.1208522102</td><td>0.9927479474</td><td>0.0010171332</td><td>0.0002017957</td><td>  0.842%</td><td>0.020%</td></tr>
<tr><td>08</td><td>0.1401999641</td><td>0.9902008452</td><td>0.0010268631</td><td>0.0000672235</td><td>  0.732%</td><td>0.007%</td></tr>
<tr><td>09</td><td>0.1556537948</td><td>0.9878894877</td><td>0.0007806702</td><td>0.0002011471</td><td>  0.502%</td><td>0.020%</td></tr>
<tr><td>10</td><td>0.1749154013</td><td>0.9846615389</td><td>0.0012672237</td><td>0.0001462141</td><td>  0.724%</td><td>0.015%</td></tr>
<tr><td>11</td><td>0.1902784482</td><td>0.9818084619</td><td>0.0005305471</td><td>0.0001812785</td><td>  0.279%</td><td>0.018%</td></tr>
<tr><td>12</td><td>0.2092807371</td><td>0.9779342089</td><td>0.0013690463</td><td>0.0002133919</td><td>  0.654%</td><td>0.022%</td></tr>
<tr><td>13</td><td>0.2245344811</td><td>0.9745450275</td><td>0.0004165732</td><td>0.0001749627</td><td>  0.186%</td><td>0.018%</td></tr>
<tr><td>14</td><td>0.2435223655</td><td>0.9699745364</td><td>0.0016004699</td><td>0.0003211899</td><td>  0.657%</td><td>0.033%</td></tr>
<tr><td>15</td><td>0.2586475676</td><td>0.9660513338</td><td>0.0001714775</td><td>0.0001255075</td><td>  0.066%</td><td>0.013%</td></tr>
<tr><td>16</td><td>0.2774481762</td><td>0.9608206145</td><td>0.0018108204</td><td>0.0004410814</td><td>  0.653%</td><td>0.046%</td></tr>
<tr><td>17</td><td>0.2924243921</td><td>0.9563690285</td><td>0.0000526874</td><td>0.0000642725</td><td>  0.018%</td><td>0.007%</td></tr>
<tr><td>18</td><td>0.3073310520</td><td>0.9516834391</td><td>0.0016859423</td><td>0.0006269228</td><td>  0.549%</td><td>0.066%</td></tr>
<tr><td>19</td><td>0.3251452218</td><td>0.9457453825</td><td>0.0004229326</td><td>0.0002268069</td><td>  0.130%</td><td>0.024%</td></tr>
<tr><td>20</td><td>0.3435512762</td><td>0.9392157709</td><td>0.0015311329</td><td>0.0004768498</td><td>  0.446%</td><td>0.051%</td></tr>
<tr><td>21</td><td>0.3581836921</td><td>0.9337334665</td><td>0.0001842574</td><td>0.0001530400</td><td>  0.051%</td><td>0.016%</td></tr>
<tr><td>22</td><td>0.3763350045</td><td>0.9265666237</td><td>0.0017284111</td><td>0.0006172309</td><td>  0.459%</td><td>0.067%</td></tr>
<tr><td>23</td><td>0.3907657879</td><td>0.9205736488</td><td>0.0000346594</td><td>0.0000687953</td><td>  0.009%</td><td>0.007%</td></tr>
<tr><td>24</td><td>0.4050994316</td><td>0.9143567106</td><td>0.0016372115</td><td>0.0008112530</td><td>  0.404%</td><td>0.089%</td></tr>
<tr><td>25</td><td>0.4228792420</td><td>0.9062708704</td><td>0.0002609802</td><td>0.0000369167</td><td>  0.062%</td><td>0.004%</td></tr>
<tr><td>26</td><td>0.4368623186</td><td>0.8996138385</td><td>0.0015088282</td><td>0.0008197922</td><td>  0.345%</td><td>0.091%</td></tr>
<tr><td>27</td><td>0.4543481744</td><td>0.8909104782</td><td>0.0003576747</td><td>0.0000960460</td><td>  0.079%</td><td>0.011%</td></tr>
<tr><td>28</td><td>0.4682106568</td><td>0.8837038670</td><td>0.0012609060</td><td>0.0007562742</td><td>  0.269%</td><td>0.086%</td></tr>
<tr><td>29</td><td>0.4853645826</td><td>0.8743997745</td><td>0.0005549624</td><td>0.0002199326</td><td>  0.114%</td><td>0.025%</td></tr>
<tr><td>30</td><td>0.4989670003</td><td>0.8667096840</td><td>0.0010329997</td><td>0.0006842803</td><td>  0.207%</td><td>0.079%</td></tr>
<tr><td>31</td><td>0.5157967696</td><td>0.8568006981</td><td>0.0007586947</td><td>0.0003666026</td><td>  0.147%</td><td>0.043%</td></tr>
<tr><td>32</td><td>0.5291205039</td><td>0.8486372819</td><td>0.0007987604</td><td>0.0005891857</td><td>  0.151%</td><td>0.069%</td></tr>
<tr><td>33</td><td>0.5446674419</td><td>0.8387437758</td><td>0.0000284069</td><td>0.0000732079</td><td>  0.005%</td><td>0.009%</td></tr>
<tr><td>34</td><td>0.5577055299</td><td>0.8301314870</td><td>0.0014873735</td><td>0.0010939144</td><td>  0.267%</td><td>0.132%</td></tr>
<tr><td>35</td><td>0.5738098078</td><td>0.8190824429</td><td>0.0002333714</td><td>0.0000696014</td><td>  0.041%</td><td>0.008%</td></tr>
<tr><td>36</td><td>0.5865371490</td><td>0.8100172323</td><td>0.0012481033</td><td>0.0010002379</td><td>  0.213%</td><td>0.123%</td></tr>
<tr><td>37</td><td>0.6022307543</td><td>0.7984183504</td><td>0.0004157312</td><td>0.0002171596</td><td>  0.069%</td><td>0.027%</td></tr>
<tr><td>38</td><td>0.6146302652</td><td>0.7889127841</td><td>0.0010312101</td><td>0.0009020305</td><td>  0.168%</td><td>0.114%</td></tr>
<tr><td>39</td><td>0.6299202599</td><td>0.7767587849</td><td>0.0005998689</td><td>0.0003871766</td><td>  0.095%</td><td>0.050%</td></tr>
<tr><td>40</td><td>0.6418729918</td><td>0.7669112114</td><td>0.0009146178</td><td>0.0008667682</td><td>  0.142%</td><td>0.113%</td></tr>
<tr><td>41</td><td>0.6567280845</td><td>0.7542293861</td><td>0.0006690555</td><td>0.0004801942</td><td>  0.102%</td><td>0.064%</td></tr>
<tr><td>42</td><td>0.6684306187</td><td>0.7438778473</td><td>0.0006999876</td><td>0.0007330218</td><td>  0.105%</td><td>0.099%</td></tr>
<tr><td>43</td><td>0.6828308344</td><td>0.7306817333</td><td>0.0008324743</td><td>0.0006719683</td><td>  0.122%</td><td>0.092%</td></tr>
<tr><td>44</td><td>0.6941513412</td><td>0.7199358716</td><td>0.0005070292</td><td>0.0005960713</td><td>  0.073%</td><td>0.083%</td></tr>
<tr><td>45</td><td>0.7062435465</td><td>0.7080775359</td><td>0.0008632347</td><td>0.0009707547</td><td>  0.122%</td><td>0.137%</td></tr>
<tr><td>46</td><td>0.7199358716</td><td>0.6941513412</td><td>0.0005960713</td><td>0.0005070292</td><td>  0.083%</td><td>0.073%</td></tr>
<tr><td>47</td><td>0.7306817333</td><td>0.6828308344</td><td>0.0006719683</td><td>0.0008324743</td><td>  0.092%</td><td>0.122%</td></tr>
<tr><td>48</td><td>0.7438778473</td><td>0.6684306187</td><td>0.0007330218</td><td>0.0006999876</td><td>  0.099%</td><td>0.105%</td></tr>
<tr><td>49</td><td>0.7542293861</td><td>0.6567280845</td><td>0.0004801942</td><td>0.0006690555</td><td>  0.064%</td><td>0.102%</td></tr>
<tr><td>50</td><td>0.7669112114</td><td>0.6418729918</td><td>0.0008667682</td><td>0.0009146178</td><td>  0.113%</td><td>0.142%</td></tr>
<tr><td>51</td><td>0.7767587849</td><td>0.6299202599</td><td>0.0003871766</td><td>0.0005998689</td><td>  0.050%</td><td>0.095%</td></tr>
<tr><td>52</td><td>0.7889127841</td><td>0.6146302652</td><td>0.0009020305</td><td>0.0010312101</td><td>  0.114%</td><td>0.168%</td></tr>
<tr><td>53</td><td>0.7984183504</td><td>0.6022307543</td><td>0.0002171596</td><td>0.0004157312</td><td>  0.027%</td><td>0.069%</td></tr>
<tr><td>54</td><td>0.8100172323</td><td>0.5865371490</td><td>0.0010002379</td><td>0.0012481033</td><td>  0.123%</td><td>0.213%</td></tr>
<tr><td>55</td><td>0.8190824429</td><td>0.5738098078</td><td>0.0000696014</td><td>0.0002333714</td><td>  0.008%</td><td>0.041%</td></tr>
<tr><td>56</td><td>0.8301314870</td><td>0.5577055299</td><td>0.0010939144</td><td>0.0014873735</td><td>  0.132%</td><td>0.267%</td></tr>
<tr><td>57</td><td>0.8387437758</td><td>0.5446674419</td><td>0.0000732079</td><td>0.0000284069</td><td>  0.009%</td><td>0.005%</td></tr>
<tr><td>58</td><td>0.8486372819</td><td>0.5291205039</td><td>0.0005891857</td><td>0.0007987604</td><td>  0.069%</td><td>0.151%</td></tr>
<tr><td>59</td><td>0.8568006981</td><td>0.5157967696</td><td>0.0003666026</td><td>0.0007586947</td><td>  0.043%</td><td>0.147%</td></tr>
<tr><td>60</td><td>0.8667096840</td><td>0.4989670003</td><td>0.0006842803</td><td>0.0010329997</td><td>  0.079%</td><td>0.207%</td></tr>
<tr><td>61</td><td>0.8743997745</td><td>0.4853645826</td><td>0.0002199326</td><td>0.0005549624</td><td>  0.025%</td><td>0.114%</td></tr>
<tr><td>62</td><td>0.8837038670</td><td>0.4682106568</td><td>0.0007562742</td><td>0.0012609060</td><td>  0.086%</td><td>0.269%</td></tr>
<tr><td>63</td><td>0.8909104782</td><td>0.4543481744</td><td>0.0000960460</td><td>0.0003576747</td><td>  0.011%</td><td>0.079%</td></tr>
<tr><td>64</td><td>0.8996138385</td><td>0.4368623186</td><td>0.0008197922</td><td>0.0015088282</td><td>  0.091%</td><td>0.345%</td></tr>
<tr><td>65</td><td>0.9062708704</td><td>0.4228792420</td><td>0.0000369167</td><td>0.0002609802</td><td>  0.004%</td><td>0.062%</td></tr>
<tr><td>66</td><td>0.9143567106</td><td>0.4050994316</td><td>0.0008112530</td><td>0.0016372115</td><td>  0.089%</td><td>0.404%</td></tr>
<tr><td>67</td><td>0.9205736488</td><td>0.3907657879</td><td>0.0000687953</td><td>0.0000346594</td><td>  0.007%</td><td>0.009%</td></tr>
<tr><td>68</td><td>0.9265666237</td><td>0.3763350045</td><td>0.0006172309</td><td>0.0017284111</td><td>  0.067%</td><td>0.459%</td></tr>
<tr><td>69</td><td>0.9337334665</td><td>0.3581836921</td><td>0.0001530400</td><td>0.0001842574</td><td>  0.016%</td><td>0.051%</td></tr>
<tr><td>70</td><td>0.9392157709</td><td>0.3435512762</td><td>0.0004768498</td><td>0.0015311329</td><td>  0.051%</td><td>0.446%</td></tr>
<tr><td>71</td><td>0.9457453825</td><td>0.3251452218</td><td>0.0002268069</td><td>0.0004229326</td><td>  0.024%</td><td>0.130%</td></tr>
<tr><td>72</td><td>0.9516834391</td><td>0.3073310520</td><td>0.0006269228</td><td>0.0016859423</td><td>  0.066%</td><td>0.549%</td></tr>
<tr><td>73</td><td>0.9563690285</td><td>0.2924243921</td><td>0.0000642725</td><td>0.0000526874</td><td>  0.007%</td><td>0.018%</td></tr>
<tr><td>74</td><td>0.9608206145</td><td>0.2774481762</td><td>0.0004410814</td><td>0.0018108204</td><td>  0.046%</td><td>0.653%</td></tr>
<tr><td>75</td><td>0.9660513338</td><td>0.2586475676</td><td>0.0001255075</td><td>0.0001714775</td><td>  0.013%</td><td>0.066%</td></tr>
<tr><td>76</td><td>0.9699745364</td><td>0.2435223655</td><td>0.0003211899</td><td>0.0016004699</td><td>  0.033%</td><td>0.657%</td></tr>
<tr><td>77</td><td>0.9745450275</td><td>0.2245344811</td><td>0.0001749627</td><td>0.0004165732</td><td>  0.018%</td><td>0.186%</td></tr>
<tr><td>78</td><td>0.9779342089</td><td>0.2092807371</td><td>0.0002133919</td><td>0.0013690463</td><td>  0.022%</td><td>0.654%</td></tr>
<tr><td>79</td><td>0.9818084619</td><td>0.1902784482</td><td>0.0001812785</td><td>0.0005305471</td><td>  0.018%</td><td>0.279%</td></tr>
<tr><td>80</td><td>0.9846615389</td><td>0.1749154013</td><td>0.0001462141</td><td>0.0012672237</td><td>  0.015%</td><td>0.724%</td></tr>
<tr><td>81</td><td>0.9878894877</td><td>0.1556537948</td><td>0.0002011471</td><td>0.0007806702</td><td>  0.020%</td><td>0.502%</td></tr>
<tr><td>82</td><td>0.9902008452</td><td>0.1401999641</td><td>0.0000672235</td><td>0.0010268631</td><td>  0.007%</td><td>0.732%</td></tr>
<tr><td>83</td><td>0.9927479474</td><td>0.1208522102</td><td>0.0002017957</td><td>0.0010171332</td><td>  0.020%</td><td>0.842%</td></tr>
<tr><td>84</td><td>0.9945147694</td><td>0.1053286152</td><td>0.0000071260</td><td>0.0008001519</td><td>  0.001%</td><td>0.760%</td></tr>
<tr><td>85</td><td>0.9963821278</td><td>0.0858859660</td><td>0.0001874297</td><td>0.0012697767</td><td>  0.019%</td><td>1.478%</td></tr>
<tr><td>86</td><td>0.9975241564</td><td>0.0714093909</td><td>0.0000398938</td><td>0.0016529171</td><td>  0.004%</td><td>2.315%</td></tr>
<tr><td>87</td><td>0.9987285075</td><td>0.0519144682</td><td>0.0000989728</td><td>0.0004214880</td><td>  0.010%</td><td>0.812%</td></tr>
<tr><td>88</td><td>0.9994176447</td><td>0.0363058568</td><td>0.0000268177</td><td>0.0014063601</td><td>  0.003%</td><td>3.874%</td></tr>
<tr><td>89</td><td>0.9999360752</td><td>0.0167806202</td><td>0.0000883801</td><td>0.0006717863</td><td>  0.009%</td><td>4.003%</td></tr>
<tr><td>90</td><td>1.0000761814</td><td>0.0011726802</td><td>0.0000761814</td><td>0.0011726802</td><td>  0.008%</td><td>100.000%</td></tr>
</table>



<p><a name="k10"></a></p>
<h2 id="k10">10. Vizualizace výsledků pro 5, 7 a 10 iterací algoritmu CORDIC</h2>

<p>Numerické výsledky <a href="#k09">z&nbsp;předchozí kapitoly</a> nám sice
dají poměrně dobrý přehled o numerických chybách algoritmu CORDIC (které ovšem
do značné míry závisí na počtu provedených iterací), ovšem taktéž je vhodné se
podívat na to, jaký je průběh vypočtených funkcí <i>sin</i> a <i>cos</i>
v&nbsp;porovnání s&nbsp;očekávaným průběhem. Pro tento účel si můžeme nechat
průběhy porovnat například s&nbsp;využitím knihovny Matplotlib:</p>

<pre>
import numpy as np
&nbsp;
import matplotlib.pyplot as plt
&nbsp;
data_10_iter=[
    ...
    ...
    ...
]
&nbsp;
data_7_iter=[
    ...
    ...
    ...
]
&nbsp;
data_5_iter=[
    ...
    ...
    ...
]
&nbsp;
&nbsp;
&nbsp;
def <strong>plot_results</strong>(data, filename, offset=0):
    a = np.array(data)
&nbsp;
    plt.plot(a[:,0], a[:,1], "r-", label="cordic")
    plt.plot(a[:,0], offset+np.sin(np.deg2rad(a[:,0])), "b-", label="numpy")
&nbsp;
    <i># přidání legendy</i>
    plt.legend(loc="upper left")
&nbsp;
    <i># povolení zobrazení mřížky</i>
    plt.grid(True)
&nbsp;
    <i># uložení do souboru</i>
    plt.savefig(filename)
&nbsp;
    <i># zobrazení grafu</i>
    plt.show()
&nbsp;
&nbsp;
<i># vysledky</i>
plot_results(data_5_iter, "cordic_5_iterations.png", offset=0)
plot_results(data_7_iter, "cordic_7_iterations.png", offset=0.02)
plot_results(data_10_iter, "cordic_10_iterations.png", offset=0.02)
</pre>

<p>V&nbsp;prvním případě jsou průběhy zobrazeny přesně tak, jak byly vypočteny:</p>

*** image ***

<p>Ve druhém a třetím případě je křivka s&nbsp;očekávaným průběhem posunuta o
vzdálenost 0,02 jednotek vertikálním směrem, protože jinak by se oba průběhy
překrývaly a nebyly by vidět žádné (podstatné) rozdíly:</p>

*** image ***

*** image ***



<p><a name="k11"></a></p>
<h2 id="k11">11. Výpočet tangenty s&nbsp;využitím algoritmu CORDIC</h2>

<p>Výpočet goniometrické funkce tangent je odvozen z&nbsp;výše popsaného
algoritmu pro výpočet funkcí <i>sin()</i> a <i>cos()</i>, jelikož je možné
použít známý vztah:</p>

<p><i>tan &alpha;=sin &alpha; / cos &alpha;</i></p>

<p>Funkce <i>sin()</i> a <i>cos()</i> se pomocí algoritmu CORDIC počítají
současně, výpočet dokonce není možné žádným způsobem rozdělit, neboť obě
hodnoty jsou na sobě závislé (rotace vektoru). To znamená, že tangentu je možné
vypočítat s&nbsp;podobnou složitostí, jako tyto dvě funkce. Jediný rozdíl
spočívá v&nbsp;tom, že není zapotřebí obě vypočtené hodnoty násobit konstantou
<i>K<sub>i</sub></i>, protože se hodnota této konstanty vzájemným vydělením
vypočtených hodnot vyruší. Na druhou stranu se musí aplikovat dělení, které se
v&nbsp;některých případech (jednodušší FPU bez děličky) opět řeší iteračními
metodami. Vzhledem k&nbsp;tomu, že se vzájemně dělí dvě obecně nepřesné
hodnoty, relativní chyba výsledku (obecně) roste, přesněji řečeno, je součtem
relativních chyb obou mezivýsledků. Z&nbsp;tohoto důvodu se při výpočtu
tangenty používá větší počet iterací, než je nutné pro samostatný výpočet
funkcí <i>sin()</i> a <i>cos()</i>.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Demonstrační příklad: realizace výpočtu funkce <i>tan</i></h2>

<p>V&nbsp;této kapitole je uveden výpis demonstračního příkladu, který slouží
pro výpočet goniometrické funkce tangent. Všimněte si, že před vlastním
iteračním výpočtem je proveden test na vstup nulové hodnoty. Je to z&nbsp;toho
důvodu, že pro nulový úhel (a také úhel blízký úhlu pravému) je relativní chyba
velká a test na nulovou vstupní hodnotu je implementačně velmi jednoduchý: při
HW realizaci postačuje hradlo AND s&nbsp;více vstupy. Na konci iteračního
výpočtu je ošetřen stav, kdy je vypočtená tangenta nekonečná, tj.&nbsp;jedná se
buď o úhel +90&deg; nebo -90&deg; (&pi;/2 resp. -&pi;/2). V&nbsp;tomto případě
je vrácena hodnota +&infin; nebo -&infin; (jedná se o makra podle normy
<strong>C99</strong>).</p>

<pre>
<i>// --------------------------------------------------------</i>
<i>// Výpočet hodnot funkce tan() pomocí iteračního algoritmu</i>
<i>// CORDIC.</i>
<i>// --------------------------------------------------------</i>
&nbsp;
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
&nbsp;
#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif
&nbsp;
<i>// maximální počet iterací při běhu algoritmu</i>
#define MAX_ITER 10
&nbsp;
<i>// "zesílení" při rotacích</i>
#define K 0.6073
&nbsp;
<i>// tabulka arkustangentu úhlů</i>
double atans[MAX_ITER];
&nbsp;
<i>// tabulka záporných celočíselných mocnin hodnoty 2</i>
double pows[MAX_ITER];
&nbsp;
<i>// naplnění tabulek atans[] a pows[]</i>
void <strong>createTables</strong>(void) {
    int i;
    for (i = 0; i &lt; MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = atan(p);
        pows[i] = p;
    }
}
&nbsp;
<i>// výpočet funkce tan() pro zadaný úhel delta</i>
double tan_cordic(double delta) {
    int i;
    double x0 = 1.0; <i>// nastavení počátečních podmínek</i>
    double y0 = 0.0;
    double xn;
    if (delta==0) return 0.0;        <i>// ošetření nulového úhlu</i>
    for (i = 0; i &lt; MAX_ITER; i++) { <i>// iterační smyčka</i>
        if (delta &lt; 0) {             <i>// úhel je záporný =&gt; rotace doleva</i>
            xn = x0 + y0 * pows[i];
            y0 -= x0 * pows[i];
            delta += atans[i];
        } else { <i>// úhel je kladný =&gt; rotace doprava</i>
            xn = x0 - y0 * pows[i];
            y0 += x0 * pows[i];
            delta -= atans[i];
        }
        x0 = xn;
    }
    if (x0 == 0) <i>// ošetření tangenty pravého úhlu</i>
        if (y0 &gt; 0) return INFINITY;
        else return -INFINITY;
    else
        return y0/x0;
}
&nbsp;
int <strong>main</strong>(void) {
    int i;
    createTables();
    for (i = 0; i &lt;= 90; i++) {                  <i>// výpočetní smyčka</i>
        double delta;                            <i>// úhel, ze kterého se počítá sin a cos</i>
        double tan_value;                        <i>// vypočtené hodnoty</i>
        double tan_error;                        <i>// absolutní chyby</i>
        delta = i * M_PI / 180.0;                <i>// převod úhlu na radiány</i>
        tan_value = tan_cordic(delta);           <i>// výpočet funkce tan</i>
        tan_error = fabs(tan_value-tan(delta));  <i>// výpočet absolutních chyb</i>
        <i>// tisk výsledků</i>
        printf("%02d\t%14.10f\t%14.10f\t%12.10f\t%8.3f%%\n",
               i,
               tan_value,
               tan(delta),
               tan_error,
               tan_error==0.0 ? 0:100.0*tan_error/tan(delta));
    }
    return 0;
}
&nbsp;
<i>// finito</i>
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Výsledky výpočtů hodnot funkce <i>tan</i></h2>

<p>Výsledky běhu demonstračního příkladu <a href="#k12">z&nbsp;předchozí
kapitoly</a> jsou vypsány v&nbsp;následující tabulce:</p>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Literatura</h2>

<ol>

<li>Andraka, Ray: <i>"A survey of CORDIC algorithms for FPGA based computers"</i>,<br />ACM, 1998</li>

<li>Despain, A.M.:<i>"Fourier Transform Computations Using CORDIC Iterations"</i>,<br />IEEE Transactions on Computers, Volume 23, strany 993-1001, 1974</li>

<li>Mazenc C., Merrheim, X., Muller, J.M.: <i>"Computing Functions Arccos and Arcsin Using CORDIC"</i>,<br />IEEE Transactions on Computers, Volume 42, strany 118-122, 1993</li>

<li>Volder, Jack: <i>"Binary computation algorithms for coordinate rotation and function generation"</i>,<br />Convair Report IAR-1, 1956</li>

<li>Volder, Jack: <i>"The CORDIC Trigonometric Computing Technique"</i>,<br />IRE Transactions on Electronic Computing, Vol EC-8, strany 330-334, 1959</li>

<li>NVIDIA Corporation: <i>"Floating-Point Specials on the GPU"</i>,<br />2005</li>

<li>Grant R. Griffin: <i>CORDIC FAQ</i>,<br />
<a href="http://www.dspguru.com/info/faqs/cordic.htm">http://www.dspguru.com/info/faqs/cordic.htm</a></li>

<li>Andraka Consulting Group, Inc.: <i>What is all this CORDIC stuff anyhow?</i>,<br />
<a href="http://www.andraka.com/cordic.htm">http://www.andraka.com/cordic.htm</a></li>

<li>Cyliax Ingo: <i>CORDIC (COordinate Rotation DIgital Computer), the swiss army knife for computing math functions...</i><br />
<a href="http://www.ee.ualberta.ca/courses/ee401/microboard/cordic_CCink.html">http://www.ee.ualberta.ca/courses/ee401/microboard/cordic_CCink.html</a></li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>VESA BIOS Extensions<br />
<a href="https://en.wikipedia.org/wiki/VESA_BIOS_Extensions">https://en.wikipedia.org/wiki/VESA_BIOS_Extensions</a>
</li>

<li>Video Electronics Standards Association<br />
<a href="https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association">https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association</a>
</li>

<li>DJGPP (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/DJGPP">https://cs.wikipedia.org/wiki/DJGPP</a>
</li>

<li>DJGPP home page<br />
<a href="http://www.delorie.com/djgpp/">http://www.delorie.com/djgpp/</a>
</li>

<li>DJGPP Zip File Picker<br />
<a href="http://www.delorie.com/djgpp/zip-picker.html">http://www.delorie.com/djgpp/zip-picker.html</a>
</li>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

<li>The LOADALL Instruction by Robert Collins<br />
<a href="https://www.rcollins.org/articles/loadall/tspec_a3_doc.html">https://www.rcollins.org/articles/loadall/tspec_a3_doc.html</a>
</li>

<li>How do you put a 286 in Protected Mode?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode">https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode</a>
</li>

<li>Control register<br />
<a href="https://en.wikipedia.org/wiki/Control_register">https://en.wikipedia.org/wiki/Control_register</a>
</li>

<li>CPU Registers x86<br />
<a href="https://wiki.osdev.org/CPU_Registers_x86">https://wiki.osdev.org/CPU_Registers_x86</a>
</li>

<li>x86 Assembly/Protected Mode<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode">https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode</a>
</li>

<li>MSW: Machine Status Word<br />
<a href="https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html">https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html</a>
</li>

<li>80x87 Floating Point Opcodes<br />
<a href="http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html">http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html</a>
</li>

<li>Page Translation<br />
<a href="https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm">https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm</a>
</li>

<li>80386 Paging and Segmenation<br />
<a href="https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation">https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation</a>
</li>

<li>80386 Memory Management<br />
<a href="https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html">https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html</a>
</li>

<li>DOSEMU<br />
<a href="http://www.dosemu.org/">http://www.dosemu.org/</a>
</li>

<li>Intel 80386, a revolutionary CPU<br />
<a href="https://www.xtof.info/intel80386.html">https://www.xtof.info/intel80386.html</a>
</li>

<li>PAI Unit 3 Paging in 80386 Microporcessor<br />
<a href="https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor">https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor</a>
</li>

<li>64 Terabytes of virtual memory for 32-bit x86 using segmentation: how?<br />
<a href="https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how">https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how</a>
</li>

<li>Pi in the Pentium: reverse-engineering the constants in its floating-point unit<br />
<a href="http://www.righto.com/2025/01/pentium-floating-point-ROM.html">http://www.righto.com/2025/01/pentium-floating-point-ROM.html</a>
</li>

<li>Simply FPU<br />
<a href="http://www.website.masmforum.com/tutorials/fptute/">http://www.website.masmforum.com/tutorials/fptute/</a>
</li>

<li>Art of Assembly language programming: The 80x87 Floating Point Coprocessors<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html</a>
</li>

<li>Art of Assembly language programming: The FPU Instruction Set<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html</a>
</li>

<li>INTEL 80387 PROGRAMMER'S REFERENCE MANUAL<br />
<a href="http://www.ragestorm.net/downloads/387intel.txt">http://www.ragestorm.net/downloads/387intel.txt</a>
</li>

<li>x86 Instruction Set Reference: FLD<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_100.html">http://x86.renejeschke.de/html/file_module_x86_id_100.html</a>
</li>

<li>x86 Instruction Set Reference: FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_101.html">http://x86.renejeschke.de/html/file_module_x86_id_101.html</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>8087 Numeric Data Processor<br />
<a href="https://www.eeeguide.com/8087-numeric-data-processor/">https://www.eeeguide.com/8087-numeric-data-processor/</a>
</li>

<li>Data Types and Instruction Set of 8087 co-processor<br />
<a href="https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/">https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/</a>
</li>

<li>8087 instruction set and examples<br />
<a href="https://studylib.net/doc/5625221/8087-instruction-set-and-examples">https://studylib.net/doc/5625221/8087-instruction-set-and-examples</a>
</li>

<li>GCC documentation: Extensions to the C Language Family<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions">https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions</a>
</li>

<li>GCC documentation: Using Vector Instructions through Built-in Functions<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html">https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html</a>
</li>

<li>SSE (Streaming SIMD Extentions)<br />
<a href="http://www.songho.ca/misc/sse/sse.html">http://www.songho.ca/misc/sse/sse.html</a>
</li>

<li>Timothy A. Chagnon: SSE and SSE2<br />
<a href="http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf">http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf</a>
</li>

<li>Intel corporation: Extending the Worldr's Most Popular Processor Architecture<br />
<a href="http://download.intel.com/technology/architecture/new-instructions-paper.pdf">http://download.intel.com/technology/architecture/new-instructions-paper.pdf</a>
</li>

<li>SIMD architectures:<br />
<a href="http://arstechnica.com/old/content/2000/03/simd.ars/">http://arstechnica.com/old/content/2000/03/simd.ars/</a>
</li>

<li>Tour of the Black Holes of Computing!: Floating Point<br />
<a href="http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt">http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt</a>
</li>

<li>3Dnow! Technology Manual<br />
AMD Inc., 2000</li>

<li>Intel MMX<sup>TM</sup> Technology Overview<br />
Intel corporation, 1996</li>

<li>MultiMedia eXtensions<br />
<a href="http://softpixel.com/~cwright/programming/simd/mmx.php">http://softpixel.com/~cwright/programming/simd/mmx.php</a>i
</li>

<li>AMD K5 ("K5" / "5k86")<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g5K5-c.html">http://www.pcguide.com/ref/cpu/fam/g5K5-c.html</a>
</li>

<li>Sixth Generation Processors<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g6.htm">http://www.pcguide.com/ref/cpu/fam/g6.htm</a>
</li>

<li>Great Microprocessors of the Past and Present<br />
<a href="http://www.cpushack.com/CPU/cpu1.html">http://www.cpushack.com/CPU/cpu1.html</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Very_long_instruction_word">http://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>CPU design (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CPU_design">http://en.wikipedia.org/wiki/CPU_design</a>
</li>

<li>Grafické karty a grafické akcelerátory (14)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/</a>
</li>

<li>Grafické karty a grafické akcelerátory (15)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/</a>
</li>

<li>Grafické karty a grafické akcelerátory (16)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/</a>
</li>

<li>VESA Video Modes<br />
<a href="https://wiki.osdev.org/VESA_Video_Modes">https://wiki.osdev.org/VESA_Video_Modes</a>
</li>

<li>Introduction to VESA programming<br />
<a href="http://www.monstersoft.com/tutorial1/VESA_intro.html">http://www.monstersoft.com/tutorial1/VESA_intro.html</a>
</li>

<li>Guide: VBE 2.0 graphics modes<br />
<a href="https://delorie.com/djgpp/doc/ug/graphics/vbe20.html">https://delorie.com/djgpp/doc/ug/graphics/vbe20.html</a>
</li>

<li>NASM instruction list<br />
<a href="https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html">https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html</a>
</li>

<li>BitBlt function (wingdi.h)<br />
<a href="https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt">https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt</a>
</li>

<li>SetDIBitsToDevice function (wingdi.h)<br />
<a href="https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice">https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice</a>
</li>

<li>Why did line printers have 132 columns?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7838/why-did-line-printers-have-132-columns">https://retrocomputing.stackexchange.com/questions/7838/why-did-line-printers-have-132-columns</a>
</li>

<li>Tabulating machine<br />
<a href="https://en.wikipedia.org/wiki/Tabulating_machine">https://en.wikipedia.org/wiki/Tabulating_machine</a>
</li>

<li>Why do printers print 132 columns on 14 7/8″ paper? It’s history<br />
<a href="https://blog.adafruit.com/2019/01/22/why-do-printers-print-132-columns-on-14-7-8-paper-its-history-vintagecomputing-kenshirriff-ibm/">https://blog.adafruit.com/2019/01/22/why-do-printers-print-132-columns-on-14-7-8-paper-its-history-vintagecomputing-kenshirriff-ibm/</a>
</li>

<li>IBM 1403 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_1403">https://en.wikipedia.org/wiki/IBM_1403</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

