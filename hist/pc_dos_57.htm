<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Výpočty v systému pevné řádové čárky na platformě IBM PC (3. část)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Výpočty v systému pevné řádové čárky na platformě IBM PC (3. část)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Výpočty v&nbsp;systému pevné řádové čárky na platformě IBM PC (3. část)</a></p>
<p><a href="#k02">*** 2. Univerzální algoritmus CORDIC</a></p>
<p><a href="#k03">*** 3. Princip činnosti CORDICu: rotace vektoru okolo počátku souřadného systému</a></p>
<p><a href="#k04">*** 4. Modifikace výpočtu rotace vektoru pro algoritmus CORDIC</a></p>
<p><a href="#k05">*** 5. Náhrada výpočtu tangenty za bitový posun</a></p>
<p><a href="#k06">*** 6. Hodnoty úhlů, po kterých se provádí rotace vektoru</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Výpočty v&nbsp;systému pevné řádové čárky na platformě IBM PC (3. část)</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Univerzální algoritmus CORDIC</h2>

<p><a href="">V&nbsp;předchozí části</a> <a href="">tohoto seriálu</a> jsme si uvedli stručné informace o algoritmu <strong>CORDIC</strong>, neboli <i><strong>CO</strong>ordinate <strong>RO</strong>tation <strong>DI</strong>gital <strong>C</strong>omputer</i>. Jedná se o výpočetní metodu využívající iteraci, kterou pro účely jednoduchého a rychlého výpočtu goniometrických funkcí bez použití násobiček a děliček navrhl a zpopularizoval Jack Volder už v&nbsp;polovině minulého století (viz literatura uvedená ve <a href="#k20">dvacáté kapitole</a>). Později se ukázalo, že tuto metodu je možné po malých úpravách použít i pro výpočty dalších matematických funkcí, například arkustangenty, arkussinu, arkuskosinu, ale i pro vyčíslení délky vektoru či jeho rychlou rotaci o libovolný úhel; včetně transformace bodu či vektoru z&nbsp;polárních souřadnic do souřadnic kartézských. Již větší úpravy si vyžádala aplikace metody CORDIC pro výpočet hyperbolických funkcí (<i>sinh()</i>, <i>cosh()</i>, <i>tanh()</i>) a funkcí logaritmických, základní myšlenka a princip práce však zůstává stejný.</p>

<p>Vzhledem k&nbsp;tomu, že se při aplikaci algoritmu CORDIC využívají pouze ty nejzákladnější matematické operace (bitový posun doleva a doprava, sečítání, odečítání a porovnání dvou hodnot), je možné CORDIC využít ve všech číslicových systémech, ve kterých je zapotřebí šetřit použitými prostředky, tj.&nbsp;počtem logických hradel, kapacitou obsazené paměti, možnostmi použitých čipů atd.  CORDIC tak byl implementován a s&nbsp;úspěchem používán například v&nbsp;kalkulačkách, osmibitových mikrořadičích (řada Intel 8051 a Motorola 68HC11), osmibitových domácích počítačích (Atari, Sinclair ZX Spectrum atd.) a mnoha specializovaných obvodech vytvořených pomocí programovatelných polí FPGA.</p>

<p>Zajímavá je implementace CORDICu na mikrořadičové stavebnici Basic STAMP. V&nbsp;největší míře však bylo CORDICu využito v&nbsp;některých matematických koprocesorech (FPU), protože bylo zjištěno, že některé funkční bloky zabezpečující chod CORDICu zůstávají stále stejné, bez ohledu na to, jaká funkce je počítána, což do značné míry zjednodušilo (a tím pádem i zlevnilo) výrobu FPU. Samozřejmě se také snížil počet hradel nutných pro implementaci goniometrických, hyperbolických a logaritmických funkcí.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Princip činnosti CORDICu: rotace vektoru okolo počátku souřadného systému</h2>

<p>Princip práce algoritmu CORDIC vychází z&nbsp;vyjádření rotace vektoru o určitý úhel <i>&delta;</i> a z&nbsp;následné úpravy vzorce pro rotaci tak, aby se eliminovaly zbytečně složité a časově náročné multiplikativní operace.  Nejprve si napišme vzorce pro hodnoty funkcí sinus a kosinus součtu dvou úhlů.  Jedná se o známé středoškolské vztahy používané pro úpravu výrazů s&nbsp;goniometrickými funkcemi:</p>

<p><i>sin(&alpha;+&beta;)=sin &alpha; cos &beta; + cos &alpha; sin &beta;</i><br />
<i>cos(&alpha;+&beta;)=cos &alpha; cos &beta; - sin &alpha; sin &beta;</i></p>

<p>Jak si ukážeme o několik odstavců níže, je možné tyto vzorečky použít pro vyjádření rotace vektoru. Vektor <strong>r</strong>, kterým budeme rotovat, může být vyjádřen souřadnicemi <i>[x<sub>0</sub>, y<sub>0</sub>]</i>, přičemž je možné provést převod z&nbsp;kartézských souřadnic do souřadnic polárních:</p>

<p><i>x<sub>0</sub>=r cos &phi;</i><br />
<i>y<sub>0</sub>=r sin &phi;</i></p>

<p>kde <i>r</i> představuje délku vektoru <strong>r</strong> a <i>&phi;</i> je úhel vektoru měřený od kladné horizontální poloosy souřadného systému. Pokud bude vektor <strong>r</strong> rotován o úhel <i>&delta;</i>, změní se koncový bod vektoru tak, že bude ležet na kružnici o stejném poloměru <i>r</i>, ale úhel vektoru (opět měřený od kladné horizontální poloosy) se zvětší o <i>&delta;</i>. Tuto skutečnost je možné vyjádřit vztahy:</p>

<p><i>x<sub>r</sub>=r cos (&phi;+&delta;)</i><br />
<i>y<sub>r</sub>=r sin (&phi;+&delta;)</i></p>

<p>Dále je možné rozepsat výrazy <i>cos (&phi;+&delta;)</i> a <i>sin (&phi;+&delta;)</i> podle prvních dvou uvedených vzorečků a následně zpětně dosadit za výrazy <i>r cos &phi;</i> a <i>r sin &phi;</i> původní souřadnice vektoru <strong>r</strong>, tj.&nbsp;<i>x<sub>0</sub></i> a <i>y<sub>0</sub></i>:</p>

<p><i>x<sub>r</sub>=r (cos &phi; cos &delta; - sin &phi; sin &delta;)=x<sub>0</sub> cos &delta; - y<sub>0</sub> sin &delta;</i><br />
<i>y<sub>r</sub>=r (sin &phi; cos &delta; + cos &phi; sin &delta;)=x<sub>0</sub> sin &delta; + y<sub>0</sub> cos &delta;</i></p>

<p>Všimněte si, že se ve výsledných vztazích nevyskytuje ani hodnota <i>r</i> ani úhel původního vektoru <i>&phi;</i>. To znamená, že převod na polární souřadnice pro nás byl pouze matematickou pomůckou při odvozování vzorce pro rotaci a ve skutečnosti se nebude nikdy provádět.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Modifikace výpočtu rotace vektoru pro algoritmus CORDIC</h2>

<p>V&nbsp;<a href="#k03">předchozí kapitole</a> jsme si odvodili, že rotaci jakéhokoli vektoru o úhel <i>&delta;</i> je možné zapsat pomocí vztahů:</p>

<p><i>x<sub>r</sub>=x<sub>0</sub> cos &delta; - y<sub>0</sub> sin &delta;</i><br />
<i>y<sub>r</sub>=x<sub>0</sub> sin &delta; + y<sub>0</sub> cos &delta;</i></p>

<p>Pro účely algoritmu CORDIC se tento vztah dále upravuje. První úprava spočívá v&nbsp;tom, že se obě rovnice vydělí hodnotou <i>cos &delta;</i>, takže dostaneme vztahy:</p>

<p><i>x<sub>r</sub> /cos &delta;=x<sub>0</sub> - y<sub>0</sub> sin &delta;/cos &delta;</i><br />
<i>y<sub>r</sub> /cos &delta;=x<sub>0</sub> sin &delta;/cos &delta; + y<sub>0</sub></i></p>

<p>Pokud si uvědomíme skutečnost, že <i>sin &delta;/cos &delta;=tan &delta;</i>, můžeme pokračovat v&nbsp;úpravách:</p>

<p><i>x<sub>r</sub> /cos &delta;=x<sub>0</sub> - y<sub>0</sub> tan &delta;</i><br />
<i>y<sub>r</sub> /cos &delta;=y<sub>0</sub> + x<sub>0</sub> tan &delta;</i></p>

<p>a následně:</p>

<p><i>x<sub>r</sub>=cos &delta;(x<sub>0</sub> - y<sub>0</sub> tan &delta;)</i><br />
<i>y<sub>r</sub>=cos &delta;(y<sub>0</sub> + x<sub>0</sub> tan &delta;)</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Náhrada výpočtu tangenty za bitový posun</h2>

<p>Nyní přichází základní myšlenka, na které je CORDIC postaven. Pokud budeme volit úhel <i>&delta;</i> takovým způsobem, aby jeho tangenta nabývala hodnot <i>2<sup>-i</sup></i> (pro <i>i&gt;0</i>), je možné tangentu ve vzorci nahradit násobením zvolenou hodnotou <i>2<sup>-i</sup></i>; v&nbsp;tomto případě je však možné násobení nahradit jednoduchým a přitom rychlým bitovým posunem. Omezení hodnoty tangenty na zvolenou sadu hodnot však znamená, že se vektor nemůže rotovat o libovolný úhel, ale pouze o úhel odpovídající tangentě z&nbsp;dané sady. To však není problém, protože rotaci o libovolný je možné zapsat pomocí série rotací (doprava či doleva), například:</p>

<p><i>&delta;=&delta;<sub>1</sub>+&delta;<sub>2</sub>-&delta;<sub>3</sub>+...</i></p>

<p>Naproti tomu, že se parciální rotace mohou provádět v&nbsp;obou směrech (tj.&nbsp;jak doprava, tak i doleva), můžeme místo hodnoty <i>cos &delta;</i> dosadit konstantu <i>K<sub>i</sub></i>, protože platí <i>cos &delta;=cos -&delta;</i>. Nakonec místo <i>tan &delta;</i> přímo dosadíme mocninu dvojky <i>2<sup>-i</sup></i> a pomocí parametru <i>d<sub>i</sub></i> směr rotace (parametr <i>d<sub>i</sub></i> nabývá pouze hodnot +1 a -1):</p>

<p><i>x<sub>r</sub>=K<sub>i</sub> (x<sub>0</sub> - y<sub>0</sub> d<sub>i</sub> 2<sup>-i</sup>)</i><br />
<i>y<sub>r</sub>=K<sub>i</sub> (y<sub>0</sub> + x<sub>0</sub> d<sub>i</sub> 2<sup>-i</sup>)</i></p>

<p>Zbývá nám zjistit hodnotu konstanty <i>K<sub>i</sub></i>. Platí:</p>

<p><i>K<sub>i</sub>=cos (arctan 2<sup>-i</sup>)=1/(1+2<sup>-2i</sup>)<sup>1/2</sup></i></p>

<p>Limitně se součin hodnot <i>K<sub>i</sub></i> (po nekonečně mnoha iteracích) blíží k&nbsp;<strong>0,6073</strong>, to znamená, že touto hodnotou bude v&nbsp;některých případech nutné vydělit výsledek (v&nbsp;jiných případech nám naopak toto <i>zesílení</i> při rotaci vadit nebude).</p>

<p>Veškerá práce algoritmu CORDIC spočívá v&nbsp;tom, že se nastaví počáteční souřadnice vektoru <strong>r</strong> a iterativně se provádí rotace o předem známé úhly <i>&delta;<sub>1</sub>...&delta;<sub>n</sub></i> tak, aby se dosáhlo požadované hodnoty rotace <i>&delta;</i>.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Hodnoty úhlů, po kterých se provádí rotace vektoru</h2>

<p>Jak jsme si uvedli v&nbsp;<a href="#k05">předchozí kapitole</a>, musí tangenty úhlů použitých v&nbsp;CORDICu splňovat podmínku <i>tan &delta;=2<sup>-i</sup></i>. Pokud budeme veškeré výpočty provádět v&nbsp;prvním kvadrantu (ve skutečnosti však může počítat i ve čtvrtém kvadrantu), začíná se s&nbsp;úhlem 45&deg;, tj.&nbsp;&pi;/4, protože <i>tan &pi;/4=1</i>. Další úhly jsou samozřejmě menší; o jaké hodnoty se konkrétně jedná, nám dá přehled následující jednoduchý program:</p>

<pre>
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;

#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif

int main(void)
{
    double tan_value=1.0;
    double delta;
    int i;
    for (i=0; i&lt;10; i++) {
        delta=atan(tan_value)*180.0/M_PI;
        printf("%d\t%12.10f\t%12.9f\n", i+1, tan_value, delta);
        tan_value/=2.0;
    }
    return 0;
}
</pre>

<p>Výsledek běhu tohoto programu nám ukazuje, že se hodnoty úhlů postupně zmenšují a to vždy na více než polovinu předchozí hodnoty. Z&nbsp;toho také vyplývá, že jakýkoli úhel v&nbsp;prvním a čtvrtém kvadrantu je opravdu možné složit ze součtu těchto úhlů. Ideální by sice byly hodnoty odpovídající přesně polovině hodnoty úhlu předchozího, tj.&nbsp;řada úhlů 45&deg;, 45/2&deg;, 45/4&deg;..., tím by se však porušila podmínka <i>tan &delta;=2<sup>-i</sup></i>, díky níž je algoritmus CORDIC tak rychlý a přitom jednoduchý.</p>

<pre>
i       2<sup>1-i</sup>             úhel &delta;
1       1.0000000000    45.000000000
2       0.5000000000    26.565051177
3       0.2500000000    14.036243468
4       0.1250000000     7.125016349
5       0.0625000000     3.576334375
6       0.0312500000     1.789910608
7       0.0156250000     0.895173710
8       0.0078125000     0.447614171
9       0.0039062500     0.223810500
10      0.0019531250     0.111905677
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<pre>
// --------------------------------------------------------
// Výpočet hodnot funkcí sin() a cos() pomocí iteračního
// algoritmu CORDIC.
// --------------------------------------------------------

#include <math.h>
#include <stdio.h>

#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif

// maximální počet iterací při běhu algoritmu
#define MAX_ITER 10

// "zesílení" při rotacích
#define K 0.6073

// tabulka arkustangentu úhlů
double atans[MAX_ITER];

// tabulka záporných celočíselných mocnin hodnoty 2
double pows[MAX_ITER];

// naplnění tabulek atans[] a pows[]
void createTables(void) {
    int i;
    for (i = 0; i < MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = atan(p);
        pows[i] = p;
    }
}

// výpočet funkcí sin() a cos() pro zadaný úhel delta
void sincos(double delta, double *sin_value, double *cos_value) {
    int i;
    double x0 = 1.0; // nastavení počátečních podmínek
    double y0 = 0.0;
    double xn;
    for (i = 0; i < MAX_ITER; i++) { // iterační smyčka
        if (delta < 0) {             // úhel je záporný => rotace doleva
            xn = x0 + y0 * pows[i];
            y0 -= x0 * pows[i];
            delta += atans[i];
        } else { // úhel je kladný => rotace doprava
            xn = x0 - y0 * pows[i];
            y0 += x0 * pows[i];
            delta -= atans[i];
        }
        x0 = xn;
    }
    *sin_value = y0 * K; // opravit "zesílení" výsledku
    *cos_value = x0 * K;
}

int main(void) {
    int i;
    createTables();
    for (i = 0; i <= 90; i++) { // výpočetní smyčka
        double delta;           // úhel, ze kterého se počítá sin a cos
        double sin_value;          // vypočtené hodnoty
        double cos_value;
        double sin_error; // absolutní chyby
        double cos_error;
        delta = i * M_PI / 180.0;           // převod úhlu na radiány
        sincos(delta, &sin_value, &cos_value);    // výpočet sinu a kosinu
        sin_error = fabs(sin_value - sin(delta)); // výpočet absolutních chyb
        cos_error = fabs(cos_value - cos(delta));
        // tisk výsledků
        printf("%02d\t%12.10f\t%12.10f\t%12.10f\t%12.10f\t%8.3f%%\t%8.3f%%\n",
               i,
               sin_value,
               cos_value,
               sin_error,
               cos_error,
               (sin_value != 0.0) ? 100.0 * sin_error / fabs(sin_value) : 0.0,
               (cos_value != 0.0) ? 100.0 * cos_error / fabs(cos_value) : 0.0);
    }
    return 0;
}

// finito
</pre>

--------------------------------------------------------------------------------------------------
vstupní   vypočtená       vypočtená       sin             cos              sin               cos
úhel    hodnota sin()   hodnota cos()   absolutní chyba absolutní chyba  rel.chyba       rel.chyba
--------------------------------------------------------------------------------------------------
00	0.0011726802	1.0000761814	0.0011726802	0.0000761814	 100.000%	   0.008%
01	0.0167806202	0.9999360752	0.0006717863	0.0000883801	   4.003%	   0.009%
02	0.0363058568	0.9994176447	0.0014063601	0.0000268177	   3.874%	   0.003%
03	0.0519144682	0.9987285075	0.0004214880	0.0000989728	   0.812%	   0.010%
04	0.0714093909	0.9975241564	0.0016529171	0.0000398938	   2.315%	   0.004%
05	0.0858859660	0.9963821278	0.0012697767	0.0001874297	   1.478%	   0.019%
06	0.1053286152	0.9945147694	0.0008001519	0.0000071260	   0.760%	   0.001%
07	0.1208522102	0.9927479474	0.0010171332	0.0002017957	   0.842%	   0.020%
08	0.1401999641	0.9902008452	0.0010268631	0.0000672235	   0.732%	   0.007%
09	0.1556537948	0.9878894877	0.0007806702	0.0002011471	   0.502%	   0.020%
10	0.1749154013	0.9846615389	0.0012672237	0.0001462141	   0.724%	   0.015%
11	0.1902784482	0.9818084619	0.0005305471	0.0001812785	   0.279%	   0.018%
12	0.2092807371	0.9779342089	0.0013690463	0.0002133919	   0.654%	   0.022%
13	0.2245344811	0.9745450275	0.0004165732	0.0001749627	   0.186%	   0.018%
14	0.2435223655	0.9699745364	0.0016004699	0.0003211899	   0.657%	   0.033%
15	0.2586475676	0.9660513338	0.0001714775	0.0001255075	   0.066%	   0.013%
16	0.2774481762	0.9608206145	0.0018108204	0.0004410814	   0.653%	   0.046%
17	0.2924243921	0.9563690285	0.0000526874	0.0000642725	   0.018%	   0.007%
18	0.3073310520	0.9516834391	0.0016859423	0.0006269228	   0.549%	   0.066%
19	0.3251452218	0.9457453825	0.0004229326	0.0002268069	   0.130%	   0.024%
20	0.3435512762	0.9392157709	0.0015311329	0.0004768498	   0.446%	   0.051%
21	0.3581836921	0.9337334665	0.0001842574	0.0001530400	   0.051%	   0.016%
22	0.3763350045	0.9265666237	0.0017284111	0.0006172309	   0.459%	   0.067%
23	0.3907657879	0.9205736488	0.0000346594	0.0000687953	   0.009%	   0.007%
24	0.4050994316	0.9143567106	0.0016372115	0.0008112530	   0.404%	   0.089%
25	0.4228792420	0.9062708704	0.0002609802	0.0000369167	   0.062%	   0.004%
26	0.4368623186	0.8996138385	0.0015088282	0.0008197922	   0.345%	   0.091%
27	0.4543481744	0.8909104782	0.0003576747	0.0000960460	   0.079%	   0.011%
28	0.4682106568	0.8837038670	0.0012609060	0.0007562742	   0.269%	   0.086%
29	0.4853645826	0.8743997745	0.0005549624	0.0002199326	   0.114%	   0.025%
30	0.4989670003	0.8667096840	0.0010329997	0.0006842803	   0.207%	   0.079%
31	0.5157967696	0.8568006981	0.0007586947	0.0003666026	   0.147%	   0.043%
32	0.5291205039	0.8486372819	0.0007987604	0.0005891857	   0.151%	   0.069%
33	0.5446674419	0.8387437758	0.0000284069	0.0000732079	   0.005%	   0.009%
34	0.5577055299	0.8301314870	0.0014873735	0.0010939144	   0.267%	   0.132%
35	0.5738098078	0.8190824429	0.0002333714	0.0000696014	   0.041%	   0.008%
36	0.5865371490	0.8100172323	0.0012481033	0.0010002379	   0.213%	   0.123%
37	0.6022307543	0.7984183504	0.0004157312	0.0002171596	   0.069%	   0.027%
38	0.6146302652	0.7889127841	0.0010312101	0.0009020305	   0.168%	   0.114%
39	0.6299202599	0.7767587849	0.0005998689	0.0003871766	   0.095%	   0.050%
40	0.6418729918	0.7669112114	0.0009146178	0.0008667682	   0.142%	   0.113%
41	0.6567280845	0.7542293861	0.0006690555	0.0004801942	   0.102%	   0.064%
42	0.6684306187	0.7438778473	0.0006999876	0.0007330218	   0.105%	   0.099%
43	0.6828308344	0.7306817333	0.0008324743	0.0006719683	   0.122%	   0.092%
44	0.6941513412	0.7199358716	0.0005070292	0.0005960713	   0.073%	   0.083%
45	0.7062435465	0.7080775359	0.0008632347	0.0009707547	   0.122%	   0.137%
46	0.7199358716	0.6941513412	0.0005960713	0.0005070292	   0.083%	   0.073%
47	0.7306817333	0.6828308344	0.0006719683	0.0008324743	   0.092%	   0.122%
48	0.7438778473	0.6684306187	0.0007330218	0.0006999876	   0.099%	   0.105%
49	0.7542293861	0.6567280845	0.0004801942	0.0006690555	   0.064%	   0.102%
50	0.7669112114	0.6418729918	0.0008667682	0.0009146178	   0.113%	   0.142%
51	0.7767587849	0.6299202599	0.0003871766	0.0005998689	   0.050%	   0.095%
52	0.7889127841	0.6146302652	0.0009020305	0.0010312101	   0.114%	   0.168%
53	0.7984183504	0.6022307543	0.0002171596	0.0004157312	   0.027%	   0.069%
54	0.8100172323	0.5865371490	0.0010002379	0.0012481033	   0.123%	   0.213%
55	0.8190824429	0.5738098078	0.0000696014	0.0002333714	   0.008%	   0.041%
56	0.8301314870	0.5577055299	0.0010939144	0.0014873735	   0.132%	   0.267%
57	0.8387437758	0.5446674419	0.0000732079	0.0000284069	   0.009%	   0.005%
58	0.8486372819	0.5291205039	0.0005891857	0.0007987604	   0.069%	   0.151%
59	0.8568006981	0.5157967696	0.0003666026	0.0007586947	   0.043%	   0.147%
60	0.8667096840	0.4989670003	0.0006842803	0.0010329997	   0.079%	   0.207%
61	0.8743997745	0.4853645826	0.0002199326	0.0005549624	   0.025%	   0.114%
62	0.8837038670	0.4682106568	0.0007562742	0.0012609060	   0.086%	   0.269%
63	0.8909104782	0.4543481744	0.0000960460	0.0003576747	   0.011%	   0.079%
64	0.8996138385	0.4368623186	0.0008197922	0.0015088282	   0.091%	   0.345%
65	0.9062708704	0.4228792420	0.0000369167	0.0002609802	   0.004%	   0.062%
66	0.9143567106	0.4050994316	0.0008112530	0.0016372115	   0.089%	   0.404%
67	0.9205736488	0.3907657879	0.0000687953	0.0000346594	   0.007%	   0.009%
68	0.9265666237	0.3763350045	0.0006172309	0.0017284111	   0.067%	   0.459%
69	0.9337334665	0.3581836921	0.0001530400	0.0001842574	   0.016%	   0.051%
70	0.9392157709	0.3435512762	0.0004768498	0.0015311329	   0.051%	   0.446%
71	0.9457453825	0.3251452218	0.0002268069	0.0004229326	   0.024%	   0.130%
72	0.9516834391	0.3073310520	0.0006269228	0.0016859423	   0.066%	   0.549%
73	0.9563690285	0.2924243921	0.0000642725	0.0000526874	   0.007%	   0.018%
74	0.9608206145	0.2774481762	0.0004410814	0.0018108204	   0.046%	   0.653%
75	0.9660513338	0.2586475676	0.0001255075	0.0001714775	   0.013%	   0.066%
76	0.9699745364	0.2435223655	0.0003211899	0.0016004699	   0.033%	   0.657%
77	0.9745450275	0.2245344811	0.0001749627	0.0004165732	   0.018%	   0.186%
78	0.9779342089	0.2092807371	0.0002133919	0.0013690463	   0.022%	   0.654%
79	0.9818084619	0.1902784482	0.0001812785	0.0005305471	   0.018%	   0.279%
80	0.9846615389	0.1749154013	0.0001462141	0.0012672237	   0.015%	   0.724%
81	0.9878894877	0.1556537948	0.0002011471	0.0007806702	   0.020%	   0.502%
82	0.9902008452	0.1401999641	0.0000672235	0.0010268631	   0.007%	   0.732%
83	0.9927479474	0.1208522102	0.0002017957	0.0010171332	   0.020%	   0.842%
84	0.9945147694	0.1053286152	0.0000071260	0.0008001519	   0.001%	   0.760%
85	0.9963821278	0.0858859660	0.0001874297	0.0012697767	   0.019%	   1.478%
86	0.9975241564	0.0714093909	0.0000398938	0.0016529171	   0.004%	   2.315%
87	0.9987285075	0.0519144682	0.0000989728	0.0004214880	   0.010%	   0.812%
88	0.9994176447	0.0363058568	0.0000268177	0.0014063601	   0.003%	   3.874%
89	0.9999360752	0.0167806202	0.0000883801	0.0006717863	   0.009%	   4.003%
90	1.0000761814	0.0011726802	0.0000761814	0.0011726802	   0.008%	 100.000%


<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>VESA BIOS Extensions<br />
<a href="https://en.wikipedia.org/wiki/VESA_BIOS_Extensions">https://en.wikipedia.org/wiki/VESA_BIOS_Extensions</a>
</li>

<li>Video Electronics Standards Association<br />
<a href="https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association">https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association</a>
</li>

<li>DJGPP (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/DJGPP">https://cs.wikipedia.org/wiki/DJGPP</a>
</li>

<li>DJGPP home page<br />
<a href="http://www.delorie.com/djgpp/">http://www.delorie.com/djgpp/</a>
</li>

<li>DJGPP Zip File Picker<br />
<a href="http://www.delorie.com/djgpp/zip-picker.html">http://www.delorie.com/djgpp/zip-picker.html</a>
</li>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

<li>The LOADALL Instruction by Robert Collins<br />
<a href="https://www.rcollins.org/articles/loadall/tspec_a3_doc.html">https://www.rcollins.org/articles/loadall/tspec_a3_doc.html</a>
</li>

<li>How do you put a 286 in Protected Mode?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode">https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode</a>
</li>

<li>Control register<br />
<a href="https://en.wikipedia.org/wiki/Control_register">https://en.wikipedia.org/wiki/Control_register</a>
</li>

<li>CPU Registers x86<br />
<a href="https://wiki.osdev.org/CPU_Registers_x86">https://wiki.osdev.org/CPU_Registers_x86</a>
</li>

<li>x86 Assembly/Protected Mode<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode">https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode</a>
</li>

<li>MSW: Machine Status Word<br />
<a href="https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html">https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html</a>
</li>

<li>80x87 Floating Point Opcodes<br />
<a href="http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html">http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html</a>
</li>

<li>Page Translation<br />
<a href="https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm">https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm</a>
</li>

<li>80386 Paging and Segmenation<br />
<a href="https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation">https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation</a>
</li>

<li>80386 Memory Management<br />
<a href="https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html">https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html</a>
</li>

<li>DOSEMU<br />
<a href="http://www.dosemu.org/">http://www.dosemu.org/</a>
</li>

<li>Intel 80386, a revolutionary CPU<br />
<a href="https://www.xtof.info/intel80386.html">https://www.xtof.info/intel80386.html</a>
</li>

<li>PAI Unit 3 Paging in 80386 Microporcessor<br />
<a href="https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor">https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor</a>
</li>

<li>64 Terabytes of virtual memory for 32-bit x86 using segmentation: how?<br />
<a href="https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how">https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how</a>
</li>

<li>Pi in the Pentium: reverse-engineering the constants in its floating-point unit<br />
<a href="http://www.righto.com/2025/01/pentium-floating-point-ROM.html">http://www.righto.com/2025/01/pentium-floating-point-ROM.html</a>
</li>

<li>Simply FPU<br />
<a href="http://www.website.masmforum.com/tutorials/fptute/">http://www.website.masmforum.com/tutorials/fptute/</a>
</li>

<li>Art of Assembly language programming: The 80x87 Floating Point Coprocessors<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html</a>
</li>

<li>Art of Assembly language programming: The FPU Instruction Set<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html</a>
</li>

<li>INTEL 80387 PROGRAMMER'S REFERENCE MANUAL<br />
<a href="http://www.ragestorm.net/downloads/387intel.txt">http://www.ragestorm.net/downloads/387intel.txt</a>
</li>

<li>x86 Instruction Set Reference: FLD<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_100.html">http://x86.renejeschke.de/html/file_module_x86_id_100.html</a>
</li>

<li>x86 Instruction Set Reference: FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_101.html">http://x86.renejeschke.de/html/file_module_x86_id_101.html</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>8087 Numeric Data Processor<br />
<a href="https://www.eeeguide.com/8087-numeric-data-processor/">https://www.eeeguide.com/8087-numeric-data-processor/</a>
</li>

<li>Data Types and Instruction Set of 8087 co-processor<br />
<a href="https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/">https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/</a>
</li>

<li>8087 instruction set and examples<br />
<a href="https://studylib.net/doc/5625221/8087-instruction-set-and-examples">https://studylib.net/doc/5625221/8087-instruction-set-and-examples</a>
</li>

<li>GCC documentation: Extensions to the C Language Family<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions">https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions</a>
</li>

<li>GCC documentation: Using Vector Instructions through Built-in Functions<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html">https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html</a>
</li>

<li>SSE (Streaming SIMD Extentions)<br />
<a href="http://www.songho.ca/misc/sse/sse.html">http://www.songho.ca/misc/sse/sse.html</a>
</li>

<li>Timothy A. Chagnon: SSE and SSE2<br />
<a href="http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf">http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf</a>
</li>

<li>Intel corporation: Extending the Worldr's Most Popular Processor Architecture<br />
<a href="http://download.intel.com/technology/architecture/new-instructions-paper.pdf">http://download.intel.com/technology/architecture/new-instructions-paper.pdf</a>
</li>

<li>SIMD architectures:<br />
<a href="http://arstechnica.com/old/content/2000/03/simd.ars/">http://arstechnica.com/old/content/2000/03/simd.ars/</a>
</li>

<li>Tour of the Black Holes of Computing!: Floating Point<br />
<a href="http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt">http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt</a>
</li>

<li>3Dnow! Technology Manual<br />
AMD Inc., 2000</li>

<li>Intel MMX<sup>TM</sup> Technology Overview<br />
Intel corporation, 1996</li>

<li>MultiMedia eXtensions<br />
<a href="http://softpixel.com/~cwright/programming/simd/mmx.php">http://softpixel.com/~cwright/programming/simd/mmx.php</a>i
</li>

<li>AMD K5 ("K5" / "5k86")<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g5K5-c.html">http://www.pcguide.com/ref/cpu/fam/g5K5-c.html</a>
</li>

<li>Sixth Generation Processors<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g6.htm">http://www.pcguide.com/ref/cpu/fam/g6.htm</a>
</li>

<li>Great Microprocessors of the Past and Present<br />
<a href="http://www.cpushack.com/CPU/cpu1.html">http://www.cpushack.com/CPU/cpu1.html</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Very_long_instruction_word">http://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>CPU design (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CPU_design">http://en.wikipedia.org/wiki/CPU_design</a>
</li>

<li>Grafické karty a grafické akcelerátory (14)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/</a>
</li>

<li>Grafické karty a grafické akcelerátory (15)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/</a>
</li>

<li>Grafické karty a grafické akcelerátory (16)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/</a>
</li>

<li>VESA Video Modes<br />
<a href="https://wiki.osdev.org/VESA_Video_Modes">https://wiki.osdev.org/VESA_Video_Modes</a>
</li>

<li>Introduction to VESA programming<br />
<a href="http://www.monstersoft.com/tutorial1/VESA_intro.html">http://www.monstersoft.com/tutorial1/VESA_intro.html</a>
</li>

<li>Guide: VBE 2.0 graphics modes<br />
<a href="https://delorie.com/djgpp/doc/ug/graphics/vbe20.html">https://delorie.com/djgpp/doc/ug/graphics/vbe20.html</a>
</li>
</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

