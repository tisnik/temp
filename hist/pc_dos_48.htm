<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Překladače na platformě IBM PC: od assembleru k&nbsp;C</a></p>
<p><a href="#k02">*** 2. Programovací jazyk C</a></p>
<p><a href="#k03">*** 3. Lattice C</a></p>
<p><a href="#k04">*** 4. Aztec C</a></p>
<p><a href="#k05">*** 5. Zortech C</a></p>
<p><a href="#k06">*** 6. Turbo C</a></p>
<p><a href="#k07">*** 7. Borland C++</a></p>
<p><a href="#k08">*** 8. Watcom C</a></p>
<p><a href="#k09">*** 9. Jak kvalitní byly překladače céčka pro IBM PC?</a></p>
<p><a href="#k10">*** 10. Příklad první: funkce pro součet dvou celých čísel</a></p>
<p><a href="#k11">*** 11. Výsledky vygenerované překladačem Borland C++</a></p>
<p><a href="#k12">*** 12. Výsledky vygenerované překladačem Watcom C</a></p>
<p><a href="#k13">*** 13. Příklad druhý: vyplnění paměťového bloku</a></p>
<p><a href="#k14">*** 14. Výsledky vygenerované překladačem Borland C++</a></p>
<p><a href="#k15">*** 15. Výsledky vygenerované překladačem Watcom C</a></p>
<p><a href="#k16">*** 16. Příklad třetí: nalezení prvku v&nbsp;poli s&nbsp;maximální hodnotou</a></p>
<p><a href="#k17">*** 17. Výsledky vygenerované překladačem Borland C++</a></p>
<p><a href="#k18">*** 18. Výsledky vygenerované překladačem Watcom C</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Překladače na platformě IBM PC: od assembleru k&nbsp;C</h2>

<img src="https://i.iinfo.cz/images/571/c-mos-6502-1.png" class="image-661833" alt="&#160;" title="Autor: third_party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="309" height="400" />
<p><i>Obrázek 1: Přebal druhého vydání slavné knihy &bdquo;The C Programming
Language&ldquo; (Kerningan, Ritchie)</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Programovací jazyk C</h2>

<p>Jedním z&nbsp;nejpopulárnějších v&nbsp;současnosti používaných programovacích jazyků je stále (což je mimochodem zajímavé a hodně to vypovídá o realitě v&nbsp;IT) programovací jazyk C navržený Dennisem Ritchiem. Jazyk C se postupně vyvinul z&nbsp;programovacích jazyků BPCL (autor Martin Richards, 1966) a B (autor Ken Thompson, 1970) až do současné podoby, která byla standardizována v&nbsp;několika normách, z&nbsp;nichž nejznámější je pravděpodobně stále ještě ISO/IEC 9899:1999 známá pod zkráceným označením <i>C99</i> (následoval <i>C11</i> neboli ISO/IEC 9899:2011, <i>C17</i> neboli ISO/IEC 9899:2018 a konečně <i>C23</i> neboli ISO/IEC 9899:2024 ). Starší, dodnes v&nbsp;některých případech stále ještě používaný standard se jmenuje ISO 9899:1990, tento starší standard je prakticky shodný (až na jiné číslování jednotlivých paragrafů) s&nbsp;normou ANSI C (ANSI X3.159-1989 &bdquo;Programming Language C&ldquo;) a zkráceně se označuje <i>C89</i> či méně často <i>C90</i>. Se všemi zkratkami C89, C90, C99, C11, C17 a C23 se ještě v&nbsp;tomto článku setkáme.</p>

<p>Programovací jazyk C je i přes absenci některých důležitých vlastností (například mu chybí automatický správce paměti či podpora silného typování a práce s&nbsp;objekty, výjimkami, uzávěry atd.) využívaný jak pro tvorbu open source aplikací, tak i v&nbsp;čistě komerční oblasti &ndash; nejedná se jen o vývoj aplikací pro desktopy a servery, ale i pro mikrořadiče či digitální signálové procesory (DSP). Céčko je mnohdy využíváno i ve funkci cílového jazyka, do něhož se překládají (transpilují) programy zapsané v&nbsp;některých vyšších programovacích jazycích &ndash; vývojáři, kteří překladače těchto jazyků vytváří, se tak nemusí starat například o nízkoúrovňové optimalizace, protože je za ně již naprogramovali vývojáři překladače céčka.  Z&nbsp;historického hlediska je zajímavé, že právě tímto způsobem vznikla první verze jazyka C++ (nástroj Cpre), i když moderní překladače C++ jsou již řešeny odděleně.</p>

<p>To však není zdaleka vše, protože programovací jazyk C je dodnes důležitý i z&nbsp;toho důvodu, že jak rozhraní jader některých operačních systémů (Linux, Microsoft Windows i dalších systémů), tak rozhraní systémových knihoven bylo navrženo s&nbsp;ohledem na jmenné konvence céčka i s&nbsp;ohledem na možnosti jeho linkeru (a ostatní jazyky toto rozhraní s&nbsp;většími či menšími problémy dodržují).</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Lattice C</h2>

<p>Pravděpodobně prvním překladačem céčka pro IBM PC byl <i>Lattice C</i> z&nbsp;roku 1982, který byl později převeden i na Amigu (i z&nbsp;tohoto důvodu se o něm zde zmiňuji), dále se rozšířil i na minipočítače a mainframy společnosti IBM. Zajímavé bylo, že firma Microsoft překladač <i>Lattice C</i> nabízela pod svým názvem <i>MSC (Microsoft C)</i> a teprve verze <i>MSC 4.0</i> byla skutečně vytvořena přímo programátory z&nbsp;Microsoftu. <i>Lattice C</i> byl používán i při portaci aplikací z&nbsp;operačního systému <i>CP/M</i> na DOS (dnes je však možné pouze odhadnout, kolik kódu bylo skutečně napsáno v&nbsp;céčku a kolik kódu vzniklo transformací assembleru).</p>

<img src="http://i.iinfo.cz/images/15/gamesc4.jpg" class="image-161782" width="450" height="265" alt="&#160;" />
<p><i>Obrázek 2: Lattice C.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Aztec C</h2>

<p>Jedním ze známých překladačů programovacího jazyka C, který byl kromě platformy IBM PC dostupný mj.&nbsp;i pro počítače <i>Amiga</i>, byl překladač nazvaný <i>Aztec C</i> společnosti <i>Manx Software Systems</i>. Jednalo se o ve své době velmi úspěšný překladač, jenž existoval jak ve verzi pro osmibitové mikroprocesory (MOS 6502, Zilog Z-80), tak i pro mikroprocesory 16bitové a 32bitové. Tento překladač byl velmi úspěšný právě na Amize, kde byl používán, společně s&nbsp;<i>Lattice C</i>, prakticky až do faktického zániku této platformy. Ovšem na druhé straně na IBM PC jeho sláva netrvala dlouho, především z&nbsp;toho důvodu, že firma Microsoft považovala segment překladačů za poměrně důležitý a snažila se vytlačit jakoukoli konkurenci z&nbsp;trhu (i když ve skutečnosti v&nbsp;té době ještě neměla vlastní céčkový překladač. Společnosti <i>Manx Software Systems</i> se postupně zmenšoval počet platforem, na něž bylo možné překladač prodávat a přechod na podporu vestavěných systémů již přišel dosti pozdě.</p>

<img src="http://i.iinfo.cz/images/365/gamesc3.jpg" class="image-161781" width="450" height="259" alt="&#160;" />
<p><i>Obrázek 3: Logo překladačů Aztec C.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Jak kvalitní byly překladače céčka pro IBM PC?</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Příklad první: funkce pro součet dvou celých čísel</h2>

<pre>
int add(int a, int b) {
    return a+b;
}
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Výsledky vygenerované překladačem Borland C++</h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Výsledky vygenerované překladačem Watcom C</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<pre>
#include <mem.h>

void * memset(void *dest, register int val, register size_t len) {
    register unsigned char *ptr = (unsigned char*)dest;
    while (len-- &gt; 0)
        *ptr++ = val;
    return dest;
}
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<pre>
#include &lt;stdio.h&gt;
&nbsp;
typedef unsigned int uint;
&nbsp;
uint <strong>find_max</strong>(uint *array, uint length) {
    uint max = 0;
    uint i;
    uint *item = array;
&nbsp;
    for (i=0; i &lt; length; i++) {
        if (max &lt; *item) {
            max = *item;
        }
        item++;
    }
    return max;
}
&nbsp;
int <strong>main</strong>(void) {
#define LENGTH 10
&nbsp;
    uint array[LENGTH] = {5, 6, 7, 8, 9, 0, 1, 2, 3, 4};
    uint max = find_max(array, LENGTH);
    printf("%d\n", max);
    return 0;
}
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>17</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>18</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>19</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>20</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>21</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
<tr><td>22</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/compilers/">https://github.com/tisnik/8bit-fame/blob/master/compilers/</a></td></tr>
</table>

./bc:
add1.asm
add2.asm
add3.asm
add4.asm
add5.asm
add.c
find_max_1.asm
find_max_2.asm
find_max_3.asm
find_max.c
memset_2.asm
memset.asm
memset.c

./gcc:
add.asm
add.c
find_max.c
find_max_default.asm
find_max_smallest.asm
find_max_vector.asm
memset_1.asm
memset_2.asm
memset.c

./watcom:
add1.asm
add2.asm
add.c
find_max_1.asm
find_max_2.asm
find_max_3.asm
find_max.c
memset1.asm
memset2.asm
memset3.asm
memset.c



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Warnings Are Your Friend - A Code Quality Primer<br />
<a href="https://hackaday.com/2018/11/06/warnings-are-your-friend-a-code-quality-primer/">https://hackaday.com/2018/11/06/warnings-are-your-friend-a-code-quality-primer/</a>
</li>

<li>Defending Against Compiler-Based Backdoors<br />
<a href="https://blog.regehr.org/archives/1241">https://blog.regehr.org/archives/1241</a>
</li>

<li>Reflections on Trusting Trust<br />
<a href="https://www.win.tue.nl/~aeb/linux/hh/thompson/trust.html">https://www.win.tue.nl/~aeb/linux/hh/thompson/trust.html</a>
</li>

<li>Coding Machines (povídka)<br />
<a href="https://www.teamten.com/lawrence/writings/coding-machines/">https://www.teamten.com/lawrence/writings/coding-machines/</a>
</li>

<li>Stage0<br />
<a href="https://bootstrapping.miraheze.org/wiki/Stage0">https://bootstrapping.miraheze.org/wiki/Stage0</a>
</li>

<li>Projekt stage0 na GitHubu<br />
<a href="https://github.com/oriansj/stage0">https://github.com/oriansj/stage0</a>
</li>

<li>Bootstraping wiki<br />
<a href="https://bootstrapping.miraheze.org/wiki/Main_Page">https://bootstrapping.miraheze.org/wiki/Main_Page</a>
</li>

<li>Bootstrapped 6502 Assembler<br />
<a href="https://github.com/robinluckey/bootstrap-6502">https://github.com/robinluckey/bootstrap-6502</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>What is a coder's worst nightmare?<br />
<a href="https://www.quora.com/What-is-a-coders-worst-nightmare/answer/Mick-Stute">https://www.quora.com/What-is-a-coders-worst-nightmare/answer/Mick-Stute</a>
</li>

<li>Tiny C Compiler<br />
<a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a>
</li>

<li>Welcome to C--<br />
<a href="https://www.cs.tufts.edu/~nr/c--/index.html">https://www.cs.tufts.edu/~nr/c--/index.html</a>
</li>

<li>c4 - C in four functions<br />
<a href="https://github.com/rswier/c4">https://github.com/rswier/c4</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

