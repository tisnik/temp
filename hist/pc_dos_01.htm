<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Vývoj her a grafických dem pro oslavovanou i nenáviděnou platformu PC (úvod)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Vývoj her a grafických dem pro oslavovanou i nenáviděnou platformu PC (úvod)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Vývoj her a grafických dem pro oslavovanou i nenáviděnou platformu PC (úvod)</a></p>
<p><a href="#k02">2. Vznik konceptu IBM PC</a></p>
<p><a href="#k03">3. Osmibitový či šestnáctibitový počítač?</a></p>
<p><a href="#k04">4. Počítač bez specializovaných zákaznických obvodů</a></p>
<p><a href="#k05">*** 5. IBM PC z&nbsp;pohledu programátora</a></p>
<p><a href="#k06">*** 6. Co je zapotřebí k&nbsp;vývoji? Editor, assembler, Sysman a dostatek kafe</a></p>
<p><a href="#k07">*** 7. DOSBox</a></p>
<p><a href="#k08">*** 8. Assembler vhodný pro vývoj pro IBM PC</a></p>
<p><a href="#k09">9. Netwide Assembler (NASM)</a></p>
<p><a href="#k10">10. Flat Assembler (FASM)</a></p>
<p><a href="#k11">11. Instalace Netwide Assembleru</a></p>
<p><a href="#k12">*** 12. První program pro IBM PC v&nbsp;assembleru: Hello world!</a></p>
<p><a href="#k13">13. Úplný zdrojový kód programu typu &bdquo;Hello, world!&ldquo;</a></p>
<p><a href="#k14">*** 14. Výsledný program, jeho spuštění v&nbsp;DOSBoxu</a></p>
<p><a href="#k15">*** 15. Čekání na stisk klávesy</a></p>
<p><a href="#k16">16. Úplný zdrojový kód programu, který čeká na stisk klávesy</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Vývoj her a grafických dem pro oslavovanou i nenáviděnou platformu PC (úvod)</h2>

August 12, 1981; 42 years ago
6 let
Intel 8088 @ 4.77 MHz
Memory  16 KB – 256 KB (motherboard) (DRAM)
CGA, MDA
PC Speaker
rozsirujici sbernice

https://www.tech-insider.org/personal-computers/research/1990/images/09_a.JPG


<p><a name="k02"></a></p>
<h2 id="k02">2. Vznik konceptu IBM PC</h2>

<p>Na přelomu let 1980 a 1981 již byly splněny všechny podmínky, které umožnily
nejenom vznik konceptu PC, ale i jeho komerční úspěch, což je o to důležitější,
když si uvědomíme, jak problematické a mnohdy krátkodobé byly mnohé další
projekty v&nbsp;oblasti osmibitových domácích či 16/32bitových osobních
mikropočítačů (máme totiž tendenci si pamatovat úspěšné projekty, těch
neúspěšných však bylo mnohem více). Koncept osobního počítače už v&nbsp;té době
existoval (takto se označovala například celá řada <i>Apple II</i>), takže
v&nbsp;tomto ohledu firma IBM vlastně nevymyslela nic nového. Taktéž již
existovaly mikroprocesory odpovídající požadavkům IBM (muselo se jedna o
nezávislé výrobce &ndash; to splňovaly čipy řady 86).</p>

<a href="http://i.iinfo.cz/images/292/pc-hist-34-2.jpg"><img src="http://i.iinfo.cz/images/292/pc-hist-34-2-prev.jpg" alt=" " height="270" width="234" /></a>
<p><i>Obrázek 2: Pohled do nitra počítače Apple II. V&nbsp;zadní části můžeme
vidět sloty určené pro připojení přídavných karet.</i></p>

<p>K&nbsp;dispozici navíc byly i obvody nutné pro realizaci video systému
(k&nbsp;tomu se samozřejmě ještě vrátíme, to je totiž jedna ze špatných věcí
PC), DRAM s&nbsp;požadovanou kapacitou (začínalo se na 16kB a pokračovalo až do
64kB, teprve později se kapacita zdesateronásobila). A navíc již měla firma IBM
zkušenosti z&nbsp;vývoje univerzálních sběrnic, protože právě existence
standardizované sběrnice je fakt, který počítač IBM PC odlišoval od dalších
dobových do značné míry uzavřených systémů. Možnost rozšiřování PC přes
standardizovanou sběrnici byla velmi dobrou myšlenkou, která tuto platformu
pomohla rozšířit.</p>

<img src="https://i.iinfo.cz/images/89/pc-1.png" class="image-444628" alt="&#160;" width="794" height="227" />
<p><i>Obrázek 3: Cesta ke konceptu IBM PC.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Osmibitový či šestnáctibitový počítač?</h2>

<p>Osobní mikropočítače IBM PC byly oficiálně postaveny na mikroprocesorové
architektuře <i>Intel 8086</i>, díky čemž je tato architektura vlastně stále
živá (16bitový reálný režim zde totiž stále existuje kvůli
<i>bootstrapingu</i>). Jednalo se o plně šestnáctibitovou architekturu, která
však ideově navazovala na předchozí dvě generace osmibitových mikroprocesorů
společnosti Intel, tj.&nbsp;na řadu <i>Intel 8008</i> a především pak úspěšný
<i>Intel 8080</i>, který se na určitou dobu stal průmyslovým standardem.</p>

<p>Nicméně samotné IBM PC (tedy vůbec první počítač z&nbsp;této rodiny)
nepoužívalo mikroprocesor <i>Intel 8086</i>, ale jeho &bdquo;osekanou&ldquo; a
levnější variantu nazvanou <i>Intel 8088</i>. Ona osmička na konci číselného
označení čipu naznačuje, že i když se interně jednalo o šestnáctibitový
mikroprocesor, externí datová sběrnice byla pouze osmibitová. Interně byl ovšem
Intel 8088 prakticky totožný s&nbsp;Intelem 8086, a to včetně
aritmeticko-logické jednotky (<i>ALU</i>) i <i>execution unit</i> (<i>EU</i>).
Odlišovala se jen jediná komponenta, a to konkrétně <i>bus interface unit</i>
(<i>BIU</i>).</p>

<p>Otázkou zůstává, jak se na mikroprocesor Intel 8088 dívat &ndash; jedná se o
osmibitový či šestnáctibitový čip? Z&nbsp;pohledu aritmeticko-logické jednotky
a interní datové sběrnice jde o šestnáctibitový čip, z&nbsp;pohledu externího
pak o čip osmibitový. A programátoři vlastně ani nerozliší mezi plnohodnotným
čipem <i>Intel 8086</i> a jeho &bdquo;shrouhnutou&ldquo; variantou <i>Intel
8088</i> (až na pomalejší běh programů).</p>

<p><div class="rs-tip-major">Poznámka: podobné nejasnosti panují okolo
konkurenční Motoroly 68000, která je považována za 16/32 bitový čip, i když
většina ALU operací je ve skutečnosti plně 32bitová.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Počítač bez specializovaných zákaznických obvodů</h2>

<p>Použití z&nbsp;vnějšího pohledu &bdquo;pouze&ldquo; osmibitového
mikroprocesoru <i>Intel 8088</i> bylo ve skutečnosti velmi dobrým inženýrským
rozhodnutím, které určilo základní vlastnosti IBM PC. Znamenalo totiž, že na
úkor výpočetní rychlosti (pomalejší načítání instrukcí a dat) bylo možné celé
IBM PC postavit na bázi osmibitových čipů, konkrétně čipů <i>Intel 8251</i>
(UART), <i>Intel 8253</i> (programovatelný časovač), <i>Intel 8237/8257</i>
(programovatelný řadič DMA), <i>Intel 8255</i> (paralelní rozhraní) a konečně
<i>Intel 8259</i> (programovatelný řadič přerušení). K&nbsp;tomu připočtěme
grafický subsystém, který je postaven na čipu <i>Motorola 6845</i>, nezávisle
na tom, zda se použila karta MDA či CGA.</p>

<p>Důležité přitom je, že všechny výše zmíněné čipy byly běžně dostupné na
trhu, dobře zdokumentované a IBM PC vůbec nepoužívalo specializované zákaznické
obvody. To je v&nbsp;poměrně ostrém kontrastu s&nbsp;mnoha tehdejšími
osmibitovými domácími počítači, jejichž součástí většinou zákaznické obvody
byly (ULA na ZX Spectru, ANTIC, GTIA a POKEY na Atari, VIC-II a SID na
Commodore C64), nemluvě o počítačích řady Atari ST a především Amiga. Počítač
IBM PC tak bylo možné relativně snadno &bdquo;naklonovat&ldquo; a skutečně
&ndash; postupně vzniklo mnoho firem, které nabízely vlastní varianty PC,
mnohdy prakticky zcela kompatibilní s&nbsp;originálem, někdy
s&nbsp;nekompatibilními změnami a vylepšeními.</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. IBM PC z&nbsp;pohledu programátora</h2>

<p></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Co je zapotřebí k&nbsp;vývoji? Editor, assembler, Sysman a dostatek kafe</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Netwide Assembler (NASM)</h2>

<p>Jedním z&nbsp;volně dostupných assemblerů, které bude možné použít i pro
vývoj na IBM PC, je známý <i>Netwide Assembler (NASM)</i>. Tento assembler
vznikl v&nbsp;době, kdy začali na operační systém Linux přecházet programátoři
znající a používající operační systémy DOS a (16/32bit) Windows. Tito
programátoři byli většinou dobře seznámeni s&nbsp;možnostmi assemblerů, které
se na těchto platformách používaly nejčastěji &ndash; <i>Turbo Assembleru
(TASM)</i> společnosti Borland i <i>Microsoft Macro Assembleru (MASM)</i> a tak
jim možnosti na Linuxu standardního <i>GNU Assembleru</i> (který má své kořeny
na odlišných architekturách) příliš nevyhovovaly.</p>

<p>Výsledkem snah o vytvoření nástroje podobnému <i>TASMu</i> či <i>MASMu</i>
byl právě projekt pojmenovaný <i>NASM</i>, který podporuje stejný způsob zápisu
operandů instrukcí a navíc ještě zjednodušuje zápis těch instrukcí, u nichž je
jeden operand tvořen nepřímou adresou. <i>NASM</i> byl následován projektem
<i>Yasm</i> (fork+přepis), ovšem základní vlastnosti a především pak vazba na
platformu i386 a x86_64 zůstaly zachovány (to mj.&nbsp;znamená, že například na
<i>Raspberry Pi</i> možnosti těchto dvou nástrojů plně nevyužijeme, což je
určitě škoda, protože zrovna tento mikropočítač se poměrně dobře hodí pro výuku
assembleru). Nicméně pro DOS a IBM PC nám bude tento assembler plně
vyhovovat.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Flat Assembler (FASM)</h2>

<p>Dalším vhodným assemblerem je <i>FASM</i> neboli <i>flat assembler</i>
(nikoli <i>fast assembler</i>, i když i toto jméno by v&nbsp;tomto případě bylo
poměrně příhodné). <i>FASM</i> má poměrně velké množství zajímavých vlastností.
Jedná se o assembler určený pro platformy x86, IA-32 i x86-64. Pod těmito
zkratkami se skrývá původní šestnáctibitová instrukční sada procesorů řady 8086
(což nás přesně zajímá), dále 32bitové rozšíření této instrukční sady (někdy
označované i386, i686 atd.&nbsp;podle konkrétní varianty, dostupných pracovních
registrů atd.) a konečně 64bitové rozšíření této instrukční sady.</p>

<p>Dále <i>FASM</i> podporuje generování výstupu v&nbsp;různých formátech,
včetně &bdquo;plochého&ldquo; binárního formátu (pouze kódy instrukcí a
případná statická data), souborů COM z&nbsp;DOSu (dtto to samé, ovšem
s&nbsp;posunutou základní adresou), formátů ELF, COFF, PE, MZ atd. K&nbsp;této
důležité problematice se ještě vrátíme v&nbsp;dalším textu.</p>

<p>Zajímavé je, že způsob překladu či formát výstupního souboru, který
assembler generuje, se nezadává přepínači zadávanými na příkazové řádce ani
s&nbsp;využitím konfiguračních souborů. Tyto informace jsou totiž přímo
součástí zdrojových kódů a navíc je zaručeno, že <i>FASM</i> pro stejné vstupní
zdrojové kódy vždy vygeneruje bitově naprosto totožný výstup (což je poněkud
paradoxně problematika, ke které se v&nbsp;IT zase vracíme). Samozřejmě ovšem
můžeme tento koncept &bdquo;ohnout&ldquo;, například tak, že vstupní zdrojový
soubor bude obsahovat informace o výstupním formátu, ale bude direktivou
<strong>include</strong> při překladu vkládat například obecné knihovní
subrutiny atd.</p></p>

<p>A navíc je samotný <i>FASM</i> naprogramován přímo ve <i>FASM</i>, tedy sám
v&nbsp;sobě (viz <a
href="https://github.com/tgrysztar/fasm?tab=readme-ov-file">jeho zdrojové
kódy</a>), což znamená, že dnes již (bez bootstrapingu, viz též <a
href="https://www.root.cz/clanky/muzeme-verit-prekladacum-projekty-resici-schema-duverive-duvery/">Můžeme
věřit překladačům? Projekty řešící schéma „důvěřivé důvěry“</a>) může přeložit
sám sebe. Díky podpoře různých platforem (16bitová, 32bitová, 64bitová) i
různých výstupních formátů lze <i>FASM</i> přeložit (cross překladem) na různé
platformy (DOS, Windows, Linux, <a
href="http://www.menuetos.net/">MenuetOS</a>...) a přitom budou výsledné
spustitelné binární soubory s&nbsp;assemblerem naprosto totožné se soubory
získanými instalací <i>FASM</i> například z&nbsp;repositářů nějaké
distribuce.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Instalace Netwide Assembleru</h2>

<p>V&nbsp;současných distribucích Linuxu nalezneme většinou právě <i>Netwide
Assembler</i>, takže prozatím využijeme tento užitečný nástroj. Jeho instalace
je většinou jednoduchá, protože nemá prakticky žádné závislosti. Příkladem může
být instalace ne Fedoře 38:</p>

<pre>
$ <strong>sudo dnf install nasm</strong>
&nbsp;
Last metadata expiration check: 0:46:41 ago on Fri 28 Jun 2024 03:20:33 PM CEST.
Dependencies resolved.
============================================================================================
 Package                 Architecture        Version              Repository           Size
============================================================================================
Installing:
 nasm                    x86_64              2.16.01-3.fc38       fedora              455 k
&nbsp;
Transaction Summary
============================================================================================
Install  1 Package
&nbsp;
Total download size: 455 k
Installed size: 3.3 M
Is this ok [y/N]:
</pre>

<p>Po instalaci si ověříme, že je Netwide Assembler spustitelný:</p>

<pre>
$ <strong>nasm -version</strong>
&nbsp;
NASM version 2.16.01 compiled on Jan 19 2023
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Úplný zdrojový kód programu typu &bdquo;Hello, world!&ldquo;</h2>

<pre>
<i>; Program typu "Hello, world!" urceny pro DOS a prelozitelny assemblerem NASM</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hello.com hello.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hello.com hello.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
start:
        <i>; tisk retezce na obrazovku</i>
        mov     dx, message
        mov     ah, 9
        int     0x21
&nbsp;
        <i>; ukonceni procesu a navrat do DOSu</i>
        mov     ah, 0x4c
        int     0x21
&nbsp;
        <i>; retezec ukonceny znakem $</i>
message db "Hello, world!", 0x0d, 0x0a, "$"
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Výsledný program, jeho spuštění v&nbsp;DOSBoxu</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Čekání na stisk klávesy</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Úplný zdrojový kód programu, který čeká na stisk klávesy</h2>

<pre>
<i>; Program typu "Hello, world!" urceny pro DOS a prelozitelny assemblerem NASM</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hello.com hello_wait.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hello.com hello_wait.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
start:
        <i>; tisk retezce na obrazovku</i>
        mov     dx, message
        mov     ah, 9
        int     0x21
&nbsp;
        <i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
        xor     ax, ax
        int     0x16
&nbsp;
        <i>; ukonceni procesu a navrat do DOSu</i>
        mov     ah, 0x4c
        int     0x21
&nbsp;
        <i>; retezec ukonceny znakem $</i>
message db "Hello, world!", 0x0d, 0x0a, "$"
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad pomocí assembleru <strong>NASM</strong>, byly uložen do Git repositáře,
který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th>#</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td>1</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/</a></td></tr>
<tr><td>2</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/</a></td></tr>
<tr><td>3</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

