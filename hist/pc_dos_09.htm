<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Od EGA ke grafickým kartám MCGA a VGA</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Od EGA ke grafickým kartám MCGA a VGA</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Od EGA ke grafickým kartám MCGA a VGA</a></p>
<p><a href="#k02">2. Grafická karta MCGA</a></p>
<p><a href="#k03">3. Textové a grafické režimy karty MCGA</a></p>
<p><a href="#k04">4. Video signály generované kartou MCGA</a></p>
<p><a href="#k05">5. Grafická karta VGA: PC přebírá štafetu coby herní platforma</a></p>
<p><a href="#k06">6. Textové režimy podporované kartou VGA</a></p>
<p><a href="#k07">7. První demonstrační příklad: zobrazení textu se znaky v&nbsp;masce 9&times;16 pixelů</a></p>
<p><a href="#k08">8. Textové režimy s&nbsp;odlišným počtem textových řádků</a></p>
<p><a href="#k09">9. Druhý demonstrační příklad: textový režim 80&times;50 znaků a 80&times;28 znaků</a></p>
<p><a href="#k10">10. Způsob zobrazení devátého sloupce pixelů u každého znaku</a></p>
<p><a href="#k11">11. Třetí demonstrační příklad: změna způsobu zobrazení devátého sloupce pixelů</a></p>
<p><a href="#k12">12. Modifikace tvaru textového kurzoru</a></p>
<p><a href="#k13">13. Čtvrtý demonstrační příklad: modifikace tvaru textového kurzoru</a></p>
<p><a href="#k14">14. Načtení vlastní znakové sady</a></p>
<p><a href="#k15">15. Pátý demonstrační příklad: načtení a zobrazení vlastní znakové sady</a></p>
<p><a href="#k16">*** 16. Zákaz blikání znaků v&nbsp;textových režimech: složitější operace, než kdy dříve</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<img src="https://i.iinfo.cz/images/596/pc-09-a-1.webp" class="image-1129527" width="320" height="200" alt="&#160;" title="Autor: tisnik, wikipedia, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 1: Tento screenshot má sice pouze třináct barev, ale pro jeho
korektní zobrazení je zapotřebí karta VGA. V&nbsp;případě, že hra běží na kartě
EGA (což je podporováno), bude barvová paleta mnohem omezenější a obrázek bude
po vizuální stránce horší.</i></p>

<img src="https://i.iinfo.cz/images/596/pc-09-a-2.webp" class="image-1129528" width="320" height="200" alt="&#160;" title="Autor: tisnik, wikipedia, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 2: </i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Grafická karta MCGA</h2>

<p>Grafický adaptér označovaný zkratkou <i>MCGA</i>, neboli celým názvem
<i>MultiColor Graphics Array</i>, navrhla společnost IBM pro svoji známou řadu
počítačů PS/2, konkrétně pro modely PS/2 25 a PS/2 30 (jedná se o nejnižší
model z&nbsp;celé řady PS/2, což je zkratka Personal System/2). V&nbsp;podstatě
se jedná o značně zjednodušenou (a z&nbsp;tohoto důvodu i na výrobu levnější)
variantu grafické karty <i>VGA</i>, která bude popsána v&nbsp;dalším textu.
V&nbsp;původním návrhu firmy IBM byl adaptér <i>MCGA</i> integrován přímo na
základní desce, což je podstatný rozdíl oproti všem dříve popsaným grafickým
kartám <i>MDA</i>, <i>CGA</i>, <i>EGA</i> i <i>Hercules</i>, u nichž byla
striktně dodržena základní idea počítačů IBM PC &ndash; velká variabilita
spočívající v&nbsp;umístění většiny modulů počítače na přídavné karty a nikoli
přímo na základní desku (původně nebyly na základní desce dokonce osazeny ani
obvody pro paralelní či sériové porty, které bývaly součástí jiných karet,
včetně některých karet grafických &ndash; viz například již popsaná grafická
karta <i>Hercules</i> či zvuková karta <i>AdLib</i>).</p>

<a href="https://i.iinfo.cz/images/577/pc86-1.png"><img src="https://i.iinfo.cz/images/577/pc86-1-prev.png" alt="pc86" width="360" height="270" /></a>
<p><i>Obrázek 3: Známý český textový editor T602 spuštěný v&nbsp;dvoubarevném
grafickém režimu karty MCGA s&nbsp;rozlišením 640&times;480. V&nbsp;obrazové
paměti se pro tento režim muselo alokovat celkem 640&times;480/8=38400 bajtů,
tj.&nbsp;více než polovina dostupné video RAM.</i></p>

<p>Firma IBM se snažila, aby grafický adaptér <i>MCGA</i> nahradil v&nbsp;té
době již zcela nevyhovující a zastaralou grafickou kartu <i>CGA</i>.
Z&nbsp;tohoto důvodu je <i>MCGA</i> s&nbsp;touto kartou slučitelná, ovšem
s&nbsp;tím rozdílem, že není možné použít původní typy monitorů, protože je zde
použit nový typ rozhraní s&nbsp;analogovými barvonosnými signály (důvody pro
tuto změnu si ihned řekneme). <i>MCGA</i> však není, což je trošku zvláštní,
zpětně kompatibilní s&nbsp;grafickou kartou <i>EGA</i>, na rozdíl od karty
<i>VGA</i>, kde je zpětná kompatibilita s&nbsp;předchozí řadou grafických karet
firmy IBM vyřešena lepším způsobem (a to až na úroveň většiny řídicích
registrů), ovšem na úkor zvýšené složitosti při nastavování textových či
grafických režimů, což bylo částečně odstíněno službami BIOSu. Kapacita
obrazové paměti byla v&nbsp;případě grafického adaptéru <i>MCGA</i> rovna 64
kB, což je obecně méně, než u grafické karty <i>EGA</i>, která mohla být
osazena až 256 kB video paměti či karty <i>VGA</i> osazené vždy 256 kB.
Z&nbsp;poměrně malé kapacity obrazové paměti pak vyplývají i omezené možnosti
grafických režimů popsané v&nbsp;dalším textu, ale současně i již zmiňovaná
nízká cena.</p>

<img src="https://i.iinfo.cz/images/577/pc86-2.png" alt="pc86" width="320" height="200" />
<p><i>Obrázek 4: Úvodní obrazovka populární hry Tank Wars (ideový předchůdce
možná známější hry Scorched Earth), která využívala grafický režim adaptéru
MCGA s&nbsp;rozlišením 320&times;200 pixelů s&nbsp;možností zobrazení 256
barev. Tyto barvy se skutečně ve hře využívaly.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Textové a grafické režimy karty MCGA</h2>

<p>Grafický adaptér <i>MCGA</i> podporoval několik nových grafických režimů,
které bylo možné nastavit i s&nbsp;využitím služeb BIOSu (přesněji řečeno
&ndash; tyto režimy jsou stále součástí BIOSu, takže jsou dostupné i
v&nbsp;současnosti). V&nbsp;textových režimech byly znaky ve znakové sadě
definovány s&nbsp;využitím masky o velikosti 8&times;16 pixelů (platí pro
textový režim s&nbsp;25 textovými řádky), resp. 8&times;8 pixelů (platí pro
textový režim s&nbsp;padesáti textovými řádky), což znamená, že se oproti dále
popisované grafické kartě <i>VGA</i> (ale i vůči <i>MDA</i> či
<i>Herculesu</i>) snížilo horizontální rozlišení ze 720 pixelů na 640 pixelů,
takže čitelnost textu byla o poznání horší. Způsob uspořádání video paměti
v&nbsp;textových režimech je kompatibilní se všemi předchozími kartami: každý
znak je v&nbsp;tomto případě reprezentován dvojicí bajtů, přičemž do prvního
bajtu se ukládal kód znaku (rozšířená sada ASCII) a do bajtu druhého barva
popředí, barva pozadí a popř.&nbsp;i další atributy, například příznak
podtržení či blikání (v&nbsp;závislosti na konfiguraci textového režimu).</p>

<p><div class="rs-tip-major">Poznámka: interně byla video RAM stále rozdělena
na čtyři roviny. V&nbsp;první rovině byly uloženy ASCII kódy znaků, ve druhé
rovině atributy a v&nbsp;dalších dvou rovinách pak znakové sady. Karta
pracovala v&nbsp;režimu sudá-lichá, kdy přímo dostupné byly první dvě roviny,
jejichž obsah se &bdquo;mixoval&ldquo; tak, že to z&nbsp;pohledu programátora
vypadalo, jakoby za kódem každého znaku následoval jeho atributový
bajt.</div></p>

<img src="https://i.iinfo.cz/images/577/pc86-3.png" alt="pc86" width="320" height="200" />
<p><i>Obrázek 5: Prostředí hry Tank Wars.</i></p>

<p>Kromě textových režimů byly u tohoto grafického adaptéru zavedeny dva nové
rastrové grafické režimy, z&nbsp;nichž jeden byl velmi důležitý pro budoucnost
PC jako herní platformy. V&nbsp;prvním režimu bylo možné zobrazit rastrový
obraz o rozlišení 640&times;480 pixelů, ale pouze ve dvou barvách,
tj.&nbsp;s&nbsp;využitím jediné bitové roviny. Více bitových rovin nebylo možné
v&nbsp;tomto režimu použít z&nbsp;důvodu malé kapacity obrazové paměti, protože
pro dvoubarevný rastrový obraz v&nbsp;rozlišení 640×480 pixelů je zapotřebí
alokovat 640&times;480/8=38400 bajtů z&nbsp;dostupných 65536 bajtů.</p>

<img src="https://i.iinfo.cz/images/577/pc86-4.png" alt="pc86" width="320" height="200" />
<p><i>Obrázek 6: Hra Tank Wars potřetí &ndash; zásah protivníka.</i></p>

<p>Ve druhém grafickém režimu se zobrazoval rastr o rozlišení 320&times;200
pixelů v&nbsp;256 barvách, přičemž obrazová paměť byla využita téměř
stoprocentně: 320&times;200=64000 bajtů z&nbsp;65536. Tento grafický režim se
stal velmi populární, zejména však ve spojitosti s&nbsp;dále popsanou grafickou
kartou <i>VGA</i>, kde nabízel mnohem více možností (například scrolling obrazu
v&nbsp;libovolném směru, režim rozdělené obrazovky, double či triple buffering
atd.). A právě tento režim se používal velmi dlouho pro tvorbu her.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Video signály generované kartou MCGA</h2>

<p>Časování synchronizačních signálů v&nbsp;obou výše zmíněných grafických
režimech adaptéru MCGA je stejné, jako v&nbsp;případě dále popsané grafické
karty <i>VGA</i>. Konkrétně to znamená, že v&nbsp;režimu s&nbsp;rozlišením
640&times;480 pixelů je snímková frekvence nastavena na 60 Hz (dosti málo, ale
pořád lepší, než dřívějších 50 Hz), v&nbsp;režimu s&nbsp;rozlišením
320&times;200 pixelů je frekvence nastavena na 70 Hz (to je již mnohem lepší
pro déletrvající práci). Shodné bylo i rozhraní pro připojení monitoru ke
grafickému adaptéru. Poprvé se zde namísto konektoru DE-9 objevuje konektor
typu DE-15, který je po nepatrných modifikacích funkce některých pinů
(rozšíření o DDC a DDC-2) používán vlastně dodnes &ndash; viz <a
href="http://pinouts.ru/Video/VGA15_pinout.shtml">VGA pinout</a>. Díky tomu, že
barvonosné signály (R, G, B) jsou vyvedeny jako analogové signály, není
maximální počet barev omezen na šestnáct barev či 64 barev tak, jak je tomu u
monitorů pro grafickou kartu <i>CGA</i> nebo <i>EGA</i>, u nichž se každá
barvová složka přenášela pomocí dvojice binárních (TTL) signálů. Pro každou
složku tedy bylo možné nastavit pouze čtyři intenzity: nulovou, třetinovou,
dvoutřetinovou a maximální (a u monitoru CGA dokonce ani to ne, jen globální
intenzitu všech barvových složek).</p>

<img src="https://i.iinfo.cz/images/577/pc86-5.png" alt="pc86" width="320" height="200" />
<p><i>Obrázek 7: Mnohé hry pro IBM PC, například zde zobrazený slavný krokovací
dungeon Lands of Lore, využívaly standardní grafický režim s&nbsp;rozlišením
320&times;200 pixelů.</i></p>

<p>V&nbsp;případě grafických adaptérů <i>MCGA</i> i <i>VGA</i> je však
intenzita každé barvové složky reprezentována šesticí bitů, tj.&nbsp;je nutné
rozlišit 64 úrovní každé základní barvy (celkový počet barevných odstínů je
tedy roven 64<sup>3</sup>=262144). Právě z&nbsp;tohoto důvodu se informace o
barvách pixelů přenáší pomocí analogových signálů, u nichž je počet úrovní
omezen především šumem digitálně-analogového převodníku na straně grafické
karty a (analogových) obvodů v&nbsp;monitoru (plně digitální přenos by sice byl
možný, například s&nbsp;využitím vhodného sériového protokolu, nicméně
v&nbsp;dobách monitorů s&nbsp;CRT by to znamenalo zvýšenou složitost monitorů,
nehledě na nutnost použití velkého přenosového pásma). Rozšíření počtu úrovní
barvových složek je v&nbsp;tomto případě jednoduché, což se ukázalo při
přechodu na modernější a výkonnější grafické karty s&nbsp;větší kapacitou
obrazové paměti, které umožňovaly rozlišení 256 úrovní každé barvové složky a
tím pádem i možnost zobrazení 256<sup>3</sup>=16777216 barevných odstínů.</p>

<img src="https://i.iinfo.cz/images/577/pc86-6.jpg" alt="pc86" width="320" height="400" />
<p><i>Obrázek 8: První i druhý díl známé plošinovky Prince of Persia taktéž
využívaly grafický režim s&nbsp;rozlišením 320&times;200 pixelů.</i></p>

<p><div class="rs-tip-major">Poznámka: ovšem co se týče způsobu zobrazení
barev, není vše tak skvělé, jak to může z&nbsp;popisu vypadat. Na jednu stranu
se dodržovala kompatibilita s&nbsp;EGA (a tudíž se kódy barev převáděly
<i>dvakrát</i>) a navíc se nepočítalo s&nbsp;vyšší barevnou hloubkou
v&nbsp;budoucnosti (což je opomenutí, které osobně moc nechápu). Více se
dozvíme příště.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Grafická karta VGA: PC přebírá štafetu coby herní platforma</h2>

<p>Dalším &ndash; a nutno dodat, že dosti podstatným &ndash; technologickým
rozšířením grafických karet <i>CGA</i> a <i>EGA</i> vznikla grafická karta
<i>VGA</i>, jejíž název je odvozen ze sousloví <i>Video Graphics Array</i>.
Slovo <i>array</i> v&nbsp;tomto kontextu značí, že celá karta byla vytvořena na
jednom čipu, samozřejmě kromě nezbytných krystalů a paměťových modulů tvořících
obrazovou paměť (to je trošku nadneseně řečeno, protože se stačí podívat na
libovolnou VGA kartu a zjistíte, že kromě hlavního čipu a pamětí se zde nachází
i další podpůrné integrované obvody). Tato grafická karta byla poprvé použita
firmou IBM v&nbsp;počítačích řady IBM PS/2 (kromě dvou nejnižších modelů, ve
kterých byl nainstalován výše popsaný grafický adaptér <i>MCGA</i>).
V&nbsp;těchto typech počítačů však ještě <i>VGA</i> nebyla realizována jako
samostatná grafická karta, ale jednalo se o čipy a pomocné součástky umístěné
přímo na základní desce. Teprve později byla <i>VGA</i> nabízena i jako
samostatná karta určená pro šestnáctibitovou sběrnici ISA &ndash; právě tuto
variantu karty <i>VGA</i> (vyráběnou v&nbsp;mnoha obměnách i dalšími firmami,
nejenom samotnou IBM) zná většina uživatelů osobních počítačů. Navíc jsou
všechny následující grafické karty s&nbsp;VGA kompatibilní.</p>

<a href="https://i.iinfo.cz/images/577/pc86-10.png"><img src="https://i.iinfo.cz/images/577/pc86-10-prev.png" alt="pc86" width="370" height="247" /></a>
<p><i>Obrázek 9: Hra Scorched Earth (ve své podstatě vylepšená varianta výše
zmíněné hry Tank Wars) mohla být spuštěna jak ve standardním grafickém režimu
karty VGA s&nbsp;rozlišením 320&times;200 pixelů, tak i v&nbsp;některém
z&nbsp;rozšířených režimů (X-mód, Y-mód atd.), zde například v&nbsp;režimu
naprogramovaném pomocí řídicích registrů karty VGA na rozlišení 360&times;480
pixelů (což je sice neoficiální režim, ovšem plně kompatibilní).</i></p>

<p>Grafická karta <i>VGA</i> je do značné míry, tj.&nbsp;v&nbsp;některých
oblastech až na úroveň řídicích registrů, zpětně kompatibilní s&nbsp;již
popsanými grafickými kartami <i>CGA</i>, <i>EGA</i> a <i>MCGA</i> (nikoli však
s&nbsp;<i>Herculesem</i>), avšak s&nbsp;tím pochopitelným rozdílem, že není
možné použít původní monitory, protože se změnily frekvence synchronizačních
signálů i samotné rozhraní pro připojení monitorů. Velikost obrazové paměti je
rovna 256&nbsp;kB, protože v&nbsp;nejvyšším oficiálně podporovaném grafickém
režimu se pro framebuffer (obrazovou paměť) alokuje místo o kapacitě 150 kB
&ndash; viz též navazující text. Vzhledem k&nbsp;omezením daným BIOSem a DOSem
(samotné mikroprocesory již dokázaly v&nbsp;době nástupu karty <i>VGA</i>
adresovat v&nbsp;chráněném režimu minimálně šestnáctimegabajtový paměťový
prostor; stejný adresní rozsah nabízela i sběrnice ISA) se však nedá přímo
adresovat celá obrazová paměť, viditelné je vždy jedno či dvě
&bdquo;okna&ldquo;, každé o velikosti 64 kB, přičemž žádný z&nbsp;oficiálně
podporovaných grafických režimů nevyužívá současně obě okna.</p>

<a href="https://i.iinfo.cz/images/577/pc86-11.png"><img src="https://i.iinfo.cz/images/577/pc86-11-prev.png" alt="pc86" width="370" height="247" /></a>
<p><i>Obrázek 10: Herní prostředí hry Scorched Earth spuštěné v&nbsp;režimu o
rozlišení 360&times;480 pixelů. Aby bylo dosaženo korektního zobrazení na
dnešních počítačích, musel být screenshot zvětšen v horizontálním směru na
dvojnásobek.</i></p>

<p>Jedním z&nbsp;důvodů pro toto chování je i to, že v&nbsp;počítači může být
kromě grafické karty <i>VGA</i> nainstalována například i karta <i>MDA</i> či
<i>Hercules</i>, která s&nbsp;kartou <i>VGA</i> jedno paměťové okno musí sdílet
(opět se jedná o důvody dané omezením BIOSu a DOSu, protože pro mapování
obrazové paměti do adresního prostoru procesoru byly vyhrazeny pouze dva
segmenty začínající na adresách 0xa000:0000 a 0xb000:0000). Prakticky všechny
grafické karty, které jsou dnes vyráběné, jsou s&nbsp;grafickou kartou
<i>VGA</i> zpětně kompatibilní; její grafické režimy jsou použity například při
inicializaci některých graficky orientovaných operačních systémů. Ostatně
většina PCček má při startu BIOSu nastaven jeden z&nbsp;grafických režimů karty
<i>VGA</i>, typicky se jedná o šestnáctibarevný režim s&nbsp;rozlišením
640&times;400 pixelů, popř.&nbsp;720&times;400 pixelů.</p>

<img src="https://i.iinfo.cz/images/596/pc-09-a-3.gif" class="image-1129529" width="320" height="200" alt="&#160;" title="Autor: tisnik, wikipedia, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 11: V&nbsp;grafickém režimu 320&times;200 (resp.&nbsp;v&nbsp;od
něj odvozených režimech) běžela i slavná hra Doom.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Textové režimy podporované kartou VGA</h2>

<p>U grafické karty <i>VGA</i> se při práci s&nbsp;textovým režimem většinou
používá efektivní rozlišení 720&times;400 pixelů, což umožňuje v&nbsp;případě
standardního textového módu s&nbsp;25 řádky a 80 sloupci vytvářet znaky
v&nbsp;masce o velikosti 9&times;16 pixelů. Výsledkem je velká čitelnost textu
a současně i poměrně ergonomická obnovovací frekvence 70 Hz (všechny režimy
karty <i>VGA</i>, které zobrazovaly 200 či 400 řádků měly nastavenu tuto
obnovovací frekvenci). Tento textový režim se dodnes používá, a to mnohdy jak
během startu počítače (například při zobrazení tabulky s&nbsp;konfigurací
zařízení), tak i v&nbsp;BIOSu (původní Award BIOS apod.), DOSu a mnohdy též i
pro Linux a BSD běžící v&nbsp;konzolovém režimu (runlevel 3 apod.). Textový
režim je možné změnou konfiguračních registrů přeprogramovat. Například je
možné zvýšit vertikální rozlišení na 480 obrazových linek (to odpovídá třiceti
textovým řádkům při použití masky znaků 9&times;16 pixelů), ale sníží se tím
obnovovací frekvence na pouhých 60 Hz.</p>

<a href="https://www.root.cz/obrazek/1129530/"><img src="https://i.iinfo.cz/images/596/pc-09-a-4-prev.webp" class="image-1129530" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/596/pc-09-a-4-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/596/pc-09-a-4-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, wikipedia, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 12: Textový režim karty VGA je velmi dobře čitelný (nepatrně
lepší, než na Herculesu nebo MDA).</i></p>

<p>Výšku znaků je možné, nezávisle na počtu obrazových řádků, měnit
v&nbsp;rozsahu 1–32 obrazových linek; například při výšce znaků rovné 14
obrazovým řádkům a použití efektivního rozlišení 720&times;400 pixelů se počet
textových řádků zvýší z&nbsp;25 na 28. Pro zajištění co největší programové
kompatibility se staršími grafickými kartami se dá zmenšit i šířka znaků
z&nbsp;devíti pixelů na pixelů osm, ale tento způsob vede k&nbsp;poměrně značné
degradaci čitelnosti. Další vlastnosti textového režimu jsou shodné
s&nbsp;minule popsanou kartou <i>EGA</i> &ndash; znaková sada je umístěna ve
třetí bitové rovině (v&nbsp;první rovině jsou ASCII kódy znaků, v&nbsp;rovině
druhé pak barvové atributy) a celkový počet znaků ve znakové sadě je roven buď
256 (standardní nastavení) nebo 512 (využito některými vyspělejšími textovými
editory). V&nbsp;případě 512 znaků ve znakové sadě je jeden bit
z&nbsp;atributového bajtu použit pro výběr spodní nebo horní poloviny tabulky
znaků.</p>

<a href="https://www.root.cz/obrazek/1129531/"><img src="https://i.iinfo.cz/images/596/pc-09-a-5-prev.webp" class="image-1129531" width="370" height="231" data-prev-filename="https://i.iinfo.cz/images/596/pc-09-a-5-prev.webp" data-prev-width="370" data-prev-height="231" data-large-filename="https://i.iinfo.cz/images/596/pc-09-a-5.webp" data-large-width="640" data-large-height="400" alt="&#160;" title="Autor: tisnik, wikipedia, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 13: Nenechte se zmást kurzorem myši &ndash; i toto je normální
textový režim karty VGA.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. První demonstrační příklad: zobrazení textu se znaky v&nbsp;masce 9&times;16 pixelů</h2>

<p>V&nbsp;dnešním prvním demonstračním příkladu si vlastně neukážeme žádné
novinky; pouze totiž zapneme standardní textový režim s&nbsp;25 textovými řádky
a 80 znaky na řádku. Ovšem znaky budou zobrazeny v&nbsp;masce 9&times;16
pixelů, takže efektivní rozlišení obrazovky je rovno 80&times;9=720 pixelů
horizontálně a 25&times;16=400 obrazových řádků vertikálně:</p>

*** image ***
<p><i>Obrázek 14: Standardní textový režim 80&times;25 znaků tak, jak bychom ho
viděli na originální grafické kartě VGA.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
<i>; Textovy rezim karty VGA s rozlisenim 80x25 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_80x25.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_80x25.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x18    <i>; pozadi neblika, meni se intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x38    <i>; pozadi opet blika, nizka intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
&nbsp;
        wait_key

        wait_key        <i>; cekani na klavesu</i>
        exit            <i>; navrat do DOSu</i>
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Textové režimy s&nbsp;odlišným počtem textových řádků</h2>

<p>V&nbsp;paměti ROM grafické karty VGA je uloženo několik znakových sad,
přičemž každá z&nbsp;těchto sad obsahuje znaky s&nbsp;maskou s&nbsp;odlišným
počtem řádků (počet sloupců je stále 8). Konkrétně si můžeme vybrat znaky
s&nbsp;výškou 8, 14 nebo 16 obrazových řádků. Počet viditelných textových řádků
se vypočítá snadno: 400/výška znaků. K&nbsp;dispozici je tak textový režim
80&times;25 znaků, 80&times;28 znaků a 80&times;50 znaků.</p>

<p>Výběr znaků s&nbsp;výškou 16 obrazových řádků společně
s&nbsp;přeprogramováním registrů CRTC (to je důležité) zajistí toto makro:</p>

<pre>
<i>; nastaveni fontu 8x16 pixelu</i>
%macro <strong>set_font_8x16</strong> 0
        mov ax, 0x1114
        xor bl, bl
        int 0x10
%endmacro
</pre>

<a href="https://www.root.cz/obrazek/1129532/"><img src="https://i.iinfo.cz/images/382/pc-09-b-1-prev.webp" class="image-1129532" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-1-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-1-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 15: Znaky vysoké 16 obrazových řádků, celkově je zobrazeno 25 textových řádků.</i></p>

<p>Přepnutí znakové sady na znaky výšky 14 obrazových řádků společně
s&nbsp;přeprogramováním registrů CRTC:</p>

<pre>
<i>; nastaveni fontu 8x14 pixelu</i>
%macro <strong>set_font_8x14</strong> 0
        mov ax, 0x1111
        xor bl, bl
        int 0x10
%endmacro
</pre>

<a href="https://www.root.cz/obrazek/1129534/"><img src="https://i.iinfo.cz/images/382/pc-09-b-3-prev.webp" class="image-1129534" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-3-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-3-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 16: Znaky vysoké 14 obrazových řádků, celkově je zobrazeno 28 textových řádků.</i></p>

<p>A konečně si můžeme nechat zobrazovat znaky o výšce pouhých osmi obrazových
řádků:</p>

<pre>
<i>; nastaveni fontu 8x8 pixelu</i>
%macro <strong>set_font_8x8</strong> 0
        mov ax, 0x1112
        xor bl, bl
        int 0x10
%endmacro
</pre>

<a href="https://www.root.cz/obrazek/1129533/"><img src="https://i.iinfo.cz/images/382/pc-09-b-2-prev.webp" class="image-1129533" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-2-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-2-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 17: Znaky vysoké 8 obrazových řádků, celkově je zobrazeno 50 textových řádků.</i></p>

<p><div class="rs-tip-major">Poznámka: to ovšem není všechno, protože řídicí
registry karty VGA je možné v&nbsp;případě potřeby přeprogramovat takovým
způsobem, že se i v&nbsp;textových režimech použije 480 obrazových řádků a
nikoli &bdquo;pouze&ldquo; 400. Sníží se tak obrazová frekvence ze 70 Hz na 60
Hz, na druhou stranu však získáme textové režimy 80&times;30 znaků, 80&times;24
znaků a 80&times;60 znaků.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Druhý demonstrační příklad: textový režim 80&times;50 znaků a 80&times;28 znaků</h2>

<p>Ve druhém demonstračním příkladu jsou využita výše zmíněná makra
<strong>set_font_8x16</strong>, <strong>set_font_8x14</strong> a
<strong>set_font_8x8</strong> pro změnu počtu obrazových řádků ve standardním
textovém režimu. Vše je přitom zcela kompatibilní se všemi kartami VGA:</p>

<pre>
<i>; Textovy rezim karty VGA s rozlisenim 80x50 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_80x50.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_80x50.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>; nastaveni fontu 8x8 pixelu</i>
%macro <strong>set_font_8x8</strong> 0
        mov ax, 0x1112
        xor bl, bl
        int 0x10
%endmacro
&nbsp;
<i>; nastaveni fontu 8x14 pixelu</i>
%macro <strong>set_font_8x14</strong> 0
        mov ax, 0x1111
        xor bl, bl
        int 0x10
%endmacro
&nbsp;
<i>; nastaveni fontu 8x16 pixelu</i>
%macro <strong>set_font_8x16</strong> 0
        mov ax, 0x1114
        xor bl, bl
        int 0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*50   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        set_font_8x8    <i>; nastaveni fontu 8x8 pixelu</i>
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        set_font_8x14   <i>; nastaveni fontu 8x14 pixelu</i>
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        set_font_8x16   <i>; nastaveni fontu 8x16 pixelu</i>
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        exit            <i>; navrat do DOSu</i>
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Způsob zobrazení devátého sloupce pixelů u každého znaku</h2>

<p>Víme již, že standardní textové režimy karty VGA zobrazují 720 pixelů na
obrazovém řádku a přitom je na každém textovém řádku možné zapsat 80 znaků.
Z&nbsp;toho plyne, že každý znak je vlastně široký 720/80=9 pixelů (9 sloupců).
Ovšem ve znakové sadě mají masky znaků vždy šířku jen 8 pixelů (sloupců).
Nabízí se tedy otázka, jak mají být vykresleny ony deváté sloupce, pro které
nemáme k&nbsp;dispozici žádná data. Mohlo by se zdát, že tyto sloupce prostě
budou prázdné, protože znaky stejně potřebujeme mít odděleny, aby se neslévaly,
ovšem při pohledu na screenshoty Volkov Commanderu (uvedené například <a
href="#k06">v&nbsp;šesté kapitole</a>) nebo na ASCII tabulku použitou v&nbsp;PC
(<a href="https://www.ascii-codes.com/">https://www.ascii-codes.com/</a>),
zjistíme, že tabulka obsahuje i znaky pro tvorbu rámečků atd. A tyto rámečky je
vhodné nakreslit nepřerušovanou čarou.</p>

<a href="https://www.root.cz/obrazek/1129535/"><img src="https://i.iinfo.cz/images/382/pc-09-b-4-prev.webp" class="image-1129535" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-4-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-4-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 18: Devátý sloupec kopíruje obsah osmého sloupce u vybraných
znaků.</i></p>

<p>Grafická karta VGA proto umožňuje dva režimy vykreslování: buď jsou deváté
sloupce prázdné nebo pro znaky s&nbsp;hodnotami 0xC0 až 0xDF dochází ke kopii
osmého sloupce do sloupce devátého. Povšimněte si, že právě tyto znaky obsahují
rámečky, což není náhoda. Samotné přepnutí způsobu zobrazení je nepatrně
složitější, protože se používají I/O porty 0x3c0  a 0x3c1, přičemž první
z&nbsp;těchto portů je určen jak pro zápis indexu registru, tak i jeho obsahu.
Interně se proto používá klopný obvod pro zapamatování, která funkce je právě
aktivní. A tento klopný obvod zresetujeme <i>čtením</i> z&nbsp;I/O portu 0x3da
(proč tomu tak je, je mi záhadou, když ostatní porty mají odlišné chování, ale
IBM je IBM):</p>

<pre>
        mov dx, 0x3da
        in  al, dx      <i>; reset interniho klopneho obvodu</i>
&nbsp;
        mov dx, 0x3c0
        mov al, 0x30    <i>; cislo ridiciho registru + hodnota 0x20</i>
        out dx, al
&nbsp;
        inc  dx         <i>; cteni obsahu ridiciho registru</i>
        in   al,dx
        and  al,(~(1&lt;&lt;2)) <i>; vymaskovani tretiho bitu</i>
        dec  dx
        out dx,al       <i>; poslat do VGA</i>
</pre>

<a href="https://www.root.cz/obrazek/1129536/"><img src="https://i.iinfo.cz/images/382/pc-09-b-5-prev.webp" class="image-1129536" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-5-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-5-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 19: Devátý sloupec je u všech znaků prázdný.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Třetí demonstrační příklad: změna způsobu zobrazení devátého sloupce pixelů</h2>

<p>Podívejme se nyní na úplný zdrojový kód demonstračního příkladu, který mění
způsob zobrazení devátého sloupce pixelů. Výsledkem budou obrazovky, které jsme
mohli vidět <a href="#k10">v&nbsp;předchozí kapitole</a>:</p>

<pre>
<i>; Textovy rezim karty VGA.</i>
<i>; Zmena vyznamu devateho sloupce u znaku.</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_9th_column.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_9th_column.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 45      <i>; pocet zapisovanych znaku</i>
        mov al, 179     <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku</i>
        inc al          <i>; dalsi znak</i>
        inc di          <i>; preskocit atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3da
        in  al, dx      <i>; reset interniho klopneho obvodu</i>
&nbsp;
        mov dx, 0x3c0
        mov al, 0x30    <i>; cislo registru</i>
        out dx, al
&nbsp;
        inc  dx         <i>; cteni obsahu registru</i>
        in   al,dx
        and  al,(~(1&lt;&lt;2)) <i>; vymaskovani tretiho bitu</i>
        dec  dx
        out dx,al       <i>; poslat do VGA</i>
&nbsp;
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        exit            <i>; navrat do DOSu</i>
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Modifikace tvaru textového kurzoru</h2>

<p>Modifikací řídicích registrů CRTC (grafického řadiče) je možné dosáhnout
změny tvaru textového kurzoru. Jedná se o stejnou vlastnost, kterou jsme si
vyzkoušeli už na kartě CGA, ovšem s&nbsp;tím, rozdílem, že nyní může být
začátek a konec textového kurzoru určen pěti bity a tedy může dosahovat hodnot
0..31 (počítáno v&nbsp;obrazových řádcích, stejně jako výška znaků). To ovšem
není vše, protože řídicí registry pro ovládání kurzoru se nepatrně rozšířily:
v&nbsp;registru s&nbsp;počátečním obrazovým řádkem kurzoru je nyní nový bit,
který kurzor zcela zakáže (v&nbsp;podstatě ho posune na 32 řádek, který nikdy
není zobrazen). A registr s&nbsp;poslední linkou kurzoru obsahuje dva nové bity
nazvané <i>Cursor Skew</i>, které mají jednu příjemnou vlastnost &ndash; na
různých VGA kartách se chovají různě :-) Proto je necháme vynulované.</p>

<p>Pro změnu obsahu vybraného registru CRTC slouží toto makro, které již známe,
ovšem povšimněte si, že se změnila adresa I/O portu:</p>

<pre>
%macro <strong>set_crtc_register</strong> 2
        mov dx, 0x3d4
        mov al, %1      <i>; vyber registru</i>
        out dx, al
        inc dx
        mov al, %2      <i>; zapisovana hodnota</i>
        out dx, al
%endmacro
</pre>

<p><div class="rs-tip-major">Poznámka: modifikovat je možné pouze počáteční a
koncový obrazový řádek kurzoru. Měnit ovšem nelze to, zda má být kurzor
například vertikální I, barvu kurzoru, zda má kurzor blikat či nikoli nebo
frekvenci blikání. Pokud tedy uvidíte jednu z&nbsp;těchto možností na
obrazovce, nejedná se o textový režim, ale o jeho simulaci (příkladem je
&bdquo;textový režim&ldquo; konzole Raspberry Pi atd.).</div></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Čtvrtý demonstrační příklad: modifikace tvaru textového kurzoru</h2>

<p>V&nbsp;dnešním čtvrtém demonstračním příkladu se pokusíme dvakrát změnit
tvar textového kurzoru a dosáhnout tak následujících třech způsobů jeho
zobrazení:</p>

*** image ***
<p><i>Obrázek 20: Různé tvary textového kurzoru.</i></p>

*** image ***
<p><i>Obrázek 21: Různé tvary textového kurzoru.</i></p>

*** image ***
<p><i>Obrázek 22: Různé tvary textového kurzoru.</i></p>

<p>Tento příklad je ve skutečnosti interně velmi jednoduchý:</p>

<pre>
<i>; Textovy rezim karty VGA s rozlisenim 80x25 znaku.</i>
<i>; Zmena tvaru textoveho kurzoru.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_cursor_shape.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_cursor_shape.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
%macro <strong>set_crtc_register</strong> 2
        mov dx, 0x3d4
        mov al, %1      <i>; vyber registru</i>
        out dx, al
        inc dx
        mov al, %2      <i>; zapisovana hodnota</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 95      <i>; pocet zapisovanych znaku</i>
        mov al, 32      <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku</i>
        inc al          <i>; dalsi znak</i>
        inc di          <i>; preskocit atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        set_crtc_register 0x0a, 0
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        set_crtc_register 0x0b, 3
        wait_key        <i>; cekani na klavesu</i>
&nbsp;
        exit            <i>; navrat do DOSu</i>
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Načtení vlastní znakové sady</h2>

<p>Vzhledem k&nbsp;tomu, že je grafická karta VGA kompatibilní s&nbsp;kartou
EGA, je pochopitelně možné i na VGA načíst vlastní znakovou sadu. Ovšem i zde
došlo k&nbsp;rozšíření, protože na EGA mohly být současně načteny a přepínány
čtyři znakové sady, zatímco na kartě VGA se jedná o osm znakových sad. Jejich
počáteční adresy ve třetí bitové rovině video RAM jsou následující:</p>

<table>
<tr><th>Index znakové sady</th><th>Adresa od</th><th>Adresa do</th></tr>
<tr><td>0</td><td>0x0000</td><td>0x1FFF</td></tr>
<tr><td>1</td><td>0x4000</td><td>0x5FFF</td></tr>
<tr><td>2</td><td>0x8000</td><td>0x9FFF</td></tr>
<tr><td>3</td><td>0xC000</td><td>0xDFFF</td></tr>
<tr><td>4</td><td>0x2000</td><td>0x3FFF</td></tr>
<tr><td>5</td><td>0x6000</td><td>0x7FFF</td></tr>
<tr><td>6</td><td>0xA000</td><td>0xBFFF</td></tr>
<tr><td>7</td><td>0xE000</td><td>0xFFFF</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: proč jsou adresy takto zpřeházeny? Kvůli
zpětné kompatibilitě s&nbsp;kartou EGA.</div></p>

<p>Samotné načtení fontu, zde konkrétně 95 znaků standardní ASCII s&nbsp;výškou
znaků 16 obrazových řádků, vypadá následovně (podobný příklad známe &ndash; pro
jednoduchost použijeme BIOS, i když je samozřejmě alternativně možné měnit
přímo řídicí registry karty VGA):</p>

<pre>
        mov ax, cs
        mov es, ax
        mov bp, font    <i>; ES:BP obsabuje adresu fontu</i>
&nbsp;
        mov ax, 0x1110  <i>; nacteni + nastaveni uzivatelskeho fontu</i>
        mov cx, 95      <i>; pocet menenych znaku</i>
        mov dx, 32      <i>; ASCII kod prvniho meneneho znaku</i>
        mov bl, 0       <i>; index znakove sady</i>
        mov bh, 16      <i>; vyska znaku</i>
        int 0x10        <i>; provest operaci</i>
</pre>

<p>Výsledek:</p>

<a href="https://www.root.cz/obrazek/1129537/"><img src="https://i.iinfo.cz/images/382/pc-09-b-6-prev.webp" class="image-1129537" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-6-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-6-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 23: Vlastní znaková sada se znaky s&nbsp;maskou 8&times;16
pixelů, ovšem zobrazených v&nbsp;masce 9&times;16 pixelů.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Pátý demonstrační příklad: načtení a zobrazení vlastní znakové sady</h2>

<p>Samotný způsob načtení a zobrazení znakové byl popsán <a
href="#k14">v&nbsp;předchozí kapitole</a>, takže se bez dalšího podrobnějšího
popisu podívejme na to, jak vypadá ucelený program, který znakovou sadu
zobrazí:</p>

<pre>
<i>; Textovy rezim karty VGA s rozlisenim 80x25 znaku.</i>
<i>; Nastaveni vlastniho fontu.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_custom_font.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_custom_font.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 95      <i>; pocet zapisovanych znaku</i>
        mov al, 32      <i>; kod zapisovaneho znaku</i>
<strong>opak</strong>:
        stosb           <i>; zapis znaku</i>
        inc al          <i>; dalsi znak</i>
        inc di          <i>; preskocit atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        mov ax, cs
        mov es, ax
        mov bp, font    <i>; ES:BP obsabuje adresu fontu</i>
&nbsp;
        mov ax, 0x1110  <i>; nacteni + nastaveni uzivatelskeho fontu</i>
        mov cx, 95      <i>; pocet menenych znaku</i>
        mov dx, 32      <i>; ASCII kod prvniho meneneho znaku</i>
        mov bl, 0       <i>; index znakove sady</i>
        mov bh, 16      <i>; vyska znaku</i>
        int 0x10        <i>; provest operaci</i>
&nbsp;
        wait_key        <i>; cekani na klavesu</i>
        exit            <i>; navrat do DOSu</i>
&nbsp;
<strong>font</strong>:
        incbin "font.bin"
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Zákaz blikání znaků v&nbsp;textových režimech: složitější operace, než kdy dříve</h2>

<pre>
        mov dx, 0x3da
        in  al, dx      <i>; reset interniho klopneho obvodu</i>
</pre>

<pre>
        mov dx, 0x3c0
        mov al, 0x30    <i>; cislo registru</i>
        out dx, al

        xor al, al      <i>; zapisovana data</i>
        out dx,al       <i>; poslat do VGA</i>
</pre>

<a href="https://www.root.cz/obrazek/1129538/"><img src="https://i.iinfo.cz/images/382/pc-09-b-7-prev.webp" class="image-1129538" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/382/pc-09-b-7-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/382/pc-09-b-7-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>


<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<pre>
<i>; Textovy rezim karty VGA.</i>
<i>; Zmena vyznamu nejvyssiho bitu atributu.</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_intensity_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_intensity_1.asm</i>


<i>;-----------------------------------------------------------------------------</i>

<i>; ukonceni procesu a navrat do DOSu</i>
%macro exit 0
        mov     ah, 0x4c
        int     0x21
%endmacro

<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro wait_key 0
        xor     ax, ax
        int     0x16
%endmacro

<i>; nastaveni grafickeho rezimu</i>
%macro gfx_mode 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro

<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>

start:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>

        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>

        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
opak:
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>

        wait_key

        mov dx, 0x3da
        in  al, dx      <i>; reset interniho klopneho obvodu</i>

        mov dx, 0x3c0
        mov al, 0x30    <i>; cislo registru</i>
        out dx, al

        xor al, al      <i>; zapisovana data</i>
        out dx,al       <i>; poslat do VGA</i>

        wait_key        <i>; cekani na klavesu</i>

        exit            <i>; navrat do DOSu</i>
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<pre>
<i>; Textovy rezim karty VGA.</i>
<i>; Zmena vyznamu nejvyssiho bitu atributu (bezpecnejsi varianta).</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o vga.com vga_text_mode_intensity_2.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o vga.com vga_text_mode_intensity_2.asm</i>


<i>;-----------------------------------------------------------------------------</i>

<i>; ukonceni procesu a navrat do DOSu</i>
%macro exit 0
        mov     ah, 0x4c
        int     0x21
%endmacro

<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro wait_key 0
        xor     ax, ax
        int     0x16
%endmacro

<i>; nastaveni grafickeho rezimu</i>
%macro gfx_mode 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro

<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>

start:
        gfx_mode 3      <i>; nastaveni standardniho textoveho rezimu 80x25 znaku</i>

        mov ax, 0xb800  <i>; video RAM v textovem rezimu</i>
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>

        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
opak:
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>

        wait_key

        mov dx, 0x3da
        in  al, dx      <i>; reset interniho klopneho obvodu</i>

        mov dx, 0x3c0
        mov al, 0x30    <i>; cislo registru</i>
        out dx, al

        inc  dx         <i>; cteni obsahu registru</i>
        in   al,dx
        and  al,(~(1<<3)) <i>; vymaskovani ctvrteho bitu</i>
        dec  dx
        out dx,al       <i>; poslat do VGA</i>

        wait_key        <i>; cekani na klavesu</i>

        exit            <i>; navrat do DOSu</i>
</pre>


<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad pomocí assembleru <strong>NASM</strong>, byly uložen do Git repositáře,
který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>63</td><td>vga_640x480_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

