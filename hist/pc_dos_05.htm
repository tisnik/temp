<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Textové režimy grafické karty CGA a řadič displeje Motorola 6845</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Textové režimy grafické karty CGA a řadič displeje Motorola 6845</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Grafické režimy karty CGA pravděpodobně nikoho neohromí. Zajímavější jsou z pohledu programátora režimy textové, protože ty je možné konfigurací čipu Motorola 6845 přeprogramovat, například tak, že vznikne pseudografický režim 160x100 se šestnácti barvami.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Textové režimy grafické karty CGA a řadič displeje Motorola 6845</a></p>
<p><a href="#k02">2. Text a atributy &ndash; standard, který přežil až do dnešní doby</a></p>
<p><a href="#k03">3. Standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</a></p>
<p><a href="#k04">4. Standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</a></p>
<p><a href="#k05">5. Konfigurace způsobu zobrazení v&nbsp;textových režimech &ndash; základ pro příčetné použití karty CGA</a></p>
<p><a href="#k06">6. Změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</a></p>
<p><a href="#k07">7. Řídicí registry čipu MC6845</a></p>
<p><a href="#k08">8. Význam prvních čtyř registrů &ndash; vykreslení jediného obrazového řádku</a></p>
<p><a href="#k09">9. Podpora pro zobrazení (hardwarového) textového kurzoru</a></p>
<p><a href="#k10">10. Změna tvaru textového kurzoru</a></p>
<p><a href="#k11">11. Cílená modifikace řídicích registrů karty CGA a nestandardní režimy zobrazování</a></p>
<p><a href="#k12">12. Pseudografický režim 160&times;100 pixelů se šestnácti barvami</a></p>
<p><a href="#k13">13. Zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů</a></p>
<p><a href="#k14">14. Změna výšky znaků</a></p>
<p><a href="#k15">15. Ukázka změny výšky znaků</a></p>
<p><a href="#k16">16. Nastavení čítačů přes registry CRTC pro zobrazení režimu 160&times;100 se šestnácti barvami</a></p>
<p><a href="#k17">17. Výsledný příklad: &bdquo;plnohodnotný&ldquo; režim 160&times;100&times;16</a></p>
<p><a href="#k18">18. Proč není možné použít režim 160&times;200&times;16?</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Textové režimy grafické karty CGA a řadič displeje Motorola 6845</h2>

<p>Připomeňme si, že standardní BIOS podporoval (a dodnes podporuje!)
následující textové a grafické režimy kompatibilní s&nbsp;grafickou kartou
CGA:</p>

<table>
<tr><th>Číslo (AL)</th><th>Typ</th><th>Rozlišení</th><th>Segment</th></tr>
<tr><td>00</td><td>text, mono</td><td>40&times;25</td><td>0xb800</td></tr>
<tr><td>01</td><td>text, barvy</td><td>40&times;25</td><td>0xb800</td></tr>
<tr><td>02</td><td>text, mono</td><td>80&times;25</td><td>0xb800</td></tr>
<tr><td>03</td><td>text, barvy</td><td>80&times;25</td><td>0xb800</td></tr>
<tr><td>04</td><td>grafika, 4 barvy</td><td>320&times;200</td><td>0xb800</td></tr>
<tr><td>05</td><td>grafika, 4 mono</td><td>320&times;200</td><td>0xb800</td></tr>
<tr><td>06</td><td>grafika, B/W</td><td>640&times;200</td><td>0xb800</td></tr>
</table>

<a href="https://www.root.cz/obrazek/1128713/"><img src="https://i.iinfo.cz/images/129/pc-05-1-prev.webp" class="image-1128713" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-1-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-1-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 1: Dos Navigator spuštěný na kartě CGA ve standardním textovém režimu 80&times;25 znaků.</i></p>

<p>Dnes nás budou zajímat první čtyři textové režimy, přičemž režim 0 a 1 se
chová stejně (ale záleží na monitoru), podobně jako režimy 2 a 3. V&nbsp;těchto
režimech byla stanovena struktura obrazové paměti (tj.&nbsp;jak jsou uloženy
kódy zobrazovaných znaků a jejich video atributy), která je používána prakticky
dodnes &ndash; například u těch PC, které startují v&nbsp;textovém režimu
popř.&nbsp;mají &bdquo;textový&ldquo; BIOS. U novějších grafických karet, tedy
u EGA, VGA a SVGA, zůstaly tyto režimy zachovány, ale změnilo se jak
horizontální rozlišení (ze 640 pixelů na 720 pixelů), tak především vertikální
rozlišení (z&nbsp;200 pixelů na 350 či dokonce na 400 pixelů). A navíc se
zvýšila i obnovovací frekvence na 70 Hz. Všechny tyto změny vedly k&nbsp;tomu,
že textové režimy byly dobře čitelné a nezatěžovaly oči (na rozdíl od některých
grafických režimů s&nbsp;nižší obnovovací frekvencí). A co je důležitější
&ndash; kartu CGA je možné přeprogramovat tak, aby v&nbsp;textovém režimu de
facto zobrazovala grafiku s&nbsp;rozlišením 160&times;100 &bdquo;pixelů&ldquo;,
ovšem se šestnácti barvami.</p>

<a href="https://www.root.cz/obrazek/1128714/"><img src="https://i.iinfo.cz/images/129/pc-05-2-prev.webp" class="image-1128714" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-2-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-2-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 2: Text s&nbsp;atributy zobrazený ve standardním textovém režimu 40&times;25.</i></p>

<p>Pro zajímavost se ještě podívejme, jaký je typický obsah řídicích registrů
pro textové režimy označované CO40 a CO80, tedy režimy pro grafické karty CGA
se čtyřiceti resp.&nbsp;osmdesáti znaky na řádku (o řídicích registrech CRTC se
budeme podrobněji bavit od sedmé kapitoly):</p>

<table>
<tr><th>Číslo registru</th><th>CO40</th><th>CO80</th><th>Význam</th></tr>
<tr><td> 0</td><td>56</td><td>113</td><td>celkový počet znaků horizontálně - 1, včetně okrajů (tedy nezobrazených znaků)</td></tr>
<tr><td> 1</td><td>40</td><td>80</td><td>počet horizontálně zobrazených znaků</td></tr>
<tr><td> 2</td><td>45</td><td>90</td><td>horizontální pozice synchronizačního signálu</td></tr>
<tr><td> 3</td><td>10</td><td>10</td><td>šířka horizontálního synchronizačního signálu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>31</td><td>31</td><td>celkový počet textových řádků (včetně okrajů)</td></tr>
<tr><td> 5</td><td>6</td><td>6</td><td>mikroposun textových řádků po jednotlivých obrazových řádcích</td></tr>
<tr><td> 6</td><td>25</td><td>25</td><td>zobrazený počet textových řádků</td></tr>
<tr><td> 7</td><td>28</td><td>28</td><td>vertikální pozice synchronizačního signálu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 8</td><td>2</td><td>2</td><td>režim prokládání (interlace) a posunutí</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>7</td><td>7</td><td>počet obrazových řádků pro jeden textový řádek - 1 &ndash; výška znaku</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>6</td><td>6</td><td>začátek hardwarového kurzoru</td></tr>
<tr><td>11</td><td>7</td><td>7</td><td>konec hardwarového kurzoru</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>0</td><td>0</td><td>počáteční adresa obrazové paměti (vyšší bajt)</td></tr>
<tr><td>13</td><td>0</td><td>0</td><td>počáteční adresa obrazové paměti (nižší bajt)</td></tr>
<tr><td>14</td><td>0</td><td>0</td><td>adresa kurzoru &ndash; vyšší bajt</td></tr>
<tr><td>15</td><td>0</td><td>0</td><td>adresa kurzoru &ndash; nižší bajt</td></tr>
<tr><td>16</td><td>0</td><td>0</td><td>adresa světelného pera &ndash; vyšší bajt</td></tr>
<tr><td>17</td><td>0</td><td>0</td><td>adresa světelného pera &ndash; nižší bajt</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: vidíme, že grafická karta CGA zobrazuje
znaky o výšce osmi obrazových řádků, přičemž kurzor je (na vybraném znaku)
zobrazen na obrazových řádcích 6 a 7. Počet viditelných textových řádků je
roven 25, což znamená, že se zobrazuje 25&times;8=200 obrazových řádků
z&nbsp;celkem 31&times;8=248 obrazových řádků (zbylých (28-25)&times;8=24
obrazových řádků tvoří okraj, zbytek je vyhrazen pro vertikální
synchronizaci.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Text a atributy &ndash; standard, který přežil až do dnešní doby</h2>

<p>Víme již, že u CGA byl stanoven standard pro to, jak je organizována video
paměť v&nbsp;textových režimech. V&nbsp;sudém bajtu (číslujeme od nuly) je
uložen ASCII kód zobrazovaného znaku a v&nbsp;bajtu lichém jeho atribut.
Struktura video paměti v&nbsp;textových režimech tedy vypadá takto:</p>

<pre>
      0   1 ║ 2   3 ║ 4   5 ║ ... ║158 159
    ┌───┼───╫───┼───╫───┼───╫─────╫───┼───╖
   0│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 0
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
 160│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 1
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
 320│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 2
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
 480│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
    .                                     .
    ├───┼───╫───┼───╫───┼───╫─────╫───┼───╢
3840│chr│atr║chr│atr║chr│atr║ ... ║chr│atr║ řádek 24
    └───┴───╨───┴───╨───┴───╨─────╨───┴───╜
</pre>

<a href="https://www.root.cz/obrazek/1128715/"><img src="https://i.iinfo.cz/images/129/pc-05-3-prev.webp" class="image-1128715" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-3-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-3-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 3: Text s&nbsp;atributy zobrazený ve standardním textovém režimu 80&times;25.</i></p>

<p>Samotný atributový bajt (samostatný pro každý znak) má tuto strukturu:</p>

<pre>
 ╓7┬6┬5┬4┬3┬2┬1┬0╖
 ║ │bkgnd│ frgnd ║
 ╙─┴─┴─┴─┴─┴─┴─┴─╜ bity
  ║ ╚═╦═╝ ╚═════╩═► 0-3:  barva popředí 0-15
  ║   ╚═══════════► 4-6:  barva pozadí 0-7
  ╚═══════════════►   7:  povolení blikání
</pre>

<p>Pokud je blikání vypnuto (viz další text), význam se nepatrně změní:</p>

<pre>
 ╓7┬6┬5┬4┬3┬2┬1┬0╖
 ║ bkgnd │ frgnd ║
 ╙─┴─┴─┴─┴─┴─┴─┴─╜ bity
  ╚══╦══╝ ╚═════╩═► 0-3:  barva popředí 0-15
     ╚════════════► 4-6:  barva pozadí 0-15
</pre>

<a href="https://www.root.cz/obrazek/1128716/"><img src="https://i.iinfo.cz/images/129/pc-05-4-prev.webp" class="image-1128716" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-4-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-4-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 4: Kombinace barev popředí a pozadí.</i></p>

<p><div class="rs-tip-major">Poznámka: můžeme zde do jisté míry vidět podobný
koncept, jaký známe například ze ZX Spectra (i když tam se jednalo o
plnohodnotný grafický režim).</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</h2>

<p>Ukažme si nyní, jak vypadá obrazovka standardního textového režimu
s&nbsp;rozlišením 40&times;25 znaků v&nbsp;případě, že je ke grafické kartě CGA
připojený digitální (RGBI) monitor. Obrazovku vyplníme různými kombinacemi
atributů a znaků. Pokud bude atribut pozadí vyšší než hodnota 7, bude text
blikat (což známe například ze ZX Spectra atd.):</p>

<a href="https://www.root.cz/obrazek/1128717/"><img src="https://i.iinfo.cz/images/129/pc-05-5-prev.webp" class="image-1128717" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-5-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-5-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 5: Standardní textový režim 40&times;25 znaků se šestnácti
barvami (blikající text, první snímek).</i></p>

<a href="https://www.root.cz/obrazek/1128718/"><img src="https://i.iinfo.cz/images/129/pc-05-6-prev.webp" class="image-1128718" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-6-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-6-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 6: Standardní textový režim 40&times;25 znaků se šestnácti
barvami (blikající text, druhý snímek).</i></p>

<p>Způsob vyplnění všech 40&times;25 znaků i 40&times;25 atributů
(<strong>ES:DI</strong> už jsou nastaveny):</p>

<pre>
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
</pre>

<p>Úplný zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
<i>; Textovy rezim karty CGA s rozlisenim 40x25 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com cga_text_mode_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com cga_text_mode_1.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 1      <i>; nastaveni textoveho rezimu 40x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
        exit
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</h2>

<p>Prakticky stejným způsobem si necháme zobrazit text s&nbsp;barvovými
atributy ve standardním textovém režimu 80&times;25 znaků, což byl (a
v&nbsp;některých oborech doposud je) naprostý standard. Ostatně limit 80 znaků
na řádek se dodržuje i ve zdrojových kódech mnoha projektů:</p>

<a href="https://www.root.cz/obrazek/1128719/"><img src="https://i.iinfo.cz/images/129/pc-05-7-prev.webp" class="image-1128719" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-7-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-7-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 7: Standardní textový režim 80&times;25 znaků se šestnácti
barvami (blikající text, první snímek).</i></p>

<a href="https://www.root.cz/obrazek/1128720/"><img src="https://i.iinfo.cz/images/129/pc-05-8-prev.webp" class="image-1128720" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-8-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-8-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 8: Standardní textový režim 80&times;25 znaků se šestnácti
barvami (blikající text, druhý snímek).</i></p>

<p><div class="rs-tip-major">Poznámka: stále zobrazujeme pouze 40&times;25
znaků, takže je vyplněna pouze polovina textové obrazovky.</div></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
<i>; Textovy rezim karty CGA s rozlisenim 80x25 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com cga_text_mode_3.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com cga_text_mode_3.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 3      <i>; nastaveni textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
        exit
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Konfigurace způsobu zobrazení v&nbsp;textových režimech &ndash; základ pro příčetné použití karty CGA</h2>

<p>Způsob zobrazení textu v&nbsp;textových režimech je možné různým způsobem
ovlivňovat. K&nbsp;tomu slouží řídicí registry samotné karty CGA dostupné na
portu 0x3D8 a 0x3D9 (některé bity již známe). Ale důležitější jsou registry
CRTC, tedy řídicí registry čipu Motorola 6845, které si popíšeme <a
href="#k07">v&nbsp;sedmé kapitole</a>.</p>

<p>Na I/O portu 3D8 lze řídit způsob zobrazení:</p>

<pre>
|7|6|5|4|3|2|1|0|  3D8 Mode Select Register
 | | | | | | | `---- 1 = 80x25 text, 0 = 40x25 text
 | | | | | | `----- 1 = 320x200 grafika, 0 = text
 | | | | | `------ 1 = monochrom, 0 = barevný výstup
 | | | | `------- 1 = povolení video signálu
 | | | `-------- 1 = 640x200 B/W grafika
 | | `--------- 1 = blikání pozadí
 `------------ nepoužito
</pre>

<p>Důležitý je zejména pátý bit.</p>

<p>Další port slouží pro modifikaci barvové palety. V&nbsp;případě textových
režimů se používají tyto bity:</p>

<pre>
Text:
&nbsp;
|7|6|5|4|3|2|1|0|
 | | | | | `-------- okraj obrazovky (RGB)
 | | | | `--------- vyšší/nižší intenzita okraje
 | | | `---------- intenzita pozadí
 `--------------- nepoužito
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</h2>

<p>Blikání textu v&nbsp;případě, že je nastaven nejvyšší bit barvy pozadí, se
sice může v&nbsp;některých případech hodit, ale omezuje počet barev pozadí ze
šestnácti na osm, protože není možné nastavit intenzitu barvy. Ovšem toto
chování karty CGA lze měnit, a to konkrétně bitem číslo 5 portu 0x3d8. Aby se
zakázalo, je nutné tento bit vynulovat (je totiž ve výchozím textovém režimu
nastavený na jedničku). Tuto změnu provedeme snadno:</p>

<pre>
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x18    <i>; pozadi neblika, meni se intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
</pre>

<p>V&nbsp;následujícím demonstračním příkladu se po stisku klávesy tento bit
nejdříve vynuluje a po dalším stisku zase nastaví. Po vynulování bude obrazovka
vypadat následovně:</p>

<a href="https://www.root.cz/obrazek/1128721/"><img src="https://i.iinfo.cz/images/129/pc-05-9-prev.webp" class="image-1128721" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-9-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-9-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 9: Nyní může mít pozadí libovolnou barvu 0-15.</i></p>

<p>Po nastavení se vrátíme k&nbsp;původnímu chování:</p>

<a href="https://www.root.cz/obrazek/1128722/"><img src="https://i.iinfo.cz/images/129/pc-05-10-prev.webp" class="image-1128722" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-10-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-10-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 10: Nyní může mít pozadí barvu 0-7 s&nbsp;možností specifikace blikání.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
<i>; Textovy rezim karty CGA.</i>
<i>; Zmena vyznamu nejvyssiho bitu atributu.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com cga_text_mode_intensity.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com cga_text_mode_intensity.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 3      <i>; nastaveni textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x18    <i>; pozadi neblika, meni se intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x38    <i>; pozadi opet blika, nizka intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
&nbsp;
        wait_key
&nbsp;
        exit
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Řídicí registry čipu MC6845</h2>

<p>Srdcem grafické karty CGA (ale i mnoha dalších grafických video subsystémů
té doby) je čip Motorola 6845, zkráceně MC6845. Prozatím jsme se konfiguraci
tohoto čipu úspěšně vyhýbali, ale pokud máme skutečně využít všech možností
CGA, je nutné se zabývat i touto problematikou (nakonec není složitá).</p>

<p>Nastavení resp.&nbsp;přesněji řečeno konfigurace grafického řadiče
<i>MC6845</i> se provádělo přes celkem osmnáct osmibitových řídicích registrů.
Některé z&nbsp;těchto registrů byly určeny pro zápis (například registr
s&nbsp;počtem znaků na řádek atd.), jiné zase pro čtení (pozice světelného
pera). Číselné hodnoty, které mohly být větší než 2<sup>8</sup> (což je
počáteční adresa obrazové paměti, adresa kurzoru a adresa světelného pera), se
musely ukládat do dvou sousedních osmibitových registrů.</p>

<p>Registry byly programátorům přístupné nepřímo, konkrétně přes dvojici adres
&ndash; zápis do první adresy vybíral příslušný řídicí registr, čtení či zápis
do druhé adresy (o jedničku vyšší) již vedl ke čtení či zápisu do příslušného
řídicího registru. Díky tomu bylo možné <i>MC6845</i> použít v&nbsp;prakticky
jakémkoli počítačovém systému, a to i v&nbsp;případě, kdy je počet I/O portů
zásadně omezen (teoreticky lze tak zkombinovat MC6845 například
s&nbsp;osmibitovým mikrořadičem 8051). O které adresy oněch dvou registrů se
konkrétně jedná záleželo na zapojení konkrétní grafické karty. Například u
grafické karty <i>CGA</i> se jedná o I/O porty na adresách 0x3d4 a 0x3d5 a u
grafické karty <i>Hercules</i> (taktéž IBM PC) se naopak jednalo o I/O porty
0x3b4 a 0x3b5.</p>

<p>Význam jednotlivých řídicích registrů čipu 6845 je uveden v&nbsp;následující
tabulce. Povšimněte si, že jednotkami při udávání horizontálních velikostí jsou
vždy znaky a nikoli pixely &ndash; přesné časování je odvozeno od externího
hodinového signálu řízeného krystalem:</p>

<table>
<tr><th>Číslo registru</th><th>Šířka (b)</th><th>Význam</th></tr>
<tr><td> 0</td><td>8</td><td>celkový počet znaků horizontálně - 1, včetně okrajů (tedy nezobrazených znaků)</td></tr>
<tr><td> 1</td><td>8</td><td>počet horizontálně zobrazených znaků (typicky 40 či 80)</td></tr>
<tr><td> 2</td><td>8</td><td>horizontální pozice synchronizačního signálu (lze tedy posouvat obrazem na monitoru, ovšem omezeně)</td></tr>
<tr><td> 3</td><td>8</td><td>šířka horizontálního synchronizačního signálu (záleží na konkrétním monitoru, řádkové frekvenci atd.)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>7</td><td>celkový počet textových řádků, včetně okrajů (například 27, maximálně však 128)</td></tr>
<tr><td> 5</td><td>5</td><td>mikroposun textových řádků po jednotlivých obrazových řádcích</td></tr>
<tr><td> 6</td><td>7</td><td>zobrazený počet textových řádků (například 25)</td></tr>
<tr><td> 7</td><td>7</td><td>vertikální pozice synchronizačního signálu (lze posouvat obrazem, opět omezeně)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 8</td><td>8</td><td>režim prokládání (interlace) a posunutí</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>5</td><td>počet obrazových řádků pro jeden textový řádek - 1 &ndash; výška znaku (většinou 8 či 14)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>5+2</td><td>začátek hardwarového kurzoru (většinou výška_znaku-3)</td></tr>
<tr><td>11</td><td>5</td><td>konec hardwarového kurzoru (kurzor může mít například výšku dvou obrazových řádků)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>6</td><td>počáteční adresa obrazové paměti (vyšší bajt)</td></tr>
<tr><td>13</td><td>8</td><td>počáteční adresa obrazové paměti (nižší bajt)</td></tr>
<tr><td>14</td><td>6</td><td>adresa kurzoru &ndash; vyšší bajt (klasický posun hardwarového kurzoru)</td></tr>
<tr><td>15</td><td>8</td><td>adresa kurzoru &ndash; nižší bajt</td></tr>
<tr><td>16</td><td>6</td><td>adresa světelného pera &ndash; vyšší bajt</td></tr>
<tr><td>17</td><td>8</td><td>adresa světelného pera &ndash; nižší bajt</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: povšimněte si některých omezení
vyplývajících ze skutečné bitové šířky registrů, která je mnohdy menší, než by
odpovídalo maximální osmibitové šířce:</div></p>

<table>
<tr><th>Vlastnost</th><th>Omezení</th></tr>
<tr><td>celkový počet textových řádků</td><td>128</td></tr>
<tr><td>počet obrazových řádků pro řádek textový (výška textu)</td><td>32</td></tr>
<tr><td>výška kurzoru</td><td>32</td></tr>
<tr><td>adresa obrazové paměti</td><td>2<sup>14</sup></td></tr>
<tr><td>adresa kurzoru</td><td>2<sup>14</sup></td></tr>
<tr><td>adresa světelného pera</td><td>2<sup>14</sup></td></tr>
</table>



<p><a name="k08"></a></p>
<h2 id="k08">8. Význam prvních čtyř registrů &ndash; vykreslení jediného obrazového řádku</h2>

<p>Význam prvních čtyř registrů naznačuje, jak vlastně interně MC6845 pracuje.
Jedná se o sadu čítačů a komparátorů, kde čítače běží volně (nelze je
programovat), ale komparátory se nastavují právě pomocí řídicích registrů:</p>

<pre>
          1         2         3         4         5
 12345678901234567890123456789012345678901234567890123456  ← čítač znaků
|                                       |    |         | |
|     běžný viditelný textový řádek     | -- |  sync   |-|
|                                       |    |         | |
                                        ↑    ↑         ↑ ↑
                                        R1   R2    R2+R3 R0
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Podpora pro zobrazení (hardwarového) textového kurzoru</h2>

<p>Čip 6845, který je srdcem grafické karty MDA, CGA i Herculesu, dokáže
posílat signál o tom, že se má zobrazit textový kurzor. Toto je velmi zajímavá
a možná i unikátní funkce, která je ovšem interně řešena velmi jednoduše.
Adresu znaku, na kterém je textový kurzor, je nutné zapsat do dvou řídicích
registrů, konkrétně do registrů R14 a R15. Dále se v&nbsp;registrech R10 a R11
nachází číslo mikrořádku (v&nbsp;rámci textového řádku), kde se má kurzor
zobrazit &ndash; ten je totiž tvořen obdélníkem, který začíná (v&nbsp;rámci
znaku) právě na řádku v&nbsp;R10 a končí na řádku uloženého v&nbsp;R11
(řekneme, že se jedná o hodnoty 12 a 14 pro znaky vysoké šestnáct
mikrořádků).</p>

<p>Činnost čipu 6845 je v&nbsp;tomto ohledu poměrně triviální &ndash;
v&nbsp;případě, že je <i>adresa</i> právě vybíraného znaku totožná
s&nbsp;adresou kurzoru, tak se provede porovnání interního počitadla mikrořádků
s&nbsp;hodnotami v&nbsp;registrech R10 a R11. V&nbsp;případě, že počitadlo leží
mezi těmito hodnotami (včetně obou mezí), je signál <strong>CURSOR</strong>
nastaven na logickou jedničku &ndash; a to je prakticky vše. Další operace
s&nbsp;tímto signálem může ale nemusí provést další (typicky diskrétní) logika.
Ta typicky pro textové režimy provede OR hodnoty pixelu posílaného na monitor
se signálem <strong>CURSOR</strong> a pro grafické režimy je hodnota zcela
ignorována.</p>

<p><div class="rs-tip-major">Poznámka: blikání kurzoru, pokud je podporováno,
je taktéž řízeno další logikou.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Změna tvaru textového kurzoru</h2>

<p>Podívejme se nyní na způsob, jakým lze modifikovat tvar textového kurzoru.
Nastavit lze počáteční obrazový řádek (v&nbsp;rámci výšky znaku, takže typicky
v&nbsp;rozsahu 0 až 7) a koncový obrazový řádek. Oficiálně platí, že pokud je
počáteční řádek větší, než řádek koncový, není kurzor zobrazen, ovšem existují
neoficiální klony CGA, které v&nbsp;tomto případě zobrazí rozpůlený kurzor
(první polovina začíná na řádku 0, druhá polovina končí na posledním znakovém
řádku). Prozatím nepoužijeme makra ani subrutiny, takže nastavení kurzoru bude
vypadat následovně (opakující se kód ale obecně není příliš vhodný &ndash; zde
nepotřebujeme co nejvyšší rychlost):</p>

<pre>
        mov dx, 0x3d4
        mov al, <strong>0x0a</strong>    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, <strong>0</strong>       <i>; scanline, kde kurzor zacina </i>
        out dx, al
&nbsp;
        mov dx, 0x3d4
        mov al, <strong>0x0b</strong>    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, <strong>5</strong>       <i>; scanline, kde kurzor konci</i>
        out dx, al
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<a href="https://www.root.cz/obrazek/1128723/"><img src="https://i.iinfo.cz/images/129/pc-05-11-prev.webp" class="image-1128723" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-11-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-11-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 11: Výchozí tvar kurzoru (levý horní roh).</i></p>

<a href="https://www.root.cz/obrazek/1128724/"><img src="https://i.iinfo.cz/images/129/pc-05-12-prev.webp" class="image-1128724" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-12-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-12-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 12: Nový tvar kurzoru (levý horní roh).</i></p>

<p>A takto vypadá úplný zdrojový kód tohoto demonstračního příkladu:</p>

<pre>
<i>; Textovy rezim karty CGA.</i>
<i>; Zmena tvaru textoveho kurzoru.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com cga_text_mode_cursor.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com cga_text_mode_cursor.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 3      <i>; nastaveni textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d4
        mov al, 0x0a    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, 0       <i>; scanline, kde kurzor zacina </i>
        out dx, al
&nbsp;
        mov dx, 0x3d4
        mov al, 0x0b    <i>; registr s ovladanim tvaru textoveho kurzoru</i>
        out dx, al
        mov dx, 0x3d5
        mov al, 5       <i>; scanline, kde kurzor konci</i>
        out dx, al
&nbsp;
        wait_key
&nbsp;
        exit
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Cílená modifikace řídicích registrů karty CGA a nestandardní režimy zobrazování</h2>

<p>Kromě základních (z&nbsp;pohledu programátorů <i>standardních</i>)
grafických režimů, které se nastavovaly s&nbsp;využitím služeb BIOSu, byly díky
poměrně širokým možnostem čipu <i>MC6845</i> podporovány i mnohé další grafické
módy. První z&nbsp;těchto módů je &bdquo;legální&ldquo; tj.&nbsp;zmiňuje se o
něm i oficiální dokumentace firmy IBM (ale například náš <i>SYSMAN</i> již
nikoli, což je však pochopitelné &ndash; viz další text). V&nbsp;tomto režimu
bylo možné zobrazit rastrový obraz o rozměrech 160&times;200 pixelů, přičemž
každý pixel mohl nabývat jedné ze šestnácti barev, podobně jako tomu
v&nbsp;textovém režimu (včetně už zmíněných hacků hnědé a světle šedé barvy).
Potřebná kapacita video paměti je stejná, jako v&nbsp;případě režimu
monochromatického &ndash; tedy přesně 16000 bajtů. Tento režim však byl
použitelný pouze pro <i>kompozitní video</i>, tj.&nbsp;například pro televizory
připojené ke grafické kartě pomocí konektoru RCA.</p>

<p><div class="rs-tip-major">Poznámka: originální karta CGA skutečně kromě
konektoru pro připojení digitálního monitoru obsahovala i RCA
konektor.</div></p>

<a href="https://www.root.cz/obrazek/1128725/"><img src="https://i.iinfo.cz/images/129/pc-05-13-prev.webp" class="image-1128725" width="370" height="228" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-13-prev.webp" data-prev-width="370" data-prev-height="228" data-large-filename="https://i.iinfo.cz/images/129/pc-05-13-large.webp" data-large-width="720" data-large-height="444" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 13: Hra King's Quest na klasickém RGBI monitoru (jinými slovy
&ndash; to prostě nechcete).</i></p>

<a href="https://www.root.cz/obrazek/1128726/"><img src="https://i.iinfo.cz/images/129/pc-05-14-prev.webp" class="image-1128726" width="370" height="261" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-14-prev.webp" data-prev-width="370" data-prev-height="261" data-large-filename="https://i.iinfo.cz/images/129/pc-05-14-large.webp" data-large-width="720" data-large-height="508" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 14: Stejná hra, ovšem na kompozitním monitoru s&nbsp;využitím
triku s&nbsp;NTSC barvami (ovšem je nutno ručně doladit).</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Pseudografický režim 160&times;100 pixelů se šestnácti barvami</h2>

<p>Druhý nestandardní mód je již možné použít na jakémkoli monitoru, tedy i na
originálním digitálním monitoru IBM i na jeho klonech. V&nbsp;podstatě se jedná
o režim textový, u nějž je pomocí řídicích registrů čipu <i>MC6845</i> upravena
výška znaků na pouhé dva skenovací řádky. Z&nbsp;toho vyplývá, že se zobrazuje
80 znaků na 100 textových řádků (u <i>CGA</i> je počet skenovacích řádků vždy
roven 200, a to i v&nbsp;textových režimech). Pokud se bude zobrazovat pouze
znak ve tvaru polovičního obdélníku (viz rozšířená tabulka ASCII), zvyšuje se
rozlišení tohoto pseudografického režimu na 160&times;100 &bdquo;pixelů&ldquo;,
přičemž každý pixel může nabývat jedné z&nbsp;šestnácti barev (programátor tedy
mění pouze barvové atributy znaků, tj.&nbsp;každý lichý bajt).</p>

<a href="https://www.root.cz/obrazek/1128727/"><img src="https://i.iinfo.cz/images/129/pc-05-15-prev.webp" class="image-1128727" width="370" height="232" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-15-prev.webp" data-prev-width="370" data-prev-height="232" data-large-filename="https://i.iinfo.cz/images/129/pc-05-15-large.webp" data-large-width="720" data-large-height="452" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 15: Použití pseudografického režimu 160&times;100 ve hrách.</i></p>

<p>Tento poměrně zajímavý režim, použitý například i v&nbsp;několika hrách, je
možné nastavit i u dalších grafických karet, přesněji řečeno u všech karet,
které emulují funkce čipu <i>MC6845</i>, tj.&nbsp;například u karty <i>EGA</i>
i <i>VGA</i>. Ve většině případů to ale postrádá smysl, protože jejich grafické
režimy již nejsou omezeny malým počtem barev tak, jak je tomu u grafické karty
<i>CGA</i>.</p>

<a href="https://www.root.cz/obrazek/1128728/"><img src="https://i.iinfo.cz/images/129/pc-05-16-prev.webp" class="image-1128728" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-16-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-16-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 16: Použití pseudografického režimu 160&times;100 ve hrách.</i></p>

<p>Programátoři se v&nbsp;minulosti pokoušeli nastavovat i další grafické
režimy. Teoreticky to není problematické, protože čip <i>MC6845</i> je velmi
flexibilní, ale mnohé monitory nedokázaly korektně pracovat v&nbsp;těch
případech, kdy se změnilo časování horizontálních a vertikálních
synchronizačních signálů &ndash; grafická karta <i>CGA</i> měla pouze jeden
krystal sloužící ke generování hodinového signálu (vstup do čipu
<i>MC6845</i>), takže například při změně horizontálního rozlišení (počtu
pixelů na obrazovém řádku) se buď musel snížit počet obrazových řádků, nebo
muselo dojít ke změně obrazové frekvence.</p>

<a href="https://www.root.cz/obrazek/1128729/"><img src="https://i.iinfo.cz/images/129/pc-05-17-prev.webp" class="image-1128729" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-17-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-17-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 17: Sada &bdquo;obdélníků&ldquo; v&nbsp;rozšířené ASCII.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů</h2>

<p>Připomeňme si, že pro pseudografický režim 160&times;100 pixelů je nutné
provést dvě operace:</p>

<ol>
<li>Vyplnění celého textového okna znakem, který má podobu obdélníku
(v&nbsp;Unicode ▌, stejný znak však má i originální rozšířená ASCII na
PC). Tím získáme mřížku s&nbsp;horizontálním rozlišením 160 pseudopixelů.</li>
<li>Snížení výšky znaků z&nbsp;osmi obrazových řádků na dva obrazové řádky. Tím
se zvýší vertikální rozlišení mřížky z&nbsp;25 pseudopixelů na 100
pseudopixelů.</li>
</ol>

<p>Nejprve vyplníme textové okno znakem obdélníku, protože se jedná o
jednoduchou operaci. Bude se jednat o znak s&nbsp;ASCII kódem 0xde. A pro každý
znak zvolíme odlišný barvový atribut:</p>

<pre>
        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
<strong>opak:</strong>
        mov al, 0xde    <i>; kod zapisovaneho znaku</i>
        stosb           <i>; zapis znaku</i>
        mov al, cl      <i>; kod zapisovaneho atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
</pre>

<p>Výsledek by měl vypadat následovně:</p>

<a href="https://www.root.cz/obrazek/1128730/"><img src="https://i.iinfo.cz/images/129/pc-05-18-prev.webp" class="image-1128730" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-18-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-18-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 18: Pseudografický režim s&nbsp;rozlišením 160&times;25 pixelů.</i></p>

<p>Úplný zdrojový kód tohoto demonstračního příkladu vypadá následovně:</p>

<pre>
<i>; Textovy rezim karty CGA emulujici grafiku 160x25 "pixelu"</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com cga_text_gfx_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com cga_text_gfx_1.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 3      <i>; nastaveni textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
<strong>opak:</strong>
        mov al, 0xde    <i>; kod zapisovaneho znaku</i>
        stosb           <i>; zapis znaku</i>
        mov al, cl      <i>; kod zapisovaneho atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x18    <i>; pozadi neblika, meni se intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>

        wait_key
        exit
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Změna výšky znaků</h2>

<p>Druhým krokem k&nbsp;pseudografickému režimu 160&times;100 pixelů je snížení
výšky znaků z&nbsp;osmi obrazových řádků na dva obrazové řádky. Tuto operaci
provedeme následujícím makrem, které změní obsah řídicího registru 0x09 čipu
Motorola 6845. Makro vypadá takto:</p>

<pre>
<i>; zmena vysky znaku</i>
%macro <strong>character_height</strong> 1
        mov dx, 0x3d4
        mov al, 0x09    <i>; ridici registr (CRTC)</i>
        out dx, al
        mov dx, 0x3d5
        mov al, %1      <i>; nastavit pozadovanou vysku znaku</i>
        out dx, al
%endmacro
</pre>

<p>V&nbsp;demonstračním příkladu budeme toto makro volat několikrát, protože
postupně snížíme výšku znaků na 6, 2, a dokonce i jeden obrazový řádek. Mezi
jednotlivými obrazovkami se lze přepnout stiskem libovolné klávesy:</p>

<pre>
<i>; Textovy rezim karty CGA.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com gfx_cga_text_mode_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com gfx_cga_text_mode_1.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>; zmena vysky znaku</i>
%macro <strong>character_height</strong> 1
        mov dx, 0x3d4
        mov al, 0x09    <i>; ridici registr (CRTC)</i>
        out dx, al
        mov dx, 0x3d5
        mov al, %1      <i>; nastavit pozadovanou vysku znaku</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 3      <i>; nastaveni textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 40*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x18    <i>; pozadi neblika, meni se intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
&nbsp;
        wait_key
&nbsp;
        character_height 6
        wait_key
&nbsp;
        character_height 1
        wait_key
&nbsp;
        character_height 0
        wait_key
&nbsp;
        exit
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Ukázka změny výšky znaků</h2>

<p>Makro <strong>character_height</strong> můžeme volat s&nbsp;hodnotami, které
jsou typicky v&nbsp;rozsahu 0 až 15 (i když reálně na CGA jen v&nbsp;rozsahu 0
až 7):</p>

<pre>
        character_height 6
        wait_key
&nbsp;
        character_height 1
        wait_key
&nbsp;
        character_height 0
        wait_key
</pre>

<p>Výsledné obrazovky vypadají v&nbsp;DOSBoxu následovně (pravděpodobně kvůli
nedokonalosti DOSBoxu se při změně výšky znaků neroztáhne obraz tak, jako na
reálném monitoru, ovšem při zvětšení je dobře vidět, jak jsou znaky
vysoké):</p>

<a href="https://www.root.cz/obrazek/1128731/"><img src="https://i.iinfo.cz/images/129/pc-05-19-prev.webp" class="image-1128731" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-19-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-19-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 19: Původní výška znaků 8 obrazových řádků.</i></p>

<a href="https://www.root.cz/obrazek/1128732/"><img src="https://i.iinfo.cz/images/129/pc-05-20-prev.webp" class="image-1128732" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-20-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-20-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 20: Modifikovaná výška znaků na 7 obrazových řádků.</i></p>

<a href="https://www.root.cz/obrazek/1128733/"><img src="https://i.iinfo.cz/images/129/pc-05-21-prev.webp" class="image-1128733" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-21-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-21-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 21: Modifikovaná výška znaků na dva obrazové řádky.</i></p>

<a href="https://www.root.cz/obrazek/1128734/"><img src="https://i.iinfo.cz/images/129/pc-05-22-prev.webp" class="image-1128734" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-22-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-22-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 22: Modifikovaná výška znaků na jeden obrazový řádek.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Nastavení čítačů přes registry CRTC pro zobrazení režimu 160&times;100 se šestnácti barvami</h2>

<p>Naším posledním úkolem je nyní nastavit čítače video řadiče Motorola 6845
tak, aby se namísto 25 textových řádků zobrazilo 100 textových řádků
(s&nbsp;výškou dva obrazové řádky). Vhodné hodnoty registrů vypadají
následovně, i když si například můžeme zkusit &bdquo;pohrát&ldquo;
s&nbsp;pozicí vertikálního zatemnění apod. a dosáhnout tak mírně zvýšeného
vertikálního rozlišení (které ovšem nemusí být použitelné pro všechny typy
monitorů!!!):</p>

<table>
<tr><th>Registr CRTC</th><th>Hodnota hexa</th><th>Hodnota deci</th><th>Význam</th></tr>
<tr><td>0x04</td><td>0x7f</td><td>127</td><td>celkový počet textových řádků (včetně neviditelných)</td></tr>
<tr><td>0x06</td><td>0x64</td><td>100</td><td>počet zobrazených řádků z&nbsp;celkového počtu</td></tr>
<tr><td>0x07</td><td>0x70</td><td>112</td><td>pozice synchronizačního signálu</td></tr>
<tr><td>0x09</td><td>0x01</td><td>1</td><td>výška znaku-1 (měřeno obrazovými řádky)</td></tr>
</table>

<p>Pro nastavení registru CRTC použijeme toto makro:</p>

<pre>
<i>; nastaveni jednoho CRTC registru</i>
%macro <strong>set_crtc</strong> 2
        mov dx, 0x3d4
        mov al, %1    <i>; ridici registr (CRTC)</i>
        out dx, al
        mov dx, 0x3d5
        mov al, %2    <i>; hodnota zapisovana do registru</i>
        out dx, al
%endmacro
</pre>

<p>Nastavení pseudografického režimu tedy bude vypadat následovně:</p>

<pre>
        set_crtc 0x04, 0x7f <i>; celkovy pocet textovych radku</i>
        set_crtc 0x06, 100  <i>; pocet zobrazenych textovych radku z celkoveho poctu</i>
        set_crtc 0x07, 0x70 <i>; pozice synchronizacniho signalu</i>
        set_crtc 0x09, 1    <i>; vyska znaku 2 scanline</i>
</pre>

<p>Výsledek:</p>

<a href="https://www.root.cz/obrazek/1128735/"><img src="https://i.iinfo.cz/images/129/pc-05-23-prev.webp" class="image-1128735" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/129/pc-05-23-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/129/pc-05-23-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 23: Pseudobitmapa s&nbsp;rozlišením 160&times;100 pixelů, která
evidentně dokáže zobrazit všech šestnáct barev.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Výsledný příklad: &bdquo;plnohodnotný&ldquo; režim 160&times;100&times;16</h2>

<p>Úplný zdrojový kód příkladu, který inicializuje pseudografický režim
s&nbsp;rozlišením 160&times;100 &bdquo;pixelů&ldquo; s&nbsp;plnou podporou
šestnácti barev, vypadá následovně:</p>

<pre>
<i>; Pseudograficky rezim 160x100x16.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o gfx_text.com gfx_cga_text_mode_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o gfx_text.com gfx_cga_text_mode_1.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni grafickeho rezimu</i>
%macro <strong>gfx_mode</strong> 1
        mov     ah, 0
        mov     al, %1
        int     0x10
%endmacro
&nbsp;
<i>; nastaveni jednoho CRTC registru</i>
%macro <strong>set_crtc</strong> 2
        mov dx, 0x3d4
        mov al, %1    <i>; ridici registr (CRTC)</i>
        out dx, al
        mov dx, 0x3d5
        mov al, %2    <i>; hodnota zapisovana do registru</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        gfx_mode 3      <i>; nastaveni textoveho rezimu 80x25 znaku</i>
&nbsp;
        mov ax, 0xb800
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*100  <i>; pocet zapisovanych znaku</i>
<strong>opak:</strong>
        mov al, 0xde    <i>; kod zapisovaneho znaku</i>
        stosb           <i>; zapis znaku</i>
        mov al, cl      <i>; kod zapisovaneho atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        mov dx, 0x3d8   <i>; port s rizenim graficke palety</i>
        mov al, 0x18    <i>; pozadi neblika, meni se intenzita</i>
        out dx, al      <i>; pres port 0x3d9</i>
&nbsp;
        set_crtc 0x04, 0x7f <i>; celkovy pocet textovych radku</i>
        set_crtc 0x06, 100  <i>; pocet zobrazenych textovych radku z celkoveho poctu</i>
        set_crtc 0x07, 0x70 <i>; pozice synchronizacniho signalu</i>
        set_crtc 0x09, 1    <i>; vyska znaku 2 scanline</i>
&nbsp;
        wait_key
&nbsp;
        exit
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Proč není možné použít režim 160&times;200&times;16?</h2>

<p>Z&nbsp;jakého důvodu se však nemůže zvýšit vertikální rozlišení na plných
200 řádků, tj.&nbsp;snížit výšku znaku na pouhý jeden skenovací řádek?
V&nbsp;tomto případě totiž narážíme na neefektivní práci s&nbsp;obrazovou
pamětí, protože pro každý znak se musí uložit i jeho barvový atribut (dva
bajty). Pro rozlišení 160&times;100 pixelů je zapotřebí alokovat: 80&times;100
znaků=8000&times;2 bytů=16000 bytů, tj.&nbsp;dostáváme se na horní mez kapacity
obrazové paměti.</p>

<p><a href="https://www.root.cz/obrazek/1128882/"><img src="https://i.iinfo.cz/images/663/tuneller-1-prev.webp" class="image-1128882" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/663/tuneller-1-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/663/tuneller-1-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a></p>
<p><i>Obrázek 24: Hra Tunneler v&nbsp;režimu 160&times;100 se šestnácti barvami.</i></p>

<a href="https://www.root.cz/obrazek/1128883/"><img src="https://i.iinfo.cz/images/663/tuneller-2-prev.webp" class="image-1128883" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/663/tuneller-2-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/663/tuneller-2-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 25: Hra Tunneler v&nbsp;režimu 160&times;100 se šestnácti barvami.</i></p>

<a href="https://www.root.cz/obrazek/1128884/"><img src="https://i.iinfo.cz/images/663/tuneller-3-prev.webp" class="image-1128884" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/663/tuneller-3-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/663/tuneller-3-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 26: Hra Tunneler v&nbsp;režimu 160&times;100 se šestnácti barvami.</i></p>

<a href="https://www.root.cz/obrazek/1128885/"><img src="https://i.iinfo.cz/images/663/tuneller-4-prev.webp" class="image-1128885" width="343" height="270" data-prev-filename="https://i.iinfo.cz/images/663/tuneller-4-prev.webp" data-prev-width="343" data-prev-height="270" data-large-filename="https://i.iinfo.cz/images/663/tuneller-4-large.webp" data-large-width="667" data-large-height="525" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 27: Hra Tunneler v&nbsp;režimu 160&times;100 se šestnácti barvami.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad pomocí assembleru <strong>NASM</strong>, byly uložen do Git repositáře,
který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>


<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

