<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Grafická karta Hercules: úspěšná alternativa a konkurence MDA i CGA</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Grafická karta Hercules: úspěšná alternativa a konkurence MDA i CGA</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Grafická karta Hercules: úspěšná alternativa a konkurence MDA i CGA</a></p>
<p><a href="#k02">2. Plná kompatibilita s&nbsp;MDA</a></p>
<p><a href="#k03">3. Základní technické parametry karty Hercules</a></p>
<p><a href="#k04">4. Textový režim karty Hercules</a></p>
<p><a href="#k05">5. První demonstrační příklad: zobrazení textu s&nbsp;atributy kartou Hercules</a></p>
<p><a href="#k06">6. Řídicí registry karty Hercules dostupné přes I/O porty</a></p>
<p><a href="#k07">7. Vypnutí blikání textu, pokud je nejvyšší atributový bit nastavený na jedničku</a></p>
<p><a href="#k08">8. Úplný zdrojový kód dnešního druhého demonstračního příkladu</a></p>
<p><a href="#k09">9. Zákaz generování video signálu</a></p>
<p><a href="#k10">10. Úplný zdrojový kód dnešního třetího demonstračního příkladu</a></p>
<p><a href="#k11">11. Grafický režim karty Hercules</a></p>
<p><a href="#k12">12. Postup pro přepnutí do grafického režimu</a></p>
<p><a href="#k13">13. Úplný zdrojový kód dnešního čtvrtého demonstračního příkladu</a></p>
<p><a href="#k14">*** 14. Vylepšení příkladu: efektivnější zápis do registrů CRTC</a></p>
<p><a href="#k15">15. Úplný zdrojový kód dnešního pátého demonstračního příkladu</a></p>
<p><a href="#k16">*** 16. Postup při vykreslení jednoho pixelu v&nbsp;grafickém režimu karty Hercules</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Úplný zdrojový kód dnešního šestého demonstračního příkladu</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Grafická karta Hercules: úspěšná alternativa a konkurence MDA i CGA</h2>

<p>Obě grafické karty vydané v&nbsp;roce 1981 společností IBM k&nbsp;jejich
počítači IBM PC, tj.&nbsp;jak karty MDA, tak i CGA, mají i přes mnohé rozdíly
několik společných vlastností. Jedná se totiž v&nbsp;obou případech o karty
navržené a prodávané (opět: již od roku 1981) firmou IBM, které jsou vybavené
rozhraním pro osmibitovou variantu universální interní sběrnice ISA
(<i>Industry Standard Architecture</i>). Obě karty jsou taktéž založeny na již
popsaném grafickém řadiči <i>Motorola MC6845</i>, což by sice na první pohled
mohlo znamenat určitou míru kompatibility, ale přesný opak byl pravdou &ndash;
firma IBM u obou karet zvolila odlišné řádkové frekvence (konkrétně 18,432 kHz
u karty <i>MDA</i> a nižší frekvenci 15,75 kHz u karty <i>CGA</i>) i jiný typ
videosignálů, což ve výsledku vedlo k&nbsp;tomu, že pro každou kartu musel být
použitý odlišný monitor (navíc CGA podporovala jak &bdquo;digitální&ldquo; RGBI
monitory, tak i monitory akceptující kompozitní video signál).</p>

<a href="http://i.iinfo.cz/images/360/pc84-8.png"><img src="http://i.iinfo.cz/images/360/pc84-8-prev.png" alt="pc84" height="181" width="370" /></a>
<p><i>Obrázek 1: Slavný tuzemský textový editor T602 spuštěný na počítači
s&nbsp;grafickou kartou Hercules (viz navazující kapitoly).</i></p>

<p>Zatímco grafická karta <i>CGA</i> nabízela možnost barevného zobrazení (viz
též předchozí tři články, v&nbsp;nichž jsme se touto kartou podrobně zabývali)
na úkor menšího &ndash; pro mnohé uživatele zcela neakceptovatelného &ndash;
horizontálního i vertikálního zobrazení, umožňovala sice karta <i>MDA</i>
zobrazení velmi dobře čitelného textu, ovšem bez možnosti použití jakéhokoli
grafického režimu (pochopitelně až ne pseudorežim založený na znacích
z&nbsp;rozšířené ASCII).</p>

<a href="http://i.iinfo.cz/images/360/pc84-9.png"><img src="http://i.iinfo.cz/images/360/pc84-9-prev.png" alt="pc84" height="231" width="370" /></a>
<p><i>Obrázek 2: T602 zobrazený kartou CGA (skutečný obraz má ve skutečnosti
jen 200 obrazových řádků, nikoli 400, ty byly uměle zvětšeny
emulátorem).</i></p>

<p>V&nbsp;této situaci se, pravděpodobně vůbec poprvé (z&nbsp;hlediska
koncového uživatele), projevila jedna z&nbsp;největších předností architektury
IBM PC &ndash; modularita. Zatímco firma IBM vlastně nijak nereagovala na
oprávněné výtky, které od uživatelů přicházely především kvůli vlastnostem
grafické karty <i>CGA</i> (i mnohé osmibitové počítače totiž měly grafický
subsystém vyřešený mnohem elegantněji), objevil se v&nbsp;roce 1982 konkurenční
výrobek &ndash; grafická karta <i>Hercules Graphics Card (HGC)</i> firmy
<i>Hercules Computer Technology</i>. A i přesto, že Hercules nikdy nebyl
podporován v&nbsp;BIOSu, stal se velmi populární alternativou a začal být
podporován i velkými výrobci SW.</p>

<a href="http://i.iinfo.cz/images/360/pc84-10.png"><img src="http://i.iinfo.cz/images/360/pc84-10-prev.png" alt="pc84" height="202" width="370" /></a>
<p><i>Obrázek 3: T602 zobrazený kartou EGA v&nbsp;rozlišení 640&times;350
v&nbsp;šestnácti barvách (touto kartou se budeme zabývat příště).</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Plná kompatibilita s&nbsp;CGA</h2>

<p>Výrobce grafickou kartu Hercules navrhl takovým způsobem, aby ji bylo možné
použít s&nbsp;monitorem určeným pro kartu <i>MDA</i>, ovšem včetně možnosti
přepnutí do monochromatického grafického režimu s&nbsp;relativně vysokým
rozlišením 720&times;348 pixelů (což je na dobu vzniku velmi slušné a dosti to
konkurovalo například pozdějšímu Atari ST s&nbsp;monochromatickým monitorem a
rozlišením 640&times;400 pixelů &ndash; oba typy počítačů se v&nbsp;takové
konfiguraci používaly ve firmách pro &bdquo;seriózní práci&ldquo;, ne na hraní
her). Dodržení zpětné kompatibility s&nbsp;kartou <i>MDA</i> nebylo složité
&ndash; v&nbsp;textovém i grafickém režimu (viz další text) byly použity takové
frekvence synchronizačních signálů (řádková a snímková frekvence), která
odpovídaly signálům generovaným kartou <i>MDA</i>.</p>

<a href="http://i.iinfo.cz/images/360/pc84-11.png"><img src="http://i.iinfo.cz/images/360/pc84-11-prev.png" alt="pc84" height="270" width="360" /></a>
<p><i>Obrázek 4: Textový editor T602 zobrazený poměrně neznámou kartou MCGA,
která v&nbsp;režimu nejvyššího rozlišení 640&times;480 měla jen jednu bitovou
rovinu a tím pádem podporovala pouze dvě barvy (ovšem na druhou stranu
s&nbsp;poměrně slušným rozlišením).</i></p>

<p>I způsob práce Herculesu v&nbsp;textovém režimu se od karty <i>MDA</i> téměř
nelišil, což znamenalo, že na této kartě bylo možné provozovat všechny aplikace
pracující v&nbsp;textovém režimu (navíc bylo možné s&nbsp;využitím rezidentních
programů simulovat i grafické režimy karty <i>CGA</i>, přičemž se jednotlivé
barevné odstíny nahrazovaly ditheringem). Především z&nbsp;těchto důvodů byla
grafická karta <i>Hercules</i> v&nbsp;první polovině osmdesátých let minulého
století velmi oblíbená a do svých sestav ji instalovali i tehdejší přední
výrobci osobních počítačů. K&nbsp;velké oblíbenosti přispěla i poměrně nízká
cena, takže se karta <i>Hercules</i> používala i v&nbsp;době nástupu grafické
karty <i>EGA</i>, jejímž popisem se ovšem dnes zabývat nebudeme (i když čip
6845 velmi zdárně emulovala!).</p>

<a href="http://i.iinfo.cz/images/360/pc84-12.png"><img src="http://i.iinfo.cz/images/360/pc84-12-prev.png" alt="pc84" height="270" width="360" /></a>
<p><i>Obrázek 5: Nejlepší rozlišení i největší počet barev pro textový editor
T602 nabízela grafická karta VGA &ndash; 640&times;480 pixelů v&nbsp;šestnácti
barvách (editor však využil jen podmnožinu barvové palety, navíc obrazová
frekvence nebyla nijak ohromující).</i></p>

<p>Firma <i>Hercules Computer Technology</i> vytvořila i následníka této
grafické karty &ndash; <i>Hercules Plus</i> &ndash; jenž se odlišoval především
v&nbsp;tom, že bylo možné programově měnit znakovou sadu v&nbsp;textovém režimu
a docílit tak například zobrazení českých znaků (u původního <i>Herculesu</i>
či <i>MDA</i> se znaková sada měnila přeprogramováním paměti EPROM).</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Základní technické parametry karty Hercules</h2>

<p>Grafická karta <i>Hercules</i> je založena, podobně jako oba již popsané
grafické adaptéry firmy IBM, na čipu <i>Motorola MC6845</i>, nebo (konkrétně
v&nbsp;případě různých klonů) na VLSI obvodu se stejnými vlastnostmi i významem
řídicích portů. Jak bude z&nbsp;dalšího popisu patrné, je čip <i>MC6845</i>
v&nbsp;této kartě zapojen a naprogramován poněkud odlišným způsobem než tomu
bylo u grafické karty <i>CGA</i> i <i>MDA</i>. Kartu <i>Hercules</i> lze
připojit do standardní osmibitové sběrnice ISA (v&nbsp;dokumentaci firmy IBM
také označované termínem PC-BUS), přičemž se předpokládalo, že frekvence
hodinových signálů této sběrnice bude rovna 4,77 MHz (frekvence základního
oscilátoru 14,285 MHz je při generování hodinových signálů dělená třemi).
Modernější osobní počítače měly frekvenci hodinových signálů sběrnice ISA
zvýšenou na 8, 8.33, 10 či 12 MHz, ovšem při takto vysokých frekvencích mohlo
na kartě <i>Hercules</i> docházet k&nbsp;výpadkům dat při zápisu do video
paměti.</p>

<p>Na grafické kartě byl kromě řadiče, podpůrných obvodů a video paměti
přítomný i jeden paralelní port, což také přispívalo k&nbsp;oblíbenosti
<i>Herculesu</i> mezi zákazníky, protože první personální počítače typu IBM PC
tyto porty neměly nainstalovány přímo na základní desce a bylo je zapotřebí
zvlášť dokupovat (a tím mimo jiné přicházet o jednu pozici na ISA sběrnici,
nehledě na relativně vysokou cenu jakýchkoli PC komponent; v&nbsp;případě
Herculesu zákazníci měli paralelní port &bdquo;zdarma&ldquo;).</p>

<p><div class="rs-tip-major">Poznámka: to platí pro originální Herculesy, ne
pro jejich více či méně oficiální klony, které se objevily záhy po vydání této
karty.</div></p>

<p>Kapacita obrazové paměti byla oproti kartě <i>CGA</i> zvýšena na
dvojnásobek, tj.&nbsp;na celých 32&nbsp;kB. Kromě paměťových modulů tvořících
obrazovou paměť byla na kartě nainstalována i paměť typu ROM popř.&nbsp;EPROM,
ve které byla uložena znaková sada, konkrétně bitové podoby znaků (viz další
kapitolu). Ovládání grafického čipu bylo prováděno s&nbsp;využitím parametrů
ukládaných přes vstupně/výstupní porty umístěné na adresách
<strong>0x3b0</strong> až <strong>0x3bf</strong>, přičemž na adresy
<strong>0x3b4</strong> a <strong>0x3b5</strong> byly namapovány řídicí registry
čipu <i>MC6845</i> (těchto registrů je, jak již víme z&nbsp;předchozích
kapitol, celkem osmnáct, ovšem poslední dva registry týkající se světelného
pera lze ignorovat). Vhodnou změnou parametrů docházelo k&nbsp;přepínání mezi
textovým a grafickým režimem, bylo však možné také měnit parametry zobrazení
grafiky (rozlišení, zpoždění synchronizačních signálů, pozice hardwarového
textového kurzoru, mikroposun textových řádků apod.), čehož se často používalo
při emulaci grafických režimů karty <i>CGA</i>. Některé tyto možnosti si ještě
ukážeme v&nbsp;dalším textu.</p>

<p>Čtením stavových bitů z&nbsp;portu <strong>0x3ba</strong> bylo možné
testovat průběh horizontálního i vertikálního zatemnění (synchronizace
používaná například ve hrách) a číst polohu hrotu světelného pera. Vzhledem
k&nbsp;tomu, že grafická paměť byla z&nbsp;hlediska mikroprocesoru mapována od
adresy <strong>b000:0000</strong> do adresy <strong>b000:7fff</strong> (opět je
použit způsob adresování segment:offset), nedocházelo k&nbsp;překryvu
s&nbsp;obrazovou pamětí grafické karty <i>CGA</i> a proto lze tyto dvě karty
provozovat současně i na jednom počítači (ovšem i toto bylo konfigurovatelné,
takže paměť mohla být mapována jak do segmentu <strong>0xb000</strong>, tak i
do segmentu <strong>0xb800</strong>).</p>

<p>Taktéž nedochází k&nbsp;překryvům vstupně/výstupních portů, neboť ty jsou
v&nbsp;případě karty <i>CGA</i> umístěny o 16 bajtů výše. <i>Hercules</i> je
v&nbsp;případě použití této kombinace využit pro kvalitní zobrazování textu a
monochromatické grafiky, <i>CGA</i> pro zobrazení barevné (ehm :-) grafiky.
Další poměrně oblíbenou kombinací z&nbsp;pozdější doby byla
<i>VGA</i>+<i>Hercules</i>, ovšem v&nbsp;tomto případě <i>Hercules</i> většinou
sloužil pro práci v&nbsp;textovém režimu (čehož dokázaly využít IDE firmy
Borland, AutoCAD atd.).</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Textový režim karty Hercules</h2>

<p>V&times;textovém režimu je grafická karta <i>Hercules</i> prakticky
stoprocentně kompatibilní s&nbsp;kartou <i>MDA</i>, tj.&nbsp;pracuje se
s&nbsp;textem o 80 sloupcích a 25 řádcích, včetně stejného způsobu práce
s&nbsp;atributy jednotlivých znaků (podtržení apod.). Text je zobrazován
v&nbsp;rozlišení 720&nbsp;350 pixelů, což umožňuje na jeden znak použít masku o
velikosti 9&times;14 pixelů. Textovou obrazovku lze mapovat buď od adresy
<strong>b000:0000</strong> nebo od adresy <strong>b800:0000</strong>. Jedinou
nevýhodou textového režimu grafické karty <i>Hercules</i> je fakt, že znaková
sada je uložena v&nbsp;paměti EPROM typu 27C64 a nelze ji tedy programově
změnit, pouze &bdquo;přepálit&ldquo; (pro zajímavost &ndash; všechny
<i>Herculesy</i> s&nbsp;&bdquo;přepálenou&ldquo; znakovou sadou, které jsem
viděl, používaly kódování Kamenických, viz další odstavec). Tvary znaků jsou
v&nbsp;paměti EPROM uloženy tak, jakoby jejich maska měla velikost 8&times;16
pixelů, avšak pro každý znak se při jeho vykreslování dva řádky ignorují a
podle pozice znaku v&nbsp;ASCII tabulce se doplňuje devátý sloupec pixelů, čímž
se dostáváme k&nbsp;výsledné masce 9&times;14 pixelů (devátý sloupec vzniká
kopií osmého sloupce u znaků představujících rámečky, jinak je tento sloupec
vždy prázdný).</p>

<img src="https://i.iinfo.cz/images/405/6845-11.png" class="image-523175" alt="&#160;" title="Autor: third_party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="640" height="350" />
<p><i>Obrázek 6: Volkov Commander v&nbsp;režimu karty Hercules.</i></p>

<p>Z&nbsp;výše uvedených informací vyplývá, že pro uložení celé znakové sady by
měly dostačovat pouhé čtyři kilobajty, neboť 16 řádků&times;1 bajt&times;256
znaků=4096 bajtů. Ovšem vzhledem k&nbsp;tomu, že paměť EPROM 27C64 má kapacitu
8&nbsp;kB, jsou horní 4&nbsp;kB nevyužity. Vhodnou hardwarovou úpravou je však
možné implementovat dvě znakové sady &ndash; u nás se většinou používala
originální sada US-ASCII a již zmíněné české znaky v&nbsp;kódu Kamenických.
Kromě původní karty <i>Hercules</i> se vyráběla taktéž již zmíněná karta
<i>Hercules Plus</i>, která se od původního modelu odlišuje především
v&nbsp;tom, že znakovou sadu ukládá do paměti typu (D)RAM a umožňuje tak
programově měnit používanou znakovou sadu. U této karty je dokonce možné
rozšířit počet znaků ve znakové sadě až na teoretickou hodnotu
2<sup>12</sup>=4096 tím způsobem, že se čtyři bity v&nbsp;atributovém bajtu
použijí na definici atributů znaků a zbylé čtyři bity se připojí
k&nbsp;osmibitovému ASCII kódu znaku. Ne všechny kódy však mohou být skutečně
využity, protože velikost paměti vyhrazené pro znakovou sadu dosahuje 48 kB a
ne 64 kB.</p>

<img src="https://i.iinfo.cz/images/405/6845-12.png" class="image-523176" alt="&#160;" title="Autor: third_party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="640" height="350" />
<p><i>Obrázek 7: QBasic v&nbsp;režimu karty Hercules.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. První demonstrační příklad: zobrazení textu s&nbsp;atributy kartou Hercules</h2>

<p>Dnešní první demonstrační příklad je velmi jednoduchý. Ukážeme si v&nbsp;něm
vykreslení sady znaků společně s&nbsp;jejich atributy (popředí/pozadí) a
porovnáme výsledek získaný na kartě CGA a Herculesu. Nesmíme pouze zapomenout,
že na kartě CGA leží textová paměť v&nbsp;segmentu 0xb800, zatímco u Herculesu
je to segment 0xb000:</p>

<pre>
        mov ax, 0xb000
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
</pre>

<p>Výsledek pro kartu CGA:</p>

*** image ***
<p><i>Obrázek 8: Text s&nbsp;atributy vykreslený kartou CGA.</i></p>

<p>Pro počítač s&nbsp;Herculesem získáme mnohem čitelnější text, ovšem (podle
očekávání) pouze monochromatický:</p>

*** image ***
<p><i>Obrázek 9: Text s&nbsp;atributy vykreslený kartou Hercules.</i></p>

<p>A takto vypadá úplný zdrojový kód dnešního prvního demonstračního
příkladu:</p>

<pre>
<i>; Textovy rezim karty Hercules s rozlisenim 80x25 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hercules.com hercules_text_mode_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hercules.com hercules_text_mode_1.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        mov ax, 0xb000
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
        exit
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Řídicí registry karty Hercules dostupné přes I/O porty</h2>

<p>Grafická karta Hercules obsahuje sedm řídicích a stavových registrů
(k&nbsp;nimž ovšem můžeme připočítat i registry pro paralelní port). Povšimněte
si, že I/O porty těchto registrů se liší od karty CGA, což umožňuje současnou
instalaci obou karet:</p>

<table>
<tr><th>Port</th><th>Význam</th></tr>
<tr><td>3b4</td><td>výběr registru CRTC pro zápis nebo čtení</td></tr>
<tr><td>3b5</td><td>po výběru CRTC registru se odtud provede zápis či čtení</td></tr>
<tr><td>3b8</td><td>volba textového/grafického režimu, povolení blikání a video signálu</td></tr>
<tr><td>3b9</td><td>latch (záchytný registr) světelného pera</td></tr>
<tr><td>3ba</td><td>stavový registr (aktivní VSync, HSync apod.)</td></tr>
<tr><td>3bb</td><td>latch (záchytný registr) světelného pera</td></tr>
<tr><td>3bf</td><td>ochrana před přepnutím do grafického režimu</td></tr>
</table>

<p>První dva I/O porty již známe z&nbsp;popisu karty CGA a ještě se k&nbsp;nim
vrátíme v&nbsp;navazujících kapitolách. Ovšem nejdůležitější je port 3b8, jehož
jednotlivé bity mají následující význam:</p>

<table>
<tr><th>Bit</th><th>Význam</th></tr>
<tr><td>0</td><td>&times;</td></tr>
<tr><td>1</td><td>0-textový režim, 1-grafický režim</td></tr>
<tr><td>2</td><td>&times;</td></tr>
<tr><td>3</td><td>0-paprsek vypnutý, 1-zobrazování</td></tr>
<tr><td>4</td><td>&times;</td></tr>
<tr><td>5</td><td>0-zákaz blikání pozadí, 1-povolení blikání pozadí (nejvyšší bit atributu)</td></tr>
<tr><td>6</td><td>&times;</td></tr>
<tr><td>7</td><td>0-video RAM je mapována do segmentu 0xb000, 1-video RAM je mapována do segmentu 0b800</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: ovšem v&nbsp;žádném případě nedostačuje
nastavit bit číslo 1 na jedničku a doufat, že se Hercules přepne do grafického
režimu. Ve skutečnosti je nutné přeprogramovat i registry CRTC.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Vypnutí blikání textu, pokud je nejvyšší atributový bit nastavený na jedničku</h2>

<p>Řídicí registr grafické karty Hercules je dostupný na I/O portu 0x3b8, takže
si v&nbsp;assembleru vytvoříme symbolické jméno tohoto registru:</p>

<pre>
hercules_control  equ 0x3b8
</pre>

<p>Pro nastavení jednotlivých bitů tohoto registru použijeme nové makro, které
vypadá (a i se tak používá) naprosto triviálně:</p>

<pre>
<i>; nastaveni ridiciho registru</i>
%macro <strong>set_control</strong> 1
        mov dx, hercules_control
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
</pre>

<p>Nyní již můžeme zakázat blikání textu, a to zápisem hodnoty 0x08 neboli
0b00001000:</p>

<table>
<tr><th>Bit</th><th>Význam</th></tr>
<tr><td>0</td><td>0</td></tr>
<tr><td>1</td><td>0-textový režim</td></tr>
<tr><td>2</td><td>0</td></tr>
<tr><td>3</td><td>1-zobrazování</td></tr>
<tr><td>4</td><td>0</td></tr>
<tr><td>5</td><td>0-zákaz blikání pozadí</td></tr>
<tr><td>6</td><td>0</td></tr>
<tr><td>7</td><td>0-video RAM je mapována do segmentu 0xb000</td></tr>
</table>

<p>Samotný zápis:</p>
<pre>
        set_control 0x08 <i>; zakaz blikani</i>
</pre>

<p>Výsledná textová obrazovka by měla vypadat následovně:</p>

*** image ***
<p><i>Obrázek 10: Obrazovka se zakázaným blikáním textu.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Úplný zdrojový kód dnešního druhého demonstračního příkladu</h2>

<p>Úplný zdrojový kód druhého demonstračního příkladu, který modifikuje způsob
zobrazení textu (v&nbsp;textovém režimu) vypadá následovně:</p>

<pre>
<i>; Textovy rezim karty Hercules s rozlisenim 80x25 znaku.</i>
<i>; Zmena zpusobu interpretace sedmeho bitu atributu.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hercules.com hercules_text_mode_2.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hercules.com hercules_text_mode_2.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karty Hercules</i>
hercules_index    equ 0x3b4
hercules_control  equ 0x3b8
hercules_status   equ 0x3ba
hercules_config   equ 0x3bf
&nbsp;
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
&nbsp;
<i>; nastaveni ridiciho registru</i>
%macro <strong>set_control</strong> 1
        mov dx, hercules_control
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        mov ax, 0xb000
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
&nbsp;
        set_control 0x08 <i>; zakaz blikani</i>
&nbsp;
        wait_key
        exit
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Zákaz generování video signálu</h2>

<p>Pro zajímavost se pokusme zakázat generování video signálu. Na skutečné
kartě Hercules by měla obrazovka zčernat (nebo zmodrat, v&nbsp;závislosti na
jejím typu), ovšem DOSBox &ndash; zdá se &ndash; bit pro zákaz zobrazování
ignoruje:</p>

<pre>
        set_control 0x00 <i>; zakaz zobrazeni</i>
</pre>

<p><div class="rs-tip-major">Poznámka: nicméně v&nbsp;dalších demonstračních
příkladech budeme video signál i tak vypínat, a to konkrétně při přepínání
z&nbsp;textového režimu do režimu grafického. Výsledné programy tak budou
kompatibilní s&nbsp;reálným HW.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Úplný zdrojový kód dnešního třetího demonstračního příkladu</h2>

<p>Opět se podívejme na úplný zdrojový kód dnešního třetího demonstračního
příkladu:</p>

<pre>
<i>; Textovy rezim karty Hercules s rozlisenim 80x25 znaku.</i>
<i>; Vypnuti video signalu.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hercules.com hercules_turn_off.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hercules.com hercules_turn_off.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karty Hercules</i>
hercules_index    equ 0x3b4
hercules_control  equ 0x3b8
hercules_status   equ 0x3ba
hercules_config   equ 0x3bf
&nbsp;
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
&nbsp;
<i>; nastaveni ridiciho registru</i>
%macro <strong>set_control</strong> 1
        mov dx, hercules_control
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        mov ax, 0xb000
        mov es, ax
        mov di, 0       <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 80*25   <i>; pocet zapisovanych znaku</i>
        mov al, 0       <i>; kod zapisovaneho znaku</i>
<strong>opak:</strong>
        stosb           <i>; zapis znaku + atributu</i>
        stosb
        inc al          <i>; dalsi znak/atribut</i>
        loop opak       <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
&nbsp;
        set_control 0x00 <i>; zakaz zobrazeni</i>
&nbsp;
        wait_key
        exit
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Grafický režim karty Hercules</h2>

<p>Grafický režim karty <i>Hercules</i> je, ostatně jako téměř ve všech
obdobných případech, mnohem zajímavější a flexibilnější, než režim textový.
<i>Hercules</i> podporoval na svou dobu poměrně vysoké rozlišení 720&times;348
obrazových bodů zobrazovaných černobíle nebo dvoubarevně. Konkrétní barvy
použité při zobrazování byly závislé na typu obrazovky monitoru; kromě
obligátní kombinace černá+zelená byla mezi výrobci obrazovek oblíbená například
kombinace tmavě modrá a světle červená nebo tmavě modrá a žlutá (je to možná
zvláštní kombinace, ovšem právě s&nbsp;tou jsme se mohli v&nbsp;tuzemsku setkat
poměrně často).</p>

<p>Horizontální rozlišení grafického režimu je stejné, jako v&nbsp;případě
režimu textového, protože platí 80 znaků na řádku &times; 9 horizontálních
pixelů na znak = 720 pixelů. Vertikální rozlišení se však liší o dva skenovací
řádky. V&nbsp;textovém režimu je vertikální rozlišení, tj.&nbsp;počet
obrazových řádků, rovno 350 pixelům, protože platí vztah: 25 textových řádků
&times; 14 skenovacích/obrazových řádků na výšku znaku=350 skenovacích řádků
celkem. V&nbsp;grafickém režimu je zvolena hodnota 348 skenovacích řádků
především z&nbsp;toho důvodu, že je toto číslo dělitelné čtyřmi, což souvisí
s&nbsp;režimem přístupu do obrazové paměti, jehož princip bude popsán
v&nbsp;následujícím textu (ostatně změnou řídicích registrů čipu <i>MC6845</i>
lze počet obrazových řádků v&nbsp;určitém rozsahu měnit, takže lze dosáhnout i
350 řádků &ndash; pokud vůbec někdo pozná vizuální rozdíl).</p>

<img src="https://i.iinfo.cz/images/405/6845-13.png" class="image-523177" alt="&#160;" title="Autor: third_party, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" width="720" height="348" />
<p><i>Obrázek 11: Hra Simcity v&nbsp;režimu grafické karty Hercules.
Z&nbsp;předchozího odstavce je patrné, že konkrétní barvové schéma se liší
podle typu monitoru (a mnohé monitory navíc měly tlačítko pro inverzní
zobrazení).</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Postup pro přepnutí do grafického režimu</h2>

<p>V&nbsp;případě, že budeme chtít přepnout kartu Hercules do grafického
režimu, nemůžeme použít BIOS, protože tato karta není BIOSem podporována. Zbývá
nám tedy oblíbený nízkoúrovňový přístup, konkrétně provedení následujících čtyř
kroků:</p>

<ol>
<li>Povolíme změnu z&nbsp;textového režimu na režim grafický (I/O port 0x3bf)</li>
<li>Přepneme se do grafického režimu a vypneme zobrazování (I/O port 0x3b8)</li>
<li>Přeprogramujeme prvních dvanáct řídicích CRTC registrů</li>
<li>Povolíme zobrazování (I/O port 0x3b8)</li>
</ol>

<p>Pro změnu portů 0x3bf a 0x3b8 použijeme pomocná makra nazvaná
<strong>set_config</strong> a <strong>set_control</strong>:</p>

<pre>
<i>; nastaveni konfiguracniho registru</i>
%macro <strong>set_config</strong> 1
        mov dx, hercules_config
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>; nastaveni ridiciho registru</i>
%macro <strong>set_control</strong> 1
        mov dx, hercules_control
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
</pre>

<p>Jak však nastavit CRTC registry? Tato informace je téměř ztracena
v&nbsp;temných zákoutích internetu (ostatně se jedná o informace z&nbsp;roku
1983), takže si uveďme korektní a podporované hodnoty CRTC registrů
(resp.&nbsp;prvních dvanácti registrů, další nemají z&nbsp;hlediska zobrazování
grafiky význam). Povšimněte si, že i pro grafický režim pracujeme
s&nbsp;jednotkou &bdquo;znak&ldquo; a nikoli &bdquo;pixel&ldquo;:</p>

<table>
<tr><th>Číslo registru</th><th>Hodnota (dec)</th><th>Hodnota (hex)</th><th>Význam</th></tr>
<tr><td> 0</td><td>53</td><td>35</td><td>celkový počet znaků horizontálně - 1, včetně okrajů (tedy nezobrazených znaků)</td></tr>
<tr><td> 1</td><td>45</td><td>2d</td><td>počet horizontálně zobrazených znaků</td></tr>
<tr><td> 2</td><td>46</td><td>2e</td><td>horizontální pozice synchronizačního signálu</td></tr>
<tr><td> 3</td><td> 7</td><td>07</td><td>šířka horizontálního synchronizačního signálu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>91</td><td>5b</td><td>celkový počet textových řádků (včetně okrajů)</td></tr>
<tr><td> 5</td><td> 2</td><td>02</td><td>mikroposun textových řádků po jednotlivých obrazových řádcích</td></tr>
<tr><td> 6</td><td>87</td><td>57</td><td>zobrazený počet textových řádků (87*4=348 obrazových řádků celkem)</td></tr>
<tr><td> 7</td><td>87</td><td>57</td><td>vertikální pozice synchronizačního signálu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 8</td><td>2</td><td>2</td><td>režim prokládání (interlace) a posunutí</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>3</td><td>3</td><td>počet obrazových řádků pro jeden textový řádek - 1 &ndash; výška znaku (tedy 4 mikrořádky)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>0</td><td>0</td><td>začátek hardwarového kurzoru</td></tr>
<tr><td>11</td><td>0</td><td>0</td><td>konec hardwarového kurzoru</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>0</td><td>0</td><td>počáteční adresa obrazové paměti (vyšší bajt)</td></tr>
<tr><td>13</td><td>0</td><td>0</td><td>počáteční adresa obrazové paměti (nižší bajt)</td></tr>
<tr><td>14</td><td>0</td><td>0</td><td>adresa kurzoru &ndash; vyšší bajt</td></tr>
<tr><td>15</td><td>0</td><td>0</td><td>adresa kurzoru &ndash; nižší bajt</td></tr>
<tr><td>16</td><td>0</td><td>0</td><td>adresa světelného pera &ndash; vyšší bajt</td></tr>
<tr><td>17</td><td>0</td><td>0</td><td>adresa světelného pera &ndash; nižší bajt</td></tr>
</table>

<p>Prvních dvanáct hodnot si uložíme přímo do našeho programu:</p>

<pre>
<strong>gtable</strong>: db      35h,2dh,2eh,07h
        db      5bh,02h,57h,57h
        db      02h,03h,00h,00h
</pre>

<p>Jen pro připomenutí, jaký význam mají čítače a hodnoty komparátorů v&nbsp;prvních čtyřech registrech:</p>

<pre>
          1         2         3         4         5
 12345678901234567890123456789012345678901234567890123456  ← čítač znaků
|                                            ||      ||
|     běžný viditelný textový řádek          || sync ||
|                                            ||      ||
                                             ↑↑      ↑↑
                                            R1 R2   R2+R3=R0
</pre>

<p><div class="rs-tip-major">Poznámka: jeden &bdquo;znak&ldquo; v&nbsp;této
chvíli odpovídá šestnácti horizontálním pixelům, takže hodnota 45 znamená
45&times;16=720 pixelů.</div></p>

<p>Celý podprogram pro nastavení grafického režimu:</p>

<pre>
</pre>


<p><a name="k13"></a></p>
<h2 id="k13">13. Úplný zdrojový kód dnešního čtvrtého demonstračního příkladu</h2>

<p>Úplný zdrojový kód demonstračního příkladu, který provede naprogramování
karty Hercules tak, aby se použil grafický režim, vypadá následovně:</p>

<pre>
<i>; Graficky rezim karty Hercules s rozlisenim 720x348 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hercules.com hercules_gfx_mode_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hercules.com hercules_gfx_mode_1.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karty Hercules</i>
hercules_index    equ 0x3b4
hercules_data     equ 0x3b5
hercules_control  equ 0x3b8
hercules_status   equ 0x3ba
hercules_config   equ 0x3bf
&nbsp;
<i>; ridici bity</i>
screen_on equ 0x08
graphics  equ 0x02
text      equ 0x20
enable    equ 0x03
&nbsp;
&nbsp;
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni konfiguracniho registru</i>
%macro <strong>set_config</strong> 1
        mov dx, hercules_config
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>; nastaveni ridiciho registru</i>
%macro <strong>set_control</strong> 1
        mov dx, hercules_control
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        call init_graphics
&nbsp;
        mov ax, 0xb000
        mov es, ax
        mov di, 0         <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 90*348/4  <i>; pocet zapisovanych bajtu</i>
        mov al, 255       <i>; kod zapisovaneho bajtu</i>
<strong>opak:</strong>
        stosb             <i>; zapis bajtu</i>
        loop opak         <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
        exit              <i>; hotovo</i>
&nbsp;
&nbsp;
<strong>init_graphics</strong>:
        set_config enable
        set_control graphics
&nbsp;
        <i>; inicializace ridicich registru cipu Motorola 6845</i>
        mov     si, gtable               <i>; DS:SI obsahuje adresu tabulky s hodnotami registru</i>
&nbsp;
        mov     cx, 12                   <i>; pocet nastavovanych parametru</i>
        xor     ah, ah                   <i>; zaciname registrem cislo 0</i>
&nbsp;
<strong>parms</strong>: 
        mov     dx, hercules_index       <i>; port pro zapis</i>
        mov     al, ah
        out     dx, al                   <i>; zapis cisla registru na port</i>
&nbsp;
        mov     dx, hercules_data        <i>; port pro zapis</i>
        lodsb                            <i>; precist hodnotu registru z tabulky</i>
        out     dx, al                   <i>; zapis hodnoty registru na port</i>
&nbsp;
        inc     ah                       <i>; dalsi CRTC registr</i>
        loop    parms                    <i>; dalsi iterace</i>
&nbsp;
        set_control graphics + screen_on <i>; zapnuti obrazovky</i>
        ret                              <i>; vse hotovoa</i>
&nbsp;
&nbsp;
<strong>gtable</strong>: db      35h,2dh,2eh,07h
        db      5bh,02h,57h,57h
        db      02h,03h,00h,00h

</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Vylepšení příkladu: efektivnější zápis do registrů CRTC</h2>

<pre>
</pre>

<pre>
parms:  mov     al, ah                   <i>; zapis cisla registru</i>
        out     dx, al

        inc     dx                       <i>; adresa portu datoveho registru</i>
        lodsb                            <i>; precist hodnotu registru z tabulky</i>
        out     dx, al                   <i>; zapis hodnoty registru na port</i>
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Úplný zdrojový kód dnešního pátého demonstračního příkladu</h2>

<p>Opět se podívejme na úplný zdrojový kód dnes již pátého demonstračního
příkladu:</p>

<pre>
<i>; Graficky rezim karty Hercules s rozlisenim 720x348 znaku.</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o hercules.com hercules_gfx_mode_2.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o hercules.com hercules_gfx_mode_2.asm</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karty Hercules</i>
hercules_index    equ 0x3b4
hercules_data     equ 0x3b5
hercules_control  equ 0x3b8
hercules_status   equ 0x3ba
hercules_config   equ 0x3bf
&nbsp;
<i>; ridici bity</i>
screen_on equ 0x08
graphics  equ 0x02
text      equ 0x20
enable    equ 0x03
&nbsp;
&nbsp;
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        mov     ah, 0x4c
        int     0x21
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; nastaveni konfiguracniho registru</i>
%macro <strong>set_config</strong> 1
        mov dx, hercules_config
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>; nastaveni ridiciho registru</i>
%macro <strong>set_control</strong> 1
        mov dx, hercules_control
        mov al, %1    <i>; ridici registr</i>
        out dx, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start:</strong>
        call init_graphics
&nbsp;
        mov ax, 0xb000
        mov es, ax
        mov di, 0         <i>; nyni ES:DI obsahuje adresu prvniho znaku ve video RAM</i>
&nbsp;
        mov cx, 90*348/4  <i>; pocet zapisovanych bajtu</i>
        mov al, 255       <i>; kod zapisovaneho bajtu</i>
<strong>opak:</strong>
        stosb             <i>; zapis bajtu</i>
        loop opak         <i>; opakujeme CX-krat</i>
&nbsp;
        wait_key
        exit              <i>; hotovo</i>
&nbsp;
&nbsp;
<strong>init_graphics</strong>:
        set_config enable
        set_control graphics
&nbsp;
        <i>; inicializace ridicich registru cipu Motorola 6845</i>
        mov     si, gtable               <i>; DS:SI obsahuje adresu tabulky s hodnotami registru</i>
&nbsp;
        mov     dx, hercules_index       <i>; registr pro zapis</i>
        mov     cx, 12                   <i>; pocet nastavovanych parametru</i>
        xor     ah, ah                   <i>; zaciname registrem cislo 0</i>
&nbsp;
<strong>parms</strong>:  mov     al, ah                   <i>; zapis cisla registru</i>
        out     dx, al
&nbsp;
        inc     dx                       <i>; adresa portu datoveho registru</i>
        lodsb                            <i>; precist hodnotu registru z tabulky</i>
        out     dx, al                   <i>; zapis hodnoty registru na port</i>
&nbsp;
        inc     ah                       <i>; dalsi CRTC registr</i>
        dec     dx                       <i>; obnoveni cisla portu</i>
        loop    parms                    <i>; dalsi iterace</i>
&nbsp;
        set_control graphics + screen_on <i>; zapnuti obrazovky</i>
        ret                              <i>; vse hotovo</i>
&nbsp;
&nbsp;
<strong>gtable</strong>: db      35h,2dh,2eh,07h
        db      5bh,02h,57h,57h
        db      02h,03h,00h,00h

</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Postup při vykreslení jednoho pixelu v&nbsp;grafickém režimu karty Hercules</h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Úplný zdrojový kód dnešního šestého demonstračního příkladu</h2>

<pre>
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad pomocí assembleru <strong>NASM</strong>, byly uložen do Git repositáře,
který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

