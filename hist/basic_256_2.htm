<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Základy práce s grafickou plochou v Basicu-256</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Základy práce s grafickou plochou v Basicu-256</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Základy práce s&nbsp;grafickou plochou v&nbsp;Basicu-256</a></p>
<p><a href="#k02">2. Kreslení úseček, vlastnosti grafické plochy</a></p>
<p><a href="#k03">3. Změna šířky vykreslovaných úseček</a></p>
<p><a href="#k04">4. Příkaz pro kreslení obdélníku, specifikace barvy výplně</a></p>
<p><a href="#k05">5. Vykreslení kružnice a kruhu, &bdquo;neviditelná&ldquo; barva výplně</a></p>
<p><a href="#k06">6. Text vykreslený do grafické plochy</a></p>
<p><a href="#k07">7. Práce s&nbsp;grafickou plochou na úrovni jednotlivých pixelů</a></p>
<p><a href="#k08">8. Režim rychlé grafiky</a></p>
<p><a href="#k09">9. Práce se sprity</a></p>
<p><a href="#k10">10. Načtení a zobrazení spritu</a></p>
<p><a href="#k11">11. Změna pozice spritu v&nbsp;rámci grafické plochy</a></p>
<p><a href="#k12">12. Sprite zobrazený nad vykreslenými obrazci na grafické ploše</a></p>
<p><a href="#k13">13. Pomalý relativní přesun spritu (jednoduchá animace)</a></p>
<p><a href="#k14">14. Přesun spritu se změnou velikosti</a></p>
<p><a href="#k15">15. Přesun spritu s&nbsp;jeho rotací</a></p>
<p><a href="#k16">16. Detekce kolize spritů</a></p>
<p><a href="#k17">*** 17. Vybrané další možnosti Basicu-256</a></p>
<p><a href="#k18">18. Popsané příkazy (klíčová slova) Basicu-256</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Základy práce s&nbsp;grafickou plochou v&nbsp;Basicu-256</h2>

<p><a
href="https://www.root.cz/clanky/basic-256-dalsi-moderni-reinkarnace-basicu-urcena-pro-vyuku-programovani/">V&nbsp;úvodním
článku</a> o <i>Basicu-256</i> jsme si mj.&nbsp;řekli, že <i>Basic-256</i> ve
skutečnosti není &bdquo;pouze&ldquo; programovacím jazykem, ale jedná se o
desktopovou aplikaci, která obsahuje i jednoduše použitelné a přehledné
integrované vývojové prostředí, jež zahrnuje editor zdrojových kódů, okno
zajišťující textový vstup a výstup (což znamená, že se jedná o formu textového
terminálu), okno určené pro grafický vstup a výstup (grafickým vstupem je
myšlena reakce na pohyb myši a stisk tlačítek myši) a v&nbsp;neposlední řadě
podporuje toto integrované vývojové prostředí i krokování vytvářeného
programu.</p>

*** image ***
<p><i>Obrázek 1: Plocha vpravo dole je plochou grafickou.</i></p>

<p>Dnes si ukážeme právě práci s&nbsp;grafickou plochou, protože práce
s&nbsp;grafikou je pro výukové účely takřka ideální &ndash; grafika poskytuje
okamžitou zpětnou vazbu, každá chyba v&nbsp;algoritmu je (většinou) ihned
viditelná, rastrová grafika mnohdy vede k&nbsp;pochopení vnořených programových
smyček atd. V&nbsp;<i>Basicu-256</i> je grafická plocha použitelná pro tři
základní operace:</p>

<ol>
<li>Vykreslení základní 2D entit typu úsečka, obdélník, kružnice, text apod.</li>
<li>Přístup k&nbsp;jednotlivým pixelům, tj.&nbsp;základní práce s&nbsp;rastrovou grafikou</li>
<li>Zobrazení takzvaných <i>spritů</i>, které jsou nezávislé na ostatních vykreslených objektech</li>
</ol>

<p>Před jakýmkoli kreslením je vhodné grafickou plochu smazat, a to příkazem
<strong>clg</strong>:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
&nbsp;
<strong>clg</strong>
</pre>

<p>V&nbsp;novějších verzích <i>Basicu-256</i> lze určit i barvu pozadí grafické
plochy:</p>

<pre>
<strong>clg darkblue</strong>
</pre>

<p>Grafická plocha má rozměry 300&times;300 délkových jednotek mapovaných ve
výchozím stavu na pixely &ndash; jedna délková jednotka odpovídá šířce nebo
výšce jednoho pixelu. Velikost grafické plochy lze ovlivnit příkazem
<strong>graphsize</strong>.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Kreslení úseček, vlastnosti grafické plochy</h2>

<p>Základní 2D entitou, kterou je možné vykreslit na grafickou plochu, je
úsečka. <i>Basic-256</i> při vykreslování úseček neaplikuje algoritmus
vyhlazení hran, což je v&nbsp;tomto kontextu dobře, neboť je lépe patrné, jak
vlastně pracuje rastrová grafika &ndash; že je obraz skutečně složen
z&nbsp;diskrétních grafických elementů. Úsečka je specifikována souřadnicemi
počátečního a koncového bodu a před jejím vykreslením je vhodné nastavit barvu
vykreslování příkazem <strong>color</strong>. Pro vykreslení úsečky se používá
příkaz <strong>line</strong> tak, jak je to patrné z&nbsp;následujícího
demonstračního příkladu:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení úsečky</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>line</strong> 50, 50, 200, 200
</pre>

<p>Pro lepší představu o tom, jak vypadají úsečky s&nbsp;různým sklonem (a
navíc při použití klasického Bresenhamova algoritmu bez vyhlazení hran) je
vhodné si spustit následující demonstrační příklad:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení úsečky</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 10
    <strong>line</strong> 50, 50+i, 50+i, 250
<strong>next</strong> i
</pre>

*** image ***
<p><i>Obrázek 3: Výsledek běhu demonstračního příkladu.</i></p>

*** image ***
<p><i>Obrázek 4: Zvětšení grafické plochy 2&times; v&nbsp;obou směrech.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Změna šířky vykreslovaných úseček</h2>

<p><a href="#k02">V&nbsp;předchozí kapitole</a> jsem se sice zmínil o
Bresenhamově algoritmu, ovšem v&nbsp;případě <i>Basicu-256</i> se používá
upravená varianta algoritmu, která podporuje změnu šířky vykreslované úsečky.
Šířka kreslení, resp.&nbsp;přesněji řečeno šířka kreslicího pera, se nastavuje
příkazem <strong>penwidth</strong>, kterému se předá požadovaná šířka
reprezentovaná v&nbsp;délkových jednotkách (ve výchozím nastavení přímo
v&nbsp;pixelech):</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení úsečky</i>
<strong>rem</strong> <i>Změna šířky vykreslovaných úseček</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 20
    <strong>penwidth</strong> i/10
    <strong>line</strong> 50, 50+i, 250, 50+i
<strong>next</strong> i
</pre>

<p>Výsledek činnosti tohoto jednoduchého skriptu by měl vypadat takto:</p>

*** image ***
<p><i>Obrázek 5: Změna šířky vykreslovaných úseček.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Příkaz pro kreslení obdélníku, specifikace barvy výplně</h2>

<p>Obdélník se vykreslí příkazem <strong>rect</strong>, jemuž se zadají
souřadnice obou protilehlých vrcholů. Jedná se tedy podle očekávání o obdélník,
jehož hrany jsou rovnoběžné se souřadnými osami:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení obdélníku</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> darkred
&nbsp;
<strong>rect</strong> 50, 50, 200, 200
</pre>

<p>Výsledkem je ovšem v&nbsp;tomto případě obdélník vyplněný tmavě červenou
barvou:</p>

*** image ***
<p><i>Obrázek 6: Osově orientovaný obdélník vyplněný tmavě červenou
barvou.</i></p>

<p>Můžeme specifikovat i barvu obrysu současně s&nbsp;barvou výplně, a to
takto:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení obdélníku</i>
<strong>rem</strong> <i>Specifikace barvy obrysu i výplně</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> blue, yellow
&nbsp;
<strong>rect</strong> 50, 50, 200, 200
</pre>

<p>Výsledek:</p>

*** image ***
<p><i>Obrázek 7: Obdélník se specifikovanou barvou obrysu.</i></p>

<p>Pochopitelně je možné změnit šířku pera a tím pádem i šířku obrysu:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení obdélníku</i>
<strong>rem</strong> <i>Specifikace barvy obrysu i výplně</i>
<strong>rem</strong> <i>Změna šířky kreslení</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> blue, yellow
<strong>penwidth</strong> 5
&nbsp;
<strong>rect</strong> 50, 50, 200, 200
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Vykreslení kružnice a kruhu, &bdquo;neviditelná&ldquo; barva výplně</h2>

<p>V&nbsp;následujícím demonstračním příkladu si ukážeme, jak lze vykreslit
kružnice a kruhy. Oba tvary se vykreslí příkazem <strong>circle</strong>,
kterému se předá souřadnice středu obrazce a jeho poloměr. Pokud se má
vykreslit kružnice (tedy tvar reprezentovaný pouze obrysem), je navíc nutné
specifikovat, že barva výplně má být &bdquo;neviditelná&ldquo;, což je
v&nbsp;Basicu-256 reprezentováno konstantou <strong>clear</strong>:</p>

<pre>
<strong>rem</strong> <i>Základy práce s grafickým výstupem</i>
<strong>rem</strong>
<strong>rem</strong> <i>Smazání grafické plochy</i>
<strong>rem</strong> <i>Příkaz pro vykreslení kruhu</i>
<strong>rem</strong> <i>Specifikace barvy obrysu i výplně</i>
<strong>rem</strong> <i>Změna šířky kreslení</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> red
<strong>circle</strong> 150, 50, 50
&nbsp;
<strong>penwidth</strong> 5
<strong>color</strong> orange, yellow
<strong>circle</strong> 150, 150, 75
&nbsp;
<strong>penwidth</strong> 10
<strong>color</strong> blue, clear
<strong>circle</strong> 150, 230, 50
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Text vykreslený do grafické plochy</h2>

<p><i>Basic-256</i> podporuje i vykreslení textu do grafické plochy. Pro tento
účel se používá příkaz <strong>text</strong>, který kromě souřadnic levého
dolního rohu textu vyžaduje zadání řetězce, který se má vykreslit. Použije se
přitom barva specifikovaná příkazem <strong>color</strong>:</p>

<pre>
<strong>rem</strong> <i>Výpis textu do grafické plochy</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> darkblue
&nbsp;
<strong>text</strong> 100, 100, "www.root.cz"
</pre>

<p><div class="rs-tip-major">Poznámka: text je, na rozdíl od dalších 2D entit,
vykreslen s&nbsp;využitím algoritmu pro vyhlazení hran.</div></p>

<p>Font, velikost textu a relativní šířka tahů se specifikuje příkazem
<strong>font</strong>, kterému se předá jak jméno fontu, tak i jeho velikost
v&nbsp;bodech a taktéž číslo od 0 do 100, které udává relativní šířku
(resp.&nbsp;tloušťku fontu):</p>

<pre>
<strong>rem</strong> <i>Výpis textu do grafické plochy</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> darkblue
&nbsp;
<strong>font</strong> "Helvetica", 36, 75
<strong>text</strong> 5, 100, "www.root.cz"
</pre>

*** image ***
<p><i>Obrázek 8: Text vykreslený předchozím demonstračním příkladem.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Práce s&nbsp;grafickou plochou na úrovni jednotlivých pixelů</h2>

<p>V&nbsp;<i>Basicu-256</i> je možné ke grafickému oknu přistupovat jako
k&nbsp;pravidelné mřížce pixelů a modifikovat barvy jednotlivých pixelů. Pro
tento účel se používá příkaz nazvaný příznačně <strong>plot</strong>, což je
jméno známé z&nbsp;klasických BASICů. Můžeme tak vykreslit například celou
barevnou škálu. Značnou nevýhodou tohoto postupu je fakt, že se jedná o
relativně pomalé operace, na druhou stranu ovšem zdaleka ne tak pomalé, jako
tomu bylo u <i>Small Basicu</i>. Pochopitelně se opět podíváme na demonstrační
příklad:</p>

<pre>
<strong>rem</strong> <i>Práce s grafikou na úrovni jednotlivých pixelů</i>
<strong>clg</strong>
&nbsp;
<strong>for</strong> y=0 <strong>to</strong> 250
    <strong>for</strong> x=0 <strong>to</strong> 250
        <strong>color</strong> rgb(x, 255, y)
        <strong>plot</strong> x, y
    <strong>next</strong> x
<strong>next</strong> y
</pre>

<p>S&nbsp;výsledkem:</p>

*** image ***
<p><i>Obrázek 9: Grafická plocha s&nbsp;barevným gradientem.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Režim rychlé grafiky</h2>

<p>Všechny operace s&nbsp;grafickou plochou jsou ve výchozím nastavení
provedeny ihned a ihned jsou také viditelné. Ovšem toto chování vede ke
zpomalení některých operací, typicky právě při práci na úrovni jednotlivých
pixelů. Pro rychlejší práci s&nbsp;grafikou je možné použít režim
&bdquo;rychlé&ldquo; grafiky, který se zapíná příkazem
<strong>fastgraphics</strong>. V&nbsp;tomto režimu není výsledek vykreslení
viditelný ihned, ale až po zavolání příkazu <strong>refresh</strong>. Předchozí
demonstrační příklad tedy můžeme značně urychlit, a to konkrétně takto:</p>

<pre>
<strong>rem</strong> <i>Práce s grafikou na úrovni jednotlivých pixelů</i>
<strong>rem</strong> <i>Režim rychlé grafiky</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>fastgraphics</strong>
&nbsp;
<strong>for</strong> y=0 <strong>to</strong> 250
    <strong>for</strong> x=0 <strong>to</strong> 250
        <strong>color</strong> rgb(x, 255, y)
        <strong>plot</strong> x, y
    <strong>next</strong> x
<strong>next</strong> y
&nbsp;
<strong>refresh</strong>
</pre>

<p>Můžeme ovšem chtít, aby se průběh vykreslování zobrazil například po
vyplnění každého řádku. Není nic snazšího &ndash; pouze přesuneme příkaz
<strong>refresh</strong> do těla vnější programové smyčky:</p>

<pre>
<strong>rem</strong> <i>Práce s grafikou na úrovni jednotlivých pixelů</i>
<strong>rem</strong> <i>Režim rychlé grafiky</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>fastgraphics</strong>
&nbsp;
<strong>for</strong> y=0 <strong>to</strong> 250
    <strong>for</strong> x=0 <strong>to</strong> 250
        <strong>color</strong> rgb(x, 255, y)
        <strong>plot</strong> x, y
    <strong>next</strong> x
    <strong>refresh</strong>
<strong>next</strong> y
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Práce se sprity</h2>

<p>Na rozdíl od některých spíše nízkoúrovňových grafických knihoven podporuje
<i>Basic-256</i> i práci se <i>sprity</i>. Připomeňme si, co se vlastně
v&nbsp;kontextu počítačové grafiky myslí pod termínem <i>sprite</i>: jedná se o
grafické objekty představované rastrovými obrázky, kterými je možné po
obrazovce (resp.&nbsp;po grafické ploše) pohybovat a v&nbsp;novějších verzích
<i>Basicu-256</i> dokonce i otáčet a měnit měřítko. Relativně snadno je možné
implementovat i takzvanou detekci kolizí (<i>collision detection</i>) mezi
jednotlivými sprity, popř.&nbsp;mezi spritem a nepohyblivými objekty umístěnými
na obrazovce.</p>

<p>Samotný termín &bdquo;sprite&ldquo; pochází z&nbsp;doby osmibitových herních
konzolí i osmibitových domácích mikropočítačů, které mnohdy obsahovaly
specializovaný hardware určený jak pro zobrazení pohyblivých spritů
(nezávislých na takzvaném herním poli &ndash; <i>playground</i>), tak i pro
detekci kolizí mezi sprity, popř.&nbsp;mezi spritem a barvami
(resp.&nbsp;přesněji řečeno obarvenými pixely) v&nbsp;herním poli. Ovšem
samotný termín &bdquo;sprite&ldquo; může být v&nbsp;dnešní době trošku matoucí
(zejména bez znalosti historie herní grafiky), takže se například
v&nbsp;nástroji Pygame Zero namísto toho používá název &bdquo;actor&ldquo; (ten
je ovšem matoucí taktéž, i když v&nbsp;jiném kontextu).</p>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti je detekce kolizí spritů
v&nbsp;Basicu-256 nedokonalá, protože testuje pouze kolize obalových obdélníků
a nikoli kolize na úrovni jednotlivých pixelů. Z&nbsp;tohoto pohledu je
&bdquo;starodávný&ldquo; čtyřicet let starý hardware osmibitových herních
konzolí a domácích počítačů lepší.</div></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Načtení a zobrazení spritu</h2>

<p>Podívejme se nyní na způsob načtení a zobrazení spritu, tedy rastrového
obrázku. Tento rastrový obrázek naleznete na adrese <a
href="https://raw.githubusercontent.com/tisnik/8bit-fame/master/Basic-256/gnome-globe.png">https://raw.githubusercontent.com/tisnik/8bit-fame/master/Basic-256/gnome-globe.png</a>
&ndash; povšimněte si, že obsahuje poloprůhledné i zcela průhledné pixely, což
je <i>Basicem-256</i> plně podporováno.</p>

<p>Nejprve je nutné alokovat paměť pro sprite, což zajišťuje příkaz
<strong>spritedim</strong>, kterému se předá počet spritů, pro něž se má paměť
alokovat:</p>

<pre>
<strong>spritedim</strong> 1
</pre>

<p>Sprite je identifikován svým pořadovým číslem, v&nbsp;našem případě (máme
jediný sprite) nulou. Všechny příkazy pro práci se sprity očekávají pořadová
čísla spritů, typicky jako první parametr. O načtení spritu se stará příkaz
<strong>spriteload</strong>, kterému se předá jméno souboru s&nbsp;rastrovým
obrázkem:</p>

<pre>
<strong>spriteload</strong> 0, "gnome-globe.png"
</pre>

<p>Sprite je ihned poté možné zobrazit příkazem
<strong>spriteshow</strong>:</p>

<pre>
<strong>spriteshow</strong> 0
</pre>

<p>Úplný skript pro načtení a následné zobrazení spritu je velmi
jednoduchý:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>spritedim</strong> 1
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteshow</strong> 0
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Změna pozice spritu v&nbsp;rámci grafické plochy</h2>

<p>Střed spritu je považován za bod, podle kterého se určuje pozice spritu
v&nbsp;rámci grafické plochy, což v&nbsp;našem konkrétním případě znamenalo, že
se zobrazila jen čtvrtina spritu v&nbsp;levém horním rohu grafické plochy.
Sprite lze ovšem snadno přesunout příkazem <strong>spriteplace</strong>,
kterému se předá index spritu a dále x-ová i y-ová souřadnice jeho středu:</p>

<pre>
<strong>spriteplace</strong> 0, 150, 150
</pre>

<p>Opět si pochopitelně ukážeme, jak vypadá úplný program určený pro načtení,
zobrazení a posunutí spritu:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
<strong>rem</strong> <i>Změna pozice spritu</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>spritedim</strong> 1
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteplace</strong> 0, 150, 150
<strong>spriteshow</strong> 0
</pre>

<p><div class="rs-tip-major">Poznámka: sprite je stále považován za samostatný
grafický objekt, takže při svém posunu nezanechá na grafické ploše žádné stopy
(což by nastalo ve chvíli, kdybychom namísto spritu použili funkci typu <i>bit
block tranfer</i> alias <i>bitblt</i>).</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Sprite zobrazený nad vykreslenými obrazci na grafické ploše</h2>

<p>Sprite se sice zobrazuje v&nbsp;rámci grafické plochy, ale díky tomu, že je
považován za samostatný objekt, žádným způsobem neovlivňuje obsah této grafické
plochy. Sprite se navíc zobrazuje nad plochou (tedy má odlišnou Z-ovou
souřadnici), což si ostatně můžeme velmi snadno otestovat spuštěním
následujícího demonstračního příkladu, který nejdříve vykreslí obrazec na
grafickou plochu a následně nad ní umístí sprite:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
<strong>rem</strong> <i>Sprite zobrazený nad vykreslenými obrazci na grafické ploše</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 10
    <strong>line</strong> 50, 50+i, 250, 50+i
    <strong>line</strong> 50+i, 50, 50+i, 250
<strong>next</strong> i
&nbsp;
<strong>spritedim</strong> 1
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteplace</strong> 0, 150, 150
<strong>spriteshow</strong> 0
</pre>

<p><div class="rs-tip-major">Poznámka: sami si vyzkoušejte, co (a zda vůbec) se
změní ve chvíli, kdy se nejdříve zobrazí sprite a teprve poté se zobrazí úsečky
na grafické ploše.</div></p>

*** image ***
<p><i>Obrázek 10: Sprite nad vykreslenou grafickou plochou.</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Pomalý relativní přesun spritu (jednoduchá animace)</h2>

<p>Víme již, že přesun spritu na nové souřadnice zajišťuje příkaz nazvaný
<strong>spriteplace</strong>. Ovšem při tvorbě jednoduchých her nebo dem se
často setkáme s&nbsp;požadavkem na přesun spritu o relativní souřadnice, tedy o
zadaný krok (například &bdquo;o tři délkové jednotky doprava&ldquo;). I tuto
funkcionalitu <i>Basic-256</i> podporuje, a to díky příkazu
<strong>spritemove</strong>. Tomu se v&nbsp;nejjednodušším případě předává
index spritu a relativní krok ve směru x-ové a y-ové osy:</p>

<pre>
<strong>spritemove</strong> 0, 1, 1
</pre>

<p>Demonstrační příklad, který si ukážeme v&nbsp;této kapitole, je ovšem
komplikovanější, protože se sprite (relativně) pomalu přesouvá přes grafické
pozadí díky použití příkazu <strong>spritemove</strong> v&nbsp;programové
smyčce. Aby nebyl přesun příliš rychlý, je před posunem spritu o jednu délkovou
jednotku doprava a současně dolů použit příkaz <strong>pause</strong>, který
program zastaví na dobu specifikovanou v&nbsp;sekundách. Jak je ovšem ze
zdrojového kódu patrné, lze použít i desetinná čísla pro specifikaci kratšího
časového intervalu:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
<strong>rem</strong> <i>Přesun spritu</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 10
    <strong>line</strong> 50, 50+i, 250, 50+i
    <strong>line</strong> 50+i, 50, 50+i, 250
<strong>next</strong> i
&nbsp;
<strong>spritedim</strong> 1
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteshow</strong> 0
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 250
    <strong>pause</strong> 0.01
    <strong>spritemove</strong> 0, 1, 1
<strong>next</strong> i
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Přesun spritu se změnou velikosti</h2>

<p>Ve skutečnosti nabízí příkaz <strong>spritemove</strong>, s&nbsp;nímž jsme
se seznámili v&nbsp;rámci <a href="#k13">předchozí kapitoly</a>, i další
možnosti. Lze totiž specifikovat i míru změny velikosti spritu při jeho posunu.
Schválně píšu poněkud vágně &bdquo;míru změny velikosti&ldquo;, protože se
nejedná o měřítko v&nbsp;pravém smyslu tohoto slova. Pokud například
vyžadujeme, aby sprite po posunu zvětšil svoji velikost o jedno procento, bylo
by nutné nastavit měřítko na hodnotu 1.01, ovšem míra změny velikosti bude
právě ono jedno procento, tedy hodnota 0.01. Tuto hodnotu je možné předat jako
čtvrtý parametr do příkazu <strong>spritemove</strong>:</p>

<pre>
<strong>spritemove</strong> 0, 1, 1, <u>0.01</u>
</pre>

<p><div class="rs-tip-major">Poznámka: díky tomuto způsobu specifikace změny
velikosti spritu se zamezuje chybám vzniklým při neustálém násobení &ndash; to
je nahrazeno součtem, ovšem s&nbsp;tím, že při vykreslení spritu se již
násobení pochopitelně musí použít.</div></p>

<p>Podívejme se nyní na nepatrně upravený demonstrační příklad z&nbsp;předchozí
kapitoly, v&nbsp;němž se sprite při pohybu neustále zvětšuje:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
<strong>rem</strong> <i>Přesun spritu se změnou velikosti</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 10
    <strong>line</strong> 50, 50+i, 250, 50+i
    <strong>line</strong> 50+i, 50, 50+i, 250
<strong>next</strong> i
&nbsp;
<strong>spritedim</strong> 1
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteshow</strong> 0
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 250
    <strong>pause</strong> 0.01
    <strong>spritemove</strong> 0, 1, 1, 0.01
<strong>next</strong> i
</pre>

*** image ***
<p><i>Obrázek 11: Přesun spritu se změnou jeho velikosti.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Přesun spritu s&nbsp;jeho rotací</h2>

<p>Poměrně často se setkáme i s&nbsp;požadavkem na to, aby se sprite
v&nbsp;zobrazené scéně otáčel. I tato funkce je v&nbsp;<i>Basicu-256</i>
podporována (ale stále existují jiné knihovny, které rotaci rastrových obrázků
plně nepodporují). Relativní rotace je zadána v&nbsp;radiánech a lze ji předat
v&nbsp;pátém parametru příkazu <strong>spritemove</strong>. V&nbsp;případě, že
si má sprite zachovat původní velikost, ale současně se má otáčet, bude čtvrtý
(nyní povinný) parametr nulový a pátý parametr bude obsahovat úhel otočení
specifikovaný v&nbsp;radiánech:</p>

<pre>
<strong>spritemove</strong> 0, 1, 1, <u>0.00, 0.1</u>
</pre>

<p>Úplný zdrojový kód demonstračního příkladu, v&nbsp;němž dochází
k&nbsp;animaci sestávající z&nbsp;posunu a současně i rotace, může vypadat
následovně:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
<strong>rem</strong> <i>Přesun spritu se změnou rotace</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 10
    <strong>line</strong> 50, 50+i, 250, 50+i
    <strong>line</strong> 50+i, 50, 50+i, 250
<strong>next</strong> i
&nbsp;
<strong>spritedim</strong> 1
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteshow</strong> 0
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 250
    <strong>pause</strong> 0.01
    <strong>spritemove</strong> 0, 1, 1, 0.00, 0.1
<strong>next</strong> i
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Detekce kolize spritů</h2>

<p>Již <a href="#k09">v&nbsp;deváté kapitole</a> jsme se zmínili o možnosti
detekovat kolizi dvou spritů. Detekce kolizí je omezena na obalové obdélníky
spritů, což v&nbsp;našem konkrétním případě znamená, že se detekce zjistí i ve
chvíli, kdy se globy nedotýkají (lepší a korektnější by bylo zjišťovat kolize
na úrovni jednotlivých pixelů). Pro detekci kolize je určena funkce nazvaná
příznačně <strong>spritecollide</strong>, které je nutné předat indexy dvou
spritů, pro něž se kolize zjišťuje. V&nbsp;následujícím demonstračním příkladu
jsou načteny dva (stejné) sprity a následně se jeden sprite začne pohybovat.
Pokud je zjištěna kolize s&nbsp;druhým spritem, je tato událost vypsána do
textového okna:</p>

<pre>
<strong>rem</strong> <i>Načtení a zobrazení spritu</i>
<strong>rem</strong> <i>Kolize spritů</i>
&nbsp;
<strong>clg</strong>
&nbsp;
<strong>color</strong> black
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 200 <strong>step</strong> 10
    <strong>line</strong> 50, 50+i, 250, 50+i
    <strong>line</strong> 50+i, 50, 50+i, 250
<strong>next</strong> i
&nbsp;
<strong>spritedim</strong> 2
&nbsp;
<strong>spriteload</strong> 0, "gnome-globe.png"
<strong>spriteshow</strong> 0
&nbsp;
<strong>spriteload</strong> 1, "gnome-globe.png"
<strong>spriteshow</strong> 1
<strong>spritemove</strong> 1, 150, 150
&nbsp;
<strong>for</strong> i = 0 <strong>to</strong> 250
    <strong>pause</strong> 0.01
    <strong>spritemove</strong> 0, 1, 1
    <strong>if</strong> spritecollide(0, 1) <strong>then</strong>
        <strong>print</strong> "Collision"
    <strong>endif</strong>
<strong>next</strong> i
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Vybrané další možnosti Basicu-256</h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Popsané příkazy (klíčová slova) Basicu-256</h2>

<p>Jak je u různých dialektů programovacího jazyka BASIC zvykem, je struktura
programů určována do velké míry použitými klíčovými slovy (neboli příkazy) a
nikoli množstvím různých dalších znaků.</p>

<p>V&nbsp;předchozím a dnešním článku jsme si popsali následující příkazy:</p>

<table>
<tr><th> #</th><th>Příkaz</th><th>Stručný popis příkazu</th></tr>
<tr><td> 1</td><td>print</td><td>tisk hodnoty na textovou konzoli</td></tr>
<tr><td> 2</td><td>say</td><td>hlasité přečtení obsahu řetězce</td></tr>
<tr><td> 3</td><td>rem</td><td>poznámka (lze nahradit znakem #)</td></tr>
<tr><td> 4</td><td>input</td><td>interaktivní vstup (číslo nebo řetězec)</td></tr>
<tr><td> 5</td><td>if</td><td>příkaz, za kterým následuje podmínka</td></tr>
<tr><td> 6</td><td>then</td><td>začátek větve vykonané při splnění podmínky</td></tr>
<tr><td> 7</td><td>endif</td><td>konec rozhodovacího příkazu <strong>if</strong></td></tr>
<tr><td> 8</td><td>else</td><td>začátek větve vykonané při nesplnění podmínky</td></tr>
<tr><td> 9</td><td>begin case</td><td>začátek rozhodovací konstrukce s&nbsp;více podmínkami</td></tr>
<tr><td>10</td><td>case</td><td>začátek větve se specifikovanou podmínkou</td></tr>
<tr><td>11</td><td>endcase</td><td>konec rozhodovacího příkazu <strong>case</strong></td></tr>
<tr><td>12</td><td>for</td><td>začátek počítané programové smyčky</td></tr>
<tr><td>13</td><td>to</td><td>klíčové slovo, za nímž následuje horní mez smyčky</td></tr>
<tr><td>14</td><td>step</td><td>klíčové slovo, za nímž následuje krok smyčky</td></tr>
<tr><td>15</td><td>next</td><td>konec počítané programové smyčky</td></tr>
<tr><td>16</td><td>while</td><td>začátek programové smyčky s&nbsp;testem na začátku</td></tr>
<tr><td>17</td><td>end while</td><td>konec programové smyčky s&nbsp;testem na začátku</td></tr>
<tr><td>18</td><td>do</td><td>začátek programové smyčky s&nbsp;testem na konci</td></tr>
<tr><td>19</td><td>until</td><td>konec programové smyčky s&nbsp;testem na konci</td></tr>
<tr><td>20</td><td>goto</td><td>nestrukturovaný skok na určené návěští (<i>label</i>)</td></tr>
<tr><td>21</td><td>gosub</td><td>skok do podprogramu realizovaný návěštím</td></tr>
<tr><td>22</td><td>return</td><td>návrat z&nbsp;podprogramu</td></tr>
<tr><td>23</td><td>function</td><td>začátek definice funkce</td></tr>
<tr><td>24</td><td>end function</td><td>konec definice funkce</td></tr>
<tr><td>25</td><td>subroutine</td><td>začátek definice podprogramu</td></tr>
<tr><td>26</td><td>end subroutine</td><td>konec definice podprogramu</td></tr>
<tr><td>27</td><td>call</td><td>volání podprogramu</td></tr>
<tr><td>28</td><td>dim</td><td>alokace pole</td></tr>
<tr><td>29</td><td>end</td><td>ukončení celého programu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>30</td><td>clg</td><td>vymazání grafické plochy</td></tr>
<tr><td>31</td><td>color</td><td>nastavení barvy kreslení</td></tr>
<tr><td>32</td><td>line</td><td>vykreslení úsečky do grafické plochy</td></tr>
<tr><td>33</td><td>penwidth</td><td>specifikace šířky vykreslování</td></tr>
<tr><td>34</td><td>rect</td><td>vykreslení čtverce či obdélníku do grafické plochy</td></tr>
<tr><td>35</td><td>circle</td><td>vykreslení kružnice do grafické plochy</td></tr>
<tr><td>36</td><td>text</td><td>vykreslení textu do grafické plochy</td></tr>
<tr><td>37</td><td>font</td><td>specifikace fontu použitého pro vykreslování</td></tr>
<tr><td>38</td><td>plot</td><td>vykreslení jediného pixelu do grafické plochy</td></tr>
<tr><td>39</td><td>fastgraphics</td><td>&bdquo;rychlá&ldquo; grafika</td></tr>
<tr><td>40</td><td>refresh</td><td>překreslení grafické plochy</td></tr>
<tr><td>41</td><td>spritedim</td><td>alokace paměti pro sprite</td></tr>
<tr><td>42</td><td>spriteload</td><td>načtení spritu (obrázku)</td></tr>
<tr><td>43</td><td>spriteshow</td><td>zobrazení spritu na grafickou plochu</td></tr>
<tr><td>44</td><td>spriteplace</td><td>přesun spritu na zadanou absolutní pozici</td></tr>
<tr><td>45</td><td>spritemove</td><td>relativní posun spritu, změna velikost spritu, rotace spritu</td></tr>
<tr><td>46</td><td>pause</td><td>zastavení programu na zadaný počet sekund (lze použít i neceločíselné hodnoty)</td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny dnes popsané demonstrační příklady určené pro Basic-256 (a tudíž
nekompatibilní s&nbsp;žádným jiným BASICem) byly uloženy do Git repositáře,
který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Tyto příklady si můžete v&nbsp;případě potřeby stáhnout i jednotlivě bez
nutnosti klonovat celý (dnes již poměrně rozsáhlý) repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis příkladu</th><th>Adresa</th></tr>
<tr><td> 1</td><td>01_hello_world.bas</td><td>program typu &bdquo;Hello, world!&ldquo; v&nbsp;Basicu-256</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/01_hello_world.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/01_hello_world.bas</a></td></tr>
<tr><td> 2</td><td>02_comment.bas</td><td>zápis komentářů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/02_comment.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/02_comment.bas</a></td></tr>
<tr><td> 3</td><td>03_int_variable.bas</td><td>práce s&nbsp;celočíselnými proměnnými</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/03_int_variable.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/03_int_variable.bas</a></td></tr>
<tr><td> 4</td><td>04_string_variable.bas</td><td>práce s&nbsp;řetězcovými proměnnými</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/04_string_variable.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/04_string_variable.bas</a></td></tr>
<tr><td> 5</td><td>05_expressions.bas</td><td>základní aritmetické výrazy, priorita operátorů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/05_expressions.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/05_expressions.bas</a></td></tr>
<tr><td> 6</td><td>06_string_concatenation.bas</td><td>operace spojení řetězců</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/06_string_concatenation.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/06_string_concatenation.bas</a></td></tr>
<tr><td> 7</td><td>07_substring.bas</td><td>získání podřetězce</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/07_substring.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/07_substring.bas</a></td></tr>
<tr><td> 8</td><td>08_string_replace.bas</td><td>náhrada části řetězce jiným řetězcem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/08_string_replace.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/08_string_replace.bas</a></td></tr>
<tr><td> 9</td><td>09_string_replace.bas</td><td>vícenásobná náhrada podřetězce</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/09_string_replace.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/09_string_replace.bas</a></td></tr>
<tr><td>10</td><td>10_string_replace.bas</td><td>vliv velikosti znaků při nahrazování</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/10_string_replace.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/10_string_replace.bas</a></td></tr>
<tr><td>11</td><td>11_string_replace.bas</td><td>vliv velikosti znaků při nahrazování</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/11_string_replace.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/11_string_replace.bas</a></td></tr>
<tr><td>12</td><td>12_input_output.bas</td><td>základní vstupně-výstupní operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/12_input_output.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/12_input_output.bas</a></td></tr>
<tr><td>13</td><td>13_if_then.bas</td><td>rozhodovací konstrukce typu <strong>if-then</strong> (jedna větev)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/13_if_then.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/13_if_then.bas</a></td></tr>
<tr><td>14</td><td>14_if_then_else.bas</td><td>rozhodovací konstrukce typu <strong>if-then-else</strong> (obě větve)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/14_if_then_else.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/14_if_then_else.bas</a></td></tr>
<tr><td>15</td><td>15_nested_ifs.bas</td><td>vnořené rozhodovací konstrukce typu <strong>if-then-else</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/15_nested_ifs.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/15_nested_ifs.bas</a></td></tr>
<tr><td>16</td><td>16_case.bas</td><td>rozhodovací konstrukce typu <strong>case</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/16_case.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/16_case.bas</a></td></tr>
<tr><td>17</td><td>17_for_next.bas</td><td>počítaná programová smyčka typu <strong>for-next</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/17_for_next.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/17_for_next.bas</a></td></tr>
<tr><td>18</td><td>18_for_next_step.bas</td><td>počítaná programová smyčka typu <strong>for-next</strong> s&nbsp;počitadlem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/18_for_next_step.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/18_for_next_step.bas</a></td></tr>
<tr><td>19</td><td>19_for_next_same_limits.bas</td><td>oba shodné limity v&nbsp;programové smyčce <strong>for-next</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/19_for_next_same_limits.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/19_for_next_same_limits.bas</a></td></tr>
<tr><td>20</td><td>20_for_next_illegal.bas</td><td>dolní limit větší než horní limit</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/20_for_next_illegal.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/20_for_next_illegal.bas</a></td></tr>
<tr><td>21</td><td>21_for_next_count_down.bas</td><td>počítání směrem dolů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/21_for_next_count_down.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/21_for_next_count_down.bas</a></td></tr>
<tr><td>22</td><td>22_for_next_variable_max.bas</td><td>postupná modifikace horního limitu ve smyčce <strong>for-next</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/22_for_next_variable_max.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/22_for_next_variable_max.bas</a></td></tr>
<tr><td>23</td><td>23_for_next_variable_step.bas</td><td>postupná modifikace kroku ve smyčce <strong>for-next</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/23_for_next_variable_step.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/23_for_next_variable_step.bas</a></td></tr>
<tr><td>24</td><td>24_while.bas</td><td>programová smyčka typu <strong>while</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/24_while.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/24_while.bas</a></td></tr>
<tr><td>25</td><td>25_do_until.bas</td><td>programová smyčka typu <strong>do-until</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/25_do_until.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/25_do_until.bas</a></td></tr>
<tr><td>26</td><td>26_exit_for.bas</td><td>předčasný výskok ze smyčky <strong>for-next</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/26_exit_for.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/26_exit_for.bas</a></td></tr>
<tr><td>27</td><td>27_continue_for.bas</td><td>příkaz <strong>continue for</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/27_continue_for.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/27_continue_for.bas</a></td></tr>
<tr><td>28</td><td>28_continue_while.bas</td><td>příkaz <strong>continue while</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/28_continue_while.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/28_continue_while.bas</a></td></tr>
<tr><td>29</td><td>29_continue_do.bas</td><td>příkaz <strong>continue do</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/29_continue_do.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/29_continue_do.bas</a></td></tr>
<tr><td>30</td><td>30_gcd.bas</td><td>výpočet největšího společného dělitele</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/30_gcd.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/30_gcd.bas</a></td></tr>
<tr><td>31</td><td>31_goto.bas</td><td>nestrukturovaný příkaz <strong>goto</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/31_goto.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/31_goto.bas</a></td></tr>
<tr><td>32</td><td>32_goto_GCD.bas</td><td>využití příkazu <strong>goto</strong> při výpočtu největšího společného dělitele</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/32_goto_GCD.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/32_goto_GCD.bas</a></td></tr>
<tr><td>33</td><td>33_goto_GCD_error.bas</td><td>problematické použití klíčového slova v&nbsp;jiném kontextu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/33_goto_GCD_error.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/33_goto_GCD_error.bas</a></td></tr>
<tr><td>34</td><td>34_factorial.bas</td><td>výpočet faktoriálu, konstrukce <strong>gosub</strong> a <strong>return</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/34_factorial.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/34_factorial.bas</a></td></tr>
<tr><td>35</td><td>35_factorial_function.bas</td><td>definice funkce pro výpočet faktoriálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/35_factorial_function.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/35_factorial_function.bas</a></td></tr>
<tr><td>36</td><td>36_factorial_function.bas</td><td>definice funkce pro výpočet faktoriálu, alternativní výstup z&nbsp;funkce</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/36_factorial_function.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/36_factorial_function.bas</a></td></tr>
<tr><td>37</td><td>37_factorial_subroutine.bas</td><td>definice podprogramu pro výpočet faktoriálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/37_factorial_subroutine.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/37_factorial_subroutine.bas</a></td></tr>
<tr><td>38</td><td>38_arrays.bas</td><td>alokace pole a výpis délky pole</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/38_arrays.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/38_arrays.bas</a></td></tr>
<tr><td>39</td><td>39_arrays.bas</td><td>procházení prvky pole standardní smyčkou <strong>for-next</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/39_arrays.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/39_arrays.bas</a></td></tr>
<tr><td>40</td><td>40_arrays.bas</td><td>procházení prvky pole konstrukcí <strong>for-each</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/40_arrays.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/40_arrays.bas</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>41</td><td>41_clg.bas</td><td>vymazání grafické plochy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/41_clg.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/41_clg.bas</a></td></tr>
<tr><td>42</td><td>42_line.bas</td><td>vykreslení úsečky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/42_line.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/42_line.bas</a></td></tr>
<tr><td>43</td><td>43_more_lines.bas</td><td>úsečky s&nbsp;různým sklonem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/43_more_lines.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/43_more_lines.bas</a></td></tr>
<tr><td>44</td><td>44_penwidth.bas</td><td>změna šířky kreslicího pera</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/44_penwidth.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/44_penwidth.bas</a></td></tr>
<tr><td>45</td><td>45_rect.bas</td><td>vykreslení čtverce</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/45_rect.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/45_rect.bas</a></td></tr>
<tr><td>46</td><td>46_brush_color.bas</td><td>změna barvy štětce</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/46_brush_color.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/46_brush_color.bas</a></td></tr>
<tr><td>47</td><td>47_brush_penwidth.bas</td><td>změna barvy štětce + modifikace šířky obrysu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/47_brush_penwidth.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/47_brush_penwidth.bas</a></td></tr>
<tr><td>48</td><td>48_circle.bas</td><td>kružnice a kruh</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/48_circle.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/48_circle.bas</a></td></tr>
<tr><td>49</td><td>49_text.bas</td><td>vykreslení textu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/49_text.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/49_text.bas</a></td></tr>
<tr><td>50</td><td>50_text_size.bas</td><td>změna velikosti fontu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/50_text_size.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/50_text_size.bas</a></td></tr>
<tr><td>51</td><td>51_plot.bas</td><td>vykreslení na úrovni jednotlivých pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/51_plot.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/51_plot.bas</a></td></tr>
<tr><td>52</td><td>52_fast_graphics.bas</td><td>&bdquo;rychlá&ldquo; grafika</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/52_fast_graphics.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/52_fast_graphics.bas</a></td></tr>
<tr><td>53</td><td>53_better_refresh.bas</td><td>příkaz <strong>REFRESH</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/53_better_refresh.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/53_better_refresh.bas</a></td></tr>
<tr><td>54</td><td>54_sprite_load_show.bas</td><td>načtení spritu, zobrazení spritu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/54_sprite_load_show.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/54_sprite_load_show.bas</a></td></tr>
<tr><td>55</td><td>55_sprite_place.bas</td><td>přesun spritu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/55_sprite_place.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/55_sprite_place.bas</a></td></tr>
<tr><td>56</td><td>56_sprite_over_graphics.bas</td><td>sprite nakreslený přes ostatní grafiku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/56_sprite_over_graphics.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/56_sprite_over_graphics.bas</a></td></tr>
<tr><td>57</td><td>57_sprite_move.bas</td><td>postupný přesun spritu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/57_sprite_move.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/57_sprite_move.bas</a></td></tr>
<tr><td>58</td><td>58_sprite_scale.bas</td><td>změna velikosti spritu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/58_sprite_scale.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/58_sprite_scale.bas</a></td></tr>
<tr><td>59</td><td>59_sprite_rotate.bas</td><td>rotace spritu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/59_sprite_rotate.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/59_sprite_rotate.bas</a></td></tr>
<tr><td>60</td><td>60_sprite_collision.bas</td><td>detekce kolize spritů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/Basic-256/60_sprite_collision.bas">https://github.com/tisnik/8bit-fame/blob/master/Basic-256/60_sprite_collision.bas</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Stránka projektu Basic-256<br />
<a href="https://basic256.org/">https://basic256.org/</a>
</li>

<li>So You Want to Learn to Program – BASIC-256 (Third Edition)<br />
<a href="http://syw2l.org/?page_id=407">http://syw2l.org/?page_id=407</a>
</li>

<li>Why Another BASIC?<br />
<a href="https://basic256.org/2019/06/27/why-another-basic/">https://basic256.org/2019/06/27/why-another-basic/</a>
</li>

<li>Stránka projektu Small Basic<br />
<a href="https://smallbasic-publicwebsite.azurewebsites.net/">https://smallbasic-publicwebsite.azurewebsites.net/</a>
</li>

<li>List of Programs Made with Small Basic<br />
<a href="https://social.technet.microsoft.com/wiki/contents/articles/14013.list-of-programs-made-with-small-basic.aspx">https://social.technet.microsoft.com/wiki/contents/articles/14013.list-of-programs-made-with-small-basic.aspx</a>
</li>

<li>Expert to Expert: The Basics of SmallBasic<br />
<a href="https://channel9.msdn.com/blogs/charles/expert-to-expert-the-basics-of-smallbasic">https://channel9.msdn.com/blogs/charles/expert-to-expert-the-basics-of-smallbasic</a>
</li>

<li>The Developer’s Reference Guide to Small Basic<br />
<a href="https://social.technet.microsoft.com/wiki/contents/articles/16767.the-developers-reference-guide-to-small-basic.aspx">https://social.technet.microsoft.com/wiki/contents/articles/16767.the-developers-reference-guide-to-small-basic.aspx</a>
</li>

<li>Small Basic - Talking to Raspberry Pi<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-talking-to-raspberry-pi/ba-p/337844">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-talking-to-raspberry-pi/ba-p/337844</a>
</li>

<li>Small Basic - Arduino<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-arduino/ba-p/337762">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-arduino/ba-p/337762</a>
</li>

<li>Small Basic + micro:bit<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-micro-bit/ba-p/1968424">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-micro-bit/ba-p/1968424</a>
</li>

<li>#1 Learn Small Basic Programming - Introduction<br />
<a href="https://www.youtube.com/watch?v=e_BaEPCa8OQ">https://www.youtube.com/watch?v=e_BaEPCa8OQ</a>
</li>

<li>#2 Learn Small Basic Programming - Input, Output &amp; Variables<br />
<a href="https://www.youtube.com/watch?v=VWekYLa33OI">https://www.youtube.com/watch?v=VWekYLa33OI</a>
</li>

<li>#3 Learn Small Basic Programming - String Concatenation<br />
<a href="https://www.youtube.com/watch?v=iWvIaOaT474">https://www.youtube.com/watch?v=iWvIaOaT474</a>
</li>

<li>Small Basic - The Programmer's Guide<br />
<a href="https://www.i-programmer.info/programming/other-languages/5196-small-basic-the-programmers-guide.html">https://www.i-programmer.info/programming/other-languages/5196-small-basic-the-programmers-guide.html</a>
</li>

<li>Rosetta Code: Category:Microsoft Small Basic<br />
<a href="https://rosettacode.org/wiki/Category:Microsoft_Small_Basic">https://rosettacode.org/wiki/Category:Microsoft_Small_Basic</a>
</li>

<li>Fifty Years of BASIC, the Programming Language That Made Computers Personal<br />
<a href="https://time.com/69316/basic/">https://time.com/69316/basic/</a>
</li>

<li>BBC BASIC i QBasic oslavují svá kulatá výročí<br />
<a href="https://www.root.cz/clanky/bbc-basic-i-qbasic-oslavuji-sva-kulata-vyroci/">https://www.root.cz/clanky/bbc-basic-i-qbasic-oslavuji-sva-kulata-vyroci/</a>
</li>

<li>What are the best BASIC-like programming languages?<br />
<a href="https://www.slant.co/topics/9807/~basic-like-programming-languages">https://www.slant.co/topics/9807/~basic-like-programming-languages</a>
</li>

<li>List of BASIC dialects<br />
<a href="https://en.wikipedia.org/wiki/List_of_BASIC_dialects">https://en.wikipedia.org/wiki/List_of_BASIC_dialects</a>
</li>

<li>GW-BASIC Documentation<br />
<a href="https://hwiegman.home.xs4all.nl/gwbasic.html">https://hwiegman.home.xs4all.nl/gwbasic.html</a>
</li>

<li>Microsoft Open-Sources GW-BASIC<br />
<a href="https://devblogs.microsoft.com/commandline/microsoft-open-sources-gw-basic/">https://devblogs.microsoft.com/commandline/microsoft-open-sources-gw-basic/</a>
</li>

<li>GW-BASIC na GitHubu<br />
<a href="https://github.com/microsoft/GW-BASIC">https://github.com/microsoft/GW-BASIC</a>
</li>

<li>Welcome to GW-BASIC<br />
<a href="http://www.antonis.de/qbebooks/gwbasman/">http://www.antonis.de/qbebooks/gwbasman/</a>
</li>

<li>GWBASIC User's Manual<br />
<a href="http://www.antonis.de/qbebooks/gwbasman/index2.html">http://www.antonis.de/qbebooks/gwbasman/index2.html</a>
</li>

<li>The basics of BASIC, the programming language of the 1980s<br />
<a href="https://www.youtube.com/watch?v=seM9SqTsRG4">https://www.youtube.com/watch?v=seM9SqTsRG4</a>
</li>

<li>GW-BASIC User's Guide<br />
<a href="https://hwiegman.home.xs4all.nl/gw-man/index.html">https://hwiegman.home.xs4all.nl/gw-man/index.html</a>
</li>

<li>PC-BASIC 1.2.14 documentation<br />
<a href="http://robhagemans.github.io/pcbasic/doc/1.2/">http://robhagemans.github.io/pcbasic/doc/1.2/</a>
</li>

<li>PEEK and POKE<br />
<a href="https://en.wikipedia.org/wiki/PEEK_and_POKE">https://en.wikipedia.org/wiki/PEEK_and_POKE</a>
</li>

<li>GW-BASIC | DRAW Statement (video na Youtube)<br />
<a href="https://www.youtube.com/watch?v=4I1CELY13M4">https://www.youtube.com/watch?v=4I1CELY13M4</a>
</li>

<li>Rozdíly mezi GW-BASIC a QBasicem<br />
<a href="https://hwiegman.home.xs4all.nl/extern/Differences%20Between%20GW-BASIC%20and%20QBasic.htm">https://hwiegman.home.xs4all.nl/extern/Differences%20Between%20GW-BASIC%20and%20QBasic.htm</a>
</li>

<li>GW-Basic Programs<br />
<a href="https://gwbasicprograms.blogspot.com/p/gw-basic-programs.html">https://gwbasicprograms.blogspot.com/p/gw-basic-programs.html</a>
</li>

<li>GW-BASIC Resource<br />
<a href="https://gw-basic.netlify.app/">https://gw-basic.netlify.app/</a>
</li>

<li>A page about GWBASIC Games &amp; Other Programs<br />
<a href="http://peyre.x10.mx/GWBASIC/">http://peyre.x10.mx/GWBASIC/</a>
</li>

<li>Basic BASIC, 2nd Edition, James S. Coan<br />
<a href="https://drive.google.com/uc?export=download&amp;id=1Z12L7SO_gfNg3Ma_0eH2_Kz15YM-9dHl">https://drive.google.com/uc?export=download&amp;id=1Z12L7SO_gfNg3Ma_0eH2_Kz15YM-9dHl</a>
</li>

<li>Advanced BASIC, James S. Coan<br />
<a href="https://drive.google.com/uc?export=download&amp;id=1JafSpV_BLylWHMd16rDPorwv9wV9bLcy">https://drive.google.com/uc?export=download&amp;id=1JafSpV_BLylWHMd16rDPorwv9wV9bLcy</a>
</li>

<li>Structured BASIC, 2nd Edition, James F. Clark (naskenovaná kniha)<br />
<a href="https://drive.google.com/uc?export=download&amp;id=1pT8y-8yJYS_SqvxF0fBHm6S-dlAt-Uy2">https://drive.google.com/uc?export=download&amp;id=1pT8y-8yJYS_SqvxF0fBHm6S-dlAt-Uy2</a>
</li>

<li>Last Book of GW-Basic<br />
<a href="https://www.geocities.ws/joseph_sixpack/btoc.html">https://www.geocities.ws/joseph_sixpack/btoc.html</a>
</li>

<li>SCIENTIFIC PROGRAMS WRITTEN IN BASIC (for PCs)<br />
<a href="https://web.archive.org/web/20160323064356/http://www.scn.org/~bh162/basic_programs.html">https://web.archive.org/web/20160323064356/http://www.scn.org/~bh162/basic_programs.html</a>
</li>

<li>Why I love programming on FreeDOS with GW-BASIC<br />
<a href="https://opensource.com/article/21/6/freedos-gw-basic">https://opensource.com/article/21/6/freedos-gw-basic</a>
</li>

<li>Quite BASIC (web-based classic BASIC online programming environmen)<br />
<a href="http://www.quitebasic.com/">http://www.quitebasic.com/</a>
</li>

<li>GFA-BASIC<br />
<a href="http://sites.google.com/site/gfabasic16/">http://sites.google.com/site/gfabasic16/</a>
</li>

<li>E-mail od tvůrce GW-Basicu<br />
<a href="http://www.classiccmp.org/pipermail/cctech/2005-April/042999.html">http://www.classiccmp.org/pipermail/cctech/2005-April/042999.html</a>
</li>

<li>General Electric GE-400<br />
<a href="http://www.feb-patrimoine.com/PROJET/ge400/ge-400.htm">http://www.feb-patrimoine.com/PROJET/ge400/ge-400.htm</a>
</li>

<li>GE-400 Time-sharing information systems: <br />
<a href="http://www.computerhistory.org/collections/accession/102646147">http://www.computerhistory.org/collections/accession/102646147</a>
</li>

<li>A brief history of the development of BASIC (pravděpodobně již nefunkční odkaz)<br />
<a href="http://www.phys.uu.nl/~bergmann/history.html">http://www.phys.uu.nl/~bergmann/history.html</a>
</li>

<li>History of BASIC (PDF)<br />
<a href="http://www.q7basic.org/History%20of%20BASIC.pdf">http://www.q7basic.org/History%20of%20BASIC.pdf</a>
</li>

<li>Dartmouth College Computation Center. 1964.-The original Dartmouth BASIC manual<br />
<a href="http://www.bitsavers.org/pdf/dartmouth/BASIC_Oct64.pdf">http://www.bitsavers.org/pdf/dartmouth/BASIC_Oct64.pdf</a>
</li>

<li>The Original BASIC<br />
<a href="http://www.truebasic.com/">http://www.truebasic.com/</a>
</li>

<li>BASIC - Beginners All-purpose Symbolic Instruction Code<br />
<a href="http://hopl.murdoch.edu.au/showlanguage.prx?exp=176">http://hopl.murdoch.edu.au/showlanguage.prx?exp=176</a>
</li>

<li>Dartmouth Time Sharing System<br />
<a href="http://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System">http://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System</a>
</li>

<li>General Electric (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/General_Electric">http://en.wikipedia.org/wiki/General_Electric</a>
</li>

<li>GE 225 vs. IBM 1401<br />
<a href="http://ed-thelen.org/GE225-IBM1401.html">http://ed-thelen.org/GE225-IBM1401.html</a>
</li>

<li>A GE-225 is found<br />
<a href="http://ed-thelen.org/comp-hist/GE225.html">http://ed-thelen.org/comp-hist/GE225.html</a>
</li>

<li>G.E. 200 Series Computers<br />
<a href="http://www.smecc.org/g_e__200_series_computers.htm">http://www.smecc.org/g_e__200_series_computers.htm</a>
</li>

<li>DTSS - Dartmouth Time Sharing System<br />
<a href="http://dtss.dartmouth.edu/index.php">http://dtss.dartmouth.edu/index.php</a>
</li>

<li>John G. Kemeny: BASIC and DTSS: Everyone a Programmer<br />
<a href="http://dtss.dartmouth.edu/everyoneaprogrammer.php">http://dtss.dartmouth.edu/everyoneaprogrammer.php</a>
</li>

<li>GE-200 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-200_series">http://en.wikipedia.org/wiki/GE-200_series</a>
</li>

<li>GE-400 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-400_series">http://en.wikipedia.org/wiki/GE-400_series</a>
</li>

<li>GE-600 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-600_series">http://en.wikipedia.org/wiki/GE-600_series</a>
</li>

<li>ZX Basic Manual<br />
<a href="http://www.worldofspectrum.org/ZXBasicManual/">http://www.worldofspectrum.org/ZXBasicManual/</a>
</li>

<li>ZX81 BASIC Programming<br />
<a href="http://www.worldofspectrum.org/ZX81BasicProgramming/">http://www.worldofspectrum.org/ZX81BasicProgramming/</a>
</li>

<li>Sinclair BASIC History<br />
<a href="http://scratchpad.wikia.com/wiki/Sinclair_BASIC_History">http://scratchpad.wikia.com/wiki/Sinclair_BASIC_History</a>
</li>

<li>Sinclair BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Sinclair_BASIC">http://cs.wikipedia.org/wiki/Sinclair_BASIC</a>
</li>

<li>Sinclair BASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Sinclair_BASIC">http://en.wikipedia.org/wiki/Sinclair_BASIC</a>
</li>

<li>Beta BASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Beta_BASIC">http://en.wikipedia.org/wiki/Beta_BASIC</a>
</li>

<li>Beta BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Beta_BASIC">http://cs.wikipedia.org/wiki/Beta_BASIC</a>
</li>

<li>BETA BASIC NEWSLETTER No 8<br />
<a href="http://spectrum128.ru/help/BetaBasicNewsletter8.pdf">http://spectrum128.ru/help/BetaBasicNewsletter8.pdf</a>
</li>

<li>R. T. RUSSELL: The home of BBC BASIC<br />
<a href="http://www.rtrussell.co.uk/">http://www.rtrussell.co.uk/</a>
</li>

<li>R. T. RUSSELL: A History of BBC BASIC<br />
<a href="http://www.cix.co.uk/~rrussell/bbcbasic/history.html">http://www.cix.co.uk/~rrussell/bbcbasic/history.html</a>
</li>

<li>SuperBASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/SuperBASIC">http://en.wikipedia.org/wiki/SuperBASIC</a>
</li>

<li>SuperBASIC (Wikipedia CZ)<br />
<a href="http://en.wikipedia.org/wiki/SuperBASIC">http://en.wikipedia.org/wiki/SuperBASIC</a>
</li>

<li>Laser Basic/Laser Compiler<br />
<a href="http://www.sincuser.f9.co.uk/049/laser.htm">http://www.sincuser.f9.co.uk/049/laser.htm</a>
</li>

<li>Laser BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Laser_BASIC">http://cs.wikipedia.org/wiki/Laser_BASIC</a>
</li>

<li>BBC BASIC<br />
<a href="http://www.bbcbasic.co.uk/bbcbasic.html">http://www.bbcbasic.co.uk/bbcbasic.html</a>
</li>

<li>BBC BASIC<br />
<a href="http://mdfs.net/Software/BBCBasic/">http://mdfs.net/Software/BBCBasic/</a>
</li>

<li>BBC BASIC (Z80) for the ZX Spectrum<br />
<a href="http://mdfs.net/Software/BBCBasic/Spectrum/">http://mdfs.net/Software/BBCBasic/Spectrum/</a>
</li>

<li>BBC BASIC (Wikipedia CZ)<br />
<a href="http://en.wikipedia.org/wiki/BBC_BASIC">http://en.wikipedia.org/wiki/BBC_BASIC</a>
</li>

<li>BeebWiki &ndash; 8-bit Acorn Computer Wiky<br />
<a href="http://beebwiki.jonripley.com/Main_Page">http://beebwiki.jonripley.com/Main_Page</a>
</li>

<li>Porovnání osmibitů<br />
<a href="http://porovnani8bitu.spaces.live.com/">http://porovnani8bitu.spaces.live.com/</a>
</li>

<li>Rosetta Code &ndash; Main Page<br />
<a href="http://rosettacode.org/wiki/Main_Page">http://rosettacode.org/wiki/Main_Page</a>
</li>

<li>Rosetta Code &ndash; Category Basic<br />
<a href="http://rosettacode.org/wiki/Category:BASIC">http://rosettacode.org/wiki/Category:BASIC</a>
</li>

<li>QBasicJedi<br />
<a href="http://www.freewebs.com/qbasicjedi/">http://www.freewebs.com/qbasicjedi/</a>
</li>

<li>QBasic/QuickBasic Downloads<br />
<a href="http://www.freewebs.com/qbasicjedi/qbdownloads.html">http://www.freewebs.com/qbasicjedi/qbdownloads.html</a>
</li>

<li>QuickBASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/QuickBASIC">http://cs.wikipedia.org/wiki/QuickBASIC</a>
</li>

<li>QBasic.com<br />
<a href="http://www.qbasic.com/">http://www.qbasic.com/</a>
</li>

<li>QBasic (Wikipedia)<br />
<a href="http://cs.wikipedia.org/wiki/QBasic">http://cs.wikipedia.org/wiki/QBasic</a>
</li>

<li>Dialling with QBASIC<br />
<a href="http://www.mysundial.ca/tsp/qbasic.html">http://www.mysundial.ca/tsp/qbasic.html</a>
</li>

<li>BASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/BASIC">http://en.wikipedia.org/wiki/BASIC</a>
</li>

<li>BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/BASIC">http://cs.wikipedia.org/wiki/BASIC</a>
</li>

<li>Turbo BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Turbo_BASIC">http://cs.wikipedia.org/wiki/Turbo_BASIC</a>
</li>

<li>More BASIC Computer Games<br />
<a href="http://www.atariarchives.org/morebasicgames/">http://www.atariarchives.org/morebasicgames/</a>
</li>

<li>How to build an interpreter in Java, Part 1: The BASICs<br />
<a href="http://www.javaworld.com/jw-05-1997/jw-05-indepth.html">http://www.javaworld.com/jw-05-1997/jw-05-indepth.html</a>
</li>

<li>INTEGER BASIC Reference<br />
<a href="http://www.landsnail.com/a2ref2.htm">http://www.landsnail.com/a2ref2.htm</a>
</li>

<li>APPLESOFT Reference<br />
<a href="http://www.landsnail.com/a2ref.htm">http://www.landsnail.com/a2ref.htm</a>
</li>

<li>Applesoft Lite: Applesoft BASIC for the Replica-1<br />
<a href="http://cowgod.org/replica1/applesoft/">http://cowgod.org/replica1/applesoft/</a>
</li>

<li>Simons' BASIC<br />
<a href="http://en.wikipedia.org/wiki/Simons'_BASIC">http://en.wikipedia.org/wiki/Simons'_BASIC</a>
</li>

<li>Simon's Basic<br />
<a href="http://www.lemon64.com/?mainurl=http%3A//www.lemon64.com/museum/list.php%3Flineoffset%3D54%26genre%3Dmanualmisc">http://www.lemon64.com/?mainurl=http%3A//www.lemon64.com/museum/list.php%3Flineoffset%3D54%26genre%3Dmanualmisc</a>
</li>

<li>BASIC<br />
<a href="http://www.c64-wiki.com/index.php/BASIC">http://www.c64-wiki.com/index.php/BASIC</a>
</li>

<li>C64 Wiki: Simons Basic<br />
<a href="http://www.c64-wiki.de/index.php/Simons_Basic">http://www.c64-wiki.de/index.php/Simons_Basic</a>
</li>

<li>Simons' Basic (evaluation)<br />
<a href="http://www.atarimagazines.com/creative/v9n11/60_Simons_Basic.php">http://www.atarimagazines.com/creative/v9n11/60_Simons_Basic.php</a>
</li>

<li>Bill Gates' Personal Easter Eggs in 8 Bit BASIC
<a href="http://www.pagetable.com/?p=43">http://www.pagetable.com/?p=43</a>
</li>

<li>Třicet let od vydání revolučního Turbo Pascalu 5.5<br />
<a href="https://www.root.cz/clanky/tricet-let-od-vydani-revolucniho-turbo-pascalu-5-5/">https://www.root.cz/clanky/tricet-let-od-vydani-revolucniho-turbo-pascalu-5-5/</a>
</li>

<li>Let's make a small and simple GW-BASIC program!<br />
<a href="https://www.youtube.com/watch?v=OyPUn74nj-s">https://www.youtube.com/watch?v=OyPUn74nj-s</a>
</li>

<li>Seriál Letní škola programovacího jazyka Logo<br />
<a href="http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/">http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/</a>
</li>

<li>Educational programming language<br />
<a href="http://en.wikipedia.org/wiki/Educational_programming_language">http://en.wikipedia.org/wiki/Educational_programming_language</a>
</li>

<li>Logo Tree Project:<br />
<a href="http://www.elica.net/download/papers/LogoTreeProject.pdf">http://www.elica.net/download/papers/LogoTreeProject.pdf</a></li>

<li>Sprite ve Scratchi<br />
<a href="https://en.scratch-wiki.info/wiki/Sprite">https://en.scratch-wiki.info/wiki/Sprite</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

