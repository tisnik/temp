<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Od grafické karty VGA k vyšším rozlišením i většímu množství barev</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Od grafické karty VGA k vyšším rozlišením i většímu množství barev</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V seriálu o tvorbě her a grafických dem pro platformu IBM PC (a systém DOS) jsme se již několikrát setkali s problematikou grafického subsystému této platformy. Dnes si ukážeme způsob využití VBE (VESA BIOS Extension) pro nastavení grafických režimů s vyšším rozlišením a/nebo počtem barev.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Od grafické karty VGA k&nbsp;vyšším rozlišením i většímu množství barev</a></p>
<p><a href="#k02">2. Grafická karta IBM 8514/A</a></p>
<p><a href="#k03">3. Typická konfigurace grafické karty IBM 8514/A</a></p>
<p><a href="#k04">4. Klony IBM 8514/A a další vývoj grafických karet na počítačích PC</a></p>
<p><a href="#k05">5. Následníci grafické karty VGA v&nbsp;podobě nestandardu SVGA</a></p>
<p><a href="#k06">6. Organizace video paměti u karet SVGA</a></p>
<p><a href="#k07">7. Standard VESA aneb částečné zmírnění chaosu na trhu s&nbsp;grafickými kartami</a></p>
<p><a href="#k08">8. Standardní grafické režimy představené ve VBE 1.2</a></p>
<p><a href="#k09">9. Praktická část</a></p>
<p><a href="#k10">10. Přečtení základních informací o grafické kartě</a></p>
<p><a href="#k11">11. První demonstrační příklad: zjištění, zda je VBE dostupný</a></p>
<p><a href="#k12">12. Blok s&nbsp;informacemi o grafické kartě</a></p>
<p><a href="#k13">13. Druhý demonstrační příklad: zobrazení základních informací o grafické kartě</a></p>
<p><a href="#k14">14. Třetí demonstrační příklad: výpis OEM řetězce s&nbsp;další informací o kartě</a></p>
<p><a href="#k15">15. Čtvrtý demonstrační příklad: zjištění a výpis čísel všech podporovaných grafických režimů</a></p>
<p><a href="#k16">16. Přečtení informací o zvoleném grafickém režimu</a></p>
<p><a href="#k17">17. Pátý demonstrační příklad: získání rozlišení, bitové hloubky a struktury obrazových řádků zvoleného grafického režimu</a></p>
<p><a href="#k18">18. Šestý demonstrační příklad: základní informace o čtecích a zápisových oknech pro reálný režim</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Od grafické karty VGA k&nbsp;vyšším rozlišením i většímu množství barev</h2>

<p><a href="">V&nbsp;seriálu o tvorbě her a grafických dem pro platformu IBM PC
(a systém DOS)</a> jsme se již několikrát setkali s&nbsp;problematikou
grafického subsystému této platformy. Připomeňme si krátce, že IBM PC byla
modulární a konfigurovatelnou platformou, pro niž postupně vznikla celá řada
různých grafických karet, které mnohdy byly více či méně zpětně kompatibilní.
Základem byla karta <a
href="https://www.root.cz/clanky/vyvoj-her-a-grafickych-dem-pro-oslavovanou-i-nenavidenou-platformu-pc-vrazedna-kombinace-8088-a-cga/">MDA</a>
s&nbsp;podporou dobře čitelného textu, ovšem bez podpory grafického výstupu.
Doplňovala ji karta CGA s&nbsp;(na dnešní dobu) primitivními grafickými režimy
320&times;200 pixelů se čtyřmi barvami a 640&times;200 pixelů monochromaticky.
Alternativou k&nbsp;MDA+CGA se stala karta <a
href="https://www.root.cz/clanky/graficka-karta-hercules-uspesna-alternativa-a-konkurence-mda-i-cga/">Hercules</a>
s&nbsp;monochromatickým režimem s&nbsp;vysokým rozlišením 720&times;348 pixelů,
který se i díky podpoře levného monochromatického monitoru stal velmi populární
kartou.</p>

<p>Firma IBM na dvojici MDA+CGA navázala kartou <a
href="https://www.root.cz/clanky/graficka-karta-ega-pouze-mirny-pokrok-v-mezich-zakona/">EGA</a>,
v&nbsp;níž se poprvé mohli vývojáři setkat s&nbsp;takzvanými <i>planárními
režimy</i>, které umožnily, aby byla celá video RAM mapována do jediného
segmentu (64kB), se všemi z&nbsp;toho plynoucími důsledky. EGA podporovala
vyšší rozlišení (640&times;350 pixelů) i vyšší počet barev. Úspěšná byla
navazující karta nazvaná <a
href="https://www.root.cz/clanky/od-ega-ke-grafickym-kartam-mcga-a-vga/">VGA</a>
s&nbsp;podporou ještě vyšších rozlišení (oficiálně až do 640&times;480 pixelů)
a možností v&nbsp;některých režimech současně zobrazit 256 barev.</p>

<p>Ovšem vývoj pokračoval dále a vznikaly další typy grafických karet. Některé
byly určeny pro profesionální použití (orientace na CAD), jiné postupně
(společně se snižující se cenou pamětí atd.) zvyšovaly jak nabízená rozlišení,
tak i počet současně zobrazitelných barev. Každý výrobce přitom nabízel různá
rozšíření BIOSu pro nastavení nových grafických režimů atd. Lišila se i
organizace grafické paměti, takže výsledkem byl &ndash; slušně řečeno &ndash;
chaos. Ten byl částečně zmírněn firmami sloučenými do organizace <i>VESA</i>
(<i>Video Electronics Standards Association</i>), která navrhla standard
<i>VBE</i> neboli <i>VESA BIOS Extensions</i>. A zejména <i>VBE</i> se budeme
zabývat v&nbsp;dnešním článku.</p>

<p><div class="rs-tip-major">Poznámka: povšimněte si, jak se řízení dalšího
vývoje platformy PC postupně přeneslo od společnosti IBM ke sdružení většího
množství firem.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Grafická karta IBM 8514/A</h2>

<p>Grafická karta <i>IBM 8514/A</i> začala být nabízena v&nbsp;roce 1987
společností IBM jako doplňková grafická karta ke kartě <a
href="https://www.root.cz/clanky/od-ega-ke-grafickym-kartam-mcga-a-vga/">VGA</a>
(která o několik let později začala být nepsaným standardem v&nbsp;oblasti
grafiky). Ve skutečnosti ji však bylo po malých úpravách možné použít i
s&nbsp;dalšími grafickými kartami, zejména s&nbsp;poměrně populárním <a
href="https://www.root.cz/clanky/graficka-karta-hercules-uspesna-alternativa-a-konkurence-mda-i-cga/">Herculesem</a>
(změny se týkaly zejména úpravy řádkových frekvencí). Současně se jednalo i o
první široce dostupný grafický akcelerátor určený pro počítače IBM PC, protože
předchozí grafické akcelerátory (například &bdquo;trojkarta&ldquo; <i>PGA</i>
či mnohé verze grafických karet typu <i>TARGA</i> a <i>TIGA</i>) byly velmi
drahé, a jejich použití tak bylo limitováno pouze pro profesionální účely,
čemuž odpovídalo i spektrum aplikací, kterými byly tyto karty podporovány.</p>

<p>Grafická karta IBM 8514/A byla použitelná prakticky na všech počítačích řady
IBM PC/AT, které však musely obsahovat poměrně málo úspěšnou sběrnici
<i>MCA</i> (<i>Micro Channel Architecture</i>). V&nbsp;pozdějších letech se
objevily i klony této grafické karty, které bylo možné zapojit i do
rozšířenějších sběrnic ISA či VESA Local Bus, sběrnice MCA se totiž mimo
originální počítače od firmy IBM příliš neujala, částečně to bylo zapříčiněno
způsobem licencování.</p>

<p><div class="rs-tip-major">Poznámka: po technické stránce však byla MCA zcela
zajisté krokem dopředu.</div></p>

<p>Grafická karta IBM 8514/A patří do skupiny grafických prostředků určených
zejména pro aplikace typu CAD, tedy pro aplikace orientované na zpracování a
rychlé zobrazování vektorů (i písmo se v&nbsp;CAD systémech vykresluje,
resp.&nbsp;přesněji řečeno v&nbsp;minulosti vykreslovalo pomocí vektorů &ndash;
jen tak je totiž možné zajistit uspokojivé vykreslení na perových plotterech).
Při použití tohoto grafického adaptéru bylo pomocí dodávané programové knihovny
(ve své podstatě se jednalo o rozsáhlé rozšíření BIOSu) nazvané <i>AI-Adapter
Interface</i> (s&nbsp;umělou inteligencí tato knihovna samozřejmě nemá nic
společného) podporováno vykreslování základních geometrických tvarů, jakými
jsou například úsečka, lomená čára (polyčára), polygon nebo kružnice. Kromě
toho obsahoval tento grafický adaptér také podpůrný modul pro rychlé
vykreslování rastrových obrazců pomocí operací typu <i>BitBlt &ndash; Bit Block
Transfer</i>. Byla také dodržena částečná zpětná kompatibilita
s&nbsp;grafickými adaptéry typu VGA (viz předchozí díly tohoto seriálu), což
bylo důležité pro zaručení funkčnosti adaptéru v mnoha aplikacích, které byly
vytvořeny právě pro tento rozšířený typ grafických karet.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Typická konfigurace grafické karty IBM 8514/A</h2>

<p>Grafický adaptér IBM 8514/A byl do počítačů IBM PC zapojován jako přídavná
(tj.&nbsp;ve skutečnosti druhá) grafická karta. Toto řešení, zejména způsob
„sériového” napojení karet do jednoho monitoru, bylo nazýváno <i>AVE &ndash;
Auxiliary Video Extension</i>. Primární kartou nainstalovanou v&nbsp;počítači
byl většinou, jak jsme si již ostatně řekli v&nbsp;předchozí kapitole, grafický
adaptér VGA, který zajišťoval podporu základních i rozšířených textových a
grafických režimů. Přídavná karta IBM 8514/A dokázala generovat rastrový obraz
pouze v&nbsp;rozlišení 1024&times;768 pixelů prokládaně (<i>interlaced</i>)
nebo v&nbsp;režimu 640&times;480 pixelů neprokládaně (<i>non-interlaced</i>).
Barevná hloubka dosahovala podle kapacity nainstalované video paměti na tomto
adaptéru buď šestnácti nebo 256 současně zobrazitelných barev (což bylo na dobu
vzniku velmi dobré).</p>

<p>V&nbsp;grafickém režimu s&nbsp;vyšším rozlišením (tj.&nbsp;konkrétně
1024&times;768 pixelů) se řádková frekvence rovnala 38 kHz, snímková frekvence
však byla rovna pouhým 43,5 Hz (IBM o tomto rozlišení tvrdila, že má obnovovací
frekvenci rovnu 88 Hz, ovšem prokládaně; bolesti hlavy byly dodávány zadarmo).
V&nbsp;nižším grafickém rozlišení (tj.&nbsp;640×480 pixelů) byla obrazová
frekvence stejná jako na kartě VGA ve stejném grafickém režimu, tj.&nbsp;60 Hz.
Kromě zmíněných dvou grafických režimů neumožňovala tato grafická karta
zobrazovat ani textové režimy, ani další grafické režimy &ndash; vše ostatní
tedy muselo být zobrazováno s&nbsp;využitím primární grafické karty. Tento
způsob kooperace dvou grafických karet se ukázal jako výhodný, protože IBM
8514/A mohla být díky tomu poměrně jednoduchá, práce v&nbsp;grafických režimech
je totiž o mnoho jednodušší než v&nbsp;režimech textových.</p>

<p>Hardwarová konfigurace této grafické karty je taktéž velmi zajímavá. Pro
synchronizaci sériového čtení jednotlivých pixelů z&nbsp;video paměti během
zobrazování snímku jsou použity dva krystaly. První z&nbsp;nich má rezonanční
frekvenci „vybroušenou” na 44,9 MHz, druhý má frekvenci nastavenou na 25,175
MHz. Vyšší frekvence se používala u rozlišení 1024&times;768, nižší frekvence
je plně kompatibilní s&nbsp;grafickou kartou VGA (viz předchozí díly tohoto
seriálu, v&nbsp;nichž je podrobně uvedeno časování v&nbsp;grafických režimech).
Kapacita video paměti byla rovna buď 1 MB, nebo 1,5 MB (to je na rok 1987 hodně
vysoká hodnota &ndash; 1,5 mnohdy převyšovala celkovou kapacitu RAM). Podle
instalované kapacity se odvozoval i počet maximálně zobrazitelných barev.
Zjednodušené schéma grafického adaptéru IBM 8514/A spolu s&nbsp;jeho připojením
do počítače je zobrazeno na následujícím obrázku:</p>

<a href="https://www.root.cz/obrazek/1201143/"><img src="https://i.iinfo.cz/images/110/8514-a-prev.png" class="image-1201143" width="370" height="148" data-prev-filename="https://i.iinfo.cz/images/110/8514-a-prev.png" data-prev-filename-webp="https://i.iinfo.cz/images/110/8514-a-prev.webp" data-prev-width="370" data-prev-height="148" data-large-filename="https://i.iinfo.cz/images/110/8514-a-large.png" data-large-filename-webp="https://i.iinfo.cz/images/110/8514-a-large.webp" data-large-width="720" data-large-height="288" alt="8514/A" data-description="8514/A" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" /></a>
<p><i>Obrázek 1: Zjednodušené schéma grafického adaptéru IBM 8514/A.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Klony IBM 8514/A a další vývoj grafických karet na počítačích PC</h2>

<p>Design grafické karty IBM 8514/A byl samozřejmě, jak bylo v&nbsp;té době
zvykem, bez okolků kopírován různými dalšími výrobci periferních zařízení. Mezi
úspěšné klony této grafické karty, které v&nbsp;ledasčem svůj originál
převyšovaly, patří například grafické karty ATI 38800 (Mach 8), ATI 68800 (Mach
32), Chips and Technologies 82c480, Paradise WD95C00 a Paradise WD95C01
(pamětníci si možná na některé tyto názvy vzpomenou). Většina klonů byla
připojitelná do sběrnice ISA či VLB, zatímco originální karta IBM 8514/A byla
dostupná, jak již ostatně víme z&nbsp;předchozích odstavců, pouze pro sběrnici
MCA.</p>

<p>Vzhledem k&nbsp;omezením, která tato grafická karta měla (zejména kvůli
závislosti na primární grafické kartě), se však další výrobci grafických karet
zaměřili především na rozšiřování funkcionality původní grafické karty VGA.
Výsledkem jsou grafické karty označované jako <i>Super VGA</i>, zkráceně
<i>SVGA</i>. Nejedná se však o žádný oficiální standard, pouze o označení
grafických karet, které nabízejí vyšší rozlišení či počet současně
zobrazitelných karet než karta VGA (s&nbsp;níž byly karty SVGA většinou do
velké míry kompatibilní).</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Následníci grafické karty VGA v&nbsp;podobě nestandardu SVGA</h2>

<p>Termínem SVGA nebo také Super VGA jsou obecně označovány všechny grafické
karty vytvořené pro počítače řady IBM PC, které umožňovaly či umožňují používat
rozšířené grafické režimy, tj.&nbsp;režimy s&nbsp;rozlišením vyšším, než je
nejvyšší rozlišení karty VGA: 640&times;480 pixelů. Tyto karty současně mohou
podporovat režimy s&nbsp;vyšším počtem současně zobrazitelných barev;
v&nbsp;některých případech je dostupná patnáctibitová, šestnáctibitová či
dokonce čtyřiadvacetibitová barevná hloubka. Podívejme se nyní blíže na
možnosti, které grafické karty typu SVGA nabízejí.</p>

<p>Každá grafická karta typu SVGA by měla být zpětně kompatibilní s&nbsp;kartou
VGA, a to jak organizací video paměti do bitových rovin, tak i časováním
horizontálních a vertikálních synchronizačních signálů a v&nbsp;neposlední řadě
významem řídicích registrů. Ne všechny grafické karty SVGA jsou kompatibilní na
sto procent, většina funkcí z&nbsp;původní VGA však typicky zůstává zachována,
zejména způsob nastavení základních textových a grafických režimů pomocí funkcí
BIOSu a metody přístupu do video paměti při čtení či zápisu barev jednotlivých
pixelů (ovšem například režim <i>split-screen</i>, který jsme si popsali, mohl
být problematický).</p>

<p>Grafické karty SVGA nabízejí grafické režimy s&nbsp;vyšším rozlišením než
640×480 pixelů. Typicky byla dostupná rozlišení 800&times;600 pixelů a
1024&times;768 pixelů. Tyto režimy bylo možné používat s&nbsp;různou barevnou
hloubkou a s&nbsp;různou obnovovací frekvencí obrazu i řádkovou frekvencí.
Minimálním základem pro všechny rozšířené grafické režimy je zobrazení
šestnácti barev. V&nbsp;tomto případě postačuje pro grafický režim
800&times;600&times;16 kapacita video paměti 256 kB, což odpovídá původním
grafickým kartám typu VGA. Pokud je použit grafický režim s&nbsp;vyšším
rozlišením či větší barevná hloubka, musí se patřičně zvýšit i kapacita video
paměti, která tak postupně dosahovala hodnot 512 kB, 1 MB, 2 MB atd. (stále
bereme v&nbsp;úvahu kapacitu nutnou pro zobrazení pouze jednoho rastrového
obrázku, v&nbsp;případě použití předního a zadního bufferu se samozřejmě
kapacita video paměti musí dále zvyšovat). Některé používané principy přístupu
do obrazové paměti budou popsány v&nbsp;navazující kapitole.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Organizace video paměti u karet SVGA</h2>

<p>V&nbsp;grafickém režimu 800&times;600&times;16 je možné při čtení či zápisu
jednotlivých pixelů použít klasický přístup přes bitové roviny,
tj.&nbsp;technologii známou z&nbsp;karet EGA i VGA. Je to možné z&nbsp;toho
důvodu, že počet pixelů v&nbsp;jedné bitové rovině je při tomto rozlišení roven
480000, což odpovídá 60000 bytům, tj.&nbsp;zhruba kapacitě jedné bitové roviny
(připomeňme si, že barvy pixelů jsou rozděleny do všech čtyř barvových bitových
rovin). Podobný případ nastává u grafického režimu 640&times;400&times;256,
který je většinou možné (i když nestandardními postupy) nastavit tak, aby se
choval jako již popsaný <i>Mód X</i>, tj.&nbsp;dva sousední pixely jsou vždy
uloženy ve dvou nezřetězených bitových rovinách. V&nbsp;tomto režimu se
spotřebuje 256000 bajtů obrazové paměti, což prakticky přesně naráží na hranice
původní karty VGA (ale ještě je nepřekračuje).</p>

<p>Problémy však nastávají ve všech ostatních rozšířených grafických režimech,
například v&nbsp;režimu 1024&times;768&times;16, 640&times;480&times;256 či
800&times;600&times;256, a samozřejmě u všech režimů s&nbsp;větší barvovou
hloubkou. Zde se již překračuje adresovatelná kapacita jednotlivých bitových
rovin, proto se přístup do obrazové paměti musí řešit odlišným způsobem.</p>

<p>V&nbsp;reálném režimu procesoru (tj.&nbsp;zejména v&nbsp;DOSu) je nutné
použít takzvané <i>paměťové banky</i> nebo <i>paměťová okna</i>. Jejich princip
spočívá v&nbsp;tom, že se pomocí konfiguračních registrů grafické karty zvolí,
do které paměťové banky se mohou zapisovat pixely a ze které paměťové banky se
budou pixely číst &ndash; čtení a zápis totiž může obecně probíhat
v&nbsp;odlišných bankách (přičemž čtení je z&nbsp;praktického hlediska až
nepoužitelně pomalé). Celá video paměť je potom rozdělena do pruhů, každý pruh
odpovídá jednomu paměťovému banku. Zápis pixelu se touto organizací video
paměti podstatným způsobem komplikuje, protože je nejdříve nutné rozhodnout, do
kterého banku čtený či zapisovaný pixel padne, tento bank se posléze vybere, a
teprve poté je již možné provést čtení/zápis. I při vykreslování spritů může
nastat případ, kdy různé části spritu padnou do jiného banku.</p>

<p>Situace se poněkud zlepšuje v&nbsp;chráněném režimu procesoru. Tam je totiž
možné celou video paměť &bdquo;virtuálně&ldquo; mapovat do jednoho souvislého
paměťového úseku, který se nachází za nejvyšší adresou operační paměti.
Paměťové banky jsou sice stále fyzicky přítomné (tj.&nbsp;musí se přepínat),
ale aplikace je nemusí ovládat přímo. Ve skutečnosti o jejich přítomnosti
nemusí vůbec vědět. Pokud se totiž provede zápis do oblasti video paměti, která
neodpovídá aktuálně nastavenému banku, dojde k&nbsp;výjimce (jsme
v&nbsp;chráněném režimu, oblasti čtení a zápisu se definují pomocí
deskriptorů), kterou odchytí ovladač grafické karty, ten potřebný bank nastaví
a zápis posléze provede. Novější grafické karty řady SVGA, zejména ty, které
jsou připojeny na sběrnici PCI, nemusí banky používat vůbec, tam je možné celou
grafickou paměť mapovat do adresové oblasti procesoru. Konkrétní počáteční
adresa se nastaví při inicializaci zařízení typu plug-and-play).</p>

<p>Ovládání banků (a současně i jejich velikost) je však závislá na typu
grafické karty, tj.&nbsp;například karta Trident 8900 (ve své době velmi
oblíbená) se ovládá jiným způsobem než karta OTI či Chips and Technologies.
Chaos v&nbsp;ovládání grafických karet v&nbsp;rozšířených grafických režimech
částečně odstranila až norma VESA, která je popsána v&nbsp;navazující
kapitole.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Standard VESA aneb částečné zmírnění chaosu na trhu s&nbsp;grafickými kartami</h2>

<p>V&nbsp;předchozích dvou kapitolách jsme si popsali určitý chaos ve světě
SVGA karet. Tyto karty nabízely poměrně mnoho funkcí i grafických režimů,
jejich největší nevýhodou však byla vzájemná nekompatibilita. Neexistoval totiž
jednotný způsob nastavení rozšířených grafických režimů, lišily se režimy
přístupu do video paměti, způsob přepínání paměťových banků apod. IBM se
nastálý chaos pokusila vyřešit uvedením grafické karty <i>XGA</i>, ta se však
objevila na trhu poměrně pozdě a ostatní výrobci grafických čipů tuto kartu
celkem úspěšně ignorovali a navrhovali si vlastní řešení a pseudostandardy.
Výsledkem poměrně rychlého vývoje grafických karet tak bylo paradoxně
zaostávání aplikací za technickými možnostmi grafických karet, protože
softwarové firmy z&nbsp;celkem pochopitelných důvodů reagovaly na nové výrobky
se zpožděním. Tento stav začal být evidentní a dosti palčivý
v&nbsp;devadesátých letech minulého století.</p>

<p>Kromě pokusu firmy IBM o řešení zmatku v&nbsp;grafických kartách se objevil
i standard navržený sdružením <i>VESA</i> (<i>Video Electronics Standards
Association</i>). Do tohoto sdružení se dříve či později zapojili prakticky
všichni výrobci grafických čipů a taktéž významné softwarové firmy. Výsledkem
práce tohoto sdružení bylo několik verzí norem, které byly v&nbsp;počítačové
literatuře zkráceně nazývány pouze termínem VESA, například VESA 1.1 či VESA
2.0 (což není úplně přesné). V&nbsp;těchto normách byla uvedena zejména čísla
rozšířených grafických režimů tak, aby je bylo možné nastavit pomocí služeb
takzvaného VESA BIOSu. Kromě toho byly specifikovány služby pro zjištění
parametrů grafických karet, tj.&nbsp;výrobce grafického čipu, typu grafické
karty, podporovaných rozlišení a podporovaných obnovovacích frekvencí obrazu
(některé grafické režimy bylo možné zobrazovat s&nbsp;odlišnými frekvencemi
vertikálních a horizontálních synchronizačních signálů).</p>

<p>Kromě toho bylo specifikováno uspořádání grafických dat v&nbsp;obrazové
paměti a způsob přepínání jednotlivých banků v&nbsp;reálném režimu procesoru.
Pozdější norma VESA obsahovala i doporučení o (alespoň virtuálně) lineárním
uspořádání obrazové paměti v&nbsp;chráněném režimu (což využívaly pozdější
hry). Výše zmíněný VESA BIOS (VBE &ndash; VESA BIOS Extension) mohl být
implementován buď přímo na grafické kartě, nebo přes ovladač grafické karty,
který byl typicky dodávaný třetím výrobcem, protože mnoho výrobců grafických
čipů tyto ovladače kupodivu přímo nedodávalo.</p>

<p>Standard VESA byl v&nbsp;minulosti použit zejména v&nbsp;operačním systému
DOS, v&nbsp;dnešní době má význam pouze jako nejmenší společný prvek, který by
(alespoň teoreticky) měly podporovat všechny moderní grafické karty. Nicméně
VBE je již zastaralý a byl nahrazen UEFI GOP (<i>Graphics Output Protocol</i>),
což je však téma na samostatný článek.</i>



<p><a name="k08"></a></p>
<h2 id="k08">8. Standardní grafické režimy představené ve VBE 1.2</h2>

<p>VBE verze 1.2 přinesl určitou standardizaci grafických režimů, protože
definoval šestnáct režimů, včetně jejich rozlišení, barevné hloubky a tím pádem
i počtu zobrazitelných barev (ovšem například velikost paměťových bank může být
odlišná!). Ne všechny režimy musí být kartou (+ monitorem) podporovány, ovšem
minimálně některé z&nbsp;nich podporuje prakticky každá karta kompatibilní
s&nbsp;VESA (čímž se myslí VBE 1.2 nebo vyšší verze):</p>

<table>
<tr><th>Číslo</th><th>Rozlišení</th><th>Bitů na pixel</th><th>Počet barev</th></tr>
<tr><td>0x0100</td><td> 640&times;400</td><td>8    </td><td>256</td></tr>
<tr><td>0x0101</td><td> 640&times;480</td><td>8    </td><td>256</td></tr>
<tr><td>0x0102</td><td> 800&times;600</td><td>4    </td><td>16 </td></tr>
<tr><td>0x0103</td><td> 800&times;600</td><td>8    </td><td>256</td></tr>
<tr><td>0x010D</td><td> 320&times;200</td><td>15   </td><td>32768</td></tr>
<tr><td>0x010E</td><td> 320&times;200</td><td>16   </td><td>65536</td></tr>
<tr><td>0x010F</td><td> 320&times;200</td><td>24/32</td><td>1677216</td></tr>
<tr><td>0x0110</td><td> 640&times;480</td><td>15   </td><td>32768</td></tr>
<tr><td>0x0111</td><td> 640&times;480</td><td>16   </td><td>65536</td></tr>
<tr><td>0x0112</td><td> 640&times;480</td><td>24/32</td><td>1677216</td></tr>
<tr><td>0x0113</td><td> 800&times;600</td><td>15   </td><td>32768</td></tr>
<tr><td>0x0114</td><td> 800&times;600</td><td>16   </td><td>65536</td></tr>
<tr><td>0x0115</td><td> 800&times;600</td><td>24/32</td><td>1677216</td></tr>
<tr><td>0x0116</td><td>1024&times;768</td><td>15   </td><td>32768</td></tr>
<tr><td>0x0117</td><td>1024&times;768</td><td>16   </td><td>65536</td></tr>
<tr><td>0x0118</td><td>1024&times;768</td><td>24/32</td><td>1677216</td></tr>
</table>



<p><a name="k09"></a></p>
<h2 id="k09">9. Praktická část</h2>

<p>V&nbsp;praktické části dnešního článku si ukážeme základní služby <i>VBE</i>
neboli <i>VESA BIOS Extension</i>. Nejdříve zjistíme základní informace o
grafické kartě a následně načteme informace o zvoleném grafickém režimu. A jak
je již v&nbsp;tomto seriálu zvykem, implementace bude naprogramována
v&nbsp;Netwide Assembleru pro operační systém DOS (tedy pro reálný režim se
všemi omezeními, které tento režim mikroprocesoru přináší v&nbsp;praxi).
Demonstrační příklady by měly být funkční pro všechny počítače s&nbsp;VBE (SW
implementace či přímo součást ROM na kartě), nezávisle na verzi VBE. A
pochopitelně jsou tyto příklady spustitelné i v&nbsp;DOSBoxu.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Přečtení základních informací o grafické kartě</h2>

<p>První službou BIOSu grafických karet odpovídajících normě VESA, kterou si
ukážeme, je hned první služba s&nbsp;číslem 00. Tato služba otestuje, zda je
VBE dostupný a pokud ano, naplní paměťový blok o velikosti 256 resp.&nbsp;512
bajtů (podle verze VBE) podrobnějšími informacemi o výrobci karty, dostupných
grafických režimech atd. Navíc tato služba (i všechny další služby VBE) vrací
v&nbsp;registru <strong>AL</strong> hodnotu 0x4F v&nbsp;případě, že je služba
podporována. A v&nbsp;registru <strong>AH</strong> je vrácen příznak, zda bylo
volání úspěšné či nikoli. V&nbsp;praxi nám tedy bude postačovat testovat
hodnotu uloženou do registru <strong>AX</strong> na 0x004F, protože
<strong>AX</strong> vznikne spojením registrů <strong>AH</strong> a
<strong>AL</strong> (což již velmi dobře známe):</p>

<pre>
Vstup:  AH = 4Fh        Služby SVGA
        AL = 00h        Získání základních informací o SVGA
        ES:DI = ukazatel na buffer (256/512 bajtů)
&nbsp;
Výstup: AL = 4Fh pokud je služba podporována, jinak odlišná hodnota
        AH = 00h pokud je volání úspěšné, jinak hodnota 01h
</pre>

<p><div class="rs-tip-major">Poznámka: jedná se sice o VBE, ten je ovšem
rozšířením Video služeb BIOSu. Proto se služby volají přes <strong>int
10h</strong>.</div></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. První demonstrační příklad: zjištění, zda je VBE dostupný</h2>

<p>Dnešní první demonstrační příklad je velmi jednoduchý. Pouze v&nbsp;něm
voláme <a href="#k10">výše popsanou</a> službu VBE a na základě návratové
hodnoty uložené v&nbsp;registru <strong>AX</strong> zjišťujeme, zda je VBE
podporován či nikoli. Na základě tohoto testu se vypíše zpráva
&bdquo;Success&ldquo; nebo &bdquo;Failed&ldquo;:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o VESA rezimech</i>
        mov  di, vesa_block_info
        mov ax, 0x4f00
        int     0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>: db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:  db "Failed", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>vesa_block_info</strong>: resb 512
</pre>

<p>Zajímavé bude zjistit, jaké zprávy se vypíšou. V&nbsp;DOSBoxu, pokud je
pochopitelně nakonfigurována karta SVGA (což v&nbsp;originální konfiguraci je),
by se měla vypsat pouze zpráva:</p>

<pre>
Success
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Blok s&nbsp;informacemi o grafické kartě</h2>

<p>Služba VBE, kterou jsme volali v&nbsp;rámci prvního demonstračního příkladu,
kromě návratového kódu naplní i paměťový blok o velikosti 256 nebo 512 bajtů
(podle verze VBE), na který ukazuje dvojice registrů <strong>ES:DI</strong>.
Struktura první části tohoto bloku je přesně definována, poté následuje 222
rezervovaných bajtů a následně 256 bajtů, které jsou v&nbsp;novějších verzích
VBE použity pro účely výrobce grafických karet. Základní strukturu tohoto bloku
můžeme v&nbsp;assembleru popsat následovně:</p>

<pre>
<strong>vesa_block_info</strong>:
        Signature               resb 4
        Version                 resw 1
        OEMNamePtr              resd 1
        Capabilities            resd 1
&nbsp;
        VideoModesOffset        resw 1
        VideoModesSegment       resw 1
&nbsp;
        CountOf64KBlocks        resw 1
        OEMSoftwareRevision     resw 1
        OEMVendorNamePtr        resd 1
        OEMProductNamePtr       resd 1
        OEMProductRevisionPtr   resd 1
        Reserved                resb 222
        OEMData                 resb 256
</pre>

<p><div class="rs-tip-major">Poznámka: <strong>resb</strong> znamená <i>reserve
bytes</i>, <strong>resw</strong> <i>reserve 16bit words</i> a
<strong>resd</strong> <i>reserve 32bit doublewords</i>). Z&nbsp;toho lze
usoudit, jak vypadají jednotlivé prvky v&nbsp;tomto bloku (první prvek je
například čtveřice bajtů, naopak verze je šestnáctibitová hodnota
atd.).</div></p>

<p>Některé důležité hodnoty předané v&nbsp;tomto bloku, si ukážeme
v&nbsp;dalších demonstračních příkladech.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Druhý demonstrační příklad: zobrazení základních informací o grafické kartě</h2>

<p>V&nbsp;dnešním druhém demonstračním příkladu si necháme vypsat základní
informace o grafické kartě získané přes VBE. Z&nbsp;celého 256 bajtového nebo
512 bajtového bloku získáme tři důležité údaje:</p>

<ol>

<li>Signaturu na začátku paměťového bloku, která by měla obsahovat ASCII kódy
znaků &bdquo;VESA&ldquo; (ovšem nejedná se o řetězec)</li>

<li>Verzi VBE ve formátu vyšší_bajt.nižší_bajt. Pokud se například vrátí
hodnota 0x102, jedná se o verzi 1.2 atd.</li>

<li>Kapacita obrazové paměti (VideoRAM) specifikovaná jako počet paměťových
bloků, z&nbsp;nichž každý má velikost 64kB. Ovšem některé karty používají menší
okna (zejména u starších karet byl tento údaj zavádějící). Nicméně většinou
postačuje zde uloženou hodnotu vynásobit 64kB a získat tak celkovou kapacitu
obrazové paměti.</li>

</ol>

<p>Zdrojový kód tohoto příkladu vypadá následovně:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o VESA rezimech</i>
        mov  di, vesa_block_info
        mov ax, 0x4f00
        int     0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        mov eax, [Signature]       <i>; zkopirovat VESA signaturu do DOSovskeho retezce</i>
        mov [signature_msg], eax
        print_string signature_msg <i>; tisk naplneneho retezce</i>
&nbsp;
        sub eax, eax
        mov ax, [Version]          <i>; verze VBE</i>
        print_hex eax
&nbsp;
        sub eax, eax
        mov ax, [CountOf64KBlocks] <i>; pocet 64kB bloku video RAM</i>
        print_dec eax
&nbsp;
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
<strong>signature_msg</strong>:   db "????", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>vesa_block_info</strong>:
        Signature               resb 4
        Version                 resw 1
        OEMNamePtr              resd 1
        Capabilities            resd 1
&nbsp;
        VideoModesOffset        resw 1
        VideoModesSegment       resw 1
&nbsp;
        CountOf64KBlocks        resw 1
        OEMSoftwareRevision     resw 1
        OEMVendorNamePtr        resd 1
        OEMProductNamePtr       resd 1
        OEMProductRevisionPtr   resd 1
        Reserved                resb 222
        OEMData                 resb 256
</pre>

<p>V&nbsp;mém konkrétním případě se vypíše:</p>

<pre>
Success
VESA
00000200
0000000064
</pre>

<p>To znamená, že verze VBE je rovna 2.0 a grafická karta má 64 oken, každé o
velikosti 64kB. Celkem jsou tedy na kartě nainstalovány 4MB Video RAM.</p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Třetí demonstrační příklad: výpis OEM řetězce s&nbsp;další informací o kartě</h2>

<p>Ve třetím příkladu, který si dnes ukážeme, se navíc ještě vypisuje řetězec
s&nbsp;označením grafické karty. Tento řetězec je umístěn na adrese, která je
uložena jako dvojice segment:offset v&nbsp;prvcích
<strong>OEMNamePtr+2</strong> a <strong>OEMNamePtr</strong>. Jedná se o
céčkovský řetězec ukončený nulou, který nelze přímo vypsat funkcemi DOSu, takže
jsem pro jednoduchost zvolil výpis stylem znak po znaku, což je sice pomalé,
ale pro typicky hodně krátké řetězce nám to nemusí příliš vadit:</p>

<pre>
        mov es, [OEMNamePtr+2]     <i>; dlouhy ukazatel na retezec</i>
        mov bx, [OEMNamePtr]       <i>; ukonceny nulou</i>
<strong>next_char</strong>:
        mov dl, es:[bx]            <i>; nacteni znaku</i>
        cmp dl, 0                  <i>; test na ukoncovaci nulu</i>
        jz  end_str
        mov ah, 02                 <i>; DOS funkce pro tisk znaku</i>
        int 0x21
        inc bx                     <i>; prechod na dalsi znak</i>
        jmp next_char              <i>; pokracujeme</i>
<strong>end_str</strong>:
</pre>

<p>V&nbsp;mém případě se vypíšou tyto údaje (jméno výrobce a typ grafické
karty):</p>

<pre>
S3 Incorporated. Trio64
</pre>

<p>Úplný zdrojový kód tohoto příkladu vypadá následovně:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o VESA rezimech</i>
        mov  di, vesa_block_info
        mov ax, 0x4f00
        int     0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        mov eax, [Signature]       <i>; zkopirovat VESA signaturu do DOSovskeho retezce</i>
        mov [signature_msg], eax
        print_string signature_msg <i>; tisk naplneneho retezce</i>
&nbsp;
        sub eax, eax
        mov ax, [Version]          <i>; verze VBE</i>
        print_hex eax
&nbsp;
        sub eax, eax
        mov ax, [CountOf64KBlocks] <i>; pocet 64kB bloku video RAM</i>
        print_dec eax
&nbsp;
        mov es, [OEMNamePtr+2]     <i>; dlouhy ukazatel na retezec</i>
        mov bx, [OEMNamePtr]       <i>; ukonceny nulou</i>
<strong>next_char</strong>:
        mov dl, es:[bx]            <i>; nacteni znaku</i>
        cmp dl, 0                  <i>; test na ukoncovaci nulu</i>
        jz  end_str
        mov ah, 02                 <i>; DOS funkce pro tisk znaku</i>
        int 0x21
        inc bx                     <i>; prechod na dalsi znak</i>
        jmp next_char              <i>; pokracujeme</i>
<strong>end_str</strong>:
&nbsp;
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
<strong>signature_msg</strong>:   db "????", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>vesa_block_info</strong>:
        Signature               resb 4
        Version                 resw 1
        OEMNamePtr              resd 1
        Capabilities            resd 1
&nbsp;
        VideoModesOffset        resw 1
        VideoModesSegment       resw 1
&nbsp;
        CountOf64KBlocks        resw 1
        OEMSoftwareRevision     resw 1
        OEMVendorNamePtr        resd 1
        OEMProductNamePtr       resd 1
        OEMProductRevisionPtr   resd 1
        Reserved                resb 222
        OEMData                 resb 256
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Čtvrtý demonstrační příklad: zjištění a výpis čísel všech podporovaných grafických režimů</h2>

<p>Dalším důležitým údajem, který o sobě grafická karta přes VBE prozrazuje, je
tabulka s&nbsp;čísly grafických ale i textových režimů (ovšem bez dalších
podrobností). Adresa (ukazatel) na tuto tabulku je uložena ve dvojici
<strong>VideoModesSegment</strong> a <strong>VideoModesOffset</strong>, přičemž
každé číslo režimu je šestnáctibitové. Na konci tabulky je uložena
šestnáctibitová hodnota -1 (tedy 0xffff), kterou budeme hledat, aby bylo možné
ukončit smyčku, která čísla všech grafických režimů vypíše:</p>

<pre>
        mov es, [VideoModesSegment] <i>; tabulka s cisly grafickych rezimu</i>
        mov bx, [VideoModesOffset]
&nbsp;
<strong>next_mode</strong>:
        xor eax, eax
        mov ax, es:[bx]            <i>; nacteni cisla rezimu</i>
        cmp ax, -1                 <i>; jde o posledni zaznam?</i>
        je  last_mode              <i>; ano -> koncime</i>
        print_dec eax              <i>; tisk cisla rezimu</i>
        inc bx                     <i>; offset pro dalsi rezim</i>
        inc bx
        jmp next_mode              <i>; pokracujeme</i>
<strong>last_mode</strong>:
</pre>

<p>Opět se podívejme, jaká čísla režimů se vypíšou pro grafickou kartu
Trio64:</p>

<pre>
0000000256
0000000257
0000000258
0000000259
0000000260
0000000261
0000000262
0000000263
0000000264
0000000265
0000000266
0000000267
0000000268
0000000272
0000000273
0000000274
0000000275
0000000276
0000000277
0000000278
0000000279
0000000280
0000000281
0000000282
0000000288
0000000289
0000000290
0000000337
0000000341
0000000342
0000000343
0000000344
0000000352
0000000358
0000000359
0000000360
0000000361
0000000362
0000000364
0000000368
0000000375
0000000376
0000000379
0000000380
0000000381
0000000382
0000000383
0000000384
0000000386
0000000387
0000000400
0000000519
0000000521
0000000522
0000000523
0000000530
0000000531
0000000533
0000000534
</pre>

<p>Celý zdrojový kód takto upraveného demonstračního příkladu vypadá
následovně:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o VESA rezimech</i>
        mov  di, vesa_block_info
        mov ax, 0x4f00
        int     0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        mov eax, [Signature]       <i>; zkopirovat VESA signaturu do DOSovskeho retezce</i>
        mov [signature_msg], eax
        print_string signature_msg <i>; tisk naplneneho retezce</i>
&nbsp;
        sub eax, eax               <i>; nacitame jen AX, proto vymazat hornich 32 bitu EAX</i>
        mov ax, [Version]          <i>; verze VBE</i>
        print_hex eax
&nbsp;
        mov ax, [CountOf64KBlocks] <i>; pocet 64kB bloku video RAM</i>
        print_dec_16 eax
&nbsp;
        mov es, [OEMNamePtr+2]     <i>; dlouhy ukazatel na retezec</i>
        mov bx, [OEMNamePtr]       <i>; ukonceny nulou</i>
<strong>next_char</strong>:
        mov dl, es:[bx]            <i>; nacteni znaku</i>
        cmp dl, 0                  <i>; test na ukoncovaci nulu</i>
        jz  end_str
        mov ah, 02                 <i>; DOS funkce pro tisk znaku</i>
        int 0x21
        inc bx                     <i>; prechod na dalsi znak</i>
        jmp next_char              <i>; pokracujeme</i>
<strong>end_str</strong>:
&nbsp;
        mov es, [VideoModesSegment] <i>; tabulka s cisly grafickych rezimu</i>
        mov bx, [VideoModesOffset]
&nbsp;
<strong>next_mode</strong>:
        xor eax, eax
        mov ax, es:[bx]            <i>; nacteni cisla rezimu</i>
        cmp ax, -1                 <i>; jde o posledni zaznam?</i>
        je  last_mode              <i>; ano -> koncime</i>
        print_dec eax              <i>; tisk cisla rezimu</i>
        inc bx                     <i>; offset pro dalsi rezim</i>
        inc bx
        jmp next_mode              <i>; pokracujeme</i>
<strong>last_mode</strong>:
&nbsp;
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
<strong>signature_msg</strong>:   db "????", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>vesa_block_info</strong>:
        Signature               resb 4
        Version                 resw 1
        OEMNamePtr              resd 1
        Capabilities            resd 1
&nbsp;
        VideoModesOffset        resw 1
        VideoModesSegment       resw 1
&nbsp;
        CountOf64KBlocks        resw 1
        OEMSoftwareRevision     resw 1
        OEMVendorNamePtr        resd 1
        OEMProductNamePtr       resd 1
        OEMProductRevisionPtr   resd 1
        Reserved                resb 222
        OEMData                 resb 256
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Přečtení informací o zvoleném grafickém režimu</h2>

<p>Prvním voláním služby VBE jsme získali mj.&nbsp;tabulku s&nbsp;čísly
grafických režimů, ovšem vůbec nevíme, jaké jsou vlastnosti jednotlivých režimů
(a dokonce ani to, jestli se jedná o režim grafický nebo textový). Podrobné
informace o jednom <i>vybraném</i> grafickém režimu musíme zjistit další
službou, konkrétně službou číslo 0x4F a podslužbou 1. Do registru
<strong>CX</strong> je nutné zadat číslo režimu, který potřebujeme prozkoumat a
v&nbsp;registrovém páru <strong>ES:DI</strong> musí být předán ukazatel na
buffer o délce 256 bajtů, do kterého se uloží podrobné informace o zvoleném
režimu:</p>

<pre>
Vstup:  AH = 4Fh        Služby SVGA
        AL = 01h        Získání informací o zvoleném grafickém režimu
        CX = číslo režimu
        ES:DI = ukazatel na buffer (256 bajtů)
&nbsp;
Výstup: AL = 4Fh pokud je služba podporována, jinak odlišná hodnota
        AH = 00h pokud je volání úspěšné, jinak hodnota 01h
</pre>

<p>Blok o délce 256 bajtů, který je vyplněn, má tuto strukturu:</p>

<pre>
<strong>graphics_mode_block_info</strong>:
        ModeAttributes      resw 1 <i>; mode attributes</i>
        WinAAttributes      resb 1 <i>; window A attributes</i>
        WinBAttributes      resb 1 <i>; window B attributes</i>
        WinGranularity      resw 1 <i>; window granularity</i>
        WinSize             resw 1 <i>; window size</i>
        WinASegment         resw 1 <i>; window A start segment</i>
        WinBSegment         resw 1 <i>; window B start segment</i>
        WinFuncPtr          resd 1 <i>; pointer to windor function</i>
        BytesPerScanLine    resw 1 <i>; bytes per scan line</i>
&nbsp;
        XResolution         resw 1 <i>; horizontal resolution</i>
        YResolution         resw 1 <i>; vertical resolution</i>
        XCharSize           resb 1 <i>; character cell width</i>
        YCharSize           resb 1 <i>; character cell height</i>
        NumberOfPlanes      resb 1 <i>; number of memory planes</i>
        BitsPerPixel        resb 1 <i>; bits per pixel</i>
        NumberOfBanks       resb 1 <i>; number of banks</i>
        MemoryModel         resb 1 <i>; memory model type</i>
        BankSize            resb 1 <i>; bank size in kb</i>
        NumberOfImagePages  resb 1 <i>; number of images</i>
        Reserved1           resb 1 <i>; reserved for page function</i>
&nbsp;
        RedMaskSize         resb 1 <i>; size of direct color red mask in bits</i>
        RedFieldPosition    resb 1 <i>; bit position of LSB of red mask</i>
        GreenMaskSize       resb 1 <i>; size of direct color green mask in bits</i>
        GreenFieldPosition  resb 1 <i>; bit position of LSB of green mask</i>
        BlueMaskSize        resb 1 <i>; size of direct color blue mask in bits</i>
        BlueFieldPosition   resb 1 <i>; bit position of LSB of blue mask</i>
        RsvdMaskSize        resb 1 <i>; size of direct color reserved mask in bits</i>
        DirectColorModeInfo resb 1 <i>; Direct Color mode attributes</i>
        Reserved2           resb 216 <i>; remainder of ModeInfoBlock</i>
</pre>

<p><div class="rs-tip-major">Poznámka: ne všechny položky musí být relevantní,
proto si ukážeme jen ty nejdůležitější prvky.</div></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Pátý demonstrační příklad: získání rozlišení, bitové hloubky a struktury obrazových řádků zvoleného grafického režimu</h2>

<p>Jak se tedy postupuje v&nbsp;praxi? Aplikace (nebo přímo uživatel) si vybere
požadované rozlišení a počet barev. Následně je nutné projít všemi nabízenými
grafickými režimy a vybrat z&nbsp;nich ten, který odpovídá požadavkům.
Například aplikace bude vyžadovat rozlišení 800&times;600 pixelů s&nbsp;256
barvami &ndash; takový režim je typicky podporovaný většinou SVGA karet. Naopak
některé režimy s&nbsp;rozlišením přesahujícím 1024&times;768 pixelů podporovány
být nemusí.</p>

<p>V&nbsp;dnešním předposledním demonstračním příkladu si necháme vypsat
základní informace o grafickém režimu číslo 0x103. Pokud grafická karta tento
režim podporuje, vypíše se jeho rozlišení (pro grafické režimy je přímo uvedeno
v&nbsp;pixelech), počet bajtů alokovaných pro každý obrazový řádek, počet bitů
pro uložení jednoho pixelu a taktéž počet bitových rovin (což je spíše
historická hodnota, protože se typicky vrací jediná bitová rovina):</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o grafickem rezimu</i>
        mov  di, graphics_mode_block_info
        mov  cx, 0x103             <i>; cislo rezimu</i>
        mov  ax, 0x4f01
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        mov ax, [XResolution]
        print_dec_16
&nbsp;
        mov ax, [YResolution]
        print_dec_16
&nbsp;
        mov ax, [BytesPerScanLine]
        print_dec_16
&nbsp;
        mov al, [BitsPerPixel]
        print_dec_8
&nbsp;
        mov al, [NumberOfPlanes]
        print_dec_8
&nbsp;
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>graphics_mode_block_info</strong>:
        ModeAttributes      resw 1 <i>; mode attributes</i>
        WinAAttributes      resb 1 <i>; window A attributes</i>
        WinBAttributes      resb 1 <i>; window B attributes</i>
        WinGranularity      resw 1 <i>; window granularity</i>
        WinSize             resw 1 <i>; window size</i>
        WinASegment         resw 1 <i>; window A start segment</i>
        WinBSegment         resw 1 <i>; window B start segment</i>
        WinFuncPtr          resd 1 <i>; pointer to windor function</i>
        BytesPerScanLine    resw 1 <i>; bytes per scan line</i>
&nbsp;
        XResolution         resw 1 <i>; horizontal resolution</i>
        YResolution         resw 1 <i>; vertical resolution</i>
        XCharSize           resb 1 <i>; character cell width</i>
        YCharSize           resb 1 <i>; character cell height</i>
        NumberOfPlanes      resb 1 <i>; number of memory planes</i>
        BitsPerPixel        resb 1 <i>; bits per pixel</i>
        NumberOfBanks       resb 1 <i>; number of banks</i>
        MemoryModel         resb 1 <i>; memory model type</i>
        BankSize            resb 1 <i>; bank size in kb</i>
        NumberOfImagePages  resb 1 <i>; number of images</i>
        Reserved1           resb 1 <i>; reserved for page function</i>
&nbsp;
        RedMaskSize         resb 1 <i>; size of direct color red mask in bits</i>
        RedFieldPosition    resb 1 <i>; bit position of LSB of red mask</i>
        GreenMaskSize       resb 1 <i>; size of direct color green mask in bits</i>
        GreenFieldPosition  resb 1 <i>; bit position of LSB of green mask</i>
        BlueMaskSize        resb 1 <i>; size of direct color blue mask in bits</i>
        BlueFieldPosition   resb 1 <i>; bit position of LSB of blue mask</i>
        RsvdMaskSize        resb 1 <i>; size of direct color reserved mask in bits</i>
        DirectColorModeInfo resb 1 <i>; Direct Color mode attributes</i>
        Reserved2           resb 216 <i>; remainder of ModeInfoBlock</i>
</pre>

<p>Po překladu a spuštění tohoto příkladu se v&nbsp;mém případě (ale i na mnoha
dalších počítačích) vypíše:</p>

<pre>
Success
0000000800
0000000600
0000000800
0000000008
0000000001
</pre>

<p>Jak se tyto údaje dekódují? První dva řádky naznačují rozlišení grafického
režimu 800&times;600 pixelů. Další řádek uvádí, že délka obrazové řádky je 800
bajtů. Na pátém řádku je uvedeno, že bitová hloubka je osm bitů na pixel a
tudíž tento režim podporuje 256 barev. A na posledním řádku je uvedeno, že
počet bitových rovin je roven jedné.</p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Šestý demonstrační příklad: základní informace o čtecích a zápisových oknech pro reálný režim</h2>

<p>Údaje o rozlišení a počtu barev, které jsme doposud zjistili, poskytují
požadované informace z&nbsp;uživatelského pohledu. Uživatel (nebo aplikace)
totiž vybírá právě tyto údaje. Ovšem pro čtení a zápis do obrazové paměti je
nutné mít k&nbsp;dispozici ještě více informací &ndash; zejména to, jak velké
jsou paměťové banky (okna), kolik těchto oken je k&nbsp;dispozici atd. Tyto
údaje si necháme zjistit a vypsat dnešním posledním demonstračním příkladem,
jehož zdrojový kód vypadá následovně:</p>

<pre>
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        jmp main                   <i>; skok na zacatek kodu</i>
&nbsp;
%include "io.asm"                  <i>; nacist symboly, makra a podprogramy</i>
%include "print.asm"               <i>; nacist symboly, makra a podprogramy</i>
&nbsp;
<strong>main</strong>:
        push ds
        pop  es                    <i>; nastaveni CS=DS=ES</i>
&nbsp;
        clc                        <i>; ziskani zakladnich informaci o grafickem rezimu</i>
        mov  di, graphics_mode_block_info
        mov  cx, 0x103             <i>; cislo rezimu</i>
        mov  ax, 0x4f01
        int      0x10
&nbsp;
        cmp ax, 0x004f             <i>; test, zda bylo volani funkce BIOSu uspesne</i>
        jne     failed
&nbsp;
<strong>success</strong>:
        print_string success_msg
&nbsp;
        xor eax, eax
&nbsp;
        mov al, [WinAAttributes]
        print_hex eax
&nbsp;
        xor eax, eax
&nbsp;
        mov al, [WinBAttributes]
        print_hex eax
&nbsp;
        xor eax, eax
&nbsp;
        mov ax, [WinGranularity]
        print_dec_8
&nbsp;
        jmp     finish
&nbsp;
<strong>failed</strong>:
        print_string failed_msg
&nbsp;
<strong>finish</strong>:
        wait_key            <i>; cekani na klavesu</i>
        exit                <i>; navrat do DOSu</i>
&nbsp;
&nbsp;
<i>; datova cast</i>
section .data
&nbsp;
<strong>success_msg</strong>:     db "Success", 0x0a, 0x0d, "$"
<strong>failed_msg</strong>:      db "Failed", 0x0a, 0x0d, "$"
&nbsp;
section .bss
<strong>graphics_mode_block_info</strong>:
        ModeAttributes      resw 1 <i>; mode attributes</i>
        WinAAttributes      resb 1 <i>; window A attributes</i>
        WinBAttributes      resb 1 <i>; window B attributes</i>
        WinGranularity      resw 1 <i>; window granularity</i>
        WinSize             resw 1 <i>; window size</i>
        WinASegment         resw 1 <i>; window A start segment</i>
        WinBSegment         resw 1 <i>; window B start segment</i>
        WinFuncPtr          resd 1 <i>; pointer to windor function</i>
        BytesPerScanLine    resw 1 <i>; bytes per scan line</i>
&nbsp;
        XResolution         resw 1 <i>; horizontal resolution</i>
        YResolution         resw 1 <i>; vertical resolution</i>
        XCharSize           resb 1 <i>; character cell width</i>
        YCharSize           resb 1 <i>; character cell height</i>
        NumberOfPlanes      resb 1 <i>; number of memory planes</i>
        BitsPerPixel        resb 1 <i>; bits per pixel</i>
        NumberOfBanks       resb 1 <i>; number of banks</i>
        MemoryModel         resb 1 <i>; memory model type</i>
        BankSize            resb 1 <i>; bank size in kb</i>
        NumberOfImagePages  resb 1 <i>; number of images</i>
        Reserved1           resb 1 <i>; reserved for page function</i>
&nbsp;
        RedMaskSize         resb 1 <i>; size of direct color red mask in bits</i>
        RedFieldPosition    resb 1 <i>; bit position of LSB of red mask</i>
        GreenMaskSize       resb 1 <i>; size of direct color green mask in bits</i>
        GreenFieldPosition  resb 1 <i>; bit position of LSB of green mask</i>
        BlueMaskSize        resb 1 <i>; size of direct color blue mask in bits</i>
        BlueFieldPosition   resb 1 <i>; bit position of LSB of blue mask</i>
        RsvdMaskSize        resb 1 <i>; size of direct color reserved mask in bits</i>
        DirectColorModeInfo resb 1 <i>; Direct Color mode attributes</i>
        Reserved2           resb 216 <i>; remainder of ModeInfoBlock</i>
</pre>

<p>Opět se podívejme na vypsané informace:</p>

<pre>
Success
00000007
00000000
0000000064
</pre>

<p>Jak se tyto informace použijí? K&nbsp;dispozici je podpora pro použití
jednoho okna (<i>WindowA</i>), které lze použít jak pro čtení z&nbsp;obrazové
paměti, tak i pro zápis do ní. Druhé okno podporováno není (dolní tři bity jsou
nulové). A tzv.&nbsp;<i>granularita</i> okna A je rovna 64 kilobajtům. To
znamená, že okno bude mapováno do &bdquo;klasického&ldquo; segmentu 0xA000, jak
je tomu zvykem již od dob grafických karet EGA a VGA. Pozor si musíme dát na
to, že některé karty mají granularitu 4 kB nebo 16 kB, nikoli celých 64 kB. To
je ovšem téma, kterému se budeme podrobněji věnovat v&nbsp;navazujícím
článku.</p>

<p>Jen pro úplnost si uveďme význam bitů určujících vlastnosti okna A a
popř.&nbsp;i okna B:</p>

<table>
<tr><th>Bit</th><th>Význam</th></tr>
<tr><td>0</td><td>1=okno je podporováno HW karty</td></tr>
<tr><td>1</td><td>1=z okna je možné číst data (z&nbsp;obrazové paměti)</td></tr>
<tr><td>2</td><td>1=do okna je možné zapisovat data (do obrazové paměti)</td></tr>
<tr><td>3-7</td><td>rezervováno</td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů s&nbsp;256 barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm</a></td></tr>
<tr><td>63</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>64</td><td>vga_gfx_mode_dac_1.asm</td><td>využití DAC (neočekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm</a></td></tr>
<tr><td>65</td><td>vga_gfx_mode_dac_2.asm</td><td>využití DAC (očekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>vga_640x480_putpixel.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
<tr><td>67</td><td>vga_320x200_putpixel_1.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm</a></td></tr>
<tr><td>68</td><td>vga_320x200_putpixel_2.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (rychlejší varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>69</td><td>vga_gfx_mode_dac_3.asm</td><td>přímé využití DAC v&nbsp;grafickém režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>vga_gfx_mode_unchained_step_1.asm</td><td>zobrazení barevných pruhů v&nbsp;režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm</a></td></tr>
<tr><td>71</td><td>vga_gfx_mode_unchained_step_2.asm</td><td>vypnutí zřetězení bitových rovin a změna způsobu adresování pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm</a></td></tr>
<tr><td>72</td><td>vga_gfx_mode_unchained_step_3.asm</td><td>vykreslení barevných pruhů do vybraných bitových rovin</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>73</td><td>vga_gfx_mode_320x400.asm</td><td>nestandardní grafický režim s&nbsp;rozlišením 320&times;400 pixelů a 256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm</a></td></tr>
<tr><td>74</td><td>vga_320x200_image.asm</td><td>zobrazení rastrového obrázku ve standardním grafickém režimu 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm</a></td></tr>
<tr><td>75</td><td>vga_320x200_unchained_image_1.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm</a></td></tr>
<tr><td>76</td><td>vga_320x200_unchained_image_2.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm</a></td></tr>
<tr><td>77</td><td>vga_320x400_unchained_image.asm</td><td>zobrazení rastrového obrázku v&nbsp;nestandardním režimu 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>78</td><td>vga_vertical_scroll_1.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm</a></td></tr>
<tr><td>79</td><td>vga_vertical_scroll_2.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm</a></td></tr>
<tr><td>80</td><td>vga_split_screen_1.asm</td><td>režim split-screen a scrolling, nefunční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm</a></td></tr>
<tr><td>81</td><td>vga_split_screen_2.asm</td><td>režim split-screen a scrolling, plně funkční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm</a></td></tr>
<tr><td>82</td><td>vga_horizontal_scroll_1.asm</td><td>horizontální scrolling bez rozšíření počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm</a></td></tr>
<tr><td>83</td><td>vga_horizontal_scroll_2.asm</td><td>horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm</a></td></tr>
<tr><td>84</td><td>vga_horizontal_scroll_3.asm</td><td>jemný horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>85</td><td>vga_320x240_image.asm</td><td>nastavení grafického režimu Mode-X, načtení a vykreslení obrázku, scrolling</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>io.asm</td><td>knihovna maker pro I/O operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>87</td><td>vga_lib.asm</td><td>knihovna maker a podprogramů pro programování karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm</a></td></tr>
<tr><td>88</td><td>vga_320x240_lib.asm</td><td>nastavení grafického režimu Mode-X, tentokrát knihovními funkcemi</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>89</td><td>vga_bitblt_1.asm</td><td>první (naivní) implementace operace <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm</a></td></tr>
<tr><td>90</td><td>vga_bitblt_2.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm</a></td></tr>
<tr><td>91</td><td>vga_bitblt_3.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro čtení i zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm</a></td></tr>
<tr><td>92</td><td>vga_bitblt_4.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace makry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm</a></td></tr>
<tr><td>93</td><td>vga_bitblt_5.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace podprogramem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>94</td><td>vga_bitblt_rotate.asm</td><td>zápisový režim s&nbsp;rotací bajtu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm</a></td></tr>
<tr><td>95</td><td>vga_bitblt_fast.asm</td><td>rychlá korektní 32bitová operace typu <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm</a></td></tr>
<tr><td>96</td><td>vga_320x400_bitblt_1.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (neúplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm</a></td></tr>
<tr><td>97</td><td>vga_320x400_bitblt_2.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (úplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm</a></td></tr>
<tr><td>98</td><td>vga_write_modes_1.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis bez úpravy latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm</a></td></tr>
<tr><td>99</td><td>vga_write_modes_2.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis s&nbsp;modifikací latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm</a></td></tr>
<tr><td>100</td><td>vga_write_modes_3.asm</td><td>volitelné zápisové režimy grafické karty VGA, cílená modifikace latche vzorkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>101</td><td>instruction_jump.asm</td><td>použití instrukce <strong>JMP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm</a></td></tr>
<tr><td>102</td><td>instruction_jnz.asm</td><td>použití instrukce <strong>JNZ</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm</a></td></tr>
<tr><td>103</td><td>instruction_jz_jmp.asm</td><td>použití instrukcí <strong>JZ</strong> a <strong>JMP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm</a></td></tr>
<tr><td>104</td><td>instruction_loop.asm</td><td>použití instrukce <strong>LOOP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>105</td><td>instruction_template.asm</td><td>šablona všech následujících demonstračních příkladů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm</a></td></tr>
<tr><td>106</td><td>instruction_print_hex.asm</td><td>tisk osmibitové hexadecimální hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm</a></td></tr>
<tr><td>107</td><td>instruction_xlat.asm</td><td>využití instrukce <strong>XLAT</strong> pro získání tisknutelné hexadecimální cifry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td>instruction_daa.asm</td><td>operace součtu s&nbsp;využitím binární i BCD aritmetiky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm</a></td></tr>
<tr><td>109</td><td>instruction_daa_sub.asm</td><td>instrukce <strong>DAA</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm</a></td></tr>
<tr><td>110</td><td>instruction_das.asm</td><td>instrukce <strong>DAS</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm</a></td></tr>
<tr><td>111</td><td>instruction_aaa.asm</td><td>korekce výsledku na jedinou BCD cifru operací <strong>AAA</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm</a></td></tr>
<tr><td>112</td><td>instruction_mul.asm</td><td>ukázka výpočtu součinu dvou osmibitových hodnot</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm</a></td></tr>
<tr><td>113</td><td>instruction_aam.asm</td><td>BCD korekce po výpočtu součinu instrukcí <strong>AAM</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>114</td><td>instruction_stosb.asm</td><td>blokový zápis dat instrukcí <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm</a></td></tr>
<tr><td>115</td><td>instruction_rep_stosb.asm</td><td>opakované provádění instrukce <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm</a></td></tr>
<tr><td>116</td><td>instruction_lodsb.asm</td><td>čtení dat instrukcí <strong>LODSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm</a></td></tr>
<tr><td>117</td><td>instruction_movsb.asm</td><td>přenos jednoho bajtu instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm</a></td></tr>
<tr><td>118</td><td>instruction_rep_movsb.asm</td><td>blokový přenos po bajtech instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm</a></td></tr>
<tr><td>119</td><td>instruction_rep_scas.asm</td><td>vyhledávání v&nbsp;řetězci instrukcí <strong>SCAS</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>120</td><td>vga_320x200_image_0B.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm</a></td></tr>
<tr><td>121</td><td>vga_320x200_image_64kB.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0xffff</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm</a></td></tr>
<tr><td>122</td><td>vga_320x200_image_movsb.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm</a></td></tr>
<tr><td>123</td><td>vga_320x200_image_movsw.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm</a></td></tr>
<tr><td>124</td><td>vga_320x200_image_movsd.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSD</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm</a></td></tr>
<tr><td>125</td><td>vga_320x200_image_movsb_forward.asm</td><td>blokový přenos překrývajících se bloků paměti (zvyšující se adresy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm</a></td></tr>
<tr><td>126</td><td>vga_320x200_image_movsb_backward_1.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, nekorektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm</a></td></tr>
<tr><td>127</td><td>vga_320x200_image_movsb_backward_2.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, korektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>128</td><td>sound_bell.asm</td><td>přehrání zvuku pomocí tisku ASCII znaku BELL</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm</a></td></tr>
<tr><td>129</td><td>sound_beep.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm</a></td></tr>
<tr><td>130</td><td>sound_play_pitch.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru, použití maker</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>131</td><td>sound_opl2_basic.asm</td><td>přehrání komorního A na OPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm</a></td></tr>
<tr><td>132</td><td>sound_opl2_table.asm</td><td>přehrání komorního A na OPL2, použití tabulky s&nbsp;hodnotami registrů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>133</td><td>sound_opl2_table_2.asm</td><td>přepis tabulky s&nbsp;obsahy registrů pro přehrání komorního A</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm</a></td></tr>
<tr><td>134</td><td>sound_key_on.asm</td><td>přímé ovládání bitu KEY ON mezerníkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm</a></td></tr>
<tr><td>135</td><td>sound_adsr.asm</td><td>nastavení obálky pro tón přehrávaný prvním kanálem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm</a></td></tr>
<tr><td>136</td><td>sound_modulation.asm</td><td>řízení frekvence modulátoru klávesami 1 a 0</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>137</td><td>keyboard_basic.asm</td><td>přímá práce s&nbsp;klávesnicí IBM PC</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>138</td><td>sound_stereo_opl2.asm</td><td>stereo zvuk v&nbsp;konfiguraci DualOPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm</a></td></tr>
<tr><td>139</td><td>sound_opl2_multichannel.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), delší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm</a></td></tr>
<tr><td>140</td><td>sound_opl2_multichannel_2.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), kratší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm</a></td></tr>
<tr><td>141</td><td>sound_opl3_stereo_1.asm</td><td>stereo výstup na OPL3 (v&nbsp;kompatibilním režimu)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm</a></td></tr>
<tr><td>142</td><td>sound_opl3_stereo_2.asm</td><td>stereo výstup na OPL3 (v&nbsp;režimu OPL3)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm</a></td></tr>
<tr><td>143</td><td>sound_opl3_multichannel.asm</td><td>vícekanálový zvuk na OPL3 (klávesy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>144</td><td>sound_opl3_waveform_1.asm</td><td>interaktivní modifikace tvaru vlny u prvního operátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm</a></td></tr>
<tr><td>145</td><td>sound_opl3_waveform_2.asm</td><td>oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm</a></td></tr>
<tr><td>146</td><td>sound_opl3_waveform_3.asm</td><td>vliv tvaru vln na zvukový kanál s&nbsp;FM syntézou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm</a></td></tr>
<tr><td>147</td><td>sound_opl3_waveform_4.asm</td><td>modifikace tvaru vlny nosné vlny i modulátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm</a></td></tr>
<tr><td>148</td><td>sound_opl3_4operators_1.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm</a></td></tr>
<tr><td>149</td><td>sound_opl3_4operators_2.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>150</td><td>timer_basic.asm</td><td>základní obsluha přerušení od časovače/čítače</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm</a></td></tr>
<tr><td>151</td><td>timer_restore.asm</td><td>obnovení původní obsluhy přerušení při ukončování aplikace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm</a></td></tr>
<tr><td>152</td><td>timer_restore_better_structure.asm</td><td>refaktoring předchozího demonstračního příkladu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm</a></td></tr>
<tr><td>153</td><td>timer_faster_clock.asm</td><td>zrychlení čítače na 100 přerušení za sekundu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>154</td><td>instruction_push_imm.asm</td><td>instrukce <strong>PUSH</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm</a></td></tr>
<tr><td>155</td><td>instruction_imul_imm.asm</td><td>instrukce <strong>IMUL</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm</a></td></tr>
<tr><td>156</td><td>instruction_into_1.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm</a></td></tr>
<tr><td>157</td><td>instruction_into_2.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm</a></td></tr>
<tr><td>158</td><td>instruction_bound_1.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm</a></td></tr>
<tr><td>159</td><td>instruction_bound_2.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm</a></td></tr>
<tr><td>160</td><td>vga_320x200_putpixel_286.asm</td><td>instrukce bitového posunu s&nbsp;konstantou větší než 1</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm</a></td></tr>
<tr><td>161</td><td>instruction_push_pop.asm</td><td>instrukce <strong>PUSH</strong> a <strong>POP</strong> se všemi pracovními registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>162</td><td>instruction_push_pop_B.asm</td><td>instrukce s&nbsp;novými segmentovými registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm</a></td></tr>
<tr><td>163</td><td>instruction_near_jz_jmp.asm</td><td>blízké skoky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm</a></td></tr>
<tr><td>164</td><td>instruction_bsf.asm</td><td>nová instrukce <strong>BSF</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm</a></td></tr>
<tr><td>165</td><td>instruction_bsr.asm</td><td>nová instrukce <strong>BSR</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm</a></td></tr>
<tr><td>166</td><td>instruction_add_32bit.asm</td><td>32bitový součet</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm</a></td></tr>
<tr><td>167</td><td>instruction_inc_32bit.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;šestnáctibitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm</a></td></tr>
<tr><td>168</td><td>instruction_inc_32bit_B.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;32bitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>169</td><td>ems_status.asm</td><td>zjištění stavu (emulace) paměti EMS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm</a></td></tr>
<tr><td>170</td><td>ems_total_mem.asm</td><td>získání celkové kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm</a></td></tr>
<tr><td>171</td><td>ems_free_mem.asm </td><td>získání volné kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm</a></td></tr>
<tr><td>172</td><td>xms_free_mem.asm </td><td>získání volné kapacity paměti XMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>173</td><td>vga_320x200_short_address_1.asm</td><td>blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm</a></td></tr>
<tr><td>174</td><td>vga_320x200_short_address_2.asm</td><td>rozepsaný blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm</a></td></tr>
<tr><td>175</td><td>vga_320x200_short_address_3.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm</a></td></tr>
<tr><td>176</td><td>vga_320x200_short_address_4.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm</a></td></tr>
<tr><td>177</td><td>vga_320x200_long_address_1.asm</td><td>32bitový blokový přenos</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm</a></td></tr>
<tr><td>178</td><td>vga_320x200_long_address_2.asm</td><td>rozepsaný 32bitový blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm</a></td></tr>
<tr><td>179</td><td>vga_320x200_long_address_3.asm</td><td>přístup do obrazové paměti přes segment 0x0000 a 32bitový offset</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm</a></td></tr>
<tr><td>180</td><td>vga_320x200_long_address_4.asm</td><td>otestování, jak lze přenášet data s&nbsp;využitím 32bitového offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>181</td><td>print_msw.asm</td><td>přečtení a zobrazení obsahu speciálního registru MSW</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm</a></td></tr>
<tr><td>182</td><td>print_cr0.asm</td><td>přečtení a zobrazení obsahu speciálního registru <strong>CR0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm</a></td></tr>
<tr><td>183</td><td>prot_mode_286.asm</td><td>přechod do chráněného režimu na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm</a></td></tr>
<tr><td>184</td><td>prot_mode_386.asm</td><td>přechod do chráněného režimu na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm</a></td></tr>
<tr><td>185</td><td>prot_mode_back_to_real_mode_286.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm</a></td></tr>
<tr><td>186</td><td>prot_mode_back_to_real_mode_386.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm</a></td></tr>
<tr><td>187</td><td>prot_mode_check.asm</td><td>test, zda se mikroprocesor již nachází v&nbsp;chráněném režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm</a></td></tr>
<tr><td>188</td><td>unreal_mode.asm</td><td>nastavení nereálného režimu (platné pro Intel 80386)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>189</td><td>float32_constants.asm</td><td>vytištění základních FP konstant typu <i>single</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm</a></td></tr>
<tr><td>190</td><td>float64_constants.asm</td><td>vytištění základních FP konstant typu <i>double</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm</a></td></tr>
<tr><td>191</td><td>fpu_arithmetic.asm</td><td>základní aritmetické operace prováděné matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm</a></td></tr>
<tr><td>192</td><td>fpu_divide_by_zero.asm</td><td>dělení nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm</a></td></tr>
<tr><td>193</td><td>fpu_divide_by_neg_zero.asm </td><td>dělení záporné hodnoty nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm</a></td></tr>
<tr><td>194</td><td>fpu_divide_by_neg_zero_2.asm </td><td>dělení hodnoty zápornou nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm</a></td></tr>
<tr><td>195</td><td>fpu_divide_zero_by_zero.asm</td><td>výpočet 0/0 matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>196</td><td>io.asm</td><td>pomocná makra pro komunikaci s&nbsp;DOSem a BIOSem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>197</td><td>print.asm</td><td>pomocná makra pro tisk FPU hodnot typu <i>single</i> a <i>double</i> v&nbsp;hexadecimálním tvaru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>198</td><td>fpu_divide.asm</td><td>operace podílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm</a></td></tr>
<tr><td>199</td><td>fpu_divide_r.asm</td><td>operace podílu s&nbsp;prohozenými operandy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm</a></td></tr>
<tr><td>200</td><td>fpu_sqrt.asm</td><td>výpočet druhé odmocniny</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm</a></td></tr>
<tr><td>201</td><td>fpu_sqrt_neg_value.asm</td><td>výpočet druhé odmocniny ze záporné hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm</a></td></tr>
<tr><td>202</td><td>fpu_check.asm</td><td>detekce typu matematického koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm</a></td></tr>
<tr><td>203</td><td>fpu_compare.asm</td><td>porovnání dvou hodnot s&nbsp;vyhodnocením výsledku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm</a></td></tr>
<tr><td>204</td><td>fpu_status_word.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm</a></td></tr>
<tr><td>205</td><td>fpu_status_word_stack.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>206</td><td>svga_info_1.asm</td><td>zjištění, zda je VBE dostupný</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_1.asm</a></td></tr>
<tr><td>207</td><td>svga_info_2.asm</td><td>zobrazení základních informací o grafické kartě</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_2.asm</a></td></tr>
<tr><td>208</td><td>svga_info_3.asm</td><td>výpis OEM řetězce s&nbsp;další informací o kartě</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_3.asm</a></td></tr>
<tr><td>209</td><td>svga_info_4.asm</td><td>zjištění a výpis čísel všech podporovaných grafických režimů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_4.asm</a></td></tr>
<tr><td>210</td><td>svga_info_5.asm</td><td>získání rozlišení, bitové hloubky a struktury obrazových řádků zvoleného grafického režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_5.asm</a></td></tr>
<tr><td>211</td><td>svga_info_6.asm</td><td>základní informace o čtecích a zápisových oknech pro reálný režim</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_6.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>VESA BIOS Extensions<br />
<a href="https://en.wikipedia.org/wiki/VESA_BIOS_Extensions">https://en.wikipedia.org/wiki/VESA_BIOS_Extensions</a>
</li>

<li>Video Electronics Standards Association<br />
<a href="https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association">https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association</a>
</li>

<li>DJGPP (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/DJGPP">https://cs.wikipedia.org/wiki/DJGPP</a>
</li>

<li>DJGPP home page<br />
<a href="http://www.delorie.com/djgpp/">http://www.delorie.com/djgpp/</a>
</li>

<li>DJGPP Zip File Picker<br />
<a href="http://www.delorie.com/djgpp/zip-picker.html">http://www.delorie.com/djgpp/zip-picker.html</a>
</li>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

<li>The LOADALL Instruction by Robert Collins<br />
<a href="https://www.rcollins.org/articles/loadall/tspec_a3_doc.html">https://www.rcollins.org/articles/loadall/tspec_a3_doc.html</a>
</li>

<li>How do you put a 286 in Protected Mode?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode">https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode</a>
</li>

<li>Control register<br />
<a href="https://en.wikipedia.org/wiki/Control_register">https://en.wikipedia.org/wiki/Control_register</a>
</li>

<li>CPU Registers x86<br />
<a href="https://wiki.osdev.org/CPU_Registers_x86">https://wiki.osdev.org/CPU_Registers_x86</a>
</li>

<li>x86 Assembly/Protected Mode<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode">https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode</a>
</li>

<li>MSW: Machine Status Word<br />
<a href="https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html">https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html</a>
</li>

<li>80x87 Floating Point Opcodes<br />
<a href="http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html">http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html</a>
</li>

<li>Page Translation<br />
<a href="https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm">https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm</a>
</li>

<li>80386 Paging and Segmenation<br />
<a href="https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation">https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation</a>
</li>

<li>80386 Memory Management<br />
<a href="https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html">https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html</a>
</li>

<li>DOSEMU<br />
<a href="http://www.dosemu.org/">http://www.dosemu.org/</a>
</li>

<li>Intel 80386, a revolutionary CPU<br />
<a href="https://www.xtof.info/intel80386.html">https://www.xtof.info/intel80386.html</a>
</li>

<li>PAI Unit 3 Paging in 80386 Microporcessor<br />
<a href="https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor">https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor</a>
</li>

<li>64 Terabytes of virtual memory for 32-bit x86 using segmentation: how?<br />
<a href="https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how">https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how</a>
</li>

<li>Pi in the Pentium: reverse-engineering the constants in its floating-point unit<br />
<a href="http://www.righto.com/2025/01/pentium-floating-point-ROM.html">http://www.righto.com/2025/01/pentium-floating-point-ROM.html</a>
</li>

<li>Simply FPU<br />
<a href="http://www.website.masmforum.com/tutorials/fptute/">http://www.website.masmforum.com/tutorials/fptute/</a>
</li>

<li>Art of Assembly language programming: The 80x87 Floating Point Coprocessors<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html</a>
</li>

<li>Art of Assembly language programming: The FPU Instruction Set<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html</a>
</li>

<li>INTEL 80387 PROGRAMMER'S REFERENCE MANUAL<br />
<a href="http://www.ragestorm.net/downloads/387intel.txt">http://www.ragestorm.net/downloads/387intel.txt</a>
</li>

<li>x86 Instruction Set Reference: FLD<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_100.html">http://x86.renejeschke.de/html/file_module_x86_id_100.html</a>
</li>

<li>x86 Instruction Set Reference: FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_101.html">http://x86.renejeschke.de/html/file_module_x86_id_101.html</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>8087 Numeric Data Processor<br />
<a href="https://www.eeeguide.com/8087-numeric-data-processor/">https://www.eeeguide.com/8087-numeric-data-processor/</a>
</li>

<li>Data Types and Instruction Set of 8087 co-processor<br />
<a href="https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/">https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/</a>
</li>

<li>8087 instruction set and examples<br />
<a href="https://studylib.net/doc/5625221/8087-instruction-set-and-examples">https://studylib.net/doc/5625221/8087-instruction-set-and-examples</a>
</li>

<li>GCC documentation: Extensions to the C Language Family<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions">https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions</a>
</li>

<li>GCC documentation: Using Vector Instructions through Built-in Functions<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html">https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html</a>
</li>

<li>SSE (Streaming SIMD Extentions)<br />
<a href="http://www.songho.ca/misc/sse/sse.html">http://www.songho.ca/misc/sse/sse.html</a>
</li>

<li>Timothy A. Chagnon: SSE and SSE2<br />
<a href="http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf">http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf</a>
</li>

<li>Intel corporation: Extending the Worldr's Most Popular Processor Architecture<br />
<a href="http://download.intel.com/technology/architecture/new-instructions-paper.pdf">http://download.intel.com/technology/architecture/new-instructions-paper.pdf</a>
</li>

<li>SIMD architectures:<br />
<a href="http://arstechnica.com/old/content/2000/03/simd.ars/">http://arstechnica.com/old/content/2000/03/simd.ars/</a>
</li>

<li>Tour of the Black Holes of Computing!: Floating Point<br />
<a href="http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt">http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt</a>
</li>

<li>3Dnow! Technology Manual<br />
AMD Inc., 2000</li>

<li>Intel MMX<sup>TM</sup> Technology Overview<br />
Intel corporation, 1996</li>

<li>MultiMedia eXtensions<br />
<a href="http://softpixel.com/~cwright/programming/simd/mmx.php">http://softpixel.com/~cwright/programming/simd/mmx.php</a>i
</li>

<li>AMD K5 ("K5" / "5k86")<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g5K5-c.html">http://www.pcguide.com/ref/cpu/fam/g5K5-c.html</a>
</li>

<li>Sixth Generation Processors<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g6.htm">http://www.pcguide.com/ref/cpu/fam/g6.htm</a>
</li>

<li>Great Microprocessors of the Past and Present<br />
<a href="http://www.cpushack.com/CPU/cpu1.html">http://www.cpushack.com/CPU/cpu1.html</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Very_long_instruction_word">http://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>CPU design (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CPU_design">http://en.wikipedia.org/wiki/CPU_design</a>
</li>

<li>Grafické karty a grafické akcelerátory (14)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/</a>
</li>

<li>Grafické karty a grafické akcelerátory (15)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/</a>
</li>

<li>Grafické karty a grafické akcelerátory (16)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/</a>
</li>

<li>VESA Video Modes<br />
<a href="https://wiki.osdev.org/VESA_Video_Modes">https://wiki.osdev.org/VESA_Video_Modes</a>
</li>

<li>Introduction to VESA programming<br />
<a href="http://www.monstersoft.com/tutorial1/VESA_intro.html">http://www.monstersoft.com/tutorial1/VESA_intro.html</a>
</li>

<li>Guide: VBE 2.0 graphics modes<br />
<a href="https://delorie.com/djgpp/doc/ug/graphics/vbe20.html">https://delorie.com/djgpp/doc/ug/graphics/vbe20.html</a>
</li>

<li>NASM instruction list<br />
<a href="https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html">https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

