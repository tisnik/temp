<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Mikropočítač KIM-1: jeden ze zvěstovatelů osmibitové revoluce</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Mikropočítač KIM-1: jeden ze zvěstovatelů osmibitové revoluce</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Mikropočítač KIM-1: jeden ze zvěstovatelů &bdquo;osmibitové revoluce&ldquo;</a></p>
<p><a href="#k02">2. Přichází legendární čip &ndash; MOS 6502</a></p>
<p><a href="#k03">3. Čip MOS 6502 versus konkurenční dobové mikroprocesory</a></p>
<p><a href="#k04">*** 4. Využití mikroprocesoru MOS 6502</a></p>
<p><a href="#k05">*** 5. Mikropočítač KIM-1 se představuje</a></p>
<p><a href="#k06">6. Blokové schéma mikropočítače KIM-1 a schéma zapojení</a></p>
<p><a href="#k07">*** 7. Mapování registrů a paměťových oblastí do adresního prostoru mikroprocesoru</a></p>
<p><a href="#k08">*** 8. Řízení mikropočítače KIM-1 interní klávesnicí</a></p>
<p><a href="#k09">*** 9. Ukázka programování</a></p>
<p><a href="#k10">*** 10. Funkce čipu MOS 6530</a></p>
<p><a href="#k11">*** 11. Vstupně-výstupní obvody a periferní zařízení</a></p>
<p><a href="#k12">12. Programátorský model mikroprocesoru MOS 6502</a></p>
<p><a href="#k13">*** 13. Registry a příznakové bity</a></p>
<p><a href="#k14">*** 14. Adresovací režimy, využití registrů X a Y</a></p>
<p><a href="#k15">15. Aritmetické a logické instrukce</a></p>
<p><a href="#k16">16. Skoky a rozvětvení</a></p>
<p><a href="#k17">17. Další instrukce</a></p>
<p><a href="#k18">*** 18. Jiné použití MOS 6502 v&nbsp;minimalistickém zařízení &ndash; herní konzole Atari 2600</a></p>
<p><a href="#k19">*** 19. Od MOS 6502 k&nbsp;čipu 65C816</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Mikropočítač KIM-1: jeden ze zvěstovatelů &bdquo;osmibitové revoluce&ldquo;</h2>

<p></p>

*** image ***
<p><i>Obrázek 1: </i></p>

<p></p>

*** image ***
<p><i>Obrázek 2: &bdquo;1977 Trinity&ldquo; aneb mikropočítače Commodore PET
2001-8, Apple II a TRS-80 Model I. První dva počítače jsou založeny na čipu
MOS-6502.<br /> Zdroj a licence:
https://upload.wikimedia.org/wikipedia/commons/f/ff/Trinity77.jpg</i></p>

<a href="https://i.iinfo.cz/images/611/pc6612.jpg"><img src="https://i.iinfo.cz/images/611/pc6612-prev.jpg" alt="pc6612" height="270" width="357"></a>
<p><i>Obrázek 3: Osmibitový mikroprocesor MOS 6502 byl používán jak v mnoha mikropočítačích, tak i v dalších elektronických zařízeních. Zde je zobrazena herní konzole Atari 2600 vybavená mikroprocesorem MOS 6507, což je varianta původního čipu MOS 6502, ovšem s omezeným počtem pinů adresové sběrnice.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Přichází legendární čip &ndash; MOS 6502</h2>

<p>Srdcem počítače <i>KIM-1</i>, který bude popsán v&nbsp;navazujících
kapitolách, je slavný osmibitový mikroprocesor <i>MOS 6502</i> navržený a
vyráběný společností <i>MOS Technologies</i>, který začal být komerčně nabízen
v&nbsp;září roku 1975, tj.&nbsp;zhruba rok po uvedení konkurenčních
osmibitových mikroprocesorů <i>Intel 8080</i> a <i>Motorola MC6800</i> (ovšem
rok před uvedením mikroprocesoru <i>RCA-1802</i> o němž jsme se zmiňovali <a
href="https://www.root.cz/clanky/mikropocitace-zalozene-na-cipu-rca-1802/">minule</a>
a <a
href="https://www.root.cz/clanky/rca-1802-posledni-mohykan-osmibitove-ery-mikroprocesoru/">předminule</a>).
Čip MOS 6502 navrhl <i>Chuck Peddle</i> a sedm jeho spolupracovníků (Harry
Bawcum, Ray Hirt, Terry Holdt, Mike James, Will Mathis, Bill Mensch &ndash;
důležitá postava a Rod Orgill), kteří spolu s&nbsp;ním opustili firmu Motorola.
Důvodem k&nbsp;tomu, že někteří klíčoví zaměstnanci Motorolu opustili, byla jak
tehdejší hospodářská recese v&nbsp;USA (a s&nbsp;tím související nepopulární
reorganizace ve firmě), tak i to, že se zaměstnancům nelíbilo stěhování
z&nbsp;Phoenixu do nově otevřené pobočky v&nbsp;Austinu (ovšem hlavním důvodem
může být i to, že management Motoroly ignoroval Peddleho návrhy levného
osmibitového procesoru, který by bylo možné masivně a s&nbsp;malou chybovostí
vyrábět).</p>

<p><div class="rs-tip-major">Poznámka: název společnosti odkazuje na
technologii <i>MOSFET</i> neboli
<i><u>M</u>etal–<u>O</u>xide–<u>S</u>emiconductor <u>F</u>ield-<u>E</u>ffect
<u>T</u>ransistor</i>.</div></p>

<p>Nicméně se vraťme k&nbsp;Chucku Peddlemu a firmě MOS Technologies, která
byla založena již v&nbsp;roce 1969 a zabývala se mimo jiné i výrobou čipů pro
slavný herní automat <i>Pong</i> <a
href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-6-cast-videohry-a-domaci-herni-konzole/">společnosti
Atari</a>. Prvním mikroprocesorem navrženým ve společnosti MOS Technologies byl
čip nazvaný jednoduše <i>MOS 6501</i>, který byl pinově kompatibilní
s&nbsp;konkurenční Motorolou MC6800 (samotná sada instrukcí i vnitřní stavba
mikroprocesoru však byla v&nbsp;mnoha ohledech odlišná). Možnost náhrady
mikroprocesoru MC6800 za MOS 6502 v&nbsp;zařízeních připravených původně pro
čipy řady 6800 se právníkům Motoroly samozřejmě nelíbila a po žalobě (a
následném mezisoudním vyrovnání) Chuck Peddle spolu s&nbsp;Billem Menschem
vytvořili čip pojmenovaný MOS 6502, který již nebylo možné nainstalovat do
stejné patice jako Motorolu MC6800. Mimochodem: dalším důsledkem mezisoudního
vyrovnání bylo to, že firma MOS licencovala ostatní čipy řady 6800, mj.&nbsp;i
původní Peddleho čip PIA neboli MC6820 (Chuck Peddle je ostatně podepsán pod
šestnácti patenty Motoroly). I přes binární nekompatibilitu
s&nbsp;mikroprocesorem MC6800 je však MOS 6502 dodnes legendární čip, který se
při svém uvedení na trh proslavil zejména svou velmi nízkou cenou (tehdy
pouhých 25 dolarů) umožňující stavbu levných domácích a osobních mikropočítačů
a podílel se tak nemalou měrou na &bdquo;osmibitové revoluci&ldquo;.</p>

<img src="https://i.iinfo.cz/images/560/pc6608.jpg" alt="pong" />
<p><i>Obrázek 4: Hra Pong ve variantě z  roku 1972.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Čip MOS 6502 versus konkurenční dobové mikroprocesory</h2>

<p>V&nbsp;tomto kontextu se ještě jednou (protože prakticky tutéž tabulku jsme
si již uvedli předminule) podívejme i na mikroprocesory a mikrořadiče, které
vznikly v&nbsp;první polovině sedmdesátých let minulého století (pro úplnost
jsem přidal i čipy ze druhé generace, tj.&nbsp;především <i>Zilog Z80</i> a
<i>Intel 8085</i>, oba tyto čipy stavěly na mikroprocesoru <i>Intel 8080</i>,
který vylepšovaly, popř.&nbsp;&bdquo;jen&ldquo; zmenšovaly počet nutných
pomocných obvodů a počet napájecích napětí):</p>

<table>
<tr><th>#</th><th>Čip</th><th>Vznik</th><th>Typ čipu</th></tr>
<tr><td>1</td><td>Intel 4004</td><td>1971</td><td>čtyřbitový mikroprocesor</td></tr>
<tr><td>2</td><td>Intel 8008</td><td>1972</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>3</td><td>Intel 8080</td><td>1974</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>4</td><td>Motorola 6800</td><td>1974</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>5</td><td>MOS 6502</td><td>1975</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>6</td><td>RCA 1802</td><td>1976</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>Zilog Z80</td><td>1976</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>8</td><td>Intel 8085</td><td>1976</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>9</td><td>Intel 8048</td><td>1976</td><td>osmibitový mikrořadič</td></tr>
</table>

<p><a href="#k02">V&nbsp;předchozí kapitole</a> jsme si řekli, že původní
mikroprocesor MOS 6501 byl navržen takovým způsobem, aby ho bylo možné použít
ve stejné patici (a tedy i ve stejných výrobcích), které byly určeny pro
mikroprocesor Motorola 6800. Až na základě soudního procesu bylo zapojení pinů
pozměněno, takže nový čip 6502 již nebyl v&nbsp;tomto ohledu s&nbsp;Motorolou
6800 kompatibilní. Tyto rozdíly jsou shrnuty v&nbsp;následující tabulce,
v&nbsp;níž jsou uvedené ty piny, které mají odlišnou funkci:</p>

<table>
<tr><th>Pin</th><th>Motorola 6800</th><th>MOS 6501</th><th>MOS 6502</th><th>Poznámka</th></tr>
<tr><td>2 </td><td>Halt</td><td>Ready</td><td>Ready</td><td>psáno i RDY</td></tr>
<tr><td>3 </td><td>∅1 (in)</td><td>∅1 (in)</td><td>∅1 (out)</td><td>pro složení hodinového signálu</td></tr>
<tr><td>5 </td><td>Valid memory address</td><td>Valid memory address</td><td>nezapojeno</td><td></td></tr>
<tr><td>7 </td><td>Bus available</td><td>Bus available</td><td>SYNC</td><td>&nbsp;</td></tr>
<tr><td>36</td><td>Data bus enable</td><td>Data bus enable</td><td>nezapojeno</td><td>&nbsp;</td></tr>
<tr><td>37</td><td>∅2 (in)</td><td>∅2 (in)</td><td>∅0 (in)</td><td>pro složení hodinového signálu</td></tr>
<tr><td>38</td><td>nezapojeno</td><td>nezapojeno</td><td>Set overflow flag</td><td>psáno i SO, přímo ovládá příznak O</td></tr>
<tr><td>39</td><td>režim vysoké impedance</td><td>nezapojeno</td><td>∅2 (out)</td><td></td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: připomeňme si, že všechny tři typy
mikroprocesorů byly primárně dodávány v&nbsp;pouzdru DIL se čtyřiceti piny
&ndash; doba, kdy počet adresních a datových pinů vzroste tak, aby se muselo
použít odlišné pouzdro, ještě nenastala. Dokonce i Intel 8088, jenž (i když si
to nezasloužil) způsobil revoluci osobních mikropočítačů, také používal stejné
pouzdro (popř.&nbsp;PLCC se 44 piny); až Motorola 68000, což je 16/32bitový
čip, používala větší 64pinové pouzdro DIL.</div></p>

<p><div class="rs-tip-major">Poznámka<sup>2</sup>: u těchto čipů se používaly
dvoufázové hodiny, které umožňovaly provést více kroků instrukce v&nbsp;jediném
strojovém cyklu a navíc bylo interní zapojení (počet hradel) nižší. Ovšem MOS
6502 měl logiku pro dvoufázové hodiny integrovánu přímo na čipu, takže
(externí) zapojení bylo jednodušší a současně i nekompatibilní s&nbsp;původními
čipy 6800 a 6501. Ukázku jedné z&nbsp;možných realizací generátoru hodinového
signálu pro tento osmibitový čip naleznete na stránce <a
href="http://wilsonminesco.com/6502primer/ClkGen.html">http://wilsonminesco.com/6502primer/ClkGen.html</a>.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Využití mikroprocesoru MOS 6502</h2>

<p>Osmibitové mikroprocesory <i>MOS 6502</i> či jeho upravené verze <i>MOS 65C02</i> popř.&nbsp;později <i>MOS 6510</i> byly použity v mnoha osobních i domácích počítačích, především v Apple II (jeden z nejprodávanějších počítačů v USA), osmibitových domácích mikropočítačů Atari (viz články na Rootu), Commodore C64 (pravděpodobně není zapotřebí představovat), Acorn Atom apod. Tento čip nalezneme i v&nbsp;herních konzolích. Není divu, že se stále jedná o jeden z nejpopulárnějších mikroprocesorů, které jsou dokonce dodnes vyráběny v šestnáctibitové variantě WD 65816 (pomocí nastavení příznakového bitu se tento mikroprocesor přepne do režimu 6502). Podle posledních výzkumů bude 6502 dokonce použita i v roce 3000 pro řízení ohýbacích robotů :-)





<p><a name="k05"></a></p>
<h2 id="k05">5. Mikropočítač KIM-1 se představuje</h2>

<p></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Blokové schéma mikropočítače KIM-1 a schéma zapojení</h2>

<p>Podívejme se nyní na blokové schéma mikropočítače KIM-1, které jsem
překreslil z&nbsp;originálního manuálu:</p>

*** image ***
<p><i>Obrázek 10: Blokové schéma mikropočítače KIM-1.</i></p>

<p>Barevné odlišení skupin vodičů:</p>

<table>
<tr><th>#</th><th>Barva</th><th>Význam</th></tr>
<tr><td>1</td><td>červená</td><td>adresová sběrnice</td></tr>
<tr><td>2</td><td>modrá</td><td>datová sběrnice</td></tr>
<tr><td>3</td><td>zelená</td><td>řídicí signály</td></tr>
<tr><td>4</td><td>žlutá</td><td>vstupní a výstupní signály</td></tr>
</table>

<p>V&nbsp;blokovém schématu jsou zobrazeny všechny čtyři hlavní čipy
s&nbsp;vysokou integrací, které tvoří základ mikropočítače KIM-1. Jedná se
pochopitelně především o vlastní mikroprocesor MOS 6502, který je doplněn o
dvojici čipů MOS 6530 a taktéž o paměť RAM o kapacitě jednoho kilobajtu. Na
desce mikropočítače jsou rozvedeny tři sběrnice &ndash; adresová (lze rozšířit
až do plných 16 bitů), datová (8 bitů) a několik řídicích signálů. Dále zde
nalezneme různé vstupní popř.&nbsp;výstupní signály. Adresová sběrnice,
resp.&nbsp;přesněji řečeno generování adres, je v&nbsp;tomto mikropočítači
řízeno pouze mikroprocesorem (například u osmibitových Atari však dokáže adresy
generovat i čip ANTIC), datová sběrnice je podle očekávání obousměrná. Vstupní
a výstupní signály umožňují připojení externí klávesnice, akustického
magnetofonu s&nbsp;dosti primitivním záznamem dat a dokonce i dálnopisu (a
nepřímo tedy i minipočítačového terminálu).</p>

<p>Podrobnější schéma zapojení zobrazené až na úroveň jednotlivých vodičů a
pomocných součástek naleznete na adrese <a
href="http://www.6502.org/trainers/buildkim/kim.gif">http://www.6502.org/trainers/buildkim/kim.gif</a>.</p>

<p><div class="rs-tip-major">Poznámka: z&nbsp;podrobného schématu je patrné, že
čipy 6530 jsou připojeny přímo na adresovou sběrnici bez výběrových signálů
typu <i>chip select</i>. Ve skutečnosti se oba čipy od sebe odlišují (mají
čísla 6530-002 a 6530-003, jinou interní masku) a reagují na odlišný rozsah
adres.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Mapování registrů a paměťových oblastí do adresního prostoru mikroprocesoru</h2>

K0   $0000 - $03FF    1024 bytes of RAM (8*6102)
K1   $0400 - $07FF    free
K2   $0800 - $0BFF    free
K3   $0C00 - $0FFF    free
K4   $1000 - $13FF    free
K5   $1400 - $16FF    free
     $1700 - $173F    I/O, timer of 6530-003
     $1740 - $177F    I/O, timer of 6530-002
     $1780 - $17BF    64 bytes RAM of 6530-003
     $17C0 - $17FF    64 bytes RAM of 6530-002
K6   $1800 - $1BFF    1024 bytes ROM of 6530-003
K7   $1C00 - $1FFF    1024 bytes ROM of 6530-002

K0..K7 = output lines from 74145

                                                                        
| ADDRESS |      AREA      | LABEL |              FUNCTION               |
|         |                |       |                                     |
|  00EF   |                | PCL   | Program Counter - Low Order Byte    |
|  00F0   |                | PGH   | Program Counter - High Order Byte   |
|  00F1   |     Machine    | P     | Status Register                     |
|  00F2   |     Register   | SF    | Stack Pointer                       |
|         |     Storage    |       |                                     |
|  00F3   |     Buffer     | A     | Accumulator                         |
|  00F4   |                | Y     | Y-Index Register                    |
|  00F5   |                | X     | X-Index Register                    |
|  1700   |                | PAD   | 6530-003 A Data Register            |
|  1701   |   Application  | PADD  | 6530-003 A Data Direction Register  |
|  1702   |        I/O     | PBD   | 6530-003 B Data Register            |
|  1703   |                | PBDD  | 6530-003 B Data Direction Register  |
|  1704   |                |       | 6530-003 Interval Timer             |
|         | Interval Timer |       |   (See Section 1.6 of               |
|         |                |       |    Hardware Manual)                 |
|  170F   |                |       |                                     |
|  17F5   |                | SAL   | Starting Address - Low Order Byte   |
|  17F6   |   Audio Tape   | SAH   | Starting Address - High Order Byte  |
|  17F7   |   Load & Dump  | EAL   | Ending Address - Low Order Byte     |
|  17F8   |                | EAH   | Ending Address - High Order Byte    |
|  17F9   |                | ID    | File Identification Number          |
|  l7FA   |                | NMIL  | NMI Vector - Low Order Byte         |
|  l7FB   |                | NMIH  | NMI Vector - High Order Byte        |
|  l7FC   |   Interrupt    | RSTL  | RST Vector - Low Order Byte         |
|         |    Vectors     |       |                                     |
|  17FD   |                | RSTH  | RST Vector - High Order Byte        |
|  l7FE   |                | IRQL  | IRQ Vector - Low Order Byte         |
|  17FF   |                | IRQH  | IRQ Vector - High Order Byte        |
|  1800   |                | DUMPT | Start Address - Audio Tape Dump     |
|         |  Audio Tape    |       |                                     |
|  1873   |                | LOADT | Start Address - Audio Tape Load     |
|  1C00   | STOP Key + SST |       | Start Address for NMI using KIM     |
|         |                |       | "Save Nachine" Routine (Load in     |
|         |                |       | 17FA & 17FB)                        |
|  17F7   |   Paper Tape   | EAL   | Ending Address - Low Order Byte     |
|  17F8   |    Dump (Q)    | EAH   | Ending Address - High Order Byte    |


šest číslic
čtyři ukazují adresu
dva kód instrukce nebo dat



<p><a name="k08"></a></p>
<h2 id="k08">8. Řízení mikropočítače KIM-1 interní klávesnicí</h2>

*** image ***
<p><i>Obrázek 11: </i></p>

AD - režim zadávání adres
DA - režim zápisu dat
+ - zvýšení adresy beze změny režimu
0-F zápis hodnoty v režimu zadávání adres nebo zápisu dat
PC - zobrazení obsahu programového čítače na displeji
RS - provedení resetu systému
GO - spuštění programu od adresy zobrazené na displeji (režim AD)
ST - zastavení programu a návrat do monitoru

<p><div class="rs-tip-major">Poznámka: povšimněte si, že tento mikropočítač
nebyl navržen (zapojen a naprogramován) takovým způsobem, aby dokázal provádět
krokování po jednotlivých instrukcích.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Ukázka programování</h2>

POINTL               = $FA
POINTH               = $FB
START                = $1C4F
&nbsp;
0000                 VALl
0001                 VAL2
0002       18        PROG    CLC
0003       A5 00             LDA VALl
0005       65 01             ADC VAL2
0007       85 FA             STA POINTL
0009       A9 00             LDA #00
000B       85 FB             STA POINTH
000D       4C 4F 1C          JMP START

Press Keys          See On Display          Step #

 [AD]                   xxxx xx                1
 [0]  [0] [0] [2]       0002 xx                2
 [DA]                   0002 xx                3
          [1] [8]       0002 18                4
 [+]      [A] [5]       0003 A5                5
 [+]      [0] [0]       0004 00                6
 [+]      [6] [5]       0005 65                7
 [+]      [0] [1]       0006 01                8
 [+]      [8] [5]       0007 85                9
 [+]      [F] [A]       0008 FA               10
 [+]      [A] [9]       0009 A9               11
 [+]      [0] [0]       000A 00               12
 [+]      [8] [5]       000B 85               13
 [+]      [F] [B]       000C FB               14
 [+]      [4] [C]       000D 4C               15
 [+]      [4] [F]       000E 4F               16
 [+]      [1] [C]       000F 1C               17

 zápis měnitelných hodnot
      Press Keys              See On Display          Step #

      [AD]                       000F 1C                17A
      [0]  [0] [F] [1]           00F1 xx                17B
      [DA]     [0] [0]           00F1 00                18
      [AD]                       00F1 00                19
      [0]  [0] [0] [0]           0000 xx                20
      [DA]                       0000 02                21
      [+]      [0] [3]           0001 03                22
      [+]          [GO]          0002 18                23


<p><a name="k10"></a></p>
<h2 id="k10">10. Funkce čipu MOS 6530</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vstupně-výstupní obvody a periferní zařízení</h2>


<p><a name="k12"></a></p>
<h2 id="k12">12. Programátorský model mikroprocesoru MOS 6502</h2>

<p>Z&nbsp;programátorského hlediska se MOS 6502 dosti podstatným způsobem
odlišuje jak od Intelu 8080, tak i od čipu RCA-1802. Zatímco procesor Intel
8080 obsahoval poměrně rozsáhlou sadu obecně použitelných osmibitových registrů
(A, B, C, D, E, H a L), měl 6502 pouze jeden akumulátor (registr A) a dva
index-registry X a Y. Oba typy procesorů samozřejmě obsahovaly další speciální
registry, jako ukazatel na vrchol zásobníku (SP), programový čítač (PC) a
příznakový registr (F).</p>

<p>Na první pohled by se mohlo zdát, že počet registrů mikroprocesoru MOS 6502
je nedostatečný pro provádění většiny aritmetických či logických operací. Ve
skutečnosti tomu tak není, protože tento procesor podporuje načtení druhého
operandu z&nbsp;operační paměti (rychlost RAM nebyla tak limitujícím faktorem,
jako je tomu dnes). U mnoha instrukcí je podporován větší počet adresovacích
režimů, celkově je možné operandy strojových instrukcí adresovat třinácti
navzájem odlišnými způsoby. Při adresování se často používají oba
index-registry, které je možné inkrementovat a dekrementovat &ndash; tím je
umožněno provádění blokových přenosů dat, mazání souvislé oblasti paměti
atd.</p>

<p>Mikroprocesor MOS 6502 také zavádí pojem takzvané <i>nulté stránky
paměti</i>. Jedná se o prvních 256 bytů operační paměti, kterou je možné
adresovat zjednodušeným způsobem. Adresa libovolné buňky z&nbsp;nulté stránky
paměti je totiž uložena na jednom byte v&nbsp;operačním kódu instrukce, takže
celá instrukce může být kratší (typicky pouze dva byte). Současně je i
provádění instrukcí adresujících nultou stránku paměti rychlejší než při
šestnáctibitovém adresování. Z&nbsp;tohoto důvodu se můžeme na nultou stránku
paměti dívat jako na pole 256 registrů resp.&nbsp;alternativně na 128
plnohodnotně využitelných 16bitových ukazatelů (musíme si uvědomit, že operační
paměti byly v&nbsp;té době stejně rychlé jako procesor, takže čtení či zápis
dat do paměti byla záležitost jednoho či dvou cyklů). Myšlenka nulté stránky
paměti byla dále rozšířena v&nbsp;procesoru Motorola 6809, kde se však tato
stránka dala v&nbsp;adresovatelné paměti posouvat na libovolné místo.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Registry a příznakové bity</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Adresovací režimy, využití registrů X a Y</h2>

<table>
<tr><th>#</th><th>Zápis</th><th>Název</th><th>Assembler</th><th>Stručný popis</th></tr>
<tr><td>1</td><td></td><td></td><td></td><td></td></tr>
<tr><td>2</td><td></td><td></td><td></td><td></td></tr>
<tr><td>3</td><td></td><td></td><td></td><td></td></tr>
<tr><td>4</td><td></td><td></td><td></td><td></td></tr>
<tr><td>5</td><td></td><td></td><td></td><td></td></tr>
<tr><td>6</td><td></td><td></td><td></td><td></td></tr>
<tr><td>7</td><td></td><td></td><td></td><td></td></tr>
<tr><td>8</td><td></td><td></td><td></td><td></td></tr>
<tr><td>9</td><td></td><td></td><td></td><td></td></tr>
<tr><td>10</td><td></td><td></td><td></td><td></td></tr>
<tr><td>11</td><td></td><td></td><td></td><td></td></tr>
<tr><td>12</td><td></td><td></td><td></td><td></td></tr>
<tr><td>13</td><td></td><td></td><td></td><td></td></tr>
</table>

A		Accumulator	 	INS A	 	operand is AC (implied single byte instruction)
abs		absolute	 	INS $LLHH	 	operand is address $HHLL *
abs,X		absolute, X-indexed	 	INS $LLHH,X	 	operand is address; effective address is address incremented by X with carry **
abs,Y		absolute, Y-indexed	 	INS $LLHH,Y	 	operand is address; effective address is address incremented by Y with carry **
#		immediate	 	INS #$BB	 	operand is byte BB
impl		implied	 	INS	 	operand implied
ind		indirect	 	INS ($LLHH)	 	operand is address; effective address is contents of word at address: C.w($HHLL)
X,ind		X-indexed, indirect	 	INS ($LL,X)	 	operand is zeropage address; effective address is word in (LL + X, LL + X + 1), inc. without carry: C.w($00LL + X)
ind,Y		indirect, Y-indexed	 	INS ($LL),Y	 	operand is zeropage address; effective address is word in (LL, LL + 1) incremented by Y with carry: C.w($00LL) + Y
rel		relative	 	INS $BB	 	branch target is PC + signed offset BB ***
zpg		zeropage	 	INS $LL	 	operand is zeropage address (hi-byte is zero, address = $00LL)
zpg,X		zeropage, X-indexed	 	INS $LL,X	 	operand is zeropage address; effective address is address incremented by X without carry **
zpg,Y		zeropage, Y-indexed	 	INS $LL,Y	 	operand is zeropage address; effective address is address incremented by Y without carry **



<p><a name="k15"></a></p>
<h2 id="k15">15. Aritmetické a logické instrukce</h2>

<p>Mikroprocesor <i>MOS 6502</i> obsahuje pouze 56 instrukcí, přičemž mnoho
instrukcí podporuje více adresovacích režimů a tudíž i více variant (i tak však
zdaleka není obsazeno všech 256 možných kombinací &ndash; ty byly postupně
obsazovány v&nbsp;dalších procesorech, popř.&nbsp;na původním MOS 6502 měly
sice <a href="http://nparker.llx.com/a2/opcodes.html">oficiálně
nedokumentovanou, ovšem logickou/očekávanou funkci</a>). Nejprve si popíšeme
aritmetické a logické instrukce mikroprocesoru MOS 6502. Většina dále popsaných
instrukcí jako svůj první operand akceptuje akumulátor a druhým operandem může
být konstanta popř.&nbsp;hodnota načtená z&nbsp;operační paměti s&nbsp;využitím
výše popsaných adresovacích režimů. Výjimkou jsou instrukce s&nbsp;jediným
operandem, v&nbsp;nichž nemusí vystupovat akumulátor popř.&nbsp;instrukce,
v&nbsp;nichž je přímo operand vyjádřen názvem instrukce (<strong>INX</strong>
atd.):</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td> 1</td><td>ADC</td><td>add with carry</td><td>součet hodnoty s&nbsp;akumulátorem (včetně přetečení)</td></tr>
<tr><td> 2</td><td>SBC</td><td>subtract with carry</td><td>odečtení hodnoty od akumulátoru (včetně výpůjčky)</td></tr>
<tr><td> 3</td><td>AND</td><td>and with accumulator</td><td>logické AND s&nbsp;akumulátorem</td></tr>
<tr><td> 4</td><td>ORA</td><td>or with accumulator</td><td>logické OR s&nbsp;akumulátorem</td></tr>
<tr><td> 5</td><td>EOR</td><td>exclusive or with accumulator</td><td>logické XOR s&nbsp;akumulátorem</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 6</td><td>INC</td><td>increment</td><td>zvýšení hodnoty o 1 (kupodivu nelze s&nbsp;akumulátorem, ovšem s&nbsp;pamětí ano)</td></tr>
<tr><td> 7</td><td>INX</td><td>increment X</td><td>zvýšení hodnoty index registru X o 1 </td></tr>
<tr><td> 8</td><td>INY</td><td>increment Y</td><td>zvýšení hodnoty index registru Y o 1 </td></tr>
<tr><td> 9</td><td>DEC</td><td>decrement</td><td>snížení hodnoty o 1 (opět nelze s&nbsp;akumulátorem)</td></tr>
<tr><td>10</td><td>DEX</td><td>decrement X</td><td>snížení hodnoty index registru X o 1 </td></tr>
<tr><td>11</td><td>DEY</td><td>decrement Y</td><td>snížení hodnoty index registru Y o 1 </td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>CMP</td><td>compare with accumulator</td><td>odečtení hodnoty od akumulátoru bez zápisu výsledku</td></tr>
<tr><td>13</td><td>CPX</td><td>compare with X</td><td>odečtení hodnoty od index registru X bez zápisu výsledku</td></tr>
<tr><td>14</td><td>CPY</td><td>compare with Y</td><td>odečtení hodnoty od index registru Y bez zápisu výsledku</td></tr>
<tr><td>15</td><td>BIT</td><td>bit test</td><td>logické AND bez uložení výsledků (změní se jen příznakové bity)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>ASL</td><td>arithmetic shift left</td><td>aritmetický posun doleva o jeden bit</td></tr>
<tr><td>17</td><td>LSR</td><td>logical shift right</td><td>logický posun doprava o jeden bit</td></tr>
<tr><td>18</td><td>ROL</td><td>rotate left</td><td>rotace doleva o jeden bit</td></tr>
<tr><td>19</td><td>ROR</td><td>rotate right</td><td>rotace doprava o jeden bit</td></tr>
</table>



<p><a name="k16"></a></p>
<h2 id="k16">16. Skoky a rozvětvení</h2>

<p>Následují instrukce skoku, popř.&nbsp;skoku a výskoku ze subrutiny
(podprogramu). Skákat je možné v&nbsp;rámci celé adresovatelné RAM, tedy
v&nbsp;rozsahu 64kB:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>20</td><td>JMP</td><td>jump</td><td>skok (existuje několik adresovacích režimů)</td></tr>
<tr><td>21</td><td>JSR</td><td>jump to subroutine</td><td>skok do podprogramu s&nbsp;uložením návratové adresy na zásobník</td></tr>
<tr><td>22</td><td>RTS</td><td>return from subroutine</td><td>návrat z&nbsp;podprogramu</td></tr>
<tr><td>23</td><td>RTI</td><td>return from interrupt</td><td>návrat z&nbsp;prerušovací rutiny</td></tr>
</table>

<p>Relativní skoky v&nbsp;rámci rozsahu -128 až 127 jsou provedeny na základě
vyhodnocení nějaké podmínky, konkrétně testování zvoleného příznakového bitu.
Oproti Motorole 6800 byl počet podmíněných skoků snížen na polovinu, takže
některé kombinace podmínek neexistují (včetně <strong>BRA</strong> a
<strong>BRN</strong>):</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>24</td><td>BCC</td><td>branch on carry clear</td><td>rozvětvení za podmínky C==0</td></tr>
<tr><td>25</td><td>BCS</td><td>branch on carry set</td><td>rozvětvení za podmínky C==1</td></tr>
<tr><td>26</td><td>BEQ</td><td>branch on equal (zero set)</td><td>rozvětvení za podmínky Z==1</td></tr>
<tr><td>27</td><td>BMI</td><td>branch on minus (negative set)</td><td>rozvětvení za podmínky N==1</td></tr>
<tr><td>28</td><td>BNE</td><td>branch on not equal (zero clear)</td><td>rozvětvení za podmínky Z==0</td></tr>
<tr><td>29</td><td>BPL</td><td>branch on plus (negative clear)</td><td>rozvětvení za podmínky N==0</td></tr>
<tr><td>30</td><td>BVC</td><td>branch on overflow clear</td><td>rozvětvení za podmínky O==0</td></tr>
<tr><td>31</td><td>BVS</td><td>branch on overflow set</td><td>rozvětvení za podmínky O==1</td></tr>
</table>



<p><a name="k17"></a></p>
<h2 id="k17">17. Další instrukce</h2>

<p>Další skupinou instrukcí jsou instrukce určené pro přesuny dat mezi operační
pamětí a registry, popř.&nbsp;mezi registry navzájem:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>32</td><td>LDA</td><td>load accumulator</td><td>načtení bajtu do akumulátoru</td></tr>
<tr><td>33</td><td>LDX</td><td>load X</td><td>načtení bajtu do registru X</td></tr>
<tr><td>34</td><td>LDY</td><td>load Y</td><td>načtení bajtu do registru Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>35</td><td>STA</td><td>store accumulator</td><td>uložení hodnoty akumulátoru</td></tr>
<tr><td>36</td><td>STX</td><td>store X</td><td>uložení hodnoty registru X</td></tr>
<tr><td>37</td><td>STY</td><td>store Y</td><td>uložení hodnoty registru Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>38</td><td>TAX</td><td>transfer accumulator to X</td><td>přesun X=A</td></tr>
<tr><td>39</td><td>TAY</td><td>transfer accumulator to Y</td><td>přesun Y=A</td></tr>
<tr><td>40</td><td>TSX</td><td>transfer stack pointer to X</td><td>přesun X=SP</td></tr>
<tr><td>41</td><td>TXA</td><td>transfer X to accumulator</td><td>přesun A=X</td></tr>
<tr><td>42</td><td>TXS</td><td>transfer X to stack pointer</td><td>přesun SP=X</td></tr>
<tr><td>43</td><td>TYA</td><td>transfer Y to accumulator</td><td>přesun A=Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>44</td><td>PHA</td><td>push accumulator</td><td>uložení akumulátoru na zásobník</td></tr>
<tr><td>45</td><td>PHP</td><td>push processor status (SR)</td><td>uložení příznaků na zásobník</td></tr>
<tr><td>46</td><td>PLA</td><td>pull accumulator</td><td>obnovení akumulátoru ze zásobníku</td></tr>
<tr><td>47</td><td>PLP</td><td>pull processor status (SR)</td><td>obnovení příznaků ze zásobníku</td></tr>
</table>

<p>Několik instrukcí pracuje s&nbsp;příznakovými bity:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>48</td><td>CLC</td><td>clear carry</td><td>C=0</td></tr>
<tr><td>49</td><td>CLD</td><td>clear decimal</td><td>D=0</td></tr>
<tr><td>50</td><td>CLI</td><td>clear interrupt disable</td><td>I=0</td></tr>
<tr><td>51</td><td>CLV</td><td>clear overflow</td><td>V=0</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>52</td><td>SEC</td><td>set carry</td><td>C=1</td></tr>
<tr><td>53</td><td>SED</td><td>set decimal</td><td>D=1</td></tr>
<tr><td>54</td><td>SEI</td><td>set interrupt disable</td><td>I=1</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že zdaleka ne všechny
příznaky je možné přímo nastavit nebo vynulovat. Ovšem mnoho příznaků je
nastavováno či nulováno jinými instrukcemi, například <strong>BIT</strong> či
<strong>CMP</strong>, čehož je možné využít (při výpočtech vlastně musíme přímo
manipulovat jen s&nbsp;příznakem C kvůli rotacím).</div></p>

<p>Zbývají už jen dvě instrukce nezařazené do žádné výše uvedené skupiny:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>55</td><td>NOP</td><td>no operation</td><td>přechod na další instrukci</td></tr>
<tr><td>56</td><td>BRK</td><td>break / interrupt</td><td>uložení PC a SR na zásobník, zastavení (návrat do monitoru)</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: instrukční sadu mikroprocesoru MOS 6502
si lze dokonce odzkoušet na prakticky jakémkoli současném počítači či tabletu,
a to bez nutnosti instalace assembleru a/nebo simulátoru (popř. emulátoru
některého osmibitového domácího mikropočítače). Na stránce <a
href="http://6502asm.com/">http://6502asm.com/</a> se totiž nachází vydařený
simulátor virtuálního počítače vybaveného jednoduchým displejem, klávesnicí a
v&nbsp;neposlední řadě právě mikroprocesorem MOS 6502. Tento simulátor, jenž
byl naprogramovaný Stianem Sorengem, obsahuje editor (ve skutečnosti se
v&nbsp;současné verzi jedná o pouhé textové pole umístěné na HTML stránce), do
něhož je možné zapsat program v&nbsp;jazyku symbolických instrukcí a následně
tento program přeložit vestavěným assemblerem a poté i spustit.</div></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Jiné použití MOS 6502 v&nbsp;minimalistickém zařízení &ndash; herní konzole Atari 2600</h2>

<a href="https://i.iinfo.cz/images/165/pc6613.png"><img src="https://i.iinfo.cz/images/165/pc6613-prev.png" alt="pc6613" height="270" width="351"></a>
<p><i>Obrázek X: Schéma zapojení herní konzole Atari 2600 s osmibitovým mikroprocesorem MOS 6507.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Od MOS 6502 k&nbsp;čipu 65C816</h2>

Další vývoj řady MOS 6502 se ubíral několika směry. Jednou z&nbsp;větví je šestnáctibitový čip 65C816GS. Zajímavé je, že vývoj tohoto mikroprocesoru byl zahájen na základě dohody mezi společností Apple a firmou WDC, v níž byl tento čip následně navržen a vyroben. CEO a současně i zakladatelem firmy WDC byl totiž známý inženýr Bill Mensch, který se v minulosti podílel na návrhu dvou osmibitových mikroprocesorů, které dost významným způsobem ovlivnily vývoj výpočetní techniky na přelomu sedmdesátých a osmdesátých let minulého století. Bill Mensch spolunavrhoval čip Motorola 6800 i podpůrné obvody pro tento mikroprocesor a posléze se podílel i na návrhu MOS 6502, takže není divu, že po přechodu do společnosti WDC prosadil, aby byly nové mikroprocesory navrhované, vyráběné a licencované touto firmou postaveny na základech čipu MOS 6502. Prvním z těchto čipů byl WDC 65C02, což byla varianta původního NMOS čipu 6502, která navíc obsahovala opravy některých chyb v původním návrhu tohoto mikroprocesoru (nepřímé skoky na adresy ležící na konci stránek atd.) a rozšíření jeho instrukční sady.

Odtud už byl vlastně jen docela malý krůček k tomu, aby se osmibitový čip WDC 65C02 rozšířil na šestnáctibitový čip WDC 65c816. Rozklíčovat jméno tohoto mikroprocesoru je při znalosti jeho historie snadné: 65 se odkazuje na řadu 6502, c značí výrobní technologii CMOS (mimochodem: plně statickou – díky malému počtu registrů je bylo možné implementovat formou klopných obvodů, což mj. umožňovalo plynule zmenšovat frekvenci hodinového signálu až na nulu) a dvojice čísel 8–16 znamená, že tento mikroprocesor mohl pracovat v téměř 100% kompatibilním osmibitovém režimu 6502, nebo mohl být naopak přepnutý do režimu 16bitového. Právě tato vlastnost byla vyžadována zástupci společnosti Apple, kteří potřebovali, aby Apple II GS mohl být zpětně kompatibilní s úspěšnou řadou osmibitových mikropočítačů Apple ][ (prostá emulace byla vzhledem k relativně nízkému výkonu tehdejších čipů prakticky nemyslitelná).



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>6502 PRIMER: Building your own 6502 computer<br />
<a href="http://wilsonminesco.com/6502primer/">http://wilsonminesco.com/6502primer/</a>
</li>

<li>KIM-1<br />
<a href="https://en.wikipedia.org/wiki/KIM-1">https://en.wikipedia.org/wiki/KIM-1</a>
</li>

<li>KIM-1 User Manual<br />
<a href="https://kim-1.com/docs/usrman.htm">https://kim-1.com/docs/usrman.htm</a>
</li>

<li>What is the KIM-1?<br />
<a href="http://www.6502.org/trainers/buildkim/kim.htm">http://www.6502.org/trainers/buildkim/kim.htm</a>
</li>

<li>Build Your Own KIM-1 with Ruud Baltissen<br />
<a href="http://www.6502.org/trainers/buildkim/buildkim.htm">http://www.6502.org/trainers/buildkim/buildkim.htm</a>
</li>

<li>6502 Instruction Set<br />
<a href="https://www.masswerk.at/6502/6502_instruction_set.html">https://www.masswerk.at/6502/6502_instruction_set.html</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Single-board computer<br />
<a href="https://en.wikipedia.org/wiki/Single-board_computer">https://en.wikipedia.org/wiki/Single-board_computer</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2his­tory.org/">http://apple2his­tory.org/</a>
</li>

<li>www.6502.org<br />
<a href="http://www.6502­.org/">http://www.6502­.org/</a>
</li>

<li>6502 PRIMER: Building your own 6502 computer &ndash; clock generator<br />
<a href="http://wilsonminesco.com/6502primer/ClkGen.html">http://wilsonminesco.com/6502primer/ClkGen.html</a>
</li>

<li>RCA 1802 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/RCA_1802">https://en.wikipedia.org/wiki/RCA_1802</a>
</li>

<li>Great Microprocessors of the Past and Present (V 13.4.0)<br />
<a href="http://www.cpushack.com/CPU/cpu.html">http://www.cpushack.com/CPU/cpu.html</a>
</li>

<li>Chip Hall of Fame: RCA CDP 1802<br />
<a href="https://spectrum.ieee.org/semiconductors/processors/chip-hall-of-fame-rca-cdp-1802">https://spectrum.ieee.org/semiconductors/processors/chip-hall-of-fame-rca-cdp-1802</a>
</li>

<li>The CPUs of Spacecraft: Computers in Space<br />
<a href="http://cpushack.com/space-craft-cpu.html">http://cpushack.com/space-craft-cpu.html</a>
</li>

<li>Part I: RCA 1802, weirdness at its best (1974)<br />
<a href="http://www.cpushack.com/CPU/cpu2.html#Sec2Part1">http://www.cpushack.com/CPU/cpu2.html#Sec2Part1</a>
</li>

<li>Embedded Processor and Microcontroller primer and FAQ<br />
<a href="http://www.faqs.org/faqs/microcontroller-faq/primer/">http://www.faqs.org/faqs/microcontroller-faq/primer/</a>
</li>

<li>COSMAC ELF: The CDP1802’s Place in Microcomputing History<br />
<a href="http://www.cosmacelf.com/">http://www.cosmacelf.com/</a>
</li>

<li>Cosmac 1802<br />
<a href="http://www.nyx.net/~lturner/public_html/Cosmac.html">http://www.nyx.net/~lturner/public_html/Cosmac.html</a>
</li>

<li>CDP1802AC/3: High-Reliability CMOS 8-Bit Microprocessor<br />
<a href="https://www.renesas.com/eu/en/www/doc/datasheet/cdp1802ac-3.pdf">https://www.renesas.com/eu/en/www/doc/datasheet/cdp1802ac-3.pdf</a>
</li>

<li>A Short Course In Programming<br />
<a href="http://www.ittybittycomputers.com/IttyBitty/ShortCor.htm">http://www.ittybittycomputers.com/IttyBitty/ShortCor.htm</a>
</li>

<li>The 1802 Instruction Set<br />
<a href="https://www.atarimagazines.com/computeii/issue3/page52.php">https://www.atarimagazines.com/computeii/issue3/page52.php</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Osmibitové mikroprocesory a mikrořadiče firmy Motorola (1)<br />
<a href="https://www.root.cz/clanky/osmibitove-mikroprocesory-a-mikroradice-firmy-motorola-1/">https://www.root.cz/clanky/osmibitove-mikroprocesory-a-mikroradice-firmy-motorola-1/</a>
</li>

<li>Mikrořadiče a jejich použití v jednoduchých mikropočítačích<br />
<a href="https://www.root.cz/clanky/mikroradice-a-jejich-pouziti-v-jednoduchych-mikropocitacich/">https://www.root.cz/clanky/mikroradice-a-jejich-pouziti-v-jednoduchych-mikropocitacich/</a>
</li>

<li>Mikrořadiče a jejich aplikace v jednoduchých mikropočítačích (2)<br />
<a href="https://www.root.cz/clanky/mikroradice-a-jejich-aplikace-v-jednoduchych-mikropocitacich-2/">https://www.root.cz/clanky/mikroradice-a-jejich-aplikace-v-jednoduchych-mikropocitacich-2/</a>
</li>

<li>Československé osmibitové počítače<br />
<a href="https://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace/">https://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace/</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>COSMAC 1802: history of microprocessors in space<br />
<a href="https://www.retrotechnology.com/memship/1802_spacecraft.html">https://www.retrotechnology.com/memship/1802_spacecraft.html</a>
</li>

<li>COSMAC 1802 on AMSATs running IPS<br />
<a href="https://www.retrotechnology.com/memship/amsat.html">https://www.retrotechnology.com/memship/amsat.html</a>
</li>

<li>Technické informace o sondě Galileo<br />
<a href="https://www.retrotechnology.com/memship/galileo.txt">https://www.retrotechnology.com/memship/galileo.txt</a>
</li>

<li>COSMAC “ELF” Microcomputer Trainer User’s Manual:<br />
<a href="http://www.cosmacelf.com/publications/books/cosmac-elf-manual.pdf">http://www.cosmacelf.com/publications/books/cosmac-elf-manual.pdf</a>
</li>

<li>RCA COSMAC MICROPROCESSOR<br />
<a href="http://www.decodesystems.com/cosmac/">http://www.decodesystems.com/cosmac/</a>
</li>

<li>Netronics ELF II<br />
<a href="https://oldcomputers.net/netronics-elf.html">https://oldcomputers.net/netronics-elf.html</a>
</li>

<li>Netronics Elf II<br />
<a href="http://www.qwkslva.com/Museum/Netronics_Elf/netronics_elf.html">http://www.qwkslva.com/Museum/Netronics_Elf/netronics_elf.html</a>
</li>

<li>Assorted COSMAC Computers<br />
<a href="http://www.cosmacelf.com/gallery/assorted-cosmac-computers.html">http://www.cosmacelf.com/gallery/assorted-cosmac-computers.html</a>
</li>

<li>RCA 1802 COSMAC (plocha čipu)<br />
<a href="http://visual6502.org/images/pages/RCA_1802_die_shots.html">http://visual6502.org/images/pages/RCA_1802_die_shots.html</a>
</li>

<li>Joseph Weisbecker<br />
<a href="https://en.wikipedia.org/wiki/Joseph_Weisbecker">https://en.wikipedia.org/wiki/Joseph_Weisbecker</a>
</li>

<li>Joe Weisbecker Video Game Collection<br />
<a href="https://digital.hagley.org/weisbecker">https://digital.hagley.org/weisbecker</a>
</li>

<li>CDP1802A<br />
<a href="https://www.renesas.com/us/en/products/space-harsh-environment/harsh-environment/microprocessors-peripherals/device/CDP1802A.html#overviewInfo">https://www.renesas.com/us/en/products/space-harsh-environment/harsh-environment/microprocessors-peripherals/device/CDP1802A.html#overviewInfo</a>
</li>

<li>Grafické karty a grafické akcelerátory (7)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-7/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-7/</a>
</li>

<li>Osmibitové mikrořadiče Rabbit: praví dědicové mikroprocesoru Zilog Z80<br />
<a href="https://www.root.cz/clanky/osmibitove-mikroradice-rabbit-pravi-dedicove-mikroprocesoru-zilog-z80">https://www.root.cz/clanky/osmibitove-mikroradice-rabbit-pravi-dedicove-mikroprocesoru-zilog-z80</a>
</li>

<li>Čtyřicet let existence slavných mikroprocesorů řady Motorola 68000<br />
<a href="https://www.root.cz/clanky/ctyricet-let-existence-slavnych-mikroprocesoru-rady-motorola-68000/">https://www.root.cz/clanky/ctyricet-let-existence-slavnych-mikroprocesoru-rady-motorola-68000/</a>
</li>

<li>Intel 8008 Instruction Set<br />
<a href="https://www.bytecollector.com/archive/mark_8/My_Mark-8_Info/Software/8008_ReferenceCard.PDF">https://www.bytecollector.com/archive/mark_8/My_Mark-8_Info/Software/8008_ReferenceCard.PDF</a>
</li>

<li>Intel 8008 instruction set<br />
<a href="https://www.pastraiser.com/cpu/i8008/i8008_opcodes.html">https://www.pastraiser.com/cpu/i8008/i8008_opcodes.html</a>
</li>

<li>Silicon on sapphire<br />
<a href="https://en.wikipedia.org/wiki/Silicon_on_sapphire">https://en.wikipedia.org/wiki/Silicon_on_sapphire</a>
</li>

<li>COSMAC ELF Lives Again, In FPGA<br />
<a href="https://hackaday.com/2020/01/23/cosmac-elf-lives-again-in-fpga/">https://hackaday.com/2020/01/23/cosmac-elf-lives-again-in-fpga/</a>
</li>

<li>verilog1802<br />
<a href="https://github.com/jamesbowman/verilog1802">https://github.com/jamesbowman/verilog1802</a>
</li>

<li>1802 FIG FORTH<br />
<a href="https://www.retrotechnology.com/memship/figforth_1802.html">https://www.retrotechnology.com/memship/figforth_1802.html</a>
</li>

<li>SuperElf<br />
<a href="http://oldcomputermuseum.com/super_elf.html">http://oldcomputermuseum.com/super_elf.html</a>
</li>

<li>COSMAC na Hackaday<br />
<a href="https://hackaday.com/tag/cosmac/">https://hackaday.com/tag/cosmac/</a>
</li>

<li>Vintage COSMAC Elf Is Pretty Close To Original<br />
<a href="https://hackaday.com/2017/03/06/vintage-cosmac-elf-is-pretty-close-to-original/">https://hackaday.com/2017/03/06/vintage-cosmac-elf-is-pretty-close-to-original/</a>
</li>

<li>KIM Uno: a DIY clone of the KIM-1<br />
<a href="https://obsolescence.wixsite.com/obsolescence/kim-uno-summary-c1uuh">https://obsolescence.wixsite.com/obsolescence/kim-uno-summary-c1uuh</a>
</li>

<li>Colorburst<br />
<a href="https://en.wikipedia.org/wiki/Colorburst">https://en.wikipedia.org/wiki/Colorburst</a>
</li>

<li>List of common resolutions<br />
<a href="https://en.wikipedia.org/wiki/List_of_common_resolutions">https://en.wikipedia.org/wiki/List_of_common_resolutions</a>
</li>

<li>Intel MCS-8 (SIM8-01)<br />
<a href="http://oldcomputermuseum.com/mcs-8.html">http://oldcomputermuseum.com/mcs-8.html</a>
</li>

<li>ATOMIC THEORY AND PRACTICE<br />
<a href="http://members.casema.nl/hhaydn/howel/Acorn/Atom/atap/atap.htm">http://members.casema.nl/hhaydn/howel/Acorn/Atom/atap/atap.htm</a>
</li>

<li>The Acorn Atom review<br />
<a href="http://members.casema.nl/hhaydn/index-uk.html">http://members.casema.nl/hhaydn/index-uk.html</a>
</li>

<li>The Acorn Atom<br />
<a href="https://fjkraan.home.xs4all.nl/comp/atom/index.html">https://fjkraan.home.xs4all.nl/comp/atom/index.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

