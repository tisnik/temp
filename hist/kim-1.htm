<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Mikropočítač KIM-1: jeden ze zvěstovatelů osmibitové revoluce</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Mikropočítač KIM-1: jeden ze zvěstovatelů osmibitové revoluce</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Dnes se seznámíme s mikropočítačem KIM-1, jenž vznikl v roce 1975, tj. téměř současně se vznikem osmibitového mikroprocesoru MOS 6502. Jednalo se o důležitý mikropočítač, protože právě na něm si mohli čip MOS 6502 "osahat" i inženýři, kteří poté vyvíjeli domácí a osobní osmibitové mikropočítače.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Mikropočítač KIM-1: jeden ze zvěstovatelů &bdquo;osmibitové revoluce&ldquo;</a></p>
<p><a href="#k02">2. Přichází legendární čip &ndash; MOS 6502</a></p>
<p><a href="#k03">3. Čip MOS 6502 versus konkurenční dobové mikroprocesory</a></p>
<p><a href="#k04">4. Využití mikroprocesoru MOS 6502</a></p>
<p><a href="#k05">5. Mikropočítač KIM-1 se představuje</a></p>
<p><a href="#k06">6. Blokové schéma mikropočítače KIM-1 a schéma zapojení</a></p>
<p><a href="#k07">7. Mapování registrů a paměťových oblastí do adresního prostoru mikroprocesoru</a></p>
<p><a href="#k08">8. Řízení mikropočítače KIM-1 interní klávesnicí</a></p>
<p><a href="#k09">9. Ukázka programování</a></p>
<p><a href="#k10">10. Funkce čipu MOS 6530</a></p>
<p><a href="#k11">11. Vstupně-výstupní obvody a periferní zařízení</a></p>
<p><a href="#k12">12. Programátorský model mikroprocesoru MOS 6502</a></p>
<p><a href="#k13">13. Registry a příznakové bity</a></p>
<p><a href="#k14">14. Adresovací režimy, využití registrů X a Y</a></p>
<p><a href="#k15">15. Aritmetické a logické instrukce</a></p>
<p><a href="#k16">16. Skoky a rozvětvení</a></p>
<p><a href="#k17">17. Další instrukce</a></p>
<p><a href="#k18">18. Jiné použití MOS 6502 v&nbsp;minimalistickém zařízení &ndash; herní konzole Atari 2600</a></p>
<p><a href="#k19">19. Od MOS 6502 k&nbsp;čipu 65C816</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Mikropočítač KIM-1: jeden ze zvěstovatelů &bdquo;osmibitové revoluce&ldquo;</h2>

<p>Společně se vznikem osmibitových mikroprocesorů začaly být vyvíjeny
mikropočítače, v&nbsp;nichž byly tyto nové čipy použity a které tak ukazovaly
možnosti, které programovatelné mikroprocesory nabízely oproti dřívějším
řešením založeným na logické síti, pamětech a klopných obvodech. První
mikropočítače byly realizovány formou zařízení určených především pro
otestování možností mikroprocesorové techniky i pro návrh nových zařízení.
Schémata těchto mikropočítačů byla mnohdy chápána jako standard v&nbsp;dané
oblasti (proto například mnoho vzájemně velmi odlišných strojů mělo namapovány
registry obvodu 8255 na stejné adresy atd.). V&nbsp;průběhu sedmdesátých let
minulého století vznikly takové mikropočítače pro prakticky všechny významné
mikroprocesory:</p>

<table>
<tr><th>#</th><th>Název</th><th>Rok vzniku</th><th>Založeno na CPU/MCU</th></tr>
<tr><td>1</td><td>Intel SIM8-01</td><td>1972</td><td>Intel 8008</td></tr>
<tr><td>2</td><td>MOS Technology KIM-1</td><td>1975</td><td>MOS 6502</td></tr>
<tr><td>3</td><td>Motorola MEK6800D2</td><td>1976</td><td>Motorola 6800</td></tr>
<tr><td>4</td><td>Rockwell AIM-65</td><td>1976</td><td>MOS 6502</td></tr>
<tr><td>5</td><td>Synertek SYM-1</td><td>1978</td><td>MOS 6502</td></tr>
<tr><td>6</td><td>Intel SDK-85</td><td>1978</td><td>Intel 8085</td></tr>
</table>

<img src="https://i.iinfo.cz/images/293/pc124-9.jpg" alt="8051" height="240" width="320">
<p><i>Obrázek 1: Amatérský mikropočítač postavený na základě osmibitového
mikrořadiče 8051. Funkce nabízené tímto mikropočítačem jsou v&nbsp;mnoha
ohledech podobné funkcím kitu PMI-80 (i když se jedná o zařízení postavená na
odlišných čipech a s&nbsp;využitím jiných technologií).</i></p>

<p>Dnes se budeme zabývat mikropočítačem <i>KIM-1</i>, který vznikl již
v&nbsp;roce 1975, tj.&nbsp;téměř současně se vznikem slavného osmibitového
mikroprocesoru MOS 6502, jenž tvořil jeho nedílnou součást. Jednalo se o
důležitý mikropočítač, protože právě na něm si mohli čip MOS 6502
&bdquo;osahat&ldquo; i inženýři, kteří poté pracovali na vývoji domácích
osmibitových mikropočítačů (Atari, Commodore) popř.&nbsp;i osobních
mikropočítačů (Apple ][).</p>

<a href="https://www.root.cz/obrazek/416170/"><img src="https://i.iinfo.cz/images/312/kim-1-1-prev.jpg" class="image-416170" alt="&#160;" width="370" height="173" /></a>
<p><i>Obrázek 2: &bdquo;1977 Trinity&ldquo; aneb mikropočítače Commodore PET
2001-8, Apple II a TRS-80 Model I. První dva počítače jsou založeny na čipu
MOS-6502.<br /> Zdroj a licence:
https://upload.wikimedia.org/wikipedia/commons/f/ff/Trinity77.jpg</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Přichází legendární čip &ndash; MOS 6502</h2>

<p>Srdcem počítače <i>KIM-1</i>, který bude popsán v&nbsp;navazujících
kapitolách, je slavný osmibitový mikroprocesor <i>MOS 6502</i> navržený a
vyráběný společností <i>MOS Technologies</i>, který začal být komerčně nabízen
v&nbsp;září roku 1975, tj.&nbsp;zhruba rok po uvedení konkurenčních
osmibitových mikroprocesorů <i>Intel 8080</i> a <i>Motorola MC6800</i> (ovšem
rok před uvedením mikroprocesoru <i>RCA-1802</i> o němž jsme se zmiňovali <a
href="https://www.root.cz/clanky/mikropocitace-zalozene-na-cipu-rca-1802/">minule</a>
a <a
href="https://www.root.cz/clanky/rca-1802-posledni-mohykan-osmibitove-ery-mikroprocesoru/">předminule</a>).
Čip MOS 6502 navrhl <i>Chuck Peddle</i> a sedm jeho spolupracovníků (Harry
Bawcum, Ray Hirt, Terry Holdt, Mike James, Will Mathis, Bill Mensch &ndash;
důležitá postava a Rod Orgill), kteří spolu s&nbsp;ním opustili firmu Motorola.
Důvodem k&nbsp;tomu, že někteří klíčoví zaměstnanci Motorolu opustili, byla jak
tehdejší hospodářská recese v&nbsp;USA (a s&nbsp;tím související nepopulární
reorganizace ve firmě), tak i to, že se zaměstnancům nelíbilo stěhování
z&nbsp;Phoenixu do nově otevřené pobočky v&nbsp;Austinu (ovšem hlavním důvodem
může být i to, že management Motoroly ignoroval Peddleho návrhy levného
osmibitového procesoru, který by bylo možné masivně a s&nbsp;malou chybovostí
vyrábět).</p>

<p><div class="rs-tip-major">Poznámka: název společnosti odkazuje na
technologii <i>MOSFET</i> neboli
<i><u>M</u>etal–<u>O</u>xide–<u>S</u>emiconductor <u>F</u>ield-<u>E</u>ffect
<u>T</u>ransistor</i>.</div></p>

<p>Nicméně se vraťme k&nbsp;Chucku Peddlemu a firmě MOS Technologies, která
byla založena již v&nbsp;roce 1969 a zabývala se mimo jiné i výrobou čipů pro
slavný herní automat <i>Pong</i> <a
href="https://www.root.cz/clanky/historie-vyvoje-pocitacovych-her-6-cast-videohry-a-domaci-herni-konzole/">společnosti
Atari</a>. Prvním mikroprocesorem navrženým ve společnosti MOS Technologies byl
čip nazvaný jednoduše <i>MOS 6501</i>, který byl pinově kompatibilní
s&nbsp;konkurenční Motorolou MC6800 (samotná sada instrukcí i vnitřní stavba
mikroprocesoru však byla v&nbsp;mnoha ohledech odlišná). Možnost náhrady
mikroprocesoru MC6800 za MOS 6502 v&nbsp;zařízeních připravených původně pro
čipy řady 6800 se právníkům Motoroly samozřejmě nelíbila a po žalobě (a
následném mezisoudním vyrovnání) Chuck Peddle spolu s&nbsp;Billem Menschem
vytvořili čip pojmenovaný MOS 6502, který již nebylo možné nainstalovat do
stejné patice jako Motorolu MC6800. Mimochodem: dalším důsledkem mezisoudního
vyrovnání bylo to, že firma MOS licencovala ostatní čipy řady 6800, mj.&nbsp;i
původní Peddleho čip PIA neboli MC6820 (Chuck Peddle je ostatně podepsán pod
šestnácti patenty Motoroly). I přes binární nekompatibilitu
s&nbsp;mikroprocesorem MC6800 je však MOS 6502 dodnes legendární čip, který se
při svém uvedení na trh proslavil zejména svou velmi nízkou cenou (tehdy
pouhých 25 dolarů) umožňující stavbu levných domácích a osobních mikropočítačů
a podílel se tak nemalou měrou na &bdquo;osmibitové revoluci&ldquo;.</p>

<img src="https://i.iinfo.cz/images/560/pc6608.jpg" alt="pong" />
<p><i>Obrázek 3: Hra Pong ve variantě z&nbsp;roku 1972.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Čip MOS 6502 versus konkurenční dobové mikroprocesory</h2>

<p>V&nbsp;tomto kontextu se ještě jednou (protože prakticky tutéž tabulku jsme
si již uvedli předminule) podívejme i na mikroprocesory a mikrořadiče, které
vznikly v&nbsp;první polovině sedmdesátých let minulého století (pro úplnost
jsem přidal i čipy ze druhé generace, tj.&nbsp;především <i>Zilog Z80</i> a
<i>Intel 8085</i>, oba tyto čipy stavěly na mikroprocesoru <i>Intel 8080</i>,
který vylepšovaly, popř.&nbsp;&bdquo;jen&ldquo; zmenšovaly počet nutných
pomocných obvodů a počet napájecích napětí):</p>

<table>
<tr><th>#</th><th>Čip</th><th>Vznik</th><th>Typ čipu</th></tr>
<tr><td>1</td><td>Intel 4004</td><td>1971</td><td>čtyřbitový mikroprocesor</td></tr>
<tr><td>2</td><td>Intel 8008</td><td>1972</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>3</td><td>Intel 8080</td><td>1974</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>4</td><td>Motorola 6800</td><td>1974</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>5</td><td>MOS 6502</td><td>1975</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>6</td><td>RCA 1802</td><td>1976</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>Zilog Z80</td><td>1976</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>8</td><td>Intel 8085</td><td>1976</td><td>osmibitový mikroprocesor</td></tr>
<tr><td>9</td><td>Intel 8048</td><td>1976</td><td>osmibitový mikrořadič</td></tr>
</table>

<img src="https://i.iinfo.cz/images/57/pc133-2.png" alt="xy" />
<p><i>Obrázek 4: Základní technické parametry první generace osmibitových
mikroprocesorů firem Intel, Motorola a Zilog. V tomto grafu není uveden
poslední „velký hráč“ na poli osmibitových CPU – MOS 6502, jehož parametry se
podobají právě čipu MC6800.</i></p>

<p><a href="#k02">V&nbsp;předchozí kapitole</a> jsme si řekli, že původní
mikroprocesor MOS 6501 byl navržen takovým způsobem, aby ho bylo možné použít
ve stejné patici (a tedy i ve stejných výrobcích), které byly určeny pro
mikroprocesor Motorola 6800. Až na základě soudního procesu bylo zapojení pinů
pozměněno, takže nový čip 6502 již nebyl v&nbsp;tomto ohledu s&nbsp;Motorolou
6800 kompatibilní. Tyto rozdíly jsou shrnuty v&nbsp;následující tabulce,
v&nbsp;níž jsou uvedené ty piny, které mají odlišnou funkci:</p>

<table>
<tr><th>Pin</th><th>Motorola 6800</th><th>MOS 6501</th><th>MOS 6502</th><th>Poznámka</th></tr>
<tr><td>2 </td><td>Halt</td><td>Ready</td><td>Ready</td><td>psáno i RDY</td></tr>
<tr><td>3 </td><td>∅1 (in)</td><td>∅1 (in)</td><td>∅1 (out)</td><td>pro složení hodinového signálu</td></tr>
<tr><td>5 </td><td>Valid memory address</td><td>Valid memory address</td><td>nezapojeno</td><td></td></tr>
<tr><td>7 </td><td>Bus available</td><td>Bus available</td><td>SYNC</td><td>&nbsp;</td></tr>
<tr><td>36</td><td>Data bus enable</td><td>Data bus enable</td><td>nezapojeno</td><td>&nbsp;</td></tr>
<tr><td>37</td><td>∅2 (in)</td><td>∅2 (in)</td><td>∅0 (in)</td><td>pro složení hodinového signálu</td></tr>
<tr><td>38</td><td>nezapojeno</td><td>nezapojeno</td><td>Set overflow flag</td><td>psáno i SO, přímo ovládá příznak O</td></tr>
<tr><td>39</td><td>režim vysoké impedance</td><td>nezapojeno</td><td>∅2 (out)</td><td></td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: připomeňme si, že všechny tři typy
mikroprocesorů byly primárně dodávány v&nbsp;pouzdru DIL se čtyřiceti piny
&ndash; doba, kdy počet adresních a datových pinů vzroste tak, aby se muselo
použít odlišné pouzdro, ještě nenastala. Dokonce i Intel 8088, jenž (i když si
to nezasloužil) způsobil revoluci osobních mikropočítačů, také používal stejné
pouzdro (popř.&nbsp;PLCC se 44 piny); až Motorola 68000, což je 16/32bitový
čip, používala větší 64pinové pouzdro DIL.</div></p>

<p><div class="rs-tip-major">Poznámka<sup>2</sup>: u těchto čipů se používaly
dvoufázové hodiny, které umožňovaly provést více kroků instrukce v&nbsp;jediném
strojovém cyklu a navíc bylo interní zapojení (počet hradel) nižší. Ovšem MOS
6502 měl logiku pro dvoufázové hodiny integrovánu přímo na čipu, takže
(externí) zapojení bylo jednodušší a současně i nekompatibilní s&nbsp;původními
čipy 6800 a 6501. Ukázku jedné z&nbsp;možných realizací generátoru hodinového
signálu pro tento osmibitový čip naleznete na stránce <a
href="http://wilsonminesco.com/6502primer/ClkGen.html">http://wilsonminesco.com/6502primer/ClkGen.html</a>.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Využití mikroprocesoru MOS 6502</h2>

<p>Osmibitové mikroprocesory <i>MOS 6502</i> či jeho upravené verze <i>MOS
65C02</i> popř.&nbsp;později <i>MOS 6510</i> byly použity v&nbsp;mnoha osobních
i domácích počítačích, především v&nbsp;Apple II (jeden
z&nbsp;nejprodávanějších počítačů v&nbsp;USA), osmibitových domácích
mikropočítačů Atari (viz články na Rootu), Commodore C64 (pravděpodobně není
zapotřebí představovat), Acorn Atom apod. Tento čip nalezneme i v&nbsp;herních
konzolích. Není divu, že se stále jedná o jeden z&nbsp;nejpopulárnějších
mikroprocesorů, které jsou dokonce dodnes vyráběny v&nbsp;šestnáctibitové
variantě WD 65816 (pomocí nastavení příznakového bitu se tento mikroprocesor
přepne do režimu 6502). Podle posledních výzkumů bude 6502 dokonce použita i
v&nbsp;roce 3000 pro řízení ohýbacích robotů :-)</p>

<img src="https://i.iinfo.cz/images/328/hist6806.jpg" alt="x1"/>
<p><i>Obrázek 5: Osmibitový domácí počítač Atari 800 XL vybavený
mikroprocesorem MOS 6502 a pomocnými koprocesory ANTIC, GTIA a POKEY.</i></p>

<img src="https://i.iinfo.cz/images/657/8203.jpg" alt="x2"/>
<p><i>Obrázek 6: Herní konzole NES je založena na variantě MOS 6502 známé pod
jménem Ricoh 2A03.</i></p>

<img src="https://i.iinfo.cz/images/143/pc7001.jpg" alt="x3"/>
<p><i>Obrázek 7: Slavný Commodore C64.</i></p>

<img src="https://i.iinfo.cz/images/236/pc7305-prev.jpg" alt="x4"/>
<p><i>Obrázek 8: Apple IIe je nejúspěšnějším osmibitovým osobním mikropočítačem vůbec.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Mikropočítač KIM-1 se představuje</h2>

<p>Mikropočítač KIM-1 se v&nbsp;mnoha ohledech podobá ostatním dobovým
mikropočítačům &ndash; obsahuje klávesnici pro zadávání hexadecimálních hodnot,
několik funkčních kláves a sedmisegmentový LCD se šesti ciframi. Celý
mikropočítač byl osazen na jediném plošném spoji, na jehož okraji se nacházely
dva konektory určené pro připojení periferních zařízení. Šest cifer
zobrazovaných na LCD bylo rozděleno na část určenou pro zobrazení adresy (0000
až FFFF) a na část určenou pro zobrazení obsahu bajtu (00 až FF), což je více
informací, než nabízel například minule popsaný počítač COSMAC ELF. Jednalo se
současně o rozšiřitelný stroj, protože ke KIM-1 bylo možné připojit audio
magnetofon pro záznam dat (i programů) či dálnopis popř.&nbsp;tiskárnu
používající sériový přenos dat. Kromě toho bylo k&nbsp;dispozici dostatek
dalších vstupně-výstupních pinů využitelných prakticky libovolným způsobem.</p>

<a href="https://www.root.cz/obrazek/416171/"><img src="https://i.iinfo.cz/images/312/kim-1-2-prev.jpg" class="image-416171" alt="&#160;" width="208" height="270" /></a>
<p><i>Obrázek 9: Mikropočítač KIM-1.<br />
Zdroj: Wikipedia, CC</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Blokové schéma mikropočítače KIM-1 a schéma zapojení</h2>

<p>Podívejme se nyní na blokové schéma mikropočítače KIM-1, které jsem
překreslil z&nbsp;originálního manuálu:</p>

<img src="https://i.iinfo.cz/images/312/kim-1-3.png" class="image-416172" alt="&#160;" width="583" height="661" />
<p><i>Obrázek 10: Blokové schéma mikropočítače KIM-1.</i></p>

<p>Barevné odlišení skupin vodičů:</p>

<table>
<tr><th>#</th><th>Barva</th><th>Význam</th></tr>
<tr><td>1</td><td>červená</td><td>adresová sběrnice</td></tr>
<tr><td>2</td><td>modrá</td><td>datová sběrnice</td></tr>
<tr><td>3</td><td>zelená</td><td>řídicí signály</td></tr>
<tr><td>4</td><td>žlutá</td><td>vstupní a výstupní signály</td></tr>
</table>

<p>V&nbsp;blokovém schématu jsou zobrazeny všechny čtyři hlavní čipy
s&nbsp;vysokou integrací, které tvoří základ mikropočítače KIM-1. Jedná se
pochopitelně především o vlastní mikroprocesor MOS 6502, který je doplněn o
dvojici čipů MOS 6530 a taktéž o paměť RAM o kapacitě jednoho kilobajtu. Na
desce mikropočítače jsou rozvedeny tři sběrnice &ndash; adresová (lze rozšířit
až do plných 16 bitů), datová (8 bitů) a několik řídicích signálů. Dále zde
nalezneme různé vstupní popř.&nbsp;výstupní signály. Adresová sběrnice,
resp.&nbsp;přesněji řečeno generování adres, je v&nbsp;tomto mikropočítači
řízeno pouze mikroprocesorem (například u osmibitových Atari však dokáže adresy
generovat i čip ANTIC), datová sběrnice je podle očekávání obousměrná. Vstupní
a výstupní signály umožňují připojení externí klávesnice, akustického
magnetofonu s&nbsp;dosti primitivním záznamem dat a dokonce i dálnopisu (a
nepřímo tedy i minipočítačového terminálu).</p>

<p>Podrobnější schéma zapojení zobrazené až na úroveň jednotlivých vodičů a
pomocných součástek naleznete na adrese <a
href="http://www.6502.org/trainers/buildkim/kim.gif">http://www.6502.org/trainers/buildkim/kim.gif</a>.</p>

<p><div class="rs-tip-major">Poznámka: z&nbsp;podrobného schématu je patrné, že
čipy 6530 jsou připojeny přímo na adresovou sběrnici bez výběrových signálů
typu <i>chip select</i>. Ve skutečnosti se oba čipy od sebe odlišují (mají
čísla 6530-002 a 6530-003, jinou interní masku) a reagují na odlišný rozsah
adres.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Mapování registrů a paměťových oblastí do adresního prostoru mikroprocesoru</h2>

<p>Z&nbsp;pohledu programátora byl adresní rozsah mikroprocesoru (64kB)
rozdělen do několika regionů, do nichž byl namapován jak hlavní blok operační
paměti (i s&nbsp;nultou stránkou a první stránkou se zásobníkem), tak i dva
doplňkové bloky o kapacitě 64 bajtů. Kromě toho je do adresního rozsahu
namapována i ROM obou čipů 6530 a taktéž jejich řídicí registy. Adresní prostor
tedy vypadal takto:</p>

<table>
<tr><th>Od</th><th>Do</th><th>Obsah</th></tr>
<tr><td>$0000</td><td>$03FF</td><td>1024 bajtů RAM</td></tr>
<tr><td>$0400</td><td>$07FF</td><td>volno (lze využít při použití větší RAM)</td></tr>
<tr><td>$0800</td><td>$0BFF</td><td>volno -//-</td></tr>
<tr><td>$0C00</td><td>$0FFF</td><td>volno -//-</td></tr>
<tr><td>$1000</td><td>$13FF</td><td>volno -//-</td></tr>
<tr><td>$1400</td><td>$16FF</td><td>volno -//-</td></tr>
<tr><td>$1700</td><td>$173F</td><td>řídicí registry čipu 6530-003</td></tr>
<tr><td>$1740</td><td>$177F</td><td>řídicí registry čipu 6530-002</td></tr>
<tr><td>$1780</td><td>$17BF</td><td>64 bajtů RAM čipu 6530-003</td></tr>
<tr><td>$17C0</td><td>$17FF</td><td>64 bajtů RAM čipu 6530-002</td></tr>
<tr><td>$1800</td><td>$1BFF</td><td>1024 bajtů ROM čipu 6530-003</td></tr>
<tr><td>$1C00</td><td>$1FFF</td><td>1024 bajtů ROM čipu 6530-002</td></tr>
</table>

<p>Kvůli tomu, jak jsou adresní vodiče zapojeny na RAM i oba čipy 6530 (horní
bity adresy se ignorují) se ve skutečnosti každý region (z&nbsp;pohledu
mikroprocesoru) opakoval osmkrát. To je velmi důležité zejména pro poslední
region v&nbsp;rozsahu $1C00 až $1FFF. Ten se opakuje osmkrát a je tedy
viditelný v&nbsp;rozsazích:</p>

<table>
<tr><th>Od</th><th>Do</th></tr>
<tr><td>$1C00</td><td>$1FFF</td></tr>
<tr><td>$3C00</td><td>$3FFF</td></tr>
<tr><td>$5C00</td><td>$5FFF</td></tr>
<tr><td>$7C00</td><td>$7FFF</td></tr>
<tr><td>$9C00</td><td>$9FFF</td></tr>
<tr><td>$BC00</td><td>$BFFF</td></tr>
<tr><td>$CC00</td><td>$CFFF</td></tr>
<tr><td>$FC00</td><td>$FFFF</td></tr>
</table>

<p>Proč je to tak důležité? Posledních šest bajtů adresního prostoru totiž
mikroprocesor 6502 používá pro přečtení adres (vektorů), které použije pro skok
při třech operacích:</p>

<table>
<tr><th>Adresa</th><th>Význam</th></tr>
<tr><td>$FFFA/$FFFB</td><td>skok po NMI (nemaskovatelné přerušení)</td></tr>
<tr><td>$FFFC/$FFFD</td><td>skok po RESET</td></tr>
<tr><td>$FFFE/$FFFF</td><td>skok po IRQ nebo instrukci BRQ</td></tr>
</table>

<p>Obsah těchto šesti bajtů je tedy uložen v&nbsp;ROM a je využit
monitorem.</p>

<p><div class="rs-tip-major">Poznámka: to je taktéž důvod, proč je ROM u všech
mikropočítačů s&nbsp;mikroprocesorem MOS 6502 mapována na nejvyšší
adresy.</div></p>

<p>Některé adresy jsou obsazeny monitorem a jejich jmenovka (label) se používá
v&nbsp;assembleru:</p>

<table>
<tr><th>Adresa</th><th>Blok</th><th>Jmenovka</th><th>Funkce</th></tr>
<tr><td>$00EF</td><td>oblast monitoru</td><td>PCL</td><td>dolní bajt PC</td></tr>
<tr><td>$00F0</td><td>oblast monitoru</td><td>PGH</td><td>horní bajt PC</td></tr>
<tr><td>$00F1</td><td>oblast monitoru</td><td>P</td><td>stavový registr</td></tr>
<tr><td>$00F2</td><td>oblast monitoru</td><td>SF</td><td>ukazatel na vrchol zásobníku</td></tr>
<tr><td>$00F3</td><td>oblast monitoru</td><td>A</td><td>obsah akumulátoru</td></tr>
<tr><td>$00F4</td><td>oblast monitoru</td><td>Y</td><td>obsah registru X</td></tr>
<tr><td>00F5</td><td>oblast monitoru</td><td>X</td><td>obsah registru Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>$1700</td><td>I/O čipu 003</td><td>PAD</td><td>6530-003 A Data Register</td></tr>
<tr><td>$1701</td><td>I/O čipu 003</td><td>PADD</td><td>6530-003 A Data Direction Register</td></tr>
<tr><td>$1702</td><td>I/O čipu 003</td><td>PBD</td><td>6530-003 B Data Register</td></tr>
<tr><td>$1703</td><td>I/O čipu 003</td><td>PBDD</td><td>6530-003 B Data Direction Register</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>$1704</td><td>časovač</td><td>časovač na čipu 6530-003</td><td></td></tr>
<tr><td>$170F</td><td>časovač</td><td>časovač na čipu 6530-003</td><td></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>$17F5</td><td>rozhraní pro magnetofon</td><td>SAL</td><td>Starting Address - Low Order Byte</td></tr>
<tr><td>$17F6</td><td>rozhraní pro magnetofon</td><td>SAH</td><td>Starting Address - High Order Byte</td></tr>
<tr><td>$17F7</td><td>rozhraní pro magnetofon</td><td>EAL</td><td>Ending Address - Low Order Byte</td></tr>
<tr><td>$17F8</td><td>rozhraní pro magnetofon</td><td>EAH</td><td>Ending Address - High Order Byte</td></tr>
<tr><td>$17F9</td><td>rozhraní pro magnetofon</td><td>ID </td><td>File Identification Number</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>$17FA</td><td>přerušovací subsystém</td><td>NMIL</td><td>NMI Vector - Low Order Byte</td></tr>
<tr><td>$17FB</td><td>přerušovací subsystém</td><td>NMIH</td><td>NMI Vector - High Order Byte</td></tr>
<tr><td>$17FC</td><td>přerušovací subsystém</td><td>RSTL</td><td>RST Vector - Low Order Byte</td></tr>
<tr><td>$17FD</td><td>přerušovací subsystém</td><td>RSTH</td><td>RST Vector - High Order Byte</td></tr>
<tr><td>$17FE</td><td>přerušovací subsystém</td><td>IRQL</td><td>IRQ Vector - Low Order Byte</td></tr>
<tr><td>$17FF</td><td>přerušovací subsystém</td><td>IRQH</td><td>IRQ Vector - High Order Byte</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>$1800</td><td>rozhraní pro magnetofon</td><td>DUMPT</td><td>Start Address - Audio Tape Dump</td></tr>
<tr><td>$1873</td><td>rozhraní pro magnetofon</td><td>LOADT</td><td>Start Address - Audio Tape Load</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>$17F7</td><td>rozhraní pro dálnopis</td><td>EAL</td><td>Ending Address - Low Order Byte</td></tr>
<tr><td>$17F8</td><td>rozhraní pro dálnopis</td><td>EAH</td><td>Ending Address - High Order Byte</td></tr>
</table>



<p><a name="k08"></a></p>
<h2 id="k08">8. Řízení mikropočítače KIM-1 interní klávesnicí</h2>

<p>Počítač KIM-1 byl primárně řízen primární klávesnicí, která vypadá
následovně:</p>

<img src="https://i.iinfo.cz/images/312/kim-1-4.jpg" class="image-416173" alt="&#160;" width="789" height="1196" />
<p><i>Obrázek 11: Klávesnice počítače KIM-1.</i></p>

<p>Kromě klasických kláves pro zadávání hexadecimálních číslic obsahovala
klávesnice dalších sedm funkčních kláves. Jejich význam je vypsán
v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Klávesa</th><th>Stručný popis</th></tr>
<tr><td>1</td><td>0-F</td><td>zápis hodnoty v&nbsp;režimu zadávání adres nebo zápisu dat</td></tr>
<tr><td>2</td><td>AD</td><td>režim zadávání adresy</td></tr>
<tr><td>3</td><td>DA</td><td>režim zápisu dat</td></tr>
<tr><td>4</td><td>+</td><td>zvýšení adresy beze změny režimu</td></tr>
<tr><td>5</td><td>PC</td><td>zobrazení obsahu programového čítače na displeji</td></tr>
<tr><td>6</td><td>GO</td><td>spuštění programu od adresy zobrazené na displeji (režim AD)</td></tr>
<tr><td>7</td><td>ST</td><td>zastavení programu a návrat do monitoru</td></tr>
<tr><td>8</td><td>RS</td><td>provedení resetu systému</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že tento mikropočítač byl
navržen (zapojen a naprogramován) takovým způsobem, aby dokázal provádět
krokování po jednotlivých instrukcích. Krokování se povoluje přepínačem
umístěným v&nbsp;pravého horním rohu.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Ukázka programování</h2>

<p>Podívejme se nyní na způsob programování počítače KIM-1. Následující příklad
byl převzat z&nbsp;originálního manuálu. Jedná se o jednoduchý program, který
sečte dvě osmibitové hodnoty uložené v&nbsp;paměťových buňkách
<strong>VAL1</strong> a <strong>VAL2</strong> a výsledek (šestnáct bitů) uloží
do buněk umístěných na adresách $FA a $FB. Obsah těchto adres se zobrazí na
displeji po skoku na adresu START:</p>

<pre>
POINTL               = $FA
POINTH               = $FB
START                = $1C4F
&nbsp;
0000                 VAL1
0001                 VAL2
0002       18        PROG    CLC
0003       A5 00             LDA VALl
0005       65 01             ADC VAL2
0007       85 FA             STA POINTL
0009       A9 00             LDA #00
000B       85 FB             STA POINTH
000D       4C 4F 1C          JMP START
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si toho, jak se pracuje
s&nbsp;příznakem C (přenos). Nejprve je C vynulován instrukcí
<strong>CLC</strong> a posléze již může být použita instrukce
<strong>ADC</strong> pro provedení součtu.</div></p>

<p>Uložení celého programu může vypadat následovně:</p>

<pre>
Stisknuté klávesy      Obsah LCD    Číslo kroku   Poznámka
 [AD]                   xxxx xx          1        režim zápisu adres
 [0]  [0] [0] [2]       0002 xx          2        počáteční adresa (instrukce CLC)
 [DA]                   0002 xx          3        režim zápisu dat
          [1] [8]       0002 18          4        instrukce CLC
 [+]      [A] [5]       0003 A5          5        instrukce LDA VAL1
 [+]      [0] [0]       0004 00          6
 [+]      [6] [5]       0005 65          7        ...
 [+]      [0] [1]       0006 01          8
 [+]      [8] [5]       0007 85          9
 [+]      [F] [A]       0008 FA         10
 [+]      [A] [9]       0009 A9         11
 [+]      [0] [0]       000A 00         12
 [+]      [8] [5]       000B 85         13
 [+]      [F] [B]       000C FB         14
 [+]      [4] [C]       000D 4C         15        instrukce JMP START
 [+]      [4] [F]       000E 4F         16
 [+]      [1] [C]       000F 1C         17
</pre>

<p>Ještě před spuštěním programu změníme hodnoty uložené do proměnných VAL1 a
VAL2:</p>

<pre>
Stisknuté klávesy      Obsah LCD    Číslo kroku   Poznámka
 [AD]                   000F 1C         17A       režim zápisu adres
 [0]  [0] [F] [1]       00F1 xx         17B       režim dekadické aritmetiky (BCD)
 [DA]     [0] [0]       00F1 00         18
 [AD]                   00F1 00         19        znovu režim zápisu adres
 [0]  [0] [0] [0]       0000 xx         20        adresa VAL1
 [DA]                   0000 02         21        uložení hodnoty VAL1
 [+]      [0] [3]       0001 03         22        uložení hodnoty VAL2
 [+]          [GO]      0002 18         23        spuštění (jsme přesně na adrese 0002)
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Funkce čipu MOS 6530</h2>

<p>Čip MOS 6530 má v&nbsp;mikropočítači KIM-1 několik specifických funkcí. Tyto
čipy jsou v&nbsp;systému dva a každý z&nbsp;nich je nepatrně odlišný (například
se liší jejich adresový dekodér). Mezi společné vlastnosti obou čipů 6530 patří
paměť ROM s&nbsp;kapacitou jednoho kilobajtu, přídavná paměť RAM
s&nbsp;kapacitou 64 bajtů, dvojice osmibitových vstupně-výstupních bran PA a PB
a časovač. Samotná existence paměti RAM nemá v&nbsp;případě mikropočítače KIM-1
až tak zásadní význam, protože tento počítač je navíc obsazen plnohodnotným
paměťovým čipem s&nbsp;1 kB RAM, ovšem například dále zmíněná herní konzole
Atari 2600 je osazena podobným čipem MOS 6532, který obsahuje paměť 128 bajtů
(ovšem žádnou ROM) a současně se jedná o jedinou operační paměť, kterou je tato
konzole vybavena &ndash; ano, naprostá většina her pro Atari 2600 si vystačí se
128 bajty RAM, do které je mapován i zásobník.</p>

<p>Původně byl tento čip navržen pro počítače obsazené sedmi integrovanými
obvody 6530, což by umožnilo konstrukci počítače se 7 kB ROM, 448 bajty RAM a
112 vstupně-výstupními piny. Takto maximalisticky navržený systém by tedy byl
vhodný pro řídicí účely, kde 7 kB ROM plně dostačuje pro uložení celého
programu a 448 bajtů RAM taktéž může být pro mnoho účelů dostačující. Nicméně
s&nbsp;příchodem plnohodnotných mikrořadičů došlo k&nbsp;opuštění podobných
koncepcí (i když žádný dobový mikrořadič nenabízel 112 IO pinů).</p>

<p>Kromě nabídky vstupně-výstupních pinů je důležitá a existence časovače
vybaveného programovatelnou děličkou frekvence a osmibitovým čítačem. Po
dočítání k&nbsp;nule se vygeneroval přerušovací signál IRQ, který mohl být
přiveden například na vstup NMI mikroprocesoru. Později se i časovače a čítače
staly nedílnou součástí mikrořadičů, počínaje již prvním jednoduchým
mikrořadičem Intel 8048.</p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vstupně-výstupní obvody a periferní zařízení</h2>

<p>Přes dvojici čipů MOS 6530 zmíněných <a href="#k10">v&nbsp;předchozí
kapitole</a> bylo možné ovládat jak klávesnici a displej, tak i periferní
zařízení. Pro čtení klávesnice a současně i pro ovládání displeje se používaly
piny PA0 až PA6 i PB1 až PB4 společně s&nbsp;pomocnými integrovanými obvody
74145. Kromě toho bylo podporováno ukládání dat (a pochopitelně i strojového
kódu) na běžnou audio kazetu popř.&nbsp;na páskový magnetofon. Záznamový signál
byl generován programově (nula jako šest pulsů s&nbsp;frekvencí 2415 Hz a
jednička jako devět pulsů s&nbsp;frekvencí 3650 Hz &ndash; délka záznamu bitu
je tedy vždy stejná: 2,46ms) a s&nbsp;využitím RC členů byl výsledný signál
vyhlazen a poslán na audio výstup. Pro čtení se používal fázový závěs, který ze
vstupního (zkresleného) signálu zrekonstruoval frekvence a tím pádem i sekvenci
jedniček a nul. Zajímavá je i podpora pro připojení dálnopisu, který bylo možné
využít jako tiskárnu i pro vstup dat (plně duplexní režim).</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Programátorský model mikroprocesoru MOS 6502</h2>

<p>Z&nbsp;programátorského hlediska se MOS 6502 dosti podstatným způsobem
odlišuje jak od Intelu 8080, tak i od čipu RCA-1802. Zatímco procesor Intel
8080 obsahoval poměrně rozsáhlou sadu obecně použitelných osmibitových registrů
(A, B, C, D, E, H a L), měl 6502 pouze jeden akumulátor (registr A) a dva
index-registry X a Y. Oba typy procesorů samozřejmě obsahovaly další speciální
registry, jako ukazatel na vrchol zásobníku (SP), programový čítač (PC) a
příznakový registr (F).</p>

<p>Na první pohled by se mohlo zdát, že počet registrů mikroprocesoru MOS 6502
je nedostatečný pro provádění většiny aritmetických či logických operací. Ve
skutečnosti tomu tak není, protože tento procesor podporuje načtení druhého
operandu z&nbsp;operační paměti (rychlost RAM nebyla tak limitujícím faktorem,
jako je tomu dnes). U mnoha instrukcí je podporován větší počet adresovacích
režimů, celkově je možné operandy strojových instrukcí adresovat třinácti
navzájem odlišnými způsoby. Při adresování se často používají oba
index-registry, které je možné inkrementovat a dekrementovat &ndash; tím je
umožněno provádění blokových přenosů dat, mazání souvislé oblasti paměti
atd.</p>

<p>Mikroprocesor MOS 6502 také zavádí pojem takzvané <i>nulté stránky
paměti</i>. Jedná se o prvních 256 bytů operační paměti, kterou je možné
adresovat zjednodušeným způsobem. Adresa libovolné buňky z&nbsp;nulté stránky
paměti je totiž uložena na jednom byte v&nbsp;operačním kódu instrukce, takže
celá instrukce může být kratší (typicky pouze dva byte). Současně je i
provádění instrukcí adresujících nultou stránku paměti rychlejší než při
šestnáctibitovém adresování. Z&nbsp;tohoto důvodu se můžeme na nultou stránku
paměti dívat jako na pole 256 registrů resp.&nbsp;alternativně na 128
plnohodnotně využitelných 16bitových ukazatelů (musíme si uvědomit, že operační
paměti byly v&nbsp;té době stejně rychlé jako procesor, takže čtení či zápis
dat do paměti byla záležitost jednoho či dvou cyklů). Myšlenka nulté stránky
paměti byla dále rozšířena v&nbsp;procesoru Motorola 6809, kde se však tato
stránka dala v&nbsp;adresovatelné paměti posouvat na libovolné místo.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Registry a příznakové bity</h2>

<p><a href="#k12">V&nbsp;předchozí kapitole</a> jsme si řekli, že MOS 6502
obsahoval pouze minimální, ovšem ještě prakticky použitelný počet registrů.
Tyto registry jsou vypsány v&nbsp;následující tabulce:</p>

<table>
<tr><th>#</th><th>Registr</th><th>Šířka</th><th>Význam</th></tr>
<tr><td>1</td><td>A</td><td>8 bitů</td><td>akumulátor</td></tr>
<tr><td>2</td><td>X</td><td>8 bitů</td><td>index registr</td></tr>
<tr><td>3</td><td>Y</td><td>8 bitů</td><td>index registr</td></tr>
<tr><td>4</td><td>SP</td><td>8 bitů</td><td>část ukazatele na vrchol zásobníku (+ $0100)</td></tr>
<tr><td>5</td><td>PC</td><td>16 bitů</td><td>čítač instrukcí</td></tr>
<tr><td>6</td><td>P</td><td>7/8 bitů</td><td>příznakový a stavový registr</td></tr>
</table>

<p>Většina aritmetických a logických operací používala jako jeden
z&nbsp;operandů akumulátor; druhý operand byl typicky načítán z&nbsp;operační
paměti. Přitom se pro adresování často používaly index registry X a Y. Ukazatel
na vrchol zásobníku dokázal adresovat zásobník v&nbsp;rozsahu $0100 až $01FF,
tedy 256 bajtů. A příznakový registr měl obsazen jen sedm bitů:</p>

<table>
<tr><th>Bit</th><th>Označení</th><th>Význam</th></tr>
<tr><td>7</td><td>N</td><td>záporný výsledek</td></tr>
<tr><td>6</td><td>V</td><td>přetečení do sedmého bitu</td></tr>
<tr><td>5</td><td>-</td><td>neobsazeno</td></tr>
<tr><td>4</td><td>B</td><td>rozlišení přerušení od instrukce BRK či PHP</td></tr>
<tr><td>3</td><td>D</td><td>režim výpočtů: binární versus BCD</td></tr>
<tr><td>2</td><td>I</td><td>zákaz přerušení</td></tr>
<tr><td>1</td><td>Z</td><td>nulový výsledek</td></tr>
<tr><td>0</td><td>C</td><td>přenos</td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Adresovací režimy, využití registrů X a Y</h2>

<p>Adresovací režimy odlišují MOS 6502 od naprosté většiny ostatních
mikroprocesorů a umožňují použít odlišný styl programování založený na
efektivním použití nulté stránky paměti a obou index registrů. Existuje třináct
adresovacích režimů, ovšem žádná instrukce nevyužívá všechny. Některé
adresovací režimy jsou určeny pouze pro skoky, další pro implicitní operandy
atd.:</p>

<table>
<tr><th> #</th><th>Zápis</th><th>Název</th><th>Assembler</th><th>Stručný popis</th></tr>
<tr><td> 1</td><td>A    </td><td>accumulator</td><td>INS A</td><td>operandem je přímo akumulátor</td></tr>
<tr><td> 2</td><td>abs  </td><td>absolute</td><td>INS $LLHH</td><td>za instrukcí následuje šestnáctibitová adresa, na níž je operand uložen</td></tr>
<tr><td> 3</td><td>abs,X</td><td>absolute, X-indexed</td><td>INS $LLHH,X</td><td>za instrukcí následuje šestnáctibitová adresa, která je přičtena k X</td></tr>
<tr><td> 4</td><td>abs,Y</td><td>absolute, Y-indexed</td><td>INS $LLHH,Y</td><td>za instrukcí následuje šestnáctibitová adresa, která je přičtena k Y</td></tr>
<tr><td> 5</td><td>#    </td><td>immediate</td><td>INS #$BB</td><td>za instrukcí následuje bajt s&nbsp;konstantou</td></tr>
<tr><td> 6</td><td>impl </td><td>implied</td><td>INS</td><td>operand je odvozen přímo z&nbsp;instrukce, například INX</td></tr>
<tr><td> 7</td><td>ind  </td><td>indirect</td><td>INS ($LLHH)</td><td>nepřímá adresace přes adresu uloženou za instrukcí (ta je ukazatelem), nepřímý skok</td></tr>
<tr><td> 8</td><td>X,ind</td><td>X-indexed, indirect</td><td>INS ($LL,X)</td><td>efektivní adresa je spočtena z&nbsp;hodnoty uložené na (LL+X)</td></tr>
<tr><td> 9</td><td>ind,Y</td><td>indirect, Y-indexed</td><td>INS ($LL),Y</td><td>efektivní adresa je spočtena z&nbsp;hodnoty uložené na LL, k&nbsp;výsledku se přičte Y</td></tr>
<tr><td>10</td><td>rel  </td><td>relative</td><td>INS $BB</td><td>použito u relativních skoků; za instrukcí je jeden bajt reprezentující offset se znaménkem</td></tr>
<tr><td>11</td><td>zpg  </td><td>zeropage           </td><td>INS $LL</td><td>operand je uložen na nulté stránce na adrese LL</td></tr>
<tr><td>12</td><td>zpg,X</td><td>zeropage, X-indexed</td><td>INS $LL,X</td><td>operand je uložen na nulté stránce na adrese LL+X</td></tr>
<tr><td>13</td><td>zpg,Y</td><td>zeropage, Y-indexed</td><td>INS $LL,Y</td><td>operand je uložen na nulté stránce na adrese LL+Y</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: použití registrů X a Y není zcela
symetrické, protože se od sebe liší podporou resp.&nbsp;nepodporou adresovacího
režimu X,ind a ind,Y. Zejména poslední zmíněný režim lze použít pro operace
s&nbsp;poli, přesuny bloků, mazání bloků atd.</div></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Aritmetické a logické instrukce</h2>

<p>Mikroprocesor <i>MOS 6502</i> obsahuje pouze 56 instrukcí, přičemž mnoho
instrukcí podporuje více adresovacích režimů a tudíž i více variant (i tak však
zdaleka není obsazeno všech 256 možných kombinací &ndash; ty byly postupně
obsazovány v&nbsp;dalších procesorech, popř.&nbsp;na původním MOS 6502 měly
sice <a href="http://nparker.llx.com/a2/opcodes.html">oficiálně
nedokumentovanou, ovšem logickou/očekávanou funkci</a>). Nejprve si popíšeme
aritmetické a logické instrukce mikroprocesoru MOS 6502. Většina dále popsaných
instrukcí jako svůj první operand akceptuje akumulátor a druhým operandem může
být konstanta popř.&nbsp;hodnota načtená z&nbsp;operační paměti s&nbsp;využitím
výše popsaných adresovacích režimů. Výjimkou jsou instrukce s&nbsp;jediným
operandem, v&nbsp;nichž nemusí vystupovat akumulátor popř.&nbsp;instrukce,
v&nbsp;nichž je přímo operand vyjádřen názvem instrukce (<strong>INX</strong>
atd.):</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td> 1</td><td>ADC</td><td>add with carry</td><td>součet hodnoty s&nbsp;akumulátorem (včetně přetečení)</td></tr>
<tr><td> 2</td><td>SBC</td><td>subtract with carry</td><td>odečtení hodnoty od akumulátoru (včetně výpůjčky)</td></tr>
<tr><td> 3</td><td>AND</td><td>and with accumulator</td><td>logické AND s&nbsp;akumulátorem</td></tr>
<tr><td> 4</td><td>ORA</td><td>or with accumulator</td><td>logické OR s&nbsp;akumulátorem</td></tr>
<tr><td> 5</td><td>EOR</td><td>exclusive or with accumulator</td><td>logické XOR s&nbsp;akumulátorem</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 6</td><td>INC</td><td>increment</td><td>zvýšení hodnoty o 1 (kupodivu nelze s&nbsp;akumulátorem, ovšem s&nbsp;pamětí ano)</td></tr>
<tr><td> 7</td><td>INX</td><td>increment X</td><td>zvýšení hodnoty index registru X o 1 </td></tr>
<tr><td> 8</td><td>INY</td><td>increment Y</td><td>zvýšení hodnoty index registru Y o 1 </td></tr>
<tr><td> 9</td><td>DEC</td><td>decrement</td><td>snížení hodnoty o 1 (opět nelze s&nbsp;akumulátorem)</td></tr>
<tr><td>10</td><td>DEX</td><td>decrement X</td><td>snížení hodnoty index registru X o 1 </td></tr>
<tr><td>11</td><td>DEY</td><td>decrement Y</td><td>snížení hodnoty index registru Y o 1 </td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>CMP</td><td>compare with accumulator</td><td>odečtení hodnoty od akumulátoru bez zápisu výsledku</td></tr>
<tr><td>13</td><td>CPX</td><td>compare with X</td><td>odečtení hodnoty od index registru X bez zápisu výsledku</td></tr>
<tr><td>14</td><td>CPY</td><td>compare with Y</td><td>odečtení hodnoty od index registru Y bez zápisu výsledku</td></tr>
<tr><td>15</td><td>BIT</td><td>bit test</td><td>logické AND bez uložení výsledků (změní se jen příznakové bity)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>16</td><td>ASL</td><td>arithmetic shift left</td><td>aritmetický posun doleva o jeden bit</td></tr>
<tr><td>17</td><td>LSR</td><td>logical shift right</td><td>logický posun doprava o jeden bit</td></tr>
<tr><td>18</td><td>ROL</td><td>rotate left</td><td>rotace doleva o jeden bit</td></tr>
<tr><td>19</td><td>ROR</td><td>rotate right</td><td>rotace doprava o jeden bit</td></tr>
</table>



<p><a name="k16"></a></p>
<h2 id="k16">16. Skoky a rozvětvení</h2>

<p>Následují instrukce skoku, popř.&nbsp;skoku a výskoku ze subrutiny
(podprogramu). Skákat je možné v&nbsp;rámci celé adresovatelné RAM, tedy
v&nbsp;rozsahu 64kB:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>20</td><td>JMP</td><td>jump</td><td>skok (existuje několik adresovacích režimů)</td></tr>
<tr><td>21</td><td>JSR</td><td>jump to subroutine</td><td>skok do podprogramu s&nbsp;uložením návratové adresy na zásobník</td></tr>
<tr><td>22</td><td>RTS</td><td>return from subroutine</td><td>návrat z&nbsp;podprogramu</td></tr>
<tr><td>23</td><td>RTI</td><td>return from interrupt</td><td>návrat z&nbsp;prerušovací rutiny</td></tr>
</table>

<p>Relativní skoky v&nbsp;rámci rozsahu -128 až 127 jsou provedeny na základě
vyhodnocení nějaké podmínky, konkrétně testování zvoleného příznakového bitu.
Oproti Motorole 6800 byl počet podmíněných skoků snížen na polovinu, takže
některé kombinace podmínek neexistují (včetně <strong>BRA</strong> a
<strong>BRN</strong>):</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>24</td><td>BCC</td><td>branch on carry clear</td><td>rozvětvení za podmínky C==0</td></tr>
<tr><td>25</td><td>BCS</td><td>branch on carry set</td><td>rozvětvení za podmínky C==1</td></tr>
<tr><td>26</td><td>BEQ</td><td>branch on equal (zero set)</td><td>rozvětvení za podmínky Z==1</td></tr>
<tr><td>27</td><td>BMI</td><td>branch on minus (negative set)</td><td>rozvětvení za podmínky N==1</td></tr>
<tr><td>28</td><td>BNE</td><td>branch on not equal (zero clear)</td><td>rozvětvení za podmínky Z==0</td></tr>
<tr><td>29</td><td>BPL</td><td>branch on plus (negative clear)</td><td>rozvětvení za podmínky N==0</td></tr>
<tr><td>30</td><td>BVC</td><td>branch on overflow clear</td><td>rozvětvení za podmínky O==0</td></tr>
<tr><td>31</td><td>BVS</td><td>branch on overflow set</td><td>rozvětvení za podmínky O==1</td></tr>
</table>



<p><a name="k17"></a></p>
<h2 id="k17">17. Další instrukce</h2>

<p>Další skupinou instrukcí jsou instrukce určené pro přesuny dat mezi operační
pamětí a registry, popř.&nbsp;mezi registry navzájem:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>32</td><td>LDA</td><td>load accumulator</td><td>načtení bajtu do akumulátoru</td></tr>
<tr><td>33</td><td>LDX</td><td>load X</td><td>načtení bajtu do registru X</td></tr>
<tr><td>34</td><td>LDY</td><td>load Y</td><td>načtení bajtu do registru Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>35</td><td>STA</td><td>store accumulator</td><td>uložení hodnoty akumulátoru</td></tr>
<tr><td>36</td><td>STX</td><td>store X</td><td>uložení hodnoty registru X</td></tr>
<tr><td>37</td><td>STY</td><td>store Y</td><td>uložení hodnoty registru Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>38</td><td>TAX</td><td>transfer accumulator to X</td><td>přesun X=A</td></tr>
<tr><td>39</td><td>TAY</td><td>transfer accumulator to Y</td><td>přesun Y=A</td></tr>
<tr><td>40</td><td>TSX</td><td>transfer stack pointer to X</td><td>přesun X=SP</td></tr>
<tr><td>41</td><td>TXA</td><td>transfer X to accumulator</td><td>přesun A=X</td></tr>
<tr><td>42</td><td>TXS</td><td>transfer X to stack pointer</td><td>přesun SP=X</td></tr>
<tr><td>43</td><td>TYA</td><td>transfer Y to accumulator</td><td>přesun A=Y</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>44</td><td>PHA</td><td>push accumulator</td><td>uložení akumulátoru na zásobník</td></tr>
<tr><td>45</td><td>PHP</td><td>push processor status (SR)</td><td>uložení příznaků na zásobník</td></tr>
<tr><td>46</td><td>PLA</td><td>pull accumulator</td><td>obnovení akumulátoru ze zásobníku</td></tr>
<tr><td>47</td><td>PLP</td><td>pull processor status (SR)</td><td>obnovení příznaků ze zásobníku</td></tr>
</table>

<p>Několik instrukcí pracuje s&nbsp;příznakovými bity:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>48</td><td>CLC</td><td>clear carry</td><td>C=0</td></tr>
<tr><td>49</td><td>CLD</td><td>clear decimal</td><td>D=0</td></tr>
<tr><td>50</td><td>CLI</td><td>clear interrupt disable</td><td>I=0</td></tr>
<tr><td>51</td><td>CLV</td><td>clear overflow</td><td>V=0</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>52</td><td>SEC</td><td>set carry</td><td>C=1</td></tr>
<tr><td>53</td><td>SED</td><td>set decimal</td><td>D=1</td></tr>
<tr><td>54</td><td>SEI</td><td>set interrupt disable</td><td>I=1</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že zdaleka ne všechny
příznaky je možné přímo nastavit nebo vynulovat. Ovšem mnoho příznaků je
nastavováno či nulováno jinými instrukcemi, například <strong>BIT</strong> či
<strong>CMP</strong>, čehož je možné využít (při výpočtech vlastně musíme přímo
manipulovat jen s&nbsp;příznakem C kvůli rotacím).</div></p>

<p>Zbývají už jen dvě instrukce nezařazené do žádné výše uvedené skupiny:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Plné jméno</th><th>Popis</th></tr>
<tr><td>55</td><td>NOP</td><td>no operation</td><td>přechod na další instrukci</td></tr>
<tr><td>56</td><td>BRK</td><td>break / interrupt</td><td>uložení PC a SR na zásobník, zastavení (návrat do monitoru)</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: instrukční sadu mikroprocesoru MOS 6502
si lze dokonce odzkoušet na prakticky jakémkoli současném počítači či tabletu,
a to bez nutnosti instalace assembleru a/nebo simulátoru (popř. emulátoru
některého osmibitového domácího mikropočítače). Na stránce <a
href="http://6502asm.com/">http://6502asm.com/</a> se totiž nachází vydařený
simulátor virtuálního počítače vybaveného jednoduchým displejem, klávesnicí a
v&nbsp;neposlední řadě právě mikroprocesorem MOS 6502. Tento simulátor, jenž
byl naprogramovaný Stianem Sorengem, obsahuje editor (ve skutečnosti se
v&nbsp;současné verzi jedná o pouhé textové pole umístěné na HTML stránce), do
něhož je možné zapsat program v&nbsp;jazyku symbolických instrukcí a následně
tento program přeložit vestavěným assemblerem a poté i spustit.</div></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Jiné použití MOS 6502 v&nbsp;minimalistickém zařízení &ndash; herní konzole Atari 2600</h2>

<p>Zatímco mikropočítač KIM-1 byl určen primárně pro výuku programování (ve
strojovém kódu či assembleru) popř.&nbsp;pro jednoduché řídicí účely, byl o
přibližně dva roky později vydán zcela odlišný typ stroje založeného na stejném
mikroprocesoru MOS 6502 (resp.&nbsp;na jeho zjednodušené variantě). Jednalo se
o slavnou herní konzoli <i>Atari 2600</i> neboli <i>Atari VCS</i>, která byla
dokonce realizována ještě s&nbsp;menším počtem čipů s&nbsp;velkou integrací
(jeden z&nbsp;čipů byl ovšem zákaznický &ndash; TIA). Opět se tedy jednalo o
minimalisticky pojatý hardware, ovšem určený pro zcela odlišnou skupinou
uživatelů &ndash; hráče videoher.</p>

<a href="https://i.iinfo.cz/images/165/pc6613.png"><img src="https://i.iinfo.cz/images/165/pc6613-prev.png" alt="pc6613" height="270" width="351"></a>
<p><i>Obrázek 12: Schéma zapojení herní konzole Atari 2600 s osmibitovým mikroprocesorem MOS 6507.</i></p>

<p>Při návrhu herní konzole <i>Atari 2600</i> se její konstruktéři snažili o
vytvoření co nejjednoduššího hardware, protože (v&nbsp;kontextu doby zcela
správně) předpokládali, že většinu funkcionality by mělo zařídit programové
vybavení a nikoli složitý a především drahý hardware. Navíc jednodušší hardware
samozřejmě znamenal snížení výsledné ceny herní konzole na úroveň dostupnou i
pro průměrné americké rodiny, což se ukázalo být velmi důležité. Původní
prototypy sice byly zkonstruovány s&nbsp;využitím většího množství čipů o
poměrně nízké integraci, ovšem výsledná verze konzole se &ndash; kromě
přibližně třiceti diskrétních součástek &ndash; skládala pouze z&nbsp;trojice
čipů s&nbsp;vyšší mírou integrace. Jednalo se především o samotný osmibitový
mikroprocesor <i>MOS 6507</i> s&nbsp;taktovací frekvencí 1,2 MHz, jenž byl
umístěný v&nbsp;28pinovém pouzdru (i díky tomu byla jeho cena nižší, než cena
za plnohodnotný čtyřicetipinový <i>MOS 6502</i>, ovšem standardní kapacita
EPROM byla kvůli tomu omezena na pouhé čtyři kilobajty). K&nbsp;mikroprocesoru
byl připojen čip <i>MOS 6532</i>, jenž v&nbsp;sobě kombinoval operační paměť o
kapacitě pouhých 128 bajtů (nikoli kilobajtů a už vůbec ne megabajtů) a taktéž
dvojici osmibitových paralelních portů, k&nbsp;nimž byly mj.&nbsp;připojeny i
oba digitální joysticky.</p>

<p><div class="rs-tip-major">Poznámka: čip MOS 6532 je obdobou čipu MOS 6530
zmíněného výše a použitého v&nbsp;počítači KIM-1. Existují zde rozdíly
(kapacita RAM atd.), ovšem základní ovládání je podobné.</div></p>

<a href="https://i.iinfo.cz/images/611/pc6612.jpg"><img src="https://i.iinfo.cz/images/611/pc6612-prev.jpg" alt="pc6612" height="270" width="357"></a>
<p><i>Obrázek 13: Herní konzole Atari 2600 vybavená mikroprocesorem MOS 6507,
což je varianta původního čipu MOS 6502, ovšem se zmenšeným počtem pinů
adresové sběrnice a několika dalšími omezeními.</i></p>

<p>Třetím čipem, který se velkou mírou podílel na úspěchu herní konzole
<i>Atari 2800</i>, byl čip nazvaný <i>TIA</i>, neboli <i>Television Interface
Adaptor</i>. Jednalo se o čip navržený <i>Jayem Minerem</i>, který se kromě
práce na <i>TIA</i> později proslavil svým podílem na vývoji čipů <i>ANTIC</i>
a <i>GTIA</i> určených pro osmibitové domácí počítače <i>Atari</i> a dále pak
na vývoji čipové sady pro slavné počítače <i>Amiga</i>. Jay Miner ve svém čipu
<i>TIA</i>, který byl postaven na bázi dvou prototypů navržených <i>Joem
Decuirem</i> a <i>Ronem Milnerem</i> (jeden z&nbsp;prototypů se nazýval
<i>Stella</i>, později se tak začal označovat i čip <i>TIA</i> a dokonce i celá
konzole), implementoval jak jednoduchý ale překvapivě výkonný grafický řadič,
tak i generátor zvuků. Jedním z&nbsp;typických znaků čipu <i>TIA</i> i
některých dalších integrovaných obvodů navržených <i>Jayem Minerem</i> bylo
použití polynomických čítačů (založených na posuvném registru se zpětnou
vazbou) namísto běžných čítačů binárních. Předností polynomických čítačů je to,
že na čipu zaberou přibližně čtvrtinu plochy v&nbsp;porovnání s binárními
čítači, nevýhodou pak fakt, že se jejich hodnota nemění o jedničku, ale
generuje se pseudonáhodná sekvence čísel. Nicméně pro potřeby generování obrazu
i zvuků byly polynomické čítače díky své jednoduchosti výhodnější.</p>

<p>V&nbsp;následující tabulce jsou vypsány základní technické parametry herní
konzole <i>Atari 2600</i>:</p>

<table>
<tr><td>Mikroprocesor</td><td>MOS 6507</td></tr>
<tr><td>Grafický řadič</td><td>TIA</td></tr>
<tr><td>Počet barev</td><td>128 NTSC, 104 PAL, pouze 8 SECAM</td></tr>
<tr><td>Zvuková syntéza</td><td>TIA</td></tr>
<tr><td>Hodinová frekvence</td><td>1,19 MHz</td></tr>
<tr><td>Adresový rozsah</td><td>8192 bajtů</td></tr>
<tr><td>Kapacita RAM</td><td>128 bajtů</td></tr>
<tr><td>Kapacita ROM</td><td>0 bajtů</td></tr>
<tr><td>Kapacita ROM/EPROM na cartridge</td><td>standardně 4 kB, s bankou i 64 kB</td></tr>
<tr><td>Vstupy</td><td>2× digitální joystick, 2× paddle</td></tr>
<tr><td>Výstup</td><td>televizní signál (úpravou lze získat i kompozitní video)</td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Od MOS 6502 k&nbsp;čipu 65C816</h2>

<p>Další vývoj řady <i>MOS 6502</i> se ubíral několika směry. Jednou
z&nbsp;větví je šestnáctibitový čip s&nbsp;označením <i>65C816GS</i>. Zajímavé
je, že vývoj tohoto mikroprocesoru byl zahájen na základě dohody mezi
společností Apple a firmou WDC, v&nbsp;níž byl tento čip následně navržen a
vyroben. CEO a současně i zakladatelem firmy WDC byl totiž známý inženýr Bill
Mensch, který se v&nbsp;minulosti podílel na návrhu dvou osmibitových
mikroprocesorů, které dost významným způsobem ovlivnily vývoj výpočetní
techniky na přelomu sedmdesátých a osmdesátých let minulého století. Bill
Mensch spolunavrhoval čip Motorola 6800 (proto jsme se o něm již zmiňovali
v&nbsp;úvodní části článku) i podpůrné obvody pro tento mikroprocesor a posléze
se podílel i na návrhu MOS 6502, takže není divu, že po přechodu do společnosti
WDC prosadil, aby byly nové mikroprocesory navrhované, vyráběné a licencované
touto firmou postaveny na základech čipu MOS 6502. Prvním z&nbsp;těchto čipů
byl WDC 65C02, což byla varianta původního NMOS čipu 6502, která navíc
obsahovala opravy některých chyb v&nbsp;původním návrhu tohoto mikroprocesoru
(nepřímé skoky na adresy ležící na konci stránek atd.) a rozšíření jeho
instrukční sady.</p>

<img src="https://i.iinfo.cz/urs/gfx07_3-111286080484264.jpg" alt="appleII" />
<p><i>Obrázek 14: Mikropočítač Apple II postavený na čipu MOS 6502.</i></p>

<p>Odtud už byl vlastně jen docela malý krůček k&nbsp;tomu, aby se osmibitový
čip WDC 65C02 rozšířil na šestnáctibitový čip WDC 65c816. Rozklíčovat jméno
tohoto mikroprocesoru je při znalosti jeho historie snadné: <strong>65</strong>
se odkazuje na řadu 6502, <strong>c</strong> značí výrobní technologii CMOS
(mimochodem: plně statickou &ndash; díky malému počtu registrů je bylo možné
implementovat formou klopných obvodů, což mj.&nbsp;umožňovalo plynule zmenšovat
frekvenci hodinového signálu až na nulu) a dvojice čísel
<strong>8</strong>–<strong>16</strong> znamená, že tento mikroprocesor mohl
pracovat v&nbsp;téměř 100% kompatibilním osmibitovém režimu 6502, nebo mohl být
naopak přepnutý do režimu 16bitového. Právě tato vlastnost byla vyžadována
zástupci společnosti Apple, kteří potřebovali, aby jejich nový počítač <i>Apple
II GS</i> mohl být zpětně kompatibilní s&nbsp;úspěšnou řadou osmibitových
mikropočítačů <i>Apple ][</i> (prostá emulace byla vzhledem k&nbsp;relativně
nízkému výkonu tehdejších čipů prakticky nemyslitelná).</p>

<img src="https://i.iinfo.cz/urs/gfx07_8-111286101918916.jpg" alt="appleIIGS" />
<p><i>Obrázek 15: Mikropočítač Apple II GS postavený na čipu WDC 65c816.</i></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>6502 PRIMER: Building your own 6502 computer<br />
<a href="http://wilsonminesco.com/6502primer/">http://wilsonminesco.com/6502primer/</a>
</li>

<li>KIM-1<br />
<a href="https://en.wikipedia.org/wiki/KIM-1">https://en.wikipedia.org/wiki/KIM-1</a>
</li>

<li>KIM-1 User Manual<br />
<a href="https://kim-1.com/docs/usrman.htm">https://kim-1.com/docs/usrman.htm</a>
</li>

<li>What is the KIM-1?<br />
<a href="http://www.6502.org/trainers/buildkim/kim.htm">http://www.6502.org/trainers/buildkim/kim.htm</a>
</li>

<li>Build Your Own KIM-1 with Ruud Baltissen<br />
<a href="http://www.6502.org/trainers/buildkim/buildkim.htm">http://www.6502.org/trainers/buildkim/buildkim.htm</a>
</li>

<li>6502 Instruction Set<br />
<a href="https://www.masswerk.at/6502/6502_instruction_set.html">https://www.masswerk.at/6502/6502_instruction_set.html</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Single-board computer<br />
<a href="https://en.wikipedia.org/wiki/Single-board_computer">https://en.wikipedia.org/wiki/Single-board_computer</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2his­tory.org/">http://apple2his­tory.org/</a>
</li>

<li>www.6502.org<br />
<a href="http://www.6502­.org/">http://www.6502­.org/</a>
</li>

<li>6502 PRIMER: Building your own 6502 computer &ndash; clock generator<br />
<a href="http://wilsonminesco.com/6502primer/ClkGen.html">http://wilsonminesco.com/6502primer/ClkGen.html</a>
</li>

<li>RCA 1802 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/RCA_1802">https://en.wikipedia.org/wiki/RCA_1802</a>
</li>

<li>Great Microprocessors of the Past and Present (V 13.4.0)<br />
<a href="http://www.cpushack.com/CPU/cpu.html">http://www.cpushack.com/CPU/cpu.html</a>
</li>

<li>Chip Hall of Fame: RCA CDP 1802<br />
<a href="https://spectrum.ieee.org/semiconductors/processors/chip-hall-of-fame-rca-cdp-1802">https://spectrum.ieee.org/semiconductors/processors/chip-hall-of-fame-rca-cdp-1802</a>
</li>

<li>The CPUs of Spacecraft: Computers in Space<br />
<a href="http://cpushack.com/space-craft-cpu.html">http://cpushack.com/space-craft-cpu.html</a>
</li>

<li>Part I: RCA 1802, weirdness at its best (1974)<br />
<a href="http://www.cpushack.com/CPU/cpu2.html#Sec2Part1">http://www.cpushack.com/CPU/cpu2.html#Sec2Part1</a>
</li>

<li>Embedded Processor and Microcontroller primer and FAQ<br />
<a href="http://www.faqs.org/faqs/microcontroller-faq/primer/">http://www.faqs.org/faqs/microcontroller-faq/primer/</a>
</li>

<li>COSMAC ELF: The CDP1802’s Place in Microcomputing History<br />
<a href="http://www.cosmacelf.com/">http://www.cosmacelf.com/</a>
</li>

<li>Cosmac 1802<br />
<a href="http://www.nyx.net/~lturner/public_html/Cosmac.html">http://www.nyx.net/~lturner/public_html/Cosmac.html</a>
</li>

<li>CDP1802AC/3: High-Reliability CMOS 8-Bit Microprocessor<br />
<a href="https://www.renesas.com/eu/en/www/doc/datasheet/cdp1802ac-3.pdf">https://www.renesas.com/eu/en/www/doc/datasheet/cdp1802ac-3.pdf</a>
</li>

<li>A Short Course In Programming<br />
<a href="http://www.ittybittycomputers.com/IttyBitty/ShortCor.htm">http://www.ittybittycomputers.com/IttyBitty/ShortCor.htm</a>
</li>

<li>The 1802 Instruction Set<br />
<a href="https://www.atarimagazines.com/computeii/issue3/page52.php">https://www.atarimagazines.com/computeii/issue3/page52.php</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Osmibitové mikroprocesory a mikrořadiče firmy Motorola (1)<br />
<a href="https://www.root.cz/clanky/osmibitove-mikroprocesory-a-mikroradice-firmy-motorola-1/">https://www.root.cz/clanky/osmibitove-mikroprocesory-a-mikroradice-firmy-motorola-1/</a>
</li>

<li>Mikrořadiče a jejich použití v jednoduchých mikropočítačích<br />
<a href="https://www.root.cz/clanky/mikroradice-a-jejich-pouziti-v-jednoduchych-mikropocitacich/">https://www.root.cz/clanky/mikroradice-a-jejich-pouziti-v-jednoduchych-mikropocitacich/</a>
</li>

<li>Mikrořadiče a jejich aplikace v jednoduchých mikropočítačích (2)<br />
<a href="https://www.root.cz/clanky/mikroradice-a-jejich-aplikace-v-jednoduchych-mikropocitacich-2/">https://www.root.cz/clanky/mikroradice-a-jejich-aplikace-v-jednoduchych-mikropocitacich-2/</a>
</li>

<li>Československé osmibitové počítače<br />
<a href="https://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace/">https://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace/</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>COSMAC 1802: history of microprocessors in space<br />
<a href="https://www.retrotechnology.com/memship/1802_spacecraft.html">https://www.retrotechnology.com/memship/1802_spacecraft.html</a>
</li>

<li>COSMAC 1802 on AMSATs running IPS<br />
<a href="https://www.retrotechnology.com/memship/amsat.html">https://www.retrotechnology.com/memship/amsat.html</a>
</li>

<li>Technické informace o sondě Galileo<br />
<a href="https://www.retrotechnology.com/memship/galileo.txt">https://www.retrotechnology.com/memship/galileo.txt</a>
</li>

<li>COSMAC “ELF” Microcomputer Trainer User’s Manual:<br />
<a href="http://www.cosmacelf.com/publications/books/cosmac-elf-manual.pdf">http://www.cosmacelf.com/publications/books/cosmac-elf-manual.pdf</a>
</li>

<li>RCA COSMAC MICROPROCESSOR<br />
<a href="http://www.decodesystems.com/cosmac/">http://www.decodesystems.com/cosmac/</a>
</li>

<li>Netronics ELF II<br />
<a href="https://oldcomputers.net/netronics-elf.html">https://oldcomputers.net/netronics-elf.html</a>
</li>

<li>Netronics Elf II<br />
<a href="http://www.qwkslva.com/Museum/Netronics_Elf/netronics_elf.html">http://www.qwkslva.com/Museum/Netronics_Elf/netronics_elf.html</a>
</li>

<li>Assorted COSMAC Computers<br />
<a href="http://www.cosmacelf.com/gallery/assorted-cosmac-computers.html">http://www.cosmacelf.com/gallery/assorted-cosmac-computers.html</a>
</li>

<li>RCA 1802 COSMAC (plocha čipu)<br />
<a href="http://visual6502.org/images/pages/RCA_1802_die_shots.html">http://visual6502.org/images/pages/RCA_1802_die_shots.html</a>
</li>

<li>Joseph Weisbecker<br />
<a href="https://en.wikipedia.org/wiki/Joseph_Weisbecker">https://en.wikipedia.org/wiki/Joseph_Weisbecker</a>
</li>

<li>Joe Weisbecker Video Game Collection<br />
<a href="https://digital.hagley.org/weisbecker">https://digital.hagley.org/weisbecker</a>
</li>

<li>CDP1802A<br />
<a href="https://www.renesas.com/us/en/products/space-harsh-environment/harsh-environment/microprocessors-peripherals/device/CDP1802A.html#overviewInfo">https://www.renesas.com/us/en/products/space-harsh-environment/harsh-environment/microprocessors-peripherals/device/CDP1802A.html#overviewInfo</a>
</li>

<li>Grafické karty a grafické akcelerátory (7)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-7/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-7/</a>
</li>

<li>Osmibitové mikrořadiče Rabbit: praví dědicové mikroprocesoru Zilog Z80<br />
<a href="https://www.root.cz/clanky/osmibitove-mikroradice-rabbit-pravi-dedicove-mikroprocesoru-zilog-z80">https://www.root.cz/clanky/osmibitove-mikroradice-rabbit-pravi-dedicove-mikroprocesoru-zilog-z80</a>
</li>

<li>Čtyřicet let existence slavných mikroprocesorů řady Motorola 68000<br />
<a href="https://www.root.cz/clanky/ctyricet-let-existence-slavnych-mikroprocesoru-rady-motorola-68000/">https://www.root.cz/clanky/ctyricet-let-existence-slavnych-mikroprocesoru-rady-motorola-68000/</a>
</li>

<li>Intel 8008 Instruction Set<br />
<a href="https://www.bytecollector.com/archive/mark_8/My_Mark-8_Info/Software/8008_ReferenceCard.PDF">https://www.bytecollector.com/archive/mark_8/My_Mark-8_Info/Software/8008_ReferenceCard.PDF</a>
</li>

<li>Intel 8008 instruction set<br />
<a href="https://www.pastraiser.com/cpu/i8008/i8008_opcodes.html">https://www.pastraiser.com/cpu/i8008/i8008_opcodes.html</a>
</li>

<li>Silicon on sapphire<br />
<a href="https://en.wikipedia.org/wiki/Silicon_on_sapphire">https://en.wikipedia.org/wiki/Silicon_on_sapphire</a>
</li>

<li>COSMAC ELF Lives Again, In FPGA<br />
<a href="https://hackaday.com/2020/01/23/cosmac-elf-lives-again-in-fpga/">https://hackaday.com/2020/01/23/cosmac-elf-lives-again-in-fpga/</a>
</li>

<li>verilog1802<br />
<a href="https://github.com/jamesbowman/verilog1802">https://github.com/jamesbowman/verilog1802</a>
</li>

<li>1802 FIG FORTH<br />
<a href="https://www.retrotechnology.com/memship/figforth_1802.html">https://www.retrotechnology.com/memship/figforth_1802.html</a>
</li>

<li>SuperElf<br />
<a href="http://oldcomputermuseum.com/super_elf.html">http://oldcomputermuseum.com/super_elf.html</a>
</li>

<li>COSMAC na Hackaday<br />
<a href="https://hackaday.com/tag/cosmac/">https://hackaday.com/tag/cosmac/</a>
</li>

<li>Vintage COSMAC Elf Is Pretty Close To Original<br />
<a href="https://hackaday.com/2017/03/06/vintage-cosmac-elf-is-pretty-close-to-original/">https://hackaday.com/2017/03/06/vintage-cosmac-elf-is-pretty-close-to-original/</a>
</li>

<li>KIM Uno: a DIY clone of the KIM-1<br />
<a href="https://obsolescence.wixsite.com/obsolescence/kim-uno-summary-c1uuh">https://obsolescence.wixsite.com/obsolescence/kim-uno-summary-c1uuh</a>
</li>

<li>Colorburst<br />
<a href="https://en.wikipedia.org/wiki/Colorburst">https://en.wikipedia.org/wiki/Colorburst</a>
</li>

<li>List of common resolutions<br />
<a href="https://en.wikipedia.org/wiki/List_of_common_resolutions">https://en.wikipedia.org/wiki/List_of_common_resolutions</a>
</li>

<li>Intel MCS-8 (SIM8-01)<br />
<a href="http://oldcomputermuseum.com/mcs-8.html">http://oldcomputermuseum.com/mcs-8.html</a>
</li>

<li>ATOMIC THEORY AND PRACTICE<br />
<a href="http://members.casema.nl/hhaydn/howel/Acorn/Atom/atap/atap.htm">http://members.casema.nl/hhaydn/howel/Acorn/Atom/atap/atap.htm</a>
</li>

<li>The Acorn Atom review<br />
<a href="http://members.casema.nl/hhaydn/index-uk.html">http://members.casema.nl/hhaydn/index-uk.html</a>
</li>

<li>The Acorn Atom<br />
<a href="https://fjkraan.home.xs4all.nl/comp/atom/index.html">https://fjkraan.home.xs4all.nl/comp/atom/index.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2020</small></p>
</body>
</html>

