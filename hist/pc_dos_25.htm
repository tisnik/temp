<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Časovač 8253 a systém přerušení na IBM PC</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Časovač 8253 a systém přerušení na IBM PC</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Časovač 8253 a systém přerušení na IBM PC</a></p>
<p><a href="#k02">2. Krátké zopakování &ndash; programovatelný čítač/časovač 8253 a 8254</a></p>
<p><a href="#k03">3. Zapojení čítače/časovače 8253/8254 v&nbsp;IBM PC</a></p>
<p><a href="#k04">4. Řídicí a stavové registry čítače/časovače 8253</a></p>
<p><a href="#k05">5. Maskovatelné a nemaskovatelné přerušení na mikroprocesorech Intel 8086</a></p>
<p><a href="#k06">*** 6. Řadič přerušení Intel 8259 a podpora pro více zdrojů generujících hardwarové přerušení</a></p>
<p><a href="#k07">*** 7. Softwarově vyvolané přerušení</a></p>
<p><a href="#k08">8. Vektory přerušení na IBM PC</a></p>
<p><a href="#k09">*** 9. Realizace vlastní přerušovací rutiny s&nbsp;její &bdquo;registrací&ldquo;</a></p>
<p><a href="#k10">10. Úplný zdrojový kód dnešního prvního demonstračního příkladu</a></p>
<p><a href="#k11">*** 11. Chování programu po jeho ukončení</a></p>
<p><a href="#k12">*** 12. Uložení původní přerušovací subrutiny</a></p>
<p><a href="#k13">*** 13. Obnova původní přerušovací subrutiny před ukončením procesu</a></p>
<p><a href="#k14">14. Úplný zdrojový kód dnešního druhého demonstračního příkladu</a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">16. Úplný zdrojový kód dnešního třetího demonstračního příkladu</a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">18. Úplný zdrojový kód dnešního posledního demonstračního příkladu</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Časovač 8253 a systém přerušení na IBM PC</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Krátké zopakování &ndash; programovatelný čítač/časovač 8253 a 8254</h2>

<p>Krátce si zopakujme základní informace o programovatelném čítači/časovači
8253 resp.&nbsp;8254 (dále budeme používat pouze označení 8253, ostatně samotný
čip 8254 se liší jen nejvyšší možnou frekvencí vstupního hodinového signálu,
ale v&nbsp;jiných ohledech se oba čipy chovají stejně).</p>

<p>Na vstup tohoto obvodu je připojen hodinový signál s&nbsp;frekvencí 1193180
Hz, což je hodnota odvozená dělením z&nbsp;nominální frekvence IBM PC či IBM PC
XT, která činila 4,77 MHz (a ta je odvozena od NTSC, v&nbsp;PC historicky vše
souvisí se vším). Původní frekvence se dělí dvěma a poté ještě jednou dvěma.
V&nbsp;dalších modelech PC je to sice složitější, protože samotná frekvence CPU
byla odlišná, nicméně vstupní frekvence 1193180 bývá s&nbsp;větším či menším
úsilím zachována.</p>

<p>Čítač a časovač realizovaný integrovaným obvodem <i>8253</i> obsahuje tři
samostatně konfigurovatelné šestnáctibitové kanály, přičemž každý z&nbsp;těchto
kanálů byl použit pro různé účely. Výše zmíněný signál o frekvenci 1193180 Hz
je v&nbsp;každém kanálu 0-2 vydělen nastavenou šestnáctibitovou hodnotou (každý
kanál má svoji vlastní hodnotu dělitele nezávislou na ostatních kanálech), což
vlastně znamená, že minimální frekvence zpracovatelná čítačem/časovačem je
rovna 18,2 Hz (1193180/65536) a maximální frekvence dosahuje právě 1193180
Hz.</p>

<p>První kanál časovače (s&nbsp;indexem 0) se typicky používá pro vyvolání
nějaké subrutiny v&nbsp;pravidelných časových intervalech &ndash; a právě jím
se dnes budeme zabývat nejvíce. Druhý kanál časovače sloužil pro generování
signálů určených pro obnovení obsahu dynamických pamětí (a proto se nepoužíval
k&nbsp;jiným účelům &ndash; mohlo by totiž dojít k&nbsp;zamrznutí systému). A
konečně třetí kanál časovače <i>8253</i> (kanály se indexují od nuly, takže má
index 2) většinou pracuje v&nbsp;režimu generátoru obdélníkových pulsů se
střídou 1:1, ovšem k&nbsp;dispozici je i mnoho dalších režimů činnosti
čítače/časovače. Lze ho použít pro čítání a časování a taktéž pro generování
signálu pro PC Speaker, což je téma, kterým jsme se již v&nbsp;tomto seriálu
zabývali.</p>

<p><div class="rs-tip-major">Poznámka: díky tomu, že čip 8253 obsahuje tři
kanály a každý kanál má vstup GATE, je možné dva kanály spojit (jedním kanálem
řídit kanál druhý) a generovat tak například zvuk sofistikovanějšími způsoby,
popř.&nbsp;zajistit ještě delší intervaly, které bude časovač měřit.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Zapojení čítače/časovače 8253/8254 v&nbsp;IBM PC</h2>

<p>Připomeňme si, že původní IBM PC bylo osazeno několika standardními (a i ve
své době poměrně levnými) osmibitovými čipy. Konkrétně se jednalo o integrovaný
obvod <i>Intel 8251</i> (UART), dále o čip <i>Intel 8253</i> (programovatelný
časovač), <i>Intel 8237/8257</i> (programovatelný řadič DMA), <i>Intel 8255</i>
(paralelní rozhraní) a konečně <i>Intel 8259</i> (programovatelný řadič
přerušení). Ze schématu zobrazeného na obrázku číslo 1 je patrné, že obvody PC
Speakeru byly připojeny k&nbsp;obvodu 8255 a taktéž k&nbsp;8253, tedy
k&nbsp;paralelní bráně a k&nbsp;časovači. Jak konkrétně toto zapojení vypadalo,
zjistíme ze servisního manuálu, v&nbsp;němž kromě dalších informací nalezneme i
zmíněné schéma:</p>

<img src="https://i.iinfo.cz/images/131/pc-16-2.webp" class="image-1139200" width="620" height="445" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;http://en.wikipedia.org/wiki/Rights_Managed&quot;&gt;Rights Managed&lt;/a&gt;" />
<p><i>Obrázek 1: Zapojení čítače/časovače v&nbsp;IBM PC.</i></p>

<p>Nejzajímavější jsou signály vycházející z&nbsp;pravé strany čipu 8253.
Signál z&nbsp;prvního kanálu je zapojen do čipu 8259A, kde slouží pro vyvolání
přerušení (viz další text). Signál ze druhého kanálu skutečně slouží
k&nbsp;obnově obsahu dynamických pamětí a signál ze třetího kanálu může být
(ale nemusí!) přiveden na PC Speaker. Pokud budeme potřebovat tento kanál
využít pro nějaké jiné účely (například pro načasování déletrvající akce), lze
přes port 0x61 výstup do PC Speakeru zakázat &ndash; potom je možné
s&nbsp;tímto kanálem laborovat, číst jeho hodnotu atd. aniž by došlo
k&nbsp;vyluzování &bdquo;pazvuků&ldquo; na PC Speakeru.</p>

<p>S&nbsp;využitím čítače/časovače <i>8253</i> je tak například možné na <i>PC
Speaker</i> posílat v&nbsp;tom nejjednodušším případě pravidelný obdélníkový
signál, což ovšem postačuje pouze pro přehrávání velmi jednoduchých
jednohlasých melodií. Nicméně přesně tento typ generování zvuku používá BIOS
při POSTu (<i></i>) a DOS/Linux při &bdquo;zobrazení&ldquo; znaku Bell (7, což
již víme). Používal se i v&nbsp;GW Basicu a QBasicu v&nbsp;příkazu
<strong>PLAY</strong>.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Řídicí a stavové registry čítače/časovače 8253</h2>

<p>Řídicí a stavové registry obvodu 8253 jsou z&nbsp;pohledu mikroprocesoru
namapovány na I/O porty 0x40 až 0x41 a mají následující význam:</p>

<table>
<tr><th>I/O port</th><th>Stručný popis</th></tr>
<tr><td>0x40</td><td>kanál 0: systémový časovač, nastaven na 18,2 přerušení za sekundu (dělí se tedy 65536, což se zapisuje jako 0)</td></tr>
<tr><td>0x41</td><td>kanál 1: řízení obnovení (refresh) pamětí RAM na IBM PC</td></tr>
<tr><td>0x42</td><td>kanál 2: výstup na PC Speaker</td></tr>
<tr><td>0x43</td><td>řídicí registr</td></tr>
</table>

<p>Osm bitů řídicího registru slouží pro volbu režimu konkrétního kanálu (a nás
bude v&nbsp;dnešním článku zajímat pouze kanál číslo 0):</p>

<table>
<tr><th>Bity</th><th>Stručný popis</th></tr>
<tr><td>7-6</td><td>výběr kanálu 0, 1 nebo 2 (3 není povoleno, takový kanál neexistuje)</td></tr>
<tr><td>5-4</td><td>volba čtení/zápisu vyššího či nižšího bajtu dělitele (kombinace bitů 11 znamená zápis obou bajtů)</td></tr>
<tr><td>3-1</td><td>volba režimu kanálu (viz třetí tabulku)</td></tr>
<tr><td>0</td><td>16bitový binární čítač nebo BCD čítač (9999)</td></tr>
</table>

<p>Bity 3-1 volí režim zvoleného kanálu 0-2. Lze volit jeden z&nbsp;šesti
režimů činnosti:</p>

<table>
<tr><th>M2</th><th>M1</th><th>M0</th><th>Stručný popis režimu</th></tr>
<tr><td>0 </td><td>0 </td><td>0 </td><td>čítač</td></tr>
<tr><td>0 </td><td>0 </td><td>1 </td><td>monostabilní obvod</td></tr>
<tr><td>x </td><td>1 </td><td>0 </td><td>dělič 1:N</td></tr>
<tr><td>x </td><td>1 </td><td>1 </td><td>generátor obdélníkových pulsů</td></tr>
<tr><td>1 </td><td>0 </td><td>0 </td><td>zpoždění</td></tr>
<tr><td>1 </td><td>0 </td><td>1 </td><td>signálem spouštěné zpoždění</td></tr>
</table>

<p>Pro nás bude nejzajímavější režim číslo 3, protože v&nbsp;tomto režimu je na
výstupu zvoleného kanálu (pro nás kanál 2) signál po N/2 času ve stavu 0 a po
zbytek času (N+1)/2 ve stavu 1. Jedná se tedy o dělič frekvence, konkrétně
vstupní frekvence 1193180 zvolenou šestnáctibitovou hodnotou, přičemž hodnota 0
odpovídá 65536. Signálem GATE=1 se čítání povolí (a GATE ovládáme přes 8255).
Čítač tedy vlastně dokáže vyvolat přerušení s&nbsp;frekvencí 1193180/N Hz.</p>

<p><div class="rs-tip-major">Poznámka: kanál bude nastaven do režimu binárního
čítače, nikoli BCD čítače.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Maskovatelné a nemaskovatelné přerušení na mikroprocesorech Intel 8086</h2>

<p>V&nbsp;pořadí již dvacáté páté části seriálu o IBM PC asi již není nutné
opakovat, že tyto počítače byly založeny na mikroprocesorech řady Intel 8086.
Tyto mikroprocesory měly dva vstupní piny, které sloužily pro vyvolání
přerušení: <strong>NMI</strong> (nemaskovatelné přerušení) a
<strong>INTR</strong> (maskovatelné přerušení). Mikroprocesor potvrzoval
přijetí informace o přerušení signálem <strong>INTA</strong>. To však není vše,
protože se přes adresové piny <strong>D0</strong> až <strong>D7</strong> do
mikroprocesoru přenesla ještě informace o čísle přerušení v&nbsp;rozsahu
0..255. Externí čip tedy mikroprocesor nejprve pozastavil signálem
<strong>NMI</strong> nebo <strong>INTA</strong> a následně mu po datové
sběrnici poslal číslo přerušení. Zapojení vypadalo přibližně takto (ponechal
jsem i čítač/časovač, naopak odstranil pomocné logické obvody):</p>

*** image ***
<p><i>Obrázek 2: Zjednodušené zapojení přerušovacího subsystému IBM PC.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Řadič přerušení Intel 8259 a podpora pro více zdrojů generujících hardwarové přerušení</h2>

<p></p>
IR0-IR7
INT
INTA
D0-D7


<p><a name="k07"></a></p>
<h2 id="k07">7. Softwarově vyvolané přerušení</h2>

<p>Z&nbsp;hlediska čipu 8289 probíhá obsluha přerušení tak, jak to bylo popsáno v&nbsp;předchozím textu &ndash; čip pošle signál <strong>INT</strong> (na pin <strong>INTR</strong>) a na <strong>D0-D8</strong> nastaví číslo přerušení. Procesor přerušení potvrdí signálem <strong>INTA</strong>. Z&nbsp;pohledu procesoru vypadá obsluha takto: procesor získá číslo přerušení v&nbsp;rozsahu 0..255 (ve skutečnosti však jen 8..15 pro IRQ, ovšem teoreticky skutečně 0..255). Tuto hodnotu vynásobí čtyřmi a získá tak adresu segmentu a offsetu příslušné přerušovací rutiny. Samotná tabulka obsahující 256 hodnot segment+offset má délku 1024 bajtů (segment má 2 bajty, offset další 2 bajty) a je umístěna od fyzické adresy 0, tedy na adrese 0000:0000. Procesor adresu (segment+offset) přečte, uloží na zásobník příznakový registr, aktuální hodnotu <strong>CS</strong> a aktuální hodnotu <strong>IP</strong> a poté provede skok na adresu obsluhy přerušení (změní se jak <strong>CS</strong> tak i <strong>IP</strong>). Navíc vynuluje příznaky <i>Interrupt</i> a <i>Flag</i>.</p>

<p>Obsluha přerušení (což může být náš program) provede to, co je nutné; například vytiskne znak na obrazovku, přečte bajt ze sériového portu, pošle sampl na zvukovou kartu atd. Ovšem navíc je nutné obsluhu přerušení řádně ukončit, vrátit se do hlavního programu a obnovit příznakový registr. To se provádí instrukcí <strong>IRET</strong>, která se od <strong>RET</strong> liší tím, že obnoví i příznakový registr. Pokud obsluha přerušení mění i další registry, měla by se sama postarat o jejich obnovu.</p>

<pre>
    	mov al, 0x20
	out 0x20, al            <i>; oznameni, ze preruseni je u konce radici preruseni </i>
</pre>


<p><a name="k08"></a></p>
<h2 id="k08">8. Vektory přerušení na IBM PC</h2>

<p>Díky tomu, že číslo přerušení je po jeho vzniku &bdquo;vnuceno&ldquo;
mikroprocesoru přes datovou sběrnici, bylo možné čísla přerušení definovat a
určitým způsobem standardizovat. O to se pokusila společnost Intel, která
specifikovala následující tabulku, kterou by měli dodržovat výrobci počítačů.
Pro snadnější vyhledávání ponechávám původní popisky:</p>

<table>
<tr><th>Číslo přerušení</th><th>Popis</th><th>Platné pro čipy</th></tr>
<tr><td> 0</td><td>Divide by zero</td><td>&nbsp;</td></tr>
<tr><td> 1</td><td>Single step</td><td>&nbsp;</td></tr>
<tr><td> 2</td><td>Non-maskable (NMI)</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>Breakpoint</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>Overflow trap</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>BOUND range exceeded</td><td>186, 286, 386</td></tr>
<tr><td> 6</td><td>Invalid opcode</td><td>186, 286, 386</td></tr>
<tr><td> 7</td><td>Coprocessor not available</td><td>286, 386</td></tr>
<tr><td> 8</td><td>Double fault exception</td><td>286, 386</td></tr>
<tr><td> 9</td><td>Coprocessor segment overrun</td><td>286, 386</td></tr>
<tr><td> A</td><td>Invalid task state segment</td><td>286, 386</td></tr>
<tr><td> B</td><td>Segment not present</td><td>286, 386</td></tr>
<tr><td> C</td><td>Stack exception</td><td>286, 386</td></tr>
<tr><td> D</td><td>General protection exception</td><td>286, 386</td></tr>
<tr><td> E</td><td>Page fault</td><td>286, 386</td></tr>
<tr><td> F</td><td>Reserved</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>Coprocessor error</td><td>286, 386</td></tr>
</table>

<p>Na platformě IBM PC se signál přerušení z&nbsp;čipu 8259 (a tedy
z&nbsp;logického pohledu přerušení IRQ0 až IRQ7) mapuje do tabulky vektorů
přerušení na offset 8 a obsazuje tedy v&nbsp;tabulce indexy 8 až F. To je sice
v&nbsp;rozporu s&nbsp;výše zmíněným doporučením Intelu, že prvních 17 (později
32) vektorů má být rezervovaných pro samotný mikroprocesor, ale toto doporučení
bylo při návrhu IBM PC ignorováno. Proto máme na PC tyto hardwarová přerušení,
tedy přerušení, která jsou generována z&nbsp;pohledu mikroprocesoru externími
vlivy:</p>

<table>
<tr><th>IRQ (HW přerušení)</th><th>Číslo přerušení</th><th>Stručný popis</th></tr>
<tr><td>IRQ0</td><td>8</td><td>čítač/časovač (ten využijeme dnes)</td></tr>
<tr><td>IRQ1</td><td>9</td><td>obsluha klávesnice</td></tr>
<tr><td>IRQ2</td><td>A</td><td>vertikální zatemnění na EGA/VGA (nelze se spolehnout)</td></tr>
<tr><td>IRQ3</td><td>B</td><td>sériový port COM2 nebo COM4</td></tr>
<tr><td>IRQ4</td><td>C</td><td>sériový port COM1 nebo COM3</td></tr>
<tr><td>IRQ5</td><td>D</td><td>řadič pevného disku nebo paralelní port LPT2</td></tr>
<tr><td>IRQ6</td><td>E</td><td>řadič disketové mechaniky</td></tr>
<tr><td>IRQ7</td><td>F</td><td>paralelní port LPT1</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: na IBM PC AT (286) je navíc díky
kaskádovému zapojení dvou řadičů přerušení 8259 k&nbsp;dispozici dalších sedm
externích zdrojů přerušení.</div></p>

<p>Spojeno dohromady &ndash; pokud se zaměříme na IBM PC a XT, bude tabulka
s&nbsp;přerušovacími vektory vypadat přibližně následovně:</p>

<table>
<tr><th>Číslo přerušení</th><th>Stručný popis</th></tr>
<tr><td>0</td><td>dělení nulou</td></tr>
<tr><td>1</td><td>ladění &ndash; provedení jednoho kroku</td></tr>
<tr><td>2</td><td>NMI</td></tr>
<tr><td>3</td><td>dosažení breakpointu</td></tr>
<tr><td>4</td><td>overflow</td></tr>
<tr><td>5</td><td>rutina pro Print Screen</td></tr>
<tr><td>6</td><td>nevalidní instrukce (ne na IBM PC)</td></tr>
<tr><td>7</td><td>koprocesor není dostupný (ne na IBM PC)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>8</td><td>IRQ0 &ndash; čítač/časovač (ten využijeme dnes)</td></tr>
<tr><td>9</td><td>IRQ1 &ndash; obsluha klávesnice</td></tr>
<tr><td>A</td><td>IRQ2 &ndash; vertikální zatemnění na EGA/VGA (nelze se spolehnout)</td></tr>
<tr><td>B</td><td>IRQ3 &ndash; sériový port COM2 nebo COM4</td></tr>
<tr><td>C</td><td>IRQ4 &ndash; sériový port COM1 nebo COM3</td></tr>
<tr><td>D</td><td>IRQ5 &ndash; řadič pevného disku nebo paralelní port LPT2</td></tr>
<tr><td>E</td><td>IRQ6 &ndash; řadič disketové mechaniky</td></tr>
<tr><td>F</td><td>IRQ7 &ndash; paralelní port LPT1</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>BIOS &ndash; video podslužby (už jsme viděli)</td></tr>
<tr><td>11-1F</td><td>BIOS &ndash; další více či méně užitečné podslužby</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>20</td><td>DOS &ndash; ukončení procesu</td></tr>
<tr><td>21</td><td>DOS &ndash; většina služeb systému (známe jen některé)</td></tr>
<tr><td>22-2F</td><td>DOS &ndash; další služby systému</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>40-...</td><td>BIOS, NETBIOS atd., tady už je docela zmatek</td></tr>
<tr><td>70-77</td><td>IRQ8-IRQ15 na PC AT a vyšších</td></tr>
<tr><td>F1-FF</td><td>rezervováno pro IBM (ale to s&nbsp;PC AT padlo, IBM přestala být v&nbsp;tomto ohledu relevantní)</td></tr>
</table>



<p><a name="k09"></a></p>
<h2 id="k09">9. Realizace vlastní přerušovací rutiny s&nbsp;její &bdquo;registrací&ldquo;</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Úplný zdrojový kód dnešního prvního demonstračního příkladu</h2>

<p>Úplný zdrojový kód dnešního prvního demonstračního příkladu, v&nbsp;němž je
realizována registrace obsluhy přerušení časovače, která při každém
&bdquo;tiku&ldquo; vytiskne na výstup jeden znak, vypadá následovně:</p>

<pre>
<i>; Zakladni pouziti casovace 8253 v IBM PC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o timer_basic.com timer_basic.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o timer_basic.com timer_basic.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 286         <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
IRQ_0_VECTOR equ 0x0020  ; adresa vektoru preruseni pro IRQ 0
 &nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16          <i>; vyvolani sluzby BIOSu</i>
%endmacro
&nbsp;
<i>; tisk jedineho znaku pres DOS</i>
%macro <strong>print_char</strong> 1
        mov     ah, 0x02      <i>; cislo sluzby DOSu</i>
        mov     dl, %1        <i>; kod zapisovaneho znaku</i>
        int     0x21          <i>; vyvolani sluzby DOSu</i>
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        print_char '&gt;'          <i>; oznameni uzivateli, ze jsme pripraveni</i>
&nbsp;
    	xor  ax, ax
        mov  es, ax
        mov  di, IRQ_0_VECTOR   ; ES:DI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08
&nbsp;
        cli                     <i>; zakaz preruseni</i>
	lea  ax, int8_handler   ; zmena offsetove casti adresy
	mov  es:[di], ax
&nbsp;
	mov  ax, cs             <i>; zmena segmentove casti adresy</i>
	mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
&nbsp;
        wait_key                <i>; cekani na stisk klavesy</i>
        print_char '.'          <i>; oznameni uzivateli, ze ukoncujeme proces</i>
&nbsp;
        exit                    <i>; ukonceni procesu</i>
&nbsp;
&nbsp;
<strong>int8_handler</strong>:                   <i>; nova obsluha preruseni</i>
        pusha                   <i>; ulozit vsechny registry</i>
        print_char 't'          <i>; t=tick</i>
&nbsp;
    	mov al, 0x20
	out 0x20, al            <i>; oznameni, ze preruseni je u konce radici preruseni </i>
&nbsp;
        popa                    <i>; obnovit vsechny registry</i>
        sti                     <i>; povoleni maskovatelnych preruseni</i>
        iret                    <i>; navrat z preruseni</i>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Chování programu po jeho ukončení</h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. Uložení původní přerušovací subrutiny</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Obnova původní přerušovací subrutiny před ukončením procesu</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Úplný zdrojový kód dnešního druhého demonstračního příkladu</h2>

<p>Druhý demonstrační příklad, který dokáže při svém startu uchovat adresu
původní přerušovací rutiny a po svém ukončení ji obnovit, vypadá
následovně:</p>

<pre>
<i>; Pouziti casovace, obnoveni puvodni rutiny po ukonceni programu</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o timer_restore.com timer_restore.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o timer_restore.com timer_restore.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 286         <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
IRQ_0_VECTOR equ 0x0020  ; adresa vektoru preruseni pro IRQ 0
 &nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16          <i>; vyvolani sluzby BIOSu</i>
%endmacro
&nbsp;
<i>; tisk jedineho znaku pres DOS</i>
%macro <strong>print_char</strong> 1
        mov     ah, 0x02      <i>; cislo sluzby DOSu</i>
        mov     dl, %1        <i>; kod zapisovaneho znaku</i>
        int     0x21          <i>; vyvolani sluzby DOSu</i>
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        print_char '&gt;'          <i>; oznameni uzivateli, ze jsme pripraveni</i>
&nbsp;
    	xor  ax, ax
        mov  es, ax
        mov  si, IRQ_0_VECTOR   ; ES:SI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08
&nbsp;
        lea  di, original_handler
        mov  ax, es:[si]        <i>; ulozeni puvodni adresy (segment + offset) do</i>
        mov  cs:[di], ax        <i>; uloziste original_handler</i>
        mov  ax, es:[si+2]
        mov  cs:[di+2], ax
&nbsp;
        mov  di, IRQ_0_VECTOR   ; ES:DI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08
        cli                     <i>; zakaz preruseni</i>
	lea  ax, int8_handler   ; zmena offsetove casti adresy
	mov  es:[di], ax
&nbsp;
	mov  ax, cs             <i>; zmena segmentove casti adresy</i>
	mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
&nbsp;
        wait_key                <i>; cekani na stisk klavesy</i>
        print_char '.'          <i>; oznameni uzivateli, ze ukoncujeme proces</i>
&nbsp;
    	xor  ax, ax
        mov  es, ax
        cli                     <i>; zakaz preruseni</i>
	lea  si, original_handler
        mov  di, IRQ_0_VECTOR
	mov  ax, cs:[si]        <i>; obnoveni puvodniho handleru</i>
        mov  es:[di], ax
	mov  ax, cs:[si+2]
        mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
&nbsp;
        exit                    <i>; ukonceni procesu</i>
&nbsp;
&nbsp;
<strong>int8_handler</strong>:                   <i>; nova obsluha preruseni</i>
        pusha                   <i>; ulozit vsechny registry</i>
        print_char 't'          <i>; t=tick</i>
&nbsp;
    	mov al, 0x20
	out 0x20, al            <i>; oznameni, ze preruseni je u konce radici preruseni </i>
&nbsp;
        popa                    <i>; obnovit vsechny registry</i>
        sti                     <i>; povoleni maskovatelnych preruseni</i>
        iret                    <i>; navrat z preruseni</i>
&nbsp;
&nbsp;
<strong>original_handler</strong>: dw 0, 0
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Úplný zdrojový kód dnešního třetího demonstračního příkladu</h2>

<p>Dnešní třetí demonstrační příklad, který byl získán úpravou a refaktoringem
příkladu druhého, vypadá následovně:</p>

<pre>
<i>; Pouziti casovace, obnoveni puvodni rutiny po ukonceni programu</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o timer_restore_better_struct.com timer_restore_better_struct.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o timer_restore_better_struct.com timer_restore_better_struct.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 286         <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
IRQ_0_VECTOR equ 0x0020  ; adresa vektoru preruseni pro IRQ 0
 &nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16          <i>; vyvolani sluzby BIOSu</i>
%endmacro
&nbsp;
<i>; tisk jedineho znaku pres DOS</i>
%macro <strong>print_char</strong> 1
        mov     ah, 0x02      <i>; cislo sluzby DOSu</i>
        mov     dl, %1        <i>; kod zapisovaneho znaku</i>
        int     0x21          <i>; vyvolani sluzby DOSu</i>
%endmacro
&nbsp;
<i>; ulozeni puvodniho vektoru preruseni</i>
%macro <strong>store_original_vector</strong> 2
    	xor  ax, ax
        mov  es, ax
        mov  si, %1             <i>; ES:SI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08</i>
        lea  di, %2
        mov  ax, es:[si]        <i>; ulozeni puvodni adresy (segment + offset) do</i>
        mov  cs:[di], ax        <i>; uloziste original_handler</i>
        mov  ax, es:[si+2]
        mov  cs:[di+2], ax
%endmacro
&nbsp;
<i>; obnoveni puvodniho vektoru preruseni</i>
%macro <strong>restore_original_vector</strong> 2
    	xor  ax, ax
        mov  es, ax
        cli                     <i>; zakaz preruseni</i>
	lea  si, %2             <i>; uloziste</i>
        mov  di, %1             <i>; adresa vektoru</i>
	mov  ax, cs:[si]        <i>; obnoveni puvodniho handleru</i>
        mov  es:[di], ax
	mov  ax, cs:[si+2]
        mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
%endmacro
&nbsp;
<i>; nastaveni noveho vektoru preruseni</i>
%macro <strong>set_irq_handler</strong> 2
        mov  di, %1             <i>; ES:DI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08</i>
        cli                     <i>; zakaz preruseni</i>
	lea  ax, %2             <i>; zmena offsetove casti adresy</i>
	mov  es:[di], ax
&nbsp;
	mov  ax, cs             <i>; zmena segmentove casti adresy</i>
	mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
%endmacro
&nbsp;
<i>; oznameni, ze preruseni je u konce radici preruseni </i>
%macro <strong>end_interrupt</strong> 0
    	mov al, 0x20
	out 0x20, al
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        print_char '&gt;'          <i>; oznameni uzivateli, ze jsme pripraveni</i>
&nbsp;
        store_original_vector IRQ_0_VECTOR, original_handler
        set_irq_handler IRQ_0_VECTOR, int8_handler
&nbsp;
        wait_key                <i>; cekani na stisk klavesy</i>
        print_char '.'          <i>; oznameni uzivateli, ze ukoncujeme proces</i>
&nbsp;
        restore_original_vector IRQ_0_VECTOR, original_handler
&nbsp;
        exit                    <i>; ukonceni procesu</i>
 &nbsp;
&nbsp;
<strong>int8_handler</strong>:                   <i>; nova obsluha preruseni</i>
        pusha                   <i>; ulozit vsechny registry</i>
        print_char 't'          <i>; t=tick</i>
&nbsp;
        end_interrupt           <i>; oznameni, ze preruseni je u konce radici preruseni </i>
&nbsp;
        popa                    <i>; obnovit vsechny registry</i>
        sti                     <i>; povoleni maskovatelnych preruseni</i>
        iret                    <i>; navrat z preruseni</i>
&nbsp;
&nbsp;
<strong>original_handler</strong>: dw 0, 0
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Úplný zdrojový kód dnešního posledního demonstračního příkladu</h2>

<p>Dnešní poslední demonstrační příklad, v&nbsp;němž se na obrazovku vypisují
znaky s&nbsp;vyšší frekvencí, vypadá následovně. Mimochodem &ndash; tento
příklad ještě není dokonalý, protože neobnoví původní frekvenci přerušení IRQ
8. Je to tak schválně, protože po ukončení tohoto příkladu a spuštění (dejme
tomu) Norton Commanderu nebo Volkov Commanderu se bude screen saver pouštět
prakticky ihned &ndash; nikoli tedy po nastaveném intervalu (jedna minuta atd.)
ale přibližně 55&times; rychleji:</p>

<pre>
<i>; Pouziti casovace, zrychleni citani, obnoveni puvodni rutiny po ukonceni programu</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o timer_faster_clock.com timer_faster_clock.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o timer_faster_clock.com timer_faster_clock.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 286         <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
IRQ_0_VECTOR equ 0x0020  ; adresa vektoru preruseni pro IRQ 0
TIMER_CHANNEL_0 equ 0x40 ; kanal 0 casovace
TIMER_CONTROL   equ 0x43 ; ridici port casovace
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16          <i>; vyvolani sluzby BIOSu</i>
%endmacro
&nbsp;
<i>; tisk jedineho znaku pres DOS</i>
%macro <strong>print_char</strong> 1
        mov     ah, 0x02      <i>; cislo sluzby DOSu</i>
        mov     dl, %1        <i>; kod zapisovaneho znaku</i>
        int     0x21          <i>; vyvolani sluzby DOSu</i>
%endmacro
&nbsp;
<i>; ulozeni puvodniho vektoru preruseni</i>
%macro <strong>store_original_vector</strong> 2
    	xor  ax, ax
        mov  es, ax
        mov  si, %1             <i>; ES:SI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08</i>
        lea  di, %2
        mov  ax, es:[si]        <i>; ulozeni puvodni adresy (segment + offset) do</i>
        mov  cs:[di], ax        <i>; uloziste original_handler</i>
        mov  ax, es:[si+2]
        mov  cs:[di+2], ax
%endmacro
&nbsp;
<i>; obnoveni puvodniho vektoru preruseni</i>
%macro <strong>restore_original_vector</strong> 2
    	xor  ax, ax
        mov  es, ax
        cli                     <i>; zakaz preruseni</i>
	lea  si, %2             <i>; uloziste</i>
        mov  di, %1             <i>; adresa vektoru</i>
	mov  ax, cs:[si]        <i>; obnoveni puvodniho handleru</i>
        mov  es:[di], ax
	mov  ax, cs:[si+2]
        mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
%endmacro
&nbsp;
<i>; nastaveni noveho vektoru preruseni</i>
%macro <strong>set_irq_handler</strong> 2
        mov  di, %1             <i>; ES:DI obsahuje adresu, na ktere je adresa obsluhy preruseni 0x08</i>
        cli                     <i>; zakaz preruseni</i>
	lea  ax, %2             <i>; zmena offsetove casti adresy</i>
	mov  es:[di], ax
&nbsp;
	mov  ax, cs             <i>; zmena segmentove casti adresy</i>
	mov  es:[di+2], ax
        sti                     <i>; povoleni preruseni</i>
%endmacro
&nbsp;
<i>; oznameni, ze preruseni je u konce radici preruseni </i>
%macro <strong>end_interrupt</strong> 0
    	mov al, 0x20
	out 0x20, al
%endmacro
&nbsp;
<i>; nastaveni frekvenci casovace</i>
%macro <strong>timer_frequency</strong> 1
        mov al, 0b00110110    <i>; 00xxxxxx: kanál číslo 0</i>
                              <i>; xx11xxxx: zápis obou bajtů dělitele</i>
                              <i>; xxxx011x: režim generátoru obdélníku</i>
                              <i>; xxxxxxx0: binární režim čítače</i>
        mov ax, 1193180 / %1  ; delitel
        out TIMER_CHANNEL_0, al  ; nastaveni dolniho bajtu delitele
        mov al, ah
        out TIMER_CHANNEL_0, al  ; nastaveni horniho bajtu delitele
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        print_char '&gt;'          <i>; oznameni uzivateli, ze jsme pripraveni</i>
&nbsp;
        store_original_vector IRQ_0_VECTOR, original_handler
        set_irq_handler IRQ_0_VECTOR, int8_handler
        timer_frequency 100
&nbsp;
        wait_key                <i>; cekani na stisk klavesy</i>
        print_char '.'          <i>; oznameni uzivateli, ze ukoncujeme proces</i>
&nbsp;
        restore_original_vector IRQ_0_VECTOR, original_handler
&nbsp;
        exit                    <i>; ukonceni procesu</i>
&nbsp;
&nbsp;
<strong>int8_handler</strong>:                   <i>; nova obsluha preruseni</i>
        pusha                   <i>; ulozit vsechny registry</i>
        print_char 't'          <i>; t=tick</i>
&nbsp;
        end_interrupt           <i>; oznameni, ze preruseni je u konce radici preruseni </i>
&nbsp;
        popa                    <i>; obnovit vsechny registry</i>
        sti                     <i>; povoleni maskovatelnych preruseni</i>
        iret                    <i>; navrat z preruseni</i>
&nbsp;
&nbsp;
<strong>original_handler</strong>: dw 0, 0
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupt table<br />
<a href="https://stanislavs.org/helppc/int_table.html">https://stanislavs.org/helppc/int_table.html</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

