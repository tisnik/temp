<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>BaCon: transpřekladač BASICu do C</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>BaCon: transpřekladač BASICu do C</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V tomto článku si představíme základní možnosti poskytované nástrojem BaCon. Jedná se o transpřekladač programovacího jazyka BASIC (resp.&nbsp;jeho upravené a rozšířené podoby) do jazyka C. Tento nástroj je zajímavý proto, že umožňuje prostudovat různé aspekty a problémy transpřekladu.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. BaCon: transpřekladač BASICu do C</a></p>
<p><a href="#k02">2. Překlad BaConu</a></p>
<p><a href="#k03">3. &bdquo;Hello world&ldquo; v&nbsp;BaConu</a></p>
<p><a href="#k04">4. Struktura programů vytvořených v&nbsp;BaConu</a></p>
<p><a href="#k05">5. Čísla řádků v&nbsp;původním zdrojovém kódu BASICu</a></p>
<p><a href="#k06">6. Základní operace s&nbsp;poli</a></p>
<p><a href="#k07">7. Dvourozměrná pole</a></p>
<p><a href="#k08">8. Příkaz <strong>GOTO</strong> a <strong>LABEL</strong></a></p>
<p><a href="#k09">*** 9. Podprogramy založené na příkazech <strong>GOSUB</strong> a <strong>RETURN</strong></a></p>
<p><a href="#k10">*** 10. Struktura programové smyčky typu <strong>WHILE-WEND</strong></a></p>
<p><a href="#k11">*** 11. Struktura programové smyčky <strong>FOR</strong> se záporným krokem</a></p>
<p><a href="#k12">*** 12. Vnořené programové smyčky a manipulace s&nbsp;polem &ndash; bubble sort</a></p>
<p><a href="#k13">*** 13. Využití maker preprocesoru jazyka C: zápis příkazů malými písmeny</a></p>
<p><a href="#k14">*** 14. Operace s&nbsp;asociativními poli</a></p>
<p><a href="#k15">*** 15. Operace se záznamy</a></p>
<p><a href="#k16">*** 16. Pole záznamů</a></p>
<p><a href="#k17">*** 17. Závěrečné zhodnocení</a></p>
<p><a href="#k18">18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Dřívější články o interpretrech a překladačích programovacího jazyka BASIC</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. BaCon: transpřekladač BASICu do C</h2>

<p>Na stránkách Roota jsme se již několikrát zabývali programovacím jazykem
BASIC, a to jak jeho dnes již zastaralými &bdquo;retro&ldquo; interpretry
pocházejícími většinou z&nbsp;první poloviny osmdesátých let minulého století,
tak i některými novějšími reinkarnacemi tohoto jazyka (odkazy na tyto články
jsou uvedeny <a href="#k19">v&nbsp;devatenácté kapitole</a>). Současně jsme si
již mnohokrát ukázali možnosti nabízené některými <i>transpilery</i>,
tj.&nbsp;překladači, které negenerují přímo strojový kód či bajtkód pro nějaký
virtuální stroj (JVM, Python VM atd.), ale transformují zdrojový kód
z&nbsp;jednoho programovacího jazyka do jazyka jiného. To s&nbsp;sebou přináší
mnohé problémy, které mohou být způsobeny rozdílným typovým systémem, zcela
odlišnou sémantikou obou jazyků, ztrátou informací o souborech a řádcích
v&nbsp;původním zdrojovém kódu, menší čitelnost transpilovaného kódu atd. Ovšem
mnohdy výhody převažují &ndash; přenositelnost na všechny platformy podporované
cílovým jazykem, není nutné vytvářet optimalizující překladač, návaznost na
existující ekosystém atd.</p>

<p>V&nbsp;podobě <i>BaConu</i> se obě výše uvedené technologie spojily, protože
BaCon je transpřekladačem BASICu do jazyka C. Potenciální možnosti cílové
platformy (C běží prakticky na jakémkoli typu mikrořadiče i mikroprocesoru) se
tak spojují s&nbsp;možnostmi BASICu. Ty jsou však, jak uvidíme v&nbsp;dalších
kapitolách, z&nbsp;dnešního pohledu již poněkud omezené a netypické, takže
cílová skupina uživatelů je (podle názoru autora článku) relativně malá.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Překlad BaConu</h2>

<p>Všechny další kapitoly ukazují možnosti <i>BaConu</i> na několika
demonstračních příkladech. Abychom mohli tyto příklady (trans)přeložit, je
pochopitelně nutné mít k&nbsp;dispozici vlastní transpřekladač. Jeho zdrojové
kódy lze získat z&nbsp;adresy <a
href="http://basic-converter.org/#downloads">http://basic-converter.org/#downloads</a>.
Po stažení a rozbalení archivu se překlad spustí příkazem:</p>

<pre>
$ <strong>make bacon</strong>
</pre>

<p>S&nbsp;průběhem:</p>

<pre>
rm -f build/* build-cpp/*
Converting 'bacon.bac'... done, 9872 lines were processed in 189 seconds.
Creating lexical analyzer... done.
Compiling 'bacon.bac'... make[1]: Entering directory '/home/ptisnovs/temp/bacon_trunk/build'
gcc  -g -O2 -fno-var-tracking-assignments -c bacon.bac.c
gcc -o bacon bacon.bac.o    -lm
make[1]: Leaving directory '/home/ptisnovs/temp/bacon_trunk/build'
Done, program 'bacon' ready.
strip build/bacon
Skipping BaConGUI for GTK.
Skipping BaConGUI for FLTK.
Run 'make install' or 'sudo make install' to install BaCon on your system.
</pre>

<p>Výsledkem bude nový spustitelný soubor <strong>bacon</strong> umístěný
v&nbsp;podadresáři <strong>build</strong>.</p>

<p><div class="rs-tip-major">Poznámka: alternativně je možné při překladu
specifikovat, že se má přidat podpora pro grafická uživatelská rozhraní GTK
nebo pro FLTK. Pro tyto účely se používají příkazy:</div></p>

<pre>
$ <strong>make bacongui-gtk</strong>
$ <strong>make bacongui-fltk</strong>
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. &bdquo;Hello world&ldquo; v&nbsp;BaConu</h2>

<p>Možnosti a některá omezení BaConu si ukážeme na několika demonstračních
příkladech. Začneme pochopitelně naprostou klasikou, tedy programem typu
&bdquo;Hello world&ldquo;, který lze v&nbsp;BaConu (a jakémkoli jiném BASICu
vhodném toho jména) zapsat příkazem <strong>PRINT</strong>. Příkazy
<strong>REM</strong> pouze uvozují poznámky:</p>

<pre>
<strong>REM</strong> *****************************
<strong>REM</strong>
<strong>REM</strong> Program "Hello world"
<strong>REM</strong> 
<strong>REM Uprava pro BaCon
<strong>REM</strong> 
<strong>REM</strong> *****************************
&nbsp;
<strong>PRINT</strong> "Hello, world!"
</pre>

<p>Alternativně lze <strong>REM</strong> nahradit za apostrof:</p>

<pre>
' *****************************
' 
' Program "Hello world"
' 
' Uprava pro BaCon
' 
' *****************************
&nbsp;
<strong>PRINT</strong> "Hello, world!"
</pre>

<p><div class="rs-tip-major">Poznámka: všechna klíčová slova BASICu, zde
konkrétně slova <strong>REM</strong> a <strong>PRINT</strong>, je nutné psát
velkými písmeny. Tím se &ndash; kromě dalších věcí &ndash; zajistí, že nedojde
ke kolizím s&nbsp;podobnými klíčovými slovy v&nbsp;jazyku C (rozdíl mezi
<strong>IF</strong> a <strong>if</strong> atd.).</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Struktura programů vytvořených v&nbsp;BaConu</h2>

<p>Překlad resp.&nbsp;přesněji řečeno transpřeklad, se provede příkazem:</p>

<pre>
$ <strong>./bacon hello.bac</strong>
</pre>

<p>přičemž je nutné, aby zdrojové kódy měly příponu <strong>.bac</strong> (což
lze snadno upravit zásahem do zdrojových kódů BaConu). Výsledkem by měl být
spustitelný soubor. Pokud však chcete vidět, jak vypadá kód transpilovaný do C,
použijte příkaz:</p>

<pre>
$ <strong>./bacon -p hello.bac</strong>
</pre>

<p>Výsledkem bude několik souborů, které ukazují, že se vlastně vytvoří
plnohodnotný C projekt s&nbsp;vlastním Makefile:</p>

<pre>
-rwxrwxr-x 1 ptisnovs ptisnovs  33888 Nov 30 15:10 hello
-rw-rw-r-- 1 ptisnovs ptisnovs    153 Nov 27 08:53 hello.bac
-rw-rw-r-- 1 ptisnovs ptisnovs   1337 Nov 30 15:10 hello.bac.c
-rw-rw-r-- 1 ptisnovs ptisnovs     39 Nov 30 15:10 hello.bac.float.h
-rw-rw-r-- 1 ptisnovs ptisnovs  13654 Nov 30 15:10 hello.bac.functions.h
-rw-rw-r-- 1 ptisnovs ptisnovs  30376 Nov 30 15:10 hello.bac.generic.h
-rw-rw-r-- 1 ptisnovs ptisnovs    292 Nov 30 15:10 hello.bac.h
-rw-rw-r-- 1 ptisnovs ptisnovs   6324 Nov 30 15:10 hello.bac.lex
-rw-rw-r-- 1 ptisnovs ptisnovs  76909 Nov 30 15:10 hello.bac.lex.c
-rwxrwxr-x 1 ptisnovs ptisnovs  40176 Nov 30 15:10 hello.bac.lex.exe
-rw-rw-r-- 1 ptisnovs ptisnovs      0 Nov 30 15:10 hello.bac.log
-rw-rw-r-- 1 ptisnovs ptisnovs  26096 Nov 30 15:10 hello.bac.o
-rw-rw-r-- 1 ptisnovs ptisnovs     38 Nov 30 15:10 hello.bac.string.h
-rw-rw-r-- 1 ptisnovs ptisnovs    229 Nov 30 15:10 Makefile.bacon
</pre>

<p>Hlavičkový soubor <strong>hello.bac.h</strong> neobsahuje (prozatím) žádné
důležité deklarace:</p>

<pre>
/* Created with BaCon 4.4.1 - (c) Peter van Eerten - MIT License */
#include "hello.bac.generic.h"
#include "hello.bac.functions.h"
#line 1 "hello.bac"
#line 2 "hello.bac"
#line 3 "hello.bac"
#line 4 "hello.bac"
#line 5 "hello.bac"
#line 6 "hello.bac"
#line 7 "hello.bac"
#line 9 "hello.bac"
</pre>

<p>Naproti tomu <strong>hello.bac.c</strong> obsahuje implementaci funkce
<strong>main</strong> s&nbsp;kódem pro inicializaci (my ho vlastně nepoužijeme)
a taktéž strojově přeložený příkaz <strong>PRINT</strong> do podoby
s&nbsp;řetězcovým literálem:</p>

<pre>
__b2c__assign = (char *) "Hello, world!";
if (__b2c__assign != NULL)
{
        fputs (__b2c__assign, stdout);
}
</pre>

<p>Podívejme se na celý soubor <strong>hello.bac.c</strong>:</p>

<pre>
/* Created with BaCon 4.4.1 - (c) Peter van Eerten - MIT License */
#include "hello.bac.h"
#include "hello.bac.string.h"
#include "hello.bac.float.h"
/****************************/
/* Main program starts here */
/****************************/
int main (int argc, char **argv)
{
        setvbuf (stdout, NULL, _IOLBF, 0);
        if (argc &gt; 0)
        {
                __b2c__me_var__b2c__string_var = strdup (argv[0]);
        }
        if (argc == 2 &amp;&amp; !strcmp (argv[1], "-bacon"))
        {
                fprintf (stderr, "Converted by %s.\n", COMPILED_BY_WHICH_BACON__b2c__string_var);
                exit (EXIT_SUCCESS);
        }
/* Setup the reserved variable 'ARGUMENT' */
        __b2c__argument (&amp;ARGUMENT__b2c__string_var, argc, argv);
/* By default seed random generator */
        srandom ((unsigned int) time (NULL));
/* Determine current moment and keep it for timer function */
        __b2c__timer (1);
/* Setup error signal handling */
        signal (SIGILL, __b2c__catch_signal);
        signal (SIGABRT, __b2c__catch_signal);
        signal (SIGFPE, __b2c__catch_signal);
        signal (SIGSEGV, __b2c__catch_signal);
/* Rest of the program */
#line 1 "hello.bac"
#line 2 "hello.bac"
#line 3 "hello.bac"
#line 4 "hello.bac"
#line 5 "hello.bac"
#line 6 "hello.bac"
#line 7 "hello.bac"
#line 9 "hello.bac"
        __b2c__assign = (char *) "Hello, world!";
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs ("\n", stdout);
        return (0);
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Čísla řádků v&nbsp;původním zdrojovém kódu BASICu</h2>

<p>V&nbsp;céčkovém kódu vygenerovaném BaConem jste si mohli povšimnout několika
direktiv ve tvaru:</p>

<pre>
#line 1 "hello.bac"
</pre>

<p>Tyto direktivy informují překladač o tom, jakým způsobem má uživatele
informovat o případných chybách, ke kterým může během překladu dojít (a
dochází, jak ostatně uvidíme dále). Uživatele totiž většinou nezajímá to, že
chyba nastala v&nbsp;souboru <strong>hello.bac.c</strong>, který je
vygenerován; zajímá ho, že se chyba týká například třetího řádku ze vstupního
souboru <strong>hello.bac</strong>.</p>

<p><div class="rs-tip-major">Poznámka: jedná se o velmi dobrou a přitom často
přehlíženou vlastnost programovacího jazyka C. V&nbsp;ostatních programovacích
jazycích je (někdy) možné podobné funkcionality dosáhnou využitím <i>source
map</i>.</div></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Základní operace s&nbsp;poli</h2>

<p>Už v&nbsp;originálním BASICu bylo možné pracovat s&nbsp;jednorozměrnými
poli, která mohla obsahovat číselné hodnoty (původně jen reálná čísla, později
se rozlišovalo mezi reálnými a celými čísly). Pole se definovala a současně i
alokovala příkazem <strong>DIM</strong> a některé BASICy umožňovaly dokonce
realokaci pole příkazem <strong>REDIM</strong>. V&nbsp;BaConu se pole definuje
a alokuje odlišně &ndash; zadáním názvu pole a počtu prvků. Před tuto deklaraci
se většinou ještě zadává klíčové slovo <strong>LOCAL</strong> znamenající, že
pole bude vytvořeno lokální v&nbsp;rámci funkce <strong>main</strong> (nebo
subrutiny, kde je pole definováno). K&nbsp;přístupu k&nbsp;prvkům pole se
používají hranaté závorky (jako v&nbsp;C, Javě, atd.) a nikoli závorky kulaté,
jako v&nbsp;klasickém BASICu:</p>

<pre>
REM *****************************
REM 
REM Prace s jednorozmernymi poli
REM 
REM Uprava pro BaCon
REM 
REM *****************************
&nbsp;
<strong>LOCAL A[10]</strong>
&nbsp;
FOR I=0 TO 10
    <strong>A[I]=10*I</strong>
NEXT I
&nbsp;
REM TISK POLE
FOR I=0 TO 10
    <strong>PRINT A[I]</strong>
NEXT I
</pre>

<p>Po překladu se ve vygenerovaném hlavičkovém souboru objeví definice,
deklarace a současně i inicializace pole:</p>

<pre>
...
...
...
<strong>long A[(uint64_t) 10 + 0] = { 0 };</strong>
...
...
...
long I;
...
...
...
</pre>

<p>Samotná práce s&nbsp;poli se přeloží do prakticky totožného kódu jako
v&nbsp;BaConu:</p>

<pre>
...
...
...
for (I = 0; I &lt;= 10; I += 1)
{
        A[(uint64_t) I] = (long) (10 * I);
}
for (I = 0; I &lt;= 10; I += 1)
{
        fputs (STR__b2c__string_var (A[(uint64_t) I]), stdout);
        fputs ("\n", stdout);
}
return (0);
</pre>

<p><div class="rs-tip-major">Poznámka: ve skutečnosti je v&nbsp;programu
logická chyba, protože prvky pole jsou indexovány od nuly a počet prvků je
roven deseti, takže by se programová smyčka měla ukončit hodnotou 9. Na tuto
chybu nás však BaCon neupozorní a ani v&nbsp;runtime na ni nemusí být snadné
přijít (na rozdíl od originálního BASICu, který tyto věci hlídá).</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Dvourozměrná pole</h2>

<p>Podobným způsobem jako s&nbsp;jednorozměrnými poli se v&nbsp;BaConu pracuje
s&nbsp;poli dvourozměrnými, samozřejmě s&nbsp;tím dodatkem, že si opět musíme
dát pozor na rozměry pole a vztah mezi rozměrem pole a koncovou hodnotou
počitadel v&nbsp;programové smyčce. V&nbsp;dalším demonstračním příkladu se
pracuje s&nbsp;polem s&nbsp;6&times;6 prvky:</p>

<pre>
REM *****************************
REM 
REM Prace s dvourozmernymi poli
REM 
REM Uprava pro BaCon
REM 
REM *****************************
&nbsp;
<strong>LOCAL M[6][6]</strong>
&nbsp;
FOR I=0 TO 5
    FOR J=0 TO 5
        <strong>M[I][J]=I*J</strong>
    NEXT J
NEXT I
&nbsp;
REM TISK POLE
FOR I=0 TO 5
    FOR J=0 TO 5
        <strong>PRINT M[I][J], " ";</strong>
        NEXT J
    PRINT 
NEXT I
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si středníku v&nbsp;příkazu
<strong>PRINT</strong>, jenž umožňuje tisk většího množství zpráv na jediné
řádce. Tento koncept je převzat z&nbsp;originálního BASICu.</div></p>

<p>Definice a inicializace dvourozměrného pole v&nbsp;transpřeloženém céčku:</p>

<pre>
<strong>long M[(uint64_t) 6 + 0][(uint64_t) 6 + 0] = { 0 };</strong>
&nbsp;
long I;
&nbsp;
long J;
</pre>

<p>Práce s&nbsp;polem:</p>

<pre>
for (I = 0; I &lt;= 5; I += 1)
{
        for (J = 0; J &lt;= 5; J += 1)
        {
                M[(uint64_t) I][(uint64_t) J] = (long) (I * J);
        }
        if (__b2c__break_ctr)
        {
                __b2c__break_ctr--;
                if (!__b2c__break_ctr)
                {
                        if (__b2c__break_flag == 1)
                                break;
                        else
                                continue;
                }
                else
                        break;
        }
}
for (I = 0; I &lt;= 5; I += 1)
{
        for (J = 0; J &lt;= 5; J += 1)
        {
                fputs (STR__b2c__string_var (M[(uint64_t) I][(uint64_t) J]), stdout);
                __b2c__assign = (char *) " ";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fflush (stdout);
        }
        if (__b2c__break_ctr)
        {
                __b2c__break_ctr--;
                if (!__b2c__break_ctr)
                {
                        if (__b2c__break_flag == 1)
                                break;
                        else
                                continue;
                }
                else
                        break;
        }
        fputs ("\n", stdout);
}
return (0);
</pre>

<p><div class="rs-tip-major">Poznámka: v&nbsp;kódu je jasně patrné neustálé
vkládání testu na přerušení běhu programu uživatelem (Ctrl+Break), což je
operace, kterou klasické BASICy plně podporovaly.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Příkaz GOTO a LABEL</h2>

<p>Klasické BASICy kromě programové smyčky <strong>FOR-NEXT</strong> obsahovaly
i podporu pro skoky na čísla řádků. Pro tento účel se používal příkaz
<strong>GOTO</strong> a všechny řádky programu byly očíslovány, viz následující
příklad:</p>

<pre>
1 REM *****************************
2 REM Vypocet nejvetsiho spolecneho
3 REM delitele.
4 REM 
5 REM Uprava pro Atari BASIC
6 REM 
7 REM *****************************
8 REM
9 REM
10 PRINT "X=";
20 INPUT X
30 PRINT "Y=";
40 INPUT Y
50 IF X=Y THEN PRINT "GCD: ";X:END 
60 IF X&gt;Y THEN X=X-Y:<strong>GOTO 50</strong>
70 IF X&lt;Y THEN Y=Y-X:<strong>GOTO 50</strong>
998 REM finito
999 STOP
</pre>

<p>V&nbsp;BaConu se čísla řádků nepoužívají, ovšem příkaz <strong>GOTO</strong>
je stále podporován. Cíl skoku je pojmenován příkazem <strong>LABEL</strong>.
Předchozí příklad by se do BaConu mohl převzat následujícím způsobem:</p>

<pre>
REM *****************************
REM 
REM Vypocet nejvetsiho spolecneho
REM delitele.
REM 
REM Uprava pro BaCon
REM 
REM *****************************
&nbsp;
PRINT "X=";
INPUT X
PRINT "Y=";
INPUT Y
&nbsp;
<strong>LABEL LOOP</strong>
&nbsp;
IF X=Y THEN
    PRINT "GCD: ";X
    STOP
END IF
&nbsp;
IF X&gt;Y THEN
    X=X-Y
    <strong>GOTO LOOP</strong>
END IF
&nbsp;
IF X&lt;Y THEN
     Y=Y-X
     <strong>GOTO LOOP</strong>
END IF
</pre>

<p>Po překladu do jazyka C se taktéž použije příkaz <strong>goto</strong>,
který tento jazyk (plně) podporuje. Viz též zvýrazněné řádky:</p>

<pre>
...
...
...
__b2c__input (&amp;__b2c__assign, "\n");
X = atol (__b2c__assign);
free (__b2c__assign);
__b2c__assign = NULL;
__b2c__assign = (char *) "Y=";
if (__b2c__assign != NULL)
{
        fputs (__b2c__assign, stdout);
}
fflush (stdout);
__b2c__input (&amp;__b2c__assign, "\n");
Y = atol (__b2c__assign);
free (__b2c__assign);
__b2c__assign = NULL;
<strong>LOOP:</strong>
;
__b2c__label_floatarray_LOOP = 0;
__b2c__label_stringarray_LOOP = 0;
if ((X) == Y)
{
        __b2c__assign = (char *) "GCD: ";
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs (STR__b2c__string_var (X), stdout);
        fputs ("\n", stdout);
        kill (getpid (), SIGSTOP);
}
if ((X) &gt; Y)
{
        X = (long) (X - Y);
        <strong>goto LOOP;</strong>
}
if ((X) &lt; Y)
{
        Y = (long) (Y - X);
        <strong>goto LOOP;</strong>
}
return (0);
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Podprogramy založené na příkazech <strong>GOSUB</strong> a <strong>RETURN</strong></h2>

<p></p>

<pre>
1 REM *****************************
2 REM Vypocet konstanty Pi.
3 REM 
4 REM Uprava pro Atari BASIC
5 REM 
6 REM *****************************
7 REM
8 REM
9 REM
10 N=1
20 FOR I=1 TO 10
25 <strong>GOSUB 1000</strong>:REM VYPOCET PI
30 PRINT I,N,PI
35 N=N*2
40 NEXT I
998 REM finito
999 STOP
<strong>1000 REM </strong>
1001 REM SUBRUTINA PRO VYPOCET PI
1002 REM 
1010 PI=4
1020 FOR J=3 TO N+2 STEP 2
1030 PI=PI*(J-1)/J*(J+1)/J
1040 NEXT J
1050 <strong>RETURN </strong>
</pre>

<p></p>

<pre>
REM *****************************
REM 
REM Vypocet konstanty Pi.
REM 
REM Uprava pro BaCon
REM 
REM *****************************
&nbsp;
LOCAL N=1
&nbsp;
FOR I=1 TO 10
    REM vypocet PI
    <strong>GOSUB PI_COMP</strong>
    PRINT "I=",I," N=",N," PI=", PI_VAL
    N=N*2
NEXT I
REM finito
END
&nbsp;
REM *****************************
REM SUBRUTINA PRO VYPOCET PI
REM *****************************
&nbsp;
<strong>LABEL PI_COMP</strong>
PI_VAL = 4.0
FOR J=3 TO N+2 STEP 2
    PI_VAL=PI_VAL*(J-1)/J*(J+1)/J
NEXT J
<strong>RETURN </strong>
</pre>

<p></p>

<pre>
        for (I = 1; I &lt;= 10; I += 1)
        {
                __b2c__gosub_buffer_ptr++;
                if (__b2c__gosub_buffer_ptr &gt;= 64)
                {
                        ERROR = 31;
                        if (!__b2c__catch_set)
                                RUNTIMEERROR ("GOSUB", 12, "PI.bac", ERROR);
                        else if (!setjmp (__b2c__jump))
                                goto __B2C__PROGRAM__EXIT;
                }
                if (!setjmp (__b2c__gosub_buffer[__b2c__gosub_buffer_ptr]))
                        goto PI_COMP;
                __b2c__gosub_buffer_ptr--;
                if (__b2c__gosub_buffer_ptr &lt; -1)
                        __b2c__gosub_buffer_ptr = -1;
                __b2c__assign = (char *) "I=";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fputs (STR__b2c__string_var (I), stdout);
                __b2c__assign = (char *) " N=";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fputs (STR__b2c__string_var (N), stdout);
                __b2c__assign = (char *) " PI=";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fputs (STR__b2c__string_var (PI_VAL), stdout);
                fputs ("\n", stdout);
                N = (long) (N * 2);
        }
        exit (EXIT_SUCCESS);
        PI_COMP:
        ;
        __b2c__label_floatarray_PI_COMP = 0;
        __b2c__label_stringarray_PI_COMP = 0;
        PI_VAL = (double) (4.0);
        for (J = 3; J &lt;= N + 2; J += 2)
        {
                PI_VAL = (double) (PI_VAL * (J - 1) / (double) J * (J + 1) / (double) J);
        }
        if (__b2c__gosub_buffer_ptr >= 0)
                longjmp (__b2c__gosub_buffer[__b2c__gosub_buffer_ptr], 1);
        __B2C__PROGRAM__EXIT:
        return (0);
}
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Struktura programové smyčky typu <strong>WHILE-WEND</strong></h2>

<pre>
REM *****************************
REM 
REM Výpočet hodnoty konstanty PI
REM postavený na smyčce
REM typu WHILE-WEND.
REM 
REM Uprava pro BaCon
REM *****************************


N=1
WHILE N<=2000
    GOSUB COMPUTE_PI
    PRINT N," ", PI_VAL
    N=N*2
WEND 

REM SUBRUTINA PRO VYPOCET PI
LABEL COMPUTE_PI
    PI_VAL=4.0
    J=3
    WHILE J<=N+2
        PI_VAL=PI_VAL*(J-1)/J*(J+1)/J
        J=J+2
    WEND 
RETURN
</pre>

<pre>
        N = (long) (1);
        while (N <= 2000)
        {
                __b2c__gosub_buffer_ptr++;
                if (__b2c__gosub_buffer_ptr >= 64)
                {
                        ERROR = 31;
                        if (!__b2c__catch_set)
                                RUNTIMEERROR ("GOSUB", 12, "while_wend_pi.bac", ERROR);
                        else if (!setjmp (__b2c__jump))
                                goto __B2C__PROGRAM__EXIT;
                }
                if (!setjmp (__b2c__gosub_buffer[__b2c__gosub_buffer_ptr]))
                        goto COMPUTE_PI;
                __b2c__gosub_buffer_ptr--;
                if (__b2c__gosub_buffer_ptr < -1)
                        __b2c__gosub_buffer_ptr = -1;
                fputs (STR__b2c__string_var (N), stdout);
                __b2c__assign = (char *) " ";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fputs (STR__b2c__string_var (PI_VAL), stdout);
                fputs ("\n", stdout);
                N = (long) (N * 2);
        }
        COMPUTE_PI:
        ;
        __b2c__label_floatarray_COMPUTE_PI = 0;
        __b2c__label_stringarray_COMPUTE_PI = 0;
        PI_VAL = (double) (4.0);
        J = (long) (3);
        while (J <= N + 2)
        {
                PI_VAL = (double) (PI_VAL * (J - 1) / (double) J * (J + 1) / (double) J);
                J = (long) (J + 2);
        }
        if (__b2c__gosub_buffer_ptr >= 0)
                longjmp (__b2c__gosub_buffer[__b2c__gosub_buffer_ptr], 1);
        __B2C__PROGRAM__EXIT:
        return (0);
}
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Struktura programové smyčky <strong>FOR</strong> se záporným krokem</h2>

<pre>
REM *****************************
REM 
REM Vypocet faktorialu
REM 
REM Uprava pro BaCon
REM 
REM *****************************

FOR N=0 TO 20
    GOSUB FACTORIAL
    PRINT N," ",FACT
NEXT N
END 

REM VYPOCET FAKTORIALU
LABEL FACTORIAL
FACT=1
FOR I=N TO 1 STEP -1
    FACT=FACT*I
NEXT I
RETURN 
</pre>

<pre>
...
...
...
        for (N = 0; N <= 20; N += 1)
        {
                __b2c__gosub_buffer_ptr++;
                if (__b2c__gosub_buffer_ptr >= 64)
                {
                        ERROR = 31;
                        if (!__b2c__catch_set)
                                RUNTIMEERROR ("GOSUB", 10, "factorial.bac", ERROR);
                        else if (!setjmp (__b2c__jump))
                                goto __B2C__PROGRAM__EXIT;
                }
                if (!setjmp (__b2c__gosub_buffer[__b2c__gosub_buffer_ptr]))
                        goto FACTORIAL;
                __b2c__gosub_buffer_ptr--;
                if (__b2c__gosub_buffer_ptr < -1)
                        __b2c__gosub_buffer_ptr = -1;
                fputs (STR__b2c__string_var (N), stdout);
                __b2c__assign = (char *) " ";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fputs (STR__b2c__string_var (FACT), stdout);
                fputs ("\n", stdout);
        }
        exit (EXIT_SUCCESS);
        FACTORIAL:
        ;
        __b2c__label_floatarray_FACTORIAL = 0;
        __b2c__label_stringarray_FACTORIAL = 0;
        FACT = (long) (1);
        for (I = N; I >= 1; I += -1)
        {
                FACT = (long) (FACT * I);
        }
        if (__b2c__gosub_buffer_ptr >= 0)
                longjmp (__b2c__gosub_buffer[__b2c__gosub_buffer_ptr], 1);
        __B2C__PROGRAM__EXIT:
        return (0);
}
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Vnořené programové smyčky a manipulace s&nbsp;polem &ndash; bubble sort</h2>

<pre>
REM *****************************
REM 
REM Bubble sort
REM 
REM Uprava pro BaCon
REM 
REM *****************************



GLOBAL A[20]

FOR I=0 TO 20
    A[I]=INT(RANDOM(100))
NEXT I

GOSUB PRINT_ARRAY

FOR I=19 TO 0 STEP -1
    PRINT ".";
    FOR J=0 TO I
        IF A[J]>A[J+1] THEN
            X=A[J]
            A[J]=A[J+1]
            A[J+1]=X
        END IF
    NEXT J
NEXT I

PRINT ""
PRINT "SORTED:"

GOSUB PRINT_ARRAY
END

LABEL PRINT_ARRAY
REM TISK OBSAHU POLE
FOR I=0 TO 20
    PRINT I," ", A[I]
NEXT I
RETURN 
</pre>

<pre>
...
...
...
        for (I = 19; I &gt;= 0; I += -1)
        {
                __b2c__assign = (char *) ".";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fflush (stdout);
                for (J = 0; J &lt;= I; J += 1)
                {
                        if ((A[(uint64_t) J]) &gt; A[(uint64_t) J + 1])
                        {
                                X = (long) (A[(uint64_t) J]);
                                A[(uint64_t) J] = (long) (A[(uint64_t) J + 1]);
                                A[(uint64_t) J + 1] = (long) (X);
                        }
                }
                if (__b2c__break_ctr)
                {
                        __b2c__break_ctr--;
                        if (!__b2c__break_ctr)
                        {
                                if (__b2c__break_flag == 1)
                                        break;
                                else
                                        continue;
                        }
                        else
                                break;
                }
        }
...
...
...
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Využití maker preprocesoru jazyka C: zápis příkazů malými písmeny</h2>

<pre>
REM *****************************
REM 
REM Bubble sort
REM 
REM Uprava pro BaCon
REM 
REM *****************************

#define dim GLOBAL
#define for FOR
#define to TO
#define next NEXT
#define gosub GOSUB
#define return RETURN
#define print PRINT
#define if IF
#define then THEN
#define end END


dim A[20]

for I=0 to 20
    A[I]=INT(RANDOM(100))
next I

gosub PRINT_ARRAY

for I=19 TO 0 STEP -1
    print ".";
    for J=0 to I
        if A[J]>A[J+1] then
            X=A[J]
            A[J]=A[J+1]
            A[J+1]=X
        end if
    next J
next I

print ""
print "SORTED:"

gosub PRINT_ARRAY
end

LABEL PRINT_ARRAY
REM TISK OBSAHU POLE
for I=0 TO 20
    print I," ", A[I]
next I
return 
</pre>

<pre>
# 1 "macros.bac"
# 1 "&lt;built-in&gt;"
# 1 "&lt;command-line&gt;"
# 31 "&lt;command-line&gt;"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "&lt;command-line&gt;" 2
# 1 "macros.bac"
REM *****************************
REM
REM Bubble sort
REM
REM Uprava pro BaCon
REM
REM *****************************
# 21 "macros.bac"
GLOBAL A[20]

FOR I=0 TO 20
    A[I]=INT(RANDOM(100))
NEXT I

GOSUB PRINT_ARRAY

FOR I=19 TO 0 STEP -1
    PRINT ".";
    FOR J=0 TO I
        IF A[J]&gt;A[J+1] THEN
            X=A[J]
            A[J]=A[J+1]
            A[J+1]=X
        END IF
    NEXT J
NEXT I

PRINT ""
PRINT "SORTED:"

GOSUB PRINT_ARRAY
END

LABEL PRINT_ARRAY
REM TISK OBSAHU POLE
FOR I=0 TO 20
    PRINT I," ", A[I]
NEXT I
RETURN
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Operace s&nbsp;asociativními poli</h2>

<p></p>

<pre>
REM *****************************
REM 
REM Operace s asociativnim polem.
REM 
REM Uprava pro BaCon
REM 
REM *****************************

DECLARE map ASSOC int

map("foo") = 1
map("bar") = 42
map("baz") = -1

PRINT map("foo")
PRINT map("bar")
PRINT map("baz")
PRINT map("xyzzy")
</pre>

<pre>
...
...
...
/* Rest of the program */
        __b2c__assoc_map = __b2c__hash_new ();
        __b2c__assoc_map_eval = 1;
        __b2c__hash_add (__b2c__assoc_map, &amp;__b2c__assoc_map_eval, "foo");
        __b2c__assoc_map_eval = 42;
        __b2c__hash_add (__b2c__assoc_map, &amp;__b2c__assoc_map_eval, "bar");
        __b2c__assoc_map_eval = -1;
        __b2c__hash_add (__b2c__assoc_map, &amp;__b2c__assoc_map_eval, "baz");
        fputs (STR__b2c__string_var (map ("foo")), stdout);
        fputs ("\n", stdout);
        fputs (STR__b2c__string_var (map ("bar")), stdout);
        fputs ("\n", stdout);
        fputs (STR__b2c__string_var (map ("baz")), stdout);
        fputs ("\n", stdout);
        fputs (STR__b2c__string_var (map ("xyzzy")), stdout);
        fputs ("\n", stdout);
        return (0);
}
</pre>

<pre>
REM *****************************
REM 
REM Operace s asociativnim polem.
REM 
REM Uprava pro BaCon
REM 
REM *****************************

DECLARE map$ ASSOC STRING

map$("foo") = "FOO"
map$("bar") = "BAR"
map$("baz") = ""

PRINT map$("foo")
PRINT map$("bar")
PRINT map$("baz")
PRINT map$("xyzzy")
</pre>

<pre>
...
...
...
        __b2c__assoc_map__b2c__string_var = __b2c__hash_new ();
        __b2c__hash_add_str (__b2c__assoc_map__b2c__string_var, "FOO", "foo");
        __b2c__hash_add_str (__b2c__assoc_map__b2c__string_var, "BAR", "bar");
        __b2c__hash_add_str (__b2c__assoc_map__b2c__string_var, "", "baz");
        __b2c__assign = (char *) map__b2c__string_var ("foo");
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs ("\n", stdout);
        __b2c__assign = (char *) map__b2c__string_var ("bar");
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs ("\n", stdout);
        __b2c__assign = (char *) map__b2c__string_var ("baz");
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs ("\n", stdout);
        __b2c__assign = (char *) map__b2c__string_var ("xyzzy");
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs ("\n", stdout);
        return (0);
}
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Operace se záznamy</h2>

<p></p>

<pre>
REM *****************************
REM 
REM Operace se zaznamem.
REM 
REM Uprava pro BaCon
REM 
REM *****************************

RECORD user
    LOCAL id
    LOCAL name$
    LOCAL surname$
END RECORD

user.id = 42
user.name$ = "Linus"
user.surname$ = "Torvalds"

PRINT user.id, " ", user.name$, " ", user.surname$
</pre>

<pre>
typedef struct
{
        long id;
        char *name__b2c__string_var;
        char *surname__b2c__string_var;
} user_TYPE;
</pre>

<pre>
        user.name__b2c__string_var = NULL;
        user.surname__b2c__string_var = NULL;
        user.id = (long) (42);
        user.name__b2c__string_var = __b2c_Swap_String (&amp;user.name__b2c__string_var, "Linus");
        user.surname__b2c__string_var = __b2c_Swap_String (&amp;user.surname__b2c__string_var, "Torvalds");
        fputs (STR__b2c__string_var (user.id), stdout);
        __b2c__assign = (char *) " ";
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        __b2c__assign = (char *) user.name__b2c__string_var;
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        __b2c__assign = (char *) " ";
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        __b2c__assign = (char *) user.surname__b2c__string_var;
        if (__b2c__assign != NULL)
        {
                fputs (__b2c__assign, stdout);
        }
        fputs ("\n", stdout);
        return (0);
}
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Pole záznamů</h2>

<p></p>

<pre>
REM *****************************
REM 
REM Operace se s vice zaznamy.
REM 
REM Uprava pro BaCon
REM 
REM *****************************

RECORD users[10]
    LOCAL id
    LOCAL name$
    LOCAL surname$
END RECORD

users[0].id = 0
users[0].name$ = "Linus"
users[0].surname$ = "Torvalds"

users[1].id = 1
users[1].name$ = "Ken"
users[1].surname$ = "Iverson"

users[2].id = 2
users[2].name$ = "Rob"
users[2].surname$ = "Pike"

FOR i=0 TO 2
    PRINT users[i].id, " ", users[i].name$, " ", users[i].surname$
NEXT i
</pre>

<pre>
typedef struct
{
        long id;
        char *name__b2c__string_var;
        char *surname__b2c__string_var;
} users_TYPE;
typedef users_TYPE users_type;
users_TYPE users[(uint64_t) 10 + 0] = { 0 };
</pre>

<pre>
        users[(uint64_t) 0].id = (long) (0);
        users[(uint64_t) 0].name__b2c__string_var = __b2c_Swap_String (&users[(uint64_t) 0].name__b2c__string_var, "Linus");
        users[(uint64_t) 0].surname__b2c__string_var = __b2c_Swap_String (&users[(uint64_t) 0].surname__b2c__string_var, "Torvalds");
        users[(uint64_t) 1].id = (long) (1);
        users[(uint64_t) 1].name__b2c__string_var = __b2c_Swap_String (&users[(uint64_t) 1].name__b2c__string_var, "Ken");
        users[(uint64_t) 1].surname__b2c__string_var = __b2c_Swap_String (&users[(uint64_t) 1].surname__b2c__string_var, "Iverson");
        users[(uint64_t) 2].id = (long) (2);
        users[(uint64_t) 2].name__b2c__string_var = __b2c_Swap_String (&users[(uint64_t) 2].name__b2c__string_var, "Rob");
        users[(uint64_t) 2].surname__b2c__string_var = __b2c_Swap_String (&users[(uint64_t) 2].surname__b2c__string_var, "Pike");
        for (i = 0; i <= 2; i += 1)
        {
                fputs (STR__b2c__string_var (users[(uint64_t) i].id), stdout);
                __b2c__assign = (char *) " ";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                __b2c__assign = (char *) users[(uint64_t) i].name__b2c__string_var;
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                __b2c__assign = (char *) " ";
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                __b2c__assign = (char *) users[(uint64_t) i].surname__b2c__string_var;
                if (__b2c__assign != NULL)
                {
                        fputs (__b2c__assign, stdout);
                }
                fputs ("\n", stdout);
        }
        return (0);
}
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Závěrečné zhodnocení</h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech popsaných demonstračních příkladů určených pro
programovací jazyk <i>BaCon</i> byly uloženy do Git repositáře dostupného na
adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář (ten je ovšem stále
velmi malý, dnes má velikost zhruba několik desítek kilobajtů), můžete namísto
toho použít odkazy na jednotlivé příklady, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Demonstrační příklad</th><th>Stručný popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>hello.bas</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;BaConu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/hello.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/hello.bas</a></td></tr>
<tr><td> 2</td><td>factorial.bas</td><td>výpočet faktoriálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/factorial.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/factorial.bas</a></td></tr>
<tr><td> 3</td><td>GCD.bas</td><td>výpočet největšího společného dělitele</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/GCD.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/GCD.bas</a></td></tr>
<tr><td> 4</td><td>1d_array.bas</td><td>základy práce s&nbsp;1D polem (vektorem)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/1d_array.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/1d_array.bas</a></td></tr>
<tr><td> 5</td><td>2d_array.bas</td><td>základy práce s&nbsp;2D polem (maticí)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/2d_array.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/2d_array.bas</a></td></tr>
<tr><td> 6</td><td>PI.bas</td><td>výpočet konstanty Pi (standardní BASIC)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/PI.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/PI.bas</a></td></tr>
<tr><td> 7</td><td>bubble_sort.bas</td><td>bublinkové řazení (standardní BASIC)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/bubble_sort.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/bubble_sort.bas</a></td></tr>
<tr><td> 8</td><td>while_wend_pi.bas</td><td>výpočet konstanty Pi (BASIC s&nbsp;while/wend)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/while_wend_pi.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/while_wend_pi.bas</a></td></tr>
<tr><td> 9</td><td>macros.bas</td><td>využití maker preprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.bas</a></td></tr>
<tr><td>10</td><td>macros.pre</td><td>výsledek preprocesingu souboru <strong>macros.bas</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.pre">https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.pre</a></td></tr>
<tr><td>11</td><td>assoc_array_int.bas</td><td>základy práce s&nbsp;asociativním polem s&nbsp;prvky typu celé číslo</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_int.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_int.bas</a></td></tr>
<tr><td>12</td><td>assoc_array_string.bas</td><td>základy práce s&nbsp;asociativním polem s&nbsp;prvky typu řetězec</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_string.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_string.bas</a></td></tr>
<tr><td>13</td><td>record.bas</td><td>operace se záznamem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/record.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/record.bas</a></td></tr>
<tr><td>14</td><td>records.bas</td><td>operace s&nbsp;poli záznamů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/records.bas">https://github.com/tisnik/8bit-fame/blob/master/BaCon/records.bas</a></td></tr>
</table>

<p>Výsledky transpřekladu do programovacího jazyka C:</p>

<table>
<tr><th> #</th><th>Soubor</th><th>Stručný popis souboru</th><th>Cesta</th></tr>
<tr><td> 1</td><td>1d_array.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>1d_array.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/1d_array.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/1d_array.bac.c</a></td></tr>
<tr><td> 2</td><td>1d_array.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>1d_array.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/1d_array.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/1d_array.bac.h</a></td></tr>
<tr><td> 3</td><td>2d_array.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>2d_array.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/2d_array.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/2d_array.bac.c</a></td></tr>
<tr><td> 4</td><td>2d_array.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>2d_array.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/2d_array.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/2d_array.bac.h</a></td></tr>
<tr><td> 5</td><td>bubble_sort.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>bubble_sort.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/bubble_sort.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/bubble_sort.bac.c</a></td></tr>
<tr><td> 6</td><td>bubble_sort.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>bubble_sort.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/bubble_sort.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/bubble_sort.bac.h</a></td></tr>
<tr><td> 7</td><td>factorial.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>factorial.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/factorial.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/factorial.bac.c</a></td></tr>
<tr><td> 8</td><td>factorial.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>factorial.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/factorial.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/factorial.bac.h</a></td></tr>
<tr><td> 9</td><td>GCD.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>GCD.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/GCD.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/GCD.bac.c</a></td></tr>
<tr><td>10</td><td>GCD.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>GCD.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/GCD.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/GCD.bac.h</a></td></tr>
<tr><td>11</td><td>hello.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>hello.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/hello.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/hello.bac.c</a></td></tr>
<tr><td>12</td><td>hello.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>hello.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/hello.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/hello.bac.h</a></td></tr>
<tr><td>13</td><td>PI.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>PI</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/PI.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/PI.bac.c</a></td></tr>
<tr><td>14</td><td>PI.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>PI</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/PI.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/PI.bac.h</a></td></tr>
<tr><td>15</td><td>while_wend_pi.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>while_wend_pi.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/while_wend_pi.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/while_wend_pi.bac.c</a></td></tr>
<tr><td>16</td><td>while_wend_pi.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>while_wend_pi.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/while_wend_pi.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/while_wend_pi.bac.h</a></td></tr>
<tr><td>17</td><td>macros.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>macros.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.bac.c</a></td></tr>
<tr><td>18</td><td>macros.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>macros.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/macros.bac.h</a></td></tr>
<tr><td>19</td><td>assoc_array_int.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>assoc_array_int.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_int.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_int.bac.c</a></td></tr>
<tr><td>20</td><td>assoc_array_int.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>assoc_array_int.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_int.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_int.bac.h</a></td></tr>
<tr><td>21</td><td>assoc_array_string.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>assoc_array_string.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_string.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_string.bac.c</a></td></tr>
<tr><td>22</td><td>assoc_array_string.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>assoc_array_string.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_string.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/assoc_array_string.bac.h</a></td></tr>
<tr><td>23</td><td>record.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>record.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/record.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/record.bac.c</a></td></tr>
<tr><td>24</td><td>record.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>record.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/record.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/record.bac.h</a></td></tr>
<tr><td>25</td><td>records.bac.c</td><td>výsledek transpřekladu zdrojového souboru <strong>records.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/records.bac.c">https://github.com/tisnik/8bit-fame/blob/master/BaCon/records.bac.c</a></td></tr>
<tr><td>26</td><td>records.bac.h</td><td>výsledek transpřekladu zdrojového souboru <strong>records.bac</strong> do C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/BaCon/records.bac.h">https://github.com/tisnik/8bit-fame/blob/master/BaCon/records.bac.h</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Dřívější články o interpretrech a překladačích programovacího jazyka BASIC</h2>

<p>S&nbsp;programovacím jazykem BASIC, ať již se jedná o zastaralé
&bdquo;retro&ldquo; interpretry či o novější reinkarnace tohoto jazyka, jsme se
na stránkách Roota již několikrát setkali. Jedná se především o následující
články:</p>

<ol>

<li>Programovací jazyk BASIC na osmibitových mikropočítačích<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich/</a>
</li>

<li>Programovací jazyk BASIC na osmibitových mikropočítačích (2)<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich-2/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich-2/</a>
</li>

<li>Programovací jazyk BASIC na osmibitových mikropočítačích (3)<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich-3/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich-3/</a>
</li>

<li>Programovací jazyk BASIC na osmibitových mikropočítačích (dokončení)<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich-dokonceni/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-osmibitovych-mikropocitacich-dokonceni/</a>
</li>

<li>Programovací jazyk BASIC na počítačích kompatibilních s IBM PC<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-pocitacich-kompatibilnich-s-ibm-pc/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-pocitacich-kompatibilnich-s-ibm-pc/</a>
</li>

<li>Programovací jazyk BASIC na počítačích kompatibilních s IBM PC v současnosti<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-pocitacich-kompatibilnich-s-ibm-pc-v-soucasnosti/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-pocitacich-kompatibilnich-s-ibm-pc-v-soucasnosti/</a>
</li>

<li>PC-BASIC: reinkarnace populárního i zatracovaného GW-BASICu<br />
<a href="https://www.root.cz/clanky/pc-basic-reinkarnace-popularniho-i-zatracovaneho-gw-basicu/">https://www.root.cz/clanky/pc-basic-reinkarnace-popularniho-i-zatracovaneho-gw-basicu/</a>
</li>

<li>Basic-256: další moderní reinkarnace BASICu určená pro výuku programování<br />
<a href="https://www.root.cz/clanky/basic-256-dalsi-moderni-reinkarnace-basicu-urcena-pro-vyuku-programovani/">https://www.root.cz/clanky/basic-256-dalsi-moderni-reinkarnace-basicu-urcena-pro-vyuku-programovani/</a>
</li>

<li>BBC BASIC i QBasic oslavují svá kulatá výročí<br />
<a href="https://www.root.cz/clanky/bbc-basic-i-qbasic-oslavuji-sva-kulata-vyroci/">https://www.root.cz/clanky/bbc-basic-i-qbasic-oslavuji-sva-kulata-vyroci/</a>
</li>

<li>Základy práce s grafickou plochou v jazyku Basic-256<br />
<a href="https://www.root.cz/clanky/zaklady-prace-s-grafickou-plochou-v-jazyku-basic-256/">https://www.root.cz/clanky/zaklady-prace-s-grafickou-plochou-v-jazyku-basic-256/</a>
</li>

<li>Small Basic: moderní reinkarnace BASICu určená pro výuku programování<br />
<a href="https://www.root.cz/clanky/small-basic-moderni-reinkarnace-basicu-urcena-pro-vyuku-programovani/">https://www.root.cz/clanky/small-basic-moderni-reinkarnace-basicu-urcena-pro-vyuku-programovani/</a>
</li>

<li>Vestavěné objekty Small Basicu: práce s grafikou, časovačem, reakce na události<br />
<a href="https://www.root.cz/clanky/vestavene-objekty-small-basicu-prace-s-grafikou-casovacem-reakce-na-udalosti/">https://www.root.cz/clanky/vestavene-objekty-small-basicu-prace-s-grafikou-casovacem-reakce-na-udalosti/</a>
</li>

<li>Programovací jazyk BASIC na herní konzoli Atari 2600<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-basic-na-herni-konzoli-atari-2600/">https://www.root.cz/clanky/programovaci-jazyk-basic-na-herni-konzoli-atari-2600/</a>
</li>

<li>Tvorba her pro Atari 2600 v Batari BASICu: úkol pro hardcode programátory<br />
<a href="https://www.root.cz/clanky/tvorba-her-pro-atari-2600-v-batari-basicu-ukol-pro-hardcode-programatory/">https://www.root.cz/clanky/tvorba-her-pro-atari-2600-v-batari-basicu-ukol-pro-hardcode-programatory/</a>
</li>

<li>Tvorba her pro Atari 2600 v Batari BASICu: standardní kernel a zvuky<br />
<a href="https://www.root.cz/clanky/tvorba-her-pro-atari-2600-v-batari-basicu-standardni-kernel-a-zvuky/">https://www.root.cz/clanky/tvorba-her-pro-atari-2600-v-batari-basicu-standardni-kernel-a-zvuky/</a>
</li>

<li>Tvorba her pro Atari 2600 v Batari BASICu: ovládání čipu TIA <br />
<a href="https://www.root.cz/clanky/tvorba-her-pro-atari-2600-v-batari-basicu-ovladani-cipu-tia/">https://www.root.cz/clanky/tvorba-her-pro-atari-2600-v-batari-basicu-ovladani-cipu-tia/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Stránka projektu BaCon<br />
<a href="http://basic-converter.org/">http://basic-converter.org/</a>
</li>

<li>Dokumentace BaConu<br />
<a href="http://basic-converter.org/doc_frame.html">http://basic-converter.org/doc_frame.html</a>
</li>

<li>Zdrojové kódy i binární obrazy BaConu<br />
<a href="http://basic-converter.org/#downloads">http://basic-converter.org/#downloads</a>
</li>

<li>Stránka projektu Basic-256<br />
<a href="https://basic256.org/">https://basic256.org/</a>
</li>

<li>So You Want to Learn to Program – BASIC-256 (Third Edition)<br />
<a href="http://syw2l.org/?page_id=407">http://syw2l.org/?page_id=407</a>
</li>

<li>Why Another BASIC?<br />
<a href="https://basic256.org/2019/06/27/why-another-basic/">https://basic256.org/2019/06/27/why-another-basic/</a>
</li>

<li>Stránka projektu Small Basic<br />
<a href="https://smallbasic-publicwebsite.azurewebsites.net/">https://smallbasic-publicwebsite.azurewebsites.net/</a>
</li>

<li>List of Programs Made with Small Basic<br />
<a href="https://social.technet.microsoft.com/wiki/contents/articles/14013.list-of-programs-made-with-small-basic.aspx">https://social.technet.microsoft.com/wiki/contents/articles/14013.list-of-programs-made-with-small-basic.aspx</a>
</li>

<li>Expert to Expert: The Basics of SmallBasic<br />
<a href="https://channel9.msdn.com/blogs/charles/expert-to-expert-the-basics-of-smallbasic">https://channel9.msdn.com/blogs/charles/expert-to-expert-the-basics-of-smallbasic</a>
</li>

<li>The Developer’s Reference Guide to Small Basic<br />
<a href="https://social.technet.microsoft.com/wiki/contents/articles/16767.the-developers-reference-guide-to-small-basic.aspx">https://social.technet.microsoft.com/wiki/contents/articles/16767.the-developers-reference-guide-to-small-basic.aspx</a>
</li>

<li>Small Basic - Talking to Raspberry Pi<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-talking-to-raspberry-pi/ba-p/337844">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-talking-to-raspberry-pi/ba-p/337844</a>
</li>

<li>Small Basic - Arduino<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-arduino/ba-p/337762">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-arduino/ba-p/337762</a>
</li>

<li>Small Basic + micro:bit<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-micro-bit/ba-p/1968424">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-micro-bit/ba-p/1968424</a>
</li>

<li>#1 Learn Small Basic Programming - Introduction<br />
<a href="https://www.youtube.com/watch?v=e_BaEPCa8OQ">https://www.youtube.com/watch?v=e_BaEPCa8OQ</a>
</li>

<li>#2 Learn Small Basic Programming - Input, Output &amp; Variables<br />
<a href="https://www.youtube.com/watch?v=VWekYLa33OI">https://www.youtube.com/watch?v=VWekYLa33OI</a>
</li>

<li>#3 Learn Small Basic Programming - String Concatenation<br />
<a href="https://www.youtube.com/watch?v=iWvIaOaT474">https://www.youtube.com/watch?v=iWvIaOaT474</a>
</li>

<li>Small Basic - The Programmer's Guide<br />
<a href="https://www.i-programmer.info/programming/other-languages/5196-small-basic-the-programmers-guide.html">https://www.i-programmer.info/programming/other-languages/5196-small-basic-the-programmers-guide.html</a>
</li>

<li>Rosetta Code: Category:Microsoft Small Basic<br />
<a href="https://rosettacode.org/wiki/Category:Microsoft_Small_Basic">https://rosettacode.org/wiki/Category:Microsoft_Small_Basic</a>
</li>

<li>Fifty Years of BASIC, the Programming Language That Made Computers Personal<br />
<a href="https://time.com/69316/basic/">https://time.com/69316/basic/</a>
</li>

<li>BBC BASIC i QBasic oslavují svá kulatá výročí<br />
<a href="https://www.root.cz/clanky/bbc-basic-i-qbasic-oslavuji-sva-kulata-vyroci/">https://www.root.cz/clanky/bbc-basic-i-qbasic-oslavuji-sva-kulata-vyroci/</a>
</li>

<li>GWBASIC User's Manual<br />
<a href="http://www.antonis.de/qbebooks/gwbasman/index2.html">http://www.antonis.de/qbebooks/gwbasman/index2.html</a>
</li>

<li>GFA-BASIC<br />
<a href="http://sites.google.com/site/gfabasic16/">http://sites.google.com/site/gfabasic16/</a>
</li>

<li>E-mail od tvůrce GW-Basicu<br />
<a href="http://www.classiccmp.org/pipermail/cctech/2005-April/042999.html">http://www.classiccmp.org/pipermail/cctech/2005-April/042999.html</a>
</li>

<li>General Electric GE-400<br />
<a href="http://www.feb-patrimoine.com/PROJET/ge400/ge-400.htm">http://www.feb-patrimoine.com/PROJET/ge400/ge-400.htm</a>
</li>

<li>GE-400 Time-sharing information systems: <br />
<a href="http://www.computerhistory.org/collections/accession/102646147">http://www.computerhistory.org/collections/accession/102646147</a>
</li>

<li>A brief history of the development of BASIC (pravděpodobně již nefunkční odkaz)<br />
<a href="http://www.phys.uu.nl/~bergmann/history.html">http://www.phys.uu.nl/~bergmann/history.html</a>
</li>

<li>History of BASIC (PDF)<br />
<a href="http://www.q7basic.org/History%20of%20BASIC.pdf">http://www.q7basic.org/History%20of%20BASIC.pdf</a>
</li>

<li>Dartmouth College Computation Center. 1964.-The original Dartmouth BASIC manual<br />
<a href="http://www.bitsavers.org/pdf/dartmouth/BASIC_Oct64.pdf">http://www.bitsavers.org/pdf/dartmouth/BASIC_Oct64.pdf</a>
</li>

<li>The Original BASIC<br />
<a href="http://www.truebasic.com/">http://www.truebasic.com/</a>
</li>

<li>BASIC - Beginners All-purpose Symbolic Instruction Code<br />
<a href="http://hopl.murdoch.edu.au/showlanguage.prx?exp=176">http://hopl.murdoch.edu.au/showlanguage.prx?exp=176</a>
</li>

<li>The History of the Mainframe Computer<br />
<a href="http://www.vikingwaters.com/htmlpages/MFHistory.htm">http://www.vikingwaters.com/htmlpages/MFHistory.htm</a>
</li>

<li>Dartmouth Time Sharing System<br />
<a href="http://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System">http://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System</a>
</li>

<li>General Electric (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/General_Electric">http://en.wikipedia.org/wiki/General_Electric</a>
</li>

<li>GE 225 vs. IBM 1401<br />
<a href="http://ed-thelen.org/GE225-IBM1401.html">http://ed-thelen.org/GE225-IBM1401.html</a>
</li>

<li>A GE-225 is found<br />
<a href="http://ed-thelen.org/comp-hist/GE225.html">http://ed-thelen.org/comp-hist/GE225.html</a>
</li>

<li>G.E. 200 Series Computers<br />
<a href="http://www.smecc.org/g_e__200_series_computers.htm">http://www.smecc.org/g_e__200_series_computers.htm</a>
</li>

<li>DTSS - Dartmouth Time Sharing System<br />
<a href="http://dtss.dartmouth.edu/index.php">http://dtss.dartmouth.edu/index.php</a>
</li>

<li>John G. Kemeny: BASIC and DTSS: Everyone a Programmer<br />
<a href="http://dtss.dartmouth.edu/everyoneaprogrammer.php">http://dtss.dartmouth.edu/everyoneaprogrammer.php</a>
</li>

<li>GE-200 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-200_series">http://en.wikipedia.org/wiki/GE-200_series</a>
</li>

<li>GE-400 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-400_series">http://en.wikipedia.org/wiki/GE-400_series</a>
</li>

<li>GE-600 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-600_series">http://en.wikipedia.org/wiki/GE-600_series</a>
</li>

<li>ZX Basic Manual<br />
<a href="http://www.worldofspectrum.org/ZXBasicManual/">http://www.worldofspectrum.org/ZXBasicManual/</a>
</li>

<li>ZX81 BASIC Programming<br />
<a href="http://www.worldofspectrum.org/ZX81BasicProgramming/">http://www.worldofspectrum.org/ZX81BasicProgramming/</a>
</li>

<li>Sinclair BASIC History<br />
<a href="http://scratchpad.wikia.com/wiki/Sinclair_BASIC_History">http://scratchpad.wikia.com/wiki/Sinclair_BASIC_History</a>
</li>

<li>Sinclair BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Sinclair_BASIC">http://cs.wikipedia.org/wiki/Sinclair_BASIC</a>
</li>

<li>Sinclair BASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Sinclair_BASIC">http://en.wikipedia.org/wiki/Sinclair_BASIC</a>
</li>

<li>Beta BASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Beta_BASIC">http://en.wikipedia.org/wiki/Beta_BASIC</a>
</li>

<li>Beta BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Beta_BASIC">http://cs.wikipedia.org/wiki/Beta_BASIC</a>
</li>

<li>BETA BASIC NEWSLETTER No 8<br />
<a href="http://spectrum128.ru/help/BetaBasicNewsletter8.pdf">http://spectrum128.ru/help/BetaBasicNewsletter8.pdf</a>
</li>

<li>R. T. RUSSELL: The home of BBC BASIC<br />
<a href="http://www.rtrussell.co.uk/">http://www.rtrussell.co.uk/</a>
</li>

<li>R. T. RUSSELL: A History of BBC BASIC<br />
<a href="http://www.cix.co.uk/~rrussell/bbcbasic/history.html">http://www.cix.co.uk/~rrussell/bbcbasic/history.html</a>
</li>

<li>SuperBASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/SuperBASIC">http://en.wikipedia.org/wiki/SuperBASIC</a>
</li>

<li>SuperBASIC (Wikipedia CZ)<br />
<a href="http://en.wikipedia.org/wiki/SuperBASIC">http://en.wikipedia.org/wiki/SuperBASIC</a>
</li>

<li>Laser Basic/Laser Compiler<br />
<a href="http://www.sincuser.f9.co.uk/049/laser.htm">http://www.sincuser.f9.co.uk/049/laser.htm</a>
</li>

<li>Laser BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Laser_BASIC">http://cs.wikipedia.org/wiki/Laser_BASIC</a>
</li>

<li>BBC BASIC<br />
<a href="http://www.bbcbasic.co.uk/bbcbasic.html">http://www.bbcbasic.co.uk/bbcbasic.html</a>
</li>

<li>BBC BASIC<br />
<a href="http://mdfs.net/Software/BBCBasic/">http://mdfs.net/Software/BBCBasic/</a>
</li>

<li>BBC BASIC (Z80) for the ZX Spectrum<br />
<a href="http://mdfs.net/Software/BBCBasic/Spectrum/">http://mdfs.net/Software/BBCBasic/Spectrum/</a>
</li>

<li>BBC BASIC (Wikipedia CZ)<br />
<a href="http://en.wikipedia.org/wiki/BBC_BASIC">http://en.wikipedia.org/wiki/BBC_BASIC</a>
</li>

<li>BeebWiki &ndash; 8-bit Acorn Computer Wiky<br />
<a href="http://beebwiki.jonripley.com/Main_Page">http://beebwiki.jonripley.com/Main_Page</a>
</li>

<li>Porovnání osmibitů<br />
<a href="http://porovnani8bitu.spaces.live.com/">http://porovnani8bitu.spaces.live.com/</a>
</li>

<li>Rosetta Code &ndash; Main Page<br />
<a href="http://rosettacode.org/wiki/Main_Page">http://rosettacode.org/wiki/Main_Page</a>
</li>

<li>Rosetta Code &ndash; Category Basic<br />
<a href="http://rosettacode.org/wiki/Category:BASIC">http://rosettacode.org/wiki/Category:BASIC</a>
</li>

<li>QBasicJedi<br />
<a href="http://www.freewebs.com/qbasicjedi/">http://www.freewebs.com/qbasicjedi/</a>
</li>

<li>QBasic/QuickBasic Downloads<br />
<a href="http://www.freewebs.com/qbasicjedi/qbdownloads.html">http://www.freewebs.com/qbasicjedi/qbdownloads.html</a>
</li>

<li>QuickBASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/QuickBASIC">http://cs.wikipedia.org/wiki/QuickBASIC</a>
</li>

<li>QBasic.com<br />
<a href="http://www.qbasic.com/">http://www.qbasic.com/</a>
</li>

<li>QBasic (Wikipedia)<br />
<a href="http://cs.wikipedia.org/wiki/QBasic">http://cs.wikipedia.org/wiki/QBasic</a>
</li>

<li>Dialling with QBASIC<br />
<a href="http://www.mysundial.ca/tsp/qbasic.html">http://www.mysundial.ca/tsp/qbasic.html</a>
</li>

<li>BASIC (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/BASIC">http://en.wikipedia.org/wiki/BASIC</a>
</li>

<li>BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/BASIC">http://cs.wikipedia.org/wiki/BASIC</a>
</li>

<li>Turbo BASIC (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Turbo_BASIC">http://cs.wikipedia.org/wiki/Turbo_BASIC</a>
</li>

<li>More BASIC Computer Games<br />
<a href="http://www.atariarchives.org/morebasicgames/">http://www.atariarchives.org/morebasicgames/</a>
</li>

<li>How to build an interpreter in Java, Part 1: The BASICs<br />
<a href="http://www.javaworld.com/jw-05-1997/jw-05-indepth.html">http://www.javaworld.com/jw-05-1997/jw-05-indepth.html</a>
</li>

<li>Apple I<br />
<a href="http://applemuseum.bott.org/sections/computers/a1.html">http://applemuseum.bott.org/sections/computers/a1.html</a>
</li>

<li>The Apple 1 history<br />
<a href="http://apple2history.org/history/ah02.html">http://apple2history.org/history/ah02.html</a>
</li>

<li>The Apple 2 history<br />
<a href="http://apple2history.org/history/ah03.html">http://apple2history.org/history/ah03.html</a>
</li>

<li>INTEGER BASIC Reference<br />
<a href="http://www.landsnail.com/a2ref2.htm">http://www.landsnail.com/a2ref2.htm</a>
</li>

<li>APPLESOFT Reference<br />
<a href="http://www.landsnail.com/a2ref.htm">http://www.landsnail.com/a2ref.htm</a>
</li>

<li>Apple II Programming<br />
<a href="http://home.swbell.net/rubywand/csa2pfaq.html">http://home.swbell.net/rubywand/csa2pfaq.html</a>
</li>

<li>Applesoft Lite: Applesoft BASIC for the Replica-1<br />
<a href="http://cowgod.org/replica1/applesoft/">http://cowgod.org/replica1/applesoft/</a>
</li>

<li>Simons' BASIC<br />
<a href="http://en.wikipedia.org/wiki/Simons'_BASIC">http://en.wikipedia.org/wiki/Simons'_BASIC</a>
</li>

<li>Simon's Basic<br />
<a href="http://www.lemon64.com/?mainurl=http%3A//www.lemon64.com/museum/list.php%3Flineoffset%3D54%26genre%3Dmanualmisc">http://www.lemon64.com/?mainurl=http%3A//www.lemon64.com/museum/list.php%3Flineoffset%3D54%26genre%3Dmanualmisc</a>
</li>

<li>BASIC<br />
<a href="http://www.c64-wiki.com/index.php/BASIC">http://www.c64-wiki.com/index.php/BASIC</a>
</li>

<li>C64 Wiki: Simons Basic<br />
<a href="http://www.c64-wiki.de/index.php/Simons_Basic">http://www.c64-wiki.de/index.php/Simons_Basic</a>
</li>

<li>Simons' Basic (evaluation)<br />
<a href="http://www.atarimagazines.com/creative/v9n11/60_Simons_Basic.php">http://www.atarimagazines.com/creative/v9n11/60_Simons_Basic.php</a>
</li>

<li>Bill Gates' Personal Easter Eggs in 8 Bit BASIC
<a href="http://www.pagetable.com/?p=43">http://www.pagetable.com/?p=43</a>
</li>

<li>Kladivo na programy (je tam třeba popsán způsob nahrávání a ochran programů protí kopírování a crackování)<br />
<a href="http://www.grandjihlava.cz/tmp/kladivo.pdf">http://www.grandjihlava.cz/tmp/kladivo.pdf</a>
</li>

<li>Didaktik Gama návod k obsluze<br />
<a href="http://www.grandjihlava.cz/tmp/navod.pdf">http://www.grandjihlava.cz/tmp/navod.pdf</a>
</li>

<li>Můj přítel Didaktik Gama<br />
<a href="http://www.grandjihlava.cz/tmp/priteldidaktik.pdf">http://www.grandjihlava.cz/tmp/priteldidaktik.pdf</a>
</li>

<li>Tip &amp; trip pro Didaktik<br />
<a href="http://www.grandjihlava.cz/tmp/tiptrikdidaktik.pdf">http://www.grandjihlava.cz/tmp/tiptrikdidaktik.pdf</a>
</li>

<li>Muzeum československých mikropočítačů<br />
<a href="http://cs-pocitace.ic.cz/">http://cs-pocitace.ic.cz/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

