<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Programování zvukových karet s čipem OPL3 nebo s dvojicí čipů OPL2</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Programování zvukových karet s čipem OPL3 nebo s dvojicí čipů OPL2</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Programování zvukových karet s čipem OPL3 nebo s&nbsp;dvojicí čipů OPL2</a></p>
<p><a href="#k02">2. Sound Blaster Pro 1 s&nbsp;konfigurací DualOPL2</a></p>
<p><a href="#k03">3. Přehrání tónu ve vybraném reproduktoru</a></p>
<p><a href="#k04">4. Úplný zdrojový kód dnešního prvního demonstračního příkladu</a></p>
<p><a href="#k05">5. Vícekanálový výstup z&nbsp;OPL2 (až devítihlasová polyfonie)</a></p>
<p><a href="#k06">6. Nastavení not pro osm kanálů</a></p>
<p><a href="#k07">7. Ovládání přehrání not klávesnicí</a></p>
<p><a href="#k08">8. Úplný zdrojový kód dnešního druhého demonstračního příkladu</a></p>
<p><a href="#k09">9. Vylepšení ovládání čipů OPL přes tabulku kláves+akcí: plnohodnotné &bdquo;klávesy&ldquo; v&nbsp;284 bajtech</a></p>
<p><a href="#k10">10. Úplný zdrojový kód dnešního třetího demonstračního příkladu</a></p>
<p><a href="#k11">11. Čip OPL3 z&nbsp;pohledu programátora</a></p>
<p><a href="#k12">*** 12. Řídicí registry čipu OPL3</a></p>
<p><a href="#k13">*** 13. Stereo výstup</a></p>
<p><a href="#k14">*** 14. Demonstrační příklad: programová změna zvukového výstupu do levého, pravého i obou reproduktorů</a></p>
<p><a href="#k15">*** 15. Nastavení čipu OPL3 do režimu NEkompatibilního s&nbsp;OPL2</a></p>
<p><a href="#k16">*** 16. Demonstrační příklad: funkční programový výběr zvukového výstupu</a></p>
<p><a href="#k17">*** 17. Režim využívající 18 zvukových kanálů</a></p>
<p><a href="#k18">*** 18. Demonstrační příklad: využití většiny zvukových kanálů čipu OPL3</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Programování zvukových karet s&nbsp;čipem OPL3 nebo s&nbsp;dvojicí čipů OPL2</h2>

<p><a
href="https://www.root.cz/clanky/vyvoj-zvukovych-karet-pro-platformu-ibm-pc-po-vydani-karty-adlib/">V&nbsp;předchozím
článku</a> jsme si popsali postupný vývoj zvukových karet určených pro IBM PC,
které obsahovaly čip OPL2 nebo OPL3. Připomeňme si ve stručnosti, že čipy OPL2
popř.&nbsp;OPL3 se ve světě PC využívaly poměrně dlouho &ndash; karty
s&nbsp;těmito čipy se vyráběly od roku 1987 minimálně do roku 1996, ovšem různé
klony SoundBlasterů byly vyráběny i po roce 1996. Jen zvolna byla FM syntéza
nahrazována zvukovými kartami, které pro generování hudby využívaly wave table
syntézu. Dnešní článek bude zaměřen na vlastnosti čipů OPL2 a OPL3
z&nbsp;pohledu programátora. Ukážeme si, jak se ovládala dvojice čipů OPL2 (což
bylo meziobdobí mezi kartami s&nbsp;jedním OPL2 na jedné straně a jedním
&bdquo;stereo&ldquo; OPL3 na straně druhé), jak lze na OPL2 i OPL3 využít
polyfonii a taktéž ovládání levého a pravého reproduktoru čipem OPL3, čímž se
pro jednotlivé kanály realizuje velmi triviální &bdquo;stereo&ldquo; (ovšem bez
možnosti plynulého panningu).</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Sound Blaster Pro 1 s&nbsp;konfigurací DualOPL2</h2>

<p>Existovaly celkem čtyři různé varianty využití čipů OPL:</p>

<ol>
<li>Jediný čip OPL2 v&nbsp;první a druhé generaci zvukových karet</li>
<li>Dva čipy OPL2 pro realizaci určité formy stereo výstupu (bez panningu)</li>
<li>Čip OPL3, který opět do určité míry umožňuje stereo výstup</li>
<li>(Speciality typu dvojice OPL3 se čtyřmi výstupními kanály atd.)</li>
</ol>

<p>Programování jediného čipu OPL2 jsme si již ukázali (a dnes se k&nbsp;němu
ještě vrátíme), ovšem zajímavý je druhý způsob využívající dvojici čipů OPL2.
Tuto konfiguraci měl <i>Sound Blater Pro</i> (bez dvojky) z&nbsp;roku 1991. Pro
FM syntézu se v&nbsp;této kartě využívala dvojice čipů OPL2, přičemž každý čip
byl zapojen do jednoho zvukového kanálu. Pokud byl požadovaný monofonní výstup
(například z&nbsp;důvodu zpětné kompatibility), musely se buď oba čipy
programovat se stejnými hodnotami řídicích registrů, nebo bylo možné použít
adresu společnou pro oba čipy (adresní logika na kartě sama zařídila, že se
hodnoty registrů zapsaly na oba čipy současně). Nutno dodat, že tento způsob
zapojení, který se někdy označuje termínem <i>DualOPL2</i>, je poměrně unikátní
právě pro Sound Blaster Pro a vlastně jen málo her dokázalo možnosti dvou OPL2
využít.</p>

<p>Pokud si budete chtít vlastnosti Sound Blasteru Pro 1.0 s&nbsp;Dual OPL2
otestovat v&nbsp;DOSBoxu, je nutné změnit jeho konfiguraci následovně:</p>

<pre>
sbtype              = sbpro1
sbbase              = 220
irq                 = 7
dma                 = 1
hdma                = 5
sbmixer             = false
sbwarmup            = 100
oplmode             = dualopl2
sb_filter           = off
sb_filter_always_on = false
opl_filter          = on
cms_filter          = on
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Přehrání tónu ve vybraném reproduktoru</h2>

<p>Jak tedy vypadá programové přehrání tónu v&nbsp;levém nebo pravém
reproduktoru v&nbsp;případě, že máme kartu v&nbsp;konfiguraci DualOPL2?
Z&nbsp;hlediska programátora je to ve skutečnosti poměrně snadno řešitelný
problém, protože řídicí registry jednoho čipu OPL2 (levý reproduktor) jsou
mapovány na I/O porty 0x220 a 0x221 (výběr registru na prvním portu, zápis nové
hodnoty na portu druhém). A pro druhý OPL2 (ten ovládá pravý reproduktor) se
jedná o I/O porty 0x222 a 0x223. Pokud se zápis provede přes
&bdquo;AdLibovské&ldquo; porty 0x388 a 0x389, dojde k&nbsp;zápisu do obou
OPL2.</p>

<p>Připravíme si tedy pomocné konstanty. První dvě budou obsahovat adresy portů
pro &bdquo;levý&ldquo; OPL:</p>

<pre>
<i>; registry karet s cipem OPL2</i>
OPL_ADDRESS equ 0x220
OPL_DATA    equ 0x221
</pre>

<p>Následují definice offsetů, které použijeme pro výpočet skutečně použitých
portů při zápisu (&bdquo;pravý&ldquo; OPL má adresy zvýšené o dvojku):</p>

<pre>
<i>; vyber levelo a praveho reproduktoru</i>
LEFT_SPEAKER  equ 0
RIGHT_SPEAKER equ 2  <i>; musi byt 2!!!</i>
</pre>

<p>Zápis hodnot řídicích registrů z&nbsp;tabulky do levého či pravého OPL
nepatrně upravíme, a to tak, že před vlastním zápisem nastavíme hodnotu
registru <strong>BX</strong> na 0 nebo 2 (což je kýžený offset od adresy 0x220
resp.&nbsp;0x221):</p>

<pre>
        mov  si, tones                   <i>; zacatek tabulky</i>
        mov  bx, RIGHT_SPEAKER
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
</pre>

<p>Subrutina pro zápis do vybraného registru OPL tedy bude vypadat následovně (povšimněte si zvýšení adresy o <strong>BX</strong>):</p>

<pre>
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        <i>; BX - výběr levého či pravého OPL (0 nebo 2)</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        add dx, bx
        out dx, al
&nbsp;
        <i>; cekani priblizne 3.3 mikrosekundy</i>
        mov cl, 6
.delay1:
        in  al, dx
        loop .delay1
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        add dx, bx
        out dx, al
&nbsp;
        <i>; cekani priblizne 23 mikrosekund</i>
        mov cl, 35
.delay2:
        in  al, dx
        loop .delay2
&nbsp;
        ret
</pre>

<p><div class="rs-tip-major">Poznámka: navíc musíme do tabulky s&nbsp;hodnotami
řídicích registrů přidat i registr <strong>OPL_FEEDBACK</strong>, jinak nebude
v&nbsp;DOSBoxu výběr levého a pravého reproduktoru plně funkční. Osobně se
domnívám, že se jedná spíše o chybu implementace DualOPL2 v&nbsp;DOSBoxu a
nikoli o vlastnost reálného Sound Blasteru Pro 1.0 (ovšem tuto kartu nevlastním
a novější karty již mají OPL3). Jak již bylo řečeno výše, je DualOPL2 spíše
určitá kuriozita, protože ihned po vydání verze 2.0 se přestala 1.0
prodávat (takže ani mnoho her Pro 1.0 nepodporuje):</div></p>

<pre>
        db CHANNEL_1 + OPL_FEEDBACK,                   0x00  <i>; libovolny zapis zpusobi, ze kazdy OPL2 ovlada svuj kanal</i>
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Úplný zdrojový kód dnešního prvního demonstračního příkladu</h2>

<p>V&nbsp;dnešním prvním demonstračním příkladu je ukázáno ovládání dvojice
čipů OPL2 tak, jak bylo popsáno v&nbsp;předchozích kapitolách. Změnou
zvýrazněného řádku je možné určit, do jakého reproduktoru bude zvuk poslán,
tj.&nbsp;jaký OPL2 čip bude použit:</p>

<pre>
        mov  si, tones                   <i>; zacatek tabulky</i>
        <strong>mov  bx, LEFT_SPEAKER</strong>
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
</pre>

<p>nebo:</p>

<pre>
        mov  si, tones                   <i>; zacatek tabulky</i>
        <strong>mov  bx, RIGHT_SPEAKER</strong>
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
</pre>

<p>Zdrojový kód tohoto příkladu vypadá následovně:</p>

<pre>
<i>; Prehrani zakladniho tonu na kartach s dvojici cipu OPL2.</i>
<i>; Pojmenovani registru OPL2.</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sound_opl2_table.com sound_dual_opl2.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sound_opl2_table.com sound_dual_opl2.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
 &nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karet s cipem OPL2</i>
OPL_ADDRESS equ 0x220
OPL_DATA    equ 0x221
&nbsp;
<i>; vyber levelo a praveho reproduktoru</i>
LEFT_SPEAKER  equ 0
RIGHT_SPEAKER equ 2  <i>; musi byt 2!!!</i>
&nbsp;
<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
&nbsp;
<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8
&nbsp;
<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro
&nbsp;
<i>; makro pro zapis do registru OPL2</i>
%macro <strong>write_opl_register</strong> 2
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>
&nbsp;
        mov  si, tones                   <i>; zacatek tabulky</i>
        mov  bx, RIGHT_SPEAKER
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
&nbsp;
        wait_key
        exit
&nbsp;
<strong>write_table_to_opl2</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl2         <i>; muzeme prejit na dalsi registr</i>
&nbsp;
&nbsp;
<strong>tones</strong>:  <i>; tabulka s tonem pro prvni kanal</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0xF0  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
        db CHANNEL_1 + OPL_FEEDBACK,                   0x00  <i>; libovolny zapis zpusobi, ze kazdy OPL2 ovlada svuj kanal</i>
        db CHANNEL_1 + OPL_KEY_ON,                     0x32  <i>; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence</i>
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        add dx, bx
        out dx, al
&nbsp;
        <i>; cekani priblizne 3.3 mikrosekundy</i>
        mov cl, 6
<strong>.delay1</strong>:
        in  al, dx
        loop .delay1
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        add dx, bx
        out dx, al
&nbsp;
        <i>; cekani priblizne 23 mikrosekund</i>
        mov cl, 35
<strong>.delay2</strong>:
        in  al, dx
        loop .delay2
&nbsp;
        ret
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Vícekanálový výstup z&nbsp;OPL2 (až devítihlasová polyfonie)</h2>

<p>Vraťme se ještě na chvíli k&nbsp;původnímu &bdquo;jednoduchému&ldquo; čipu
OPL2. Připomeňme si, že tyto čipy podporovaly celkem devět zvukových kanálů,
které jsou na sobě <i>nezávislé</i> &ndash; každý kanál je možné individuálně
ovládat a nastavovat jeho parametry. A každý kanál je tvořen dvojicí
<i>operátorů</i>, které mohou být zapojeny různým způsobem &ndash; paralelně
(AM modulace) či sériově (FM resp.&nbsp;fázová modulace). Výsledkem je, že čip
OPL2 dokáže přehrávat devět na sobě nezávislých tónů v&nbsp;případě, že není
nastaven perkusní režim (což je trošku magie, která si vyžádá samostatný text).
Každý kanál má svoji sadu řídicích registrů a vzhledem k&nbsp;tomu, že některé
registry jsou určeny pro jednotlivé operátory, je těchto registrů poměrně velké
množství.</p>

<table>
<tr><th>Registry</th><th>Platné pro</th><th>Počet registrů</th><th>Oficiální jméno</th></tr>
<tr><td>20..35</td><td>operátor</td><td>18</td><td>Amp Mod / Vibrato / EG type / Key Scaling / Multiple</td></tr>
<tr><td>40..55</td><td>operátor</td><td>18</td><td>Key scaling level / Operator output level</td></tr>
<tr><td>60..75</td><td>operátor</td><td>18</td><td>Attack Rate / Decay Rate</td></tr>
<tr><td>80..95</td><td>operátor</td><td>18</td><td>Sustain Level / Release Rate</td></tr>
<tr><td>A0..A8</td><td>kanál   </td><td>9</td><td>Frequency (low 8 bits)</td></tr>
<tr><td>B0..B8</td><td>kanál   </td><td>9</td><td>Key On / Octave / Frequency (high 2 bits)</td></tr>
<tr><td>C0..C8</td><td>kanál   </td><td>9</td><td>Feedback strength / Connection type</td></tr>
<tr><td>E0..F5</td><td>kanál   </td><td>9</td><td>Wave Select</td></tr>
</table>

<p>Popř.&nbsp;se na celý problém můžeme podívat ze strany: pro nastavení
každého kanálu potřebujeme 12 registrů: 4&times;2 registry pro nastavení
operátorů a 4&times;1 registr pro nastavení vlastnosti celého kanálu. Ovšem
některé registry jsou zpočátku vynulovány a my je nebudeme muset měnit
(například výběr tvaru signálu nebo způsob zapojení operátorů &ndash; ponecháme
výchozí hodnoty).</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Nastavení not pro osm kanálů</h2>

<p>Již umíme naprogramovat nastavení registrů jediného kanálu. Připomeňme si,
že k&nbsp;tomuto účelu používáme tabulku, která vypadá následovně:</p>

<pre>
<strong>tones</strong>:  <i>; tabulka s tonem pro prvni kanal</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0xF0  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
&nbsp;
        db 0, 0                                              <i>; zarazka</i>
</pre>

<p>Povšimněte si, že skutečně <i>ne</i>nastavujeme všechny registry vypsané <a
href="#k05">v&nbsp;předchozí kapitole</a>, protože to není zcela nutné. Tuto
tabulku můžeme triviálně rozšířit i pro další kanály, pouze nesmíme zapomenout
na umístění zarážky za poslední hodnotou.</p>

<p>Rozšířená tabulka bude obsahovat pro každý kanál pouze výše uvedené registry
(9 bajtů), přičemž registr <strong>OPL_KEY_ON</strong> budeme ovládat přímo
z&nbsp;klávesnice, ze které si tak vytvoříme jednoduché &bdquo;klávesy&ldquo;
s&nbsp;osmi na sobě nezávislými notami. Jednotlivé kanály se budu lišit
nastavenými frekvencemi (<strong>OPL_FREQUENCY_LOW</strong> + později
<strong>OPL_KEY_ON</strong>), protože pro prvních osm kanálů postupně nastavíme
noty C, D, E, F, G, A, H a vyšší C:</p>

<table>
<tr><th>Nota</th><th>Frekvence</th>Hodnota pro zápis do registru</tr>
<tr><td>C</td><td>261.1</td><td>0x0ae</td></tr>
<tr><td>D</td><td>293.7</td><td>0x181</td></tr>
<tr><td>E</td><td>329.6</td><td>0x1b0</td></tr>
<tr><td>F</td><td>349.2</td><td>0x1ca</td></tr>
<tr><td>G</td><td>392.0</td><td>0x202</td></tr>
<tr><td>A</td><td>440.0</td><td>0x241</td></tr>
<tr><td>H</td><td>493.9</td><td>0x287</td></tr>
<tr><td>C</td><td>523.3</td><td>0x2ae</td></tr>
</table>

<p>V&nbsp;tabulce s&nbsp;hodnotami registrů můžeme nastavit spodních osm bitů
hodnoty z&nbsp;posledního sloupce tabulky, a to pro osm kanálů (devátý není
použit):</p>

<pre>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0xae  <i>; frekvence zvuku (C)</i>
        db CHANNEL_2 + OPL_FREQUENCY_LOW,              0x81  <i>; frekvence zvuku (D)</i>
        db CHANNEL_3 + OPL_FREQUENCY_LOW,              0xb0  <i>; frekvence zvuku (E)</i>
        db CHANNEL_4 + OPL_FREQUENCY_LOW,              0xca  <i>; frekvence zvuku (F)</i>
        db CHANNEL_5 + OPL_FREQUENCY_LOW,              0x02  <i>; frekvence zvuku (G)</i>
        db CHANNEL_6 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (A)</i>
        db CHANNEL_7 + OPL_FREQUENCY_LOW,              0x87  <i>; frekvence zvuku (B)</i>
        db CHANNEL_8 + OPL_FREQUENCY_LOW,              0xae  <i>; frekvence zvuku (C)</i>
</pre>

<p>Horní bity hodnoty se nastavují v&nbsp;registrech
<strong>OPL_KEY_ON</strong>, které budeme měnit při stisku či naopak uvolnění
klávesy.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Ovládání přehrání not klávesnicí</h2>

<p>Nyní musíme implementovat &bdquo;klávesy&ldquo;, konkrétně začátek přehrání
či naopak zastavení přehrávání noty při stisku/uvolnění kláves 1 až 8 na PC
klávesnici (samozřejmě si však můžete vybrat i odlišné klávesy). Nejprve
přečteme kód stisknuté/uvolněné klávesy, což již známe z&nbsp;předchozího
článku:</p>

<pre>
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
</pre>

<p>Dále si vytvoříme pomocná makra, která zareagují na stisk či uvolnění
klávesy. Makrům se předá kód klávesy, index registru OPL, který se má změnit, a
hodnota tohoto regsitru:</p>

<pre>
%macro <strong>on_key_press</strong> 3
        cmp al, %1                   <i>; test na stisk klavesy</i>
        jne %%not_pressed            <i>; neni stisknuta -> preskok</i>
        write_opl_register %2, %3    <i>; povoleni KEY ON bitu</i>
        jmp .opak
    %%not_pressed:
%endmacro
&nbsp;
%macro <strong>on_key_release</strong> 3
        cmp al, 0x80 + %1            <i>; test na uvolneni klavesy</i>
        jne %%not_released           <i>; neni uvolnena -> preskok</i>
        write_opl_register %2, %3    <i>; zakaz KEY ON bitu</i>
        jmp .opak
    %%not_released:
%endmacro
</pre>

<p>Vlastní realizace &bdquo;kláves&ldquo; vypadá sice vypadá velmi jednoduše (a
taktéž ve skutečnosti jednoduchá je), ovšem výsledný strojový kód bude postupně
narůstat kvůli expanzi maker:</p>

<pre>
        on_key_press   KEY_1, CHANNEL_1 + OPL_KEY_ON, 0b00101110
        on_key_release KEY_1, CHANNEL_1 + OPL_KEY_ON, 0b00001110
        on_key_press   KEY_2, CHANNEL_2 + OPL_KEY_ON, 0b00110001
        on_key_release KEY_2, CHANNEL_2 + OPL_KEY_ON, 0b00010001
        on_key_press   KEY_3, CHANNEL_3 + OPL_KEY_ON, 0b00110001
        on_key_release KEY_3, CHANNEL_3 + OPL_KEY_ON, 0b00010001
        on_key_press   KEY_4, CHANNEL_4 + OPL_KEY_ON, 0b00110001
        on_key_release KEY_4, CHANNEL_4 + OPL_KEY_ON, 0b00010001
        on_key_press   KEY_5, CHANNEL_5 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_5, CHANNEL_5 + OPL_KEY_ON, 0b00010010
        on_key_press   KEY_6, CHANNEL_6 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_6, CHANNEL_6 + OPL_KEY_ON, 0b00010010
        on_key_press   KEY_7, CHANNEL_7 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_7, CHANNEL_7 + OPL_KEY_ON, 0b00010010
        on_key_press   KEY_8, CHANNEL_8 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_8, CHANNEL_8 + OPL_KEY_ON, 0b00010010
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Úplný zdrojový kód dnešního druhého demonstračního příkladu</h2>

<p>Ukažme si nyní úplný zdrojový kód dnešního druhého demonstračního příkladu,
který po svém spuštění reaguje na klávesy 1..8 a na základě kombinace stisku
těchto kláves povoluje či zakazuje zvukové kanály 1..8 bitem KEY_ON. Jak bylo
popsáno výše, je možné přehrát více not:</p>

<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL2.</i>
<i>; Pojmenovani registru OPL2.</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sound_opl2_table.com sound_opl2_multichannel.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sound_opl2_table.com sound_opl2_multichannel.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
 &nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karet s cipem OPL2</i>
OPL_ADDRESS equ 0x388
OPL_DATA    equ 0x389
&nbsp;
<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
&nbsp;
<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8
&nbsp;
<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15
&nbsp;
<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61
&nbsp;
<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_2       equ 0x03
KEY_3       equ 0x04
KEY_4       equ 0x05
KEY_5       equ 0x06
KEY_6       equ 0x07
KEY_7       equ 0x08
KEY_8       equ 0x09
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; makro pro zapis do registru OPL2</i>
%macro <strong>write_opl_register</strong> 2
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro
&nbsp;
%macro <strong>on_key_press</strong> 3
        cmp al, %1                   <i>; test na stisk klavesy</i>
        jne %%not_pressed            <i>; neni stisknuta -> preskok</i>
        write_opl_register %2, %3    <i>; povoleni KEY ON bitu</i>
        jmp .opak
    %%not_pressed:
%endmacro
&nbsp;
%macro <strong>on_key_release</strong> 3
        cmp al, 0x80 + %1            <i>; test na uvolneni klavesy</i>
        jne %%not_released           <i>; neni uvolnena -> preskok</i>
        write_opl_register %2, %3    <i>; zakaz KEY ON bitu</i>
        jmp .opak
    %%not_released:
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>
&nbsp;
        mov  si, tones                   <i>; zacatek tabulky</i>
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
&nbsp;
        in  al, PPI_PORT_B               <i>; port B s rizenim zarizeni</i>
        or  al, 0b1000000                <i>; nastaveni bitu cislo 7 na jednicku</i>
        out PPI_PORT_B, al               <i>; zapis zpet na port B</i>
&nbsp;
<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
&nbsp;
        on_key_press   KEY_1, CHANNEL_1 + OPL_KEY_ON, 0b00101110
        on_key_release KEY_1, CHANNEL_1 + OPL_KEY_ON, 0b00001110
        on_key_press   KEY_2, CHANNEL_2 + OPL_KEY_ON, 0b00110001
        on_key_release KEY_2, CHANNEL_2 + OPL_KEY_ON, 0b00010001
        on_key_press   KEY_3, CHANNEL_3 + OPL_KEY_ON, 0b00110001
        on_key_release KEY_3, CHANNEL_3 + OPL_KEY_ON, 0b00010001
        on_key_press   KEY_4, CHANNEL_4 + OPL_KEY_ON, 0b00110001
        on_key_release KEY_4, CHANNEL_4 + OPL_KEY_ON, 0b00010001
        on_key_press   KEY_5, CHANNEL_5 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_5, CHANNEL_5 + OPL_KEY_ON, 0b00010010
        on_key_press   KEY_6, CHANNEL_6 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_6, CHANNEL_6 + OPL_KEY_ON, 0b00010010
        on_key_press   KEY_7, CHANNEL_7 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_7, CHANNEL_7 + OPL_KEY_ON, 0b00010010
        on_key_press   KEY_8, CHANNEL_8 + OPL_KEY_ON, 0b00110010
        on_key_release KEY_8, CHANNEL_8 + OPL_KEY_ON, 0b00010010
&nbsp;
        cmp al, KEY_ESC                  <i>; test stisknute klavesy ESC</i>
        jne .opak                        <i>; neni stisknuta? -> zkusme znovu</i>
        exit
&nbsp;
&nbsp;
<strong>write_table_to_opl2</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl2         <i>; muzeme prejit na dalsi registr</i>
&nbsp;
&nbsp;
<strong>tones</strong>:  <i>; tabulka s tony pro osm kanalu</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0xae  <i>; frekvence zvuku (C)</i>
&nbsp;
        db CHANNEL_2_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_2_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_2_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_2_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_2_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_2_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_2_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_2_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_2 + OPL_FREQUENCY_LOW,              0x81  <i>; frekvence zvuku (D)</i>
&nbsp;
        db CHANNEL_3_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_3_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_3_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_3_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_3_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_3_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_3_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_3_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_3 + OPL_FREQUENCY_LOW,              0xb0  <i>; frekvence zvuku (E)</i>
&nbsp;
        db CHANNEL_4_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_4_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_4_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_4_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_4_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_4_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_4_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_4_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_4 + OPL_FREQUENCY_LOW,              0xca  <i>; frekvence zvuku (F)</i>
&nbsp;
        db CHANNEL_5_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_5_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_5_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_5_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_5_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_5_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_5_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_5_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_5 + OPL_FREQUENCY_LOW,              0x02  <i>; frekvence zvuku (G)</i>
&nbsp;
        db CHANNEL_6_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_6_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_6_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_6_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_6_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_6_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_6_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_6_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_6 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (A)</i>
&nbsp;
        db CHANNEL_7_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_7_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_7_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_7_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_7_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_7_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_7_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_7_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_7 + OPL_FREQUENCY_LOW,              0x87  <i>; frekvence zvuku (B)</i>
&nbsp;
        db CHANNEL_8_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_8_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_8_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_8_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_8_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_8_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_8_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_8_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_8 + OPL_FREQUENCY_LOW,              0xae  <i>; frekvence zvuku (C)</i>
&nbsp;
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        <i>; cekani priblizne 3.3 mikrosekundy</i>
        mov cl, 6
<strong>.delay1</strong>:
        in  al, dx
        loop .delay1
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al
&nbsp;
        <i>; cekani priblizne 23 mikrosekund</i>
        mov cl, 35
<strong>.delay2</strong>:
        in  al, dx
        loop .delay2
&nbsp;
        ret
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Vylepšení ovládání čipů OPL přes tabulku kláves+akcí: plnohodnotné &bdquo;klávesy&ldquo; v&nbsp;284 bajtech</h2>

<p>Předchozí demonstrační příklad je sice plně funkční, ale po překladu získáme
program typu COM, který má velikost 422 bajtů. To je poměrně hodně (i když asi
ne z&nbsp;dnešního pohledu). Pokusme se tedy nahradit volání maker spíše
tabulkou, v&nbsp;níž bude zapsána jak událost, na kterou reagujeme
(stisk/uvolnění klávesy), tak i potřebná změna OPL. Samozřejmě opět nesmíme
zapomenout na &bdquo;zarážku&ldquo; na konci tabulky:</p>

<pre>
<strong>key_actions</strong>:
        db KEY_1,             CHANNEL_1 + OPL_KEY_ON, 0b00101110
        db KEY_1+KEY_RELEASE, CHANNEL_1 + OPL_KEY_ON, 0b00001110
        db KEY_2,             CHANNEL_2 + OPL_KEY_ON, 0b00110001
        db KEY_2+KEY_RELEASE, CHANNEL_2 + OPL_KEY_ON, 0b00010001
        db KEY_3,             CHANNEL_3 + OPL_KEY_ON, 0b00110001
        db KEY_3+KEY_RELEASE, CHANNEL_3 + OPL_KEY_ON, 0b00010001
        db KEY_4,             CHANNEL_4 + OPL_KEY_ON, 0b00110001
        db KEY_4+KEY_RELEASE, CHANNEL_4 + OPL_KEY_ON, 0b00010001
        db KEY_5,             CHANNEL_5 + OPL_KEY_ON, 0b00110010
        db KEY_5+KEY_RELEASE, CHANNEL_5 + OPL_KEY_ON, 0b00010010
        db KEY_6,             CHANNEL_6 + OPL_KEY_ON, 0b00110010
        db KEY_6+KEY_RELEASE, CHANNEL_6 + OPL_KEY_ON, 0b00010010
        db KEY_7,             CHANNEL_7 + OPL_KEY_ON, 0b00110010
        db KEY_7+KEY_RELEASE, CHANNEL_7 + OPL_KEY_ON, 0b00010010
        db KEY_8,             CHANNEL_8 + OPL_KEY_ON, 0b00110010
        db KEY_8+KEY_RELEASE, CHANNEL_8 + OPL_KEY_ON, 0b00010010
        db 0, 0                                              <i>; zarazka</i>
</pre>

<p>Postupné porovnání přečteného kódu klávesy a vyvolání příslušné akce lze
realizovat následující programovou smyčkou (tu by navíc ještě bylo možné
optimalizovat jinou alokací registrů):</p>

<pre>
<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
        cmp al, KEY_ESC                  <i>; test na stisk ESC</i>
        je  .exit                        <i>; pokud stisknuta, konec programu</i>
&nbsp;
        mov ah, al                       <i>; kod klavesy do registru AH pro dalsi pouziti</i>
        mov si, key_actions              <i>; tabulka akci pri stisku ci uvolneni klavesy</i>
&nbsp;
<strong>.next_key</strong>:
        lodsb                            <i>; nacist kod klavesy z tabulky</i>
        or  al, al                       <i>; test na nulu (zarazka)</i>
        jz  .opak                        <i>; nic jsme jiz nenasli -> cteni klavesy pres port</i>
&nbsp;
        cmp ah, al                       <i>; nasli jsme kod klavesy, ktery zname?</i>
        jne .try_next_key
        lodsb                            <i>; adresa OPL registru</i>
        mov ah, al
        lodsb                            <i>; hodnota OPL registru</i>
        xchg ah, al                      <i>; vtipne jsme si prohodili parametry subrutiny write_opl_register</i>
        call perform_write_to_opl_register
        jmp .next_key                    <i>; zkusit dalsi klavesu</i>
<strong>.try_next_key</strong>:
        add si, 2                        <i>; preskocit adresu registru + jeho hodnotu</i>
        jmp .next_key
</pre>

<p>Výsledkem jsou plnohodnotné &bdquo;klávesy&ldquo; realizované programem o
velikosti 284 bajtů, ve kterém je navíc možné individuálně měnit zvuk každého
kanálu (noty).</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Úplný zdrojový kód dnešního třetího demonstračního příkladu</h2>

<p>Upravený a do určité míry optimalizovaný příklad s&nbsp;realizací
&bdquo;kláves&ldquo; na IBM PC bude vypadat následovně. Jak jsme si již řekli
v&nbsp;předchozí kapitoly, bude výsledný program nejenom kratší, ale i poněkud
přehlednější:</p>

<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL2.</i>
<i>; Pojmenovani registru OPL2.</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sound_opl2_table.com sound_opl2_multichannel.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sound_opl2_table.com sound_opl2_multichannel.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karet s cipem OPL2</i>
OPL_ADDRESS equ 0x388
OPL_DATA    equ 0x389
&nbsp;
<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
&nbsp;
<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8
&nbsp;
<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15
&nbsp;
<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61
&nbsp;
<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_2       equ 0x03
KEY_3       equ 0x04
KEY_4       equ 0x05
KEY_5       equ 0x06
KEY_6       equ 0x07
KEY_7       equ 0x08
KEY_8       equ 0x09
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro
&nbsp;
<i>; makro pro zapis do registru OPL2</i>
%macro <strong>write_opl_register</strong> 2
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>
&nbsp;
        mov  si, tones                   <i>; zacatek tabulky</i>
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
&nbsp;
        in  al, PPI_PORT_B               <i>; port B s rizenim zarizeni</i>
        or  al, 0b1000000                <i>; nastaveni bitu cislo 7 na jednicku</i>
        out PPI_PORT_B, al               <i>; zapis zpet na port B</i>
&nbsp;
<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
        cmp al, KEY_ESC                  <i>; test na stisk ESC</i>
        je  .exit                        <i>; pokud stisknuta, konec programu</i>
&nbsp;
        mov ah, al                       <i>; kod klavesy do registru AH pro dalsi pouziti</i>
        mov si, key_actions              <i>; tabulka akci pri stisku ci uvolneni klavesy</i>
&nbsp;
<strong>.next_key</strong>:
        lodsb                            <i>; nacist kod klavesy z tabulky</i>
        or  al, al                       <i>; test na nulu (zarazka)</i>
        jz  .opak                        <i>; nic jsme jiz nenasli -> cteni klavesy pres port</i>
&nbsp;
        cmp ah, al                       <i>; nasli jsme kod klavesy, ktery zname?</i>
        jne .try_next_key
        lodsb                            <i>; adresa OPL registru</i>
        mov ah, al
        lodsb                            <i>; hodnota OPL registru</i>
        xchg ah, al                      <i>; vtipne jsme si prohodili parametry subrutiny write_opl_register</i>
        call perform_write_to_opl_register
        jmp .next_key                    <i>; zkusit dalsi klavesu</i>
<strong>.try_next_key</strong>:
        add si, 2                        <i>; preskocit adresu registru + jeho hodnotu</i>
        jmp .next_key
&nbsp;
<strong>.exit</strong>:
        exit
&nbsp;
&nbsp;
<strong>write_table_to_opl2</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl2         <i>; muzeme prejit na dalsi registr</i>
&nbsp;
&nbsp;
<strong>key_actions</strong>:
        db KEY_1,             CHANNEL_1 + OPL_KEY_ON, 0b00101110
        db KEY_1+KEY_RELEASE, CHANNEL_1 + OPL_KEY_ON, 0b00001110
        db KEY_2,             CHANNEL_2 + OPL_KEY_ON, 0b00110001
        db KEY_2+KEY_RELEASE, CHANNEL_2 + OPL_KEY_ON, 0b00010001
        db KEY_3,             CHANNEL_3 + OPL_KEY_ON, 0b00110001
        db KEY_3+KEY_RELEASE, CHANNEL_3 + OPL_KEY_ON, 0b00010001
        db KEY_4,             CHANNEL_4 + OPL_KEY_ON, 0b00110001
        db KEY_4+KEY_RELEASE, CHANNEL_4 + OPL_KEY_ON, 0b00010001
        db KEY_5,             CHANNEL_5 + OPL_KEY_ON, 0b00110010
        db KEY_5+KEY_RELEASE, CHANNEL_5 + OPL_KEY_ON, 0b00010010
        db KEY_6,             CHANNEL_6 + OPL_KEY_ON, 0b00110010
        db KEY_6+KEY_RELEASE, CHANNEL_6 + OPL_KEY_ON, 0b00010010
        db KEY_7,             CHANNEL_7 + OPL_KEY_ON, 0b00110010
        db KEY_7+KEY_RELEASE, CHANNEL_7 + OPL_KEY_ON, 0b00010010
        db KEY_8,             CHANNEL_8 + OPL_KEY_ON, 0b00110010
        db KEY_8+KEY_RELEASE, CHANNEL_8 + OPL_KEY_ON, 0b00010010
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
<strong>tones</strong>:  <i>; tabulka s tony pro osm kanalu</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0xae  <i>; frekvence zvuku (C)</i>
&nbsp;
        db CHANNEL_2_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_2_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_2_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_2_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_2_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_2_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_2_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_2_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_2 + OPL_FREQUENCY_LOW,              0x81  <i>; frekvence zvuku (D)</i>
&nbsp;
        db CHANNEL_3_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_3_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_3_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_3_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_3_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_3_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_3_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_3_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_3 + OPL_FREQUENCY_LOW,              0xb0  <i>; frekvence zvuku (E)</i>
&nbsp;
        db CHANNEL_4_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_4_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_4_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_4_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_4_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_4_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_4_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_4_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_4 + OPL_FREQUENCY_LOW,              0xca  <i>; frekvence zvuku (F)</i>
&nbsp;
        db CHANNEL_5_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_5_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_5_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_5_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_5_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_5_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_5_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_5_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_5 + OPL_FREQUENCY_LOW,              0x02  <i>; frekvence zvuku (G)</i>
&nbsp;
        db CHANNEL_6_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_6_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_6_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_6_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_6_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_6_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_6_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_6_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_6 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (A)</i>
&nbsp;
        db CHANNEL_7_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_7_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_7_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_7_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_7_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_7_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_7_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_7_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_7 + OPL_FREQUENCY_LOW,              0x87  <i>; frekvence zvuku (B)</i>
&nbsp;
        db CHANNEL_8_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_8_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_8_OPERATOR_1 + OPL_ATTACK_DECAY,    0x55  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_8_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_8_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_8_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_8_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_8_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_8 + OPL_FREQUENCY_LOW,              0xae  <i>; frekvence zvuku (C)</i>
&nbsp;
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        <i>; cekani priblizne 3.3 mikrosekundy</i>
        mov cl, 6
<strong>.delay1</strong>:
        in  al, dx
        loop .delay1
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al
&nbsp;
        <i>; cekani priblizne 23 mikrosekund</i>
        mov cl, 35
<strong>.delay2</strong>:
        in  al, dx
        loop .delay2
&nbsp;
        ret
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Čip OPL3 z&nbsp;pohledu programátora</h2>

<p>Nyní se konečně dostáváme k&nbsp;popisu čipu OPL3. Oproti výše popsanému
čipu <i>YM 3812</i> došlo k&nbsp;několika podstatným úpravám. Především se
zvýšil celkový počet operátorů z&nbsp;osmnácti na 36, do jednoho kanálu je
možné zapojit až čtyři operátory, místo čtyř typů signálů na vstupech operátorů
je k&nbsp;dispozici osm typů (včetně obdélníkového signálu a logaritmicky
zkresleného signálu pilového) a na výstup čipu je možné zapojit dvojici D/A
převodníků a vytvářet tak stereo hudbu &ndash; ve skutečnosti však není možné
plynule nastavovat přechod mezi levým a pravým reproduktorem (<i>panning</i>),
lze pouze zvolit, zda je výstup z&nbsp;nějakého hudebního kanálu přehráván na
levém, pravém či obou reproduktorech.</p>

<p>Vzhledem ke zvýšenému počtu operátorů se zvýšil i počet interních registrů.
Z&nbsp;tohoto důvodu jsou místo jedné registrové sady použity sady dvě, což
znamená, že místo dvou adres mapovaných do I/O prostoru (index a data) jsou
použity adresy čtyři.</p>

<p>Zatímco u čipu <i>YM 3812</i> bylo možné operátory v&nbsp;jednom kanálu
zapojit pouze do dvou konfigurací (AM či FM), lze u čipu <i>YMF 262</i> použít
mnohem větší počet kombinací, kterými se budeme podrobněji zabývat příště.
Existují tři možnosti konfigurace: 18 kanálů, z&nbsp;nichž každý obsahuje dva
operátory, 15 melodických kanálů se dvěma operátory společně s&nbsp;pěti kanály
pracujícími v&nbsp;perkusním režimu a konečně 6 kanálů se čtyřmi operátory
(zbytek jsou buď dvouoperátorové kanály nebo kanály pracující v&nbsp;perkusním
režimu).</p>

<p>V&nbsp;konfiguraci čtyřoperátorového kanálu vždy jeden z&nbsp;operátorů
(původní modulátor) obsahuje zpětnou vazbu, i když v&nbsp;řídicích registrech
je možné nastavit úroveň zpětné vazby pro všechny operátory &ndash; u tří
čtvrtin operátorů nemá tedy obsah příslušného řídicího registru vliv na
generovaný tón.</p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Řídicí registry čipu OPL3</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Stereo výstup</h2>

<p>Z&nbsp;předchozího textu je pravděpodobně patrné, že čip <i>OPL 3</i> nabízí
mnohem více možností při vytváření zvuků, ovšem mnoho vývojářů nedokázalo
všechny možnosti syntézy v&nbsp;tomto režimu využít &ndash; z&nbsp;tohoto
důvodu se velmi často setkáme s&nbsp;tím, že je použita
&bdquo;dvouoperátorová&ldquo; syntéza a čip <i>YMF 262</i> je tak vlastně
degradován na stereo verzi původního čipu <i>YM 3812</i> s&nbsp;dvojnásobným
množstvím hudebních kanálů (osmnáct kanálů namísto devíti).</p>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Demonstrační příklad: programová změna zvukového výstupu do levého, pravého i obou reproduktorů</h2>

<pre>
        <i>; levy reproduktor</i>
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00010000
        wait_key

        <i>; pravy reproduktor</i>
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00100000
        wait_key

        <i>; oba reproduktory</i>
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110000
        wait_key
</pre>
<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL3.</i>
<i>; Prepinani vystupu na pravy a/nebo levy reproduktor.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sound_opl2_stereo1.com sound_opl3_stereo_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sound_opl2_stereo1.com sound_opl3_stereo_1.asm</i>

<i>;-----------------------------------------------------------------------------</i>

BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>

 
<i>;-----------------------------------------------------------------------------</i>

<i>; registry karet s cipem OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221

<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
OPL3_MODE_ENABLE      equ 0x05  <i>; vyssi port!!!</i>

<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8

<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15

<i>;-----------------------------------------------------------------------------</i>

<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit</strong> 0
        ret
%endmacro

<i>; vyprazdneni bufferu klavesnice a cekani na klavesu</i>
%macro <strong>wait_key</strong> 0
        xor     ax, ax
        int     0x16
%endmacro

<i>; makro pro zapis do registru OPL2 nebo OPL3</i>
%macro <strong>write_opl_register</strong> 2
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro

<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>

<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>

        mov  si, tone1                   <i>; zacatek tabulky</i>
        call write_table_to_opl3         <i>; zapis obsahu tabulky do OPL2</i>

        <i>; levy reproduktor</i>
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00010000
        wait_key

        <i>; pravy reproduktor</i>
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00100000
        wait_key

        <i>; oba reproduktory</i>
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110000
        wait_key

        exit

<strong>write_table_to_opl3</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
.write_register:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         <i>; muzeme prejit na dalsi registr</i>


tone1:  <i>; tabulka s tonem pro prvni kanal</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x10  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0xF0  <i>; modulator: rychly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_1 + OPL_FREQUENCY_LOW,   0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1 + OPL_KEY_ON,                     0x32  <i>; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence</i>
        db 0, 0                                              <i>; zarazka</i>


<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2 nebo OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al

        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al

        ret
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Nastavení čipu OPL3 do režimu NEkompatibilního s&nbsp;OPL2</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Demonstrační příklad: funkční programový výběr zvukového výstupu</h2>

<pre>
; Prehrani zakladniho tonu na kartach s cipem OPL3.
; Prepnuti do rezimu OPL3.
; Prepinani vystupu na pravy a/nebo levy reproduktor.
; Pojmenovani registru OPL3.
;
;
; preklad pomoci:
;     nasm -f bin -o sound_opl2_stereo1.com sound_opl3_stereo_2.asm
;
; nebo pouze:
;     nasm -o sound_opl2_stereo1.com sound_opl3_stereo_2.asm

;-----------------------------------------------------------------------------

BITS 16         ; 16bitovy vystup pro DOS
CPU 8086        ; specifikace pouziteho instrukcniho souboru

 
;-----------------------------------------------------------------------------

; registry karet s cipem OPL3
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
OPL_HIGH_ADDRESS      equ 0x222
OPL_HIGH_DATA         equ 0x223

; ridici registry OPL2
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
OPL3_MODE_ENABLE      equ 0x05  ; vyssi port!!!

; indexy kanalu
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8

; offsety pro jednotlive operatory
; --------------------------------------------------
;  Channel        1   2   3   4   5   6   7   8   9
;  Operator 1    00  01  02  08  09  0A  10  11  12
;  Operator 2    03  04  05  0B  0C  0D  13  14  15
; --------------------------------------------------
;  Channel        1   2   3   4   5   6   7   8   9
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15

;-----------------------------------------------------------------------------

; ukonceni procesu a navrat do DOSu
%macro exit 0
        ret
%endmacro

; vyprazdneni bufferu klavesnice a cekani na klavesu
%macro wait_key 0
        xor     ax, ax
        int     0x16
%endmacro

; makro pro zapis do registru OPL2 nebo OPL3
%macro write_opl_register 2
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro

; makro pro zapis do "vyssiho" registru OPL3
%macro write_opl_high_register 2
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro

;-----------------------------------------------------------------------------
org  0x100        ; zacatek kodu pro programy typu COM (vzdy se zacina na 256)

start:
        push cs
        pop  ds                          ; DS==CS

        write_opl_high_register OPL3_MODE_ENABLE, 1

        mov  si, tone1                   ; zacatek tabulky
        call write_table_to_opl3         ; zapis obsahu tabulky do OPL2

        ; levy reproduktor
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00010000
        wait_key

        ; pravy reproduktor
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00100000
        wait_key

        ; oba reproduktory
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110000
        wait_key

        exit

write_table_to_opl3:
        lodsb                            ; nacist bajt z tabulky (cislo registru)
        or  al, al                       ; test na nulu
        jnz .write_register
        ret                              ; dosahli jsme konce tabulky
.write_register:
        mov ah, al
        lodsb                            ; nacist dalsi bajt z tabulky (hodnota registru)
        xchg al, ah                      ; podprogram vyzaduje opacne poradi AL, AH
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         ; muzeme prejit na dalsi registr


tone1:  ; tabulka s tonem pro prvni kanal
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni modulatoru: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x10  ; uroven vystupu 40 dB
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0xF0  ; modulator: rychly nastup zvuku + pomale doznivani
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  ; urovne sustain a release pro modulator
        db CHANNEL_1_OPERATOR_1 + OPL_FREQUENCY_LOW,   0x41  ; frekvence zvuku (komorni A = 440 Hz)
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni nosne: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  ; nastaveni urovne vystupu nosne na 47 dB
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xF0  ; nosna: rychly nastup + pomale doznivani
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  ; urovne sustain a release pro nosnou
        db CHANNEL_1 + OPL_KEY_ON,                     0x32  ; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence
        db 0, 0                                              ; zarazka


perform_write_to_opl_register:
        ; zapis do vybraneho registru OPL2 nebo OPL3
        ; AL - registr
        ; AH - hodnota
        mov dx, OPL_ADDRESS   ; vyber registru pro modifikaci
        out dx, al

        mov al, ah            ; zapis hodnoty do vybraneho registru
        mov dx, OPL_DATA
        out dx, al

        ret


perform_write_to_opl_high_register:
        ; zapis do vybraneho "vyssiho" registru OPL3
        ; AL - registr
        ; AH - hodnota
        mov dx, OPL_HIGH_ADDRESS   ; vyber registru pro modifikaci
        out dx, al

        mov al, ah                 ; zapis hodnoty do vybraneho registru
        mov dx, OPL_HIGH_DATA
        out dx, al

        ret
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Režim využívající 18 zvukových kanálů</h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Demonstrační příklad: využití většiny zvukových kanálů čipu OPL3</h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

