<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. </a></p>
<p><a href="#k03">*** 3. </a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

<p>V&nbsp;předchozích letech jsme si na stránkách Roota připomněli několik důležitých kulatých výročí v&nbsp;oblasti IT a především pak programovacích jazyků. Jednalo se o ....</p>

<p>Pochopitelně i letos oslavíme několik podobných výročí. V&nbsp;dnešním článku se budeme zabývat dvěma událostmi, od nichž letos uplynulo či v&nbsp;následujících deseti měsících uplyne třicet resp.&nbsp;dokonce čtyřicet let. Konkrétně se jedná o data vydání dvou poměrně důležitých (i když ve druhém případě nikoli přelomových) interpretrů programovacího jazyka BASIC, který sice má z&nbsp;hlediska teorie programovacích jazyků poměrně mnoho nepříjemných vlastností, ovšem snadnost jeho implementace, minimální nároky na kapacitu paměti i rychlost procesoru a v&nbsp;neposlední řadě taktéž rychlá učící křivka udělaly z&nbsp;tohoto jazyka na konci sedmdesátých let &bdquo;lingua francu&ldquo; v&nbsp;oblasti minipočítačů a především mikropočítačů. Nejprve si připomeneme vznik slavného <i>BBS BASICu</i> v&nbsp;roce 1981; prakticky přesně o deset let později, tedy v&nbsp;roce 1991, byla vydána první verze <i>QBasicu</i>.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. </h2>

<p>Vzhledem k&nbsp;tomu, že je tento článek zaměřen na historii výpočetní techniky, seznámíme se v&nbsp;něm &ndash; alespoň ve stručnosti &ndash; se samotným vznikem konceptu programovacího jazyka BASIC. Musíme se ovšem v&nbsp;čase vrátit ještě mnohem dál, než &bdquo;pouze&ldquo; do roku 1981 a BBC Basicu. Vznik BASICu je spojen se šedesátými lety a s&nbsp;mainframy řady <i>GE-200</i>, konkrétně s&nbsp;mainframy nesoucími označení  <i>GE-215</i>, <i>GE-225</i> a <i>GE-235</i>. Na těchto počítačích vyvinutých společností <i>General Electric</i> se používalo velké množství různých programovacích jazyků, z&nbsp;nichž většina byla vytvořena &ndash; jak bylo v&nbsp;tu dobu obvyklé &ndash; přímo ve firmě GE.</p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;šedesátých a vlastně i v&nbsp;sedmdesátých letech vůbec nebylo neobvyklé, že jak samotný hardware (mainframe, minipočítač, později mikropočítač), tak i operační systém, programovací jazyky a další podpůrný software dodávala jedna a táž společnost. Dnes je situace naprosto odlišná &ndash; hardware je většinou komoditní, komoditou se de facto stává i operační systém a pokus o vytvoření programovacího jazyka, který by běžel pouze na jediném operačním systému, je velmi problematický, vyžaduje obrovské investice a prakticky je již od začátku odsouzen pouze k&nbsp;minoritní roli.</div></p>

<a href="http://i.iinfo.cz/images/184/hist-53-3.jpg"><img src="http://i.iinfo.cz/images/184/hist-53-3-prev.jpg" width="172" height="270" alt=" " /></a>
<p><i>Obrázek 1: Procesorová jednotka sálového počítače GE-225.<br />
Autor fotografie: Ed Thelen</i></p>

<p>Z&nbsp;nižších programovacích jazyků měli vývojáři na výběr mezi jazykem symbolických instrukcí nazvaným <i>General Assembly Program</i> (zkráceně <i>GAP</i>) a plnohodnotným assemblerem se jménem <i>ZOOM</i>, který mj.&nbsp;podporoval i tvorbu maker (dnes se většinou setkáme pouze s&nbsp;plnohodnotnými assemblery a tak pojem &bdquo;jazyk symbolických instrukcí&ldquo; začal splývat s&nbsp;označením assembler). K&nbsp;těmto nízkoúrovňovým programovacím jazykům můžeme připočíst i specializovaný jazyk <i>WIZ</i>, který sloužil pro překlad aritmetických a logických výrazů do strojového kódu. Tyto přeložené výrazy bylo díky kompatibilnímu binárnímu formátu samozřejmě možné volat jak z&nbsp;assembleru (přesněji řečeno z&nbsp;programů napsaných v&nbsp;jazyku symbolických instrukcí), tak i z&nbsp;programů vytvořených v&nbsp;některém vyšším programovacím jazyku.</p>

<a href="http://i.iinfo.cz/images/184/hist-53-4.jpg"><img src="http://i.iinfo.cz/images/184/hist-53-4-prev.jpg" width="361" height="270" alt=" " /></a>
<p><i>Obrázek 2: Pohled na vnitřní uspořádání procesorové jednotky sálového počítače GE-225.<br />
Autor fotografie: Ed Thelen</i></p>

<p>Vyšší programovací jazyky byly na mainframech dostupné přes nástroj nazvaný <i>GECOM</i>, což je zkratka plného názvu <i>General Compiler</i>. Tento nástroj podporoval především dvojici programovacích jazyků <i>COBOL</i> a <i>ALGOL</i>, kterými jsme se podrobněji zabývali v&nbsp;předchozích částech tohoto seriálu. Kromě těchto v&nbsp;podstatě obecných programovacích jazyků byl nástrojem <i>GECOM</i> podporován i specializovaný jazyk <i>GECOM Report Writer</i>, jehož jméno přesně vystihuje oblast jeho použití (tvorba tiskových sestav), a taktéž programovací jazyk <i>TABSOL</i>, který byl specializovaný na programování úloh, v&nbsp;nichž se používaly rozhodovací tabulky. Díky možnosti vzájemné kombinace jednotlivých programovacích jazyků podporovaných nástrojem <i>GECOM</i> bylo možné psát nízkoúrovňové rutiny aplikace v&nbsp;assembleru, základní rutiny v&nbsp;<i>COBOLu</i> a/nebo v&nbsp;<i>ALGOLu</i>, rozhodovací část aplikace (dnes je moderní používat termín &bdquo;business logika&ldquo; :-) ) v&nbsp;<i>TABSOLu</i> a definici výstupních sestav bylo možné provést v&nbsp;<i>GECOM Report Writeru</i>.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Need for BASIC?</h2>

<p>I přes na svou dobu velmi široké spektrum programovacích jazyků, které jsme si stručně představili v&nbsp;předchozí kapitole však nebyla nabídka jazyků úplná do té míry, aby vyhovovala potřebám všech uživatelů a programátorů mainframů. Z&nbsp;tohoto důvodu byl pro sálové počítače řady <i>GE-200</i> vyvinut i překladač programovacího jazyka <i>FORTRAN II</i>, který spolu s&nbsp;<i>COBOLem</i> patřil až do poloviny šedesátých let minulého století mezi nejpoužívanější jazyky na sálových počítačích. Ovšem všechny výše zmíněné programovací jazyky, ať již se jednalo o assemblery či o vyšší programovací jazyky, trpěly jedním poměrně závažným nedostatkem &ndash; zdrojové texty programů se nejdříve musely napsat na specializované formuláře (pro každý jazyk byl určen jiný formulář), poté se texty napsané na formulářích vyděrovaly na děrné štítky, což se provádělo na mechanickém či elektromechanickém zařízení bez jakékoli návaznosti na počítač a teprve poté bylo možné děrné štítky umístit do čtečky, která zapsané zdrojové texty postupně načítala a předávala překladači.</p>

<a href="http://i.iinfo.cz/images/184/hist-53-6.jpg"><img src="http://i.iinfo.cz/images/184/hist-53-6-prev.jpg" width="238" height="270" alt=" " /></a>
<p><i>Obrázek 3: Jednotka pro přípravu děrných štítků.</i></p>

<p>Pokud nastala při překladu zdrojového textu chyba (vypsaná většinou na systémovou tiskárnu nebo do generovaného listingu programu), nebo i úspěšně přeložený program nevykonával takovou činnost, jakou programátor zamýšlel, musel se celý postup překladu znovu opakovat. Díky tomu, že se pořadí děrných štítků mohlo měnit, nemusel se většinou přepisovat celý program, ale pouze se do něj mohly doplňovat (či nahrazovat) další příkazy, i tak se však jednalo o velmi zdlouhavou činnost, která navíc vyžadovala spolupráci mezi programátorem, pracovníky, kteří program vyděrovali na děrné štítky a operátory pracujícími přímo se sálovým počítačem. Určité zrychlení přineslo použití dálnopisů pro zápis programů na děrné pásky s&nbsp;tím, že se při opravě programu musela většinou vytvořit nová páska, popř.&nbsp;přišly ke slovu nůžky a lepidlo. Děrná páska se v&nbsp;místě opravy přestřihla a při troše trpělivosti se mohlo přestřižené místo nahradit kusem nové pásky &ndash; i z&nbsp;tohoto důvodu také mnoho tehdejších programátorů znalo nazpaměť kódování <i>EBCDIC</i> či <i>ASCII</i>, aby dokázali kód na pásce číst z&nbsp;hlavy a tak snadno najít místo, které je potřeba opravit.</p>

<a href="http://i.iinfo.cz/images/184/hist-53-13.png"><img src="http://i.iinfo.cz/images/184/hist-53-13-prev.png" width="370" height="220" alt=" " /></a>
<p><i>Obrázek 4: Část programu napsaného v&nbsp;programovacím jazyce TABSOL na
formuláři určeném k&nbsp;vyděrování a následnému překladu (kompilaci).</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Rodí se Dartmouth Time Sharing System &ndash; DTSS</h2>

<p>Řešení s&nbsp;dálnopisy přinášelo i tu výhodu, že programátor nemusel po každé změně ve zdrojových textech svého programu cestovat s&nbsp;děrnými štítky do budovy, kde se nacházel sálový počítač (nebo zařízení pro přípravu děrných štítků), ale mohl svůj program přenést přímo pomocí dálnopisu, resp.&nbsp;při použití běžné telefonní linky přes modem, který většinou obsahoval &bdquo;kolébku&ldquo; pro položení telefonního sluchátka &ndash; přenos dat byl prováděn přes běžný telefon (některé modernější dálnopisy již externí telefon nepotřebovaly). Počítač navíc mohl všechny zprávy překladače tisknout pomocí dálnopisu přímo u stolu programátora. Ovšem i tento způsob použití dálnopisu nebyl zcela dokonalý, protože ve svých prvopočátcích vedl k&nbsp;tomu, že se celý mainframe (resp.&nbsp;jeho operační systém) musel věnovat jedinému uživateli, který prováděl překlad svého programu, nebo již přeloženou aplikaci spouštěl. Počet uživatelů obsloužených za jeden den byl při tomto způsobu práce relativně nízký a navíc bylo nutné zavádět a dodržovat časové plány určující termíny připojení jednotlivých uživatelů.</p>

<a href="http://i.iinfo.cz/images/369/hist54-1.jpg"><img src="http://i.iinfo.cz/images/369/hist54-1-prev.jpg" width="360" height="270" alt=" " /></a>
<p><i>Obrázek 5: Starší typ dálnopisu. Na levé straně je umístěna jednotka pro děrování i čtení děrné pásky, na pravé straně pak klávesnice.</i></p>

<p>Zatímco při použití sálových počítačů v&nbsp;bankách, pojišťovnách či podobných institucích nebyl problém obsluhy více uživatelů zpočátku příliš omezující, protože se na těchto mainframech většinou spouštěly dlouhotrvající dávkové úlohy, byla situace zcela odlišná na vysokých školách, kde měly sálové počítače sloužit mj.&nbsp;i pro výuku programování, popř.&nbsp;pro implementaci různých výpočtů z&nbsp;oblasti matematiky, fyziky, chemie atd.. To znamenalo, že &bdquo;univerzitní&ldquo; počítače musely zpracovávat větší množství spíše krátkodobějších úloh denně (překlad programu trval několik desítek sekund až jednotek minut, což byla mnohem kratší doba, než například výpočet mezd ve větší společnosti). Z&nbsp;toho důvodu, aby se toto omezení vyřešilo, se začal na <i>Dartmouth College</i> (jedna z&nbsp;prestižních univerzit v&nbsp;USA) již v&nbsp;roce 1963 vyvíjet systém, který by umožnil <strong>současnou</strong> práci více uživatelů na jednom mainframu, přičemž by jednotliví uživatelé pro komunikaci se sálovým počítačem používali dálnopisy upravené do podoby počítačových terminálů. Vývoj tohoto systému byl veden <i>Johnem Kemenym</i> a <i>Thomasem Kurtzem</i>, kteří při programování tohoto systému spolupracovali s&nbsp;několika svými studenty.</p>

<a href="http://i.iinfo.cz/images/369/hist54-2.jpg"><img src="http://i.iinfo.cz/images/369/hist54-2-prev.jpg" width="370" height="246" alt=" " /></a>
<p><i>Obrázek 6: Dálnopis ASR-33, který byl poměrně často používaný i jako levná a relativně kvalitní tiskárna.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Revoluční koncept &ndash; interaktivní dialog s&nbsp;počítačem přes DTSS</h2>

<p>Výsledný produkt spolupráce Johna Kemenyho, Thomase Kurtze a skupiny studentů (první použitelná verze jejich systému byla představena již roku 1964), jenž byl nazván <i>Dartmouth Time-Sharing System</i> &ndash; <i>DTSS</i>, byl zprvu provozován na sálovém počítači <i>GE-235</i> vybaveného dálnopisy <i>Datanet 30</i>. Tyto terminály se však nepřipojovaly přímo k&nbsp;mainframu <i>GE-235</i>, ale k&nbsp;jednoduššímu počítači nazvanému <i>Datanet</i> (tedy podobně, jako vlastní dálnopisy), který požadavky z&nbsp;dálnopisů vhodným způsobem předpřipravil pro zpracování mainframem <i>GE-235</i>. Systém <i>DTSS</i> na této konfiguraci umožňoval souběžnou práci několika desítek uživatelů. Po přenosu operačního systému <i>DTSS</i> na modernější a výkonnější mainframy řady <i>GE-600</i> (konkrétně na typ <i>GE-635</i>) se výkon celého systému zvýšil takovým způsobem, že počet souběžně pracujících uživatelů dosáhl téměř neuvěřitelné hodnoty 300! <i>John Kemeny</i>, který byl, jak již víme, jeden z&nbsp;autorů systému <i>DTSS</i>, ještě před svým působením v&nbsp;<i>Dartmouth College</i> pracoval ve výzkumných laboratořích v&nbsp;Los Alamos (jedná se o známé laboratoře, kde ve čtyřicátých a padesátých letech probíhal intenzivní výzkum v&nbsp;oblasti jaderné fyziky).</p>

<a href="http://i.iinfo.cz/images/38/ibm-5-3.jpg"><img src="http://i.iinfo.cz/images/38/ibm-5-3-prev.jpg" alt="ibm-5" height="270" width="211" /></a>
<p><i>Obrázek 7: Manuál k&nbsp;první verzi FORTRANu určeného pro mainframy IBM 704.</i></p>

<p>Zde <i>John Kemeny</i> tvořil výpočetní a simulační programy a taktéž si sám připravoval děrné štítky se zdrojovými kódy aplikací, které byly následně dávkově (někdy i po delší době) překládány tehdejšími sálovými počítači. Právě při této činnosti si <i>Kemeny</i> uvědomil, jak je tento dávkový způsob práce ve skutečnosti krkolomný, a vzápětí se stal propagátorem interaktivního způsobu práce s&nbsp;počítačem, při němž uživatel zadává mainframu příkazy konverzačním způsobem a počítač následně tyto příkazy vykonává a ihned tiskne veškerá chybová hlášení i výstupy příkazů. Právě díky systému <i>DTSS</i> a dálnopisům se interaktivní způsob komunikace s&nbsp;počítačem stal skutečností &ndash; uživatelé (většinou studenti) mohli s&nbsp;počítačem konverzovat takovým způsobem, že napsali příkaz na dálnopisu, tento příkaz byl mainframem vykonán a výsledek se ihned poté vypsal na elektronickém psacím stroji, kterým byl dálnopis vybaven (tento psací stroj mohl taktéž &bdquo;opisovat&ldquo; příkazy zapsané uživatelem). Při čekání na zadání nového příkazu mohl mainframe díky způsobu implementace <i>DTSS</i> vykonávat jiné činnosti, tj.&nbsp;obsluhovat další uživatele, což mnohdy ve výsledku poněkud paradoxně vedlo k&nbsp;lepšímu využití strojového času, než tomu bylo na mainframech orientovaných výhradně na zpracování dávkových úloh.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>General Electric GE-400<br />
<a href="http://www.feb-patrimoine.com/PROJET/ge400/ge-400.htm">http://www.feb-patrimoine.com/PROJET/ge400/ge-400.htm</a>
</li>

<li>GE-400 Time-sharing information systems: <br />
<a href="http://www.computerhistory.org/collections/accession/102646147">http://www.computerhistory.org/collections/accession/102646147</a>
</li>

<li>A brief history of the development of BASIC (pravděpodobně již nefunkční odkaz)<br />
<a href="http://www.phys.uu.nl/~bergmann/history.html">http://www.phys.uu.nl/~bergmann/history.html</a>
</li>

<li>History of BASIC (PDF)<br />
<a href="http://www.q7basic.org/History%20of%20BASIC.pdf">http://www.q7basic.org/History%20of%20BASIC.pdf</a>
</li>

<li>The History of the Mainframe Computer<br />
<a href="http://www.vikingwaters.com/htmlpages/MFHistory.htm">http://www.vikingwaters.com/htmlpages/MFHistory.htm</a>
</li>

<li>Dartmouth Time Sharing System<br />
<a href="http://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System">http://en.wikipedia.org/wiki/Dartmouth_Time_Sharing_System</a>
</li>

<li>General Electric (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/General_Electric">http://en.wikipedia.org/wiki/General_Electric</a>
</li>

<li>GE 225 vs. IBM 1401<br />
<a href="http://ed-thelen.org/GE225-IBM1401.html">http://ed-thelen.org/GE225-IBM1401.html</a>
</li>

<li>A GE-225 is found<br />
<a href="http://ed-thelen.org/comp-hist/GE225.html">http://ed-thelen.org/comp-hist/GE225.html</a>
</li>

<li>G.E. 200 Series Computers<br />
<a href="http://www.smecc.org/g_e__200_series_computers.htm">http://www.smecc.org/g_e__200_series_computers.htm</a>
</li>

<li>DTSS - Dartmouth Time Sharing System<br />
<a href="http://dtss.dartmouth.edu/index.php">http://dtss.dartmouth.edu/index.php</a>
</li>

<li>John G. Kemeny: BASIC and DTSS: Everyone a Programmer<br />
<a href="http://dtss.dartmouth.edu/everyoneaprogrammer.php">http://dtss.dartmouth.edu/everyoneaprogrammer.php</a>
</li>

<li>GE-200 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-200_series">http://en.wikipedia.org/wiki/GE-200_series</a>
</li>

<li>GE-400 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-400_series">http://en.wikipedia.org/wiki/GE-400_series</a>
</li>

<li>GE-600 series (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/GE-600_series">http://en.wikipedia.org/wiki/GE-600_series</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

