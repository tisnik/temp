<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Algoritmus CORDIC a numerické formáty s pevnou řádovou čárkou</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Algoritmus CORDIC a numerické formáty s pevnou řádovou čárkou</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V předchozích článcích jsme si uvedli, jak lze algoritmus CORDIC použít pro výpočet goniometrických funkcí s hodnotami uloženými ve formátu plovoucí řádové binární čárky. Tentýž algoritmus lze modifikovat i pro práci s formátem pevné řádové binární tečky/čárky.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Algoritmus CORDIC a numerické formáty s&nbsp;pevnou řádovou čárkou</a></p>
<p><a href="#k02">2. Výpočet délky vektoru pomocí algoritmu CORDIC</a></p>
<p><a href="#k03">3. První demonstrační příklad: výpočet délky vektoru</a></p>
<p><a href="#k04">4. Výpočet logaritmu algoritmem CORDIC</a></p>
<p><a href="#k05">5. Druhý demonstrační příklad: výpočet přirozeného logaritmu</a></p>
<p><a href="#k06">6. Výsledky získané předchozím příkladem</a></p>
<p><a href="#k07">7. Algoritmus CORDIC s&nbsp;hodnotami uloženými ve formátu pevné řádové binární čárky</a></p>
<p><a href="#k08">8. Realizace funkce určené pro naplnění tabulky <strong>atans</strong>[] (arkustangenty vhodně zvolených úhlů)</a></p>
<p><a href="#k09">9. Výpočet goniometrické funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC: neoptimalizovaná varianta výpočtu</a></p>
<p><a href="#k10">10. Celý demonstrační příklad: výpočet funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC</a></p>
<p><a href="#k11">11. Výsledky výpočtu funkce <i>tan</i>: absolutní a relativní chyby</a></p>
<p><a href="#k12">12. Výpočet goniometrické funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC &ndash; optimalizovaná varianta výpočtů</a></p>
<p><a href="#k13">13. Celý demonstrační příklad: výpočet funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC</a></p>
<p><a href="#k14">14. Výsledky výpočtu funkce <i>tan</i>: absolutní a relativní chyby</a></p>
<p><a href="#k15">15. Způsob překladu algoritmu CORDIC do assembleru</a></p>
<p><a href="#k16">16. Výpočet goniometrické funkce <i>sin</i></a></p>
<p><a href="#k17">17. Výsledky výpočtu funkce <i>sin</i>: absolutní a relativní chyby, statistiky</a></p>
<p><a href="#k18">18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Literatura</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Algoritmus CORDIC a numerické formáty s&nbsp;pevnou řádovou čárkou</h2>

<p>V&nbsp;předchozích článcích jsme si uvedli, jakým způsobem je možné
algoritmus <strong>CORDIC</strong> (<i><strong>CO</strong>ordinate
<strong>RO</strong>tation <strong>DI</strong>gital
<strong>C</strong>omputer</i>) použít pro výpočet goniometrických funkcí
s&nbsp;hodnotami uloženými ve formátu plovoucí řádové binární čárky (FP).
Tentýž algoritmus je však po mírné modifikaci možné použít i při práci
s&nbsp;formátem pevné řádové binární čárky (FX) a dá se říci, že teprve zde se
plně ukazuje jeho implementační jednoduchost a současně i velká vyjadřovací
síla &ndash; pomocí jednoho iteračního postupu je možné vypočítat poměrně velké
množství navzájem značně odlišných funkcí, přičemž paměťové nároky algoritmu
jsou minimální a rovnají se tabulce s&nbsp;cca deseti až dvaceti prvky
s&nbsp;rozsahem 32 (popř.&nbsp;pouze 16) bitů. To je výhodné především při
implementaci na mikrořadičích (oblíbená řada 8051, PICy, řada 68HC11 atd.) a
také při práci s&nbsp;programovatelnými obvody typu FPGA.</p>

<p>Dnes se budeme zabývat právě tímto problémem. Nejdříve si však
v&nbsp;kapitolách 2-6 ukážeme, jak lze CORDIC po úpravách použít i pro další
(sofistikovanější) výpočty, například pro výpočet délky vektoru, výpočet
hyperbolických funkcí, ale i pro výpočet logaritmů.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Výpočet délky vektoru pomocí algoritmu CORDIC</h2>

<p>Délka vektoru (pro jednoduchost zůstaneme v&nbsp;rovině) se kupodivu počítá
naprosto stejným způsobem, jako funkce <i>arkustangenty</i>. Je tomu tak
z&nbsp;toho důvodu, že se arkustangenta iterativně vypočítá pootočením
vstupního vektoru do polohy, ve které má y-ovou souřadnici nulovou. To však
logicky znamená, že jeho x-ová souřadnice odpovídá délce vektoru, protože
platí:</p>

<p><i>d=sqrt(x<sup>2</sup>+y<sup>2</sup>)=sqrt(x<sup>2</sup>+0)=sqrt(x<sup>2</sup>)=x</i></p>

<p>To tedy znamená, že se <a
href="https://www.root.cz/clanky/vypocty-v-systemu-pevne-radove-carky-na-platforme-ibm-pc-3-cast/">minule
uvedená funkce pro výpočet arkustangenty</a> je po malých úpravách použitelná i
pro výpočet délky vektoru. Postačuje ji jen upravit tak, že se výsledná hodnota
<i>x<sub>i</sub></i> (vzniklá po <i>i</i> iteracích) vynásobí konstantou
<i>K<sub>i</sub></i> stejným způsobem, jaký jsme prováděli u výpočtů funkcí
<i>sin()</i> a <i>cos()</i> v&nbsp;předchozím pokračování tohoto seriálu.</p>

<p>Vlastnosti algoritmu CORDIC, díky které je možné jednoduše spočítat délku
vektoru, není (resp.&nbsp;přesněji řečeno nebyla) široce známa, proto některé
FPU pro tuto činnost ani neobsahují instrukci, což je škoda, zejména při práci
s&nbsp;grafikou, kde se délky velmi často počítají a je pro ně nutné použít
dvojici násobení, jedno sečítání a k&nbsp;tomu ještě druhou odmocninu,
tj.&nbsp;poměrně zdlouhavé a složité operace.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. První demonstrační příklad: výpočet délky vektoru</h2>

<p>Po překladu a spuštění dnešního prvního demonstračního příkladu se zobrazí
tabulka s&nbsp;délkami vektorů, jejichž souřadnice postupně nabývají hodnot od
nuly do desíti (včetně):</p>

<pre>
<i>// --------------------------------------------------------</i>
<i>// Výpočet délky vektoru pomocí iteračního algoritmu</i>
<i>// CORDIC.</i>
<i>// --------------------------------------------------------</i>
&nbsp;
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
&nbsp;
#ifndef M_PI
#define M_PI 3.14159265358979323846
#endif
&nbsp;
<i>// maximální počet iterací při běhu algoritmu</i>
#define MAX_ITER 20
&nbsp;
<i>// "zesílení" při rotacích</i>
#define K 0.6073
&nbsp;
<i>// tabulka arkustangentu úhlů</i>
double atans[MAX_ITER];
&nbsp;
<i>// tabulka záporných celočíselných mocnin hodnoty 2</i>
double pows[MAX_ITER];
&nbsp;
<i>// naplnění tabulek atans[] a pows[]</i>
void <strong>createTables</strong>(void) {
    int i;
    for (i = 0; i &lt; MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = atan(p);
        pows[i] = p;
    }
}
&nbsp;
<i>// výpočet velikosti vektoru pomocí algoritmu CORDIC</i>
double <strong>mag_cordic</strong>(double y, double x) {
    int i;
    double x0 = x; <i>// nastavení počátečních podmínek</i>
    double y0 = y;
    double xn;
    double delta = 0.0;
    for (i = 0; i &lt; MAX_ITER; i++) { <i>// iterační smyčka</i>
        if (y0 &gt; 0) {                <i>// kladná polorovina =&gt; rotace doleva</i>
            xn = x0 + y0 * pows[i];
            y0 -= x0 * pows[i];
            delta += atans[i];
        } else { <i>// záporná polorovina =&gt; rotace doprava</i>
            xn = x0 - y0 * pows[i];
            y0 += x0 * pows[i];
            delta -= atans[i];
        }
        x0 = xn;
    }
    return x0 * K;      <i>// délka vektoru</i>
}
&nbsp;
int <strong>main</strong>(void) {
    double x, y;
    createTables();
    printf("%f\n", mag_cordic(3, 4));       <i>// výpočet Pythagorova trojúhelníka</i>
    for (y=0.0; y&lt;=10.0; y+=1.0) {          <i>// tabulka velikostí různých vektorů</i>
        for (x=0.0; x&lt;=10.0; x+=1.0) {
            printf("%5.2f ", mag_cordic(x,y));
        }
        putchar('\n');
    }
    return 0;
}
&nbsp;
<i>// finito</i>
</pre>

<p>Povšimněte si, že přesnost výpočtů je poměrně velká, například pro vektor
<i>(6,8)</i> je prakticky přesně vypočtena délka 10:</p>

<table>
<tr><th>d(x,y)</th><th> 0,00</th><th> 1,00</th><th> 2,00</th><th> 3,00</th><th> 4,00</th><th> 5,00</th><th> 6,00</th><th> 7,00</th><th> 8,00</th><th> 9,00</th><th>10,00</th></tr>
<tr><th> 0,00</th><td> 0,00</td><td> 1,00</td><td> 2,00</td><td> 3,00</td><td> 4,00</td><td> 5,00</td><td> 6,00</td><td> 7,00</td><td> 8,00</td><td> 9,00</td><td>10,00</td></tr>
<tr><th> 1,00</th><td> 1,00</td><td> 1,41</td><td> 2,24</td><td> 3,16</td><td> 4,12</td><td> 5,10</td><td> 6,08</td><td> 7,07</td><td> 8,06</td><td> 9,06</td><td>10,05</td></tr>
<tr><th> 2,00</th><td> 2,00</td><td> 2,24</td><td> 2,83</td><td> 3,61</td><td> 4,47</td><td> 5,39</td><td> 6,33</td><td> 7,28</td><td> 8,25</td><td> 9,22</td><td>10,20</td></tr>
<tr><th> 3,00</th><td> 3,00</td><td> 3,16</td><td> 3,61</td><td> 4,24</td><td> 5,00</td><td> 5,83</td><td> 6,71</td><td> 7,62</td><td> 8,54</td><td> 9,49</td><td>10,44</td></tr>
<tr><th> 4,00</th><td> 4,00</td><td> 4,12</td><td> 4,47</td><td> 5,00</td><td> 5,66</td><td> 6,40</td><td> 7,21</td><td> 8,06</td><td> 8,94</td><td> 9,85</td><td>10,77</td></tr>
<tr><th> 5,00</th><td> 5,00</td><td> 5,10</td><td> 5,39</td><td> 5,83</td><td> 6,40</td><td> 7,07</td><td> 7,81</td><td> 8,60</td><td> 9,43</td><td>10,30</td><td>11,18</td></tr>
<tr><th> 6,00</th><td> 6,00</td><td> 6,08</td><td> 6,33</td><td> 6,71</td><td> 7,21</td><td> 7,81</td><td> 8,49</td><td> 9,22</td><td>10,00</td><td>10,82</td><td>11,66</td></tr>
<tr><th> 7,00</th><td> 7,00</td><td> 7,07</td><td> 7,28</td><td> 7,62</td><td> 8,06</td><td> 8,60</td><td> 9,22</td><td> 9,90</td><td>10,63</td><td>11,40</td><td>12,21</td></tr>
<tr><th> 8,00</th><td> 8,00</td><td> 8,06</td><td> 8,25</td><td> 8,54</td><td> 8,94</td><td> 9,43</td><td>10,00</td><td>10,63</td><td>11,31</td><td>12,04</td><td>12,81</td></tr>
<tr><th> 9,00</th><td> 9,00</td><td> 9,06</td><td> 9,22</td><td> 9,49</td><td> 9,85</td><td>10,30</td><td>10,82</td><td>11,40</td><td>12,04</td><td>12,73</td><td>13,45</td></tr>
<tr><th>10,00</th><td>10,00</td><td>10,05</td><td>10,20</td><td>10,44</td><td>10,77</td><td>11,18</td><td>11,66</td><td>12,21</td><td>12,81</td><td>13,45</td><td>14,14</td></tr>
</table>



<p><a name="k04"></a></p>
<h2 id="k04">4. Výpočet logaritmu algoritmem CORDIC</h2>

<p>Algoritmus CORDIC ve své prapůvodní podobě pracoval na principu rotace
vektoru v&nbsp;běžném L2 prostoru. Díky tomu bylo možné počítat goniometrické
funkce, délky vektorů atd. Ovšem například výpočty hyperbolických funkcí nebo
logaritmů vyžadují více či méně podstatné úpravy algoritmu, které spočívají
v&nbsp;tom, že se (snadno pochopitelné) rotace nahradí odlišnými operacemi.
Ovšem princip činnosti CORDICu zůstává stále stejný &ndash; máme
k&nbsp;dispozici předpočítanou tabulku hodnot (původně úhlů) vypočtenou tak,
aby jeden sloupec obsahoval mocniny dvou nebo podobné velmi snadno spočitatelné
hodnoty. A snažíme se vektorem postupně &bdquo;otočit&ldquo; tak, aby jedna
z&nbsp;jeho složek byla nulová. Ze druhé složky je poté odvozena výsledná
hodnota.</p>

<p>Pro zajímavost se podívejme na způsob výpočtu hodnoty přirozeného logaritmu
(se základem <i>e</i>), opět s&nbsp;využitím upraveného algoritmu CORDIC. Sice
se jedná o výpočet odlišný od (například) výpočtu goniometrických funkcí, ovšem
původní myšlenka s&nbsp;postupnými rotacemi zůstává zachována (dokonce i včetně
úpravy výsledné hodnoty vynásobením konstantou log(2)):</p>

<pre>
<i>// výpočet logaritmu algoritmem CORDIC</i>
double <strong>log_cordic</strong>(double a)
{
    const double three_eigth = 0.375;
    int sk, expo;
    double sum = tabm[0];
    double x = 2.0 * frexpf (a, &amp;expo);
    double ex2 = 1.0; <i>// dvojková mocnina</i>
    int k;
&nbsp;
    for (k = 0; k &lt; MAXITER; k++) {
        sk = 0;
        <i>// zjistit směr rotace</i>
        if ((x - 1.0) &lt;  (-three_eigth * ex2)) {
            sk = +1;
        }
        if ((x - 1.0) &gt;= (+three_eigth * ex2)) {
            sk = -1;
        }
        ex2 /= 2.0;
        if (sk == 1) { <i>// přímá rotace</i>
            x = x + x * ex2;
            sum = sum - tabp [k];
        } 
        if (sk == -1) { <i>// opačná rotace</i>
            x = x - x * ex2;
            sum = sum - tabm [k];
        }
    }
    return expo * K + sum; <i>// přepočet logaritmu</i>
}
</pre>

<p>Povšimněte si, že tento výpočet závisí na dvojici tabulek
<strong>tabm</strong> a <strong>tabp</strong>. Jejich obsah je možné vypočítat
buď při inicializaci programu, nebo může program obsahovat již předpočtené
hodnoty (viz například <a
href="https://stackoverflow.com/questions/77088843/problems-with-cordic-for-logarithm-in-c">Problems
with CORDIC for Logarithm in C</a>):</p>

<pre>
<i>// ln(1+2*(-i))</i>
double <strong>tabp</strong>[MAXITER] =
{ 
    0.40546510810816,
    0.22314355131421,
    0.11778303565638,
    0.06062462181643,
    0.03077165866675,
    0.01550418653597,
    0.00778214044205,
    0.00389864041566,
    0.00195122013126,
    0.00097608597306,
};
&nbsp;
<i>// ln(1-2*(-i))</i>
double <strong>tabm</strong>[MAXITER] =
{
    -0.69314718055995,
    -0.28768207245178,
    -0.13353139262452,
    -0.06453852113757,
    -0.03174869831458,
    -0.01574835696814,
    -0.00784317746103,
    -0.00391389932114,
    -0.00195503483580,
    -0.00097703964783,
};
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Druhý demonstrační příklad: výpočet přirozeného logaritmu</h2>

<p>Úplný zdrojový kód dnešního druhého demonstračního příkladu vypadá
následovně:</p>

<pre>
<i>//</i> --------------------------------------------------------
<i>//</i> Výpočet hodnot funkce log() pomocí iteračního
<i>//</i> algoritmu CORDIC.
<i>//</i> --------------------------------------------------------
&nbsp;
#include &lt;math.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
&nbsp;
<i>//</i> maximální počet iterací při běhu algoritmu
#define MAXITER 10
&nbsp;
<i>//</i> "zesílení" při rotacích (odpovídá ln(2))
#define K 0.69314718056
&nbsp;
<i>//</i> ln(1+2*(-i))
double <strong>tabp</strong>[MAXITER] =
{ 
    0.40546510810816,
    0.22314355131421,
    0.11778303565638,
    0.06062462181643,
    0.03077165866675,
    0.01550418653597,
    0.00778214044205,
    0.00389864041566,
    0.00195122013126,
    0.00097608597306,
};
&nbsp;
<i>//</i> ln(1-2*(-i))
double <strong>tabm</strong>[MAXITER] =
{
    -0.69314718055995,
    -0.28768207245178,
    -0.13353139262452,
    -0.06453852113757,
    -0.03174869831458,
    -0.01574835696814,
    -0.00784317746103,
    -0.00391389932114,
    -0.00195503483580,
    -0.00097703964783,
};
&nbsp;
<i>//</i> výpočet logaritmu algoritmem CORDIC
double <strong>log_cordic</strong>(double a)
{
    const double three_eigth = 0.375;
    int sk, expo;
    double sum = tabm[0];
    double x = 2.0 * frexpf (a, &amp;expo);
    double ex2 = 1.0; <i>//</i> dvojková mocnina
    int k;
&nbsp;
    for (k = 0; k &lt; MAXITER; k++) {
        sk = 0;
        <i>//</i> zjistit směr rotace
        if ((x - 1.0) &lt;  (-three_eigth * ex2)) {
            sk = +1;
        }
        if ((x - 1.0) &gt;= (+three_eigth * ex2)) {
            sk = -1;
        }
        ex2 /= 2.0;
        if (sk == 1) { <i>//</i> přímá rotace
            x = x + x * ex2;
            sum = sum - tabp [k];
        } 
        if (sk == -1) { <i>//</i> opačná rotace
            x = x - x * ex2;
            sum = sum - tabm [k];
        }
    }
    return expo * K + sum; <i>//</i> přepočet logaritmu
}
&nbsp;
&nbsp;
int <strong>main</strong>(void) {
    double a = M_E - 2.0; <i>//</i> "pěkná" počáteční hodnota
&nbsp;
    for (; a&lt;=2.0*M_E; a+=0.1) {
        double log_value = log_cordic(a);
        double log_correct = log(a);
        double log_error = fabs(log_correct - log_value);
        <i>//</i> tisk výsledků
        printf("%5.3f\t%12.10f\t%12.10f\t%8.3f%%\n",
               a,
               log_value,
               log_error,
               (log_value != 0.0) ? 100.0 * log_error / fabs(log_value) : 0.0);
    }
    return 0;
}
&nbsp;
<i>//</i> finito
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Výsledky získané předchozím příkladem</h2>

<p>Po spuštění demonstračního příkladu uvedeného <a
href="#k05">v&nbsp;předchozí kapitole</a> získáme tabulku se vstupními
hodnotami <i>x</i> (v&nbsp;rozsahu od e-2 do 2e), vypočtené přirozené logaritmy
vstupních hodnot, absolutní chybu i chybu relativní:</p>

<table>
<tr><th>x</th><th>log(x)</th><th>absolutní chyba</th><th>relativní chyba</th></tr>
<tr><td>0.718</td><td>-0.3311283747</td><td>0.0002351065</td><td>   0.071%</td></tr>
<tr><td>0.818</td><td>-0.2007169448</td><td>0.0001684767</td><td>   0.084%</td></tr>
<tr><td>0.918</td><td>-0.0855043232</td><td>0.0002533904</td><td>   0.296%</td></tr>
<tr><td>1.018</td><td>0.0177033937</td><td>0.0004133313</td><td>   2.335%</td></tr>
<tr><td>1.118</td><td>0.1122001024</td><td>0.0004066767</td><td>   0.362%</td></tr>
<tr><td>1.218</td><td>0.1972628335</td><td>0.0001786953</td><td>   0.091%</td></tr>
<tr><td>1.318</td><td>0.2760012935</td><td>0.0003279501</td><td>   0.119%</td></tr>
<tr><td>1.418</td><td>0.3492932894</td><td>0.0001528696</td><td>   0.044%</td></tr>
<tr><td>1.518</td><td>0.4172221868</td><td>0.0003571327</td><td>   0.086%</td></tr>
<tr><td>1.618</td><td>0.4817607079</td><td>0.0003957212</td><td>   0.082%</td></tr>
<tr><td>1.718</td><td>0.5406938477</td><td>0.0006310069</td><td>   0.117%</td></tr>
<tr><td>1.818</td><td>0.5978522616</td><td>0.0000397433</td><td>   0.007%</td></tr>
<tr><td>1.918</td><td>0.6516717826</td><td>0.0002418782</td><td>   0.037%</td></tr>
<tr><td>2.018</td><td>0.7019674015</td><td>0.0002791680</td><td>   0.040%</td></tr>
<tr><td>2.118</td><td>0.7499035651</td><td>0.0007017367</td><td>   0.094%</td></tr>
<tr><td>2.218</td><td>0.7968839580</td><td>0.0001510129</td><td>   0.019%</td></tr>
<tr><td>2.318</td><td>0.8404757138</td><td>0.0003506063</td><td>   0.042%</td></tr>
<tr><td>2.418</td><td>0.8826278755</td><td>0.0004294242</td><td>   0.049%</td></tr>
<tr><td>2.518</td><td>0.9241185343</td><td>0.0005416794</td><td>   0.059%</td></tr>
<tr><td>2.618</td><td>0.9623977642</td><td>0.0001205478</td><td>   0.013%</td></tr>
<tr><td>2.718</td><td>1.0004915131</td><td>0.0004915131</td><td>   0.049%</td></tr>
<tr><td>2.818</td><td>1.0366095515</td><td>0.0004821330</td><td>   0.047%</td></tr>
<tr><td>2.918</td><td>1.0707784472</td><td>0.0002165810</td><td>   0.020%</td></tr>
<tr><td>3.018</td><td>1.1044812266</td><td>0.0002065119</td><td>   0.019%</td></tr>
<tr><td>3.118</td><td>1.1372700939</td><td>0.0000120602</td><td>   0.001%</td></tr>
<tr><td>3.218</td><td>1.1690197478</td><td>0.0001721243</td><td>   0.015%</td></tr>
<tr><td>3.318</td><td>1.2001045670</td><td>0.0006574396</td><td>   0.055%</td></tr>
<tr><td>3.418</td><td>1.2289814442</td><td>0.0001565913</td><td>   0.013%</td></tr>
<tr><td>3.518</td><td>1.2578018827</td><td>0.0001708708</td><td>   0.014%</td></tr>
<tr><td>3.618</td><td>1.2862147211</td><td>0.0002154409</td><td>   0.017%</td></tr>
<tr><td>3.718</td><td>1.3131033699</td><td>0.0001583176</td><td>   0.012%</td></tr>
<tr><td>3.818</td><td>1.3400185197</td><td>0.0002179814</td><td>   0.016%</td></tr>
<tr><td>3.918</td><td>1.3659154520</td><td>0.0002622034</td><td>   0.019%</td></tr>
<tr><td>4.018</td><td>1.3902082662</td><td>0.0006461393</td><td>   0.046%</td></tr>
<tr><td>4.118</td><td>1.4160918450</td><td>0.0006558006</td><td>   0.046%</td></tr>
<tr><td>4.218</td><td>1.4391521071</td><td>0.0002757884</td><td>   0.019%</td></tr>
<tr><td>4.318</td><td>1.4626826045</td><td>0.0001749937</td><td>   0.012%</td></tr>
<tr><td>4.418</td><td>1.4851554604</td><td>0.0005954335</td><td>   0.040%</td></tr>
<tr><td>4.518</td><td>1.5081449786</td><td>0.0000131835</td><td>   0.001%</td></tr>
<tr><td>4.618</td><td>1.5296239718</td><td>0.0003987656</td><td>   0.026%</td></tr>
<tr><td>4.718</td><td>1.5515744578</td><td>0.0001297438</td><td>   0.008%</td></tr>
<tr><td>4.818</td><td>1.5719417606</td><td>0.0004756368</td><td>   0.030%</td></tr>
<tr><td>4.918</td><td>1.5929729045</td><td>0.0000136569</td><td>   0.001%</td></tr>
<tr><td>5.018</td><td>1.6133518175</td><td>0.0002642076</td><td>   0.016%</td></tr>
<tr><td>5.118</td><td>1.6334714200</td><td>0.0006526177</td><td>   0.040%</td></tr>
<tr><td>5.218</td><td>1.6526451471</td><td>0.0004769511</td><td>   0.029%</td></tr>
<tr><td>5.318</td><td>1.6710491332</td><td>0.0001011534</td><td>   0.006%</td></tr>
<tr><td>5.418</td><td>1.6897247963</td><td>0.0000539631</td><td>   0.003%</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že největší relativní
chyba byla vypočtena pro hodnoty v&nbsp;blízkosti nuly, což je logické &ndash;
zde se každá odchylka dělí velmi malou hodnotou, takže (relativně) se bude
jednat o velkou chybu. Ovšem stále se nacházíme v&nbsp;řádu procent, což je na
tak jednoduchý algoritmus velmi dobrý výsledek.</div></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Algoritmus CORDIC s&nbsp;hodnotami uloženými ve formátu pevné řádové binární čárky</h2>

<p>Hlavním tématem dnešního článku je přepis algoritmu CORDIC do podoby, ve
které se již nepoužije matematický koprocesor (a tedy ani datové typy
<i>float</i> či <i>double</i>), ale výpočty budou probíhat na běžné celočíselné
aritmeticko-logické jednotce.</p>

<p>Před vlastním uvedením implementace algoritmu CORDIC s&nbsp;čísly uloženými
ve formátu pevné řádové binární čárky je zapotřebí provést náležitou přípravu,
protože formát FX (většinou) není ani mikroprocesory ani překladači podporován.
Z&nbsp;tohoto důvodu si v&nbsp;této kapitole pro připomenutí uvedeme všechny
základní aritmetické funkce určené pro práci s&nbsp;formátem FX. Jedná se o
funkce <strong>fx_add()</strong>, <strong>fx_sub()</strong>,
<strong>fx_mul()</strong> a <strong>fx_div()</strong> (tyto funkce byly
podrobněji vysvětleny v&nbsp;předchozím díle). Kromě toho jsou uvedena i těla
dalších pomocných funkcí, zejména <strong>fx_print()</strong> i maker určených
pro převod stupňů na radiány a naopak. Pomocí konstant <strong>A</strong> a
<strong>B</strong> je určen rozsah a přesnost numerických hodnot uložených ve
formátu <strong>fx</strong> &ndash; ten je v&nbsp;naší implementaci shodný
s&nbsp;třicetidvoubitovým datovým typem <strong>signed int</strong>, jelikož
potřebujeme pracovat jak s&nbsp;kladnými, tak i se zápornými hodnotami.</p>

<pre>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
&nbsp;
<i>/* počet míst před a za binární řádovou tečkou */</i>
#define <strong>A</strong> 16
#define <strong>B</strong> 16
&nbsp;
<i>/* Ludolfovo číslo */</i>
#ifndef <strong>M_PI</strong>
#define <strong>M_PI</strong> 3.14159265358979323846
#endif
&nbsp;
<i>/* maximální počet iterací při běhu algoritmu */</i>
#define <strong>MAX_ITER</strong> 16
&nbsp;
<i>/* "zesílení" při rotacích */</i>
#define <strong>K</strong> 0.6073
&nbsp;
<i>/* převody mezi stupni a radiány */</i>
#define <strong>rad2deg</strong>(rad) ((rad)*180.0/M_PI)
#define <strong>deg2rad</strong>(deg) ((deg)/180.0*M_PI)
&nbsp;
<i>/* datový typ, se kterým budeme pracovat */</i>
typedef signed int fx;
&nbsp;
<i>/* hlavičky použitých funkcí */</i>
void   <strong>fx_print</strong>(fx x);
fx     <strong>fp2fx</strong>(double x);
double <strong>fx2fp</strong>(fx x);
&nbsp;
<i>/* tabulka arkustangentu úhlů */</i>
fx <strong>atans</strong>[MAX_ITER];
&nbsp;
<i>/* tabulka záporných celočíselných mocnin hodnoty 2 */</i>
fx <strong>pows</strong>[MAX_ITER];
&nbsp;
<i>/*</i>
<i> * Tisk numerické hodnoty uložené ve formátu pevné</i>
<i> * řádové binární čárky (FX)</i>
<i> */</i>
void <strong>fx_print</strong>(fx x)
{
    int i;
    int val=x;                         <i>/* pomocná proměnná pro převod do dvojkové soustavy */</i>
    printf("bin: ");
    for (i=0; i&lt;A+B; i++) {            <i>/* převod na řetězec bitů (do dvojkové soustavy) */</i>
        putchar(!!(val &amp; (1&lt;&lt;(A+B-1)))+'0'); <i>/* výpis hodnoty aktuálně nejvyššího bitu */</i>
        if (i==B-1) putchar('.');      <i>/* po řádové binární čárce vypsat značku */</i>
        val=val&lt;&lt;1;                    <i>/* posun na další (méně významný) bit */</i>
    }
&nbsp;
    printf("   hex: %08x   fp: %+11.5f\n", x, fx2fp(x));
}
&nbsp;
<i>/*</i>
<i> * Převod z formátu plovoucí řádové binární čárky (FP)</i>
<i> * do formátu pevné řádové binární čárky (FX)</i>
<i> */</i>
fx <strong>fp2fx</strong>(double x)
{
    return (fx)(x*(2&lt;&lt;(B-1)));
}
&nbsp;
<i>/*</i>
<i> * Převod z celočíselného formátu (integer)</i>
<i> * do formátu pevné řádové binární čárky (FX)</i>
<i> */</i>
fx <strong>int2fx</strong>(int x)
{
    return (fx)(x&lt;&lt;B);
}
&nbsp;
<i>/*</i>
<i> * Převod z formátu pevné řádové binární čárky (FX)</i>
<i> * do formátu plovoucí řádové binární čárky (FP)</i>
<i> */</i>
double <strong>fx2fp</strong>(fx x)
{
    return (double)x/(2&lt;&lt;(B-1));
}
&nbsp;
<i>/*</i>
<i> * Součet dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_add</strong>(fx x, fx y)
{
    return x+y;
}
&nbsp;
<i>/*</i>
<i> * Rozdíl dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_sub</strong>(fx x, fx y)
{
    return x-y;
}
&nbsp;
<i>/*</i>
<i> * Součin dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_mul</strong>(fx x, fx y)
{
    fx result=(x&gt;&gt;(B/2))*(y&gt;&gt;(B/2));
    return result;
}
&nbsp;
<i>/*</i>
<i> * Podíl dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_div</strong>(fx x, fx y)
{
    fx result=x/(y&gt;&gt;(B/2));
    return result&lt;&lt;(B/2);
}
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Realizace funkce určené pro naplnění tabulky <strong>atans</strong>[] (arkustangenty vhodně zvolených úhlů)</h2>

<p>Podobně jako při implementaci algoritmu CORDIC pro hodnoty ve formátu FP
(tedy s&nbsp;plovoucí řádovou čárkou), i v&nbsp;případě práce s&nbsp;formátem
FX je nutné některé hodnoty předpočítat. Opět se jedná o tabulku
<strong>atans[]</strong> obsahující arkustangenty vybraných úhlů. Kromě toho
naplníme i tabulku <strong>pows[]</strong>, ve které jsou uloženy záporné
mocniny čísla 2. Jak však uvidíme v&nbsp;dalším textu, není v&nbsp;případě FX
výpočtů tato tabulka využita a algoritmus CORDIC se z&nbsp;tohoto důvodu
poněkud zjednoduší. Funkce pro výpočet obou zmiňovaných tabulek vypadá
následovně:</p>

<pre>
<i>/*</i>
<i> * Vytvoření tabulky pro výpočet goniometrických</i>
<i> * funkcí pomocí algoritmu CORDIC</i>
<i> */</i>
void <strong>fx_create_tables</strong>(void)
{
    int i;
    for (i=0; i&lt;MAX_ITER; i++) {
        double p=pow(2.0, -i);
        atans[i]=fp2fx(atan(p));
        pows[i]=fp2fx(p);
    }
}
</pre>

<p>To, zda je tabulka korektně naplněna, je možné otestovat velmi
jednoduše:</p>

<pre>
    <i>/* kontrolní výpis tabulky atans[] */</i>
    for (i=0; i&lt;MAX_ITER; i++)
        printf("%d\t%f\n", i, fx2fp(rad2deg(atans[i])));

</pre>

<p>Výsledkem běhu předchozího testu je tabulka hodnot arkustangent úhlů
(zhruba) odpovídajících FP verzi:</p>

<table>
<tr><th>Index</th><th>Hodnota úhlu</th></tr>
<tr><td> 0</td><td>44.999252</td></tr>
<tr><td> 1</td><td>26.564514</td></tr>
<tr><td> 2</td><td>14.035431</td></tr>
<tr><td> 3</td><td> 7.124374</td></tr>
<tr><td> 4</td><td> 3.575729</td></tr>
<tr><td> 5</td><td> 1.789612</td></tr>
<tr><td> 6</td><td> 0.894363</td></tr>
<tr><td> 7</td><td> 0.446747</td></tr>
<tr><td> 8</td><td> 0.222931</td></tr>
<tr><td> 9</td><td> 0.111023</td></tr>
<tr><td>10</td><td> 0.055069</td></tr>
<tr><td>11</td><td> 0.027100</td></tr>
<tr><td>12</td><td> 0.013107</td></tr>
<tr><td>13</td><td> 0.006119</td></tr>
<tr><td>14</td><td> 0.002609</td></tr>
<tr><td>15</td><td> 0.000870</td></tr>
</table>

<p>S&nbsp;takto připravenou tabulkou je možné pokračovat v&nbsp;dalších
výpočtech.</p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Výpočet goniometrické funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC: neoptimalizovaná varianta výpočtu</h2>

<p>Pravděpodobně nejjednodušším výpočtem, který je možné s&nbsp;využitím
algoritmu CORDIC provést, je vyjádření tangenty zadaného úhlu. Nejprve si
uvedeme neoptimalizovanou verzi, která vznikla v&nbsp;podstatě přímým převodem
<a
href="https://www.root.cz/clanky/vypocty-v-systemu-pevne-radove-carky-na-platforme-ibm-pc-3-cast/">minule
uvedené</a> implementace určené pro FP reprezentaci (viz <a
href="https://www.root.cz/clanky/vypocty-v-systemu-pevne-radove-carky-na-platforme-ibm-pc-3-cast/#k11">jedenáctou
kapitolu</a>). Převod spočívá v&nbsp;náhradě aritmetických funkcí za jejich
ekvivalenty s&nbsp;pevnou řádovou tečkou:</p>

<pre>
<i>/* výpočet funkce tan() pro zadaný úhel delta */</i>
<i>// (neoptimalizovaná verze)</i>
fx <strong>fx_tan_cordic</strong>(fx delta)
{
    int i;
    <i>/* nastavení počátečních podmínek */</i>
    fx x0=fp2fx(1.0);
    fx y0=fp2fx(0.0);
    fx xn;
    if (delta==0) return 0;                 <i>/* ošetření nulového úhlu */</i>
    for (i=0; i&lt;MAX_ITER; i++) {            <i>/* iterační smyčka */</i>
        if (delta&lt;0) {                      <i>/* úhel je záporný =&gt; rotace doleva */</i>
            xn=fx_add(x0, fx_mul(y0, pows[i]));
            y0=fx_sub(y0, fx_mul(x0, pows[i]));
            delta=fx_add(delta, atans[i]);
        }
        else {                              <i>/* úhel je kladný =&gt; rotace doprava */</i>
            xn=fx_sub(x0, fx_mul(y0, pows[i]));
            y0=fx_add(y0, fx_mul(x0, pows[i]));
            delta=fx_sub(delta, atans[i]);
        }
        x0=xn;
<i>/*        printf("%i\t%+f\t%+f\t%+f\n", i, fx2fp(x0), fx2fp(y0), fx2fp(delta)); */</i>
    }
    if (x0==0)                              <i>/* ošetření tangenty pravého úhlu */</i>
        if (y0&lt;0) return 0;
        else return 0;
    else
        return fx_div(y0,x0);               <i>/* vrátit výsledek operace */</i>
}

</pre>

<p>Výše uvedenou funkci <strong>fx_tan_cordic</strong> si můžeme jednoduchým
způsobem otestovat. Postačí použít programovou smyčku, ve které se počítají
tangenty úhlů v&nbsp;rozsahu 0&deg;..89&deg; spolu s&nbsp;vyjádřením
absolutních a relativních chyb vzniklých použitím algoritmu CORDIC a bitově
omezené FP reprezentace:</p>

<pre>
    <i>/* výpis tabulky tangent úhlů v&nbsp;rozsahu 0..89&deg; */</i>
    for (i=0; i&lt;90; i++) {                  <i>/* výpočetní smyčka */</i>
        delta=deg2rad(i);                   <i>/* převod úhlu na radiány */</i>
        tanfx=fx_tan_cordic(fp2fx(delta));  <i>/* aplikace algoritmu CORDIC */</i>
        tanval=fx2fp(tanfx);                <i>/* výpočet funkce tan */</i>
        tanerr=fabs(tanval-tan(delta));     <i>/* výpočet absolutních chyb */</i>
                                            <i>/* tisk výsledků */</i>
        printf("%02d\t%14.10f\t%14.10f\t%12.10f\t%8.3f%%\n",
                i,
                tanval,
                tan(delta),
                tanerr,
                tanerr==0 ? 0:100.0*tanerr/tan(delta));
    }
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Celý demonstrační příklad: výpočet funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC</h2>

<pre>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
&nbsp;
<i>/* počet míst před a za binární řádovou tečkou */</i>
#define <strong>A</strong> 16
#define <strong>B</strong> 16
&nbsp;
<i>/* Ludolfovo číslo */</i>
#ifndef M_PI
#define <strong>M_PI</strong> 3.14159265358979323846
#endif
&nbsp;
<i>/* maximální počet iterací při běhu algoritmu */</i>
#define <strong>MAX_ITER</strong> 16
&nbsp;
<i>/* "zesílení" při rotacích */</i>
#define <strong>K_float</strong> 0.6073
&nbsp;
<i>/* převody mezi stupni a radiány */</i>
#define <strong>rad2deg</strong>(rad) ((rad) * 180.0 / M_PI)
#define <strong>deg2rad</strong>(deg) ((deg) / 180.0 * M_PI)
&nbsp;
<i>/* datový typ, se kterým budeme pracovat */</i>
typedef signed int <strong>fx</strong>;
&nbsp;
<i>/* hlavičky použitých funkcí */</i>
void <strong>fx_print</strong>(fx x);
fx <strong>fp2fx</strong>(double x);
double <strong>fx2fp</strong>(fx x);
&nbsp;
<i>/* tabulka arkustangentu úhlů */</i>
fx <strong>atans</strong>[MAX_ITER];
&nbsp;
<i>/* tabulka záporných celočíselných mocnin hodnoty 2 */</i>
fx <strong>pows</strong>[MAX_ITER];
&nbsp;
<i>/*</i>
<i> * Tisk numerické hodnoty uložené ve formátu pevné</i>
<i> * řádové binární čárky (FX)</i>
<i> */</i>
void <strong>fx_print</strong>(fx x)
{
    int i;
    int val = x;                <i>/* pomocná proměnná pro převod do dvojkové soustavy */</i>
    printf("bin: ");
    for (i = 0; i &lt; A + B; i++) {       <i>/* převod na řetězec bitů (do dvojkové soustavy) */</i>
        putchar(!!(val &amp; (1 &lt;&lt; (A + B - 1))) + '0');    <i>/* výpis hodnoty aktuálně nejvyššího bitu */</i>
        if (i == B - 1)
            putchar('.');       <i>/* po řádové binární čárce vypsat značku */</i>
        val = val &lt;&lt; 1;         <i>/* posun na další (méně významný) bit */</i>
    }

    printf("   hex: %08x   fp: %+11.5f\n", x, fx2fp(x));
}
&nbsp;
<i>/*</i>
<i> * Převod z formátu plovoucí řádové binární čárky (FP)</i>
<i> * do formátu pevné řádové binární čárky (FX)</i>
<i> */</i>
fx <strong>fp2fx</strong>(double x)
{
    return (fx) (x * (2 &lt;&lt; (B - 1)));
}
&nbsp;
<i>/*</i>
<i> * Převod z celočíselného formátu (integer)</i>
<i> * do formátu pevné řádové binární čárky (FX)</i>
<i> */</i>
fx <strong>int2fx</strong>(int x)
{
    return (fx) (x &lt;&lt; B);
}
&nbsp;
<i>/*</i>
<i> * Převod z formátu pevné řádové binární čárky (FX)</i>
<i> * do formátu plovoucí řádové binární čárky (FP)</i>
<i> */</i>
double <strong>fx2fp</strong>(fx x)
{
    return (double) x / (2 &lt;&lt; (B - 1));
}
&nbsp;
<i>/*</i>
<i> * Součet dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_add</strong>(fx x, fx y)
{
    return x + y;
}
&nbsp;
<i>/*</i>
<i> * Rozdíl dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_sub</strong>(fx x, fx y)
{
    return x - y;
}
&nbsp;
<i>/*</i>
<i> * Součin dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_mul</strong>(fx x, fx y)
{
    fx result = (x &gt;&gt; (B / 2)) * (y &gt;&gt; (B / 2));
    return result;
}
&nbsp;
<i>/*</i>
<i> * Podíl dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_div</strong>(fx x, fx y)
{
    fx result = x / (y &gt;&gt; (B / 2));
    return result &lt;&lt; (B / 2);
}
&nbsp;
<i>/*</i>
<i> * Vytvoření tabulky pro výpočet goniometrických</i>
<i> * funkcí pomocí algoritmu CORDIC</i>
<i> */</i>
void <strong>fx_create_tables</strong>(void)
{
    int i;
    for (i = 0; i &lt; MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = fp2fx(atan(p));
        pows[i] = fp2fx(p);
    }
}
&nbsp;
<i>/* výpočet funkce tan() pro zadaný úhel delta */</i>
<i>/* (neoptimalizovaná verze) */</i>
fx <strong>fx_tan_cordic</strong>(fx delta)
{
    int i;
    <i>/* nastavení počátečních podmínek */</i>
    fx x0 = fp2fx(1.0);
    fx y0 = fp2fx(0.0);
    fx xn;
    if (delta == 0)
        return 0;               <i>/* ošetření nulového úhlu */</i>
    for (i = 0; i &lt; MAX_ITER; i++) {    <i>/* iterační smyčka */</i>
        if (delta &lt; 0) {        <i>/* úhel je záporný =&gt; rotace doleva */</i>
            xn = fx_add(x0, fx_mul(y0, pows[i]));
            y0 = fx_sub(y0, fx_mul(x0, pows[i]));
            delta = fx_add(delta, atans[i]);
        } else {                <i>/* úhel je kladný =&gt; rotace doprava */</i>
            xn = fx_sub(x0, fx_mul(y0, pows[i]));
            y0 = fx_add(y0, fx_mul(x0, pows[i]));
            delta = fx_sub(delta, atans[i]);
        }
        x0 = xn;
<i>/*        printf("%i\t%+f\t%+f\t%+f\n", i, fx2fp(x0), fx2fp(y0), fx2fp(delta)); */</i>
    }
    if (x0 == 0)                <i>/* ošetření tangenty pravého úhlu */</i>
        if (y0 &lt; 0)
            return 0;
        else
            return 0;
    else
        return fx_div(y0, x0);  <i>/* vrátit výsledek operace */</i>
}
&nbsp;
&nbsp;
int <strong>main</strong>(void)
{
    int i;
    fx tanfx;
    double delta;               <i>/* úhel, ze kterého se funkce počítá */</i>
    double tan_value;           <i>/* absolutní chyby */</i>
    double tan_error;           <i>/* relativní chyby */</i>
&nbsp;
    fx_create_tables();
&nbsp;
    <i>/* výpis tabulky tangent úhlů v rozsahu 0..89° */</i>
    for (i=0; i&lt;90; i++) {                     <i>/* výpočetní smyčka */</i>
        delta=deg2rad(i);                      <i>/* převod úhlu na radiány */</i>
        tanfx=fx_tan_cordic(fp2fx(delta));     <i>/* aplikace algoritmu CORDIC */</i>
        tan_value=fx2fp(tanfx);                <i>/* výpočet funkce tan */</i>
        tan_error=fabs(tan_value-tan(delta));  <i>/* výpočet absolutních chyb */</i>
                                               <i>/* tisk výsledků */</i>
        printf("%02d\t%14.10f\t%14.10f\t%12.10f\t%8.3f%%\n",
                i,
                tan_value,
                tan(delta),
                tan_error,
                tan_error==0 ? 0:100.0*tan_error/tan(delta));
    }
&nbsp;
    return 0;
}
&nbsp;
<i>// finito</i>
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Výsledky výpočtu funkce <i>tan</i>: absolutní a relativní chyby</h2>

<p>V&nbsp;tabulce s&nbsp;výsledky si všimněte, že pro některé úhly je vzniklá
chyba rovna až deseti procentům. Je to způsobeno nízkým rozlišením použitého FX
formátu, zejména hodnot <i>arctan()</i> těch nejmenších úhlů, a chybu již není
možné snížit ani zvýšením počtu iterací (ten je nastaven na hodnotu šestnáct,
to odpovídá počtu bitů za binární řádovou čárkou):</p>

<table>
<tr><th>Úhel</th><th>tan podle CORDIC</th><th>tan podle FPU</th><th>absolutní chyba</th><th>relativní chyba</th></tr>
<tr><td>00</td><td> 0.0000000000</td><td> 0.0000000000</td><td>  0.0000000000</td><td> 0.000%</td></tr>
<tr><td>01</td><td> 0.0156250000</td><td> 0.0174550649</td><td>  0.0018300649</td><td>10.484%</td></tr>
<tr><td>02</td><td> 0.0312500000</td><td> 0.0349207695</td><td>  0.0036707695</td><td>10.512%</td></tr>
<tr><td>03</td><td> 0.0468750000</td><td> 0.0524077793</td><td>  0.0055327793</td><td>10.557%</td></tr>
<tr><td>04</td><td> 0.0703125000</td><td> 0.0699268119</td><td>  0.0003856881</td><td> 0.552%</td></tr>
<tr><td>05</td><td> 0.0859375000</td><td> 0.0874886635</td><td>  0.0015511635</td><td> 1.773%</td></tr>
<tr><td>06</td><td> 0.1015625000</td><td> 0.1051042353</td><td>  0.0035417353</td><td> 3.370%</td></tr>
<tr><td>07</td><td> 0.1171875000</td><td> 0.1227845609</td><td>  0.0055970609</td><td> 4.558%</td></tr>
<tr><td>08</td><td> 0.1406250000</td><td> 0.1405408347</td><td>  0.0000841653</td><td> 0.060%</td></tr>
<tr><td>09</td><td> 0.1562500000</td><td> 0.1583844403</td><td>  0.0021344403</td><td> 1.348%</td></tr>
<tr><td>10</td><td> 0.1718750000</td><td> 0.1763269807</td><td>  0.0044519807</td><td> 2.525%</td></tr>
<tr><td>11</td><td> 0.1914062500</td><td> 0.1943803091</td><td>  0.0029740591</td><td> 1.530%</td></tr>
<tr><td>12</td><td> 0.2148437500</td><td> 0.2125565617</td><td>  0.0022871883</td><td> 1.076%</td></tr>
<tr><td>13</td><td> 0.2304687500</td><td> 0.2308681911</td><td>  0.0003994411</td><td> 0.173%</td></tr>
<tr><td>14</td><td> 0.2460937500</td><td> 0.2493280028</td><td>  0.0032342528</td><td> 1.297%</td></tr>
<tr><td>15</td><td> 0.2656250000</td><td> 0.2679491924</td><td>  0.0023241924</td><td> 0.867%</td></tr>
<tr><td>16</td><td> 0.2890625000</td><td> 0.2867453858</td><td>  0.0023171142</td><td> 0.808%</td></tr>
<tr><td>17</td><td> 0.3046875000</td><td> 0.3057306815</td><td>  0.0010431815</td><td> 0.341%</td></tr>
<tr><td>18</td><td> 0.3242187500</td><td> 0.3249196962</td><td>  0.0007009462</td><td> 0.216%</td></tr>
<tr><td>19</td><td> 0.3398437500</td><td> 0.3443276133</td><td>  0.0044838633</td><td> 1.302%</td></tr>
<tr><td>20</td><td> 0.3671875000</td><td> 0.3639702343</td><td>  0.0032172657</td><td> 0.884%</td></tr>
<tr><td>21</td><td> 0.3828125000</td><td> 0.3838640350</td><td>  0.0010515350</td><td> 0.274%</td></tr>
<tr><td>22</td><td> 0.4023437500</td><td> 0.4040262258</td><td>  0.0016824758</td><td> 0.416%</td></tr>
<tr><td>23</td><td> 0.4218750000</td><td> 0.4244748162</td><td>  0.0025998162</td><td> 0.612%</td></tr>
<tr><td>24</td><td> 0.4414062500</td><td> 0.4452286853</td><td>  0.0038224353</td><td> 0.859%</td></tr>
<tr><td>25</td><td> 0.4687500000</td><td> 0.4663076582</td><td>  0.0024423418</td><td> 0.524%</td></tr>
<tr><td>26</td><td> 0.4882812500</td><td> 0.4877325886</td><td>  0.0005486614</td><td> 0.112%</td></tr>
<tr><td>27</td><td> 0.5078125000</td><td> 0.5095254495</td><td>  0.0017129495</td><td> 0.336%</td></tr>
<tr><td>28</td><td> 0.5273437500</td><td> 0.5317094317</td><td>  0.0043656817</td><td> 0.821%</td></tr>
<tr><td>29</td><td> 0.5546875000</td><td> 0.5543090515</td><td>  0.0003784485</td><td> 0.068%</td></tr>
<tr><td>30</td><td> 0.5781250000</td><td> 0.5773502692</td><td>  0.0007747308</td><td> 0.134%</td></tr>
<tr><td>31</td><td> 0.5976562500</td><td> 0.6008606190</td><td>  0.0032043690</td><td> 0.533%</td></tr>
<tr><td>32</td><td> 0.6171875000</td><td> 0.6248693519</td><td>  0.0076818519</td><td> 1.229%</td></tr>
<tr><td>33</td><td> 0.6523437500</td><td> 0.6494075932</td><td>  0.0029361568</td><td> 0.452%</td></tr>
<tr><td>34</td><td> 0.6718750000</td><td> 0.6745085168</td><td>  0.0026335168</td><td> 0.390%</td></tr>
<tr><td>35</td><td> 0.6953125000</td><td> 0.7002075382</td><td>  0.0048950382</td><td> 0.699%</td></tr>
<tr><td>36</td><td> 0.7226562500</td><td> 0.7265425280</td><td>  0.0038862780</td><td> 0.535%</td></tr>
<tr><td>37</td><td> 0.7539062500</td><td> 0.7535540501</td><td>  0.0003521999</td><td> 0.047%</td></tr>
<tr><td>38</td><td> 0.7812500000</td><td> 0.7812856265</td><td>  0.0000356265</td><td> 0.005%</td></tr>
<tr><td>39</td><td> 0.8085937500</td><td> 0.8097840332</td><td>  0.0011902832</td><td> 0.147%</td></tr>
<tr><td>40</td><td> 0.8320312500</td><td> 0.8390996312</td><td>  0.0070683812</td><td> 0.842%</td></tr>
<tr><td>41</td><td> 0.8750000000</td><td> 0.8692867378</td><td>  0.0057132622</td><td> 0.657%</td></tr>
<tr><td>42</td><td> 0.8984375000</td><td> 0.9004040443</td><td>  0.0019665443</td><td> 0.218%</td></tr>
<tr><td>43</td><td> 0.9296875000</td><td> 0.9325150861</td><td>  0.0028275861</td><td> 0.303%</td></tr>
<tr><td>44</td><td> 0.9570312500</td><td> 0.9656887748</td><td>  0.0086575248</td><td> 0.897%</td></tr>
<tr><td>45</td><td> 0.9921875000</td><td> 1.0000000000</td><td>  0.0078125000</td><td> 0.781%</td></tr>
<tr><td>46</td><td> 1.0390625000</td><td> 1.0355303138</td><td>  0.0035321862</td><td> 0.341%</td></tr>
<tr><td>47</td><td> 1.0742187500</td><td> 1.0723687100</td><td>  0.0018500400</td><td> 0.173%</td></tr>
<tr><td>48</td><td> 1.1093750000</td><td> 1.1106125148</td><td>  0.0012375148</td><td> 0.111%</td></tr>
<tr><td>49</td><td> 1.1445312500</td><td> 1.1503684072</td><td>  0.0058371572</td><td> 0.507%</td></tr>
<tr><td>50</td><td> 1.2031250000</td><td> 1.1917535926</td><td>  0.0113714074</td><td> 0.954%</td></tr>
<tr><td>51</td><td> 1.2421875000</td><td> 1.2348971565</td><td>  0.0072903435</td><td> 0.590%</td></tr>
<tr><td>52</td><td> 1.2812500000</td><td> 1.2799416322</td><td>  0.0013083678</td><td> 0.102%</td></tr>
<tr><td>53</td><td> 1.3203125000</td><td> 1.3270448216</td><td>  0.0067323216</td><td> 0.507%</td></tr>
<tr><td>54</td><td> 1.3867187500</td><td> 1.3763819205</td><td>  0.0103368295</td><td> 0.751%</td></tr>
<tr><td>55</td><td> 1.4335937500</td><td> 1.4281480067</td><td>  0.0054457433</td><td> 0.381%</td></tr>
<tr><td>56</td><td> 1.4843750000</td><td> 1.4825609685</td><td>  0.0018140315</td><td> 0.122%</td></tr>
<tr><td>57</td><td> 1.5351562500</td><td> 1.5398649638</td><td>  0.0047087138</td><td> 0.306%</td></tr>
<tr><td>58</td><td> 1.6132812500</td><td> 1.6003345290</td><td>  0.0129467210</td><td> 0.809%</td></tr>
<tr><td>59</td><td> 1.6718750000</td><td> 1.6642794824</td><td>  0.0075955176</td><td> 0.456%</td></tr>
<tr><td>60</td><td> 1.7265625000</td><td> 1.7320508076</td><td>  0.0054883076</td><td> 0.317%</td></tr>
<tr><td>61</td><td> 1.7929687500</td><td> 1.8040477553</td><td>  0.0110790053</td><td> 0.614%</td></tr>
<tr><td>62</td><td> 1.9023437500</td><td> 1.8807264653</td><td>  0.0216172847</td><td> 1.149%</td></tr>
<tr><td>63</td><td> 1.9765625000</td><td> 1.9626105055</td><td>  0.0139519945</td><td> 0.711%</td></tr>
<tr><td>64</td><td> 2.0585937500</td><td> 2.0503038416</td><td>  0.0082899084</td><td> 0.404%</td></tr>
<tr><td>65</td><td> 2.1406250000</td><td> 2.1445069205</td><td>  0.0038819205</td><td> 0.181%</td></tr>
<tr><td>66</td><td> 2.2656250000</td><td> 2.2460367739</td><td>  0.0195882261</td><td> 0.872%</td></tr>
<tr><td>67</td><td> 2.3789062500</td><td> 2.3558523658</td><td>  0.0230538842</td><td> 0.979%</td></tr>
<tr><td>68</td><td> 2.4882812500</td><td> 2.4750868534</td><td>  0.0131943966</td><td> 0.533%</td></tr>
<tr><td>69</td><td> 2.6015625000</td><td> 2.6050890647</td><td>  0.0035265647</td><td> 0.135%</td></tr>
<tr><td>70</td><td> 2.7265625000</td><td> 2.7474774195</td><td>  0.0209149195</td><td> 0.761%</td></tr>
<tr><td>71</td><td> 2.9296875000</td><td> 2.9042108777</td><td>  0.0254766223</td><td> 0.877%</td></tr>
<tr><td>72</td><td> 3.0820312500</td><td> 3.0776835372</td><td>  0.0043477128</td><td> 0.141%</td></tr>
<tr><td>73</td><td> 3.2460937500</td><td> 3.2708526185</td><td>  0.0247588685</td><td> 0.757%</td></tr>
<tr><td>74</td><td> 3.4570312500</td><td> 3.4874144438</td><td>  0.0303831938</td><td> 0.871%</td></tr>
<tr><td>75</td><td> 3.7695312500</td><td> 3.7320508076</td><td>  0.0374804424</td><td> 1.004%</td></tr>
<tr><td>76</td><td> 4.0468750000</td><td> 4.0107809335</td><td>  0.0360940665</td><td> 0.900%</td></tr>
<tr><td>77</td><td> 4.3203125000</td><td> 4.3314758743</td><td>  0.0111633743</td><td> 0.258%</td></tr>
<tr><td>78</td><td> 4.6289062500</td><td> 4.7046301095</td><td>  0.0757238595</td><td> 1.610%</td></tr>
<tr><td>79</td><td> 5.2382812500</td><td> 5.1445540160</td><td>  0.0937272340</td><td> 1.822%</td></tr>
<tr><td>80</td><td> 5.7656250000</td><td> 5.6712818196</td><td>  0.0943431804</td><td> 1.664%</td></tr>
<tr><td>81</td><td> 6.3046875000</td><td> 6.3137515147</td><td>  0.0090640147</td><td> 0.144%</td></tr>
<tr><td>82</td><td> 7.0703125000</td><td> 7.1153697224</td><td>  0.0450572224</td><td> 0.633%</td></tr>
<tr><td>83</td><td> 8.3710937500</td><td> 8.1443464280</td><td>  0.2267473220</td><td> 2.784%</td></tr>
<tr><td>84</td><td> 9.7500000000</td><td> 9.5143644542</td><td>  0.2356355458</td><td> 2.477%</td></tr>
<tr><td>85</td><td>11.3476562500</td><td>11.4300523028</td><td>  0.0823960528</td><td> 0.721%</td></tr>
<tr><td>86</td><td>14.0117187500</td><td>14.3006662567</td><td>  0.2889475067</td><td> 2.021%</td></tr>
<tr><td>87</td><td>20.0468750000</td><td>19.0811366877</td><td>  0.9657383123</td><td> 5.061%</td></tr>
<tr><td>88</td><td>30.0937500000</td><td>28.6362532829</td><td>  1.4574967171</td><td> 5.090%</td></tr>
<tr><td>89</td><td>60.2109375000</td><td>57.2899616308</td><td>  2.9209758692</td><td> 5.099%</td></tr>
</table>



<p><a name="k12"></a></p>
<h2 id="k12">12. Výpočet goniometrické funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC &ndash; optimalizovaná varianta výpočtů</h2>

<p>V&nbsp;případě, že se nad <a href="#k09">výše uvedenou</a> funkcí
<strong>fx_tan_cordic()</strong> zamyslíme, pravděpodobně zjistíme, že se
v&nbsp;ní zbytečně provádí některé aritmetické operace. Zejména se jedná o
průběžné násobení koeficienty uloženými v&nbsp;tabulce <strong>pows[]</strong>.
Tato tabulka měla svůj význam při práci s&nbsp;FP formátem, u formátu FX však
ztrácí prakticky všechny své výhody, protože násobení zápornou mocninou čísla 2
je vlastně totožné s&nbsp;bitovým posunem doprava. Optimalizovaná funkce pro
výpočet tangenty úhlu algoritmem CORDIC vypadá následovně:</p>

<pre>
<i>/* výpočet funkce tan() pro zadaný úhel delta */</i>
<i>/* optimalizovaná varianta */</i>
fx <strong>fx_tan_cordic_optim</strong>(fx delta)
{
    int i;
    <i>/* nastavení počátečních podmínek */</i>
    fx x0=int2fx(1);
    fx y0=0;
    fx xn;
    if (delta==0) return 0;                 <i>/* ošetření nulového úhlu */</i>
    for (i=0; i&lt;MAX_ITER; i++) {            <i>/* iterační smyčka */</i>
        if (delta&lt;0) {                      <i>/* úhel je záporný =&gt; rotace doleva */</i>
            xn=fx_add(x0, y0&gt;&gt;i);           <i>/* místo násobení bitový posuv */</i>
            y0=fx_sub(y0, x0&gt;&gt;i);
            delta=fx_add(delta, atans[i]);
        }
        else {                              <i>/* úhel je kladný =&gt; rotace doprava */</i>
            xn=fx_sub(x0, y0&gt;&gt;i);
            y0=fx_add(y0, x0&gt;&gt;i);
            delta=fx_sub(delta, atans[i]);
        }
        x0=xn;
    }
    if (x0==0)                              <i>/* ošetření tangenty pravého úhlu */</i>
        if (y0&lt;0) return 0;
        else return 0;
    else
        return fx_div(y0,x0);               <i>/* vrátit výsledek operace */</i>
}
</pre>

<p>(Pokud by někdo pocítil potřebu provádět další optimalizace, nabízí se zde
použití MMX či lépe SSEx instrukcí s&nbsp;paralelním výpočtem obou
alternativních větví). Za povšimnutí stojí fakt, že se v&nbsp;iterační smyčce
používají pouze aritmetické operace součtu, rozdílu a bitového posuvu. Kromě
toho se i při inicializaci hodnot <strong>x0</strong> a <strong>y0</strong>
používá pouze celočíselná aritmetika, tj.&nbsp;ve výpočtech se vůbec
nevyskytuje volání instrukcí matematického koprocesoru. Tato absence složitých
a implementačně náročných operací představuje další z&nbsp;důvodů velké
oblíbenosti algoritmu CORDIC v&nbsp;komunitě vývojářů pro malé mikrořadiče a
mikroprocesory.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Celý demonstrační příklad: výpočet funkce <i>tan</i> s&nbsp;využitím algoritmu CORDIC</h2>

<pre>
#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
&nbsp;
<i>/* počet míst před a za binární řádovou tečkou */</i>
#define <strong>A</strong> 16
#define <strong>B</strong> 16
&nbsp;
<i>/* Ludolfovo číslo */</i>
#ifndef M_PI
#define <strong>M_PI</strong> 3.14159265358979323846
#endif
&nbsp;
<i>/* maximální počet iterací při běhu algoritmu */</i>
#define <strong>MAX_ITER</strong> 16
&nbsp;
<i>/* "zesílení" při rotacích */</i>
#define <strong>K_float</strong> 0.6073
&nbsp;
<i>/* převody mezi stupni a radiány */</i>
#define <strong>rad2deg</strong>(rad) ((rad) * 180.0 / M_PI)
#define <strong>deg2rad</strong>(deg) ((deg) / 180.0 * M_PI)
&nbsp;
<i>/* datový typ, se kterým budeme pracovat */</i>
typedef signed int <strong>fx</strong>;
&nbsp;
<i>/* hlavičky použitých funkcí */</i>
void <strong>fx_print</strong>(fx x);
fx <strong>fp2fx</strong>(double x);
double <strong>fx2fp</strong>(fx x);
&nbsp;
<i>/* tabulka arkustangentu úhlů */</i>
fx <strong>atans</strong>[MAX_ITER];
&nbsp;
<i>/* tabulka záporných celočíselných mocnin hodnoty 2 */</i>
fx <strong>pows</strong>[MAX_ITER];
&nbsp;
<i>/*</i>
<i> * Tisk numerické hodnoty uložené ve formátu pevné</i>
<i> * řádové binární čárky (FX)</i>
<i> */</i>
void <strong>fx_print</strong>(fx x)
{
    int i;
    int val = x;                <i>/* pomocná proměnná pro převod do dvojkové soustavy */</i>
    printf("bin: ");
    for (i = 0; i &lt; A + B; i++) {       <i>/* převod na řetězec bitů (do dvojkové soustavy) */</i>
        putchar(!!(val &amp; (1 &lt;&lt; (A + B - 1))) + '0');    <i>/* výpis hodnoty aktuálně nejvyššího bitu */</i>
        if (i == B - 1)
            putchar('.');       <i>/* po řádové binární čárce vypsat značku */</i>
        val = val &lt;&lt; 1;         <i>/* posun na další (méně významný) bit */</i>
    }
&nbsp;
    printf("   hex: %08x   fp: %+11.5f\n", x, fx2fp(x));
}
&nbsp;
<i>/*</i>
<i> * Převod z formátu plovoucí řádové binární čárky (FP)</i>
<i> * do formátu pevné řádové binární čárky (FX)</i>
<i> */</i>
fx <strong>fp2fx</strong>(double x)
{
    return (fx) (x * (2 &lt;&lt; (B - 1)));
}
&nbsp;
<i>/*</i>
<i> * Převod z celočíselného formátu (integer)</i>
<i> * do formátu pevné řádové binární čárky (FX)</i>
<i> */</i>
fx <strong>int2fx</strong>(int x)
{
    return (fx) (x &lt;&lt; B);
}
&nbsp;
<i>/*</i>
<i> * Převod z formátu pevné řádové binární čárky (FX)</i>
<i> * do formátu plovoucí řádové binární čárky (FP)</i>
<i> */</i>
double <strong>fx2fp</strong>(fx x)
{
    return (double) x / (2 &lt;&lt; (B - 1));
}
&nbsp;
<i>/*</i>
<i> * Součet dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_add</strong>(fx x, fx y)
{
    return x + y;
}
&nbsp;
<i>/*</i>
<i> * Rozdíl dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_sub</strong>(fx x, fx y)
{
    return x - y;
}
&nbsp;
<i>/*</i>
<i> * Součin dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_mul</strong>(fx x, fx y)
{
    fx result = (x &gt;&gt; (B / 2)) * (y &gt;&gt; (B / 2));
    return result;
}
&nbsp;
<i>/*</i>
<i> * Podíl dvou hodnot uložených ve shodném formátu</i>
<i> * pevné binární řádové čárky (FX)</i>
<i> */</i>
fx <strong>fx_div</strong>(fx x, fx y)
{
    fx result = x / (y &gt;&gt; (B / 2));
    return result &lt;&lt; (B / 2);
}
&nbsp;
<i>/*</i>
<i> * Vytvoření tabulky pro výpočet goniometrických</i>
<i> * funkcí pomocí algoritmu CORDIC</i>
<i> */</i>
void <strong>fx_create_tables</strong>(void)
{
    int i;
    for (i = 0; i &lt; MAX_ITER; i++) {
        double p = pow(2.0, -i);
        atans[i] = fp2fx(atan(p));
        pows[i] = fp2fx(p);
    }
}
&nbsp;
&nbsp;
<i>/* výpočet funkce tan() pro zadaný úhel delta */</i>
<i>/* (optimalizovaná verze) */</i>
fx <strong>fx_tan_cordic_optim</strong>(fx delta)
{
    int i;
    <i>/* nastavení počátečních podmínek */</i>
    fx x0 = int2fx(1);
    fx y0 = 0;
    fx xn;
    if (delta == 0)
        return 0;               <i>/* ošetření nulového úhlu */</i>
    for (i = 0; i &lt; MAX_ITER; i++) {    <i>/* iterační smyčka */</i>
        if (delta &lt; 0) {        <i>/* úhel je záporný =&gt; rotace doleva */</i>
            xn = fx_add(x0, y0 &gt;&gt; i);   <i>/* místo násobení bitový posuv */</i>
            y0 = fx_sub(y0, x0 &gt;&gt; i);
            delta = fx_add(delta, atans[i]);
        } else {                <i>/* úhel je kladný =&gt; rotace doprava */</i>
            xn = fx_sub(x0, y0 &gt;&gt; i);
            y0 = fx_add(y0, x0 &gt;&gt; i);
            delta = fx_sub(delta, atans[i]);
        }
        x0 = xn;
    }
    if (x0 == 0)                <i>/* ošetření tangenty pravého úhlu */</i>
        if (y0 &lt; 0)
            return 0;
        else
            return 0;
    else
        return fx_div(y0, x0);  <i>/* vrátit výsledek operace */</i>
}
&nbsp;
&nbsp;
int <strong>main</strong>(void)
{
    int i;
    fx tanfx;
    double delta;               <i>/* úhel, ze kterého se funkce počítá */</i>
    double tan_value;           <i>/* absolutní chyby */</i>
    double tan_error;           <i>/* relativní chyby */</i>
&nbsp;
    fx_create_tables();
&nbsp;
    <i>/* výpis tabulky tangent úhlů v rozsahu 0..89° */</i>
    for (i=0; i&lt;90; i++) {                         <i>/* výpočetní smyčka */</i>
        delta=deg2rad(i);                          <i>/* převod úhlu na radiány */</i>
        tanfx=fx_tan_cordic_optim(fp2fx(delta));   <i>/* aplikace algoritmu CORDIC */</i>
        tan_value=fx2fp(tanfx);                    <i>/* výpočet funkce tan */</i>
        tan_error=fabs(tan_value-tan(delta));      <i>/* výpočet absolutních chyb */</i>
                                                   <i>/* tisk výsledků */</i>
        printf("%02d\t%14.10f\t%14.10f\t%12.10f\t%8.3f%%\n",
                i,
                tan_value,
                tan(delta),
                tan_error,
                tan_error==0 ? 0:100.0*tan_error/tan(delta));
    }
&nbsp;
    return 0;
}
&nbsp;
<i>// finito</i>
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Výsledky výpočtu funkce <i>tan</i>: absolutní a relativní chyby</h2>

<p>V&nbsp;případě, že výše uvedenou funkci <strong>fx_tan_cordic_optim()</strong> podrobíme
stejnému testu, jako funkci <strong>fx_tan_cordic()</strong>, dostaneme
následující (do značné míry podobné) výsledky:</p>

<table>
<tr><th>Úhel</th><th>tan podle CORDIC</th><th>tan podle FPU</th><th>absolutní chyba</th><th>relativní chyba</th></tr>
<tr><td>00</td><td>  0.0000000000</td><td>  0.0000000000</td><td>0.0000000000</td><td>   0.000%</td></tr>
<tr><td>01</td><td>  0.0156250000</td><td>  0.0174550649</td><td>0.0018300649</td><td>  10.484%</td></tr>
<tr><td>02</td><td>  0.0312500000</td><td>  0.0349207695</td><td>0.0036707695</td><td>  10.512%</td></tr>
<tr><td>03</td><td>  0.0507812500</td><td>  0.0524077793</td><td>0.0016265293</td><td>   3.104%</td></tr>
<tr><td>04</td><td>  0.0664062500</td><td>  0.0699268119</td><td>0.0035205619</td><td>   5.035%</td></tr>
<tr><td>05</td><td>  0.0859375000</td><td>  0.0874886635</td><td>0.0015511635</td><td>   1.773%</td></tr>
<tr><td>06</td><td>  0.1015625000</td><td>  0.1051042353</td><td>0.0035417353</td><td>   3.370%</td></tr>
<tr><td>07</td><td>  0.1210937500</td><td>  0.1227845609</td><td>0.0016908109</td><td>   1.377%</td></tr>
<tr><td>08</td><td>  0.1406250000</td><td>  0.1405408347</td><td>0.0000841653</td><td>   0.060%</td></tr>
<tr><td>09</td><td>  0.1562500000</td><td>  0.1583844403</td><td>0.0021344403</td><td>   1.348%</td></tr>
<tr><td>10</td><td>  0.1757812500</td><td>  0.1763269807</td><td>0.0005457307</td><td>   0.309%</td></tr>
<tr><td>11</td><td>  0.1914062500</td><td>  0.1943803091</td><td>0.0029740591</td><td>   1.530%</td></tr>
<tr><td>12</td><td>  0.2109375000</td><td>  0.2125565617</td><td>0.0016190617</td><td>   0.762%</td></tr>
<tr><td>13</td><td>  0.2304687500</td><td>  0.2308681911</td><td>0.0003994411</td><td>   0.173%</td></tr>
<tr><td>14</td><td>  0.2460937500</td><td>  0.2493280028</td><td>0.0032342528</td><td>   1.297%</td></tr>
<tr><td>15</td><td>  0.2656250000</td><td>  0.2679491924</td><td>0.0023241924</td><td>   0.867%</td></tr>
<tr><td>16</td><td>  0.2851562500</td><td>  0.2867453858</td><td>0.0015891358</td><td>   0.554%</td></tr>
<tr><td>17</td><td>  0.3046875000</td><td>  0.3057306815</td><td>0.0010431815</td><td>   0.341%</td></tr>
<tr><td>18</td><td>  0.3242187500</td><td>  0.3249196962</td><td>0.0007009462</td><td>   0.216%</td></tr>
<tr><td>19</td><td>  0.3437500000</td><td>  0.3443276133</td><td>0.0005776133</td><td>   0.168%</td></tr>
<tr><td>20</td><td>  0.3632812500</td><td>  0.3639702343</td><td>0.0006889843</td><td>   0.189%</td></tr>
<tr><td>21</td><td>  0.3828125000</td><td>  0.3838640350</td><td>0.0010515350</td><td>   0.274%</td></tr>
<tr><td>22</td><td>  0.4023437500</td><td>  0.4040262258</td><td>0.0016824758</td><td>   0.416%</td></tr>
<tr><td>23</td><td>  0.4218750000</td><td>  0.4244748162</td><td>0.0025998162</td><td>   0.612%</td></tr>
<tr><td>24</td><td>  0.4453125000</td><td>  0.4452286853</td><td>0.0000838147</td><td>   0.019%</td></tr>
<tr><td>25</td><td>  0.4648437500</td><td>  0.4663076582</td><td>0.0014639082</td><td>   0.314%</td></tr>
<tr><td>26</td><td>  0.4882812500</td><td>  0.4877325886</td><td>0.0005486614</td><td>   0.112%</td></tr>
<tr><td>27</td><td>  0.5078125000</td><td>  0.5095254495</td><td>0.0017129495</td><td>   0.336%</td></tr>
<tr><td>28</td><td>  0.5312500000</td><td>  0.5317094317</td><td>0.0004594317</td><td>   0.086%</td></tr>
<tr><td>29</td><td>  0.5546875000</td><td>  0.5543090515</td><td>0.0003784485</td><td>   0.068%</td></tr>
<tr><td>30</td><td>  0.5742187500</td><td>  0.5773502692</td><td>0.0031315192</td><td>   0.542%</td></tr>
<tr><td>31</td><td>  0.5976562500</td><td>  0.6008606190</td><td>0.0032043690</td><td>   0.533%</td></tr>
<tr><td>32</td><td>  0.6250000000</td><td>  0.6248693519</td><td>0.0001306481</td><td>   0.021%</td></tr>
<tr><td>33</td><td>  0.6484375000</td><td>  0.6494075932</td><td>0.0009700932</td><td>   0.149%</td></tr>
<tr><td>34</td><td>  0.6718750000</td><td>  0.6745085168</td><td>0.0026335168</td><td>   0.390%</td></tr>
<tr><td>35</td><td>  0.6992187500</td><td>  0.7002075382</td><td>0.0009887882</td><td>   0.141%</td></tr>
<tr><td>36</td><td>  0.7265625000</td><td>  0.7265425280</td><td>0.0000199720</td><td>   0.003%</td></tr>
<tr><td>37</td><td>  0.7539062500</td><td>  0.7535540501</td><td>0.0003521999</td><td>   0.047%</td></tr>
<tr><td>38</td><td>  0.7812500000</td><td>  0.7812856265</td><td>0.0000356265</td><td>   0.005%</td></tr>
<tr><td>39</td><td>  0.8085937500</td><td>  0.8097840332</td><td>0.0011902832</td><td>   0.147%</td></tr>
<tr><td>40</td><td>  0.8398437500</td><td>  0.8390996312</td><td>0.0007441188</td><td>   0.089%</td></tr>
<tr><td>41</td><td>  0.8671875000</td><td>  0.8692867378</td><td>0.0020992378</td><td>   0.241%</td></tr>
<tr><td>42</td><td>  0.8984375000</td><td>  0.9004040443</td><td>0.0019665443</td><td>   0.218%</td></tr>
<tr><td>43</td><td>  0.9296875000</td><td>  0.9325150861</td><td>0.0028275861</td><td>   0.303%</td></tr>
<tr><td>44</td><td>  0.9648437500</td><td>  0.9656887748</td><td>0.0008450248</td><td>   0.088%</td></tr>
<tr><td>45</td><td>  1.0000000000</td><td>  1.0000000000</td><td>0.0000000000</td><td>   0.000%</td></tr>
<tr><td>46</td><td>  1.0351562500</td><td>  1.0355303138</td><td>0.0003740638</td><td>   0.036%</td></tr>
<tr><td>47</td><td>  1.0742187500</td><td>  1.0723687100</td><td>0.0018500400</td><td>   0.173%</td></tr>
<tr><td>48</td><td>  1.1093750000</td><td>  1.1106125148</td><td>0.0012375148</td><td>   0.111%</td></tr>
<tr><td>49</td><td>  1.1523437500</td><td>  1.1503684072</td><td>0.0019753428</td><td>   0.172%</td></tr>
<tr><td>50</td><td>  1.1953125000</td><td>  1.1917535926</td><td>0.0035589074</td><td>   0.299%</td></tr>
<tr><td>51</td><td>  1.2343750000</td><td>  1.2348971565</td><td>0.0005221565</td><td>   0.042%</td></tr>
<tr><td>52</td><td>  1.2812500000</td><td>  1.2799416322</td><td>0.0013083678</td><td>   0.102%</td></tr>
<tr><td>53</td><td>  1.3281250000</td><td>  1.3270448216</td><td>0.0010801784</td><td>   0.081%</td></tr>
<tr><td>54</td><td>  1.3789062500</td><td>  1.3763819205</td><td>0.0025243295</td><td>   0.183%</td></tr>
<tr><td>55</td><td>  1.4296875000</td><td>  1.4281480067</td><td>0.0015394933</td><td>   0.108%</td></tr>
<tr><td>56</td><td>  1.4843750000</td><td>  1.4825609685</td><td>0.0018140315</td><td>   0.122%</td></tr>
<tr><td>57</td><td>  1.5429687500</td><td>  1.5398649638</td><td>0.0031037862</td><td>   0.202%</td></tr>
<tr><td>58</td><td>  1.6015625000</td><td>  1.6003345290</td><td>0.0012279710</td><td>   0.077%</td></tr>
<tr><td>59</td><td>  1.6640625000</td><td>  1.6642794824</td><td>0.0002169824</td><td>   0.013%</td></tr>
<tr><td>60</td><td>  1.7382812500</td><td>  1.7320508076</td><td>0.0062304424</td><td>   0.360%</td></tr>
<tr><td>61</td><td>  1.8046875000</td><td>  1.8040477553</td><td>0.0006397447</td><td>   0.035%</td></tr>
<tr><td>62</td><td>  1.8867187500</td><td>  1.8807264653</td><td>0.0059922847</td><td>   0.319%</td></tr>
<tr><td>63</td><td>  1.9648437500</td><td>  1.9626105055</td><td>0.0022332445</td><td>   0.114%</td></tr>
<tr><td>64</td><td>  2.0585937500</td><td>  2.0503038416</td><td>0.0082899084</td><td>   0.404%</td></tr>
<tr><td>65</td><td>  2.1445312500</td><td>  2.1445069205</td><td>0.0000243295</td><td>   0.001%</td></tr>
<tr><td>66</td><td>  2.2500000000</td><td>  2.2460367739</td><td>0.0039632261</td><td>   0.176%</td></tr>
<tr><td>67</td><td>  2.3632812500</td><td>  2.3558523658</td><td>0.0074288842</td><td>   0.315%</td></tr>
<tr><td>68</td><td>  2.4882812500</td><td>  2.4750868534</td><td>0.0131943966</td><td>   0.533%</td></tr>
<tr><td>69</td><td>  2.6054687500</td><td>  2.6050890647</td><td>0.0003796853</td><td>   0.015%</td></tr>
<tr><td>70</td><td>  2.7500000000</td><td>  2.7474774195</td><td>0.0025225805</td><td>   0.092%</td></tr>
<tr><td>71</td><td>  2.9062500000</td><td>  2.9042108777</td><td>0.0020391223</td><td>   0.070%</td></tr>
<tr><td>72</td><td>  3.0820312500</td><td>  3.0776835372</td><td>0.0043477128</td><td>   0.141%</td></tr>
<tr><td>73</td><td>  3.2773437500</td><td>  3.2708526185</td><td>0.0064911315</td><td>   0.198%</td></tr>
<tr><td>74</td><td>  3.4921875000</td><td>  3.4874144438</td><td>0.0047730562</td><td>   0.137%</td></tr>
<tr><td>75</td><td>  3.7343750000</td><td>  3.7320508076</td><td>0.0023241924</td><td>   0.062%</td></tr>
<tr><td>76</td><td>  4.0468750000</td><td>  4.0107809335</td><td>0.0360940665</td><td>   0.900%</td></tr>
<tr><td>77</td><td>  4.3671875000</td><td>  4.3314758743</td><td>0.0357116257</td><td>   0.824%</td></tr>
<tr><td>78</td><td>  4.7382812500</td><td>  4.7046301095</td><td>0.0336511405</td><td>   0.715%</td></tr>
<tr><td>79</td><td>  5.1718750000</td><td>  5.1445540160</td><td>0.0273209840</td><td>   0.531%</td></tr>
<tr><td>80</td><td>  5.6835937500</td><td>  5.6712818196</td><td>0.0123119304</td><td>   0.217%</td></tr>
<tr><td>81</td><td>  6.4023437500</td><td>  6.3137515147</td><td>0.0885922353</td><td>   1.403%</td></tr>
<tr><td>82</td><td>  7.1953125000</td><td>  7.1153697224</td><td>0.0799427776</td><td>   1.124%</td></tr>
<tr><td>83</td><td>  8.2031250000</td><td>  8.1443464280</td><td>0.0587785720</td><td>   0.722%</td></tr>
<tr><td>84</td><td>  9.5273437500</td><td>  9.5143644542</td><td>0.0129792958</td><td>   0.136%</td></tr>
<tr><td>85</td><td> 11.6640625000</td><td> 11.4300523028</td><td>0.2340101972</td><td>   2.047%</td></tr>
<tr><td>86</td><td> 14.5000000000</td><td> 14.3006662567</td><td>0.1993337433</td><td>   1.394%</td></tr>
<tr><td>87</td><td> 19.1328125000</td><td> 19.0811366877</td><td>0.0516758123</td><td>   0.271%</td></tr>
<tr><td>88</td><td> 30.0898437500</td><td> 28.6362532829</td><td>1.4535904671</td><td>   5.076%</td></tr>
<tr><td>89</td><td> 60.2109375000</td><td> 57.2899616308</td><td>2.9209758692</td><td>   5.099%</td></tr>
</table>



<p><a name="k15"></a></p>
<h2 id="k15">15. Způsob překladu algoritmu CORDIC do assembleru</h2>

<p>Zajímavé bude zjistit, jakým způsobem se vlastně funkce
<strong>fx_tan_cordic_optim</strong> přeloží do assembleru, pochopitelně
v&nbsp;případě, že jsou povoleny optimalizace. Taktéž zjistíme, jak a kdy jsou
pomocné funkce pro provádění FX operací (součet, rozdíl atd.) vkládány do kódu
a kdy jsou naopak volány:</p>

<p>Překlad s&nbsp;optimalizacemi na co nejkratší kód:</p>

<pre>
<strong>fx_tan_cordic_optim</strong>:
        test    edi, edi
        je      .L21
        mov     edx, edi
        xor     ecx, ecx
        xor     eax, eax
        mov     edi, 65536
.L24:
        mov     r9d, eax
        mov     r8d, edi
        mov     esi, DWORD PTR atans[0+rcx*4]
        sar     r9d, cl
        sar     r8d, cl
        test    edx, edx
        jns     .L22
        add     edi, r9d
        sub     eax, r8d
        add     edx, esi
        jmp     .L23
.L22:
        sub     edi, r9d
        add     eax, r8d
        sub     edx, esi
.L23:
        inc     rcx
        cmp     rcx, 16
        jne     .L24
        test    edi, edi
        je      .L21
        sar     edi, 8
        cdq
        idiv    edi
        sal     eax, 8
        mov     edi, eax
.L21:
        mov     eax, edi
        ret
</pre>

<p><div class="rs-tip-major">Poznámka: povšimněte si, že se ve smyčce provádí
pouze základní aritmetické operace: součet, rozdíl a aritmetické posuny. Pouze
na konci (po dokončení smyčky) se provede jedno násobení následované opět
aritmetickým posunem.</div></p>

<p>Překlad s&nbsp;povolením agresivních optimalizací s&nbsp;rozbalením smyčky
vede k&nbsp;dlouhému, ovšem velmi rychlému kódu:</p>

<pre>
<strong>fx_tan_cordic_optim</strong>:
        xor     eax, eax
        test    edi, edi
        je      .L19
        mov     edx, edi
        js      .L21
        mov     ecx, 65536
        sub     edx, DWORD PTR atans[rip]
        mov     eax, ecx
        sar     eax
        test    edx, edx
        js      .L23
.L58:
        mov     esi, 65536
        add     ecx, 32768
        sub     edx, DWORD PTR atans[rip+4]
        sub     esi, eax
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 2
        sar     eax, 2
        test    edx, edx
        js      .L25
.L59:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+8]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 3
        sar     eax, 3
        test    edx, edx
        js      .L27
.L60:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+12]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 4
        sar     eax, 4
        test    edx, edx
        js      .L29
.L61:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+16]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 5
        sar     eax, 5
        test    edx, edx
        js      .L31
.L62:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+20]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 6
        sar     eax, 6
        test    edx, edx
        js      .L33
.L63:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+24]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 7
        sar     eax, 7
        test    edx, edx
        js      .L35
.L64:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+28]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 8
        sar     eax, 8
        test    edx, edx
        js      .L37
.L65:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+32]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 9
        sar     eax, 9
        test    edx, edx
        js      .L39
.L66:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+36]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 10
        sar     eax, 10
        test    edx, edx
        js      .L41
.L67:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+40]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 11
        sar     eax, 11
        test    edx, edx
        js      .L43
.L68:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+44]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 12
        sar     eax, 12
        test    edx, edx
        js      .L45
.L69:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+48]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 13
        sar     eax, 13
        test    edx, edx
        js      .L47
.L70:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+52]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 14
        sar     eax, 14
        test    edx, edx
        js      .L49
.L71:
        sub     esi, edi
        add     ecx, eax
        sub     edx, DWORD PTR atans[rip+56]
.L50:
        mov     r8d, ecx
        mov     r9d, esi
        mov     eax, esi
        sar     r8d, 15
        sar     r9d, 15
        sub     eax, r8d
        add     r8d, esi
        lea     edi, [r9+rcx]
        test    edx, edx
        cmovs   eax, r8d
        sub     ecx, r9d
        test    edx, edx
        cmovs   edi, ecx
        test    eax, eax
        je      .L19
        sar     eax, 8
        mov     ecx, eax
        mov     eax, edi
        cdq
        idiv    ecx
        sal     eax, 8
.L19:
        ret
.L21:
        mov     ecx, -65536
        add     edx, DWORD PTR atans[rip]
        mov     eax, ecx
        sar     eax
        test    edx, edx
        jns     .L58
.L23:
        lea     esi, [rax+65536]
        sub     ecx, 32768
        add     edx, DWORD PTR atans[rip+4]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 2
        sar     eax, 2
        test    edx, edx
        jns     .L59
.L25:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+8]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 3
        sar     eax, 3
        test    edx, edx
        jns     .L60
.L27:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+12]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 4
        sar     eax, 4
        test    edx, edx
        jns     .L61
.L29:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+16]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 5
        sar     eax, 5
        test    edx, edx
        jns     .L62
.L31:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+20]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 6
        sar     eax, 6
        test    edx, edx
        jns     .L63
.L33:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+24]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 7
        sar     eax, 7
        test    edx, edx
        jns     .L64
.L35:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+28]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 8
        sar     eax, 8
        test    edx, edx
        jns     .L65
.L37:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+32]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 9
        sar     eax, 9
        test    edx, edx
        jns     .L66
.L39:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+36]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 10
        sar     eax, 10
        test    edx, edx
        jns     .L67
.L41:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+40]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 11
        sar     eax, 11
        test    edx, edx
        jns     .L68
.L43:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+44]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 12
        sar     eax, 12
        test    edx, edx
        jns     .L69
.L45:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+48]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 13
        sar     eax, 13
        test    edx, edx
        jns     .L70
.L47:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+52]
        mov     edi, ecx
        mov     eax, esi
        sar     edi, 14
        sar     eax, 14
        test    edx, edx
        jns     .L71
.L49:
        add     esi, edi
        sub     ecx, eax
        add     edx, DWORD PTR atans[rip+56]
        jmp     .L50
</pre>

<p>Opět si povšimněte, že každé rozbalené tělo smyčky obsahuje jen základní
aritmetické operace a posuny.</p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Výpočet goniometrické funkce <i>sin</i></h2>

<p>Výpočet goniometrické funkce <i>sin()</i> pomocí algoritmu CORDIC je při
použití formátu pevné řádové binární čárky velmi snadný a současně i přímočarý.
Dokonce je možné říci, že výpočet je oproti verzi používající plovoucí řádovou
čárku jednodušší, a to z&nbsp;toho důvodu, že se místo pomocné tabulky
s&nbsp;druhými mocninami čísla dvě přímo používá operace pro aritmetický posuv
doprava (ten je podporován přímo centrální procesorovou jednotkou, jedná se
tedy o znatelné zrychlení celého výpočtu). Při implementaci algoritmu CORDIC
v&nbsp;programovacím jazyku C může funkce pro výpočet sinu vypadat následovně
(připomeňme si, že výsledek je uložen v&nbsp;y-ové složce orotovaného vektoru
<strong>r</strong>):</p>

<pre>
<i>/* výpočet funkce sin() pro zadaný úhel delta */</i>
fx <strong>fx_sin_cordic_optim</strong>(fx delta)
{
    int i;
    static fx K_fx=(fx)(K_float*(2&lt;&lt;(B-1)));
    <i>/* nastavení počátečních podmínek */</i>
    fx x0=int2fx(1);
    fx y0=0;
    fx xn;
    for (i=0; i&lt;MAX_ITER; i++) {            <i>/* iterační smyčka */</i>
        if (delta&lt;0) {                      <i>/* úhel je záporný =&gt; rotace doleva */</i>
            xn=fx_add(x0, y0&gt;&gt;i);           <i>/* místo násobení bitový posuv */</i>
            y0=fx_sub(y0, x0&gt;&gt;i);
            delta=fx_add(delta, atans[i]);
        }
        else {                              <i>/* úhel je kladný =&gt; rotace doprava */</i>
            xn=fx_sub(x0, y0&gt;&gt;i);
            y0=fx_add(y0, x0&gt;&gt;i);
            delta=fx_sub(delta, atans[i]);
        }
        x0=xn;
    }
    return fx_mul(y0, K_fx);                <i>/* opravit "zesílení" výsledku */</i>
}
</pre>



<p><a name="k17"></a></p>
<h2 id="k17">17. Výsledky výpočtu funkce <i>sin</i>: absolutní a relativní chyby, statistiky</h2>

<p>Výše uvedenou céčkovskou funkci <strong>fx_sin_cordic_optim()</strong> si
můžeme otestovat na výpočtu úhlů ležících v&nbsp;prvním kvadrantu, tj.&nbsp;od
0&deg; do 90&deg;. Kromě vypočtených hodnot je u každého úhlu uvedena i hodnota
vypočtená pomocí FPU, dále pak absolutní a relativní chyba. Tučně jsou
zvýrazněny ty relativní chyby, které jsou menší než jedno procento:</p>

<table>
<tr><th>Úhel</th><th>sin() dle CORDIC</th><th>sin() dle FPU</th><th>absolutní chyba</th><th>relativní chyba</th></tr>
<tr><td>00</td><td>  0.0000000000</td><td>  0.0000000000</td><td>0.0000000000</td><td><strong>   0.000%</strong></td></tr>
<tr><td>01</td><td>  0.0165557861</td><td>  0.0174524064</td><td>0.0008966203</td><td>   5.138%</td></tr>
<tr><td>02</td><td>  0.0331115723</td><td>  0.0348994967</td><td>0.0017879244</td><td>   5.123%</td></tr>
<tr><td>03</td><td>  0.0520324707</td><td>  0.0523359562</td><td>0.0003034855</td><td><strong>   0.580%</strong></td></tr>
<tr><td>04</td><td>  0.0685882568</td><td>  0.0697564737</td><td>0.0011682169</td><td>   1.675%</td></tr>
<tr><td>05</td><td>  0.0851440430</td><td>  0.0871557427</td><td>0.0020116998</td><td>   2.308%</td></tr>
<tr><td>06</td><td>  0.1040649414</td><td>  0.1045284633</td><td>0.0004635219</td><td><strong>   0.443%</strong></td></tr>
<tr><td>07</td><td>  0.1206207275</td><td>  0.1218693434</td><td>0.0012486159</td><td>   1.025%</td></tr>
<tr><td>08</td><td>  0.1371765137</td><td>  0.1391731010</td><td>0.0019965873</td><td>   1.435%</td></tr>
<tr><td>09</td><td>  0.1537322998</td><td>  0.1564344650</td><td>0.0027021652</td><td>   1.727%</td></tr>
<tr><td>10</td><td>  0.1726531982</td><td>  0.1736481777</td><td>0.0009949794</td><td><strong>   0.573%</strong></td></tr>
<tr><td>11</td><td>  0.1892089844</td><td>  0.1908089954</td><td>0.0016000110</td><td><strong>   0.839%</strong></td></tr>
<tr><td>12</td><td>  0.2057647705</td><td>  0.2079116908</td><td>0.0021469203</td><td>   1.033%</td></tr>
<tr><td>13</td><td>  0.2223205566</td><td>  0.2249510543</td><td>0.0026304977</td><td>   1.169%</td></tr>
<tr><td>14</td><td>  0.2388763428</td><td>  0.2419218956</td><td>0.0030455528</td><td>   1.259%</td></tr>
<tr><td>15</td><td>  0.2577972412</td><td>  0.2588190451</td><td>0.0010218039</td><td><strong>   0.395%</strong></td></tr>
<tr><td>16</td><td>  0.2743530273</td><td>  0.2756373558</td><td>0.0012843285</td><td><strong>   0.466%</strong></td></tr>
<tr><td>17</td><td>  0.2909088135</td><td>  0.2923717047</td><td>0.0014628912</td><td><strong>   0.500%</strong></td></tr>
<tr><td>18</td><td>  0.3074645996</td><td>  0.3090169944</td><td>0.0015523948</td><td><strong>   0.502%</strong></td></tr>
<tr><td>19</td><td>  0.3240203857</td><td>  0.3255681545</td><td>0.0015477687</td><td><strong>   0.475%</strong></td></tr>
<tr><td>20</td><td>  0.3405761719</td><td>  0.3420201433</td><td>0.0014439715</td><td><strong>   0.422%</strong></td></tr>
<tr><td>21</td><td>  0.3571319580</td><td>  0.3583679495</td><td>0.0012359915</td><td><strong>   0.345%</strong></td></tr>
<tr><td>22</td><td>  0.3713226318</td><td>  0.3746065934</td><td>0.0032839616</td><td><strong>   0.877%</strong></td></tr>
<tr><td>23</td><td>  0.3878784180</td><td>  0.3907311285</td><td>0.0028527105</td><td><strong>   0.730%</strong></td></tr>
<tr><td>24</td><td>  0.4044342041</td><td>  0.4067366431</td><td>0.0023024390</td><td><strong>   0.566%</strong></td></tr>
<tr><td>25</td><td>  0.4209899902</td><td>  0.4226182617</td><td>0.0016282715</td><td><strong>   0.385%</strong></td></tr>
<tr><td>26</td><td>  0.4351806641</td><td>  0.4383711468</td><td>0.0031904827</td><td><strong>   0.728%</strong></td></tr>
<tr><td>27</td><td>  0.4517364502</td><td>  0.4539904997</td><td>0.0022540495</td><td><strong>   0.496%</strong></td></tr>
<tr><td>28</td><td>  0.4659271240</td><td>  0.4694715628</td><td>0.0035444388</td><td><strong>   0.755%</strong></td></tr>
<tr><td>29</td><td>  0.4824829102</td><td>  0.4848096202</td><td>0.0023267101</td><td><strong>   0.480%</strong></td></tr>
<tr><td>30</td><td>  0.4966735840</td><td>  0.5000000000</td><td>0.0033264160</td><td><strong>   0.665%</strong></td></tr>
<tr><td>31</td><td>  0.5132293701</td><td>  0.5150380749</td><td>0.0018087048</td><td><strong>   0.351%</strong></td></tr>
<tr><td>32</td><td>  0.5274200439</td><td>  0.5299192642</td><td>0.0024992203</td><td><strong>   0.472%</strong></td></tr>
<tr><td>33</td><td>  0.5416107178</td><td>  0.5446390350</td><td>0.0030283172</td><td><strong>   0.556%</strong></td></tr>
<tr><td>34</td><td>  0.5558013916</td><td>  0.5591929035</td><td>0.0033915119</td><td><strong>   0.607%</strong></td></tr>
<tr><td>35</td><td>  0.5699920654</td><td>  0.5735764364</td><td>0.0035843709</td><td><strong>   0.625%</strong></td></tr>
<tr><td>36</td><td>  0.5841827393</td><td>  0.5877852523</td><td>0.0036025130</td><td><strong>   0.613%</strong></td></tr>
<tr><td>37</td><td>  0.5983734131</td><td>  0.6018150232</td><td>0.0034416101</td><td><strong>   0.572%</strong></td></tr>
<tr><td>38</td><td>  0.6125640869</td><td>  0.6156614753</td><td>0.0030973884</td><td><strong>   0.503%</strong></td></tr>
<tr><td>39</td><td>  0.6267547607</td><td>  0.6293203910</td><td>0.0025656303</td><td><strong>   0.408%</strong></td></tr>
<tr><td>40</td><td>  0.6385803223</td><td>  0.6427876097</td><td>0.0042072874</td><td><strong>   0.655%</strong></td></tr>
<tr><td>41</td><td>  0.6527709961</td><td>  0.6560590290</td><td>0.0032880329</td><td><strong>   0.501%</strong></td></tr>
<tr><td>42</td><td>  0.6669616699</td><td>  0.6691306064</td><td>0.0021689364</td><td><strong>   0.324%</strong></td></tr>
<tr><td>43</td><td>  0.6787872314</td><td>  0.6819983601</td><td>0.0032111286</td><td><strong>   0.471%</strong></td></tr>
<tr><td>44</td><td>  0.6906127930</td><td>  0.6946583705</td><td>0.0040455775</td><td><strong>   0.582%</strong></td></tr>
<tr><td>45</td><td>  0.7048034668</td><td>  0.7071067812</td><td>0.0023033144</td><td><strong>   0.326%</strong></td></tr>
<tr><td>46</td><td>  0.7166290283</td><td>  0.7193398003</td><td>0.0027107720</td><td><strong>   0.377%</strong></td></tr>
<tr><td>47</td><td>  0.7284545898</td><td>  0.7313537016</td><td>0.0028991118</td><td><strong>   0.396%</strong></td></tr>
<tr><td>48</td><td>  0.7402801514</td><td>  0.7431448255</td><td>0.0028646741</td><td><strong>   0.385%</strong></td></tr>
<tr><td>49</td><td>  0.7521057129</td><td>  0.7547095802</td><td>0.0026038673</td><td><strong>   0.345%</strong></td></tr>
<tr><td>50</td><td>  0.7615661621</td><td>  0.7660444431</td><td>0.0044782810</td><td><strong>   0.585%</strong></td></tr>
<tr><td>51</td><td>  0.7733917236</td><td>  0.7771459615</td><td>0.0037542378</td><td><strong>   0.483%</strong></td></tr>
<tr><td>52</td><td>  0.7852172852</td><td>  0.7880107536</td><td>0.0027934685</td><td><strong>   0.354%</strong></td></tr>
<tr><td>53</td><td>  0.7946777344</td><td>  0.7986355100</td><td>0.0039577757</td><td><strong>   0.496%</strong></td></tr>
<tr><td>54</td><td>  0.8065032959</td><td>  0.8090169944</td><td>0.0025136985</td><td><strong>   0.311%</strong></td></tr>
<tr><td>55</td><td>  0.8159637451</td><td>  0.8191520443</td><td>0.0031882992</td><td><strong>   0.389%</strong></td></tr>
<tr><td>56</td><td>  0.8254241943</td><td>  0.8290375726</td><td>0.0036133782</td><td><strong>   0.436%</strong></td></tr>
<tr><td>57</td><td>  0.8348846436</td><td>  0.8386705679</td><td>0.0037859244</td><td><strong>   0.451%</strong></td></tr>
<tr><td>58</td><td>  0.8443450928</td><td>  0.8480480962</td><td>0.0037030034</td><td><strong>   0.437%</strong></td></tr>
<tr><td>59</td><td>  0.8538055420</td><td>  0.8571673007</td><td>0.0033617587</td><td><strong>   0.392%</strong></td></tr>
<tr><td>60</td><td>  0.8632659912</td><td>  0.8660254038</td><td>0.0027594126</td><td><strong>   0.319%</strong></td></tr>
<tr><td>61</td><td>  0.8703613281</td><td>  0.8746197071</td><td>0.0042583790</td><td><strong>   0.487%</strong></td></tr>
<tr><td>62</td><td>  0.8798217773</td><td>  0.8829475929</td><td>0.0031258155</td><td><strong>   0.354%</strong></td></tr>
<tr><td>63</td><td>  0.8869171143</td><td>  0.8910065242</td><td>0.0040894099</td><td><strong>   0.459%</strong></td></tr>
<tr><td>64</td><td>  0.8940124512</td><td>  0.8987940463</td><td>0.0047815951</td><td><strong>   0.532%</strong></td></tr>
<tr><td>65</td><td>  0.9034729004</td><td>  0.9063077870</td><td>0.0028348866</td><td><strong>   0.313%</strong></td></tr>
<tr><td>66</td><td>  0.9105682373</td><td>  0.9135454576</td><td>0.0029772203</td><td><strong>   0.326%</strong></td></tr>
<tr><td>67</td><td>  0.9176635742</td><td>  0.9205048535</td><td>0.0028412792</td><td><strong>   0.309%</strong></td></tr>
<tr><td>68</td><td>  0.9223937988</td><td>  0.9271838546</td><td>0.0047900557</td><td><strong>   0.517%</strong></td></tr>
<tr><td>69</td><td>  0.9294891357</td><td>  0.9335804265</td><td>0.0040912908</td><td><strong>   0.438%</strong></td></tr>
<tr><td>70</td><td>  0.9365844727</td><td>  0.9396926208</td><td>0.0031081481</td><td><strong>   0.331%</strong></td></tr>
<tr><td>71</td><td>  0.9413146973</td><td>  0.9455185756</td><td>0.0042038783</td><td><strong>   0.445%</strong></td></tr>
<tr><td>72</td><td>  0.9460449219</td><td>  0.9510565163</td><td>0.0050115944</td><td><strong>   0.527%</strong></td></tr>
<tr><td>73</td><td>  0.9531402588</td><td>  0.9563047560</td><td>0.0031644972</td><td><strong>   0.331%</strong></td></tr>
<tr><td>74</td><td>  0.9578704834</td><td>  0.9612616959</td><td>0.0033912125</td><td><strong>   0.353%</strong></td></tr>
<tr><td>75</td><td>  0.9626007080</td><td>  0.9659258263</td><td>0.0033251183</td><td><strong>   0.344%</strong></td></tr>
<tr><td>76</td><td>  0.9673309326</td><td>  0.9702957263</td><td>0.0029647937</td><td><strong>   0.306%</strong></td></tr>
<tr><td>77</td><td>  0.9696960449</td><td>  0.9743700648</td><td>0.0046740199</td><td><strong>   0.480%</strong></td></tr>
<tr><td>78</td><td>  0.9744262695</td><td>  0.9781476007</td><td>0.0037213312</td><td><strong>   0.380%</strong></td></tr>
<tr><td>79</td><td>  0.9767913818</td><td>  0.9816271834</td><td>0.0048358016</td><td><strong>   0.493%</strong></td></tr>
<tr><td>80</td><td>  0.9815216064</td><td>  0.9848077530</td><td>0.0032861466</td><td><strong>   0.334%</strong></td></tr>
<tr><td>81</td><td>  0.9838867188</td><td>  0.9876883406</td><td>0.0038016218</td><td><strong>   0.385%</strong></td></tr>
<tr><td>82</td><td>  0.9862518311</td><td>  0.9902680687</td><td>0.0040162377</td><td><strong>   0.406%</strong></td></tr>
<tr><td>83</td><td>  0.9886169434</td><td>  0.9925461516</td><td>0.0039292083</td><td><strong>   0.396%</strong></td></tr>
<tr><td>84</td><td>  0.9909820557</td><td>  0.9945218954</td><td>0.0035398397</td><td><strong>   0.356%</strong></td></tr>
<tr><td>85</td><td>  0.9909820557</td><td>  0.9961946981</td><td>0.0052126424</td><td><strong>   0.523%</strong></td></tr>
<tr><td>86</td><td>  0.9933471680</td><td>  0.9975640503</td><td>0.0042168823</td><td><strong>   0.423%</strong></td></tr>
<tr><td>87</td><td>  0.9933471680</td><td>  0.9986295348</td><td>0.0052823668</td><td><strong>   0.529%</strong></td></tr>
<tr><td>88</td><td>  0.9957122803</td><td>  0.9993908270</td><td>0.0036785467</td><td><strong>   0.368%</strong></td></tr>
<tr><td>89</td><td>  0.9957122803</td><td>  0.9998476952</td><td>0.0041354149</td><td><strong>   0.414%</strong></td></tr>
<tr><td>90</td><td>  0.9957122803</td><td>  1.0000000000</td><td>0.0042877197</td><td><strong>   0.429%</strong></td></tr>
</table>

<h2>Statistické vlastnosti výpočtu</h2>

<table>
<tr><td><strong>Počet iterací:</strong></td><td>16</td></tr>
<tr><td><strong>Součet absolutních chyb:</strong></td><td>   0.270</td></tr>
<tr><td><strong>Součet relativních chyb:</strong></td><td>  59.119%</td></tr>
<tr><td><strong>Průměrná absolutní chyba:</strong></td><td>   0.003</td></tr>
<tr><td><strong>Průměrná relativní chyba:</strong></td><td>   0.650%</td></tr>
</table>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů s&nbsp;256 barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm</a></td></tr>
<tr><td>63</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>64</td><td>vga_gfx_mode_dac_1.asm</td><td>využití DAC (neočekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm</a></td></tr>
<tr><td>65</td><td>vga_gfx_mode_dac_2.asm</td><td>využití DAC (očekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>vga_640x480_putpixel.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
<tr><td>67</td><td>vga_320x200_putpixel_1.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm</a></td></tr>
<tr><td>68</td><td>vga_320x200_putpixel_2.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (rychlejší varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>69</td><td>vga_gfx_mode_dac_3.asm</td><td>přímé využití DAC v&nbsp;grafickém režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>vga_gfx_mode_unchained_step_1.asm</td><td>zobrazení barevných pruhů v&nbsp;režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm</a></td></tr>
<tr><td>71</td><td>vga_gfx_mode_unchained_step_2.asm</td><td>vypnutí zřetězení bitových rovin a změna způsobu adresování pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm</a></td></tr>
<tr><td>72</td><td>vga_gfx_mode_unchained_step_3.asm</td><td>vykreslení barevných pruhů do vybraných bitových rovin</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>73</td><td>vga_gfx_mode_320x400.asm</td><td>nestandardní grafický režim s&nbsp;rozlišením 320&times;400 pixelů a 256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm</a></td></tr>
<tr><td>74</td><td>vga_320x200_image.asm</td><td>zobrazení rastrového obrázku ve standardním grafickém režimu 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm</a></td></tr>
<tr><td>75</td><td>vga_320x200_unchained_image_1.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm</a></td></tr>
<tr><td>76</td><td>vga_320x200_unchained_image_2.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm</a></td></tr>
<tr><td>77</td><td>vga_320x400_unchained_image.asm</td><td>zobrazení rastrového obrázku v&nbsp;nestandardním režimu 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>78</td><td>vga_vertical_scroll_1.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm</a></td></tr>
<tr><td>79</td><td>vga_vertical_scroll_2.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm</a></td></tr>
<tr><td>80</td><td>vga_split_screen_1.asm</td><td>režim split-screen a scrolling, nefunční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm</a></td></tr>
<tr><td>81</td><td>vga_split_screen_2.asm</td><td>režim split-screen a scrolling, plně funkční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm</a></td></tr>
<tr><td>82</td><td>vga_horizontal_scroll_1.asm</td><td>horizontální scrolling bez rozšíření počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm</a></td></tr>
<tr><td>83</td><td>vga_horizontal_scroll_2.asm</td><td>horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm</a></td></tr>
<tr><td>84</td><td>vga_horizontal_scroll_3.asm</td><td>jemný horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>85</td><td>vga_320x240_image.asm</td><td>nastavení grafického režimu Mode-X, načtení a vykreslení obrázku, scrolling</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>io.asm</td><td>knihovna maker pro I/O operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>87</td><td>vga_lib.asm</td><td>knihovna maker a podprogramů pro programování karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm</a></td></tr>
<tr><td>88</td><td>vga_320x240_lib.asm</td><td>nastavení grafického režimu Mode-X, tentokrát knihovními funkcemi</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>89</td><td>vga_bitblt_1.asm</td><td>první (naivní) implementace operace <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm</a></td></tr>
<tr><td>90</td><td>vga_bitblt_2.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm</a></td></tr>
<tr><td>91</td><td>vga_bitblt_3.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro čtení i zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm</a></td></tr>
<tr><td>92</td><td>vga_bitblt_4.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace makry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm</a></td></tr>
<tr><td>93</td><td>vga_bitblt_5.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace podprogramem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>94</td><td>vga_bitblt_rotate.asm</td><td>zápisový režim s&nbsp;rotací bajtu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm</a></td></tr>
<tr><td>95</td><td>vga_bitblt_fast.asm</td><td>rychlá korektní 32bitová operace typu <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm</a></td></tr>
<tr><td>96</td><td>vga_320x400_bitblt_1.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (neúplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm</a></td></tr>
<tr><td>97</td><td>vga_320x400_bitblt_2.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (úplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm</a></td></tr>
<tr><td>98</td><td>vga_write_modes_1.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis bez úpravy latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm</a></td></tr>
<tr><td>99</td><td>vga_write_modes_2.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis s&nbsp;modifikací latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm</a></td></tr>
<tr><td>100</td><td>vga_write_modes_3.asm</td><td>volitelné zápisové režimy grafické karty VGA, cílená modifikace latche vzorkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>101</td><td>instruction_jump.asm</td><td>použití instrukce <strong>JMP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm</a></td></tr>
<tr><td>102</td><td>instruction_jnz.asm</td><td>použití instrukce <strong>JNZ</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm</a></td></tr>
<tr><td>103</td><td>instruction_jz_jmp.asm</td><td>použití instrukcí <strong>JZ</strong> a <strong>JMP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm</a></td></tr>
<tr><td>104</td><td>instruction_loop.asm</td><td>použití instrukce <strong>LOOP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>105</td><td>instruction_template.asm</td><td>šablona všech následujících demonstračních příkladů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm</a></td></tr>
<tr><td>106</td><td>instruction_print_hex.asm</td><td>tisk osmibitové hexadecimální hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm</a></td></tr>
<tr><td>107</td><td>instruction_xlat.asm</td><td>využití instrukce <strong>XLAT</strong> pro získání tisknutelné hexadecimální cifry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td>instruction_daa.asm</td><td>operace součtu s&nbsp;využitím binární i BCD aritmetiky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm</a></td></tr>
<tr><td>109</td><td>instruction_daa_sub.asm</td><td>instrukce <strong>DAA</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm</a></td></tr>
<tr><td>110</td><td>instruction_das.asm</td><td>instrukce <strong>DAS</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm</a></td></tr>
<tr><td>111</td><td>instruction_aaa.asm</td><td>korekce výsledku na jedinou BCD cifru operací <strong>AAA</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm</a></td></tr>
<tr><td>112</td><td>instruction_mul.asm</td><td>ukázka výpočtu součinu dvou osmibitových hodnot</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm</a></td></tr>
<tr><td>113</td><td>instruction_aam.asm</td><td>BCD korekce po výpočtu součinu instrukcí <strong>AAM</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>114</td><td>instruction_stosb.asm</td><td>blokový zápis dat instrukcí <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm</a></td></tr>
<tr><td>115</td><td>instruction_rep_stosb.asm</td><td>opakované provádění instrukce <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm</a></td></tr>
<tr><td>116</td><td>instruction_lodsb.asm</td><td>čtení dat instrukcí <strong>LODSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm</a></td></tr>
<tr><td>117</td><td>instruction_movsb.asm</td><td>přenos jednoho bajtu instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm</a></td></tr>
<tr><td>118</td><td>instruction_rep_movsb.asm</td><td>blokový přenos po bajtech instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm</a></td></tr>
<tr><td>119</td><td>instruction_rep_scas.asm</td><td>vyhledávání v&nbsp;řetězci instrukcí <strong>SCAS</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>120</td><td>vga_320x200_image_0B.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm</a></td></tr>
<tr><td>121</td><td>vga_320x200_image_64kB.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0xffff</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm</a></td></tr>
<tr><td>122</td><td>vga_320x200_image_movsb.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm</a></td></tr>
<tr><td>123</td><td>vga_320x200_image_movsw.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm</a></td></tr>
<tr><td>124</td><td>vga_320x200_image_movsd.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSD</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm</a></td></tr>
<tr><td>125</td><td>vga_320x200_image_movsb_forward.asm</td><td>blokový přenos překrývajících se bloků paměti (zvyšující se adresy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm</a></td></tr>
<tr><td>126</td><td>vga_320x200_image_movsb_backward_1.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, nekorektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm</a></td></tr>
<tr><td>127</td><td>vga_320x200_image_movsb_backward_2.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, korektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>128</td><td>sound_bell.asm</td><td>přehrání zvuku pomocí tisku ASCII znaku BELL</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm</a></td></tr>
<tr><td>129</td><td>sound_beep.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm</a></td></tr>
<tr><td>130</td><td>sound_play_pitch.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru, použití maker</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>131</td><td>sound_opl2_basic.asm</td><td>přehrání komorního A na OPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm</a></td></tr>
<tr><td>132</td><td>sound_opl2_table.asm</td><td>přehrání komorního A na OPL2, použití tabulky s&nbsp;hodnotami registrů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>133</td><td>sound_opl2_table_2.asm</td><td>přepis tabulky s&nbsp;obsahy registrů pro přehrání komorního A</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm</a></td></tr>
<tr><td>134</td><td>sound_key_on.asm</td><td>přímé ovládání bitu KEY ON mezerníkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm</a></td></tr>
<tr><td>135</td><td>sound_adsr.asm</td><td>nastavení obálky pro tón přehrávaný prvním kanálem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm</a></td></tr>
<tr><td>136</td><td>sound_modulation.asm</td><td>řízení frekvence modulátoru klávesami 1 a 0</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>137</td><td>keyboard_basic.asm</td><td>přímá práce s&nbsp;klávesnicí IBM PC</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>138</td><td>sound_stereo_opl2.asm</td><td>stereo zvuk v&nbsp;konfiguraci DualOPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm</a></td></tr>
<tr><td>139</td><td>sound_opl2_multichannel.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), delší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm</a></td></tr>
<tr><td>140</td><td>sound_opl2_multichannel_2.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), kratší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm</a></td></tr>
<tr><td>141</td><td>sound_opl3_stereo_1.asm</td><td>stereo výstup na OPL3 (v&nbsp;kompatibilním režimu)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm</a></td></tr>
<tr><td>142</td><td>sound_opl3_stereo_2.asm</td><td>stereo výstup na OPL3 (v&nbsp;režimu OPL3)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm</a></td></tr>
<tr><td>143</td><td>sound_opl3_multichannel.asm</td><td>vícekanálový zvuk na OPL3 (klávesy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>144</td><td>sound_opl3_waveform_1.asm</td><td>interaktivní modifikace tvaru vlny u prvního operátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm</a></td></tr>
<tr><td>145</td><td>sound_opl3_waveform_2.asm</td><td>oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm</a></td></tr>
<tr><td>146</td><td>sound_opl3_waveform_3.asm</td><td>vliv tvaru vln na zvukový kanál s&nbsp;FM syntézou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm</a></td></tr>
<tr><td>147</td><td>sound_opl3_waveform_4.asm</td><td>modifikace tvaru vlny nosné vlny i modulátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm</a></td></tr>
<tr><td>148</td><td>sound_opl3_4operators_1.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm</a></td></tr>
<tr><td>149</td><td>sound_opl3_4operators_2.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>150</td><td>timer_basic.asm</td><td>základní obsluha přerušení od časovače/čítače</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm</a></td></tr>
<tr><td>151</td><td>timer_restore.asm</td><td>obnovení původní obsluhy přerušení při ukončování aplikace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm</a></td></tr>
<tr><td>152</td><td>timer_restore_better_structure.asm</td><td>refaktoring předchozího demonstračního příkladu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm</a></td></tr>
<tr><td>153</td><td>timer_faster_clock.asm</td><td>zrychlení čítače na 100 přerušení za sekundu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>154</td><td>instruction_push_imm.asm</td><td>instrukce <strong>PUSH</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm</a></td></tr>
<tr><td>155</td><td>instruction_imul_imm.asm</td><td>instrukce <strong>IMUL</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm</a></td></tr>
<tr><td>156</td><td>instruction_into_1.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm</a></td></tr>
<tr><td>157</td><td>instruction_into_2.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm</a></td></tr>
<tr><td>158</td><td>instruction_bound_1.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm</a></td></tr>
<tr><td>159</td><td>instruction_bound_2.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm</a></td></tr>
<tr><td>160</td><td>vga_320x200_putpixel_286.asm</td><td>instrukce bitového posunu s&nbsp;konstantou větší než 1</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm</a></td></tr>
<tr><td>161</td><td>instruction_push_pop.asm</td><td>instrukce <strong>PUSH</strong> a <strong>POP</strong> se všemi pracovními registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>162</td><td>instruction_push_pop_B.asm</td><td>instrukce s&nbsp;novými segmentovými registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm</a></td></tr>
<tr><td>163</td><td>instruction_near_jz_jmp.asm</td><td>blízké skoky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm</a></td></tr>
<tr><td>164</td><td>instruction_bsf.asm</td><td>nová instrukce <strong>BSF</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm</a></td></tr>
<tr><td>165</td><td>instruction_bsr.asm</td><td>nová instrukce <strong>BSR</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm</a></td></tr>
<tr><td>166</td><td>instruction_add_32bit.asm</td><td>32bitový součet</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm</a></td></tr>
<tr><td>167</td><td>instruction_inc_32bit.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;šestnáctibitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm</a></td></tr>
<tr><td>168</td><td>instruction_inc_32bit_B.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;32bitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>169</td><td>ems_status.asm</td><td>zjištění stavu (emulace) paměti EMS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm</a></td></tr>
<tr><td>170</td><td>ems_total_mem.asm</td><td>získání celkové kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm</a></td></tr>
<tr><td>171</td><td>ems_free_mem.asm </td><td>získání volné kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm</a></td></tr>
<tr><td>172</td><td>xms_free_mem.asm </td><td>získání volné kapacity paměti XMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>173</td><td>vga_320x200_short_address_1.asm</td><td>blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm</a></td></tr>
<tr><td>174</td><td>vga_320x200_short_address_2.asm</td><td>rozepsaný blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm</a></td></tr>
<tr><td>175</td><td>vga_320x200_short_address_3.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm</a></td></tr>
<tr><td>176</td><td>vga_320x200_short_address_4.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm</a></td></tr>
<tr><td>177</td><td>vga_320x200_long_address_1.asm</td><td>32bitový blokový přenos</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm</a></td></tr>
<tr><td>178</td><td>vga_320x200_long_address_2.asm</td><td>rozepsaný 32bitový blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm</a></td></tr>
<tr><td>179</td><td>vga_320x200_long_address_3.asm</td><td>přístup do obrazové paměti přes segment 0x0000 a 32bitový offset</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm</a></td></tr>
<tr><td>180</td><td>vga_320x200_long_address_4.asm</td><td>otestování, jak lze přenášet data s&nbsp;využitím 32bitového offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>181</td><td>print_msw.asm</td><td>přečtení a zobrazení obsahu speciálního registru MSW</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm</a></td></tr>
<tr><td>182</td><td>print_cr0.asm</td><td>přečtení a zobrazení obsahu speciálního registru <strong>CR0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm</a></td></tr>
<tr><td>183</td><td>prot_mode_286.asm</td><td>přechod do chráněného režimu na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm</a></td></tr>
<tr><td>184</td><td>prot_mode_386.asm</td><td>přechod do chráněného režimu na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm</a></td></tr>
<tr><td>185</td><td>prot_mode_back_to_real_mode_286.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm</a></td></tr>
<tr><td>186</td><td>prot_mode_back_to_real_mode_386.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm</a></td></tr>
<tr><td>187</td><td>prot_mode_check.asm</td><td>test, zda se mikroprocesor již nachází v&nbsp;chráněném režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm</a></td></tr>
<tr><td>188</td><td>unreal_mode.asm</td><td>nastavení nereálného režimu (platné pro Intel 80386)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>189</td><td>float32_constants.asm</td><td>vytištění základních FP konstant typu <i>single</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm</a></td></tr>
<tr><td>190</td><td>float64_constants.asm</td><td>vytištění základních FP konstant typu <i>double</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm</a></td></tr>
<tr><td>191</td><td>fpu_arithmetic.asm</td><td>základní aritmetické operace prováděné matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm</a></td></tr>
<tr><td>192</td><td>fpu_divide_by_zero.asm</td><td>dělení nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm</a></td></tr>
<tr><td>193</td><td>fpu_divide_by_neg_zero.asm </td><td>dělení záporné hodnoty nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm</a></td></tr>
<tr><td>194</td><td>fpu_divide_by_neg_zero_2.asm </td><td>dělení hodnoty zápornou nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm</a></td></tr>
<tr><td>195</td><td>fpu_divide_zero_by_zero.asm</td><td>výpočet 0/0 matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>196</td><td>io.asm</td><td>pomocná makra pro komunikaci s&nbsp;DOSem a BIOSem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>197</td><td>print.asm</td><td>pomocná makra pro tisk FPU hodnot typu <i>single</i> a <i>double</i> v&nbsp;hexadecimálním tvaru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>198</td><td>fpu_divide.asm</td><td>operace podílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm</a></td></tr>
<tr><td>199</td><td>fpu_divide_r.asm</td><td>operace podílu s&nbsp;prohozenými operandy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm</a></td></tr>
<tr><td>200</td><td>fpu_sqrt.asm</td><td>výpočet druhé odmocniny</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm</a></td></tr>
<tr><td>201</td><td>fpu_sqrt_neg_value.asm</td><td>výpočet druhé odmocniny ze záporné hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm</a></td></tr>
<tr><td>202</td><td>fpu_check.asm</td><td>detekce typu matematického koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm</a></td></tr>
<tr><td>203</td><td>fpu_compare.asm</td><td>porovnání dvou hodnot s&nbsp;vyhodnocením výsledku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm</a></td></tr>
<tr><td>204</td><td>fpu_status_word.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm</a></td></tr>
<tr><td>205</td><td>fpu_status_word_stack.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>206</td><td>svga_info_1.asm</td><td>zjištění, zda je VBE dostupný</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_1.asm</a></td></tr>
<tr><td>207</td><td>svga_info_2.asm</td><td>zobrazení základních informací o grafické kartě</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_2.asm</a></td></tr>
<tr><td>208</td><td>svga_info_3.asm</td><td>výpis OEM řetězce s&nbsp;další informací o kartě</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_3.asm</a></td></tr>
<tr><td>209</td><td>svga_info_4.asm</td><td>zjištění a výpis čísel všech podporovaných grafických režimů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_4.asm</a></td></tr>
<tr><td>210</td><td>svga_info_5.asm</td><td>získání rozlišení, bitové hloubky a struktury obrazových řádků zvoleného grafického režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_5.asm</a></td></tr>
<tr><td>211</td><td>svga_info_6.asm</td><td>základní informace o čtecích a zápisových oknech pro reálný režim</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_6.asm</a></td></tr>
<tr><td>212</td><td>svga_info_7.asm</td><td>informace o oknech podporovaných grafickým režimem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_info_7.asm</a></td></tr>
<tr><td>213</td><td>svga_mode_0.asm</td><td>přepnutí do zvoleného grafického režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_0.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_0.asm</a></td></tr>
<tr><td>214</td><td>svga_mode_1.asm</td><td>vyplnění jediného okna barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_1.asm</a></td></tr>
<tr><td>215</td><td>svga_mode_2.asm</td><td>vyplnění čtyř banků barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_2.asm</a></td></tr>
<tr><td>216</td><td>svga_mode_3.asm</td><td>otestování, jakým způsobem jsou uloženy pixely v režimu s bitovou hloubkou 24/32 bitů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_mode_3.asm</a></td></tr>
<tr><td>217</td><td>svga_pixel_formats1.asm</td><td>zjištění formátu uložení pixelů v grafickém režimu s bitovou hloubkou 15 bitů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_pixel_formats1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_pixel_formats1.asm</a></td></tr>
<tr><td>218</td><td>svga_pixel_formats2.asm</td><td>zjištění formátu uložení pixelů v grafickém režimu s bitovou hloubkou 16 bitů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_pixel_formats2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_pixel_formats2.asm</a></td></tr>
<tr><td>219</td><td>svga_pixel_formats3.asm</td><td>zjištění formátu uložení pixelů v grafickém režimu s bitovou hloubkou 24 nebo 32 bitů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_pixel_formats3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_pixel_formats3.asm</a></td></tr>
<tr><td>220</td><td>svga_palette.asm</td><td>nastavení barvové palety v&nbsp;režimu s&nbsp;256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_palette.asm</a></td></tr>
<tr><td>221</td><td>svga_640x480_image_1.asm</td><td>vykreslení rastrového obrázku bez modifikace offsetů na řádcích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_1.asm</a></td></tr>
<tr><td>222</td><td>svga_640x480_image_2.asm</td><td>vykreslení rastrového obrázku s&nbsp;modifikací offsetů na řádcích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_2.asm</a></td></tr>
<tr><td>223</td><td>svga_640x480_image_3.asm</td><td>první realizace subrutiny typu <strong>BitBLT</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_3.asm</a></td></tr>
<tr><td>224</td><td>svga_640x480_image_4.asm</td><td>vykreslení všech 200 řádků rastrového obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_4.asm</a></td></tr>
<tr><td>225</td><td>svga_640x480_image_5.asm</td><td>vycentrování rastrového obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_5.asm</a></td></tr>
<tr><td>226</td><td>svga_640x480_image_6.asm</td><td>změna počtu pixelů na obrazovém řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_640x480_image_6.asm</a></td></tr>
<tr><td>227</td><td>svga_text_mode_1.asm</td><td>nastavení rozšířeného textového režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_1.asm</a></td></tr>
<tr><td>228</td><td>svga_text_mode_2.asm</td><td>přímý přístup do paměti rozšířeného textového režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_2.asm</a></td></tr>
<tr><td>229</td><td>svga_text_mode_3.asm</td><td>nastavení odlišného rozšířeného textového režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_3.asm</a></td></tr>
<tr><td>230</td><td>svga_text_mode_4.asm</td><td>změna tvaru kurzoru v&nbsp;rozšířeném textovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_4.asm</a></td></tr>
<tr><td>231</td><td>svga_text_mode_info.asm</td><td>získání základních informací o textovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_info.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_mode_info.asm</a></td></tr>
<tr><td>232</td><td>svga_text_modes.asm</td><td>tisk všech dostupných textových režimů karet SVGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_modes.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/svga_text_modes.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>233</td><td>fx_add_1.asm</td><td>operace součtu ve formátu s&nbsp;pevnou řádovou tečkou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_add_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_add_1.asm</a></td></tr>
<tr><td>234</td><td>fx_add_2.asm</td><td>operace součtu ve formátu s&nbsp;pevnou řádovou tečkou, realizace makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_add_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_add_2.asm</a></td></tr>
<tr><td>235</td><td>fx_mul_1.asm</td><td>naivní (nekorektní) implementace součinu ve formátu s&nbsp;pevnou řádovou tečkou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_1.asm</a></td></tr>
<tr><td>236</td><td>fx_mul_2.asm</td><td>korektní implementace součinu ve formátu s&nbsp;pevnou řádovou tečkou, úprava výsledku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_2.asm</a></td></tr>
<tr><td>237</td><td>fx_mul_3.asm</td><td>korektní implementace součinu ve formátu s&nbsp;pevnou řádovou tečkou, úprava operandů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_3.asm</a></td></tr>
<tr><td>238</td><td>fx_mul_4.asm</td><td>násobení malých hodnot s&nbsp;korektním výsledkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_4.asm</a></td></tr>
<tr><td>239</td><td>fx_mul_5.asm</td><td>násobení příliš malých hodnot s&nbsp;nekorektním výsledkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_5.asm</a></td></tr>
<tr><td>240</td><td>fx_mul_6.asm</td><td>násobení malých hodnot omezené na 2n-bitové hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mul_6.asm</a></td></tr>
<tr><td>241</td><td>fx.c</td><td>implementace základních operací ve formátu s&nbsp;pevnou řádovou tečkou v&nbsp;jazyku C</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx.c">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx.c</a></td></tr>
<tr><td>242</td><td>fx_O0.asm</td><td>překlad příkladu fx.c s&nbsp;vypnutím optimalizací</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_O0.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_O0.asm</a></td></tr>
<tr><td>243</td><td>fx_O9.asm</td><td>překlad příkladu fx.c se zapnutím optimalizací na výkon</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_O9.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_O9.asm</a></td></tr>
<tr><td>244</td><td>fx_Os.asm</td><td>překlad příkladu fx.c se zapnutím optimalizací na velikost kódu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_Os.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_Os.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>245</td><td>fx_mandel_1.asm</td><td>výpočet Mandelbrotovy množiny; základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_1.asm</a></td></tr>
<tr><td>246</td><td>fx_mandel_2.asm</td><td>výpočet Mandelbrotovy množiny; optimalizovaná varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_2.asm</a></td></tr>
<tr><td>247</td><td>fx_mandel_3.asm</td><td>výpočet Mandelbrotovy množiny; základní šestnáctibitová varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_3.asm</a></td></tr>
<tr><td>248</td><td>fx_mandel_4.asm</td><td>výpočet Mandelbrotovy množiny; šestnáctibitová varianta s&nbsp;vyšší přesností</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fx_mandel_4.asm</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Literatura</h2>

<ol>

<li>Andraka, Ray: <i>"A survey of CORDIC algorithms for FPGA based computers"</i>,<br />ACM, 1998</li>

<li>Despain, A.M.:<i>"Fourier Transform Computations Using CORDIC Iterations"</i>,<br />IEEE Transactions on Computers, Volume 23, strany 993-1001, 1974</li>

<li>Mazenc C., Merrheim, X., Muller, J.M.: <i>"Computing Functions Arccos and Arcsin Using CORDIC"</i>,<br />IEEE Transactions on Computers, Volume 42, strany 118-122, 1993</li>

<li>Volder, Jack: <i>"Binary computation algorithms for coordinate rotation and function generation"</i>,<br />Convair Report IAR-1, 1956</li>

<li>Volder, Jack: <i>"The CORDIC Trigonometric Computing Technique"</i>,<br />IRE Transactions on Electronic Computing, Vol EC-8, strany 330-334, 1959</li>

<li>NVIDIA Corporation: <i>"Floating-Point Specials on the GPU"</i>,<br />2005</li>

<li>Grant R. Griffin: <i>CORDIC FAQ</i>,<br />
<a href="http://www.dspguru.com/info/faqs/cordic.htm">http://www.dspguru.com/info/faqs/cordic.htm</a></li>

<li>Andraka Consulting Group, Inc.: <i>What is all this CORDIC stuff anyhow?</i>,<br />
<a href="http://www.andraka.com/cordic.htm">http://www.andraka.com/cordic.htm</a></li>

<li>Cyliax Ingo: <i>CORDIC (COordinate Rotation DIgital Computer), the swiss army knife for computing math functions...</i><br />
<a href="http://www.ee.ualberta.ca/courses/ee401/microboard/cordic_CCink.html">http://www.ee.ualberta.ca/courses/ee401/microboard/cordic_CCink.html</a></li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>VESA BIOS Extensions<br />
<a href="https://en.wikipedia.org/wiki/VESA_BIOS_Extensions">https://en.wikipedia.org/wiki/VESA_BIOS_Extensions</a>
</li>

<li>Video Electronics Standards Association<br />
<a href="https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association">https://en.wikipedia.org/wiki/Video_Electronics_Standards_Association</a>
</li>

<li>DJGPP (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/DJGPP">https://cs.wikipedia.org/wiki/DJGPP</a>
</li>

<li>DJGPP home page<br />
<a href="http://www.delorie.com/djgpp/">http://www.delorie.com/djgpp/</a>
</li>

<li>DJGPP Zip File Picker<br />
<a href="http://www.delorie.com/djgpp/zip-picker.html">http://www.delorie.com/djgpp/zip-picker.html</a>
</li>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

<li>The LOADALL Instruction by Robert Collins<br />
<a href="https://www.rcollins.org/articles/loadall/tspec_a3_doc.html">https://www.rcollins.org/articles/loadall/tspec_a3_doc.html</a>
</li>

<li>How do you put a 286 in Protected Mode?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode">https://retrocomputing.stackexchange.com/questions/7683/how-do-you-put-a-286-in-protected-mode</a>
</li>

<li>Control register<br />
<a href="https://en.wikipedia.org/wiki/Control_register">https://en.wikipedia.org/wiki/Control_register</a>
</li>

<li>CPU Registers x86<br />
<a href="https://wiki.osdev.org/CPU_Registers_x86">https://wiki.osdev.org/CPU_Registers_x86</a>
</li>

<li>x86 Assembly/Protected Mode<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode">https://en.wikibooks.org/wiki/X86_Assembly/Protected_Mode</a>
</li>

<li>MSW: Machine Status Word<br />
<a href="https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html">https://web.itu.edu.tr/kesgin/mul06/intel/intel_msw.html</a>
</li>

<li>80x87 Floating Point Opcodes<br />
<a href="http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html">http://www.techhelpmanual.com/876-80x87_floating_point_opcodes.html</a>
</li>

<li>Page Translation<br />
<a href="https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm">https://pdos.csail.mit.edu/6.828/2005/readings/i386/s05_02.htm</a>
</li>

<li>80386 Paging and Segmenation<br />
<a href="https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation">https://stackoverflow.com/questions/38229741/80386-paging-and-segmenation</a>
</li>

<li>80386 Memory Management<br />
<a href="https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html">https://tldp.org/LDP/khg/HyperNews/get/memory/80386mm.html</a>
</li>

<li>DOSEMU<br />
<a href="http://www.dosemu.org/">http://www.dosemu.org/</a>
</li>

<li>Intel 80386, a revolutionary CPU<br />
<a href="https://www.xtof.info/intel80386.html">https://www.xtof.info/intel80386.html</a>
</li>

<li>PAI Unit 3 Paging in 80386 Microporcessor<br />
<a href="https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor">https://www.slideshare.net/KanchanPatil34/pai-unit-3-paging-in-80386-microporcessor</a>
</li>

<li>64 Terabytes of virtual memory for 32-bit x86 using segmentation: how?<br />
<a href="https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how">https://stackoverflow.com/questions/5444984/64-terabytes-of-virtual-memory-for-32-bit-x86-using-segmentation-how</a>
</li>

<li>Pi in the Pentium: reverse-engineering the constants in its floating-point unit<br />
<a href="http://www.righto.com/2025/01/pentium-floating-point-ROM.html">http://www.righto.com/2025/01/pentium-floating-point-ROM.html</a>
</li>

<li>Simply FPU<br />
<a href="http://www.website.masmforum.com/tutorials/fptute/">http://www.website.masmforum.com/tutorials/fptute/</a>
</li>

<li>Art of Assembly language programming: The 80x87 Floating Point Coprocessors<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-3.html</a>
</li>

<li>Art of Assembly language programming: The FPU Instruction Set<br />
<a href="https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html">https://courses.engr.illinois.edu/ece390/books/artofasm/CH14/CH14-4.html</a>
</li>

<li>INTEL 80387 PROGRAMMER'S REFERENCE MANUAL<br />
<a href="http://www.ragestorm.net/downloads/387intel.txt">http://www.ragestorm.net/downloads/387intel.txt</a>
</li>

<li>x86 Instruction Set Reference: FLD<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_100.html">http://x86.renejeschke.de/html/file_module_x86_id_100.html</a>
</li>

<li>x86 Instruction Set Reference: FLD1/FLDL2T/FLDL2E/FLDPI/FLDLG2/FLDLN2/FLDZ<br />
<a href="http://x86.renejeschke.de/html/file_module_x86_id_101.html">http://x86.renejeschke.de/html/file_module_x86_id_101.html</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>8087 Numeric Data Processor<br />
<a href="https://www.eeeguide.com/8087-numeric-data-processor/">https://www.eeeguide.com/8087-numeric-data-processor/</a>
</li>

<li>Data Types and Instruction Set of 8087 co-processor<br />
<a href="https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/">https://www.eeeguide.com/data-types-and-instruction-set-of-8087-co-processor/</a>
</li>

<li>8087 instruction set and examples<br />
<a href="https://studylib.net/doc/5625221/8087-instruction-set-and-examples">https://studylib.net/doc/5625221/8087-instruction-set-and-examples</a>
</li>

<li>GCC documentation: Extensions to the C Language Family<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions">https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions</a>
</li>

<li>GCC documentation: Using Vector Instructions through Built-in Functions<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html">https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html</a>
</li>

<li>SSE (Streaming SIMD Extentions)<br />
<a href="http://www.songho.ca/misc/sse/sse.html">http://www.songho.ca/misc/sse/sse.html</a>
</li>

<li>Timothy A. Chagnon: SSE and SSE2<br />
<a href="http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf">http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf</a>
</li>

<li>Intel corporation: Extending the Worldr's Most Popular Processor Architecture<br />
<a href="http://download.intel.com/technology/architecture/new-instructions-paper.pdf">http://download.intel.com/technology/architecture/new-instructions-paper.pdf</a>
</li>

<li>SIMD architectures:<br />
<a href="http://arstechnica.com/old/content/2000/03/simd.ars/">http://arstechnica.com/old/content/2000/03/simd.ars/</a>
</li>

<li>Tour of the Black Holes of Computing!: Floating Point<br />
<a href="http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt">http://www.cs.hmc.edu/~geoff/classes/hmc.cs105.../slides/class02_floats.ppt</a>
</li>

<li>3Dnow! Technology Manual<br />
AMD Inc., 2000</li>

<li>Intel MMX<sup>TM</sup> Technology Overview<br />
Intel corporation, 1996</li>

<li>MultiMedia eXtensions<br />
<a href="http://softpixel.com/~cwright/programming/simd/mmx.php">http://softpixel.com/~cwright/programming/simd/mmx.php</a>i
</li>

<li>AMD K5 ("K5" / "5k86")<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g5K5-c.html">http://www.pcguide.com/ref/cpu/fam/g5K5-c.html</a>
</li>

<li>Sixth Generation Processors<br />
<a href="http://www.pcguide.com/ref/cpu/fam/g6.htm">http://www.pcguide.com/ref/cpu/fam/g6.htm</a>
</li>

<li>Great Microprocessors of the Past and Present<br />
<a href="http://www.cpushack.com/CPU/cpu1.html">http://www.cpushack.com/CPU/cpu1.html</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Very_long_instruction_word">http://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>CPU design (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CPU_design">http://en.wikipedia.org/wiki/CPU_design</a>
</li>

<li>Grafické karty a grafické akcelerátory (14)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-14/</a>
</li>

<li>Grafické karty a grafické akcelerátory (15)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-15/</a>
</li>

<li>Grafické karty a grafické akcelerátory (16)<br />
<a href="https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/">https://www.root.cz/clanky/graficke-karty-a-graficke-akceleratory-16/</a>
</li>

<li>VESA Video Modes<br />
<a href="https://wiki.osdev.org/VESA_Video_Modes">https://wiki.osdev.org/VESA_Video_Modes</a>
</li>

<li>Introduction to VESA programming<br />
<a href="http://www.monstersoft.com/tutorial1/VESA_intro.html">http://www.monstersoft.com/tutorial1/VESA_intro.html</a>
</li>

<li>Guide: VBE 2.0 graphics modes<br />
<a href="https://delorie.com/djgpp/doc/ug/graphics/vbe20.html">https://delorie.com/djgpp/doc/ug/graphics/vbe20.html</a>
</li>

<li>NASM instruction list<br />
<a href="https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html">https://userpages.cs.umbc.edu/chang/cs313/nasmdoc/html/nasmdocb.html</a>
</li>

<li>BitBlt function (wingdi.h)<br />
<a href="https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt">https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-bitblt</a>
</li>

<li>SetDIBitsToDevice function (wingdi.h)<br />
<a href="https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice">https://learn.microsoft.com/en-us/windows/win32/api/wingdi/nf-wingdi-setdibitstodevice</a>
</li>

<li>Why did line printers have 132 columns?<br />
<a href="https://retrocomputing.stackexchange.com/questions/7838/why-did-line-printers-have-132-columns">https://retrocomputing.stackexchange.com/questions/7838/why-did-line-printers-have-132-columns</a>
</li>

<li>Tabulating machine<br />
<a href="https://en.wikipedia.org/wiki/Tabulating_machine">https://en.wikipedia.org/wiki/Tabulating_machine</a>
</li>

<li>Why do printers print 132 columns on 14 7/8″ paper? It’s history<br />
<a href="https://blog.adafruit.com/2019/01/22/why-do-printers-print-132-columns-on-14-7-8-paper-its-history-vintagecomputing-kenshirriff-ibm/">https://blog.adafruit.com/2019/01/22/why-do-printers-print-132-columns-on-14-7-8-paper-its-history-vintagecomputing-kenshirriff-ibm/</a>
</li>

<li>IBM 1403 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_1403">https://en.wikipedia.org/wiki/IBM_1403</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

