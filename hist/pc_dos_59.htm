<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Funkce vestavěné v GCC pro provádění nízkoúrovňových aritmetických operací</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Funkce vestavěné v GCC pro provádění nízkoúrovňových aritmetických operací</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Funkce vestavěné v&nbsp;GCC pro provádění nízkoúrovňových aritmetických operací</a></p>
<p><a href="#k02">*** 2. Operace součtu s&nbsp;detekcí přetečení</a></p>
<p><a href="#k03">*** 3. Způsob překladu operací součtu do strojového kódu</a></p>
<p><a href="#k04">*** 4. Překlad obecné funkce <strong>__builtin_add_overflow</strong> na platformě x86-64</a></p>
<p><a href="#k05">*** 5. Překlad obecné funkce <strong>__builtin_add_overflow</strong> pro 32bitové ARMy</a></p>
<p><a href="#k06">*** 6. Překlad obecné funkce <strong>__builtin_add_overflow</strong> pro 64bitové ARMy (AArch64)</a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Funkce vestavěné v&nbsp;GCC pro provádění nízkoúrovňových aritmetických operací</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Operace součtu s&nbsp;detekcí přetečení</h2>

<table>
<tr><th>Jméno funkce</th><th>Návratový typ</th><th>Parametry</th></tr>
<tr><td>__builtin_add_overflow   </td><td>bool</td><td>typ1 a, typ2 b, typ3 *res</td></tr>
<tr><td>__builtin_sadd_overflow  </td><td>bool</td><td>int a, int b, int *res</td></tr>
<tr><td>__builtin_saddl_overflow </td><td>bool</td><td>long int a, long int b, long int *res</td></tr>
<tr><td>__builtin_saddll_overflow</td><td>bool</td><td>long long int a, long long int b, long long int *res</td></tr>
<tr><td>__builtin_uadd_overflow  </td><td>bool</td><td>unsigned int a, unsigned int b, unsigned int *res</td></tr>
<tr><td>__builtin_uaddl_overflow </td><td>bool</td><td>unsigned long int a, unsigned long int b, unsigned long int *res</td></tr>
<tr><td>__builtin_uaddll_overflow</td><td>bool</td><td>unsigned long long int a, unsigned long long int b, unsigned long long int *res</td></tr>
</table>



<p><a name="k03"></a></p>
<h2 id="k03">3. Způsob překladu operací součtu do strojového kódu</h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. Překlad obecné funkce <strong>__builtin_add_overflow</strong> na platformě x86-64</h2>

<p></p>

<pre>
#include &lt;stdbool.h&gt;
&nbsp;
bool add_overflow_signed_char(signed char x, signed char y) {
    signed char z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_unsigned_char(unsigned char x, unsigned char y) {
    unsigned char z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_signed_short(signed short x, signed short y) {
    signed short z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_unsigned_short(unsigned short x, unsigned short y) {
    unsigned short z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_signed_int(signed int x, signed int y) {
    signed int z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_unsigned_int(unsigned int x, unsigned int y) {
    unsigned int z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_signed_long(signed long x, signed long y) {
    signed long z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
&nbsp;
bool add_overflow_unsigned_long(unsigned long x, unsigned long y) {
    unsigned long z;
    bool overflow = __builtin_add_overflow(x, y, &amp;z);
    return overflow;
}
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Překlad obecné funkce <strong>__builtin_add_overflow</strong> pro 32bitové ARMy</h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. Překlad obecné funkce <strong>__builtin_add_overflow</strong> pro 64bitové ARMy (AArch64)</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;jazyku C, které jsou určené pro překlad
s&nbsp;využitím překladače <strong>gcc</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/">https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/</a></td></tr>
<tr><td> 2</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/">https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/</a></td></tr>
<tr><td> 3</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/">https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/</a></td></tr>
<tr><td> 4</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/">https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/</a></td></tr>
<tr><td> 5</td><td></td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/">https://github.com/tisnik/8bit-fame/blob/master/gcc-builtins/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>GCC documentation: Extensions to the C Language Family<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions">https://gcc.gnu.org/onlinedocs/gcc/C-Extensions.html#C-Extensions</a>
</li>

<li>GCC documentation: Using Vector Instructions through Built-in Functions<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html">https://gcc.gnu.org/onlinedocs/gcc/Vector-Extensions.html</a>
</li>

<li>SSE (Streaming SIMD Extentions)<br />
<a href="http://www.songho.ca/misc/sse/sse.html">http://www.songho.ca/misc/sse/sse.html</a>
</li>

<li>Timothy A. Chagnon: SSE and SSE2<br />
<a href="http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf">http://www.cs.drexel.edu/~tc365/mpi-wht/sse.pdf</a>
</li>

<li>CPU design (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CPU_design">http://en.wikipedia.org/wiki/CPU_design</a>
</li>

<li>GCC Compiler Intrinsics<br />
<a href="https://iq.opengenus.org/gcc-compiler-intrinsics/">https://iq.opengenus.org/gcc-compiler-intrinsics/</a>
</li>

<li>Other Built-in Functions Provided by GCC<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html">https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html</a>
</li>

<li>GCC: 6.60 Built-in Functions Specific to Particular Target Machines<br />
<a href="https://gcc.gnu.org/onlinedocs/gcc/Target-Builtins.html#Target-Builtins">https://gcc.gnu.org/onlinedocs/gcc/Target-Builtins.html#Target-Builtins</a>
</li>

<li>Stránka projektu Compiler Explorer<br />
<a href="https://godbolt.org/">https://godbolt.org/</a>
</li>

<li>The LLVM Compiler Infrastructure<br />
<a href="https://llvm.org/">https://llvm.org/</a>
</li>

<li>GCC, the GNU Compiler Collection<br />
<a href="https://gcc.gnu.org/">https://gcc.gnu.org/</a>
</li>

<li>Clang<br />
<a href="https://clang.llvm.org/">https://clang.llvm.org/</a>
</li>

<li>Clang: Assembling a Complete Toolchain<br />
<a href="https://clang.llvm.org/docs/Toolchain.html">https://clang.llvm.org/docs/Toolchain.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2025</small></p>
</body>
</html>

