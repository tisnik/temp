<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>SIMD instrukce na platformě 80x86: dokončení popisu MMX, instrukce 3DNow!</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>SIMD instrukce na platformě 80x86: dokončení popisu MMX, instrukce 3DNow!</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Aritmetické a logické posuny prvků vektorů</a></p>
<p><a href="#k02">2. První demonstrační příklad: logické posuny doleva</a></p>
<p><a href="#k03">3. Druhý demonstrační příklad: logické posuny doprava</a></p>
<p><a href="#k04">4. Třetí demonstrační příklad: aritmetické posuny doprava</a></p>
<p><a href="#k05">5. Porovnání prvků vektorů</a></p>
<p><a href="#k06">*** 6. Čtvrtý demonstrační příklad: porovnání prvků na rovnost</a></p>
<p><a href="#k07">*** 7. Pátý demonstrační příklad: porovnání prvků na relaci &bdquo;větší než&ldquo;</a></p>
<p><a href="#k08">*** 8. Transformace mezi různými typy vektorů</a></p>
<p><a href="#k09">*** 9. Šestý demonstrační příklad: rozbalení bajtů z&nbsp;vektorů</a></p>
<p><a href="#k10">*** 10. Sedmý demonstrační příklad: rozbalení slov z&nbsp;vektorů</a></p>
<p><a href="#k11">*** 11. Osmý demonstrační příklad: rozbalení dvojslov z&nbsp;vektorů</a></p>
<p><a href="#k12">*** 12. Devátý demonstrační příklad: zabalení vektorů slov do vektoru bajtů</a></p>
<p><a href="#k13">*** 13. Desátý demonstrační příklad: řešení přetečení při zabalování vektorů</a></p>
<p><a href="#k14">*** 14. Instrukční sada MMX: shrnutí</a></p>
<p><a href="#k15">*** 15. Seznam všech popsaných instrukcí MMX</a></p>
<p><a href="#k16">16. Instrukční sada 3DNow! aneb odpověď firmy AMD na instrukční sadu MMX</a></p>
<p><a href="#k17">17. Datové typy instrukcí 3DNow!</a></p>
<p><a href="#k18">18. Vektorové instrukce definované v&nbsp;rozšíření 3DNow!</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Aritmetické a logické posuny prvků vektorů</h2>

<p>Na články [<a
href="https://www.root.cz/clanky/simd-instrukce-na-platforme-80x86-neprimy-dusledek-platnosti-mooreova-zakona/">1</a>]
a [<a
href="https://www.root.cz/clanky/simd-instrukce-na-platforme-80x86-instrukcni-sada-mmx/">2</a>]
dnes navážeme. Popíšeme si zbytek instrukcí ze sady MMX a většinu instrukcí
použijeme v&nbsp;demonstračních příkladech. Taktéž si &ndash; ovšem už bez
příkladů &ndash; popíšeme instrukční sadu 3DNow! společnosti AMD. Tato sada
nebyla přímou konkurencí MMX, ale spíše první vlaštovkou, která vedla
k&nbsp;SSE a posléze i k&nbsp;rozšířením AVX.</p>

<p>Začneme popisem MMX instrukcí určených pro provádění aritmetických a
logických posunů prvků vektorů. Tyto instrukce se od sebe pochopitelně odlišují
typem posunu (doleva, doprava s&nbsp;doplněním nuly či doprava s&nbsp;kopií
nejvyššího bitu) i tím, jak široké jsou prvky vektorů. Je možné použít 16bitová
slova, 32bitová slova a 64bitová slova (nikoli jednotlivé bajty). Žádná
z&nbsp;těchto instrukcí nemění příznakové bity:</p>

<table>
<tr><th>#</th><th>Instrukce</th><th>Stručný popis instrukce</th></tr>
<tr><td>1</td><td>PSLLW</td><td>logický posun doleva vektorů s&nbsp;prvky typu 16bitové slovo</td></tr>
<tr><td>2</td><td>PSLLD</td><td>logický posun doleva vektorů s&nbsp;prvky typu 32bitové slovo</td></tr>
<tr><td>3</td><td>PSLLQ</td><td>logický posun doleva 64bitové hodnoty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>4</td><td>PSRLW</td><td>logický posun doprava vektorů s&nbsp;prvky typu 16bitové slovo</td></tr>
<tr><td>5</td><td>PSRLD</td><td>logický posun doprava vektorů s&nbsp;prvky typu 32bitové slovo</td></tr>
<tr><td>6</td><td>PSRLQ</td><td>logický posun doprava 64bitové hodnoty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>7</td><td>PSRAW</td><td>aritmetický posun doprava vektorů s&nbsp;prvky typu 16bitové slovo</td></tr>
<tr><td>8</td><td>PSRAD</td><td>aritmetický posun doprava vektorů s&nbsp;prvky typu 32bitové slovo</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: jedná se o zkratky odvozené
z&nbsp;<i>Parallel Shift Left/Right Logical/Arithmetic
Word/Doubleword/Quadword</i>.</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. První demonstrační příklad: logické posuny doleva</h2>

<p>V&nbsp;dnešním prvním demonstračním příkladu je ukázáno použití MMX
instrukcí, které provádí logické posuny doleva, což odpovídá násobení mocninou
2. Jak již víme, jedná se o instrukce nazvané <strong>PSLLW</strong>,
<strong>PSLLD</strong> a <strong>PSLLQ</strong>. Všechny tři zmíněné instrukce
použijeme pro posun prvků ve vektoru, který bude mít fyzicky totožný obsah (a
lišit se tedy bude jen tím, jaký formát instrukce pro posuny zpracují):</p>

<pre>
<strong>mmx_val</strong> db 0, 1, 2, 0xff, 0x00, 0xff, 0xff, 0x00
</pre>

<p>Tento demonstrační příklad po svém překladu a spuštění nejprve vypíše obsah
původního vektoru a posléze i výsledky všech tří typů logických posunů
(mezerami jsou naznačeny hranice mezi jednotlivými prvky vektorů; posun nikdy
nepřesáhne přes hranice prvků):</p>

<pre>
00FFFF00 FF020100
&nbsp;
psllw:
01FE FE00 FE04 0200
&nbsp;
pslld:
01FFFE00 FE040200
&nbsp;
psllq:
01FFFE01FE040200
</pre>

<p>Následuje výpis zdrojového kódu tohoto příkladu:</p>

<pre>
[bits 32]
&nbsp; 
%include "linux_macros.asm"
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
section .data
&nbsp;
<strong>hex_message</strong>:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
&nbsp;
<strong>psllw_message</strong>:
         db 0x0a, "psllw:", 0x0a
         psllw_message_length equ $ - psllw_message
&nbsp;
<strong>pslld_message</strong>:
         db 0x0a, "pslld:", 0x0a
         pslld_message_length equ $ - pslld_message
&nbsp;
<strong>psllq_message</strong>:
         db 0x0a, "psllq:", 0x0a
         psllq_message_length equ $ - psllq_message
&nbsp;
&nbsp;
<strong>mmx_val</strong> db 0, 1, 2, 0xff, 0x00, 0xff, 0xff, 0x00
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
section .bss
<strong>mmx_tmp</strong> resb 8
&nbsp;
 &nbsp;
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>
&nbsp;
<strong>_start</strong>:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm2, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
&nbsp;
        <u>psllw mm1, 1</u>                 <i>; logicky posun doleva o jeden bit</i>
        print_string psllw_message, psllw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm1, mm2                <i>; obnovit hodnotu registru mm1</i>
        <u>pslld mm1, 1</u>                 <i>; logicky posun doleva o jeden bit</i>
        print_string pslld_message, pslld_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm1, mm2                <i>; obnovit hodnotu registru mm1</i>
        <u>psllq mm1, 1</u>                 <i>; logicky posun doleva o jeden bit</i>
        print_string psllq_message, psllq_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        exit                         <i>; ukonceni procesu</i>
&nbsp;
&nbsp;
%include "hex2string.asm"
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Druhý demonstrační příklad: logické posuny doprava</h2>

<p>Druhá sada MMX instrukcí nazvaných <strong>PSRLW</strong>,
<strong>PSRLD</strong> a <strong>PSRLQ</strong> taktéž provádí logické posuny,
tentokrát však doprava, což odpovídá dělení mocninou 2. Do nejvyšších bitů
prvků vektorů se v&nbsp;tomto případě dosadí nuly. Tyto instrukce si ukážeme na
vektoru, který má nastaveny jen vybrané nejnižší bity jednotlivých bajtů:</p>

<pre>
<strong>mmx_val</strong> db 0, 1, 1, 1, 1, 0, 0, 0
</pre>

<p>Výsledky by měly vypadat následovně:</p>

<pre>
00000001 01010100
&nbsp;
psrlw:
0000 0000 0080 0080
&nbsp;
psrld:
00000000 00808080
&nbsp;
psrlq:
0000000080808080
</pre>

<p>Opět následuje úplný výpis zdrojového kódu tohoto demonstračního
příkladu:</p>

<pre>
[bits 32]
&nbsp; 
%include "linux_macros.asm"
&nbsp; 
<i>;-----------------------------------------------------------------------------</i>
section .data
&nbsp; 
<strong>hex_message</strong>:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
&nbsp;
<strong>psrlw_message</strong>:
         db 0x0a, "psrlw:", 0x0a
         psrlw_message_length equ $ - psrlw_message
&nbsp;
<strong>psrld_message</strong>:
         db 0x0a, "psrld:", 0x0a
         psrld_message_length equ $ - psrld_message
&nbsp;
<strong>psrlq_message</strong>:
         db 0x0a, "psrlq:", 0x0a
         psrlq_message_length equ $ - psrlq_message
&nbsp; 
&nbsp;
<strong>mmx_val</strong> db 0, 1, 1, 1, 1, 0, 0, 0
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
section .bss
<strong>mmx_tmp</strong> resb 8
&nbsp;
&nbsp; 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>
&nbsp;
<strong>_start</strong>:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm2, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
&nbsp;
        <u>psrlw mm1, 1</u>                 <i>; logicky posun doprava o jeden bit</i>
        print_string psrlw_message, psrlw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm1, mm2                <i>; obnovit hodnotu registru mm1</i>
        <u>psrld mm1, 1</u>                 <i>; logicky posun doprava o jeden bit</i>
        print_string psrld_message, psrld_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm1, mm2                <i>; obnovit hodnotu registru mm1</i>
        <u>psrlq mm1, 1</u>                 <i>; logicky posun doprava o jeden bit</i>
        print_string psrlq_message, psrlq_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        exit                         <i>; ukonceni procesu</i>
&nbsp;
&nbsp;
%include "hex2string.asm"
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Třetí demonstrační příklad: aritmetické posuny doprava</h2>

<p>A konečně se podívejme na praktické použití instrukcí <strong>PSRAW</strong>
a <strong>PSRAD</strong>, které provádí aritmetický posun doprava. To znamená,
že původní nejvyšší bit je zachován (jeho hodnota je zkopírována do nového
nejvyššího bitu). To opět odpovídá dělení mocninou 2, ovšem pro hodnoty se
znaménkem. Tento příklad je kratší, protože v&nbsp;MMX nemáme k&nbsp;dispozici
funkci pro posun 64bitové hodnoty (ta byla přidána později).</p>

<p>Výsledky vypsané tímto demonstračním příkladem:</p>

<pre>
FF010000 FF010000
&nbsp;
psraw:
FF80 0000 FF80 0000
&nbsp;
psrad:
FF808000 FF808000
</pre>

<p>Opět se podívejme na jeho úplný zdrojový kód:</p>

<pre>
[bits 32]
&nbsp; 
%include "linux_macros.asm"
&nbsp; 
<i>;-----------------------------------------------------------------------------</i>
section .data
&nbsp;
<strong>hex_message</strong>:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
&nbsp;
<strong>psraw_message</strong>:
         db 0x0a, "psraw:", 0x0a
         psraw_message_length equ $ - psraw_message
&nbsp; 
<strong>psrad_message</strong>:
         db 0x0a, "psrad:", 0x0a
         psrad_message_length equ $ - psrad_message
&nbsp;
&nbsp;
<strong>mmx_val</strong> db 0, 0, 1, 0xff, 0, 0, 1, 0xff
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
section .bss
<strong>mmx_tmp</strong> resb 8
&nbsp;
&nbsp; 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>
&nbsp;
<strong>_start</strong>:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm2, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
&nbsp;
        <u>psraw mm1, 1</u>                 <i>; aritmeticky posun doprava o jeden bit</i>
        print_string psraw_message, psraw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        movq mm1, mm2                <i>; obnovit hodnotu registru mm1</i>
        <u>psrad mm1, 1</u>                 <i>; aritmeticky posun doprava o jeden bit</i>
        print_string psrad_message, psrad_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>
&nbsp;
        exit                         <i>; ukonceni procesu</i>
&nbsp;
&nbsp;
%include "hex2string.asm"
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Porovnání prvků vektorů</h2>

<p>V&nbsp;instrukční sadě MMX nalezneme i šestici instrukcí určených pro
porovnání prvků dvou vektorů. Porovnávat lze prvky typu bajt, slovo a
dvojslovo, a to na relace &bdquo;je rovno&ldquo; a &bdquo;je větší než&ldquo;.
Testy na ostatní relace získáme snadno negací či spojením (AND/OR) dvou
porovnání. Výsledkem porovnání je nový vektor, který obsahuje v&nbsp;daném
místě (například sedmý prvek) buď samé nulové bity (relace naplatí) nebo naopak
jedničkové bity (relace platí):</p>

<table>
<tr><th>#</th><th>Instrukce</th><th>Stručný popis instrukce</th></tr>
<tr><td>1</td><td>PCMPEQB</td><td>porovnání vektorů s&nbsp;prvky typu 8bitové slovo na relaci &bdquo;je rovno&ldquo;</td></tr>
<tr><td>2</td><td>PCMPEQW</td><td>porovnání vektorů s&nbsp;prvky typu 16bitové slovo na relaci &bdquo;je rovno&ldquo;</td></tr>
<tr><td>3</td><td>PCMPEQD</td><td>porovnání vektorů s&nbsp;prvky typu 32bitové slovo na relaci &bdquo;je rovno&ldquo;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>4</td><td>PCMPGTB</td><td>porovnání vektorů s&nbsp;prvky typu 8bitové slovo na relaci &bdquo;větší než&ldquo;</td></tr>
<tr><td>5</td><td>PCMPGTW</td><td>porovnání vektorů s&nbsp;prvky typu 16bitové slovo na relaci &bdquo;větší než&ldquo;</td></tr>
<tr><td>6</td><td>PCMPGTD</td><td>porovnání vektorů s&nbsp;prvky typu 32bitové slovo na relaci &bdquo;větší než&ldquo;</td></tr>
</table>



<p><a name="k06"></a></p>
<h2 id="k06">6. Čtvrtý demonstrační příklad: porovnání prvků na rovnost</h2>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
pcmpeqb_message:
         db 0x0a, "pcmpeqb:", 0x0a
         pcmpeqb_message_length equ $ - pcmpeqb_message
 
pcmpeqw_message:
         db 0x0a, "pcmpeqw:", 0x0a
         pcmpeqw_message_length equ $ - pcmpeqw_message
 
pcmpeqd_message:
         db 0x0a, "pcmpeqd:", 0x0a
         pcmpeqd_message_length equ $ - pcmpeqd_message
 
 
mmx_val_1 db 0, 1, 2, 3, 0, 1, 2, 3
mmx_val_2 db 0, 1, 2, 9, 0, 9, 2, 9

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        movq mm3, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
        movq mm4, mm2                <i>; zapamatovat si hodnotu pro další použití</i>

        pcmpeqb mm1, mm2             <i>; porovnani prvku vektoru na rovnost</i>
        print_string pcmpeqb_message, pcmpeqb_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        pcmpeqw mm1, mm2             <i>; porovnani prvku vektoru na rovnost</i>
        print_string pcmpeqw_message, pcmpeqw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        pcmpeqd mm1, mm2             <i>; porovnani prvku vektoru na rovnost</i>
        print_string pcmpeqd_message, pcmpeqd_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>

<pre>
03020100 03020100
09020900 09020100

pcmpeqb:
00FF00FF 00FFFFFF

pcmpeqw:
00000000 0000FFFF

pcmpeqd:
00000000 00000000
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Pátý demonstrační příklad: porovnání prvků na relaci &bdquo;větší než&ldquo;</h2>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
pcmpgtb_message:
         db 0x0a, "pcmpgtb:", 0x0a
         pcmpgtb_message_length equ $ - pcmpgtb_message
 
pcmpgtw_message:
         db 0x0a, "pcmpgtw:", 0x0a
         pcmpgtw_message_length equ $ - pcmpgtw_message
 
pcmpgtd_message:
         db 0x0a, "pcmpgtd:", 0x0a
         pcmpgtd_message_length equ $ - pcmpgtd_message
 
 
mmx_val_1 db 0, 1, 2, 3, 0, 1, 2, 3
mmx_val_2 db 1, 2, 3, 0, 1, 0, 3, 0

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        movq mm3, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
        movq mm4, mm2                <i>; zapamatovat si hodnotu pro další použití</i>

        pcmpgtb mm1, mm2             <i>; porovnani prvku vektoru na rovnost</i>
        print_string pcmpgtb_message, pcmpgtb_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        pcmpgtw mm1, mm2             <i>; porovnani prvku vektoru na rovnost</i>
        print_string pcmpgtw_message, pcmpgtw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        pcmpgtd mm1, mm2             <i>; porovnani prvku vektoru na rovnost</i>
        print_string pcmpgtd_message, pcmpgtd_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>

<pre>
03020100 03020100
00030001 00030201

pcmpgtb:
FF00FF00 FF000000

pcmpgtw:
FFFFFFFF FFFF0000

pcmpgtd:
FFFFFFFF FFFFFFFF
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Transformace mezi různými typy vektorů</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Šestý demonstrační příklad: rozbalení bajtů z&nbsp;vektorů</h2>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
punpcklbw_message:
         db 0x0a, "punpcklbw:", 0x0a
         punpcklbw_message_length equ $ - punpcklbw_message
 
punpckhbw_message:
         db 0x0a, "punpckhbw:", 0x0a
         punpckhbw_message_length equ $ - punpckhbw_message
 
 
 
mmx_val_1 db 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77
mmx_val_2 db 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        movq mm3, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
        movq mm4, mm2                <i>; zapamatovat si hodnotu pro další použití</i>

        punpcklbw mm1, mm2           <i>; zkombinovani obsahu dvou vektoru</i>
        print_string punpcklbw_message, punpcklbw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        punpckhbw mm1, mm2           <i>; zkombinovani obsahu dvou vektoru</i>
        print_string punpckhbw_message, punpckhbw_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>

<pre>
77665544 33221100
FFEEDDCC BBAA9988

punpcklbw:
BB33AA22 99118800

punpckhbw:
FF77EE66 DD55CC44
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Sedmý demonstrační příklad: rozbalení slov z&nbsp;vektorů</h2>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
punpcklwd_message:
         db 0x0a, "punpcklwd:", 0x0a
         punpcklwd_message_length equ $ - punpcklwd_message
 
punpckhwd_message:
         db 0x0a, "punpckhwd:", 0x0a
         punpckhwd_message_length equ $ - punpckhwd_message
 
 
 
mmx_val_1 dw 0x0000, 0x1111, 0x2222, 0x3333
mmx_val_2 dw 0x4444, 0x5555, 0x6666, 0x7777

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        movq mm3, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
        movq mm4, mm2                <i>; zapamatovat si hodnotu pro další použití</i>

        punpcklwd mm1, mm2           <i>; zkombinovani obsahu dvou vektoru</i>
        print_string punpcklwd_message, punpcklwd_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        punpckhwd mm1, mm2           <i>; zkombinovani obsahu dvou vektoru</i>
        print_string punpckhwd_message, punpckhwd_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>

<pre>
33332222 11110000
77776666 55554444

punpcklwd:
55551111 44440000

punpckhwd:
77773333 66662222
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Osmý demonstrační příklad: rozbalení dvojslov z&nbsp;vektorů</h2>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
punpckldq_message:
         db 0x0a, "punpckldq:", 0x0a
         punpckldq_message_length equ $ - punpckldq_message
 
punpckhdq_message:
         db 0x0a, "punpckhdq:", 0x0a
         punpckhdq_message_length equ $ - punpckhdq_message
 
 
 
mmx_val_1 dd 0x00000000, 0x11111111
mmx_val_2 dd 0x22222222, 0x33333333

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        movq mm3, mm1                <i>; zapamatovat si hodnotu pro další použití</i>
        movq mm4, mm2                <i>; zapamatovat si hodnotu pro další použití</i>

        punpckldq mm1, mm2           <i>; zkombinovani obsahu dvou vektoru</i>
        print_string punpckldq_message, punpckldq_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        movq mm1, mm3                <i>; obnovit hodnotu registru mm1</i>
        movq mm2, mm4                <i>; obnovit hodnotu registru mm2</i>
        punpckhdq mm1, mm2           <i>; zkombinovani obsahu dvou vektoru</i>
        print_string punpckhdq_message, punpckhdq_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>

<pre>
11111111 00000000
33333333 22222222

punpckldq:
22222222 00000000

punpckhdq:
33333333 11111111
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Devátý demonstrační příklad: zabalení vektorů slov do vektoru bajtů</h2>

<pre>
</pre>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
packswb_message:
         db 0x0a, "packswb:", 0x0a
         packswb_message_length equ $ - packswb_message
 
 
 
 
mmx_val_1 dw 0x00, 0x11, 0x22, 0x33
mmx_val_2 dw 0x44, 0x55, 0x66, 0x77

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        packsswb mm1, mm2            <i>; zkombinovani obsahu dvou vektoru</i>
        print_string packswb_message, packswb_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>



<p><a name="k13"></a></p>
<h2 id="k13">13. Desátý demonstrační příklad: řešení přetečení při zabalování vektorů</h2>

<pre>
</pre>

<pre>
[bits 32]
 
%include "linux_macros.asm"

<i>;-----------------------------------------------------------------------------</i>
section .data

hex_message:
         times 8 db '?'
         db ' '
         hex_message_length equ $ - hex_message
 
packswb_message:
         db 0x0a, "packswb:", 0x0a
         packswb_message_length equ $ - packswb_message
 
 
 
 
mmx_val_1 dw 0x0000, 0x0100, 0x0200, 0x0300
mmx_val_2 dw 0x0400, 0x0500, 0x0600, 0x0700

<i>;-----------------------------------------------------------------------------</i>
section .bss
mmx_tmp resb 8

 
<i>;-----------------------------------------------------------------------------</i>
section .text
        global _start                <i>; tento symbol ma byt dostupny i linkeru</i>

_start:
        emms                         <i>; inicializace MMX</i>
        mov ebx, mmx_val_1
        movq mm1, [ebx]              <i>; nacteni prvni hodnoty do registru MM1</i>
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        mov ebx, mmx_val_2
        movq mm2, [ebx]              <i>; nacteni druhe hodnoty do registru MM2</i>
        print_mmx_reg_as_hex mm2     <i>; tisk hodnoty registru MM2</i>

        packsswb mm1, mm2            <i>; zkombinovani obsahu dvou vektoru</i>
        print_string packswb_message, packswb_message_length
        print_mmx_reg_as_hex mm1     <i>; tisk hodnoty registru MM1</i>

        exit                         <i>; ukonceni procesu</i>


%include "hex2string.asm"
</pre>



<p><a name="k14"></a></p>
<h2 id="k14">14. Instrukční sada MMX: shrnutí</h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. Seznam všech popsaných instrukcí MMX</h2>

<table>
<tr><th> #</th><th>Instrukce</th><th>Stručný popis instrukce</th></tr>
<tr><td> 1</td><td>EMMS</td><td>inicializace subsystému MMX</td></tr>
<tr><td> 2</td><td>MOVQ</td><td>přesun 64bitového vektoru z&nbsp;paměti do registru MMX či naopak</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>PADDB</td><td>součet dvou osmiprvkových vektorů, každý prvek má šířku osmi bitů</td></tr>
<tr><td> 4</td><td>PADDW</td><td>součet dvou čtyřprvkových vektorů, každý prvek má šířku šestnácti bitů</td></tr>
<tr><td> 5</td><td>PADDD</td><td>součet dvou dvouprvkových vektorů, každý prvek má šířku 32 bitů</td></tr>
<tr><td> 6</td><td>PADDQ</td><td>součet dvou 64bitových celých čísel</td></tr>
<tr><td> 7</td><td>PADDSB</td><td>součet dvou osmiprvkových vektorů se saturací, každý prvek má šířku osmi bitů se znaménkem</td></tr>
<tr><td> 8</td><td>PADDUSB</td><td>součet dvou osmiprvkových vektorů se saturací, každý prvek má šířku osmi bitů bez znaménka</td></tr>
<tr><td> 9</td><td>PADDSW</td><td>součet dvou čtyřprvkových vektorů se saturací, každý prvek má šířku šestnácti bitů se znaménkem</td></tr>
<tr><td>10</td><td>PADDUSW</td><td>součet dvou čtyřprvkových vektorů se saturací, každý prvek má šířku šestnácti bitů bez znaménka</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>PSUBB</td><td>rozdíl dvou osmiprvkových vektorů, každý prvek má šířku osmi bitů</td></tr>
<tr><td>12</td><td>PSUBW</td><td>rozdíl dvou čtyřprvkových vektorů, každý prvek má šířku šestnácti bitů</td></tr>
<tr><td>13</td><td>PSUBD</td><td>rozdíl dvou dvouprvkových vektorů, každý prvek má šířku 32 bitů</td></tr>
<tr><td>14</td><td>PSUBSB</td><td>rozdíl dvou osmiprvkových vektorů se saturací, každý prvek má šířku osmi bitů se znaménkem</td></tr>
<tr><td>15</td><td>PSUBUSB</td><td>rozdíl dvou osmiprvkových vektorů se saturací, každý prvek má šířku osmi bitů bez znaménka</td></tr>
<tr><td>16</td><td>PSUBSW</td><td>rozdíl dvou čtyřprvkových vektorů se saturací, každý prvek má šířku šestnácti bitů se znaménkem</td></tr>
<tr><td>17</td><td>PSUBUSW</td><td>rozdíl dvou čtyřprvkových vektorů se saturací, každý prvek má šířku šestnácti bitů bez znaménka</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>PMULLW</td><td>součin dvou čtyřprvkových vektorů, každý prvek má šířku šestnácti bitů, uloží se spodních 16 bitů výsledků</td></tr>
<tr><td>19</td><td>PMULHW</td><td>součin dvou čtyřprvkových vektorů, každý prvek má šířku šestnácti bitů, uloží se horních 16 bitů výsledků</td></tr>
<tr><td>20</td><td>PMADDWD</td><td>kombinace součinu prvků vektorů se součtem mezivýsledků</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>PAND</td><td>logická operace AND s&nbsp;64bitovými hodnotami</td></tr>
<tr><td>22</td><td>POR</td><td>logická operace OR s&nbsp;64bitovými hodnotami</td></tr>
<tr><td>23</td><td>PXOR</td><td>logická operace XOR s&nbsp;64bitovými hodnotami</td></tr>
<tr><td>24</td><td>PANDN</td><td>logická operace AND NOT s&nbsp;64bitovými hodnotami</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>25</td><td>PSLLW</td><td>logický posun doleva vektorů s&nbsp;prvky typu 16bitové slovo</td></tr>
<tr><td>26</td><td>PSLLD</td><td>logický posun doleva vektorů s&nbsp;prvky typu 32bitové slovo</td></tr>
<tr><td>27</td><td>PSLLQ</td><td>logický posun doleva 64bitové hodnoty</td></tr>
<tr><td>28</td><td>PSRLW</td><td>logický posun doprava vektorů s&nbsp;prvky typu 16bitové slovo</td></tr>
<tr><td>29</td><td>PSRLD</td><td>logický posun doprava vektorů s&nbsp;prvky typu 32bitové slovo</td></tr>
<tr><td>30</td><td>PSRLQ</td><td>logický posun doprava 64bitové hodnoty</td></tr>
<tr><td>31</td><td>PSRAW</td><td>aritmetický posun doprava vektorů s&nbsp;prvky typu 16bitové slovo</td></tr>
<tr><td>32</td><td>PSRAD</td><td>aritmetický posun doprava vektorů s&nbsp;prvky typu 32bitové slovo</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>PCMPEQB</td><td>porovnání vektorů s&nbsp;prvky typu 8bitové slovo na relaci &bdquo;je rovno&ldquo;</td></tr>
<tr><td>34</td><td>PCMPEQW</td><td>porovnání vektorů s&nbsp;prvky typu 16bitové slovo na relaci &bdquo;je rovno&ldquo;</td></tr>
<tr><td>35</td><td>PCMPEQD</td><td>porovnání vektorů s&nbsp;prvky typu 32bitové slovo na relaci &bdquo;je rovno&ldquo;</td></tr>
<tr><td>36</td><td>PCMPGTB</td><td>porovnání vektorů s&nbsp;prvky typu 8bitové slovo na relaci &bdquo;větší než&ldquo;</td></tr>
<tr><td>37</td><td>PCMPGTW</td><td>porovnání vektorů s&nbsp;prvky typu 16bitové slovo na relaci &bdquo;větší než&ldquo;</td></tr>
<tr><td>38</td><td>PCMPGTD</td><td>porovnání vektorů s&nbsp;prvky typu 32bitové slovo na relaci &bdquo;větší než&ldquo;</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
</table>



<p><a name="k16"></a></p>
<h2 id="k16">16. Instrukční sada 3DNow! aneb odpověď firmy AMD na instrukční sadu MMX</h2>

<p>Rozšíření instrukční sady procesorů z&nbsp;rodiny <i>x86</i> o instrukce
<i>MMX</i> bylo v&nbsp;době jejího uvedení poměrně razantní &ndash; jednalo se
v&nbsp;podstatě o největší změnu této architektury od vzniku procesoru
<i>80386</i>, tj.&nbsp;od zavedení virtuálního režimu, 32bitových registrů a
plnohodnotných operací s&nbsp;32 bitovými hodnotami. Z&nbsp;hlediska
společnosti <i>Intel</i> se samozřejmě jednalo o nemalou konkurenční výhodu
získanou  nad firmami <i>AMD</i>, <i>Cyrix</i> či <i>IDT</i>, zejména poté, co
se podpora <i>MMX</i> operací zařadila do některých programových produktů
(například do zásuvných modulů Photoshopu, ale například i do přehrávačů MP3,
ovladačů SW modemů atd.). Ovšem tehdejší druhý největší výrobce čipů <i>x86</i>
&ndash; společnost <i>AMD</i> &ndash; o necelé dva roky později představila
vlastní rozšíření instrukční sady, které bylo označeno poměrně nabubřelým
názvem <i>3DNow!</i> (včetně onoho vykřičníku na konci). Toto rozšíření
instrukční sady bylo poprvé implementováno v&nbsp;mikroprocesoru <i>AMD
K6-2</i> a později též v&nbsp;<i>AMD K6-3</i> a <i>Athlon</i>.</p>

<img src="http://i.iinfo.cz/images/311/pc158-13.png" width="200" height="150" alt="&#160;" />
<p><i>Obrázek 1: Mikroprocesor AMD K6-2 implementující mj.&nbsp;i instrukční
sadu 3DNow!</i></p>

<p>Inženýři z&nbsp;firmy <i>AMD</i> použili a současně i rozšířili instrukční
sadu <i>MMX</i> o několik nových celočíselných instrukcí, ovšem hlavní
konkurenční výhodou (a to poměrně podstatnou) byly nové instrukce pro práci
s&nbsp;čísly reprezentovanými 32bitovými hodnotami s&nbsp;plovoucí řádovou
čárkou. Kromě toho bylo do instrukční sady <i>3DNow!</i> přidáno několik
operací sloužících pro přečtení bloku dat do vyrovnávací paměti (<i>cache</i>).
U některých typů procesorů (<i>Athlon</i>) bylo navíc možné určit, zda je blok
dat načtených do vyrovnávací paměti určený pro čtení nebo i pro zápis (pokud se
jednalo o blok určený pro zápis, byl mu nastaven atribut <i>modified</i>).</p>

<img src="http://i.iinfo.cz/images/161/pc159-5.jpg" width="242" height="208" alt="&#160;" />
<p><i>Obrázek 2: Další pohled na mikroprocesor AMD K6-2 s&nbsp;implementací
instrukční sady 3DNow!.</i></p>

<p><div class="rs-tip-major">Poznámka: 3DNow! tak můžeme považovat za první
krok k&nbsp;rozšířením SSE a AVX.</div></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Datové typy instrukcí 3DNow!</h2>

<p>Již <a href="#k16">v&nbsp;předchozí kapitole</a> jsme se zmínili o tom, že
instrukční sada <i>3DNow!</i> byla vlastně v&nbsp;první řadě rozšířením
instrukční sady <i>MMX</i>. To mj.&nbsp;znamená, že byly podporovány všechny
datové typy <i>MMX</i>, tj.&nbsp;osmiprvkové vektory s&nbsp;osmibitovými
hodnotami, čtyřprvkové vektory se 16bitovými hodnotami, dvouprvkové vektory
s&nbsp;32bitovými hodnotami a konečně i 64bitové skalární hodnoty.</p>

<p>Navíc však bylo možné &ndash; a do jisté míry přelomové &ndash; do
64bitových registrů MMX uložit dvojici 32bitových čísel s&nbsp;plovoucí řádovou
čárkou odpovídající formátu <i>single precision</i> definovaném v&nbsp;normě
<i>IEEE 754</i>. Zavedení tohoto nového typu dvouprvkového vektoru s&nbsp;sebou
přinášelo dvě výhody: mnohé FP operace se mohly provádět paralelně (součet
prvků vektorů atd.) a navíc bylo velmi snadné kombinovat původní celočíselné
MMX operace s&nbsp;operacemi nad reálnými čísly. To nebylo u původní
implementace <i>MMX</i> snadné, protože se muselo provádět přepínání mezi
činností matematického koprocesoru a jednotkou MMX.</p>

<a href="http://i.iinfo.cz/images/161/pc159-6.png"><img src="http://i.iinfo.cz/images/161/pc159-6-prev.png" width="370" height="232" alt="&#160;" /></a>
<p><i>Obrázek 3: Mikroprocesor Intel Atom sice implementuje instrukční sadu
MMX, ale nikoli 3Dnow!, což je ovšem kompenzováno podporou SSE a SSE2.</i></p>

<p>V&nbsp;případě instrukční sady <i>3DNow!</i> se toto přepínání provádět
nemuselo (pokud tedy nebylo nutné pracovat s&nbsp;hodnotami s&nbsp;dvojitou či
rozšířenou přesností, tj.&nbsp;s&nbsp;datovými typy <i>double</i> a
<i>extended</i>), navíc měli programátoři k&nbsp;dispozici konverzní instrukce
<strong>PI2FD</strong> a <strong>PF2ID</strong> pro převod celočíselných
32bitových hodnot na hodnoty s&nbsp;plovoucí řádovou čárkou (se zaokrouhlením)
a naopak. Mimochodem: pro přepnutí kontextu mezi FPU operacemi a MMX/3DNow!
operacemi bylo možné použít instrukci <strong>FEMMS</strong> pro rychlé
přepnutí kontextu. Tato operace je rychlejší, než původní instrukce
<strong>EMMS</strong> ze sady <i>MMX</i> (tu jsme použili), ovšem po přepnutí
je obsah pracovních registrů nedefinovaný (což většinou nevadí).</p>

<a href="http://i.iinfo.cz/images/161/pc159-7.png"><img src="http://i.iinfo.cz/images/161/pc159-7-prev.png" width="370" height="75" alt="&#160;" /></a>
<p><i>Obrázek 4: Uložení dvou 32bitových čísel s&nbsp;plovoucí řádovou čárkou
v&nbsp;64bitovém registru.<br />
(Zdroj: 3Dnow! Technology Manual, AMD Inc.)</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Vektorové instrukce definované v&nbsp;rozšíření 3DNow!</h2>

<p>Všechny vektorové instrukce provádějící operace s&nbsp;32bitovými
numerickými hodnotami s&nbsp;plovoucí řádovou čárkou, které jsou implementovány
v&nbsp;instrukční sadě <i>3DNow!</i>, jsou vypsány v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Instrukce</th><th>Popis</th></tr>
<tr><td> 1</td><td>PI2FD</td><td>převod 32bitových celočíselných hodnot na FP hodnoty</td></tr>
<tr><td> 2</td><td>PF2ID</td><td>převod 32bitových FP hodnot na celočíselné hodnoty</td></tr>
<tr><td> 3</td><td>PFCMPGE</td><td>porovnání na relaci &bdquo;větší nebo rovno&ldquo;</td></tr>
<tr><td> 4</td><td>PFCMPGT</td><td>porovnání na relaci &bdquo;větší než&ldquo;</td></tr>
<tr><td> 5</td><td>PFCMPEQ</td><td>porovnání na relaci &bdquo;rovnost&ldquo;</td></tr>
<tr><td> 6</td><td>PFACC</td><td>součet obou prvků zdrojového registru i obou prvků cílového registru</td></tr>
<tr><td> 7</td><td>PFADD</td><td>součet dvou dvouprvkových vektorů</td></tr>
<tr><td> 8</td><td>PFSUB</td><td>rozdíl dvou dvouprvkových vektorů</td></tr>
<tr><td> 9</td><td>PFSUBR</td><td>rozdíl dvou dvouprvkových vektorů s&nbsp;prohozením operandů</td></tr>
<tr><td>10</td><td>PFMIN</td><td>výpočet minima (vždy mezi příslušnými prvky vektorů)</td></tr>
<tr><td>11</td><td>PFMAX</td><td>výpočet maxima (vždy mezi příslušnými prvky vektorů)</td></tr>
<tr><td>12</td><td>PFMUL</td><td>součin dvou dvouprvkových vektorů</td></tr>
<tr><td>13</td><td>PFRCP</td><td>výpočet aproximace převrácené hodnoty</td></tr>
<tr><td>14</td><td>PFRSQRT</td><td>výpočet aproximace druhé odmocniny</td></tr>
<tr><td>15</td><td>PFRCPIT1</td><td>první krok přesného výpočtu převrácené hodnoty</td></tr>
<tr><td>16</td><td>PFRSQIT1</td><td>první krok přesného výpočtu druhé odmocniny</td></tr>
<tr><td>17</td><td>PFRCPIT2</td><td>další krok výpočtu převrácené hodnoty či druhé odmocniny</td></tr>
</table>

<a href="http://i.iinfo.cz/images/161/pc159-8.png"><img src="http://i.iinfo.cz/images/161/pc159-8-prev.png" width="370" height="119" alt="&#160;" /></a>
<p><i>Obrázek 5: Formát 32bitových čísel s&nbsp;plovoucí řádovou čárkou
podporovaný instrukcemi 3Dnow!)<br />
(Zdroj: 3Dnow! Technology Manual, AMD Inc.)</i></p>

<p>Při provádění porovnání prvků dvou vektorů, tj.&nbsp;při provádění instrukcí
<strong>PFCMPGE</strong>, <strong>PFCMPGT</strong> a <strong>PFCMPEQ</strong>,
je výsledkem této operace nový dvouprvkový vektor obsahující pouze hodnoty
0x0000_0000 a 0xFFFF_FFFF. U porovnávání se navíc nerozlišuje kladná a záporná
nula.</p>

<p>Pravděpodobně nejzajímavější je poslední pětice instrukcí
<strong>PFRCP</strong>, <strong>PFRSQRT</strong>, <strong>PFRCPIT1</strong>,
<strong>PFRSQIT1</strong> a <strong>PFRCPIT2</strong>. Instrukce
<strong>PFRCP</strong> slouží k&nbsp;rychlému výpočtu převrácené hodnoty, ovšem
pouze s&nbsp;přesností na 14 bitů. Pokud tato přesnost není dostatečná (pro
mnoho účelů však stačí), musí být použita následující sekvence:</p>

<pre>
PFRCP      <i>; první přiblížení k výsledku s přesností 14 bitů</i>
PFCPIT1    <i>; první krok přesného výpočtu převrácené hodnoty</i>
PFRCPIT2   <i>; druhý krok přesného výpočtu převrácené hodnoty</i>
</pre>

<p>Důležité je, že první přiblížení se k&nbsp;výsledku je provedeno velmi
rychle, konkrétně pouze ve dvou taktech, protože se využívá tabulky výsledků
umístěné v&nbsp;paměti ROM. Teprve další dvojice instrukcí využívá pomalejší
iterační výpočet. Podobný princip platí i pro rychlý vs.&nbsp;přesný výpočet
druhé odmocniny (a opět &ndash; mnohdy nám postačuje jen první přiblížení,
nikoli přesný výsledek).</p>

<a href="http://i.iinfo.cz/images/161/pc159-9.png"><img src="http://i.iinfo.cz/images/161/pc159-9-prev.png" width="370" height="96" alt="&#160;" /></a>
<p><i>Obrázek 6: Subrutina pro operaci dělení s&nbsp;24 bitovou přesností
implementovanou pomocí instrukcí 3Dnow!.<br />
(Zdroj: 3Dnow! Technology Manual, AMD Inc.)</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů s&nbsp;256 barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm</a></td></tr>
<tr><td>63</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>64</td><td>vga_gfx_mode_dac_1.asm</td><td>využití DAC (neočekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm</a></td></tr>
<tr><td>65</td><td>vga_gfx_mode_dac_2.asm</td><td>využití DAC (očekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>vga_640x480_putpixel.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
<tr><td>67</td><td>vga_320x200_putpixel_1.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm</a></td></tr>
<tr><td>68</td><td>vga_320x200_putpixel_2.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (rychlejší varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>69</td><td>vga_gfx_mode_dac_3.asm</td><td>přímé využití DAC v&nbsp;grafickém režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>vga_gfx_mode_unchained_step_1.asm</td><td>zobrazení barevných pruhů v&nbsp;režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm</a></td></tr>
<tr><td>71</td><td>vga_gfx_mode_unchained_step_2.asm</td><td>vypnutí zřetězení bitových rovin a změna způsobu adresování pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm</a></td></tr>
<tr><td>72</td><td>vga_gfx_mode_unchained_step_3.asm</td><td>vykreslení barevných pruhů do vybraných bitových rovin</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>73</td><td>vga_gfx_mode_320x400.asm</td><td>nestandardní grafický režim s&nbsp;rozlišením 320&times;400 pixelů a 256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm</a></td></tr>
<tr><td>74</td><td>vga_320x200_image.asm</td><td>zobrazení rastrového obrázku ve standardním grafickém režimu 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm</a></td></tr>
<tr><td>75</td><td>vga_320x200_unchained_image_1.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm</a></td></tr>
<tr><td>76</td><td>vga_320x200_unchained_image_2.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm</a></td></tr>
<tr><td>77</td><td>vga_320x400_unchained_image.asm</td><td>zobrazení rastrového obrázku v&nbsp;nestandardním režimu 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>78</td><td>vga_vertical_scroll_1.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm</a></td></tr>
<tr><td>79</td><td>vga_vertical_scroll_2.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm</a></td></tr>
<tr><td>80</td><td>vga_split_screen_1.asm</td><td>režim split-screen a scrolling, nefunční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm</a></td></tr>
<tr><td>81</td><td>vga_split_screen_2.asm</td><td>režim split-screen a scrolling, plně funkční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm</a></td></tr>
<tr><td>82</td><td>vga_horizontal_scroll_1.asm</td><td>horizontální scrolling bez rozšíření počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm</a></td></tr>
<tr><td>83</td><td>vga_horizontal_scroll_2.asm</td><td>horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm</a></td></tr>
<tr><td>84</td><td>vga_horizontal_scroll_3.asm</td><td>jemný horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>85</td><td>vga_320x240_image.asm</td><td>nastavení grafického režimu Mode-X, načtení a vykreslení obrázku, scrolling</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>io.asm</td><td>knihovna maker pro I/O operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>87</td><td>vga_lib.asm</td><td>knihovna maker a podprogramů pro programování karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm</a></td></tr>
<tr><td>88</td><td>vga_320x240_lib.asm</td><td>nastavení grafického režimu Mode-X, tentokrát knihovními funkcemi</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>89</td><td>vga_bitblt_1.asm</td><td>první (naivní) implementace operace <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm</a></td></tr>
<tr><td>90</td><td>vga_bitblt_2.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm</a></td></tr>
<tr><td>91</td><td>vga_bitblt_3.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro čtení i zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm</a></td></tr>
<tr><td>92</td><td>vga_bitblt_4.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace makry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm</a></td></tr>
<tr><td>93</td><td>vga_bitblt_5.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace podprogramem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>94</td><td>vga_bitblt_rotate.asm</td><td>zápisový režim s&nbsp;rotací bajtu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm</a></td></tr>
<tr><td>95</td><td>vga_bitblt_fast.asm</td><td>rychlá korektní 32bitová operace typu <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm</a></td></tr>
<tr><td>96</td><td>vga_320x400_bitblt_1.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (neúplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm</a></td></tr>
<tr><td>97</td><td>vga_320x400_bitblt_2.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (úplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm</a></td></tr>
<tr><td>98</td><td>vga_write_modes_1.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis bez úpravy latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm</a></td></tr>
<tr><td>99</td><td>vga_write_modes_2.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis s&nbsp;modifikací latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm</a></td></tr>
<tr><td>100</td><td>vga_write_modes_3.asm</td><td>volitelné zápisové režimy grafické karty VGA, cílená modifikace latche vzorkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>101</td><td>instruction_jump.asm</td><td>použití instrukce <strong>JMP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm</a></td></tr>
<tr><td>102</td><td>instruction_jnz.asm</td><td>použití instrukce <strong>JNZ</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm</a></td></tr>
<tr><td>103</td><td>instruction_jz_jmp.asm</td><td>použití instrukcí <strong>JZ</strong> a <strong>JMP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm</a></td></tr>
<tr><td>104</td><td>instruction_loop.asm</td><td>použití instrukce <strong>LOOP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>105</td><td>instruction_template.asm</td><td>šablona všech následujících demonstračních příkladů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm</a></td></tr>
<tr><td>106</td><td>instruction_print_hex.asm</td><td>tisk osmibitové hexadecimální hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm</a></td></tr>
<tr><td>107</td><td>instruction_xlat.asm</td><td>využití instrukce <strong>XLAT</strong> pro získání tisknutelné hexadecimální cifry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td>instruction_daa.asm</td><td>operace součtu s&nbsp;využitím binární i BCD aritmetiky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm</a></td></tr>
<tr><td>109</td><td>instruction_daa_sub.asm</td><td>instrukce <strong>DAA</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm</a></td></tr>
<tr><td>110</td><td>instruction_das.asm</td><td>instrukce <strong>DAS</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm</a></td></tr>
<tr><td>111</td><td>instruction_aaa.asm</td><td>korekce výsledku na jedinou BCD cifru operací <strong>AAA</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm</a></td></tr>
<tr><td>112</td><td>instruction_mul.asm</td><td>ukázka výpočtu součinu dvou osmibitových hodnot</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm</a></td></tr>
<tr><td>113</td><td>instruction_aam.asm</td><td>BCD korekce po výpočtu součinu instrukcí <strong>AAM</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>114</td><td>instruction_stosb.asm</td><td>blokový zápis dat instrukcí <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm</a></td></tr>
<tr><td>115</td><td>instruction_rep_stosb.asm</td><td>opakované provádění instrukce <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm</a></td></tr>
<tr><td>116</td><td>instruction_lodsb.asm</td><td>čtení dat instrukcí <strong>LODSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm</a></td></tr>
<tr><td>117</td><td>instruction_movsb.asm</td><td>přenos jednoho bajtu instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm</a></td></tr>
<tr><td>118</td><td>instruction_rep_movsb.asm</td><td>blokový přenos po bajtech instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm</a></td></tr>
<tr><td>119</td><td>instruction_rep_scas.asm</td><td>vyhledávání v&nbsp;řetězci instrukcí <strong>SCAS</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>120</td><td>vga_320x200_image_0B.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm</a></td></tr>
<tr><td>121</td><td>vga_320x200_image_64kB.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0xffff</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm</a></td></tr>
<tr><td>122</td><td>vga_320x200_image_movsb.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm</a></td></tr>
<tr><td>123</td><td>vga_320x200_image_movsw.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm</a></td></tr>
<tr><td>124</td><td>vga_320x200_image_movsd.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSD</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm</a></td></tr>
<tr><td>125</td><td>vga_320x200_image_movsb_forward.asm</td><td>blokový přenos překrývajících se bloků paměti (zvyšující se adresy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm</a></td></tr>
<tr><td>126</td><td>vga_320x200_image_movsb_backward_1.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, nekorektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm</a></td></tr>
<tr><td>127</td><td>vga_320x200_image_movsb_backward_2.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, korektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>128</td><td>sound_bell.asm</td><td>přehrání zvuku pomocí tisku ASCII znaku BELL</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm</a></td></tr>
<tr><td>129</td><td>sound_beep.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm</a></td></tr>
<tr><td>130</td><td>sound_play_pitch.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru, použití maker</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>131</td><td>sound_opl2_basic.asm</td><td>přehrání komorního A na OPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm</a></td></tr>
<tr><td>132</td><td>sound_opl2_table.asm</td><td>přehrání komorního A na OPL2, použití tabulky s&nbsp;hodnotami registrů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>133</td><td>sound_opl2_table_2.asm</td><td>přepis tabulky s&nbsp;obsahy registrů pro přehrání komorního A</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm</a></td></tr>
<tr><td>134</td><td>sound_key_on.asm</td><td>přímé ovládání bitu KEY ON mezerníkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm</a></td></tr>
<tr><td>135</td><td>sound_adsr.asm</td><td>nastavení obálky pro tón přehrávaný prvním kanálem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm</a></td></tr>
<tr><td>136</td><td>sound_modulation.asm</td><td>řízení frekvence modulátoru klávesami 1 a 0</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>137</td><td>keyboard_basic.asm</td><td>přímá práce s&nbsp;klávesnicí IBM PC</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>138</td><td>sound_stereo_opl2.asm</td><td>stereo zvuk v&nbsp;konfiguraci DualOPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm</a></td></tr>
<tr><td>139</td><td>sound_opl2_multichannel.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), delší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm</a></td></tr>
<tr><td>140</td><td>sound_opl2_multichannel_2.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), kratší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm</a></td></tr>
<tr><td>141</td><td>sound_opl3_stereo_1.asm</td><td>stereo výstup na OPL3 (v&nbsp;kompatibilním režimu)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm</a></td></tr>
<tr><td>142</td><td>sound_opl3_stereo_2.asm</td><td>stereo výstup na OPL3 (v&nbsp;režimu OPL3)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm</a></td></tr>
<tr><td>143</td><td>sound_opl3_multichannel.asm</td><td>vícekanálový zvuk na OPL3 (klávesy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>144</td><td>sound_opl3_waveform_1.asm</td><td>interaktivní modifikace tvaru vlny u prvního operátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm</a></td></tr>
<tr><td>145</td><td>sound_opl3_waveform_2.asm</td><td>oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm</a></td></tr>
<tr><td>146</td><td>sound_opl3_waveform_3.asm</td><td>vliv tvaru vln na zvukový kanál s&nbsp;FM syntézou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm</a></td></tr>
<tr><td>147</td><td>sound_opl3_waveform_4.asm</td><td>modifikace tvaru vlny nosné vlny i modulátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm</a></td></tr>
<tr><td>148</td><td>sound_opl3_4operators_1.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm</a></td></tr>
<tr><td>149</td><td>sound_opl3_4operators_2.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>150</td><td>timer_basic.asm</td><td>základní obsluha přerušení od časovače/čítače</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_basic.asm</a></td></tr>
<tr><td>151</td><td>timer_restore.asm</td><td>obnovení původní obsluhy přerušení při ukončování aplikace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore.asm</a></td></tr>
<tr><td>152</td><td>timer_restore_better_structure.asm</td><td>refaktoring předchozího demonstračního příkladu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_restore_better_structure.asm</a></td></tr>
<tr><td>153</td><td>timer_faster_clock.asm</td><td>zrychlení čítače na 100 přerušení za sekundu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/timer_faster_clock.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>154</td><td>instruction_push_imm.asm</td><td>instrukce <strong>PUSH</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_imm.asm</a></td></tr>
<tr><td>155</td><td>instruction_imul_imm.asm</td><td>instrukce <strong>IMUL</strong> s&nbsp;konstantou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_imul_imm.asm</a></td></tr>
<tr><td>156</td><td>instruction_into_1.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_1.asm</a></td></tr>
<tr><td>157</td><td>instruction_into_2.asm</td><td>instrukce <strong>INTO</strong> s&nbsp;obsluhou přerušení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_into_2.asm</a></td></tr>
<tr><td>158</td><td>instruction_bound_1.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_1.asm</a></td></tr>
<tr><td>159</td><td>instruction_bound_2.asm</td><td>instrukce <strong>BOUND</strong> s&nbsp;obsluhou přerušení (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bound_2.asm</a></td></tr>
<tr><td>160</td><td>vga_320x200_putpixel_286.asm</td><td>instrukce bitového posunu s&nbsp;konstantou větší než 1</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_286.asm</a></td></tr>
<tr><td>161</td><td>instruction_push_pop.asm</td><td>instrukce <strong>PUSH</strong> a <strong>POP</strong> se všemi pracovními registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>162</td><td>instruction_push_pop_B.asm</td><td>instrukce s&nbsp;novými segmentovými registry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_push_pop_B.asm</a></td></tr>
<tr><td>163</td><td>instruction_near_jz_jmp.asm</td><td>blízké skoky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_near_jz_jmp.asm</a></td></tr>
<tr><td>164</td><td>instruction_bsf.asm</td><td>nová instrukce <strong>BSF</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsf.asm</a></td></tr>
<tr><td>165</td><td>instruction_bsr.asm</td><td>nová instrukce <strong>BSR</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_bsr.asm</a></td></tr>
<tr><td>166</td><td>instruction_add_32bit.asm</td><td>32bitový součet</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_add_32bit.asm</a></td></tr>
<tr><td>167</td><td>instruction_inc_32bit.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;šestnáctibitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit.asm</a></td></tr>
<tr><td>168</td><td>instruction_inc_32bit_B.asm</td><td>32bitová instrukce <strong>INC</strong> v&nbsp;32bitovém režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_inc_32bit_B.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>169</td><td>ems_status.asm</td><td>zjištění stavu (emulace) paměti EMS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_status.asm</a></td></tr>
<tr><td>170</td><td>ems_total_mem.asm</td><td>získání celkové kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_total_mem.asm</a></td></tr>
<tr><td>171</td><td>ems_free_mem.asm </td><td>získání volné kapacity paměti EMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ems_free_mem.asm</a></td></tr>
<tr><td>172</td><td>xms_free_mem.asm </td><td>získání volné kapacity paměti XMS v&nbsp;blocích</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/xms_free_mem.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>173</td><td>vga_320x200_short_address_1.asm</td><td>blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_1.asm</a></td></tr>
<tr><td>174</td><td>vga_320x200_short_address_2.asm</td><td>rozepsaný blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_2.asm</a></td></tr>
<tr><td>175</td><td>vga_320x200_short_address_3.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_3.asm</a></td></tr>
<tr><td>176</td><td>vga_320x200_short_address_4.asm</td><td>přenos nelze provést přes hranici offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_short_address_4.asm</a></td></tr>
<tr><td>177</td><td>vga_320x200_long_address_1.asm</td><td>32bitový blokový přenos</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_1.asm</a></td></tr>
<tr><td>178</td><td>vga_320x200_long_address_2.asm</td><td>rozepsaný 32bitový blokový přenos provedený v&nbsp;rámci prostoru segmentu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_2.asm</a></td></tr>
<tr><td>179</td><td>vga_320x200_long_address_3.asm</td><td>přístup do obrazové paměti přes segment 0x0000 a 32bitový offset</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_3.asm</a></td></tr>
<tr><td>180</td><td>vga_320x200_long_address_4.asm</td><td>otestování, jak lze přenášet data s&nbsp;využitím 32bitového offsetu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_long_address_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>181</td><td>print_msw.asm</td><td>přečtení a zobrazení obsahu speciálního registru MSW</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_msw.asm</a></td></tr>
<tr><td>182</td><td>print_cr0.asm</td><td>přečtení a zobrazení obsahu speciálního registru <strong>CR0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print_cr0.asm</a></td></tr>
<tr><td>183</td><td>prot_mode_286.asm</td><td>přechod do chráněného režimu na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_286.asm</a></td></tr>
<tr><td>184</td><td>prot_mode_386.asm</td><td>přechod do chráněného režimu na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_386.asm</a></td></tr>
<tr><td>185</td><td>prot_mode_back_to_real_mode_286.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80286</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_286.asm</a></td></tr>
<tr><td>186</td><td>prot_mode_back_to_real_mode_386.asm</td><td>přechod mezi reálným režimem a chráněným režimem i zpět na čipech Intel 80386</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_back_to_real_mode_386.asm</a></td></tr>
<tr><td>187</td><td>prot_mode_check.asm</td><td>test, zda se mikroprocesor již nachází v&nbsp;chráněném režimu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/prot_mode_check.asm</a></td></tr>
<tr><td>188</td><td>unreal_mode.asm</td><td>nastavení nereálného režimu (platné pro Intel 80386)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/unreal_mode.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>189</td><td>float32_constants.asm</td><td>vytištění základních FP konstant typu <i>single</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float32_constants.asm</a></td></tr>
<tr><td>190</td><td>float64_constants.asm</td><td>vytištění základních FP konstant typu <i>double</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/float64_constants.asm</a></td></tr>
<tr><td>191</td><td>fpu_arithmetic.asm</td><td>základní aritmetické operace prováděné matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_arithmetic.asm</a></td></tr>
<tr><td>192</td><td>fpu_divide_by_zero.asm</td><td>dělení nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_zero.asm</a></td></tr>
<tr><td>193</td><td>fpu_divide_by_neg_zero.asm </td><td>dělení záporné hodnoty nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero.asm</a></td></tr>
<tr><td>194</td><td>fpu_divide_by_neg_zero_2.asm </td><td>dělení hodnoty zápornou nulou matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_by_neg_zero_2.asm</a></td></tr>
<tr><td>195</td><td>fpu_divide_zero_by_zero.asm</td><td>výpočet 0/0 matematickým koprocesorem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_zero_by_zero.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>196</td><td>io.asm</td><td>pomocná makra pro komunikaci s&nbsp;DOSem a BIOSem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>197</td><td>print.asm</td><td>pomocná makra pro tisk FPU hodnot typu <i>single</i> a <i>double</i> v&nbsp;hexadecimálním tvaru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/print.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>198</td><td>fpu_divide.asm</td><td>operace podílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide.asm</a></td></tr>
<tr><td>199</td><td>fpu_divide_r.asm</td><td>operace podílu s&nbsp;prohozenými operandy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_divide_r.asm</a></td></tr>
<tr><td>200</td><td>fpu_sqrt.asm</td><td>výpočet druhé odmocniny</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt.asm</a></td></tr>
<tr><td>201</td><td>fpu_sqrt_neg_value.asm</td><td>výpočet druhé odmocniny ze záporné hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_sqrt_neg_value.asm</a></td></tr>
<tr><td>202</td><td>fpu_check.asm</td><td>detekce typu matematického koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_check.asm</a></td></tr>
<tr><td>203</td><td>fpu_compare.asm</td><td>porovnání dvou hodnot s&nbsp;vyhodnocením výsledku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_compare.asm</a></td></tr>
<tr><td>204</td><td>fpu_status_word.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word.asm</a></td></tr>
<tr><td>205</td><td>fpu_status_word_stack.asm</td><td>tisk obsahu stavového slova koprocesoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/fpu_status_word_stack.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>206</td><td>Makefile</td><td></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/Makefile">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/Makefile</a></td></tr>
<tr><td>207</td><td>hex2string.asm</td><td>subrutina pro převod 32bitové hexadecimální hodnoty na řetězec</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/hex2string.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/hex2string.asm</a></td></tr>
<tr><td>208</td><td>linux_macros.asm</td><td>pomocná makra pro tvorbu aplikací psaných v&nbsp;assembleru pro Linux</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/linux_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/linux_macros.asm</a></td></tr>
<tr><td>209</td><td>mmx_init.asm</td><td>inicializace subsystému MMX</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_init.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_init.asm</a></td></tr>
<tr><td>210</td><td>mmx_paddb_1.asm</td><td>zavolání MMX instrukce pro součet vektorů bajtů (bez přetečení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddb_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddb_1.asm</a></td></tr>
<tr><td>211</td><td>mmx_paddb_2.asm</td><td>zavolání MMX instrukce pro součet vektorů bajtů (s&nbsp;přetečením)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddb_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddb_2.asm</a></td></tr>
<tr><td>212</td><td>mmx_paddusb.asm</td><td>zavolání MMX instrukce pro součet vektorů bajtů se saturací</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddusb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddusb.asm</a></td></tr>
<tr><td>213</td><td>mmx_paddw.asm</td><td>zavolání MMX instrukce pro součet vektorů šestnáctibitových slov</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddw.asm</a></td></tr>
<tr><td>214</td><td>mmx_paddd.asm</td><td>zavolání MMX instrukce pro součet vektorů 32bitových slov</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddd.asm</a></td></tr>
<tr><td>215</td><td>mmx_paddq.asm</td><td>zavolání MMX instrukce pro součet 64bitových slov</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddq.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddq.asm</a></td></tr>
<tr><td>216</td><td>mmx_paddx.asm</td><td>porovnání operací součtu pro vektory s&nbsp;prvky různých typů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddx.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddx.asm</a></td></tr>
<tr><td>217</td><td>mmx_support.asm</td><td>zjištění, zda je MMX podporována</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_support.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_support.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>218</td><td>mmx_paddx_saturation.asm</td><td>součet osmiprvkových a čtyřprvkových vektorů se saturací</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddx_saturation.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_paddx_saturation.asm</a></td></tr>
<tr><td>219</td><td>mmx_psubx.asm</td><td>rozdíl vektorů s&nbsp;různým počtem a šířkou prvků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_psubx.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_psubx.asm</a></td></tr>
<tr><td>220</td><td>mmx_pmullw_1.asm</td><td>součin vektorů prvek po prvku se získáním spodních 16 bitů výsledků (varianta bez přetečení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmullw_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmullw_1.asm</a></td></tr>
<tr><td>221</td><td>mmx_pmullw_2.asm</td><td>součin vektorů prvek po prvku se získáním spodních 16 bitů výsledků (varianta s&nbsp;přetečením)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmullw_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmullw_2.asm</a></td></tr>
<tr><td>222</td><td>mmx_pmulhw.asm</td><td>součin vektorů prvek po prvku se získáním horních 16 bitů výsledků (varianta s&nbsp;přetečením)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmulhw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmulhw.asm</a></td></tr>
<tr><td>223</td><td>mmx_pmaddwd.asm</td><td>součin vektorů prvek po prvku, součet mezivýsledků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmaddwd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pmaddwd.asm</a></td></tr>
<tr><td>224</td><td>mmx_logical.asm</td><td>logické instrukce MMX</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_logical.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_logical.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>225</td><td>mmx_shift_left.asm</td><td>logické posuny prvků vektorů doleva</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_shift_left.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_shift_left.asm</a></td></tr>
<tr><td>226</td><td>mmx_shift_right.asm</td><td>logické posuny prvků vektorů doprava</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_shift_right.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_shift_right.asm</a></td></tr>
<tr><td>227</td><td>mmx_arithmetic_right.asm</td><td>aritmetické posuny prvků vektorů doprava</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_arithmetic_right.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_arithmetic_right.asm</a></td></tr>
<tr><td>228</td><td>mmx_cmpeq.asm</td><td>porovnání prvků vektorů na rovnost</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_cmpeq.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_cmpeq.asm</a></td></tr>
<tr><td>229</td><td>mmx_cmpgt.asm</td><td>porovnání prvků vektorů na relaci &bdquo;větší než&ldquo;</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_cmpgt.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_cmpgt.asm</a></td></tr>
<tr><td>230</td><td>mmx_unpack_bytes.asm</td><td>rozbalení bajtů z&nbsp;vektorů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_unpack_bytes.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_unpack_bytes.asm</a></td></tr>
<tr><td>231</td><td>mmx_unpack_words.asm</td><td>rozbalení slov z&nbsp;vektorů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_unpack_words.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_unpack_words.asm</a></td></tr>
<tr><td>232</td><td>mmx_unpack_dwords.asm</td><td>rozbalení dvojslov z&nbsp;vektorů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_unpack_dwords.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_unpack_dwords.asm</a></td></tr>
<tr><td>233</td><td>mmx_pack_into_bytes_1.asm</td><td>zabalení vektorů slov do vektoru bajtů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pack_into_bytes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pack_into_bytes_1.asm</a></td></tr>
<tr><td>234</td><td>mmx_pack_into_bytes_2.asm</td><td>řešení přetečení při zabalování vektorů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pack_into_bytes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-linux/mmx_pack_into_bytes_2.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

<li>Dune 2 - Roland MT-32 Soundtrack <br />
<a href="https://www.youtube.com/watch?v=kQADZeB-z8M">https://www.youtube.com/watch?v=kQADZeB-z8M</a>
</li>

<li>Interrupts<br />
<a href="https://wiki.osdev.org/Interrupts#Types_of_Interrupts">https://wiki.osdev.org/Interrupts#Types_of_Interrupts</a>
</li>

<li>Assembly8086SoundBlasterDmaSingleCycleMode<br />
<a href="https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm">https://github.com/leonardo-ono/Assembly8086SoundBlasterDmaSingleCycleMode/blob/master/sbsc.asm</a>
</li>

<li>Interrupts in 8086 microprocessor<br />
<a href="https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/">https://www.geeksforgeeks.org/interrupts-in-8086-microprocessor/</a>
</li>

<li>Interrupt Structure of 8086<br />
<a href="https://www.eeeguide.com/interrupt-structure-of-8086/">https://www.eeeguide.com/interrupt-structure-of-8086/</a>
</li>

<li>A20 line<br />
<a href="https://en.wikipedia.org/wiki/A20_line">https://en.wikipedia.org/wiki/A20_line</a>
</li>

<li>Extended memory<br />
<a href="https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)">https://en.wikipedia.org/wiki/Extended_memory#eXtended_Memory_Specification_(XMS)</a>
</li>

<li>Expanded memory<br />
<a href="https://en.wikipedia.org/wiki/Expanded_memory">https://en.wikipedia.org/wiki/Expanded_memory</a>
</li>

<li>Protected mode<br />
<a href="https://en.wikipedia.org/wiki/Protected_mode">https://en.wikipedia.org/wiki/Protected_mode</a>
</li>

<li>Virtual 8086 mode<br />
<a href="https://en.wikipedia.org/wiki/Virtual_8086_mode">https://en.wikipedia.org/wiki/Virtual_8086_mode</a>
</li>

<li>Unreal mode<br />
<a href="https://en.wikipedia.org/wiki/Unreal_mode">https://en.wikipedia.org/wiki/Unreal_mode</a>
</li>

<li>DOS memory management<br />
<a href="https://en.wikipedia.org/wiki/DOS_memory_management">https://en.wikipedia.org/wiki/DOS_memory_management</a>
</li>

<li>Upper memory area<br />
<a href="https://en.wikipedia.org/wiki/Upper_memory_area">https://en.wikipedia.org/wiki/Upper_memory_area</a>
</li>

<li>Removing the Mystery from SEGMENT : OFFSET Addressing<br />
<a href="https://thestarman.pcministry.com/asm/debug/Segments.html">https://thestarman.pcministry.com/asm/debug/Segments.html</a>
</li>

<li>Segment descriptor<br />
<a href="https://en.wikipedia.org/wiki/Segment_descriptor">https://en.wikipedia.org/wiki/Segment_descriptor</a>
</li>

<li>When using a 32-bit register to address memory in the real mode, contents of the register must never exceed 0000FFFFH. Why?<br />
<a href="https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the">https://stackoverflow.com/questions/45094696/when-using-a-32-bit-register-to-address-memory-in-the-real-mode-contents-of-the</a>
</li>

<li>A Brief History of Unreal Mode<br />
<a href="https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/">https://www.os2museum.com/wp/a-brief-history-of-unreal-mode/</a>
</li>

<li>Segment Limits<br />
<a href="https://wiki.osdev.org/Segment_Limits">https://wiki.osdev.org/Segment_Limits</a>
</li>

<li>How do 32 bit addresses in real mode work?<br />
<a href="https://forum.osdev.org/viewtopic.php?t=30642">https://forum.osdev.org/viewtopic.php?t=30642</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="https://github.com/tisnik/">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

