<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Programování zvukových karet s čipem OPL 3: modifikace tvaru vlny a zvukové kanály se čtyřmi operátory</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Programování zvukových karet s čipem OPL 3: modifikace tvaru vlny a zvukové kanály se čtyřmi operátory</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Programování zvukových karet s&nbsp;čipem OPL 3: modifikace tvaru vlny a zvukové kanály se čtyřmi operátory</a></p>
<p><a href="#k02">2. Tvary vln, které lze využít v&nbsp;čipech OPL2</a></p>
<p><a href="#k03">3. Tvary vln, které lze využít v&nbsp;čipech OPL3</a></p>
<p><a href="#k04">*** 4. Interaktivní modifikace tvaru vlny u prvního operátoru</a></p>
<p><a href="#k05">5. Úplný zdrojový kód dnešního prvního demonstračního příkladu</a></p>
<p><a href="#k06">6. Oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</a></p>
<p><a href="#k07">7. Úplný zdrojový kód dnešního druhého demonstračního příkladu</a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">9. Úplný zdrojový kód dnešního třetího demonstračního příkladu</a></p>
<p><a href="#k10">*** 10. Modifikace tvaru vlny nosné vlny i modulátoru</a></p>
<p><a href="#k11">*** 11. Úplný zdrojový kód dnešního čtvrtého demonstračního příkladu</a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">18. Příloha: skript pro vykreslení sedmi signálů generovaných oscilátory čipu OPL3</a></p>
<p><a href="#k19">19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Programování zvukových karet s&nbsp;čipem OPL 3: modifikace tvaru vlny a zvukové kanály se čtyřmi operátory</h2>

<p>Již popáté se <a
href="https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/">v&nbsp;seriálu
o tvorbě her a grafických dem na platformě IBM PC</a> vracíme k&nbsp;tématu
programování zvukových karet, které obsahují čipy OPL2, dvojici čipů OPL2 nebo
novější čip OPL3. Základy tvorby hudby s&nbsp;využitím OPL2 byly popsány
v&nbsp;článcích <a
href="https://www.root.cz/clanky/zvuky-a-hudba-na-platforme-ibm-pc-cip-opl2-aneb-yamaha-ym3812/">Zvuky
a hudba na platformě IBM PC: čip OPL2 aneb Yamaha YM3812</a> a <a
href="https://www.root.cz/clanky/zvuky-a-hudba-na-platforme-ibm-pc-slozitejsi-zvuky-s-opl2/">Zvuky
a hudba na platformě IBM PC: složitější zvuky s&nbsp;OPL2</a>, dalšímu vývoji
zvukových karet od OPL2 směrem k&nbsp;OPL3 jsme se věnovali v&nbsp;článku <a
href="https://www.root.cz/clanky/vyvoj-zvukovych-karet-pro-platformu-ibm-pc-po-vydani-karty-adlib/">Vývoj
zvukových karet pro platformu IBM PC po vydání karty AdLib</a> a <a
href="https://www.root.cz/clanky/programovani-zvukovych-karet-s-cipem-opl3-nebo-s-dvojici-cipu-opl2/">minule</a>
jsme si ukázali, jakým způsobem je možné využít dvě nové vlastnosti OPL3:
možnost tvorby stereo zvuku a taktéž využití osmnácti zvukových kanálů
s&nbsp;celkem 36 operátory.</p>

<p>Dnes si ukážeme další možnosti OPL3. V&nbsp;první řadě je vhodné prozkoumat,
jaké nové tvary vln (<i>waveform</i>) jsou dostupné a nesmíme zapomenout ještě
na mnohem zásadnější změnu &ndash; na možnost spojit některé zvukové kanály
takovým způsobem způsobem, aby se zde využily čtyři operátory a nikoli pouze
operátory dva. To, společně s&nbsp;výběrem AM či FM (resp.&nbsp;PM) syntézy a
taktéž s&nbsp;možností nastavení zpětné vazby značným způsobem rozšiřuje
možnosti čipů OPL3 (které navíc nebyly poměrně dlouho dobře využívány), i když
v&nbsp;oblasti profesionální hudby se používá ještě větší počet operátorů.
Například slavné klávesy Yamaha DX7 nabízely šest operátorů a celkem 32 jejich
kombinací (zde nazývaných &bdquo;algoritmy&ldquo;). K&nbsp;tomu se ovšem ještě
vrátíme později v&nbsp;článcích o MIDI.</p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Tvary vln, které lze využít v&nbsp;čipech OPL2</h2>

<p>Nejprve se na chvíli vraťme k&nbsp;čipům OPL2, které jsou interně jednodušší
a tím pádem i snadnější na pochopení. V&nbsp;těchto čipech mohl každý oscilátor
(v&nbsp;OPL2 jich bylo celkem osmnáct) generovat periodický signál odvozený od
klasické sinusovky. Podoba této sinusovky je uložena v&nbsp;ROM přímo na
hudebním čipu. Přesněji řečeno je zde uložena jen jedna čtvrtina sinusovky,
protože zbylé části lze snadno dopočítat zrcadlením okolo x-ové nebo y-ové osy
(navíc jsou hodnoty uloženy zlogaritmované, aby se snadněji násobily, to je
však interní vlastnost OPL2, s&nbsp;níž se přímo nesetkáme). Všechny čtyři
varianty signálu podporované OPL2 jsou zobrazeny na dalším obrázku:</p>

*** image ***
<p><i>Obrázek 1: Sinusová vlna.</i></p>

*** image ***
<p><i>Obrázek 2: Jen kladné půlvlny.</i></p>

<p>Tvary vlny bylo možné volit nastavením spodních dvou bitů registrů E0 až F5
(tedy skutečně pro každý operátor &ndash; nikoli pouze pro kanál).</p>

*** image ***
<p><i>Obrázek 3: Absolutní hodnota sinusovky.</i></p>

*** image ***
<p><i>Obrázek 4: Jen náběžné hrany sinusovky.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Tvary vln, které lze využít v&nbsp;čipech OPL3</h2>

<p>V&nbsp;čipech OPL3 se k&nbsp;původním čtyřem volitelným tvarům vln přidaly
ještě další čtyři tvary. Jedná se v&nbsp;první řadě o sinusovku upravenou
takovým způsobem, že nenulové jsou jen vlny ze sudých period a dále o absolutní
hodnoty tohoto průběhu:</p>

*** image ***
<p><i>Obrázek 5: Pouze sudé periody sinusovky.</i></p>

*** image ***
<p><i>Obrázek 6: Absolutní hodnota předešlého signálu.</i></p>

<p>Další dva tvary vln jsou zcela odlišné, protože se jedná o obdélníkový
signál (tak oblíbený ve starších čipech z&nbsp;éry osmibitových domácích
mikropočítačů a herních konzolí) a taktéž o signál, který zhruba odpovídá
derivaci obdélníkového signálu &ndash; záporný impuls následovaný kladným
impulsem (na rozdíl od skutečné derivace samozřejmě nejde o Diracovy
impulsy).</p>

*** image ***
<p><i>Obrázek 7: Obdélníkový průběh.</i></p>

<p>Samotný signál s&nbsp;derivací obdélníkového signálu ve skutečnosti vypadá
<a
href="https://moddingwiki.shikadi.net/wiki/File:OPL_Wave7_Digital.svg">následovně</a>.</p>

<p>Tvary vln, tedy opět výběr jednoho z&nbsp;osmi dostupných tvarů, se stále
provádí přes registry E0 až F5, kde nyní mají význam spodní tři bity a nejenom
bity dva.</p>

<p><div class="rs-tip-major">Poznámka: obrázky 1 až 7 byly vygenerovány
skriptem, který je ukázán <a href="#k18">v&nbsp;osmnácté
kapitole</a>.</div></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Interaktivní modifikace tvaru vlny u prvního operátoru</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. Úplný zdrojový kód dnešního prvního demonstračního příkladu</h2>

<p>Úplný zdrojový kód demonstračního příkladu umožňujícího interaktivní změnu
tvaru vlny pomocí kláves 1-8 vypadá následovně:</p>

<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL3.</i>
<i>; Prepinani tvaru vlny pro generovani zvuku.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>; Ovladani KEY ON mezernikem</i>
<i>; Tvar vlny je rizen klavesami 1 az 8</i>
<i>; Ukonceni aplikace stiskem ESC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sounds_opl3_waveform_1.com sounds_opl3_waveform_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sounds_opl3_waveform_1.com sounds_opl3_waveform_1.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karet s cipem OPL2 nebo OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
&nbsp;
<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
OPL3_MODE_ENABLE      equ 0x05  <i>; vyssi port!!!</i>
&nbsp;
<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8
&nbsp;
<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15
&nbsp;
<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61
&nbsp;
<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_8       equ KEY_1 + 8
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit 0</strong>
        ret
%endmacro
&nbsp;
<i>; makro pro zapis do registru OPL2</i>
%macro <strong>write_opl_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>
&nbsp;
        mov  si, tone1                   <i>; zacatek tabulky</i>
        call write_table_to_opl2         <i>; zapis obsahu tabulky do OPL2</i>
&nbsp;
    	in  al, PPI_PORT_B               <i>; port B s rizenim zarizeni</i>
        or  al, 0b1000000                <i>; nastaveni bitu cislo 7 na jednicku</i>
        out PPI_PORT_B, al               <i>; zapis zpet na port B</i>
&nbsp;
<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
        cmp al, KEY_SPACE                <i>; test na stisk mezerniku</i>
        jne .next_test_1                 <i>; neni stisknut -&gt; preskok</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x32    <i>; povoleni KEY ON bitu</i>
        jmp .opak
<strong>.next_test_1</strong>:
        cmp al, KEY_SPACE + KEY_RELEASE  <i>; test na pusteni mezerniku</i>
        jne .next_test_2                 <i>; neni pusten -&gt; dalsi test</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x12    <i>; zakaz KEY ON bitu</i>
        jmp .opak
<strong>.next_test_2</strong>:
        cmp al, KEY_1                    <i>; test na numericke klavesy</i>
        jb  .next_test_3                 <i>; hodnota "pod" kodem klavesy 1</i>
        cmp al, KEY_8
        ja  .next_test_3                 <i>; hodnota "nad" kodem klavesy 8</i>
        mov bl, al                       <i>; makro prepisuje AL -&gt; nemuzeme ho primo pouzit</i>
        sub bl, KEY_1
        write_opl_register CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT, bl
        jmp .opak
<strong>.next_test_3</strong>:
        cmp al, KEY_ESC                  <i>; test stisknute klavesy ESC</i>
        jne .opak                        <i>; neni stisknuta? -&gt; zkusme znovu</i>
&nbsp;
        exit
&nbsp;
<strong>write_table_to_opl2</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl2         <i>; muzeme prejit na dalsi registr</i>
&nbsp;
&nbsp;
<strong>tone1</strong>:  <i>; tabulka s tonem pro prvni kanal</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x00  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0xf0  <i>; modulator: pomaly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xf0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT,     0x00  <i>; standardni sinus</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
        db CHANNEL_1 + OPL_KEY_ON,                     0x12  <i>; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence</i>
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
&nbsp;
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al
&nbsp;
        ret
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</h2>

<p>V&nbsp;případě, že jste si předchozí demonstrační příklad skutečně přeložili
a vyzkoušeli, pravděpodobně jste zjistili, že tóny po stisku kláves 1 a 5 jsou
totožné. Totéž platí pro klávesy 2 a 6 atd. Je tomu tak z&nbsp;toho důvodu, že
po resetu je čip OPL3 nastaven do režimu zpětné kompatibility s&nbsp;čipem
OPL2, což omezuje jak nastavení sterea (což jsme viděli minule), tak i možnost
využití třetího bitu v&nbsp;registrech E0 až F5 &ndash; význam tudíž mají jen
nejnižší dva bity. Aby bylo možné vybrat i další čtyři tvary vln, je nutné se
přepnout do režimu kompatibilního s&nbsp;OPL3:</p>

<pre>
        write_opl_high_register OPL3_MODE_ENABLE, 1
</pre>

<p>Pro tento účel slouží následující makro:</p>

<pre>
<i>; makro pro zapis do "vyssiho" registru OPL3</i>
%macro <strong>write_opl_high_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro
</pre>

<p>To využívá subrutinu pro zápis do vybraného vyššího registru OPL3:</p>

<pre>
<strong>perform_write_to_opl_high_register</strong>:
        <i>; zapis do vybraneho "vyssiho" registru OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_HIGH_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        mov al, ah                 <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_HIGH_DATA
        out dx, al
&nbsp;
        ret
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Úplný zdrojový kód dnešního druhého demonstračního příkladu</h2>

<p>Opravená varianta demonstračního příkladu, který nyní umožní skutečně vybrat
jednu z&nbsp;osmi dostupných tvarů vln, vypadá následovně:</p>

<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL3.</i>
<i>; Prepnuti do rezimu OPL3.</i>
<i>; Prepinani tvaru vlny pro generovani zvuku.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>; Ovladani KEY ON mezernikem</i>
<i>; Tvar vlny je rizen klavesami 1 az 8</i>
<i>; Ukonceni aplikace stiskem ESC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sounds_opl3_waveform_2.com sounds_opl3_waveform_2.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sounds_opl3_waveform_2.com sounds_opl3_waveform_2.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karet s cipem OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
OPL_HIGH_ADDRESS      equ 0x222
OPL_HIGH_DATA         equ 0x223
&nbsp;
<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
OPL3_MODE_ENABLE      equ 0x05  <i>; vyssi port!!!</i>
&nbsp;
<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8
&nbsp;
<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15
&nbsp;
<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61
&nbsp;
<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_8       equ KEY_1 + 8
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit 0</strong>
        ret
%endmacro
&nbsp;
<i>; makro pro zapis do registru OPL2 nebo OPL3</i>
%macro <strong>write_opl_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro
&nbsp;
<i>; makro pro zapis do "vyssiho" registru OPL3</i>
%macro <strong>write_opl_high_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>
&nbsp;
        write_opl_high_register OPL3_MODE_ENABLE, 1
&nbsp;
        mov  si, tone1                   <i>; zacatek tabulky</i>
        call write_table_to_opl3         <i>; zapis obsahu tabulky do OPL3</i>
&nbsp;
    	in  al, PPI_PORT_B               <i>; port B s rizenim zarizeni</i>
        or  al, 0b1000000                <i>; nastaveni bitu cislo 7 na jednicku</i>
        out PPI_PORT_B, al               <i>; zapis zpet na port B</i>
&nbsp;
<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
        cmp al, KEY_SPACE                <i>; test na stisk mezerniku</i>
        jne .next_test_1                 <i>; neni stisknut -&gt; preskok</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x32    <i>; povoleni KEY ON bitu</i>
        jmp .opak
<strong>.next_test_1</strong>:
        cmp al, KEY_SPACE + KEY_RELEASE  <i>; test na pusteni mezerniku</i>
        jne .next_test_2                 <i>; neni pusten -&gt; dalsi test</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x12    <i>; zakaz KEY ON bitu</i>
        jmp .opak
<strong>.next_test_2</strong>:
        cmp al, KEY_1                    <i>; test na numericke klavesy</i>
        jb  .next_test_3                 <i>; hodnota "pod" kodem klavesy 1</i>
        cmp al, KEY_8
        ja  .next_test_3                 <i>; hodnota "nad" kodem klavesy 8</i>
        mov bl, al                       <i>; makro prepisuje AL -&gt; nemuzeme ho primo pouzit</i>
        sub bl, KEY_1
        write_opl_register CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT, bl
        jmp .opak
<strong>.next_test_3</strong>:
        cmp al, KEY_ESC                  <i>; test stisknute klavesy ESC</i>
        jne .opak                        <i>; neni stisknuta? -&gt; zkusme znovu</i>
&nbsp;
        exit
&nbsp;
<strong>write_table_to_opl3</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         <i>; muzeme prejit na dalsi registr</i>
&nbsp;
&nbsp;
<strong>tone1</strong>:  <i>; tabulka s tonem pro prvni kanal</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x00  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0xf0  <i>; modulator: pomaly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xf0  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT,     0x00  <i>; standardni sinus</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
        db CHANNEL_1 + OPL_KEY_ON,                     0x12  <i>; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence</i>
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2 nebo OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al
&nbsp;
        ret
&nbsp;
&nbsp;
<strong>perform_write_to_opl_high_register</strong>:
        <i>; zapis do vybraneho "vyssiho" registru OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_HIGH_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        mov al, ah                 <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_HIGH_DATA
        out dx, al
&nbsp;
        ret
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Úplný zdrojový kód dnešního třetího demonstračního příkladu</h2>

<p>Dnešní třetí demonstrační příklad, který je odvozen od příkladu druhého
(pouze se změnily hodnoty některých registrů s&nbsp;tvary obálky atd.), vypadá
následovně:</p>

<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL3.</i>
<i>; Prepnuti do rezimu OPL3.</i>
<i>; Prepinani tvaru vlny pro generovani zvuku.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>; Vetsi zpetna vazba (feedback).</i>
<i>; Ovladani KEY ON mezernikem</i>
<i>; Tvar vlny je rizen klavesami 1 az 8</i>
<i>; Ukonceni aplikace stiskem ESC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sounds_opl3_waveform_3.com sounds_opl3_waveform_3.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sounds_opl3_waveform_3.com sounds_opl3_waveform_3.asm</i>
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; registry karet s cipem OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
OPL_HIGH_ADDRESS      equ 0x222
OPL_HIGH_DATA         equ 0x223
&nbsp;
<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
OPL3_MODE_ENABLE      equ 0x05  <i>; vyssi port!!!</i>
&nbsp;
<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8
&nbsp;
<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15
&nbsp;
<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61
&nbsp;
<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_8       equ KEY_1 + 8
&nbsp;
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
&nbsp;
<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit 0</strong>
        ret
%endmacro
&nbsp;
<i>; makro pro zapis do registru OPL2 nebo OPL3</i>
%macro <strong>write_opl_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro
&nbsp;
<i>; makro pro zapis do "vyssiho" registru OPL3</i>
%macro <strong>write_opl_high_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro
&nbsp;
<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>
&nbsp;
<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>
&nbsp;
        write_opl_high_register OPL3_MODE_ENABLE, 1
&nbsp;
        mov  si, tone1                   <i>; zacatek tabulky</i>
        call write_table_to_opl3         <i>; zapis obsahu tabulky do OPL3</i>
&nbsp;
    	in  al, PPI_PORT_B               <i>; port B s rizenim zarizeni</i>
        or  al, 0b1000000                <i>; nastaveni bitu cislo 7 na jednicku</i>
        out PPI_PORT_B, al               <i>; zapis zpet na port B</i>
&nbsp;
<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
        cmp al, KEY_SPACE                <i>; test na stisk mezerniku</i>
        jne .next_test_1                 <i>; neni stisknut -&gt; preskok</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x32    <i>; povoleni KEY ON bitu</i>
        jmp .opak
<strong>.next_test_1</strong>:
        cmp al, KEY_SPACE + KEY_RELEASE  <i>; test na pusteni mezerniku</i>
        jne .next_test_2                 <i>; neni pusten -&gt; dalsi test</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x12    <i>; zakaz KEY ON bitu</i>
        jmp .opak
<strong>.next_test_2</strong>:
        cmp al, KEY_1                    <i>; test na numericke klavesy</i>
        jb  .next_test_3                 <i>; hodnota "pod" kodem klavesy 1</i>
        cmp al, KEY_8
        ja  .next_test_3                 <i>; hodnota "nad" kodem klavesy 8</i>
        mov bl, al                       <i>; makro prepisuje AL -&gt; nemuzeme ho primo pouzit</i>
        sub bl, KEY_1
        write_opl_register CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT, bl
        jmp .opak
<strong>.next_test_3</strong>:
        cmp al, KEY_ESC                  <i>; test stisknute klavesy ESC</i>
        jne .opak                        <i>; neni stisknuta? -&gt; zkusme znovu</i>
&nbsp;
        exit
&nbsp;
<strong>write_table_to_opl3</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         <i>; muzeme prejit na dalsi registr</i>
&nbsp;
&nbsp;
<strong>tone1</strong>:  <i>; tabulka s tonem pro prvni kanal</i>
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni modulatoru: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x00  <i>; uroven vystupu 40 dB</i>
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0x41  <i>; modulator: pomaly nastup zvuku + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x7f  <i>; urovne sustain a release pro modulator</i>
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xa2  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT,     0x00  <i>; standardni sinus</i>
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
        db CHANNEL_1 + OPL_KEY_ON,                     0x12  <i>; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence</i>
        db 0, 0                                              <i>; zarazka</i>
&nbsp;
&nbsp;
<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2 nebo OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al
&nbsp;
        ret
&nbsp;
&nbsp;
<strong>perform_write_to_opl_high_register</strong>:
        <i>; zapis do vybraneho "vyssiho" registru OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_HIGH_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al
&nbsp;
        mov al, ah                 <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_HIGH_DATA
        out dx, al
&nbsp;
        ret
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Modifikace tvaru vlny nosné vlny i modulátoru</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Úplný zdrojový kód dnešního čtvrtého demonstračního příkladu</h2>

<pre>
<i>; Prehrani zakladniho tonu na kartach s cipem OPL3.</i>
<i>; Prepnuti do rezimu OPL3.</i>
<i>; Prepinani tvaru vlny pro generovani zvuku.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>; Vetsi zpetna vazba (feedback).</i>
<i>; Ovladani KEY ON mezernikem</i>
<i>; Tvar vlny prvniho operatoru je rizen klavesami 1 az 8</i>
<i>; Tvar vlny druheho operatoru je rizen klavesami Q az I</i>
<i>; Ukonceni aplikace stiskem ESC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sounds_opl3_waveform_4.com sounds_opl3_waveform_4.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sounds_opl3_waveform_4.com sounds_opl3_waveform_4.asm</i>

<i>;-----------------------------------------------------------------------------</i>

BITS 16         ; 16bitovy vystup pro DOS
CPU 8086        ; specifikace pouziteho instrukcniho souboru

 
<i>;-----------------------------------------------------------------------------</i>

<i>; registry karet s cipem OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
OPL_HIGH_ADDRESS      equ 0x222
OPL_HIGH_DATA         equ 0x223

<i>; ridici registry OPL2</i>
OPL_TEST_LSI          equ 0x01
OPL_TIMER_1           equ 0x02
OPL_TIMER_2           equ 0x03
OPL_TIMER_CTRL        equ 0x04
OPL_KBSPLIT           equ 0x08
OPL_AMP_VIBRATO_EG    equ 0x20
OPL_LEVEL             equ 0x40
OPL_ATTACK_DECAY      equ 0x60
OPL_SUSTAIN_RELEASE   equ 0x80
OPL_FREQUENCY_LOW     equ 0xa0
OPL_KEY_ON            equ 0xb0
OPL_AM_VIBRATO_RHYTHM equ 0xbd
OPL_FEEDBACK          equ 0xc0
OPL_WAVE_SELECT       equ 0xe0
OPL3_MODE_ENABLE      equ 0x05  ; vyssi port!!!

<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8

<i>; offsety pro jednotlive operatory</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15

<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61

<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_8       equ KEY_1 + 8
KEY_Q       equ 0x10
KEY_W       equ 0x11
KEY_E       equ 0x12
KEY_R       equ 0x13
KEY_T       equ 0x14
KEY_Y       equ 0x15
KEY_U       equ 0x16
KEY_I       equ 0x17


<i>;-----------------------------------------------------------------------------</i>

<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit 0</strong>
        ret
%endmacro

<i>; makro pro zapis do registru OPL2 nebo OPL3</i>
%macro <strong>write_opl_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro

<i>; makro pro zapis do "vyssiho" registru OPL3</i>
%macro <strong>write_opl_high_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro

<i>;-----------------------------------------------------------------------------</i>
org  0x100        ; zacatek kodu pro programy typu COM (vzdy se zacina na 256)

<strong>start</strong>:
        push cs
        pop  ds                          ; DS==CS

        write_opl_high_register OPL3_MODE_ENABLE, 1

        mov  si, tone1                   ; zacatek tabulky
        call write_table_to_opl3         ; zapis obsahu tabulky do OPL3

    	in  al, PPI_PORT_B               ; port B s rizenim zarizeni
        or  al, 0b1000000                ; nastaveni bitu cislo 7 na jednicku
        out PPI_PORT_B, al               ; zapis zpet na port B

<strong>.opak</strong>:
        in  al, PPI_PORT_A               ; cteni stisknute klavesy
        cmp al, KEY_SPACE                ; test na stisk mezerniku
        jne .next_test_1                 ; neni stisknut -&gt; preskok
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x32    ; povoleni KEY ON bitu
        jmp .opak
<strong>.next_test_1</strong>:
        cmp al, KEY_SPACE + KEY_RELEASE  ; test na pusteni mezerniku
        jne .next_test_2                 ; neni pusten -&gt; dalsi test
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x12    ; zakaz KEY ON bitu
        jmp .opak
<strong>.next_test_2</strong>:
        cmp al, KEY_1                    ; test na numericke klavesy
        jb  .next_test_3                 ; hodnota "pod" kodem klavesy 1
        cmp al, KEY_8
        ja  .next_test_3                 ; hodnota "nad" kodem klavesy 8
        mov bl, al                       ; makro prepisuje AL -&gt; nemuzeme ho primo pouzit
        sub bl, KEY_1
        write_opl_register CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT, bl
        jmp .opak
<strong>.next_test_3</strong>:
        cmp al, KEY_Q                    ; test na dalsi radu klaves
        jb  .next_test_4                 ; hodnota "pod" kodem klavesy Q
        cmp al, KEY_I
        ja  .next_test_4                 ; hodnota "nad" kodem klavesy I
        mov bl, al                       ; makro prepisuje AL -&gt; nemuzeme ho primo pouzit
        sub bl, KEY_Q
        write_opl_register CHANNEL_1_OPERATOR_2 + OPL_WAVE_SELECT, bl
        jmp .opak
<strong>.next_test_4</strong>:
        cmp al, KEY_ESC                  ; test stisknute klavesy ESC
        jne .opak                        ; neni stisknuta? -&gt; zkusme znovu

        exit

<strong>write_table_to_opl3</strong>:
        lodsb                            ; nacist bajt z tabulky (cislo registru)
        or  al, al                       ; test na nulu
        jnz .write_register
        ret                              ; dosahli jsme konce tabulky
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            ; nacist dalsi bajt z tabulky (hodnota registru)
        xchg al, ah                      ; podprogram vyzaduje opacne poradi AL, AH
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         ; muzeme prejit na dalsi registr


<strong>tone1</strong>:  ; tabulka s tonem pro prvni kanal
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni modulatoru: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x00  ; uroven vystupu 40 dB
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0x41  ; modulator: pomaly nastup zvuku + pomale doznivani
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x7f  ; urovne sustain a release pro modulator
        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni nosne: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x00  ; nastaveni urovne vystupu nosne na 47 dB
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xa2  ; nosna: rychly nastup + pomale doznivani
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x77  ; urovne sustain a release pro nosnou
        db CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT,     0x00  ; standardni sinus
        db CHANNEL_1_OPERATOR_2 + OPL_WAVE_SELECT,     0x00  ; standardni sinus
        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  ; frekvence zvuku (komorni A = 440 Hz)
        db CHANNEL_1 + OPL_KEY_ON,                     0x12  ; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence
        db 0, 0                                              ; zarazka


<strong>perform_write_to_opl_register</strong>:
        ; zapis do vybraneho registru OPL2 nebo OPL3
        ; AL - registr
        ; AH - hodnota
        mov dx, OPL_ADDRESS   ; vyber registru pro modifikaci
        out dx, al

        mov al, ah            ; zapis hodnoty do vybraneho registru
        mov dx, OPL_DATA
        out dx, al

        ret


<strong>perform_write_to_opl_high_register</strong>:
        ; zapis do vybraneho "vyssiho" registru OPL3
        ; AL - registr
        ; AH - hodnota
        mov dx, OPL_HIGH_ADDRESS   ; vyber registru pro modifikaci
        out dx, al

        mov al, ah                 ; zapis hodnoty do vybraneho registru
        mov dx, OPL_HIGH_DATA
        out dx, al

        ret
</pre>



<pre>
<i>; Prehrani tonu s vyuzitim 4 operatoru na kartach s cipem OPL3.</i>
<i>; Prepnuti do rezimu OPL3.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>; Vetsi zpetna vazba (feedback).</i>
<i>; Ovladani KEY ON mezernikem</i>
<i>; Ukonceni aplikace stiskem ESC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sounds_opl3_4operators_1.com sounds_opl3_4operators_1.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sounds_opl3_4operators_1.com sounds_opl3_4operators_1.asm</i>

<i>;-----------------------------------------------------------------------------</i>

BITS 16         <i>; 16bitovy vystup pro DOS</i>
CPU 8086        <i>; specifikace pouziteho instrukcniho souboru</i>

 
<i>;-----------------------------------------------------------------------------</i>

<i>; registry karet s cipem OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
OPL_HIGH_ADDRESS      equ 0x222
OPL_HIGH_DATA         equ 0x223

<i>; ridici registry OPL2</i>
OPL_TEST_LSI             equ 0x01
OPL_TIMER_1              equ 0x02
OPL_TIMER_2              equ 0x03
OPL_TIMER_CTRL           equ 0x04
OPL_KBSPLIT              equ 0x08
OPL_AMP_VIBRATO_EG       equ 0x20
OPL_LEVEL                equ 0x40
OPL_ATTACK_DECAY         equ 0x60
OPL_SUSTAIN_RELEASE      equ 0x80
OPL_FREQUENCY_LOW        equ 0xa0
OPL_KEY_ON               equ 0xb0
OPL_AM_VIBRATO_RHYTHM    equ 0xbd
OPL_FEEDBACK             equ 0xc0
OPL_WAVE_SELECT          equ 0xe0
OPL_FOUR_OPERATOR_ENABLE equ 0x04 ; vyssi port!!!
OPL3_MODE_ENABLE         equ 0x05 ; vyssi port!!!

<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8

<i>; offsety pro jednotlive operatory v rezimu dvou operatoru</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>

<i>; offsety pro jednotlive operatory v rezimu ctyr operatoru</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3  10  11  12</i>
<i>;  Operator 1    00  01  02  12  13  14</i>
<i>;  Operator 2    03  04  05  15  16  17</i>
<i>;  Operator 3    08  09  0a  18  19  1a</i>
<i>;  Operator 4    0b  0c  0d  1b  1c  1d</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3  10  11  12</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_1_OPERATOR_3 equ 0x08
CHANNEL_1_OPERATOR_4 equ 0x0b
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15

<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61

<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_2       equ 0x03
KEY_3       equ 0x04
KEY_4       equ 0x05


<i>;-----------------------------------------------------------------------------</i>

<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit 0</strong>
        ret
%endmacro

<i>; makro pro zapis do registru OPL2 nebo OPL3</i>
%macro <strong>write_opl_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro

<i>; makro pro zapis do "vyssiho" registru OPL3</i>
%macro <strong>write_opl_high_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro

<i>;-----------------------------------------------------------------------------</i>
org  0x100        <i>; zacatek kodu pro programy typu COM (vzdy se zacina na 256)</i>

<strong>start</strong>:
        push cs
        pop  ds                          <i>; DS==CS</i>

        write_opl_high_register OPL3_MODE_ENABLE, 1
        write_opl_high_register OPL_FOUR_OPERATOR_ENABLE, 0b00000001

        mov  si, tone1                   <i>; zacatek tabulky</i>
        call write_table_to_opl3         <i>; zapis obsahu tabulky do OPL3</i>

    	in  al, PPI_PORT_B               <i>; port B s rizenim zarizeni</i>
        or  al, 0b1000000                <i>; nastaveni bitu cislo 7 na jednicku</i>
        out PPI_PORT_B, al               <i>; zapis zpet na port B</i>

<strong>.opak</strong>:
        in  al, PPI_PORT_A               <i>; cteni stisknute klavesy</i>
        cmp al, KEY_SPACE                <i>; test na stisk mezerniku</i>
        jne .next_test_1                 <i>; neni stisknut -&gt; preskok</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x32    <i>; povoleni KEY ON bitu</i>
        jmp .opak
<strong>.next_test_1</strong>:
        cmp al, KEY_SPACE + KEY_RELEASE  <i>; test na pusteni mezerniku</i>
        jne .next_test_2                 <i>; neni pusten -&gt; dalsi test</i>
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x12    <i>; zakaz KEY ON bitu</i>
        jmp .opak
<strong>.next_test_2</strong>:
        cmp al, KEY_1
        jne .next_test_3
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110000 ; FM
        jmp .opak
<strong>.next_test_3</strong>:
        cmp al, KEY_2
        jne .next_test_4
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110001 ; AM
        jmp .opak
<strong>.next_test_4</strong>:
        cmp al, KEY_3
        jne .next_test_5
        write_opl_register CHANNEL_1 + OPL_FEEDBACK + 3, 0b00110000 ; FM
        jmp .opak
<strong>.next_test_5</strong>:
        cmp al, KEY_4
        jne .next_test_6
        write_opl_register CHANNEL_1 + OPL_FEEDBACK + 3, 0b00110001 ; AM
        jmp .opak
<strong>.next_test_6</strong>:
        cmp al, KEY_ESC                  <i>; test stisknute klavesy ESC</i>
        jne .opak                        <i>; neni stisknuta? -&gt; zkusme znovu</i>

        exit


<strong>write_table_to_opl3</strong>:
        lodsb                            <i>; nacist bajt z tabulky (cislo registru)</i>
        or  al, al                       <i>; test na nulu</i>
        jnz .write_register
        ret                              <i>; dosahli jsme konce tabulky</i>
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            <i>; nacist dalsi bajt z tabulky (hodnota registru)</i>
        xchg al, ah                      <i>; podprogram vyzaduje opacne poradi AL, AH</i>
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         <i>; muzeme prejit na dalsi registr</i>



        db CHANNEL_1_OPERATOR_4 + OPL_AMP_VIBRATO_EG,  0x01  <i>; nastaveni nosne: nasobeni frekvence jednickou</i>
        db CHANNEL_1_OPERATOR_4 + OPL_LEVEL,           0x00  <i>; nastaveni urovne vystupu nosne na 47 dB</i>
        db CHANNEL_1_OPERATOR_4 + OPL_ATTACK_DECAY,    0x44  <i>; nosna: rychly nastup + pomale doznivani</i>
        db CHANNEL_1_OPERATOR_4 + OPL_SUSTAIN_RELEASE, 0x77  <i>; urovne sustain a release pro nosnou</i>
        db CHANNEL_1_OPERATOR_4 + OPL_WAVE_SELECT,     0x00  <i>; standardni sinus</i>

        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  <i>; frekvence zvuku (komorni A = 440 Hz)</i>
        db CHANNEL_1 + OPL_KEY_ON,                     0x12  <i>; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence</i>

        db CHANNEL_1 + OPL_FEEDBACK,                   0b00110000  <i>; volba AM-FM</i>
        db CHANNEL_1 + OPL_FEEDBACK + 3,               0b00110000  <i>; volba AM-FM</i>
        db 0, 0                                              <i>; zarazka</i>


<strong>perform_write_to_opl_register</strong>:
        <i>; zapis do vybraneho registru OPL2 nebo OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al

        mov al, ah            <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_DATA
        out dx, al

        ret


<strong>perform_write_to_opl_high_register</strong>:
        <i>; zapis do vybraneho "vyssiho" registru OPL3</i>
        <i>; AL - registr</i>
        <i>; AH - hodnota</i>
        mov dx, OPL_HIGH_ADDRESS   <i>; vyber registru pro modifikaci</i>
        out dx, al

        mov al, ah                 <i>; zapis hodnoty do vybraneho registru</i>
        mov dx, OPL_HIGH_DATA
        out dx, al

        ret
</pre>


<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<pre>
<i>; Prehrani tonu s vyuzitim 4 operatoru na kartach s cipem OPL3.</i>
<i>; Prepnuti do rezimu OPL3.</i>
<i>; Pojmenovani registru OPL3.</i>
<i>; Nastaveni pomaleho doznivani u vsech ctyr obalek.</i>
<i>; Ovladani KEY ON mezernikem</i>
<i>; Ukonceni aplikace stiskem ESC</i>
<i>;</i>
<i>;</i>
<i>; Tento demonstracni priklad je pouzity v serialu o programovani</i>
<i>; grafickych dem a her na PC v DOSu:</i>
<i>; https://www.root.cz/serialy/vyvoj-her-a-grafickych-dem-pro-platformu-pc/</i>
<i>;</i>
<i>;</i>
<i>; preklad pomoci:</i>
<i>;     nasm -f bin -o sounds_opl3_4operators_2.com sounds_opl3_4operators_2.asm</i>
<i>;</i>
<i>; nebo pouze:</i>
<i>;     nasm -o sounds_opl3_4operators_2.com sounds_opl3_4operators_2.asm</i>

<i>;-----------------------------------------------------------------------------</i>

BITS 16         ; 16bitovy vystup pro DOS
CPU 8086        ; specifikace pouziteho instrukcniho souboru

 
<i>;-----------------------------------------------------------------------------</i>

<i>; registry karet s cipem OPL3</i>
OPL_ADDRESS           equ 0x220
OPL_DATA              equ 0x221
OPL_HIGH_ADDRESS      equ 0x222
OPL_HIGH_DATA         equ 0x223

<i>; ridici registry OPL2</i>
OPL_TEST_LSI             equ 0x01
OPL_TIMER_1              equ 0x02
OPL_TIMER_2              equ 0x03
OPL_TIMER_CTRL           equ 0x04
OPL_KBSPLIT              equ 0x08
OPL_AMP_VIBRATO_EG       equ 0x20
OPL_LEVEL                equ 0x40
OPL_ATTACK_DECAY         equ 0x60
OPL_SUSTAIN_RELEASE      equ 0x80
OPL_FREQUENCY_LOW        equ 0xa0
OPL_KEY_ON               equ 0xb0
OPL_AM_VIBRATO_RHYTHM    equ 0xbd
OPL_FEEDBACK             equ 0xc0
OPL_WAVE_SELECT          equ 0xe0
OPL_FOUR_OPERATOR_ENABLE equ 0x04 ; vyssi port!!!
OPL3_MODE_ENABLE         equ 0x05 ; vyssi port!!!

<i>; indexy kanalu</i>
CHANNEL_1 equ 0
CHANNEL_2 equ 1
CHANNEL_3 equ 2
CHANNEL_4 equ 3
CHANNEL_5 equ 4
CHANNEL_6 equ 5
CHANNEL_7 equ 6
CHANNEL_8 equ 7
CHANNEL_9 equ 8

<i>; offsety pro jednotlive operatory v rezimu dvou operatoru</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>
<i>;  Operator 1    00  01  02  08  09  0A  10  11  12</i>
<i>;  Operator 2    03  04  05  0B  0C  0D  13  14  15</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3   4   5   6   7   8   9</i>

<i>; offsety pro jednotlive operatory v rezimu ctyr operatoru</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3  10  11  12</i>
<i>;  Operator 1    00  01  02  12  13  14</i>
<i>;  Operator 2    03  04  05  15  16  17</i>
<i>;  Operator 3    08  09  0a  18  19  1a</i>
<i>;  Operator 4    0b  0c  0d  1b  1c  1d</i>
<i>; --------------------------------------------------</i>
<i>;  Channel        1   2   3  10  11  12</i>
CHANNEL_1_OPERATOR_1 equ 0x00
CHANNEL_1_OPERATOR_2 equ 0x03
CHANNEL_1_OPERATOR_3 equ 0x08
CHANNEL_1_OPERATOR_4 equ 0x0b
CHANNEL_2_OPERATOR_1 equ 0x01
CHANNEL_2_OPERATOR_2 equ 0x04
CHANNEL_3_OPERATOR_1 equ 0x02
CHANNEL_3_OPERATOR_2 equ 0x05
CHANNEL_4_OPERATOR_1 equ 0x08
CHANNEL_4_OPERATOR_2 equ 0x0b
CHANNEL_5_OPERATOR_1 equ 0x09
CHANNEL_5_OPERATOR_2 equ 0x0c
CHANNEL_6_OPERATOR_1 equ 0x0a
CHANNEL_6_OPERATOR_2 equ 0x0d
CHANNEL_7_OPERATOR_1 equ 0x10
CHANNEL_7_OPERATOR_2 equ 0x13
CHANNEL_8_OPERATOR_1 equ 0x11
CHANNEL_8_OPERATOR_2 equ 0x14
CHANNEL_9_OPERATOR_1 equ 0x12
CHANNEL_9_OPERATOR_2 equ 0x15

<i>; registry PPI</i>
PPI_PORT_A equ 0x60
PPI_PORT_B equ 0x61

<i>; kody klaves</i>
KEY_ESC     equ 0x01
KEY_SPACE   equ 0x39
KEY_RELEASE equ 0x80
KEY_1       equ 0x02
KEY_2       equ 0x03
KEY_3       equ 0x04
KEY_4       equ 0x05


<i>;-----------------------------------------------------------------------------</i>

<i>; ukonceni procesu a navrat do DOSu</i>
%macro <strong>exit 0</strong>
        ret
%endmacro

<i>; makro pro zapis do registru OPL2 nebo OPL3</i>
%macro <strong>write_opl_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_register
%endmacro

<i>; makro pro zapis do "vyssiho" registru OPL3</i>
%macro <strong>write_opl_high_register 2</strong>
        mov     al, %1
        mov     ah, %2
        call    perform_write_to_opl_high_register
%endmacro

<i>;-----------------------------------------------------------------------------</i>
org  0x100        ; zacatek kodu pro programy typu COM (vzdy se zacina na 256)

<strong>start</strong>:
        push cs
        pop  ds                          ; DS==CS

        write_opl_high_register OPL3_MODE_ENABLE, 1
        write_opl_high_register OPL_FOUR_OPERATOR_ENABLE, 0b00000001

        mov  si, tone1                   ; zacatek tabulky
        call write_table_to_opl3         ; zapis obsahu tabulky do OPL3

    	in  al, PPI_PORT_B               ; port B s rizenim zarizeni
        or  al, 0b1000000                ; nastaveni bitu cislo 7 na jednicku
        out PPI_PORT_B, al               ; zapis zpet na port B

<strong>.opak</strong>:
        in  al, PPI_PORT_A               ; cteni stisknute klavesy
        cmp al, KEY_SPACE                ; test na stisk mezerniku
        jne .next_test_1                 ; neni stisknut -&gt; preskok
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x32    ; povoleni KEY ON bitu
        jmp .opak
<strong>.next_test_1</strong>:
        cmp al, KEY_SPACE + KEY_RELEASE  ; test na pusteni mezerniku
        jne .next_test_2                 ; neni pusten -&gt; dalsi test
        write_opl_register CHANNEL_1 + OPL_KEY_ON, 0x12    ; zakaz KEY ON bitu
        jmp .opak
<strong>.next_test_2</strong>:
        cmp al, KEY_1
        jne .next_test_3
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110000 ; FM
        jmp .opak
<strong>.next_test_3</strong>:
        cmp al, KEY_2
        jne .next_test_4
        write_opl_register CHANNEL_1 + OPL_FEEDBACK, 0b00110001 ; AM
        jmp .opak
<strong>.next_test_4</strong>:
        cmp al, KEY_3
        jne .next_test_5
        write_opl_register CHANNEL_1 + OPL_FEEDBACK + 3, 0b00110000 ; FM
        jmp .opak
<strong>.next_test_5</strong>:
        cmp al, KEY_4
        jne .next_test_6
        write_opl_register CHANNEL_1 + OPL_FEEDBACK + 3, 0b00110001 ; AM
        jmp .opak
<strong>.next_test_6</strong>:
        cmp al, KEY_ESC                  ; test stisknute klavesy ESC
        jne .opak                        ; neni stisknuta? -&gt; zkusme znovu

        exit


<strong>write_table_to_opl3</strong>:
        lodsb                            ; nacist bajt z tabulky (cislo registru)
        or  al, al                       ; test na nulu
        jnz .write_register
        ret                              ; dosahli jsme konce tabulky
<strong>.write_register</strong>:
        mov ah, al
        lodsb                            ; nacist dalsi bajt z tabulky (hodnota registru)
        xchg al, ah                      ; podprogram vyzaduje opacne poradi AL, AH
        call perform_write_to_opl_register
        jmp  write_table_to_opl3         ; muzeme prejit na dalsi registr


<strong>tone1</strong>:  ; tabulka s tonem pro prvni kanal
        db CHANNEL_1_OPERATOR_1 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni modulatoru: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_1 + OPL_LEVEL,           0x00  ; uroven vystupu 40 dB
        db CHANNEL_1_OPERATOR_1 + OPL_ATTACK_DECAY,    0x31  ; modulator: pomaly nastup zvuku + pomale doznivani
        db CHANNEL_1_OPERATOR_1 + OPL_SUSTAIN_RELEASE, 0x71  ; urovne sustain a release pro modulator
        db CHANNEL_1_OPERATOR_1 + OPL_WAVE_SELECT,     0x00  ; standardni sinus

        db CHANNEL_1_OPERATOR_2 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni nosne: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_2 + OPL_LEVEL,           0x0f  ; nastaveni urovne vystupu nosne na 47 dB
        db CHANNEL_1_OPERATOR_2 + OPL_ATTACK_DECAY,    0xa1  ; nosna: rychly nastup + pomale doznivani
        db CHANNEL_1_OPERATOR_2 + OPL_SUSTAIN_RELEASE, 0x71  ; urovne sustain a release pro nosnou
        db CHANNEL_1_OPERATOR_2 + OPL_WAVE_SELECT,     0x00  ; standardni sinus

        db CHANNEL_1_OPERATOR_3 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni nosne: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_3 + OPL_LEVEL,           0x0f  ; nastaveni urovne vystupu nosne na 47 dB
        db CHANNEL_1_OPERATOR_3 + OPL_ATTACK_DECAY,    0xa1  ; nosna: rychly nastup + pomale doznivani
        db CHANNEL_1_OPERATOR_3 + OPL_SUSTAIN_RELEASE, 0x71  ; urovne sustain a release pro nosnou
        db CHANNEL_1_OPERATOR_3 + OPL_WAVE_SELECT,     0x00  ; standardni sinus

        db CHANNEL_1_OPERATOR_4 + OPL_AMP_VIBRATO_EG,  0x01  ; nastaveni nosne: nasobeni frekvence jednickou
        db CHANNEL_1_OPERATOR_4 + OPL_LEVEL,           0x00  ; nastaveni urovne vystupu nosne na 47 dB
        db CHANNEL_1_OPERATOR_4 + OPL_ATTACK_DECAY,    0x41  ; nosna: rychly nastup + pomale doznivani
        db CHANNEL_1_OPERATOR_4 + OPL_SUSTAIN_RELEASE, 0x77  ; urovne sustain a release pro nosnou
        db CHANNEL_1_OPERATOR_4 + OPL_WAVE_SELECT,     0x00  ; standardni sinus

        db CHANNEL_1 + OPL_FREQUENCY_LOW,              0x41  ; frekvence zvuku (komorni A = 440 Hz)
        db CHANNEL_1 + OPL_KEY_ON,                     0x12  ; zapnuti/povoleni zvuku + nastaveni oktavy a vyssich bitu frekvence

        db CHANNEL_1 + OPL_FEEDBACK,                   0b00110001  ; volba AM-FM
        db CHANNEL_1 + OPL_FEEDBACK + 3,               0b00110001  ; volba AM-FM
        db 0, 0                                              ; zarazka


<strong>perform_write_to_opl_register</strong>:
        ; zapis do vybraneho registru OPL2 nebo OPL3
        ; AL - registr
        ; AH - hodnota
        mov dx, OPL_ADDRESS   ; vyber registru pro modifikaci
        out dx, al

        mov al, ah            ; zapis hodnoty do vybraneho registru
        mov dx, OPL_DATA
        out dx, al

        ret


<strong>perform_write_to_opl_high_register</strong>:
        ; zapis do vybraneho "vyssiho" registru OPL3
        ; AL - registr
        ; AH - hodnota
        mov dx, OPL_HIGH_ADDRESS   ; vyber registru pro modifikaci
        out dx, al

        mov al, ah                 ; zapis hodnoty do vybraneho registru
        mov dx, OPL_HIGH_DATA
        out dx, al

        ret
</pre>


<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Příloha: skript pro vykreslení sedmi signálů generovaných oscilátory čipu OPL3</h2>

<p>Skript, kterým byly vykresleny obrázky 1 a 7 ve <a href="#k02">druhé</a> a
<a href="#k03">třetí</a> kapitole, vypadá následovně:</p>

<pre>
import numpy as np
import matplotlib.pyplot as plt
from scipy import signal
&nbsp;
&nbsp;
def <strong>plot</strong>(x, y, filename, title):
    <i># nastaveni os</i>
    plt.xticks(ticks=np.floor(np.linspace(0, 511, 9)))
    plt.yticks(ticks=np.linspace(-1.5, 1.5, 7))
    plt.xlim([0, 511])
    plt.ylim([-1.5, 1.5])
&nbsp;
    <i># vykresleni</i>
    plt.plot(x, y)
&nbsp;
    <i># mrizka a dalsi parametry grafu</i>
    plt.grid()
    plt.title(title)
&nbsp;
    <i># ulozeni na disk</i>
    plt.savefig(filename)
&nbsp;
    <i># zobrazeni</i>
    plt.show()
&nbsp;
    plt.clf()
&nbsp;
&nbsp;
<i># prubeh vlny</i>
x = np.linspace(0, 511, 200)
y = np.sin(x * 2 * np.pi / 256.0)
plot(x, y, "waveform_0.png", "Tvar vlny #0: sinus")
&nbsp;
<i># vynulovat zaporne hodnoty</i>
y[y &lt; 0] = 0
plot(x, y, "waveform_1.png", "Tvar vlny #1: polovicni sinus")
&nbsp;
<i># absolutni hodnoty</i>
y = np.abs(np.sin(x * 2 * np.pi / 256.0))
plot(x, y, "waveform_2.png", "Tvar vlny #2: absolutni hodnoty sinu")
&nbsp;
<i># vynulovat liché periody</i>
y = np.abs(np.sin(x * 2 * np.pi / 256.0))
y2 = signal.square(4 * np.pi / 256.0 * x)
y3 = y * y2
y3[y3 &lt; 0] = 0
plot(x, y3, "waveform_3.png", "Tvar vlny #3: pulsní varianta")
&nbsp;
y = np.sin(x * 4 * np.pi / 256.0)
y2 = signal.square(2 * np.pi / 256.0 * x)
y2[y2 &lt; 0] = 0
y3 = y * y2
plot(x, y3, "waveform_4.png", "Tvar vlny #4: jen sudé vlny")
&nbsp;
y = np.abs(np.sin(x * 4 * np.pi / 256.0))
y2 = signal.square(2 * np.pi / 256.0 * x)
y2[y2 &lt; 0] = 0
y3 = y * y2
plot(x, y3, "waveform_5.png", "Tvar vlny #5: jen sudé vlny, abs sin")
&nbsp;
<i># klasicky obdelnik</i>
y = signal.square(2 * np.pi / 256.0 * x)
plot(x, y, "waveform_6.png", "Tvar vlny #6: obdélník")
</pre>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Demonstrační příklady napsané v&nbsp;assembleru, které jsou určené pro
překlad s&nbsp;využitím assembleru <strong>NASM</strong>, byly uloženy do Git
repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/8bit-fame">https://github.com/tisnik/8bit-fame</a>.
Jednotlivé demonstrační příklady si můžete v&nbsp;případě potřeby stáhnout i
jednotlivě bez nutnosti klonovat celý (dnes již poměrně rozsáhlý)
repositář:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Stručný popis</th><th>Adresa</th></tr>
<tr><td> 1</td><td>hello.asm</td><td>program typu &bdquo;Hello world&ldquo; naprogramovaný v&nbsp;assembleru pro systém DOS</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello.asm</a></td></tr>
<tr><td> 2</td><td>hello_shorter.asm</td><td>kratší varianta výskoku z&nbsp;procesu zpět do DOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_shorter.asm</a></td></tr>
<tr><td> 3</td><td>hello_wait.asm</td><td>čekání na stisk klávesy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_wait.asm</a></td></tr>
<tr><td> 4</td><td>hello_macros.asm</td><td>realizace jednotlivých částí programu makrem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hello_macros.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>gfx_4_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_putpixel.asm</a></td></tr>
<tr><td> 6</td><td>gfx_6_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel.asm</a></td></tr>
<tr><td> 7</td><td>gfx_4_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 4</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_line.asm</a></td></tr>
<tr><td> 8</td><td>gfx_6_line.asm</td><td>vykreslení úsečky v&nbsp;grafickém režimu 6</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_line.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>gfx_6_fill_1.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_1.asm</a></td></tr>
<tr><td>10</td><td>gfx_6_fill_2.asm</td><td>vyplnění obrazovky v&nbsp;grafickém režimu, varianta s&nbsp;instrukcí <strong>LOOP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_2.asm</a></td></tr>
<tr><td>11</td><td>gfx_6_fill_3.asm</td><td>vyplnění obrazovky instrukcí <strong>REP STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_3.asm</a></td></tr>
<tr><td>12</td><td>gfx_6_fill_4.asm</td><td>vyplnění obrazovky, synchronizace vykreslování s&nbsp;paprskem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_fill_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>13</td><td>gfx_4_image_1.asm</td><td>vykreslení rastrového obrázku získaného z&nbsp;binárních dat, základní varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_1.asm</a></td></tr>
<tr><td>14</td><td>gfx_4_image_2.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_2.asm</a></td></tr>
<tr><td>15</td><td>gfx_4_image_3.asm</td><td>varianta vykreslení rastrového obrázku s&nbsp;využitím instrukce <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_3.asm</a></td></tr>
<tr><td>16</td><td>gfx_4_image_4.asm</td><td>korektní vykreslení všech sudých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_4.asm</a></td></tr>
<tr><td>17</td><td>gfx_4_image_5.asm</td><td>korektní vykreslení všech sudých i lichých řádků bitmapy</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>18</td><td>gfx_4_image_6.asm</td><td>nastavení barvové palety před vykreslením obrázku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_6.asm</a></td></tr>
<tr><td>19</td><td>gfx_4_image_7.asm</td><td>nastavení barvové palety před vykreslením obrázku, snížená intenzita barev</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_7.asm</a></td></tr>
<tr><td>20</td><td>gfx_4_image_8.asm</td><td>postupná změna barvy pozadí</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_4_image_8.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>21</td><td>gfx_6_putpixel_1.asm</td><td>vykreslení pixelu, základní varianta se 16bitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_1.asm</a></td></tr>
<tr><td>22</td><td>gfx_6_putpixel_2.asm</td><td>vykreslení pixelu, varianta s&nbsp;osmibitovým násobením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_2.asm</a></td></tr>
<tr><td>23</td><td>gfx_6_putpixel_3.asm</td><td>vykreslení pixelu, varianta bez násobení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_3.asm</a></td></tr>
<tr><td>24</td><td>gfx_6_putpixel_4.asm</td><td>vykreslení pixelu přes obrázek, nekorektní chování (přepis obrázku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_4.asm</a></td></tr>
<tr><td>25</td><td>gfx_6_putpixel_5.asm</td><td>vykreslení pixelu přes obrázek, korektní varianta pro bílé pixely</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/gfx_6_putpixel_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>26</td><td>cga_text_mode_1.asm</td><td>standardní textový režim s&nbsp;rozlišením 40&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_1.asm</a></td></tr>
<tr><td>27</td><td>cga_text_mode_3.asm</td><td>standardní textový režim s&nbsp;rozlišením 80&times;25 znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_3.asm</a></td></tr>
<tr><td>28</td><td>cga_text_mode_intensity.asm</td><td>změna významu nejvyššího bitu atributového bajtu: vyšší intenzita namísto blikání</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_intensity.asm</a></td></tr>
<tr><td>29</td><td>cga_text_mode_cursor.asm</td><td>změna tvaru textového kurzoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_cursor.asm</a></td></tr>
<tr><td>30</td><td>cga_text_gfx_1.asm</td><td>zobrazení &bdquo;rastrové mřížky&ldquo;: pseudografický režim 160&times;25 pixelů (interně textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_gfx_1.asm</a></td></tr>
<tr><td>31</td><td>cga_text_mode_char_height.asm</td><td>změna výšky znaků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_mode_char_height.asm</a></td></tr>
<tr><td>32</td><td>cga_text_160x100.asm</td><td>grafický režim 160&times;100 se šestnácti barvami (interně upravený textový režim)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/cga_text_160x100.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>33</td><td>hercules_text_mode_1.asm</td><td>využití standardního textového režimu společně s&nbsp;kartou Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_1.asm</a></td></tr>
<tr><td>34</td><td>hercules_text_mode_2.asm</td><td>zákaz blikání v&nbsp;textových režimech</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_text_mode_2.asm</a></td></tr>
<tr><td>35</td><td>hercules_turn_off.asm</td><td>vypnutí generování video signálu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_turn_off.asm</a></td></tr>
<tr><td>36</td><td>hercules_gfx_mode_1.asm</td><td>přepnutí karty Hercules do grafického režimu (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_1.asm</a></td></tr>
<tr><td>37</td><td>hercules_gfx_mode_2.asm</td><td>přepnutí karty Hercules do grafického režimu (vylepšená varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_gfx_mode_2.asm</a></td></tr>
<tr><td>38</td><td>hercules_putpixel.asm</td><td>subrutina pro vykreslení jediného pixelu na kartě Hercules</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/hercules_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>39</td><td>ega_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x25.asm</a></td></tr>
<tr><td>40</td><td>ega_text_mode_80x43.asm</td><td>zobrazení 43 textových řádků na kartě EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_text_mode_80x43.asm</a></td></tr>
<tr><td>41</td><td>ega_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_320x200.asm</a></td></tr>
<tr><td>42</td><td>ega_gfx_mode_640x200.asm</td><td>přepnutí do grafického režimu 640&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x200.asm</a></td></tr>
<tr><td>43</td><td>ega_gfx_mode_640x350.asm</td><td>přepnutí do grafického režimu 640&times;350 pixelů se čtyřmi nebo šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_640x350.asm</a></td></tr>
<tr><td>44</td><td>ega_gfx_mode_bitplanes_1.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (základní způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_1.asm</a></td></tr>
<tr><td>45</td><td>ega_gfx_mode_bitplanes_2.asm</td><td>ovládání zápisu do bitových rovin v&nbsp;planárních grafických režimech (rychlejší způsob)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_gfx_mode_bitplanes_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>46</td><td>ega_320x200_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_320x200_putpixel.asm</a></td></tr>
<tr><td>47</td><td>ega_640x350_putpixel.asm</td><td>vykreslení pixelu v&nbsp;grafickém režimu 640&times;350 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_640x350_putpixel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>48</td><td>ega_standard_font.asm</td><td>použití standardního fontu grafické karty EGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_standard_font.asm</a></td></tr>
<tr><td>49</td><td>ega_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>50</td><td>ega_palette_1.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 320&times;200 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_1.asm</a></td></tr>
<tr><td>51</td><td>ega_palette_2.asm</td><td>změna barvové palety (všech 16 barev) v&nbsp;grafickém režimu 640&times;350 se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_2.asm</a></td></tr>
<tr><td>52</td><td>ega_palette_3.asm</td><td>změna všech barev v&nbsp;barvové paletě s&nbsp;využitím programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_3.asm</a></td></tr>
<tr><td>53</td><td>ega_palette_4.asm</td><td>změna všech barev, včetně barvy okraje, v&nbsp;barvové paletě voláním funkce BIOSu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/ega_palette_4.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>54</td><td>vga_text_mode_80x25.asm</td><td>standardní textový režim 80&times;25 znaků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x25.asm</a></td></tr>
<tr><td>55</td><td>vga_text_mode_80x50.asm</td><td>zobrazení 50 a taktéž 28 textových řádků na kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_80x50.asm</a></td></tr>
<tr><td>56</td><td>vga_text_mode_intensity_1.asm</td><td>změna chování atributového bitu pro blikání (nebezpečná varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_1.asm</a></td></tr>
<tr><td>57</td><td>vga_text_mode_intensity_2.asm</td><td>změna chování atributového bitu pro blikání (bezpečnější varianta změny registrů)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_intensity_2.asm</a></td></tr>
<tr><td>58</td><td>vga_text_mode_9th_column.asm</td><td>modifikace způsobu zobrazení devátého sloupce ve znakových režimech (720 pixelů na řádku)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_9th_column.asm</a></td></tr>
<tr><td>59</td><td>vga_text_mode_cursor_shape.asm</td><td>změna tvaru textového kurzoru na grafické kartě VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_cursor_shape.asm</a></td></tr>
<tr><td>60</td><td>vga_text_mode_custom_font.asm</td><td>načtení vlastního fontu s&nbsp;jeho zobrazením</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_text_mode_custom_font.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>61</td><td>vga_gfx_mode_640x480.asm</td><td>přepnutí do grafického režimu 640&times;480 pixelů se šestnácti barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_640x480.asm</a></td></tr>
<tr><td>62</td><td>vga_gfx_mode_320x200.asm</td><td>přepnutí do grafického režimu 320&times;200 pixelů s&nbsp;256 barvami, vykreslení vzorků</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x200.asm</a></td></tr>
<tr><td>63</td><td>vga_gfx_mode_palette.asm</td><td>změna všech barev v&nbsp;barvové paletě grafické karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_palette.asm</a></td></tr>
<tr><td>64</td><td>vga_gfx_mode_dac_1.asm</td><td>využití DAC (neočekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_1.asm</a></td></tr>
<tr><td>65</td><td>vga_gfx_mode_dac_2.asm</td><td>využití DAC (očekávané výsledky)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>66</td><td>vga_640x480_putpixel.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 640&times;480 pixelů se šestnácti barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_640x480_putpixel.asm</a></td></tr>
<tr><td>67</td><td>vga_320x200_putpixel_1.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (základní varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_1.asm</a></td></tr>
<tr><td>68</td><td>vga_320x200_putpixel_2.asm</td><td>realizace algoritmu pro vykreslení pixelu v&nbsp;grafickém režimu 320&times;200 s&nbsp;256 barvami (rychlejší varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_putpixel_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>69</td><td>vga_gfx_mode_dac_3.asm</td><td>přímé využití DAC v&nbsp;grafickém režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_dac_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>70</td><td>vga_gfx_mode_unchained_step_1.asm</td><td>zobrazení barevných pruhů v&nbsp;režimu 13h</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_1.asm</a></td></tr>
<tr><td>71</td><td>vga_gfx_mode_unchained_step_2.asm</td><td>vypnutí zřetězení bitových rovin a změna způsobu adresování pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_2.asm</a></td></tr>
<tr><td>72</td><td>vga_gfx_mode_unchained_step_3.asm</td><td>vykreslení barevných pruhů do vybraných bitových rovin</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_unchained_step_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>73</td><td>vga_gfx_mode_320x400.asm</td><td>nestandardní grafický režim s&nbsp;rozlišením 320&times;400 pixelů a 256 barvami</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_gfx_mode_320x400.asm</a></td></tr>
<tr><td>74</td><td>vga_320x200_image.asm</td><td>zobrazení rastrového obrázku ve standardním grafickém režimu 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image.asm</a></td></tr>
<tr><td>75</td><td>vga_320x200_unchained_image_1.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (nekorektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_1.asm</a></td></tr>
<tr><td>76</td><td>vga_320x200_unchained_image_2.asm</td><td>zobrazení rastrového obrázku v&nbsp;režimu s&nbsp;nezřetězenými rovinami (korektní řešení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_unchained_image_2.asm</a></td></tr>
<tr><td>77</td><td>vga_320x400_unchained_image.asm</td><td>zobrazení rastrového obrázku v&nbsp;nestandardním režimu 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_unchained_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>78</td><td>vga_vertical_scroll_1.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;200 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_1.asm</a></td></tr>
<tr><td>79</td><td>vga_vertical_scroll_2.asm</td><td>vertikální scrolling na kartě VGA v&nbsp;režimu s&nbsp;rozlišením 320&times;400 pixelů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_vertical_scroll_2.asm</a></td></tr>
<tr><td>80</td><td>vga_split_screen_1.asm</td><td>režim split-screen a scrolling, nefunční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_1.asm</a></td></tr>
<tr><td>81</td><td>vga_split_screen_2.asm</td><td>režim split-screen a scrolling, plně funkční varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_split_screen_2.asm</a></td></tr>
<tr><td>82</td><td>vga_horizontal_scroll_1.asm</td><td>horizontální scrolling bez rozšíření počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_1.asm</a></td></tr>
<tr><td>83</td><td>vga_horizontal_scroll_2.asm</td><td>horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_2.asm</a></td></tr>
<tr><td>84</td><td>vga_horizontal_scroll_3.asm</td><td>jemný horizontální scrolling s&nbsp;rozšířením počtu pixelů na virtuálním řádku</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_horizontal_scroll_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>85</td><td>vga_320x240_image.asm</td><td>nastavení grafického režimu Mode-X, načtení a vykreslení obrázku, scrolling</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_image.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>86</td><td>io.asm</td><td>knihovna maker pro I/O operace</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/io.asm</a></td></tr>
<tr><td>87</td><td>vga_lib.asm</td><td>knihovna maker a podprogramů pro programování karty VGA</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_lib.asm</a></td></tr>
<tr><td>88</td><td>vga_320x240_lib.asm</td><td>nastavení grafického režimu Mode-X, tentokrát knihovními funkcemi</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x240_lib.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>89</td><td>vga_bitblt_1.asm</td><td>první (naivní) implementace operace <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_1.asm</a></td></tr>
<tr><td>90</td><td>vga_bitblt_2.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_2.asm</a></td></tr>
<tr><td>91</td><td>vga_bitblt_3.asm</td><td>operace <i>BitBLT</i> s&nbsp;výběrem bitových rovin pro čtení i zápis</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_3.asm</a></td></tr>
<tr><td>92</td><td>vga_bitblt_4.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace makry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_4.asm</a></td></tr>
<tr><td>93</td><td>vga_bitblt_5.asm</td><td>korektní <i>BitBLT</i> pro 16barevný režim, realizace podprogramem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_5.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>94</td><td>vga_bitblt_rotate.asm</td><td>zápisový režim s&nbsp;rotací bajtu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_rotate.asm</a></td></tr>
<tr><td>95</td><td>vga_bitblt_fast.asm</td><td>rychlá korektní 32bitová operace typu <i>BitBLT</i></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_bitblt_fast.asm</a></td></tr>
<tr><td>96</td><td>vga_320x400_bitblt_1.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (neúplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_1.asm</a></td></tr>
<tr><td>97</td><td>vga_320x400_bitblt_2.asm</td><td>přenos obrázku v&nbsp;režimu 320&times;400 operací <i>BitBLT</i> (úplná varianta)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x400_bitblt_2.asm</a></td></tr>
<tr><td>98</td><td>vga_write_modes_1.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis bez úpravy latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_1.asm</a></td></tr>
<tr><td>99</td><td>vga_write_modes_2.asm</td><td>volitelné zápisové režimy grafické karty VGA, zápis s&nbsp;modifikací latche</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_2.asm</a></td></tr>
<tr><td>100</td><td>vga_write_modes_3.asm</td><td>volitelné zápisové režimy grafické karty VGA, cílená modifikace latche vzorkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_write_modes_3.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>101</td><td>instruction_jump.asm</td><td>použití instrukce <strong>JMP</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jump.asm</a></td></tr>
<tr><td>102</td><td>instruction_jnz.asm</td><td>použití instrukce <strong>JNZ</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jnz.asm</a></td></tr>
<tr><td>103</td><td>instruction_jz_jmp.asm</td><td>použití instrukcí <strong>JZ</strong> a <strong>JMP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_jz_jmp.asm</a></td></tr>
<tr><td>104</td><td>instruction_loop.asm</td><td>použití instrukce <strong>LOOP</strong> pro realizaci programové smyčky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_loop.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>105</td><td>instruction_template.asm</td><td>šablona všech následujících demonstračních příkladů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_template.asm</a></td></tr>
<tr><td>106</td><td>instruction_print_hex.asm</td><td>tisk osmibitové hexadecimální hodnoty</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_print_hex.asm</a></td></tr>
<tr><td>107</td><td>instruction_xlat.asm</td><td>využití instrukce <strong>XLAT</strong> pro získání tisknutelné hexadecimální cifry</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_xlat.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>108</td><td>instruction_daa.asm</td><td>operace součtu s&nbsp;využitím binární i BCD aritmetiky</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa.asm</a></td></tr>
<tr><td>109</td><td>instruction_daa_sub.asm</td><td>instrukce <strong>DAA</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_daa_sub.asm</a></td></tr>
<tr><td>110</td><td>instruction_das.asm</td><td>instrukce <strong>DAS</strong> po provedení operace rozdílu</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_das.asm</a></td></tr>
<tr><td>111</td><td>instruction_aaa.asm</td><td>korekce výsledku na jedinou BCD cifru operací <strong>AAA</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aaa.asm</a></td></tr>
<tr><td>112</td><td>instruction_mul.asm</td><td>ukázka výpočtu součinu dvou osmibitových hodnot</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_mul.asm</a></td></tr>
<tr><td>113</td><td>instruction_aam.asm</td><td>BCD korekce po výpočtu součinu instrukcí <strong>AAM</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_aam.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>114</td><td>instruction_stosb.asm</td><td>blokový zápis dat instrukcí <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_stosb.asm</a></td></tr>
<tr><td>115</td><td>instruction_rep_stosb.asm</td><td>opakované provádění instrukce <strong>STOSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_stosb.asm</a></td></tr>
<tr><td>116</td><td>instruction_lodsb.asm</td><td>čtení dat instrukcí <strong>LODSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_lodsb.asm</a></td></tr>
<tr><td>117</td><td>instruction_movsb.asm</td><td>přenos jednoho bajtu instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_movsb.asm</a></td></tr>
<tr><td>118</td><td>instruction_rep_movsb.asm</td><td>blokový přenos po bajtech instrukcí <strong>MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_movsb.asm</a></td></tr>
<tr><td>119</td><td>instruction_rep_scas.asm</td><td>vyhledávání v&nbsp;řetězci instrukcí <strong>SCAS</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/instruction_rep_scas.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>120</td><td>vga_320x200_image_0B.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_0B.asm</a></td></tr>
<tr><td>121</td><td>vga_320x200_image_64kB.asm</td><td>výsledek blokového přenosu ve chvíli, kdy je <strong>CX=0xffff</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_64kB.asm</a></td></tr>
<tr><td>122</td><td>vga_320x200_image_movsb.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSB</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb.asm</a></td></tr>
<tr><td>123</td><td>vga_320x200_image_movsw.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSW</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsw.asm</a></td></tr>
<tr><td>124</td><td>vga_320x200_image_movsd.asm</td><td>blokový přenos v&nbsp;rámci obrazové paměti instrukcí <strong>REP MOVSD</strong></td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsd.asm</a></td></tr>
<tr><td>125</td><td>vga_320x200_image_movsb_forward.asm</td><td>blokový přenos překrývajících se bloků paměti (zvyšující se adresy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_forward.asm</a></td></tr>
<tr><td>126</td><td>vga_320x200_image_movsb_backward_1.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, nekorektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_1.asm</a></td></tr>
<tr><td>127</td><td>vga_320x200_image_movsb_backward_2.asm</td><td>blokový přenos překrývajících se bloků paměti (snižující se adresy, korektní nastavení)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/vga_320x200_image_movsb_backward_2.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>128</td><td>sound_bell.asm</td><td>přehrání zvuku pomocí tisku ASCII znaku BELL</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_bell.asm</a></td></tr>
<tr><td>129</td><td>sound_beep.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_beep.asm</a></td></tr>
<tr><td>130</td><td>sound_play_pitch.asm</td><td>přehrání zvuku o zadané frekvenci na PC Speakeru, použití maker</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_play_pitch.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>131</td><td>sound_opl2_basic.asm</td><td>přehrání komorního A na OPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_basic.asm</a></td></tr>
<tr><td>132</td><td>sound_opl2_table.asm</td><td>přehrání komorního A na OPL2, použití tabulky s&nbsp;hodnotami registrů</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>133</td><td>sound_opl2_table_2.asm</td><td>přepis tabulky s&nbsp;obsahy registrů pro přehrání komorního A</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_table_2.asm</a></td></tr>
<tr><td>134</td><td>sound_key_on.asm</td><td>přímé ovládání bitu KEY ON mezerníkem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_key_on.asm</a></td></tr>
<tr><td>135</td><td>sound_adsr.asm</td><td>nastavení obálky pro tón přehrávaný prvním kanálem</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_adsr.asm</a></td></tr>
<tr><td>136</td><td>sound_modulation.asm</td><td>řízení frekvence modulátoru klávesami 1 a 0</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_modulation.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>137</td><td>keyboard_basic.asm</td><td>přímá práce s&nbsp;klávesnicí IBM PC</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/keyboard_basic.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>138</td><td>sound_stereo_opl2.asm</td><td>stereo zvuk v&nbsp;konfiguraci DualOPL2</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_stereo_opl2.asm</a></td></tr>
<tr><td>139</td><td>sound_opl2_multichannel.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), delší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel.asm</a></td></tr>
<tr><td>140</td><td>sound_opl2_multichannel_2.asm</td><td>vícekanálový zvuk na OPL2 (klávesy), kratší varianta</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl2_multichannel_2.asm</a></td></tr>
<tr><td>141</td><td>sound_opl3_stereo_1.asm</td><td>stereo výstup na OPL3 (v&nbsp;kompatibilním režimu)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_1.asm</a></td></tr>
<tr><td>142</td><td>sound_opl3_stereo_2.asm</td><td>stereo výstup na OPL3 (v&nbsp;režimu OPL3)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_stereo_2.asm</a></td></tr>
<tr><td>143</td><td>sound_opl3_multichannel.asm</td><td>vícekanálový zvuk na OPL3 (klávesy)</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_multichannel.asm</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>144</td><td>sound_opl3_waveform_1.asm</td><td>interaktivní modifikace tvaru vlny u prvního operátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_1.asm</a></td></tr>
<tr><td>145</td><td>sound_opl3_waveform_2.asm</td><td>oprava chyby: povolení režimu kompatibilního s&nbsp;OPL3</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_2.asm</a></td></tr>
<tr><td>146</td><td>sound_opl3_waveform_3.asm</td><td>vliv tvaru vln na zvukový kanál s&nbsp;FM syntézou</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_3.asm</a></td></tr>
<tr><td>147</td><td>sound_opl3_waveform_4.asm</td><td>modifikace tvaru vlny nosné vlny i modulátoru</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_waveform_4.asm</a></td></tr>
<tr><td>148</td><td>sound_opl3_4operators_1.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_1.asm</a></td></tr>
<tr><td>149</td><td>sound_opl3_4operators_2.asm</td><td>výběr AM/FM režimu ve čtyřoperátorovém nastavení</td><td><a href="https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm">https://github.com/tisnik/8bit-fame/blob/master/pc-dos/sound_opl3_4operators_2.asm</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Intel 8088 Architecture and Instruction Set<br />
<a href="https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf">https://people.ece.ubc.ca/~edc/464/lectures/lec4.pdf</a>
</li>

<li>x86 Opcode Structure and Instruction Overview<br />
<a href="https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf">https://pnx.tf/files/x86_opcode_structure_and_instruction_overview.pdf</a>
</li>

<li>x86 instruction listings (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_instruction_listings">https://en.wikipedia.org/wiki/X86_instruction_listings</a>
</li>

<li>x86 assembly language (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/X86_assembly_language">https://en.wikipedia.org/wiki/X86_assembly_language</a>
</li>

<li>Intel Assembler (Cheat sheet)<br />
<a href="http://www.jegerlehner.ch/intel/IntelCodeTable.pdf">http://www.jegerlehner.ch/intel/IntelCodeTable.pdf</a>
</li>

<li>25 Microchips That Shook the World<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world">https://spectrum.ieee.org/tech-history/silicon-revolution/25-microchips-that-shook-the-world</a>
</li>

<li>Chip Hall of Fame: MOS Technology 6502 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-mos-technology-6502-microprocessor</a>
</li>

<li>Chip Hall of Fame: Intel 8088 Microprocessor<br />
<a href="https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor">https://spectrum.ieee.org/tech-history/silicon-revolution/chip-hall-of-fame-intel-8088-microprocessor</a>
</li>

<li>Jak se zrodil procesor?<br />
<a href="https://www.root.cz/clanky/jak-se-zrodil-procesor/">https://www.root.cz/clanky/jak-se-zrodil-procesor/</a>
</li>

<li>Apple II History Home<br />
<a href="http://apple2history.org/">http://apple2history.org/</a>
</li>

<li>The 8086/8088 Primer<br />
<a href="https://www.stevemorse.org/8086/index.html">https://www.stevemorse.org/8086/index.html</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>Bit banging<br />
<a href="https://en.wikipedia.org/wiki/Bit_banging">https://en.wikipedia.org/wiki/Bit_banging</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Bootloaders<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders">https://en.wikibooks.org/wiki/X86_Assembly/Bootloaders</a>
</li>

<li>Počátky grafiky na PC: grafické karty CGA a Hercules<br />
<a href="https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/">https://www.root.cz/clanky/pocatky-grafiky-na-pc-graficke-karty-cga-a-hercules/</a>
</li>

<li>Co mají společného Commodore PET/4000, BBC Micro, Amstrad CPC i grafické karty MDA, CGA a Hercules?<br />
<a href="https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/">https://www.root.cz/clanky/co-maji-spolecneho-commodore-pet-4000-bbc-micro-amstrad-cpc-i-graficke-karty-mda-cga-a-hercules/</a>
</li>

<li>Karta EGA: první použitelná barevná grafika na PC<br />
<a href="https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/">https://www.root.cz/clanky/karta-ega-prvni-pouzitelna-barevna-grafika-na-pc/</a>
</li>

<li>RGB Classic Games<br />
<a href="https://www.classicdosgames.com/">https://www.classicdosgames.com/</a>
</li>

<li>Turbo Assembler (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turbo_Assembler">https://en.wikipedia.org/wiki/Turbo_Assembler</a>
</li>

<li>Microsoft Macro Assembler<br />
<a href="https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler">https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler</a>
</li>

<li>IBM Personal Computer (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Personal_Computer">https://en.wikipedia.org/wiki/IBM_Personal_Computer</a>
</li>

<li>Intel 8251<br />
<a href="https://en.wikipedia.org/wiki/Intel_8251">https://en.wikipedia.org/wiki/Intel_8251</a>
</li>

<li>Intel 8253<br />
<a href="https://en.wikipedia.org/wiki/Intel_8253">https://en.wikipedia.org/wiki/Intel_8253</a>
</li>

<li>Intel 8255<br />
<a href="https://en.wikipedia.org/wiki/Intel_8255">https://en.wikipedia.org/wiki/Intel_8255</a>
</li>

<li>Intel 8257<br />
<a href="https://en.wikipedia.org/wiki/Intel_8257">https://en.wikipedia.org/wiki/Intel_8257</a>
</li>

<li>Intel 8259<br />
<a href="https://en.wikipedia.org/wiki/Intel_8259">https://en.wikipedia.org/wiki/Intel_8259</a>
</li>

<li>Support/peripheral/other chips - 6800 family<br />
<a href="http://www.cpu-world.com/Support/6800.html">http://www.cpu-world.com/Support/6800.html</a>
</li>

<li>Motorola 6845<br />
<a href="http://en.wikipedia.org/wiki/Motorola_6845">http://en.wikipedia.org/wiki/Motorola_6845</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>CRTC operation<br />
<a href="http://www.6502.org/users/andre/hwinfo/crtc/crtc.html">http://www.6502.org/users/andre/hwinfo/crtc/crtc.html</a>
</li>

<li>6845 - Motorola CRT Controller<br />
<a href="https://stanislavs.org/helppc/6845.html">https://stanislavs.org/helppc/6845.html</a>
</li>

<li>The 6845 Cathode Ray Tube Controller (CRTC)<br />
<a href="http://www.tinyvga.com/6845">http://www.tinyvga.com/6845</a>
</li>

<li>Motorola 6845 and bitwise graphics<br />
<a href="https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics">https://retrocomputing.stackexchange.com/questions/10996/motorola-6845-and-bitwise-graphics</a>
</li>

<li>IBM Monochrome Display Adapter<br />
<a href="http://en.wikipedia.org/wiki/Monochrome_Display_Adapter">http://en.wikipedia.org/wiki/Monochrome_Display_Adapter</a>
</li>

<li>Color Graphics Adapter<br />
<a href="http://en.wikipedia.org/wiki/Color_Graphics_Adapter">http://en.wikipedia.org/wiki/Color_Graphics_Adapter</a>
</li>

<li>Color Graphics Adapter and the Brown color in IBM 5153 Color Display<br />
<a href="https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/">https://www.aceinnova.com/en/electronics/cga-and-the-brown-color-in-ibm-5153-color-display/</a>
</li>

<li>The Modern Retrocomputer: An Arduino Driven 6845 CRT Controller<br />
<a href="https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/">https://hackaday.com/2017/05/14/the-modern-retrocomputer-an-arduino-driven-6845-crt-controller/</a>
</li>

<li>flat assembler: Assembly language resources<br />
<a href="https://flatassembler.net/">https://flatassembler.net/</a>
</li>

<li>FASM na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/FASM">https://en.wikipedia.org/wiki/FASM</a>
</li>

<li>Fresh IDE FASM inside<br />
<a href="https://fresh.flatassembler.net/">https://fresh.flatassembler.net/</a>
</li>

<li>MS-DOS Version 4.0 Programmer's Reference<br />
<a href="https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/">https://www.pcjs.org/documents/books/mspl13/msdos/dosref40/</a>
</li>

<li>INT 21 - DOS Function Dispatcher (DOS)<br />
<a href="https://www.stanislavs.org/helppc/int_21.html">https://www.stanislavs.org/helppc/int_21.html</a>
</li>

<li>DOS API (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/DOS_API">https://en.wikipedia.org/wiki/DOS_API</a>
</li>

<li>IBM Basic assembly language and successors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors">https://en.wikipedia.org/wiki/IBM_Basic_assembly_language_and_successors</a>
</li>

<li>X86 Assembly/Arithmetic<br />
<a href="https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic">https://en.wikibooks.org/wiki/X86_Assembly/Arithmetic</a>
</li>

<li>Art of Assembly - Arithmetic Instructions<br />
<a href="http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html">http://oopweb.com/Assembly/Documents/ArtOfAssembly/Volume/Chapter_6/CH06-2.html</a>
</li>

<li>ASM Flags<br />
<a href="http://www.cavestory.org/guides/csasm/guide/asm_flags.html">http://www.cavestory.org/guides/csasm/guide/asm_flags.html</a>
</li>

<li>Status Register<br />
<a href="https://en.wikipedia.org/wiki/Status_register">https://en.wikipedia.org/wiki/Status_register</a>
</li>

<li>Linux assemblers: A comparison of GAS and NASM<br />
<a href="http://www.ibm.com/developerworks/library/l-gas-nasm/index.html">http://www.ibm.com/developerworks/library/l-gas-nasm/index.html</a>
</li>

<li>Programovani v assembleru na OS Linux<br />
<a href="http://www.cs.vsb.cz/grygarek/asm/asmlinux.html">http://www.cs.vsb.cz/grygarek/asm/asmlinux.html</a>
</li>

<li>Is it worthwhile to learn x86 assembly language today?<br />
<a href="https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1">https://www.quora.com/Is-it-worthwhile-to-learn-x86-assembly-language-today?share=1</a>
</li>

<li>Why Learn Assembly Language?<br />
<a href="http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language">http://www.codeproject.com/Articles/89460/Why-Learn-Assembly-Language</a>
</li>

<li>Is Assembly still relevant?<br />
<a href="http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant">http://programmers.stackexchange.com/questions/95836/is-assembly-still-relevant</a>
</li>

<li>Why Learning Assembly Language Is Still a Good Idea<br />
<a href="http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html">http://www.onlamp.com/pub/a/onlamp/2004/05/06/writegreatcode.html</a>
</li>

<li>Assembly language today<br />
<a href="http://beust.com/weblog/2004/06/23/assembly-language-today/">http://beust.com/weblog/2004/06/23/assembly-language-today/</a>
</li>

<li>Assembler: Význam assembleru dnes<br />
<a href="http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz">http://www.builder.cz/rubriky/assembler/vyznam-assembleru-dnes-155960cz</a>
</li>

<li>Programming from the Ground Up Book - Summary<br />
<a href="http://savannah.nongnu.org/projects/pgubook/">http://savannah.nongnu.org/projects/pgubook/</a>
</li>

<li>DOSBox<br />
<a href="https://www.dosbox.com/">https://www.dosbox.com/</a>
</li>

<li>The C Programming Language<br />
<a href="https://en.wikipedia.org/wiki/The_C_Programming_Language">https://en.wikipedia.org/wiki/The_C_Programming_Language</a>
</li>

<li>Hercules Graphics Card (HCG)<br />
<a href="https://en.wikipedia.org/wiki/Hercules_Graphics_Card">https://en.wikipedia.org/wiki/Hercules_Graphics_Card</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf">https://content.ctcd.edu/courses/cosc2325/m22/docs/emu8086ins.pdf</a>
</li>

<li>Complete 8086 instruction set<br />
<a href="https://yassinebridi.github.io/asm-docs/8086_instruction_set.html">https://yassinebridi.github.io/asm-docs/8086_instruction_set.html</a>
</li>

<li>8088 MPH by Hornet + CRTC + DESiRE (final version)<br />
<a href="https://www.youtube.com/watch?v=hNRO7lno_DM">https://www.youtube.com/watch?v=hNRO7lno_DM</a>
</li>

<li>Area 5150 by CRTC &amp; Hornet (Party Version) / IBM PC+CGA Demo, Hardware Capture<br />
<a href="https://www.youtube.com/watch?v=fWDxdoRTZPc">https://www.youtube.com/watch?v=fWDxdoRTZPc</a>
</li>

<li>80x86 Integer Instruction Set Timings (8088 - Pentium)<br />
<a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf">http://aturing.umcs.maine.edu/~meadow/courses/cos335/80x86-Integer-Instruction-Set-Clocks.pdf</a>
</li>

<li>Colour Graphics Adapter: Notes<br />
<a href="https://www.seasip.info/VintagePC/cga.html">https://www.seasip.info/VintagePC/cga.html</a>
</li>

<li>Restoring A Vintage CGA Card With Homebrew HASL<br />
<a href="https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/">https://hackaday.com/2024/06/12/restoring-a-vintage-cga-card-with-homebrew-hasl/</a>
</li>

<li>Demoing An 8088<br />
<a href="https://hackaday.com/2015/04/10/demoing-an-8088/">https://hackaday.com/2015/04/10/demoing-an-8088/</a>
</li>

<li>Video Memory Layouts<br />
<a href="http://www.techhelpmanual.com/89-video_memory_layouts.html">http://www.techhelpmanual.com/89-video_memory_layouts.html</a>
</li>

<li>Screen Attributes<br />
<a href="http://www.techhelpmanual.com/87-screen_attributes.html">http://www.techhelpmanual.com/87-screen_attributes.html</a>
</li>

<li>IBM PC Family  -  BIOS Video Modes<br />
<a href="https://www.minuszerodegrees.net/video/bios_video_modes.htm">https://www.minuszerodegrees.net/video/bios_video_modes.htm</a>
</li>

<li>EGA Functions<br />
<a href="https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega">https://cosmodoc.org/topics/ega-functions/#the-hierarchy-of-the-ega</a>
</li>

<li>Why the EGA can only use 16 of its 64 colours in 200-line modes<br />
<a href="https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/">https://www.reenigne.org/blog/why-the-ega-can-only-use-16-of-its-64-colours-in-200-line-modes/</a>
</li>

<li>How 16 colors saved PC gaming - the story of EGA graphics<br />
<a href="https://www.custompc.com/retro-tech/ega-graphics">https://www.custompc.com/retro-tech/ega-graphics</a>
</li>

<li>List of 16-bit computer color palettes<br />
<a href="https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes">https://en.wikipedia.org/wiki/List_of_16-bit_computer_color_palettes</a>
</li>

<li>Why were those colors chosen to be the default palette for 256-color VGA?<br />
<a href="https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga">https://retrocomputing.stackexchange.com/questions/27994/why-were-those-colors-chosen-to-be-the-default-palette-for-256-color-vga</a>
</li>

<li>VGA Color Palettes<br />
<a href="https://www.fountainware.com/EXPL/vga_color_palettes.htm">https://www.fountainware.com/EXPL/vga_color_palettes.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page<br />
<a href="http://www.osdever.net/FreeVGA/vga/vga.htm">http://www.osdever.net/FreeVGA/vga/vga.htm</a>
</li>

<li>Hardware Level VGA and SVGA Video Programming Information Page - sequencer<br />
<a href="http://www.osdever.net/FreeVGA/vga/seqreg.htm">http://www.osdever.net/FreeVGA/vga/seqreg.htm</a>
</li>

<li>VGA Basics<br />
<a href="http://www.brackeen.com/vga/basics.html">http://www.brackeen.com/vga/basics.html</a>
</li>

<li>Introduction to VGA Mode 'X'<br />
<a href="https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html">https://web.archive.org/web/20160414072210/http://fly.srk.fer.hr/GDM/articles/vgamodex/vgamx1.html</a>
</li>

<li>VGA Mode-X<br />
<a href="https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp">https://web.archive.org/web/20070123192523/http://www.gamedev.net/reference/articles/article356.asp</a>
</li>

<li>Mode-X: 256-Color VGA Magic<br />
<a href="https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf">https://downloads.gamedev.net/pdf/gpbb/gpbb47.pdf</a>
</li>

<li>Instruction Format in 8086 Microprocessor<br />
<a href="https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx">https://www.includehelp.com/embedded-system/instruction-format-in-8086-microprocessor.aspx</a>
</li>

<li>How to use "AND," "OR," and "XOR" modes for VGA Drawing<br />
<a href="https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing">https://retrocomputing.stackexchange.com/questions/21936/how-to-use-and-or-and-xor-modes-for-vga-drawing</a>
</li>

<li>VGA Hardware<br />
<a href="https://wiki.osdev.org/VGA_Hardware">https://wiki.osdev.org/VGA_Hardware</a>
</li>

<li>Programmer's Guide to Yamaha YMF 262/OPL3 FM Music Synthesizer<br />
<a href="https://moddingwiki.shikadi.net/wiki/OPL_chip">https://moddingwiki.shikadi.net/wiki/OPL_chip</a>
</li>

<li>Does anybody understand how OPL2 percussion mode works?<br />
<a href="https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/">https://forum.vcfed.org/index.php?threads/does-anybody-understand-how-opl2-percussion-mode-works.60925/</a>
</li>

<li>Yamaha YMF262 OPL3 music - MoonDriver for OPL3 DEMO [Oscilloscope View]<br />
<a href="https://www.youtube.com/watch?v=a7I-QmrkAak">https://www.youtube.com/watch?v=a7I-QmrkAak</a>
</li>

<li>Yamaha OPL vs OPL2 vs OPL3 comparison<br />
<a href="https://www.youtube.com/watch?v=5knetge5Gs0">https://www.youtube.com/watch?v=5knetge5Gs0</a>
</li>

<li>OPL3 Music Crockett's Theme<br />
<a href="https://www.youtube.com/watch?v=HXS008pkgSQ">https://www.youtube.com/watch?v=HXS008pkgSQ</a>
</li>

<li>Bad Apple (Adlib Tracker - OPL3)<br />
<a href="https://www.youtube.com/watch?v=2lEPH6Y3Luo">https://www.youtube.com/watch?v=2lEPH6Y3Luo</a>
</li>

<li>FM Synthesis Chips, Codecs and DACs<br />
<a href="https://www.dosdays.co.uk/topics/fm_synthesizers.php">https://www.dosdays.co.uk/topics/fm_synthesizers.php</a>
</li>

<li>The Zen Challenge - YMF262 OPL3 Original (For an upcoming game)<br />
<a href="https://www.youtube.com/watch?v=6JlFIFz1CFY">https://www.youtube.com/watch?v=6JlFIFz1CFY</a>
</li>

<li>[adlib tracker II techno music - opl3] orbit around alpha andromedae I<br />
<a href="https://www.youtube.com/watch?v=YqxJCu_WFuA">https://www.youtube.com/watch?v=YqxJCu_WFuA</a>
</li>

<li>[adlib tracker 2 music - opl3 techno] hybridisation process on procyon-ii<br />
<a href="https://www.youtube.com/watch?v=daSV5mN0sJ4">https://www.youtube.com/watch?v=daSV5mN0sJ4</a>
</li>

<li>Hyper Duel - Black Rain (YMF262 OPL3 Cover)<br />
<a href="https://www.youtube.com/watch?v=pu_mzRRq8Ho">https://www.youtube.com/watch?v=pu_mzRRq8Ho</a>
</li>

<li>IBM 5155-5160 Technical Reference<br />
<a href="https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf">https://www.minuszerodegrees.net/manuals/IBM/IBM_5155_5160_Technical_Reference_6280089_MAR86.pdf</a>
</li>

<li>a ymf262/opl3+pc speaker thing i made<br />
<a href="https://www.youtube.com/watch?v=E-Mx0lEmnZ0">https://www.youtube.com/watch?v=E-Mx0lEmnZ0</a>
</li>

<li>[OPL3] Like a Thunder<br />
<a href="https://www.youtube.com/watch?v=MHf06AGr8SU">https://www.youtube.com/watch?v=MHf06AGr8SU</a>
</li>

<li>(PC SPEAKER) bad apple<br />
<a href="https://www.youtube.com/watch?v=LezmKIIHyUg">https://www.youtube.com/watch?v=LezmKIIHyUg</a>
</li>

<li>Powering devices from PC parallel port<br />
<a href="http://www.epanorama.net/circuits/lptpower.html">http://www.epanorama.net/circuits/lptpower.html</a>
</li>

<li>Magic Mushroom (demo pro PC s DOSem)<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar">http://www.crossfire-designs.de/download/articles/soundcards//mushroom.rar</a>
</li>

<li>Píseň Magic Mushroom - originál<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_converted.mp3</a>
</li>

<li>Píseň Magic Mushroom - hráno na PC Speakeru<br />
<a href="http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3">http://www.crossfire-designs.de/download/articles/soundcards/speaker_mushroom_speaker.mp3</a>
</li>

<li>Pulse Width Modulation (PWM) Simulation Example<br />
<a href="http://decibel.ni.com/content/docs/DOC-4599">http://decibel.ni.com/content/docs/DOC-4599</a>
</li>

<li>Resistor/Pulse Width Modulation DAC<br />
<a href="http://www.k9spud.com/traxmod/pwmdac.php">http://www.k9spud.com/traxmod/pwmdac.php</a>
</li>

<li>Class D Amplifier<br />
<a href="http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D">http://en.wikipedia.org/wiki/Electronic_amplifier#Class_D</a>
</li>

<li>Covox Speech Thing / Disney Sound Source (1986)<br />
<a href="http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5">http://www.crossfire-designs.de/index.php?lang=en&amp;what=articles&amp;name=showarticle.htm&amp;article=soundcards/&amp;page=5</a>
</li>

<li>Covox Digital-Analog Converter (Rusky, obsahuje schémata)<br />
<a href="http://phantom.sannata.ru/konkurs/netskater002.shtml">http://phantom.sannata.ru/konkurs/netskater002.shtml</a>
</li>

<li>PC-GPE on the Web<br />
<a href="http://bespin.org/~qz/pc-gpe/">http://bespin.org/~qz/pc-gpe/</a>
</li>

<li>Keyboard Synthesizer<br />
<a href="http://www.solarnavigator.net/music/instruments/keyboards.htm">http://www.solarnavigator.net/music/instruments/keyboards.htm</a>
</li>

<li>FMS - Fully Modular Synthesizer<br />
<a href="http://fmsynth.sourceforge.net/">http://fmsynth.sourceforge.net/</a>
</li>

<li>Javasynth<br />
<a href="http://javasynth.sourceforge.net/">http://javasynth.sourceforge.net/</a>
</li>

<li>Software Sound Synthesis &amp; Music Composition Packages<br />
<a href="http://www.linux-sound.org/swss.html">http://www.linux-sound.org/swss.html</a>
</li>

<li>Mx44.1 Download Page (software synthesizer for linux)<br />
<a href="http://hem.passagen.se/ja_linux/">http://hem.passagen.se/ja_linux/</a>
</li>

<li>Software synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Software_synthesizer">http://en.wikipedia.org/wiki/Software_synthesizer</a>
</li>

<li>Frequency modulation synthesis<br />
<a href="http://en.wikipedia.org/wiki/Frequency_modulation_synthesis">http://en.wikipedia.org/wiki/Frequency_modulation_synthesis</a>
</li>

<li>Yamaha DX7<br />
<a href="http://en.wikipedia.org/wiki/Yamaha_DX7">http://en.wikipedia.org/wiki/Yamaha_DX7</a>
</li>

<li>Wave of the Future<br />
<a href="http://www.wired.com/wired/archive/2.03/waveguides_pr.html">http://www.wired.com/wired/archive/2.03/waveguides_pr.html</a>
</li>

<li>Analog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Analog_synthesizer">http://en.wikipedia.org/wiki/Analog_synthesizer</a>
</li>

<li>Minimoog<br />
<a href="http://en.wikipedia.org/wiki/Minimoog">http://en.wikipedia.org/wiki/Minimoog</a>
</li>

<li>Moog synthesizer<br />
<a href="http://en.wikipedia.org/wiki/Moog_synthesizer">http://en.wikipedia.org/wiki/Moog_synthesizer</a>
</li>

<li>Tutorial for Frequency Modulation Synthesis<br />
<a href="http://www.sfu.ca/~truax/fmtut.html">http://www.sfu.ca/~truax/fmtut.html</a>
</li>

<li>An Introduction To FM<br />
<a href="http://ccrma.stanford.edu/software/snd/snd/fm.html">http://ccrma.stanford.edu/software/snd/snd/fm.html</a>
</li>

<li>John Chowning<br />
<a href="http://en.wikipedia.org/wiki/John_Chowning">http://en.wikipedia.org/wiki/John_Chowning</a>
</li>

<li>I'm Impressed, Adlib Music is AMAZING!<br />
<a href="https://www.youtube.com/watch?v=PJNjQYp1ras">https://www.youtube.com/watch?v=PJNjQYp1ras</a>
</li>

<li>Milinda- Diode Milliampere ( OPL3 )<br />
<a href="https://www.youtube.com/watch?v=oNhazT5HG0E">https://www.youtube.com/watch?v=oNhazT5HG0E</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2024</small></p>
</body>
</html>

