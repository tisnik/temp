<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Next Great Thing</p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. </a></p>
<p><a href="#k02">*** 2. Od služeb k&nbsp;mikroslužbám</a></p>
<p><a href="#k03">*** 3. Koncepty, na nichž jsou mikroslužby postaveny</a></p>
<p><a href="#k04">*** 4. Ze světa Unixu: smart endpoints and dumb pipes</a></p>
<p><a href="#k05">*** 5. Decentralizace na úrovni řízení i dat</a></p>
<p><a href="#k06">*** 6. Automatizace při nasazování, testování a provozování mikroslužeb</a></p>
<p><a href="#k07">*** 7. Přednosti mikroslužeb</a></p>
<p><a href="#k08">*** 8. A pochopitelně i některé zápory</a></p>
<p><a href="#k09">*** 9. Synchronní vs.&nbsp;asynchronní volání</a></p>
<p><a href="#k10">*** 10. Message brokery</a></p>
<p><a href="#k11">*** 11. Mikroslužby a kontejnery</a></p>
<p><a href="#k12">*** 12. Časté omyly, kterých se vývojáři dopouští (nejenom) při tvorbě mikroslužeb</a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. </h2>

myšlenka mikroslužeb vznikala postupně a hned v několika směrech

aplikace - mrikro produkty, mikroaplikace, logging, scheduling,
docházka atd. atd.

&bdquo;paralelizace vývoje&ldquo;

<p><div class="rs-tip-major">Poznámka: podobně, jako v&nbsp;mnoha dalších oblastech IT, není vlastní koncept <i>mikroslužeb</i> vlastně nijak nový, protože se podobné myšlenky (i když možná ne v&nbsp;té nejčistší podobě) aplikovaly již dříve; ostatně filozofie Unixu je založena na podobných myšlenkách. Samotný vznik a rozšíření používání termínu <i>mikroslužba</i> však ukazuje na to, že doba uzrála do takové míry, aby se koncept přímo pojmenoval (navíc se nejedná o tak marketingový termín, jako například pojem Web 2.0).</div></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Od služeb k&nbsp;mikroslužbám</h2>

pravděpodobně každý čtenář Roota se již setkal s nějakou monolitickou aplikací či s&nbsp;monolitickou webovou službou. Typicky je taková aplikace rozdělena na tři části: uživatelské rozhraní, vlastní implementace business logiky a datové úložiště.

aplikace se skládá z obecně většího počtu několika služeb, přičemž
každá služba má přesně definovanou roli (většinou pouze jednu!), běží v samostatném procesu (procesech) a komunikuje buď přímo či nepřímo s ostatními službami, typicky s využitím nějakého standardního rozhraní (HTTP API popř.&nbsp;messaging).

Důležité je, že každou z těchto mikroslužeb je možné vyvíjet, nasazovat, aktualizovat a pochopitelně i restartovat samostatně, v ideálním případě tak, aby to nezasáhlo ostatní součásti vyvíjené aplikace.

Dále se u mikroslužeb setkáme s použitím systémů pro automatizaci jejich nasazení a aktualizací, protože s rostoucím počtem mikroslužeb se stává velmi neefektivní jejich automatická správa.



<p><a name="k03"></a></p>
<h2 id="k03">3. Koncepty, na nichž jsou mikroslužby postaveny</h2>



<p><a name="k04"></a></p>
<h2 id="k04">4. Ze světa Unixu: smart endpoints and dumb pipes</h2>



<p><a name="k05"></a></p>
<h2 id="k05">5. Decentralizace na úrovni řízení i dat</h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. Automatizace při nasazování, testování a provozování mikroslužeb</h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. Přednosti mikroslužeb</h2>

paralelizace vývoje
v podstatě automatické přijetí myšlenek, na nichž stojí CI/CD
samotné API mikroslužeb je většinou tak jednoduché, že ho vývojář dokáže
udržet v hlavě

taktéž je možné jednotlivé služby vyvíjet v různých programovacích jazycích, což může být výhodné v případě, že aplikaci vyvíjí několik týmů

samozřejmě mnohem lepší možnosti distribuce mikroslužeb
mezi více servery s možností replikace

Replikace a škálování lze samozřejmě provádět i u monolitické služby, ovšem mnohdy
se zbytečně mrhá systémovými prostředky i na ty části monolitické služby, které jsou málo zatíženy a naškálování nepotřebují. U mikroslužeb &ndash; pochopitelně pokud jsou správně navrženy &ndash; je škálování, replikace, load balancing atd. možné provádět s&nbsp;menšími softwarovými celky a tedy s&nbsp;větší flexibilitou.

obrázek

nesmíme zapomenout ani na testování mikroslužeb, které může probíhat na několika úrovních
testování mikroslužeb sice není snadnější, než je tomu v případě monolitické aplikace, ovšem může být (podobně jako samotný vývoj mikroslužeb) vhodným způsobem škálováno.



<p><a name="k08"></a></p>
<h2 id="k08">8. A pochopitelně i některé zápory</h2>

možná ne zcela vhodné pro menší týmy

nutnost plánování
fragmentace celého systému, nutnost spojování jednotlivých částí,
neexistence jednotného vzoru

v předchozí kapitole jsem se zmínil o tom,



<p><a name="k09"></a></p>
<h2 id="k09">9. Synchronní vs.&nbsp;asynchronní volání</h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. Message brokery</h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. Mikroslužby a kontejnery</h2>

Docker
Kubernetes


<p><a name="k12"></a></p>
<h2 id="k12">12. Časté omyly, kterých se vývojáři dopouští (nejenom) při tvorbě mikroslužeb</h2>

    The network is reliable
    Latency is zero
    Bandwidth is infinite
    The network is secure
    Topology doesn't change
    There is one administrator
    Transport cost is zero
    The network is homogeneous


<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Vision of a microservice revolution<br />
<a href="https://www.jolie-lang.org/vision.html">https://www.jolie-lang.org/vision.html</a>
</li>

<li>Microservices : a definition of this new architectural term<br />
<a href="https://martinfowler.com/articles/microservices.html">https://martinfowler.com/articles/microservices.html</a>
</li>

<li>Mikroslužby<br />
<a href="http://voho.eu/wiki/mikrosluzba/">http://voho.eu/wiki/mikrosluzba/</a>
</li>

<li>Microservice Prerequisites<br />
<a href="https://martinfowler.com/bliki/MicroservicePrerequisites.html">https://martinfowler.com/bliki/MicroservicePrerequisites.html</a>
</li>

<li>Microservices in Practice, Part 1: Reality Check and Service Design (vyžaduje registraci)<br />
<a href="https://ieeexplore.ieee.org/document/7819415">https://ieeexplore.ieee.org/document/7819415</a>
</li>

<li>Microservice Trade-Offs<br />
<a href="https://www.martinfowler.com/articles/microservice-trade-offs.html">https://www.martinfowler.com/articles/microservice-trade-offs.html</a>
</li>

<li>What is a microservice? (from a linguistic point of view)<br />
<a href="http://claudioguidi.blogspot.com/2017/03/what-microservice-from-linguisitc.html">http://claudioguidi.blogspot.com/2017/03/what-microservice-from-linguisitc.html</a>
</li>

<li>Microservices (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Microservices">https://en.wikipedia.org/wiki/Microservices</a>
</li>

<li>Fallacies of distributed computing (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing">https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing</a>
</li>

<li>Service (systems architecture)<br />
<a href="https://en.wikipedia.org/wiki/Service_(systems_architecture)">https://en.wikipedia.org/wiki/Service_(systems_architecture)</a>
</li>

<li>Microservices in a Nutshell<br />
<a href="https://www.thoughtworks.com/insights/blog/microservices-nutshell">https://www.thoughtworks.com/insights/blog/microservices-nutshell</a>
</li>

<li>What is Microservices?<br />
<a href="https://smartbear.com/solutions/microservices/">https://smartbear.com/solutions/microservices/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

