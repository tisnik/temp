<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Programovací jazyky určené pro výuku programování (2)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Programovací jazyky určené pro výuku programování (2)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve druhé části článku o programovacích jazycích vhodných pro výuku programování se zaměříme především na ty jazyky, které kladou důraz na návrh vhodné struktury dat popř.&nbsp;se s&nbsp;pomocí nich dá procvičit objektově orientovaný návrh a objektově orientované programování. Zmíníme se jak o klasickém výukovém jazyce Pascal a Python, tak i o projektech Squeak a NetLogo.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Programovací jazyk Pascal &ndash; výuka návrhu datových struktur a algoritmizace</a></p>
<p><a href="#k02">2. Využití Pascalu v&nbsp;minulosti</a></p>
<p><a href="#k03">3. Programovací jazyk Pascal v&nbsp;současnosti</a></p>
<p><a href="#k04">4. Python aneb síla dynamicky typovaného programovacího jazyka</a></p>
<p><a href="#k05">5. Vývojové prostředí pro Python</a></p>
<p><a href="#k06">6. Výukové nástroje kombinující programovací jazyk a interaktivní grafické uživatelské rozhraní</a></p>
<p><a href="#k07">7. NetLogo</a></p>
<p><a href="#k08">8. Squeak</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2>1. Programovací jazyk Pascal &ndash; výuka návrhu datových struktur a algoritmizace</h2>

<p>Při popisu programovacích jazyků, které byly navrženy s&nbsp;ohledem na to,
aby byly snadno použitelné při výuce programování, samozřejmě nesmíme
zapomenout ani na programovací jazyk <i>Pascal</i>, který byl po poměrně
dlouhou dobu používán jak ve školství, tak i, což je pro &bdquo;výukový
jazyk&ldquo; poněkud netypické, pro tvorbu komerčních aplikací. Jedná se o
jazyk, který byl navržen již v&nbsp;průběhu let 1969 a 1969 Niklausem Wirthem
s&nbsp;ohledem na to, aby se v&nbsp;něm mohly jednoduše psát programy splňující
zásady strukturovaného programování (Wirth ještě před vytvořením <i>Pascalu</i>
napsal vlastní verzi programovacího jazyka ALGOL nazvanou <i>ALGOL W</i>,
kterým je <i>Pascal</i> inspirován). S&nbsp;ohledem na podporu strukturovaného
programování obsahuje <i>Pascal</i> oba typy (nepočítaných) programových
smyček, tj.&nbsp;smyčku s&nbsp;podmínkou vyhodnocovanou na začátku
(<strong>WHILE-END</strong>) i smyčku s&nbsp;podmínkou uváděnou a
vyhodnocovanou na konci (<strong>REPEAT-UNTIL</strong>). Kromě těchto dvou typů
smyček obsahuje <i>Pascal</i> i počítanou smyčku <strong>FOR</strong>, která je
zde ovšem, na rozdíl od mnoha dalších (Algolských) programovacích jazyků,
omezena na použití celočíselných proměnných vystupujících v&nbsp;roli počitadla
smyčky.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-1.jpg"><img src="http://i.iinfo.cz/images/75/llang02images-1-prev.jpg" width="370" height="248" alt=" " /></a>
<p><i>Obrázek 1: Historická první verze vývojového prostředí Delphi 1.0
běžícího ve Windows 3.11.</i></p>

<p>Další vlastností <i>Pascalu</i>, jež vychází ze zásad strukturovaného
programování, je podpora pro tvorbu uživatelských procedur a funkcí (ty byly
v&nbsp;původním jazyku poměrně striktně oddělené, na rozdíl od céčka, C++ či
Javy), dokonce bylo možné tvořit procedury a funkce uvnitř jiných procedur a
funkcí, což například umožňovalo lépe program rozdělit na vzájemně oddělené a
izolované části. Pravděpodobně nejzajímavější vlastností <i>Pascalu</i> jsou
však jeho vestavěné datové typy (například typ množina, který bylo možné využít
mnoha způsoby) a současně i možnost tvorby vlastních datových typů.
Z&nbsp;těchto důvodů, ke kterým ještě můžeme přidat možnost jednoprůchodového
(a tedy i velmi rychlého) překladu Pascalovských programů do strojového kódu,
se programovací jazyk <i>Pascal</i> vyučoval (a dodnes vyučuje) jak na
středních školách, tak i na některých školách vysokých jako první programovací
jazyk, i když mnohé školy postupně přechází na některé jiné programovací
jazyky, například na <i>Javu</i> nebo <i>Python</i>. Jedním z&nbsp;důvodů
přechodu na jiný programovací jazyk je i to, že standardní <i>Pascal</i>
nepodporuje OOP, i když při použití <i>Delphi</i> či <i>FreePascalu</i> je
díky rozšíření jazyka OOP plně podporováno.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-2.png"><img src="http://i.iinfo.cz/images/75/llang02images-2-prev.png" width="360" height="270" alt=" " /></a>
<p><i>Obrázek 2: Grafické uživatelské rozhraní projektu Lazarus, který se snaží
napodobit Delphi. Tento projekt lze používat jak na MS Windows, tak i na
Linuxu.</i></p>



<p><a name="k02"></a></p>
<h2>2. Využití Pascalu v&nbsp;minulosti</h2>

<p>Překladače programovacího jazyka <i>Pascal</i> se začaly poměrně masivně
rozšiřovat na různé typy počítačů již během první poloviny sedmdesátých let
minulého století. Jednalo se většinou o implementace pro sálové počítače a
minipočítače. Později, konkrétně v&nbsp;osmdesátých letech minulého století,
vznikly překladače <i>Pascalu</i> pro většinu domácích osmibitových
mikropočítačů. Pravděpodobně nejznámějším z&nbsp;těchto překladačů byl <i>Turbo
Pascal</i> určený původně pro osmibitové mikropočítače s&nbsp;operačním
systémem CP/M. V&nbsp;tuzemských podmínkách byly překladače tohoto
programovacího jazyka dostupné například na počítačích <i>JSEP</i> (Jednotný
systém elektronických počítačů) používaných na některých vysokých školách, dále
na počítačích <i>ADT</i> a taktéž na prakticky všech československých
osmibitových mikropočítačích, především na <i>PMD-85</i> a taktéž na
<i>IQ-151</i>, kde mohl být editor a překladač <i>Pascalu</i> použit
v&nbsp;rámci operačního systému <i>AMOS</i>.</p>

<img src="http://i.iinfo.cz/images/81/pc104-9.png" width="288" height="256" alt="pc104" />
<p><i>Obrázek 3: Hlavní menu editoru a překladače programovacího jazyka PASCAL
na československém osmibitovém mikropočítači PMD-85.</i></p>

<p>Později byl <i>Pascal</i> implementován firmou <i>Borland</i> na osobních
počítačích PC a právě zde se dočkal pravděpodobně svého největšího rozšíření.
Produkty <i>Turbo Pascal</i> a <i>Borland Pascal</i> byly na těchto počítačích
oblíbené zejména z&nbsp;toho důvodu, že obsahovaly integrované vývojové
prostředí s&nbsp;editorem, překladačem i debuggerem a v&nbsp;pozdějších verzích
i s&nbsp;integrovanou kontextovou nápovědou. Překlad byl navíc tak rychlý
(především při překladu pouze do operační paměti, nikoli při zápisu výsledného
spustitelného .EXE souboru na disk), že se <i>Turbo Pascal</i> dal používat
prakticky stejným způsobem jako interpretované programovací jazyky, zejména
v&nbsp;té době stále oblíbený a rozšířený <i>Basic</i>. Na tomto místě je možná
vhodné zmínit historku o tom, jak Bill Gates osobně velmi nelibě nesl, že
<i>Turbo Pascal</i> má tak rychlý překladač, protože Microsoft nebyl schopný
v&nbsp;té době přijít s&nbsp;produktem, který by byl podobně rychlý a současně
nenáročný na systémové prostředky jako <i>Turbo Pascal</i>. Gatesova frustrace
patrně vycházela i z&nbsp;toho, že sám začínal jako vývojář programovacích
jazyků (<i>MBasic</i>, <i>AppleSoft Basic</i>) určených původně pro osmibitové
mikropočítače.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-3.png"><img src="http://i.iinfo.cz/images/75/llang02images-3-prev.png" width="370" height="205" alt=" " /></a>
<p><i>Obrázek 4: Hlavní menu vývojového prostředí Turbo Pascalu 1.0.</i></p>

<p>Zajímavá fakta o <i>Turbo Pascalu 1.0</i>:</p>

<ul>
<li>Byl provozovatelný na počítačích s&nbsp;mikroprocesorem Intel 8086 (DOS)
nebo Zilog Z-80 (CP/M)</li>
<li>Vyžadoval pouze 64 kB paměti</li>
<li>Dodáván na disketě, na níž bylo obsazeno pouze 130 kB</li>
<li>Disketa obsahovala pouze deset souborů, viz následující tabulka:</li>
</ul>

<table>
<tr><th>Soubor</th><th>Význam</th></tr>
<tr><td>TURBO.COM   </td><td>compiler and editor                               </td></tr>
<tr><td>TURBOMSG.OVR</td><td>error messages file                               </td></tr>
<tr><td>TINST.COM   </td><td>development environment installation program      </td></tr>
<tr><td>TINSTMSG.OVR</td><td>message file for TINST program                    </td></tr>
<tr><td>TLIST.COM   </td><td>program lister                                    </td></tr>
<tr><td>ERROR.DOC   </td><td>addendum to the Turbo Reference Manual            </td></tr>
<tr><td>CALC.PAS    </td><td>MicroCalc (spread sheet demo program)             </td></tr>
<tr><td>CALCMAIN.PAS</td><td>Root demo program demonstrating include file usage</td></tr>
<tr><td>CALC.HLP    </td><td>On-line manual for MicroCalc                      </td></tr>
<tr><td>CALCDEMO.MCS</td><td>Example spread sheet definition                   </td></tr>
</table>

<a href="http://i.iinfo.cz/images/75/llang02images-4.jpg"><img src="http://i.iinfo.cz/images/75/llang02images-4-prev.jpg" width="271" height="270" alt=" " /></a>
<p><i>Obrázek 5: Disketa určená pro počítače IBM PC popř.&nbsp;pro jejich
klony, která obsahuje Turbo Pascal verze 1.0.</i></p>



<p><a name="k03"></a></p>
<h2>3. Programovací jazyk Pascal v&nbsp;současnosti</h2>

<p>V&nbsp;současnosti lze pro výuku programování s&nbsp;využitím <i>Pascalu</i>
použít buď některou ze starších verzí <i>Turbo Pascalu</i> či <i>Borland
Pascalu</i> (například na některých tuzemských školách se dodnes zachovaly
učebny se staršími počítači s&nbsp;nainstalovaným MS-DOSem a právě některým
vývojovým prostředím firmy <i>Borland</i>, což například z&nbsp;ekonomického
hlediska, ale i kvůli snadné administraci nemusí být úplně špatné řešení), nebo
lze použít vývojový nástroj <i>Delphi</i> firmy <i>Embarcadero Technologie</i>s
(původně <i>Borland</i>), popř.&nbsp;jako ekonomicky výhodnější řešení volně
dostupné integrované vývojové prostředí <i>Lazarus</i>, které pro překlad
využívá <i>FreePascal</i> (samotný <i>FreePascal</i> je totiž tvořen pouze
překladačem, takže se pro výuku moc nehodí). Integrované vývojové prostředí
<i>Lazarus</i> lze využít na platformě MS Windows, Linux i Mac OS X, přičemž
vytvářené programy jsou, samozřejmě ve zdrojové formě, mezi těmito platformami
přenositelné.</p>

<p>Odkazy na stránky týkající se prostředí <i>Lazarus</i>:</p>

<ol>

<li>Lazarus (Home page)<br />
<a href="http://www.lazarus.freepascal.org/">http://www.lazarus.freepascal.org/</a>
</li>

<li>Lazarus FAQ<br />
<a href="http://wiki.lazarus.freepascal.org/Lazarus_Faq">http://wiki.lazarus.freepascal.org/Lazarus_Faq</a>
</li>

<li>Lazarus (Software)<br />
<a href="http://en.wikipedia.org/wiki/Lazarus_%28software%29">http://en.wikipedia.org/wiki/Lazarus_%28software%29</a>
</li>

<li>FreePascal<br />
<a href="http://www.freepascal.org/">http://www.freepascal.org/</a>
</li>

</ol>



<p><a name="k04"></a></p>
<h2>4. Python aneb síla dynamicky typovaného programovacího jazyka</h2>

<p>Dalším programovacím jazykem, na který nemůžeme v&nbsp;tomto článku
zapomenout, je <i>Python</i>. Nejedná se sice o programovací jazyk
specializovaný na výuku programování (toto zaměření měl spíše další jazyk
vytvořený Guido van Rossumem nazvaný <i>ABC</i>), ovšem díky některým svým
vlastnostem začal <i>Python</i> postupně pronikat i do školních učeben a
laboratoří. Jednou z&nbsp;významných vlastností <i>Pythonu</i> je jeho důraz na
minimalistickou syntaxi (malý počet klíčových slov), takže první programy je
možné začít psát již po několika desítkách minut studia. To je velmi důležité
především z&nbsp;toho důvodu, aby se předmět typu &bdquo;výuka
programování&ldquo; nakonec nezvrhl pouze ve vysvětlování syntaxe a sémantiky
některého programovacího jazyka, což se často stane například při pokusu o
nasazení <i>C++</i> či <i>Java</i> (ale v&nbsp;minulosti i <i>Pascalu</i>,
který je v&nbsp;některých ohledech značně rigidní) jakožto prvního
programovacího jazyka, se kterým se studenti mají setkat.</p>

<img src="http://i.iinfo.cz/images/75/llang02images-5.png" width="611" height="514" alt=" " />
<p><i>Obrázek 6: Jednou z&nbsp;pomůcek programátora v&nbsp;Pythonu je IPython,
což je interaktivní shell, v&nbsp;němž je možné editovat, spouštět i ladit
Pythonovské programy. IPython může nahradit specializovaná vývojová prostředí,
navíc je spouštěn přímo v&nbsp;textové konzoli, takže je s&nbsp;jeho pomocí
možné ladit i skripty umístěné na jiném počítači (připojení přes SSH
atd.).</i></p>

<p>Obliba <i>Pythonu</i> při výuce spočívá i v&nbsp;tom, že podporuje (ale
současně nevyžaduje!) objektově orientovaný přístup v&nbsp;programování.
V&nbsp;praxi se například mohou studenti nejdříve seznámit se základními
konstrukcemi používanými při strukturovaném programování
(tj.&nbsp;s&nbsp;podmínkami, programovými smyčkami, uživatelskými funkcemi) a
teprve po zvládnutí základních technik se mohou začít věnovat objektově
orientovanému návrhu a objektově orientovanému programování. Další vlastností
<i>Pythonu</i>, které zjednodušuje programování jak začátečníkům, tak i
profesionálům, je dynamické typování, což znamená, že se kontrola typů provádí
až v&nbsp;době běhu programu a nikoli při jeho překladu (což ostatně mnohdy
není, například i kvůli použití polymorfismu, možné ani ve staticky typovaných
jazycích). Díky použití bílých znaků, tj.&nbsp;mezer a tabulátorů, se navíc
studenti musí od začátku naučit korektně odsazovat jednotlivé bloky
programového kódu (tato vlastnost <i>Pythonu</i> pravděpodobně vzbuzuje nejvíce
emocí jak na straně jejích zastánců, tak i odpůrců).</p>

<a href="http://i.iinfo.cz/images/75/llang02images-6.png"><img src="http://i.iinfo.cz/images/75/llang02images-6-prev.png" width="268" height="270" alt=" " /></a>
<p><i>Obrázek 7: Grafické uživatelské prostředí IDLE s&nbsp;otevřeným
programem, který je možné přímo z&nbsp;tohoto prostředí spouštět či
ladit. IDLE je napsáno v&nbsp;samotném Pythonu, přičemž využívá knihovnu
Tk volanou přes wrapper Tkinter.</i></p>

<p>Následuje výpis jednoduchého programu napsaného v&nbsp;jazyce <i>Python</i>,
v&nbsp;němž je pro kreslení takzvané &bdquo;dračí křivky&ldquo; využit balíček
<strong>turtle</strong>, tj.&nbsp;želví grafika převzatá z&nbsp;minule
zmíněného programovacího jazyka <i>Logo</i>:</p>

<pre>
from turtle import right, left, forward, speed, exitonclick, hideturtle
 
def dragon(level=4, size=200, zig=right, zag=left):
    if level &lt;= 0:
        forward(size)
        return
 
    size /= 1.41421
    zig(45)
    dragon(level-1, size, right, left)
    zag(90)
    dragon(level-1, size, left, right)
    zig(45)
 
speed(0)
hideturtle()
dragon(6)
exitonclick() # click to exit
</pre>

<a href="http://i.iinfo.cz/images/75/llang02images-7.jpg"><img src="http://i.iinfo.cz/images/75/llang02images-7-prev.jpg" width="270" height="270" alt=" " /></a>
<p>Obrázek 8: Trojrozměrná varianta dračí křivky.</p>



<p><a name="k05"></a></p>
<h2>5. Vývojové prostředí pro Python</h2>

<p>Při využití programovacího jazyka <i>Python</i> ve výuce je samozřejmě možné
mít k&nbsp;dispozici vhodné vývojové prostředí, protože samotný <i>Python</i>
sice obsahuje možnost spuštění interaktivní konzole, ovšem ta uživatelům nabízí
pouze základní možnosti editace (řádkový editor s&nbsp;historií zapsaných
řádků), ale například neobsahuje žádnou podporu pro barevné zvýraznění syntaxe
či automatického doplňování názvů objektů (funkcí, proměnných). Jednou
z&nbsp;mnoha možností je použití <i>IPythonu</i>, což je interaktivní shell,
který uživatelům nabízí vylepšené (textové) uživatelské rozhraní, v&nbsp;němž
se například zvýrazňuje syntaxe jednotlivých jazykových prvků, funguje
doplňování názvů funkcí či proměnných, pro zápis delších částí kódu lze volat
vybraný textový editor atd. I přes zdánlivou jednoduchost se <i>IPython</i>
ukazuje jako velmi výkonný nástroj, který dokonce může být při výuce vhodnější
než vývojová prostředí s&nbsp;grafickým uživatelským rozhraním, ve kterých se
začínající programátor může poměrně snadno &bdquo;ztratit&ldquo;.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-8.png"><img src="http://i.iinfo.cz/images/75/llang02images-8-prev.png" width="370" height="250" alt=" " /></a>
<p><i>Obrázek 9: Vývojové prostředí Eric s&nbsp;otevřeným zdrojovým textem
psaným v&nbsp;Pythonu. Ve spodní části okna vývojového prostředí se nachází
interaktivní konzole Pythonu, v&nbsp;níž je možné jak vyhodnocovat jednotlivé
výrazy, tak i díky reflexi zkoumat strukturu jednotlivých systémových i
uživatelských objektů.</i></p>

<p>Z&nbsp;vývojových prostředí využívajících grafické uživatelské rozhraní je
možné jmenovat například poměrně jednoduché a současně i přehledné <i>IDLE</i>
používající pro zobrazení oken i ovládacích prvků knihovnu <i>Tk</i> volanou
přes wrapper <i>Tkinter</i>, nebo mnohem rozsáhlejší integrované vývojové
prostředí <i>Eric</i>, které je naopak implementované s&nbsp;využitím knihoven
<i>PyQt</i> a <i>Qt</i>. Pokud by však ani <i>Eric</i> nenabízel všechny
potřebné funkce (což je v&nbsp;případě výuky základů programování spíše
nepravděpodobné), jsou k&nbsp;dispozici i nadstavby nad některými vývojovými
prostředími určenými původně pro vývoj v&nbsp;Javě. Jedná se o <i>NetBeans
IDE</i> a především <i>PyDev</i>, což je nadstavba nad <i>Eclipse</i>. Všechna
zmíněná vývojová prostředí nabízí svým uživatelům možnost doplňování jmen
objektů, funkcí i proměnných, zvýraznění syntaxe v&nbsp;integrovaném editoru,
kontextovou nápovědu a samozřejmě podporují i ladění programů.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-9.png"><img src="http://i.iinfo.cz/images/75/llang02images-9-prev.png" width="354" height="270" alt=" " /></a>
<p><i>Obrázek 10: Asistent nabízející doplnění názvu objektu, který je
v&nbsp;daném kontextu viditelný a který odpovídá uživatelem zapsanému prefixu
ve vývojovém prostředí PyDev.</i></p>

<p>Seznam dalších vývojových prostředí vhodných pro programování
v&nbsp;<i>Pythonu</i> je možné nalézt na stránce <a
href="http://en.wikipedia.org/wiki/List_of_integrated_development_environments_for_Python#Python">http://en.wikipedia.org/wiki/List_of_integrated_development_environments_for_Python#Python</a>.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-10.png"><img src="http://i.iinfo.cz/images/75/llang02images-10-prev.png" width="370" height="171" alt=" " /></a>
<p><i>Obrázek 11: Asistent nabízející doplnění názvu metody a/nebo atributu
objektu ve vývojovém prostředí PyDev.</i></p>



<p><a name="k06"></a></p>
<h2>6. Výukové nástroje kombinující programovací jazyk a interaktivní grafické uživatelské rozhraní</h2>

<p>Zatímco v&nbsp;předchozích čtyřech kapitolách jsme se zabývali
programovacími jazyky, pro jejichž provozování v&nbsp;tom nejjednodušším
případě postačuje pouze textový terminál (či v&nbsp;minulosti děrovačka děrných
štítků a tiskárna připojená k&nbsp;počítači s&nbsp;překladačem <i>Pascalu</i>,
jak jistě mohou doložit starší absolventi VUT v&nbsp;Brně či dalších vysokých
škol), v&nbsp;následujících kapitolách se zaměříme především na ty projekty,
v&nbsp;nichž má vedle vlastního programovacího jazyka nezastupitelnou úlohu i
interaktivní a mnohdy velmi propracované grafické uživatelské rozhraní
nabízející začínajícím programátorům buď klasickou dvourozměrnou grafiku
(vektorovou, rastrovou, orientovanou na jednotlivé grafické objekty) nebo
v&nbsp;některých případech i možnost práce v&nbsp;trojrozměrném prostoru. Jedná
se o například o projekty <a href="#07">NetLogo</a> (ovšem s&nbsp;původním
Logem má tento projekt již společného jen velmi málo), <a
href="#k08">Squeak</a> (založený na Smalltalku) či <i>Scratch</i> a <i>Alice</i>,
o nichž se zmíníme (a to poměrně podrobně) v&nbsp;následujících částech tohoto
seriálu.</p>

<a href="http://i.iinfo.cz/images/75/llang02images-11.png"><img src="http://i.iinfo.cz/images/75/llang02images-11-prev.png" width="370" height="217" alt=" " /></a>
<p><i>Obrázek 12: Ukázka grafického uživatelského rozhraní projektu
Squeak.</i></p>

<p>Prvopočátky využití počítačové grafiky (nejenom) při výuce programování se
sice datují již do druhé poloviny šedesátých let minulého století (viz minule
popsaný vznik programovacího jazyka <i>Logo</i>), ovšem skutečné interaktivní
grafické uživatelské rozhraní (kde je možné &bdquo;programovat&ldquo; mnohdy i
bez nutnosti zápisu zdrojového kódu) se začalo v&nbsp;této oblasti ve větší
míře prosazovat především v&nbsp;posledních deseti letech &ndash; nejednalo se
ani tak o technické problémy, které by znemožňovaly implementaci plnohodnotného
GUI na starších počítačích (příkladem může být například nenáročný český
<i>Baltazar</i> nebo i <i>Squeak</i>, jenž je možné spustit i na průměrně
výkonném PDA), ale spíše o změněný pohled na to, jakým způsobem by se mělo
programování vyučovat &ndash; především na základních školách samozřejmě co
nejzáživnějším způsobem, nejlépe tak, že si děti ani neuvědomí, že se právě učí
programovat :-)</p>

<img src="http://i.iinfo.cz/images/75/llang02images-12.png" width="427" height="498" alt=" " />
<p><i>Obrázek 13: Grafické uživatelské rozhraní projektu NetLogo spuštěného na
počítači s&nbsp;Mac OS X.</i></p>



<p><a name="k07"></a></p>
<h2>7. NetLogo</h2>

<p>Projekt nazvaný <i>NetLogo</i> patří mezi zajímavé moderní implementace
programovacího jazyka <i>Logo</i>, o němž jsme se již zmiňovali
v&nbsp;předchozí části tohoto seriálu. <i>NetLogo</i> je vyvíjeno
v&nbsp;programovacím jazyku Java, čímž je do značné míry zaručena nezávislost
na použité platformě. V&nbsp;současnosti jsou oficiálně podporovány operační
systémy Linux (od jádra 2.4), Microsoft Windows 98 a vyšší i Mac OS X a vyšší,
ovšem s&nbsp;velkou pravděpodobností bude možné tuto aplikaci spustit i na
dalších platformách (nenechte se zmást požadavky uvedenými na domovské stránce
tohoto projektu, protože verze 4.0.5 běží i na starší Javě 1.5). Na postarších
systémech Mac OS 8 a Mac OS 9 je možné spustit předchozí verze <i>NetLoga</i>,
což však spíše souvisí s&nbsp;požadavky použité JRE (Java Runtime Environment),
než s&nbsp;konkrétními nároky této aplikace, které ostatně nejsou (na javovskou
aplikaci) nijak vysoké.</p>

<a href="http://i.iinfo.cz/images/185/llang02images-14.png"><img src="http://i.iinfo.cz/images/185/llang02images-14-prev.png" width="370" height="260" alt=" " /></a>
<p><i>Obrázek 14: Instalační program NetLoga.</i></p>

<p>Na stránce <a
href="http://ccl.northwestern.edu/netlogo/download.shtml">http://ccl.northwestern.edu/netlogo/download.shtml</a>
je možný výběr verze NetLoga, přičemž pro stažení je nutná registrace.
K&nbsp;dispozici jsou instalace pro Microsoft Windows, Mac OS X a obecná
instalace. Je možné získat jak samotné NetLogo, tak i NetLogo s&nbsp;přibalenou
JRE (<i>Java Runtime Environment</i>). Druhá varianta je vhodná pro ty
uživatele, kteří nemají žádnou JRE nainstalovanou (verze 4.0 využívá JRE Javy
6). Už instalace NetLoga vypadá velmi profesionálně, především díky kvalitnímu
instalačnímu programu vytvořenému v&nbsp;Javě. Samotná instalace verze 3.x
zabere (bez JRE) cca 40MB, nezávisle na použitém operačním systému, verze 4.x
již 50 MB. Součástí instalace je i hypertextová nápověda a mnoho demonstračních
příkladů, většinou simulací, z&nbsp;nichž některé jsou zobrazeny na přiložených
obrázcích.</p>

<a href="http://i.iinfo.cz/images/407/llang02-15-1.png"><img src="http://i.iinfo.cz/images/407/llang02-15-1-prev.png" width="289" height="270" alt=" " /></a>
<p><i>Obrázek 15: Grafické uživatelské prostředí NetLoga</i></p>

<p>NetLogo je sice možné použít i bez zaplacení (viz <a
href="http://ccl.northwestern.edu/netlogo/">http://ccl.northwestern.edu/netlogo/</a>),
nejsou však k&nbsp;dispozici zdrojové kódy a také se nesmí dále šířit
upravované verze. NetLogo je zvláštní tím, že podporuje tvorbu dvourozměrné i
trojrozměrné grafiky, po které se může pohybovat neomezené množství želv. Želvy
spolu mohou komunikovat a vytvářet tak mezi sebou různé vazby. Z&nbsp;těchto
důvodů se tato implementace Loga používá zejména pro simulace paralelních
systémů, systémů se zpětnými vazbami apod. Pro účely tvorby různých simulací je
v&nbsp;NetLogu k&nbsp;dispozici mnoho prvků grafického uživatelského rozhraní
(GUI), včetně posuvníků, grafů, přepínacích tlačítek apod.</p>

<a href="http://i.iinfo.cz/images/407/llang02-15-2.png"><img src="http://i.iinfo.cz/images/407/llang02-15-2-prev.png" width="345" height="270" alt=" " /></a>
<p><i>Obrázek 16: Spuštěná simulace &ndash; stlačování plynu ve válci s&nbsp;pístem</i></p>

<a href="http://i.iinfo.cz/images/407/llang02-15-3.png"><img src="http://i.iinfo.cz/images/407/llang02-15-3-prev.png" width="266" height="270" alt=" " /></a>
<p><i>Obrázek 17: Další simulace &ndash; odrážející se kuličky</i></p>

<a href="http://i.iinfo.cz/images/407/llang02-15-4.png"><img src="http://i.iinfo.cz/images/407/llang02-15-4-prev.png" width="355" height="270" alt=" " /></a>
<p><i>Obrázek 18: Celulární automat</i></p>



<p><a name="k08"></a></p>
<h2>8. Squeak</h2>

<p>Posledním projektem, o němž se v&nbsp;dnešním článku (prozatím jen ve
stručnosti) zmíníme, je <i>Squeak</i>. Jedná se o implementaci objektově
orientovaného programovacího jazyka <i>Smalltalk</i>, který je doplněn o
virtuální stroj, propracované grafické uživatelské rozhraní (jednotlivá okna je
například možné otáčet o libovolný úhel atd.) a velké množství knihoven.
V&nbsp;knihovnách jsou dostupné funkce pro práci s&nbsp;multimédii, 2D i 3D
grafikou, přístupu k&nbsp;různým internetovým službám atd. <i>Squeak</i> lze
spouštět na různých platformách, samozřejmě včetně Linuxu, MS Windows a Mac OS,
ovšem lze ho provozovat, jak již bylo zmíněno v&nbsp;šesté kapitole, i na
některých PDA a smartphonech &ndash; viz též obrázky číslo 20 a 21 (osobně
<i>Squeak</i> bez nejmenších problémů provozuji na Asus EEE).</p>

<img src="http://i.iinfo.cz/images/407/llang02-15-5.jpg" width="213" height="320" alt=" " />
<p><i>Obrázek 19: Desky učebnice Squeaku, která je dostupná na webu ve formátu PDF.</i></p>

<p>To, co dělá <i>Squeak</i> tak zajímavým, je právě programovací jazyk
<i>Smalltalk</i>, který je plně objektově orientovaný (objektem jsou zde
například i čísla nebo pravdivostní hodnoty) a reflexivní. Navíc je tvorba
programů ve <i>Squeaku</i> od dalších produktů odlišná i v&nbsp;tom, že se
programy automaticky stanou součástí celého prostředí a jsou uchovány až do
dalšího startu <i>Squeaku</i> (ten se vlastně nikdy neukončuje, pouze
hibernuje). Vzhledem k&nbsp;velkému množství možností, které <i>Squeak</i>
nabízí, se mu budeme věnovat v&nbsp;následující části seriálu, podobně jako
projektu <i>Scratch</i> (pravděpodobně nejpropracovanější prostředí pro výuku
programování), který je na <i>Squeaku</i> založen.</p>

<img src="http://i.iinfo.cz/images/407/llang02-15-6.jpg" width="350" height="263" alt=" " />
<p><i>Obrázek 20: Squeak běžící jednom velmi populárním mobilním zařízení.</i></p>

<a href="http://i.iinfo.cz/images/407/llang02-15-7.jpg"><img src="http://i.iinfo.cz/images/407/llang02-15-7-prev.jpg" width="360" height="270" alt=" " /></a>
<p><i>Obrázek 21: Squeak běžící na různých platformách.</i></p>



<p><a name="k09"></a></p>
<h2>9. Odkazy na Internetu</h2>

<ol>

<li>Lazarus (Software)<br />
<a href="http://en.wikipedia.org/wiki/Lazarus_%28software%29">http://en.wikipedia.org/wiki/Lazarus_%28software%29</a>
</li>

<li>FreePascal<br />
<a href="http://www.freepascal.org/">http://www.freepascal.org/</a>
</li>

<li>Why I Love Python" slides<br />
<a href="http://www.mindviewinc.com/downloads/pub/eckel/LovePython.zip">http://www.mindviewinc.com/downloads/pub/eckel/LovePython.zip</a>
</li>

<li>Why I love Python (presentation)<br />
<a href="http://www.slideshare.net/didip/why-i-love-python">http://www.slideshare.net/didip/why-i-love-python</a>
</li>

<li>První jazyk: Python<br />
<a href="http://macek.sandbox.cz/texty/prvni-jazyk-python/">http://macek.sandbox.cz/texty/prvni-jazyk-python/</a>
</li>

<li>Programovací jazyk Python<br />
<a href="http://www.py.cz/FrontPage">http://www.py.cz/FrontPage</a>
</li>

<li>Python &ndash; Wikipedia CS<br />
<a href="http://cs.wikipedia.org/wiki/Python">http://cs.wikipedia.org/wiki/Python</a>
</li>

<li>IPython<br />
<a href="http://en.wikipedia.org/wiki/Ipython">http://en.wikipedia.org/wiki/Ipython</a>
</li>

<li>IPython: an interactive computing environment<br />
<a href="http://ipython.scipy.org/moin/">http://ipython.scipy.org/moin/</a>
</li>

<li>Category:Python<br />
<a href="http://rosettacode.org/wiki/Category:Python">http://rosettacode.org/wiki/Category:Python</a>
</li>

<li>Educational programming language<br />
<a href="http://en.wikipedia.org/wiki/Educational_programming_language">http://en.wikipedia.org/wiki/Educational_programming_language</a>
</li>

<li>Seriál Letní škola programovacího jazyka Logo<br />
<a href="http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/">http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/</a>
</li>

<li>Logo Tree Project:<br />
<a href="http://www.elica.net/download/papers/LogoTreeProject.pdf">http://www.elica.net/download/papers/LogoTreeProject.pdf</a></li>

<li>Language Poster (O'Reilly):<br />
<a href="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf">http://www.oreilly.com/news/graphics/prog_lang_poster.pdf</a></li>

<li>Informace o Comenius Logu:<br />
<a href="http://www.comlogo.input.sk/index.html">http://www.comlogo.input.sk/index.html</a></li>

<li>Stránka nabízející stažení Comenius Loga:<br />
<a href="http://www.comlogo.input.sk/nastiahnutie.html">http://www.comlogo.input.sk/nastiahnutie.html</a></li>

<li>Seminární práce o Comenius Logu:<br />
<a href="http://nwit.pedf.cuni.cz/rotal9ap/logo/">http://nwit.pedf.cuni.cz/rotal9ap/logo/</a></li>

<li>Informace o LEGO/Logu:<br />
<a href="http://education.otago.ac.nz/nzlnet/Logo/legologo.html">http://education.otago.ac.nz/nzlnet/Logo/legologo.html</a></li>

<li>Informace o systému Elica:<br />
<a href="http://www.elica.net/site/index.html">http://www.elica.net/site/index.html</a></li>

<li>Informace o systému NetLogo:<br />
<a href="http://ccl.northwestern.edu/netlogo/">http://ccl.northwestern.edu/netlogo/</a></li>

<li>Stažení NetLoga:<br />
<a href="http://ccl.northwestern.edu/netlogo/download.shtml">http://ccl.northwestern.edu/netlogo/download.shtml</a></li>

<li>Uživatelský manuál NetLoga ve formátu PDF:<br />
<a href="http://ccl.northwestern.edu/netlogo/docs/NetLogo%20User%20Manual.pdf">http://ccl.northwestern.edu/netlogo/docs/NetLogo%20User%20Manual.pdf</a></li>

<li>NetLogo FAQ:<br />
<a href="http://ccl.northwestern.edu/netlogo/docs/faq.html">http://ccl.northwestern.edu/netlogo/docs/faq.html</a></li>

<li>Domácí stránka Daniela Azumy (autora implementace Turtle Tracks):<br />
<a href="http://alumnus.caltech.edu/~dazuma/home/">http://alumnus.caltech.edu/~dazuma/home/</a></li>

<li>Informace o <i>aUCBLogu</i>:<br />
<a href="http://www.physik.uni-augsburg.de/~micheler/">http://www.physik.uni-augsburg.de/~micheler/</a></li>

<li>Domácí stránka MSW Loga:<br />
<a href="http://www.softronix.com/logo.html">http://www.softronix.com/logo.html</a></li>

<li>Karel online<br />
<a href="http://karel.oldium.net/">http://karel.oldium.net/</a>
</li>

<li>EDU-SIG: Python in Education<br />
<a href="http://www.python.org/community/sigs/current/edu-sig/">http://www.python.org/community/sigs/current/edu-sig/</a>
</li>

<li>Guido van Robot<br />
<a href="http://en.wikipedia.org/wiki/Guido_van_Robot">http://en.wikipedia.org/wiki/Guido_van_Robot</a>
</li>

<li>The Guido van Robot Programming Language<br />
<a href="http://gvr.sourceforge.net/">http://gvr.sourceforge.net/</a>
</li>

<li>An Introduction to Programming with Karel J. Robot<br />
<a href="http://blog.thingoid.com/2003/10/karel-intro/">http://blog.thingoid.com/2003/10/karel-intro/</a>
</li>

<li>Teaching a young robot new tricks<br />
<a href="http://blog.thingoid.com/2003/11/karel-new-tricks/">http://blog.thingoid.com/2003/11/karel-new-tricks/</a>
</li>

<li>Karel and Company - More Robots<br />
<a href="http://blog.thingoid.com/2003/12/karel-and-company/">http://blog.thingoid.com/2003/12/karel-and-company/</a>
</li>

<li>Karel heads for the stars<br />
<a href="http://blog.thingoid.com/2004/03/karel-star/">http://blog.thingoid.com/2004/03/karel-star/</a>
</li>

<li>Karel programming language documentation<br />
<a href="http://mormegil.wz.cz/prog/karel/prog_doc.htm">http://mormegil.wz.cz/prog/karel/prog_doc.htm</a>
</li>

<li>Karel J. Robot<br />
<a href="http://www.mainlandregional.net/dklipp/Honors%20Computer%20Science%20Java.htm">http://www.mainlandregional.net/dklipp/Honors%20Computer%20Science%20Java.htm</a>
</li>

<li>Karel (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Karel_(programming_language)">http://en.wikipedia.org/wiki/Karel_(programming_language)</a>
</li>

<li>Richard E. Pattis<br />
<a href="http://en.wikipedia.org/wiki/Richard_E._Pattis">http://en.wikipedia.org/wiki/Richard_E._Pattis</a>
</li>

<li>XKarel home page<br />
<a href="http://xkarel.sourceforge.net/eng/">http://xkarel.sourceforge.net/eng/</a>
</li>

<li>KKarel - screenshoty oken<br />
<a href="http://xkarel.sourceforge.net/eng/program.php#Okna">http://xkarel.sourceforge.net/eng/program.php#Okna</a>
</li>

<li>Greenfoot<br />
<a href="http://www.greenfoot.org/about/whatis.html">http://www.greenfoot.org/about/whatis.html</a>
</li>

<li>Computer programming -- Educational programming languages<br />
<a href="http://www.kidslike.info/computer_programming_educational_programming_languages">http://www.kidslike.info/computer_programming_educational_programming_languages</a>
</li>

<li>Making Great Programmers: Why BASIC is Still Relevant<br />
<a href="http://kidbasic.sourceforge.net/en/why.html">http://kidbasic.sourceforge.net/en/why.html</a>
</li>

<li>Gambas Wiki<br />
<a href="http://en.wikibooks.org/wiki/Gambas">http://en.wikibooks.org/wiki/Gambas</a>
</li>

<li>Squeak home page<br />
<a href="http://www.squeak.org/">http://www.squeak.org/</a>
</li>

<li>XO: The Children's Machine<br />
<a href="http://wiki.laptop.org/go/The_Children's_Machine">http://wiki.laptop.org/go/The_Children's_Machine</a>
</li>

<li>Squeak<br />
<a href="http://en.wikipedia.org/wiki/Squeak">http://en.wikipedia.org/wiki/Squeak</a>
</li>

<li>Squeak by Example<br />
<a href="http://squeakbyexample.org/">http://squeakbyexample.org/</a>
</li>

<li>Scratch home page<br />
<a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a>
</li>

<li>Scratch (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Scratch_(programming_language)">http://en.wikipedia.org/wiki/Scratch_(programming_language)</a>
</li>

<li>Free tool offers 'easy' coding<br />
<a href="http://news.bbc.co.uk/2/hi/technology/6647011.stm">http://news.bbc.co.uk/2/hi/technology/6647011.stm</a>
</li>

<li>Scratch Lowers Resistance to Programming<br />
<a href="http://www.wired.com/gadgetlab/2009/03/scratch-lowers/">http://www.wired.com/gadgetlab/2009/03/scratch-lowers/</a>
</li>

<li>Základy želví grafiky<br />
<a href="http://www.root.cz/clanky/zaklady-zelvi-grafiky/">http://www.root.cz/clanky/zaklady-zelvi-grafiky/</a>
</li>

<li>Bill Kendrick's Web Turtle<br />
<a href="http://www.sonic.net/~nbs/webturtle/">http://www.sonic.net/~nbs/webturtle/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2010</small></p>
</body>
</html>

