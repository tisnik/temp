<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
           "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
<title>Programovací jazyk Forth a zásobníkové procesory III</title>
<meta name="Author" content="Pavel Tisnovsky">
<meta name="Generator" content="vim">
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<style type="text/css">
         H1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background:#c00000; text-align:center; padding-left:1em}
         H2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background:#0000c0; padding-left:1em; text-align:left}
         H3  {font-family: arial, helvetica, sans-serif; color:#000000; background:#c0c0c0; padding-left:1em; text-align:left}
         H4  {font-family: arial, helvetica, sans-serif; color:#000000; background:#e0e0e0; padding-left:1em; text-align:left}
         A   {font-family: arial, helvetica, sans-serif;}
         P   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px}
         LI  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px}
         OL  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px}
         UL  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px}
         PRE {background:#e0e0e0}
</style>
</head>

<body bgcolor="#ffffff" text="#000000" link="#0000ff" alink="#ff00ff" vlink="#ff0000">

<h2>Programovací jazyk Forth a zásobníkové procesory III</h2>

<h4>Pavel Tišnovský</h4>

<br><br>

<h3>Úvodník</h3>

<p>V dnešním pokračování seriálu o programovacím jazyku Forth si řekneme
zajímavé informace o duchovním otci Forthu - Chucku Moorovi, zejména o jeho
přístupu k programovacím technikám a celkovém designu výpočetních systémů.
Kromě toho budou popsána některá dostupná vývojová prostředí Forthu, zejména s
ohledem na operační systém Linux.</p>



<h3>Obsah</h3>
<a href="#01">1. Charles Moore a programovací jazyk Forth</a><br>
&nbsp; &nbsp; <a href="#011">1.1 Prvotiny Forthu</a><br>
&nbsp; &nbsp; <a href="#012">1.2 Styl práce</a><br>
&nbsp; &nbsp; <a href="#013">1.3 Filozofie návrhu systémů</a><br>
&nbsp; &nbsp; <a href="#014">1.4 Modulární, strukturované a objektově orientované programování</a><br>
<a href="#02">2. Dostupná vývojová prostředí a implementace Forthu</a><br>
&nbsp; &nbsp; <a href="#021">2.1 GNU Forth</a><br>
&nbsp; &nbsp; <a href="#022">2.2 kForth</a><br>
&nbsp; &nbsp; <a href="#023">2.3 4th</a><br>
&nbsp; &nbsp; <a href="#024">2.4 atlast</a><br>
&nbsp; &nbsp; <a href="#025">2.5 Color Forth</a><br>
<a href="#03">9. Obsah dalšího pokračování</a><br>



<a name="01"></a>
<h3>1. Charles Moore a programovací jazyk Forth</h3>

<a name="011"></a>
<h4>1.1 Prvotiny Forthu</h4>

<p>Jak jsme si již uvedli v předchozích dvou dílech, byly první verze Forthu,
tehdy ještě ve formě maker pro assembler, vytvořeny v National Radio Astronomy
Observatory na počátku sedmdesátých let minulého století. Tyto "prvotiny" byly
vytvářeny tak, aby splňovaly pouze požadavky svého programátora, čemuž také
odpovídá minimalistická koncepce celého jazyka.</p>

<p>Duchovní otec Forthu a také první programátor, který tento jazyk v praxi
využíval (to mnohdy není totéž!), se jmenuje <a
href="http://en.wikipedia.org/wiki/Chuck_Moore">Charles Moore</a>. Jeho osobní
stránku naleznete na adrese <a
href="http://www.colorforth.com/">http://www.colorforth.com/</a>, kde také
uvádí odkaz na své nejnovější minimalistické dílko <em>ColorForth</em>. Tento
zajímavý dialekt Forthu si zevrubně popíšeme v následující kapitole.</p>

<p>Moore je rozený minimalista, což se projevuje ve všech programech a
systémech, který vytvořil (a není toho málo). Moore je také spoluzakladatelem
firmy <a href="http://www.forth.com/">FORTH, Inc.</a>, později však tuto firmu
opustil a živil se jako nezávislý konzultant a programátor při vývoji
vestavěných (<em>embedded</em>) systémů a systémů pro zpracování obrazu
(<em>image processing</em>).</p>

<div align="center">
<img src="forth03_1.jpg" alt="Charles Moore v NRAO" border="0" width="286" height="340">
<p>Obrázek 1: Charles Moore sedící u NRAO</p>
</div>



<a name="012"></a>
<h4>1.2 Styl práce</h4>

<p>Když Moore pracoval pro firmu <a href="http://www.forth.com">FORTH,
Inc.</a>, propagoval poněkud zvláštní postup při zpracování zakázky. Před
vlastním vývojem zakázky pro zákazníka totiž vždy osobně na jeho počítač
(pokaždé se mohlo jednat o zcela novou platformu) nainstaloval Forth, který
předtím přeložil cross-platformovým překladačem.</p>

<p>S postupem času však tato praxe přestala být uplatňována, zejména díky
rostoucímu počtu zakázek a také zvyšujícímu se počtu počítačů, na kterých
zákazníkovy programy měly pracovat. (dovedete si představit, že by tímto
způsobem pracovali například Linus Torvalds či dokonce Bill Gates? :-)</p>

<p>Moore si s sebou na mikrofiších neustále nosil výpisy programů z předchozích
zakázek, včetně všech driverů a obslužných rutin periferních zařízení. V
průběhu vývoje dalších systémů pro zákazníky Moore vývojové prostředí Forthu i
jeho knihovny neustále zlepšoval a upravoval. Často používaná slova (funkce) se
v případě úspěšného otestování dostaly do rodícího se standardu Forhu. Moore
často u zákazníků celý systém i s jeho základy upravoval.</p>

<p>I dnes není nic neobvyklého na tom, že se v průběhu zpracování zakázky
zlepšují programové knihovny, které jsou použity v další zakázce. Moore tento
postup také často využíval, a tak neustále inovoval už nainstalované knihovny,
což však přispívalo ke zmatkům, protože vedle sebe pracovaly různé verze
knihoven.</p>

<p>To se samozřejmě moc nelíbilo vedení firmy ani jeho spolupracovníkům,
protože takto v podstatě neexistovaly dvě stejné instalace Forthu. Říká se, že
Moorovi spolupracovníci museli každý večer celý systém zkontrolovat a zjistit,
jestli se chová tak, jak má (resp. tak, jak se choval předchozí den). V
důsledku těchto neshod pravděpodobně došlo i k jeho odchodu z firmy.</p>



<a name="013"></a>
<h4>1.3 Filozofie návrhu systémů</h4>

<p>Moorova filozofie při návrhu systému se dá shrnout do věty: <strong>počet
možných vylepšení či nových vlastností vytvářeného systému je nekonečný, proto
je pravděpodobnost jejich skutečné potřeby nulová</strong>. To znamená, že
každá funkce i jednotlivá instrukce použitá ve vyvíjeném programu musí
programátora nejdříve přesvědčit o své prospěšnosti, jelikož v opačném případě
je odstraněna.</p>

<p>Moore tuto svou filozofii uplatnil nejenom při vývoji programových systémů,
ale také při návrhu mikroprocesorů. V některém dalším pokračování tohoto
seriálu si popíšeme i jeho minimalistický dvouzásobníkový mikroprocesor F21,
který používá pouze pětibitový instrukční kód (tj. maximální počet instrukcí je
roven třiceti dvěma, ne všechny instrukční kódy jsou však využity).</p>



<a name="014"></a>
<h4>1.4 Modulární, strukturované a objektově orientované programování</h4>

<p>Charles Moore také nezávisle na ostatních vytvořil a používal modulární a
strukturované programování. Když se seznámil se slavným Dijkstrovým článkem o
strukturovaném programování, řekl prý pouze:<br><em>"It just seems like good
programming practise to me."</em><br> V pozdějších dobách, při vývoji systému
pro zpracování obrazu (viz další díly tohoto seriálu), dokonce vyvinul principy
OOP, opět nezávisle na tehdejších akademických pracích.</p>

<p>Poznámka: <small>Zmíněný Dijkstrův článek o strukturovaném programování byl
mnoha pozdějšími autory překroucen do nařízení ve stylu: zákaz používání
příkazu goto. To je samozřejmě nesmysl, protože strukturovaně lze psát v každém
imperativním jazyku a to dokonce pouze s příkazy <tt>goto</tt> a <tt>if</tt>.
Strukturované (ale i objektové) programování není determinováno pouze
programovacím jazykem, ale především způsobem psaní programů.</small></p>



<a name="02"></a>
<h3>2. Dostupná vývojová prostředí a implementace Forthu</h3>

<p>Programovací jazyk <em>Forth</em> dosáhl vrcholu své popularity v polovině
osmdesátých let minulého století. V té době pro něj již existovalo velké
množství vývojových prostředí dodávaných různými firmami. Tato vývojová
prostředí se však nepodobala dnešním rozsáhlým IDE - většinou se jednalo o
celoobrazovkové (z dnešního pohledu však velmi jednoduché až primitivní)
editory se zabudovaným interpreterem či překladačem jazyka Forth.</p>

<p>Některá komerčně dostupná vývojová prostředí se prodávají i dnes (například
<em>SwiftForth</em>), my se však zaměříme zejména na systémy, které jsou volně
dostupné. Ideální jsou samozřejmě systémy licencované pomocí <a
href="http://www.gnu.org/copyleft/gpl.html">GPL</a> či podobné licence. Tyto
Forthovské systémy jsou buď přímo vytvářeny pro Linux, nebo jsou na Linux
jednoduše portovatelné.</p>



<a name="021"></a>
<h4>2.1 GNU Forth</h4>

<p>Velká a stále rostoucí skupina vývojových aplikací šířených pod <a
href="http://www.gnu.org/copyleft/gpl.html">GNU licencí</a> obsahuje i
interpreter jazyka Forth. Tento interpreter se jmenuje <em>Gforth</em>, což je
zkrácenina z plného názvu <em>GNU Forth</em>. Tvůrci této verze Forthu si
vytkli tři cíle:</p>

<ol>

<li><em>Gforth</em> by měl dodržovat stávající standardy, tj. v tomto případě
ANS Forth. Dodržování standardů je jedna z nejpříjemnějších věcí, které
aplikace pod GNU licencí nabízí a v tomto případě je to velmi podstatné,
protože vznik dalšího nestandardního dialektu Forthu by byl
kontraproduktivní.</li>

<li><em>Gforth</em> by měl být také modelem, tj. měl by přesně vymezit
implementačně závislé detaily. Jedná se také o důležitou věc, jejíž význam se
projeví až při použití aplikace napsané ve Forthu na více platformách.</li>

<li><em>Gforth</em> by měl být standardem, což se mu však, vzhledem k poněkud
ne-Forthovské filozofii nedaří. Tato implementace totiž při práci neposkytuje
pravý Forth-feel, takže si na něj ortodoxní programátoři ve Forthu nechtějí
zvyknout.</li>

</ol>

<p><em>Gforth</em>, který je dostupný na adrese <a
href="http://www.jwdt.com/~paysan/gforth.html">http://www.jwdt.com/~paysan/gforth.html</a>,
je napsaný v programovacím jazyku GNU C (jsou použita některá rozšíření GNU C,
běžné C-čko nelze pro překlad použít), čímž je zajištěna přenositelnost
interpreteru na prakticky všechny významné platformy, protože GNU C je dnes
portované prakticky kamkoliv. Jak je u slušných programů pod GNU licencí
zvykem, je dodávána i dokumentace v <tt>.info</tt> formátu, která v dnešní době
obsahuje cca 270kB textů, takže se jedná o poměrně dlouhé počtení.</p>

<p>Kromě dodržení standardu ANS Forth obsahuje <em>Gforth</em> i četná
rozšíření, z nichž nejzajímavější je podpora aritmetických operací s čísly
uloženými ve formátu plovoucí čárky a snadná práce s lokálními proměnnými,
jejichž použitím lze eliminovat mnoho operací nad zásobníkem operandů.</p>

<p>Také matematické operace jsou rozšířeny o další funkce (slova). Příjemné je
zejména slovo pro bezpečné dělení nulou a slovo <tt>/mod</tt>, které provádí
dělení a současně operaci modulo. Výsledky obou těchto operací jsou uloženy na
zásobník operandů.</p>

<p><em>Gforth</em> lze použít buď jako klasický interpreter (ala
<em>Perl</em>), nebo lze načíst a spustit obraz přeloženého programu (podobné
<em>Javě</em>). Poslední možností je integrovat <em>Gforth</em> do jiné
aplikace a použít ho tak jako skriptovací jazyk. Pro tento účel je však v mnoha
případech výhodnější použít menší <em>atlast</em>, který je popsaný v <a
href="#024">podkapitole 2.4</a>.</p>



<a name="022"></a>
<h4>2.2 kForth</h4>

<p>Implementace Forthu od firmy <a href="http://www.ccreweb.org">Creative
Consulting for Research and Education</a>, jež je nazvaná <em>kForth</em>, je
vytvořena taktéž pod GNU licencí. Vytvořený jazyk odpovídá ve většině oblastí
normě ANS Forth s tím, že některá implementačně závislá slova mají v
<em>kForthu</em> jiný význam než v normě.</p>

<p><em>kForth</em>, jehož zdrojové kódy lze nalézt na stránce <a
href="http://www.ccreweb.org/software/kforth">http://www.ccreweb.org/software/kforth</a>,
je naprogramován ve třech jazycích: C++, C a assembleru. V assembleru je
vytvořena pouze časově kritická část - některá základní slova a část
virtuálního stroje. Vlastní interaktivní prostředí je vytvořeno v C++.</p>

<p><em>kForth</em> lze opět použít buď jako interpreter nebo jako vestavěný
skriptovací jazyk. Příkladem vestavění <em>kForthu</em> do jiné aplikace může
být program <em>XYPLOT</em>, jež je dostupný na adrese <a
href="http://www.ccreweb.org/software/xyplot/xyplot.html">http://www.ccreweb.org/software/xyplot/xyplot.html</a>.</p>

<p>Jako perličku na závěr uvedu dialog uživatele s <em>kForthem</em> tak, jak
je vypsán v dokumentaci (sudé řádky píše uživatel, liché systém):</p>

<pre>

Ready!
3 4 + .
7  ok
bye
Goodbye.

</pre>



<a name="023"></a>
<h4>2.3 4th</h4>

<p><em>"If you can use fopen(), you can write a compiler.",<br>
"If you can do BASIC, you can do 4tH."
</em></p>

<p><em>4tH</em>, který je dostupný na stránce <a
href="http://www.xs4all.nl/~thebeez/4tH/foldtree.html"></a>, je překladač i
interpreter Forthu, který sice přesně neodpovídá jeho ANSI specifikaci, ale
většina starších programů by v něm měla jít přeložit. Vyjímku tvoří pouze
programy určené pro systémy se šestnáctibitovými operacemi, které <em>4tH</em>
nepodporuje. Jedná se o systém novější generace, který je naprogramovaný v
jazyce C (starší Forthy jsou psány, jak již víme, v assembleru).</p>

<p>Přenositelnost tohoto systému je zaručena především použitým překladačem a
stylem programování. V současné době jsou k dispozici jak zdrojové soubory, tak
i binární verze pro Linux, MS-DOS a MS Windows.</p>

<p>Z dostupných zdrojových kódů systému <em>4tH</em> lze vytvořit jak klasický
překladač, tak i knihovnu, kterou lze přilinkovat k jiné aplikaci a Forth tak
používat jako skriptovací jazyk. Při skriptování je však zapotřebí nejdříve
zdrojový kód ve Forthu přeložit do takzvaného H-kódu a teprve tento kód
interpretovat:</p>

<pre>

// překlad kódu ve Forthu
// (je uložený v C-čkovém řetězci)
object=comp_4th(source);

// interpretace přeloženého kódu
ReturnVal=exec_4th(object, argc, argv, 3, Var1, Var2, Var3);

</pre>



<a name="024"></a>
<h4>2.4 atlast</h4>

<p><em>"Some people like to use Forth as scripting language for applications
that are otherwise written in C, C++, or some other language."</em></p>

<p>Velmi zajímavým jazykem, který je založený na Forthu, je vybaven projekt
<em>atlast</em>, jež je představen na stránce <a href=""></a>. Jedná se o
interpretr jazyka, který se až na několik maličkostí rovná Forthu, tj. jde o
jazyk založený na zásobníku operandů a zásobníku návratových adres, který
využívá stejné syntaxe jak Forth a taktéž nabízí téměř stejný repertoár
zabudovaných slov jako Forth.</p>

<p>Autor projektu <em>atlast</em> dříve pracoval pro firmu <a
href="">Autodesk</a>, kde byl tento projekt používán. Autorova profesní
minulost je patrná i z příkladů, ve kterých porovnává programy napsané v C-čku,
Lispu a <em>atlastu</em>.</p>

<p>Lisp, resp. jeho dialekt AutoLISP je používán například v programu AutoCAD a
právě díky spojení CAD systému a programovacího skriptovacího jazyka se AutoCAD
stal velmi populární, protože se v něm daly jednoduše psát i složité
nadstavby.</p>

<p>Autor <em>atlastu</em> také prosazuje názor, že všechny aplikace by měly být
programovatelné, resp. skriptovatelné, neboť to zvyšuje jejich použitelnost. S
tím lze pouze souhlasit, stačí se podívat, kolik složitých nadstavbových
aplikací je vytvořeno například nad <em>AutoCADem</em>, <em>Microsoft
Office</em>, <em>Lotus Notesem</em> nebo <em>Emacsem</em>. Ale i pomocí
jednoduchého skriptovacího jazyka a menšího množství funkcí se možnosti
aplikací rozšiřují, příkladem budiž <em>vim</em> nebo hra <em>Abuse</em>
naskriptovaná v Lispu.</p>

<p>Odlišnosti projektu <em>atlast</em> od Forthu vychází z toho, že se jedná o
interpretr, který je určený pro zabudování do dalších aplikací. Poměrně
jednoduchým způsobem (podrobně popsaným v dokumentaci) lze interpretr spojit s
vyvíjenou aplikací, zaregistrovat důležité funkce vytvořené v aplikaci a potom
z interpreteru tyto funkce jednoduše volat.</p>

<p>Parametry se předávají, jak jinak, na zásobníku operandů. Samotný interpret
se od většiny jiných implementací Forthu odlišuje v tom, že základním datovým
typem je 32bitový integer (ostatní Forthy se většinou konzervativně drží 16ti
bitové reprezentace) a dalším přímo podporovaným typem je datový typ
<em>double</em>.</p>

<p>Spojení <em>atlast</em>u s vyvíjenou aplikací je tak jednoduché, že
vytvoření základního interaktivního prostředí se zabudovaným interpreterem je
otázkou cca deseti řádků v C-čku. Takto vytvořená aplikace má po slinkování
velikost pouhých cca 50kB, přičemž v sobě obsahuje i zabudované knihovní funkce
pro vstup/výstup, matematiku apod. Z toho je patrné, že zabudovaný interpreter
zvyšuje celkové systémové nároky aplikace pouze nepatrně, narozdíl od jiných
vestavných interpreterů, např. Pythonu, Perlu či Lispu.</p>



<a name="025"></a>
<h4>2.5 Color Forth</h4>

<p>Jelikož je Forth velmi snadno implementovatelný, existuje několik systémů
určených převážně pro experimentování. Tyto systémy se nehodí pro širší
využití, protože za jejich vývojem nestojí žádná silná firma ani silná
vývojářská komunita.</p>

<p>Jednou z velmi zajímavých experimentálních implementací Forthu je
<em>ColorForth</em>, který je dostupný na adrese <a
href="http://www.colorforth.com/">http://www.colorforth.com/</a>. ColorForth
nevytvořil nikdo jiný než Charles Moore. Jedná se o minimalistický dialekt
Forthu, který pro svůj běh nepotřebuje dokonce ani operační systém! Veškerá
data jsou uložena pouze na několika prvních sektorech diskety, systém se tedy
spouští podobným způsobem jako například známý <em>MemTest</em> nebo jádro
systému uložené na disketě bez systému souborů.</p>

<p>ColorForthem se budu podrobněji zabývat v některém z dalších pokračování
tohoto seriálu.</p>

<div align="center">
<img src="forth03_2.jpg" alt="Charles Moore propaguje Color Forth" border="0" width="279" height="234">
<p>Obrázek 2: Charles Moore propaguje Color Forth</p>
</div>



<a name="03"></a>
<h3>3. Obsah dalšího pokračování</h3>

<p>V dalším pokračování tohoto seriálu si už konečně popíšeme základy práce s
Forthem, zejména si vysvětlíme funkci jeho dvou zásobníků a postfixovou notaci
při zápisu výrazů a příkazů.</p>



<br><br><br><hr>
<small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2005</small>
</body>
</html>

