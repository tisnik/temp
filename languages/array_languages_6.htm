<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Nial Array Language: další z jazyků inspirovaných APL</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Nial Array Language: další z jazyků inspirovaných APL</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Nial Array Language: další z&nbsp;jazyků inspirovaných APL</a></p>
<p><a href="#k02">*** 2. Základní vlastnosti programovacího jazyka Nial</a></p>
<p><a href="#k03">*** 3. Stručné porovnání s&nbsp;dalšími jazyky z&nbsp;rodiny APL</a></p>
<p><a href="#k04">*** 4. Překlad a první spuštění interpretru jazyka Nial</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. Předchozí články o rozsáhlém světu &bdquo;array programmingu&ldquo;</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Nial Array Language: další z&nbsp;jazyků inspirovaných APL</h2>

<p>V&nbsp;pořadí již šestém článku věnovaném jazykům z&nbsp;oblasti &bdquo;array programmingu&ldquo; (viz též odkazy uvedené <a href="#k19">v&nbsp;devatenácté kapitole</a>) se budeme věnovat programovacímu jazyku, který se jmenuje <i>Nial</i> neboli <i>Nested Interactive Array Language</i>. Tento programovací jazyk patří do rodiny jazyků, které jsou odvozeny od APL. Do této rodiny patří kromě samotného jazyka <a href="">APL</a> i jazyk <a href="">J</a>, <a href="">K</a>, Q a v&nbsp;neposlední řadě i relativní novinka &ndash; <a href="">jazyk BQN</a> (ovšem patří sem i &bdquo;kalkulačka&ldquo; <a href="">Ivy</a>). Naproti tomu se v&nbsp;případě jazyka <i>Nial</i>, kterému se budeme věnovat dnes, o žádnou žhavou novinku nejedná, protože tento programovací jazyk začal vznikat již na začátku osmdesátých let minulého století. I přesto však v&nbsp;něm nalezneme některé zajímavé koncepty, díky nimž se <i>Nial</i> odlišuje od všech výše uvedených jazyků a tedy má smysl se jím zabývat.</p>

<p></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Základní vlastnosti programovacího jazyka Nial</h2>

<p>Jak jsme si již naznačili <a href="#k01">v&nbsp;úvodní kapitole</a>, je <i>Nial</i> programovacím jazykem z&nbsp;rodiny APL; do samotného jazyka však byly přidány některé funkcionální prvky, podobně, jako tomu je například v&nbsp;jazyku K či BQN. Základním a ústředním datovým typem je zde n-dimenzionální pole (<i>array</i>), které dokonce nahrazuje i skalární hodnoty. To například znamená, že i znaky, pravdivostní hodnoty nebo celá čísla jsou chápána jako pole s&nbsp;jediným prvkem. A logicky je tomu i naopak &ndash; pole mohou jako své prvky obsahovat jiná pole, tj.&nbsp;jedná se o rekurzivní datovou strukturu (tento koncept chápání polí ovšem nenajdeme ve všech jazycích odvozených od APL).</p>

<p>Ovšem stejně jako v&nbsp;APL se i v&nbsp;Nialu pracuje s&nbsp;funkcemi jako s&nbsp;operátory. Uveďme si jednoduchý příklad:</p>

<pre>
1 + 2
</pre>

<p>Výše uvedený zápis znamená volání funkce nazvané <strong>+</strong> alias <strong>sum</strong>, které se předávají dva parametry &ndash; každý z&nbsp;parametrů je přitom polem s&nbsp;jediným prvkem, tj.&nbsp;první pole obsahuje prvek s&nbsp;hodnotou 1 a druhé pole obsahuje prvek s&nbsp;hodnotou 2.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Stručné porovnání s&nbsp;dalšími jazyky z&nbsp;rodiny APL</h2>

<p><a href="https://github.com/codereport/array-language-comparisons">https://github.com/codereport/array-language-comparisons</a></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Překlad a první spuštění interpretru jazyka Nial</h2>

<p></p>

<pre>
$ <strong>git clone https://github.com/niallang/Nial_Development.git</strong>
&nbsp;
Cloning into 'Nial_Development'...
remote: Enumerating objects: 2024, done.
remote: Counting objects: 100% (205/205), done.
remote: Compressing objects: 100% (140/140), done.
remote: Total 2024 (delta 83), reused 144 (delta 57), pack-reused 1819
Receiving objects: 100% (2024/2024), 31.04 MiB | 36.83 MiB/s, done.
Resolving deltas: 100% (549/549), done.
</pre>

<pre>
$ <strong>bash ./build.sh </strong>
&nbsp;
-- The C compiler identification is GNU 12.2.1
-- The CXX compiler identification is GNU 12.2.1
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /root/Nial_Development/BuildCore/build
[  3%] Building C object CMakeFiles/nialcore.dir/absmach.c.o
[  7%] Building C object CMakeFiles/nialcore.dir/arith.c.o
[ 10%] Building C object CMakeFiles/nialcore.dir/atops.c.o
[ 14%] Building C object CMakeFiles/nialcore.dir/basics.c.o
[ 17%] Building C object CMakeFiles/nialcore.dir/blders.c.o
[ 21%] Building C object CMakeFiles/nialcore.dir/compare.c.o
[ 25%] Building C object CMakeFiles/nialcore.dir/eval.c.o
[ 28%] Building C object CMakeFiles/nialcore.dir/insel.c.o
[ 32%] Building C object CMakeFiles/nialcore.dir/lib_main.c.o
[ 35%] Building C object CMakeFiles/nialcore.dir/linalg.c.o
[ 39%] Building C object CMakeFiles/nialcore.dir/logicops.c.o
[ 42%] Building C object CMakeFiles/nialcore.dir/main_stu.c.o
[ 46%] Building C object CMakeFiles/nialcore.dir/linenoise.c.o
[ 50%] Building C object CMakeFiles/nialcore.dir/parse.c.o
[ 53%] Building C object CMakeFiles/nialcore.dir/picture.c.o
[ 57%] Building C object CMakeFiles/nialcore.dir/profile.c.o
[ 60%] Building C object CMakeFiles/nialcore.dir/scan.c.o
[ 64%] Building C object CMakeFiles/nialcore.dir/symtab.c.o
[ 67%] Building C object CMakeFiles/nialcore.dir/systemops.c.o
[ 71%] Building C object CMakeFiles/nialcore.dir/trig.c.o
[ 75%] Building C object CMakeFiles/nialcore.dir/trs.c.o
[ 78%] Building C object CMakeFiles/nialcore.dir/unixif.c.o
[ 82%] Building C object CMakeFiles/nialcore.dir/windowsif.c.o
[ 85%] Building C object CMakeFiles/nialcore.dir/utils.c.o
[ 89%] Building C object CMakeFiles/nialcore.dir/wsmanage.c.o
[ 92%] Building C object CMakeFiles/nialcore.dir/bitops.c.o
[ 96%] Building C object CMakeFiles/nialcore.dir/fileio.c.o
[100%] Linking C executable nialcore
[100%] Built target nialcore
Completed work to generate source code for basic nial: 
-- The C compiler identification is GNU 12.2.1
-- The CXX compiler identification is GNU 12.2.1
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /root/Nial_Development/BuildNial/build
[  3%] Building C object CMakeFiles/nial.dir/absmach.c.o
[  7%] Building C object CMakeFiles/nial.dir/arith.c.o
[ 10%] Building C object CMakeFiles/nial.dir/atops.c.o
[ 14%] Building C object CMakeFiles/nial.dir/basics.c.o
[ 17%] Building C object CMakeFiles/nial.dir/blders.c.o
[ 21%] Building C object CMakeFiles/nial.dir/compare.c.o
[ 25%] Building C object CMakeFiles/nial.dir/eval.c.o
[ 28%] Building C object CMakeFiles/nial.dir/insel.c.o
[ 32%] Building C object CMakeFiles/nial.dir/lib_main.c.o
[ 35%] Building C object CMakeFiles/nial.dir/linalg.c.o
[ 39%] Building C object CMakeFiles/nial.dir/logicops.c.o
[ 42%] Building C object CMakeFiles/nial.dir/main_stu.c.o
[ 46%] Building C object CMakeFiles/nial.dir/linenoise.c.o
[ 50%] Building C object CMakeFiles/nial.dir/parse.c.o
[ 53%] Building C object CMakeFiles/nial.dir/picture.c.o
[ 57%] Building C object CMakeFiles/nial.dir/profile.c.o
[ 60%] Building C object CMakeFiles/nial.dir/scan.c.o
[ 64%] Building C object CMakeFiles/nial.dir/symtab.c.o
[ 67%] Building C object CMakeFiles/nial.dir/systemops.c.o
[ 71%] Building C object CMakeFiles/nial.dir/trig.c.o
[ 75%] Building C object CMakeFiles/nial.dir/trs.c.o
[ 78%] Building C object CMakeFiles/nial.dir/unixif.c.o
[ 82%] Building C object CMakeFiles/nial.dir/windowsif.c.o
[ 85%] Building C object CMakeFiles/nial.dir/utils.c.o
[ 89%] Building C object CMakeFiles/nial.dir/wsmanage.c.o
[ 92%] Building C object CMakeFiles/nial.dir/bitops.c.o
[ 96%] Building C object CMakeFiles/nial.dir/fileio.c.o
[100%] Linking C executable nial
[100%] Built target nial
</pre>

<pre>
cd BuildCore/build
</pre>

$ ls -l
total 584
-rw-r--r--. 1 tester tester  14019 Sep 29 08:46 CMakeCache.txt
drwxr-xr-x. 1 tester tester    294 Sep 29 08:46 CMakeFiles
-rw-r--r--. 1 tester tester   1644 Sep 29 08:46 cmake_install.cmake
-rw-r--r--. 1 tester tester  23109 Sep 29 08:46 Makefile
-rwxr-xr-x. 1 tester tester 549280 Sep 29 08:46 nialcore

<pre>
$ ./nialcore 

SYNTAX: nial  [(+|-)size Wssize] [-defs Filename] [-i] [-lws WSName] [-h]

-size Wssize
      Begin with a workspace size of Wssize words. A suffix of G, M or K
      can be used to indicate Giga words, Mega words or Kilo words respectively.
      The workspace expands if space is available.
+size Wssize
      Fix the workspace size at Wssize words with no expansion.
-defs Filename
      After loading the initial workspace the file Filename.ndf
      is loaded and executed without displaying input lines.
-lws  Wsname
      A previously saved workspace file is loaded on startup.
-i
      Execute in interactive mode with a top level loop.
-h
      Display command line syntax (this text).

Examples:
   nial -i
   nial -defs app.ndf
   nial +size 50M -defs newfns
</pre>

<pre>
$ <strong>./nialcore -i</strong>
&nbsp;
Q'Nial V7.0 Open Source Edition Intel x86 64bit Linux Sep 29 2022
Copyright (c) NIAL Systems Limited
clear workspace created
</pre>

<pre>
     <strong>1+2</strong>
3
</pre>

<pre>
     <strong>Bye</strong>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>

<p></p>

     <strong>1 2 + 2 3</strong>
3 5

     <strong>1 + 2 3 4</strong>
3 4 5

     <strong>1 2 3 + 4</strong>
5 6 7

     1 2 3
1 2 3
     set "diagram
sketch
     1 2 3
+-+-+-+
|1|2|3|
+-+-+-+
     set "decor
"nodecor
     1 2 3
+-+-+-+
|1|2|3|
+-+-+-+

     count 12
+-+-+-+-+-+-+-+-+-+--+--+--+
|1|2|3|4|5|6|7|8|9|10|11|12|
+-+-+-+-+-+-+-+-+-+--+--+--+



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>

<p></p>

     + [2 3]
2 3
     + 1 2
3
     + [1,2]
3
     + 1 2 3
6
     + [1,2,3]
6
     + [1,2,3] [4,5,6]
5 7 9
     + 1 2 3, 4 5 6
?tokens left: 1 2 3 <***> , 4 5



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>

<p></p>

     count 12
+-+-+-+-+-+-+-+-+-+--+--+--+
|1|2|3|4|5|6|7|8|9|10|11|12|
+-+-+-+-+-+-+-+-+-+--+--+--+

     2 3 reshape 1 2 3 4 5 6 
+-+-+-+
|1|2|3|
+-+-+-+
|4|5|6|
+-+-+-+

     4 3 reshape count 12
+--+--+--+
| 1| 2| 3|
+--+--+--+
| 4| 5| 6|
+--+--+--+
| 7| 8| 9|
+--+--+--+
|10|11|12|
+--+--+--+
     2 3 4 reshape count 12
+-+--+--+--+  +-+--+--+--+
|1| 2| 3| 4|  |1| 2| 3| 4|
+-+--+--+--+  +-+--+--+--+
|5| 6| 7| 8|  |5| 6| 7| 8|
+-+--+--+--+  +-+--+--+--+
|9|10|11|12|  |9|10|11|12|
+-+--+--+--+  +-+--+--+--+




<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>

<p></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>

<p></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>

<p></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>

<p></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>

<p></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>

<p></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>

<p></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>

<p></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>

<p></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>

<p></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>

<p></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Předchozí články o rozsáhlém světu &bdquo;array programmingu&ldquo;</h2>

<p></p>

<ol>

<li>Jazyky umožňující operace s poli aneb rozsáhlý svět „array programmingu“<br />
<a href="https://www.root.cz/clanky/jazyky-umoznujici-operace-s-poli-aneb-rozsahly-svet-bdquo-array-programmingu-ldquo/">https://www.root.cz/clanky/jazyky-umoznujici-operace-s-poli-aneb-rozsahly-svet-bdquo-array-programmingu-ldquo/</a>
</li>

<li>Specializované jazyky pro práci s N-dimenzionálními poli: jazyk J<br />
<a href="https://www.root.cz/clanky/specializovane-jazyky-pro-praci-s-n-dimenzionalnimi-poli-jazyk-j/">https://www.root.cz/clanky/specializovane-jazyky-pro-praci-s-n-dimenzionalnimi-poli-jazyk-j/</a>
</li>

<li>Programovací jazyky odvozené od APL: BQN a ivy aneb 1~×`1↓↕10<br />
<a href="https://www.root.cz/clanky/programovaci-jazyky-odvozene-od-apl-bqn-a-ivy-aneb-1-1-10/">https://www.root.cz/clanky/programovaci-jazyky-odvozene-od-apl-bqn-a-ivy-aneb-1-1-10/</a>
</li>

<li>Programovací jazyk K: důkaz, že mezi námi žijí mimozemšťané<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-k-dukaz-ze-mezi-nami-ziji-mimozemstane/">https://www.root.cz/clanky/programovaci-jazyk-k-dukaz-ze-mezi-nami-ziji-mimozemstane/</a>
</li>

<li>Programovací jazyk K: důkaz, že mezi námi žijí mimozemšťané (dokončení)<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-k-dukaz-ze-mezi-nami-ziji-mimozemstane-dokonceni/">https://www.root.cz/clanky/programovaci-jazyk-k-dukaz-ze-mezi-nami-ziji-mimozemstane-dokonceni/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Nial: A powerful, interactive array language with support for flexible multiparadigm code<br />
<a href="https://www.nial-array-language.org/">https://www.nial-array-language.org/</a>
</li>

<li>Nial: dokumentace<br />
<a href="https://www.nial-array-language.org/ndocs/">https://www.nial-array-language.org/ndocs/</a>
</li>

<li>Nial na GitHubu<br />
<a href="https://github.com/niallang/Nial_Development">https://github.com/niallang/Nial_Development</a>
</li>

<li>Array language comparisons<br />
<a href="https://github.com/codereport/array-language-comparisons">https://github.com/codereport/array-language-comparisons</a>
</li>

<li>K language - an introduction<br />
<a href="http://www.math.bas.bg/bantchev/place/k.html">http://www.math.bas.bg/bantchev/place/k.html</a>
</li>

<li>K7 Tutorial<br />
<a href="https://cs.nyu.edu/~shasha/papers/tutorial">https://cs.nyu.edu/~shasha/papers/tutorial</a>
</li>

<li>An Interview with Arthur Whitney, Kx CEO and Developer of Kx Technology, January 4, 2004<br />
<a href="https://web.archive.org/web/20150813004101/http://kx.com/arthur-interview.php">https://web.archive.org/web/20150813004101/http://kx.com/arthur-interview.php</a>
</li>

<li>A Shallow Introduction to the K Programming Language<br />
<a href="https://web.archive.org/web/20130801233812/http://www.kuro5hin.org/story/2002/11/14/22741/791">https://web.archive.org/web/20130801233812/http://www.kuro5hin.org/story/2002/11/14/22741/791</a>
</li>

<li>A Conversation with Arthur Whitney<br />
<a href="https://queue.acm.org/detail.cfm?id=1531242">https://queue.acm.org/detail.cfm?id=1531242</a>
</li>

<li>Anecdote about Arthur Whitney<br />
<a href="https://news.ycombinator.com/item?id=13590065">https://news.ycombinator.com/item?id=13590065</a>
</li>

<li>K - list of idioms<br />
<a href="https://github.com/kevinlawler/kona/wiki/Idioms">https://github.com/kevinlawler/kona/wiki/Idioms</a>
</li>

<li>Appendix A. Incunabulum<br />
<a href="http://keiapl.org/rhui/remember.htm#incunabulum">http://keiapl.org/rhui/remember.htm#incunabulum</a>
</li>

<li>K code study<br />
<a href="https://docs.google.com/document/d/1W83ME5JecI2hd5hAUqQ1BVF32wtCel8zxb7WPq-D4f8/edit">https://docs.google.com/document/d/1W83ME5JecI2hd5hAUqQ1BVF32wtCel8zxb7WPq-D4f8/edit</a>
</li>

<li>K tutorial<br />
<a href="https://github.com/kevinlawler/kona/wiki/Tutorial">https://github.com/kevinlawler/kona/wiki/Tutorial</a>
</li>

<li>K by EXAMPLE<br />
<a href="http://vrabi.web.elte.hu/k/kbyeg.k">http://vrabi.web.elte.hu/k/kbyeg.k</a>
</li>

<li>BQN: An APL Variant from Marshall Lochbaum (mlochbaum.github.io)<br />
<a href="https://news.ycombinator.com/item?id=24167804">https://news.ycombinator.com/item?id=24167804</a>
</li>

<li>Raytracer in 7 lines in K<br />
<a href="http://www.nsl.com/k/ray/ray.k">http://www.nsl.com/k/ray/ray.k</a>
</li>

<li>Marshall Lochbaum<br />
<a href="https://www.aplwiki.com/wiki/Marshall_Lochbaum">https://www.aplwiki.com/wiki/Marshall_Lochbaum</a>
</li>

<li>BQN<br />
<a href="https://www.aplwiki.com/wiki/BQN">https://www.aplwiki.com/wiki/BQN</a>
</li>

<li>Co-dfns<br />
<a href="https://www.aplwiki.com/wiki/Co-dfns">https://www.aplwiki.com/wiki/Co-dfns</a>
</li>

<li>Array model<br />
<a href="https://www.aplwiki.com/wiki/Array_model#Based_array_theory">https://www.aplwiki.com/wiki/Array_model#Based_array_theory</a>
</li>

<li>Fonts for BQN<br />
<a href="https://mlochbaum.github.io/BQN/fonts.html">https://mlochbaum.github.io/BQN/fonts.html</a>
</li>

<li>Leading axis theory<br />
<a href="https://www.aplwiki.com/wiki/Leading_axis_theory">https://www.aplwiki.com/wiki/Leading_axis_theory</a>
</li>

<li>A based system for general arrays<br />
<a href="https://dl.acm.org/doi/abs/10.1145/586656.586663">https://dl.acm.org/doi/abs/10.1145/586656.586663</a>
</li>

<li>APL – A Glimpse of Heaven (2006)<br />
<a href="https://news.ycombinator.com/item?id=19325361">https://news.ycombinator.com/item?id=19325361</a>
</li>

<li>APL and J<br />
<a href="https://crypto.stanford.edu/~blynn/c/apl.html">https://crypto.stanford.edu/~blynn/c/apl.html</a>
</li>

<li>ivy (dokumentace)<br />
<a href="https://pkg.go.dev/robpike.io/ivy#section-readme">https://pkg.go.dev/robpike.io/ivy#section-readme</a>
</li>

<li>ivy na GitHubu<br />
<a href="https://github.com/robpike/ivy/">https://github.com/robpike/ivy/</a>
</li>

<li>Ivy na APL wiki<br />
<a href="https://aplwiki.com/wiki/Ivy">https://aplwiki.com/wiki/Ivy</a>
</li>

<li>Implementing a bignum calculator (slajdy)<br />
<a href="https://talks.godoc.org/github.com/robpike/ivy/talks/ivy.slide#1">https://talks.godoc.org/github.com/robpike/ivy/talks/ivy.slide#1</a>
</li>

<li>Implementing a bignum calculator - Rob Pike - golang-syd November 2014<br />
<a href="https://www.youtube.com/watch?v=PXoG0WX0r_E">https://www.youtube.com/watch?v=PXoG0WX0r_E</a>
</li>

<li>Rob Pike na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/Rob_Pike">https://en.wikipedia.org/wiki/Rob_Pike</a>
</li>

<li>Rob Pike na cat-v<br />
<a href="http://genius.cat-v.org/rob-pike/">http://genius.cat-v.org/rob-pike/</a>
</li>

<li>Jazyky umožňující operace s&nbsp;poli aneb rozsáhlý svět „array programmingu“<br />
<a href="https://www.root.cz/clanky/jazyky-umoznujici-operace-s-poli-aneb-rozsahly-svet-bdquo-array-programmingu-ldquo/">https://www.root.cz/clanky/jazyky-umoznujici-operace-s-poli-aneb-rozsahly-svet-bdquo-array-programmingu-ldquo/</a>
</li>

<li>Programovací technika nazvaná <i>tacit programming</i><br />
<a href="https://www.root.cz/clanky/programovaci-technika-nazvana-tacit-programming/">https://www.root.cz/clanky/programovaci-technika-nazvana-tacit-programming/</a>
</li>

<li>Oslava 55 let od vzniku první implementace jazyka APL<br />
<a href="https://www.root.cz/clanky/oslava-55-let-od-vzniku-prvni-implementace-programovaciho-jazyka-apl/">https://www.root.cz/clanky/oslava-55-let-od-vzniku-prvni-implementace-programovaciho-jazyka-apl/</a>
</li>

<li>NuVoc<br />
<a href="https://code.jsoftware.com/wiki/NuVoc">https://code.jsoftware.com/wiki/NuVoc</a>
</li>

<li>J (programming language) [Wikipedia]<br />
<a href="https://en.wikipedia.org/wiki/J_%28programming_language%29">https://en.wikipedia.org/wiki/J_%28programming_language%29</a>
</li>

<li>J &ndash; Absolutely Essential Terms<br />
<a href="https://code.jsoftware.com/wiki/Vocabulary/AET">https://code.jsoftware.com/wiki/Vocabulary/AET</a>
</li>

<li>J &ndash; Atoms and Arrays<br />
<a href="https://code.jsoftware.com/wiki/Vocabulary/Nouns#Atom">https://code.jsoftware.com/wiki/Vocabulary/Nouns#Atom</a>
</li>

<li>Why J<br />
<a href="https://www.jsoftware.com/help/primer/why_j.htm">https://www.jsoftware.com/help/primer/why_j.htm</a>
</li>

<li>What is an Array?<br />
<a href="https://vector.org.uk/what-is-an-array/">https://vector.org.uk/what-is-an-array/</a>
</li>

<li>Comments<br />
<a href="http://www.gavilan.edu/csis/languages/comments.html">http://www.gavilan.edu/csis/languages/comments.html</a>
</li>

<li>Vector (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/Vector.html">https://mathworld.wolfram.com/Vector.html</a>
</li>

<li>n-Tuple (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/n-Tuple.html">https://mathworld.wolfram.com/n-Tuple.html</a>
</li>

<li>n-Vector (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/n-Vector.html">https://mathworld.wolfram.com/n-Vector.html</a>
</li>

<li>Matrix (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/Matrix.html">https://mathworld.wolfram.com/Matrix.html</a>
</li>

<li>Array (Wolfram MathWorld)<br />
<a href="https://mathworld.wolfram.com/Array.html">https://mathworld.wolfram.com/Array.html</a>
</li>

<li>ND Arrays (Tensors) in different languages<br />
<a href="https://www.youtube.com/watch?v=WbpbEilgQBc">https://www.youtube.com/watch?v=WbpbEilgQBc</a>
</li>

<li>Extending APL to Infinity\<br />
<a href="https://www.jsoftware.com/papers/eem/infinity.htm">https://www.jsoftware.com/papers/eem/infinity.htm</a>
</li>

<li>Vector Library (R7RS-compatible)<br />
<a href="https://srfi.schemers.org/srfi-133/srfi-133.html">https://srfi.schemers.org/srfi-133/srfi-133.html</a>
</li>

<li>Vectors (pro Gauche)<br />
<a href="https://practical-scheme.net/gauche/man/gauche-refe/Vectors.html">https://practical-scheme.net/gauche/man/gauche-refe/Vectors.html</a>
</li>

<li>Kawa: Compiling Scheme to Java<br />
<a href="https://www.mit.edu/afs.new/sipb/project/kawa/doc/kawa-tour.html">https://www.mit.edu/afs.new/sipb/project/kawa/doc/kawa-tour.html</a>
</li>

<li>Kawa in Languages shootout<br />
<a href="http://per.bothner.com/blog/2010/Kawa-in-shootout/">http://per.bothner.com/blog/2010/Kawa-in-shootout/</a>
</li>

<li>Kawa 2.0 Supports Scheme R7RS<br />
<a href="https://developers.slashdot.org/story/14/12/13/2259225/kawa-20-supports-scheme-r7rs/">https://developers.slashdot.org/story/14/12/13/2259225/kawa-20-supports-scheme-r7rs/</a>
</li>

<li>Kawa — fast scripting on the Java platform<br />
<a href="https://lwn.net/Articles/623349/">https://lwn.net/Articles/623349/</a>
</li>

<li>Incanter is a Clojure-based, R-like platform for statistical computing and graphics.<br />
<a href="http://incanter.org/">http://incanter.org/</a>
</li>

<li>Evolution of incanter (Gource Visualization)<br />
<a href="https://www.youtube.com/watch?v=TVfL5nPELr4">https://www.youtube.com/watch?v=TVfL5nPELr4</a>
</li>

<li>Questions tagged [incanter] (na Stack Overflow)<br />
<a href="https://stackoverflow.com/questions/tagged/incanter?sort=active">https://stackoverflow.com/questions/tagged/incanter?sort=active</a>
</li>

<li>Data Sorcery with Clojure<br />
<a href="https://data-sorcery.org/contents/">https://data-sorcery.org/contents/</a>
</li>

<li>Back to the Future: Lisp as a Base for a Statistical Computing System<br />
<a href="https://rd.springer.com/chapter/10.1007/978-3-7908-2084-3_2">https://rd.springer.com/chapter/10.1007/978-3-7908-2084-3_2</a>
</li>

<li>Incanter Cheat Sheet<br />
<a href="http://incanter.org/docs/incanter-cheat-sheet.pdf">http://incanter.org/docs/incanter-cheat-sheet.pdf</a>
</li>

<li>Back to the Future: Lisp as a Base for a Statistical Computing System (celá verze článku)<br />
<a href="https://www.researchgate.net/publication/227019917_Back_to_the_Future_Lisp_as_a_Base_for_a_Statistical_Computing_System">https://www.researchgate.net/publication/227019917_Back_to_the_Future_Lisp_as_a_Base_for_a_Statistical_Computing_System</a>
</li>

<li>BQN: finally, an APL for your flying saucer<br />
<a href="https://mlochbaum.github.io/BQN/">https://mlochbaum.github.io/BQN/</a>
</li>

<li>Is BQN stable?<br />
<a href="https://mlochbaum.github.io/BQN/commentary/stability.html">https://mlochbaum.github.io/BQN/commentary/stability.html</a>
</li>

<li>Specification: BQN system-provided values<br />
<a href="https://mlochbaum.github.io/BQN/spec/system.html">https://mlochbaum.github.io/BQN/spec/system.html</a>
</li>

<li>Tutorial: BQN expressions<br />
<a href="https://mlochbaum.github.io/BQN/tutorial/expression.html">https://mlochbaum.github.io/BQN/tutorial/expression.html</a>
</li>

<li>BQN primitives<br />
<a href="https://mlochbaum.github.io/BQN/doc/primitive.html">https://mlochbaum.github.io/BQN/doc/primitive.html</a>
</li>

<li>Function trains<br />
<a href="https://mlochbaum.github.io/BQN/doc/train.html">https://mlochbaum.github.io/BQN/doc/train.html</a>
</li>

<li>BQN community links<br />
<a href="https://mlochbaum.github.io/BQN/community/index.html">https://mlochbaum.github.io/BQN/community/index.html</a>
</li>

<li>BQN UV<br />
<a href="https://observablehq.com/@lsh/bqn-uv">https://observablehq.com/@lsh/bqn-uv</a>
</li>

<li>APL Wiki<br />
<a href="https://aplwiki.com/wiki/">https://aplwiki.com/wiki/</a>
</li>

<li>The Array Cast<br />
<a href="https://www.arraycast.com/episodes/episode-03-what-is-an-array">https://www.arraycast.com/episodes/episode-03-what-is-an-array</a>
</li>

<li>EnthusiastiCon 2019 &ndash; An Introduction to APL<br />
<a href="https://www.youtube.com/watch?v=UltnvW83_CQ">https://www.youtube.com/watch?v=UltnvW83_CQ</a>
</li>

<li>Dyalog<br />
<a href="https://www.dyalog.com/">https://www.dyalog.com/</a>
</li>

<li>Try APL!<br />
<a href="https://tryapl.org/">https://tryapl.org/</a>
</li>

<li>Lisp-Stat Information<br />
<a href="http://homepage.cs.uiowa.edu/~luke/xls/xlsinfo/">http://homepage.cs.uiowa.edu/~luke/xls/xlsinfo/</a>
</li>

<li>Sample Plots in Incanter<br />
<a href="https://github.com/incanter/incanter/wiki/Sample-Plots-in-Incanter#line">https://github.com/incanter/incanter/wiki/Sample-Plots-in-Incanter#line</a>
</li>

<li>vectorz-clj<br />
<a href="https://github.com/mikera/vectorz-clj">https://github.com/mikera/vectorz-clj</a>
</li>

<li>vectorz &ndash; Examples<br />
<a href="https://github.com/mikera/vectorz-clj/wiki/Examples">https://github.com/mikera/vectorz-clj/wiki/Examples</a>
</li>

<li>Basic Vector and Matrix Operations in Julia: Quick Reference and Examples<br />
<a href="https://queirozf.com/entries/basic-vector-and-matrix-operations-in-julia-quick-reference-and-examples">https://queirozf.com/entries/basic-vector-and-matrix-operations-in-julia-quick-reference-and-examples</a>
</li>

<li>Vectors and matrices in Julia<br />
<a href="https://fncbook.github.io/v1.0/linsys/demos/matrices-julia.html">https://fncbook.github.io/v1.0/linsys/demos/matrices-julia.html</a>
</li>

<li>Array vs Matrix in R Programming<br />
<a href="https://www.geeksforgeeks.org/array-vs-matrix-in-r-programming/">https://www.geeksforgeeks.org/array-vs-matrix-in-r-programming/</a>
</li>

<li>Concurrency (computer science)<br />
<a href="https://en.wikipedia.org/wiki/Category:Concurrency_%28computer_science%29">https://en.wikipedia.org/wiki/Category:Concurrency_%28computer_science%29</a>
</li>

<li>Koprogram<br />
<a href="https://cs.wikipedia.org/wiki/Koprogram">https://cs.wikipedia.org/wiki/Koprogram</a>
</li>

<li>Coroutine<br />
<a href="https://en.wikipedia.org/wiki/Coroutine">https://en.wikipedia.org/wiki/Coroutine</a>
</li>

<li>Coroutines in C<br />
<a href="http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html">http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html</a>
</li>

<li>S-expression (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/S-expression">https://en.wikipedia.org/wiki/S-expression</a>
</li>

<li>S-Expressions (Rosetta Code)<br />
<a href="http://rosettacode.org/wiki/S-Expressions">http://rosettacode.org/wiki/S-Expressions</a>
</li>

<li>Introducing Julia/Metaprogramming<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/Metaprogramming">https://en.wikibooks.org/wiki/Introducing_Julia/Metaprogramming</a>
</li>

<li>Tutorial for the Common Lisp Loop Macro<br />
<a href="http://www.ai.sri.com/pkarp/loop.html">http://www.ai.sri.com/pkarp/loop.html</a>
</li>

<li>Clojure Macro Tutorial (Part I, Getting the Compiler to Write Your Code For You)<br />
<a href="http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-i-getting.html">http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-i-getting.html</a>
</li>

<li>Clojure Macro Tutorial (Part II: The Compiler Strikes Back)<br />
<a href="http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-compiler.html">http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-compiler.html</a>
</li>

<li>Clojure Macro Tutorial (Part III: Syntax Quote)<br />
<a href="http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-syntax.html">http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-syntax.html</a>
</li>

<li>Clojure Macros and Metaprogramming<br />
<a href="http://clojure-doc.org/articles/language/macros.html">http://clojure-doc.org/articles/language/macros.html</a>
</li>

<li>Fatvat &ndash; Exploring functional programming: Clojure Macros<br />
<a href="http://www.fatvat.co.uk/2009/02/clojure-macros.html">http://www.fatvat.co.uk/2009/02/clojure-macros.html</a>
</li>

<li>CS 2101 Parallel Computing with Julia<br />
<a href="https://www.coursehero.com/file/11508091/CS-2101-Parallel-Computing-with-Julia/">https://www.coursehero.com/file/11508091/CS-2101-Parallel-Computing-with-Julia/</a>
</li>

<li>Julia By Example<br />
<a href="https://samuelcolvin.github.io/JuliaByExample/">https://samuelcolvin.github.io/JuliaByExample/</a>
</li>

<li>Array Programming<br />
<a href="https://en.wikipedia.org/wiki/Array_programming">https://en.wikipedia.org/wiki/Array_programming</a>
</li>

<li>Discovering Array Languages<br />
<a href="http://archive.vector.org.uk/art10008110">http://archive.vector.org.uk/art10008110</a>
</li>

<li>no stinking loops -- Kalothi<br />
<a href="http://www.nsl.com/">http://www.nsl.com/</a>
</li>

<li>Vector (obsahuje odkazy na články, knihy a blogy o programovacích jazycích APL, J a K)<br />
<a href="http://www.vector.org.uk/">http://www.vector.org.uk/</a>
</li>

<li>APL Interpreters<br />
<a href="http://www.vector.org.uk/?area=interpreters">http://www.vector.org.uk/?area=interpreters</a>
</li>

<li>APL_(programming_language<br />
<a href="http://en.wikipedia.org/wiki/APL_(programming_language">http://en.wikipedia.org/wiki/APL_(programming_language</a>
</li>

<li>APL FAQ<br />
<a href="http://www.faqs.org/faqs/apl-faq/">http://www.faqs.org/faqs/apl-faq/</a>
</li>

<li>APL FAQ (nejnovější verze)<br />
<a href="http://home.earthlink.net/~swsirlin/apl.faq.html">http://home.earthlink.net/~swsirlin/apl.faq.html</a>
</li>

<li>A+<br />
<a href="http://www.aplusdev.org/">http://www.aplusdev.org/</a>
</li>

<li>APLX<br />
<a href="http://www.microapl.co.uk/">http://www.microapl.co.uk/</a>
</li>

<li>FreeAPL<br />
<a href="http://www.pyr.fi/apl/index.htm">http://www.pyr.fi/apl/index.htm</a>
</li>

<li>Learning J (Roger Stokes)<br />
<a href="http://www.jsoftware.com/help/learning/contents.htm">http://www.jsoftware.com/help/learning/contents.htm</a>
</li>

<li>J: a modern, high-level, general-purpose, high-performance programming language<br />
<a href="http://www.jsoftware.com/">http://www.jsoftware.com/</a>
</li>

<li>K, Kdb: an APL derivative for Solaris, Linux, Windows<br />
<a href="http://www.kx.com">http://www.kx.com</a>
</li>

<li>openAPL (GPL)<br />
<a href="http://sourceforge.net/projects/openapl">http://sourceforge.net/projects/openapl</a>
</li>

<li>Parrot APL (GPL)<br />
<a href="http://www.parrotcode.org/">http://www.parrotcode.org/</a>
</li>

<li>Learning J (Roger Stokes)<br />
<a href="http://www.jsoftware.com/help/learning/contents.htm">http://www.jsoftware.com/help/learning/contents.htm</a>
</li>

<li>Rosetta Code<br />
<a href="http://rosettacode.org/wiki/Main_Page">http://rosettacode.org/wiki/Main_Page</a>
</li>

<li>Why APL<br />
<a href="http://www.acm.org/sigapl/whyapl.htm">http://www.acm.org/sigapl/whyapl.htm</a>
</li>

<li>Introducing Julia/Functions<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/Functions">https://en.wikibooks.org/wiki/Introducing_Julia/Functions</a>
</li>

<li>Functions (Julia documentation)<br />
<a href="https://docs.julialang.org/en/v1/manual/functions/">https://docs.julialang.org/en/v1/manual/functions/</a>
</li>

<li>Evaluate binomial coefficients<br />
<a href="http://rosettacode.org/wiki/Evaluate_binomial_coefficients">http://rosettacode.org/wiki/Evaluate_binomial_coefficients</a>
</li>

<li>Ackermann function<br />
<a href="http://rosettacode.org/wiki/Ackermann_function">http://rosettacode.org/wiki/Ackermann_function</a>
</li>

<li>Julia (front page)<br />
<a href="http://julialang.org/">http://julialang.org/</a>
</li>

<li>Julia &ndash; dokumentace<br />
<a href="http://docs.julialang.org/">http://docs.julialang.org/</a>
</li>

<li>Julia &ndash; repositář na GitHubu<br />
<a href="https://github.com/JuliaLang/julia">https://github.com/JuliaLang/julia</a>
</li>

<li>Julia (programming language)<br />
<a href="https://en.wikipedia.org/wiki/Julia_%28programming_language%29">https://en.wikipedia.org/wiki/Julia_%28programming_language%29</a>
</li>

<li>IJulia<br />
<a href="https://github.com/JuliaLang/IJulia.jl">https://github.com/JuliaLang/IJulia.jl</a>
</li>

<li>Introducing Julia<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia">https://en.wikibooks.org/wiki/Introducing_Julia</a>
</li>

<li>Julia: the REPL<br />
<a href="https://en.wikibooks.org/wiki/Introducing_Julia/The_REPL">https://en.wikibooks.org/wiki/Introducing_Julia/The_REPL</a>
</li>

<li>Month of Julia<br />
<a href="https://github.com/DataWookie/MonthOfJulia">https://github.com/DataWookie/MonthOfJulia</a>
</li>

<li>Learn X in Y minutes (where X=Julia)<br />
<a href="https://learnxinyminutes.com/docs/julia/">https://learnxinyminutes.com/docs/julia/</a>
</li>

<li>New Julia language seeks to be the C for scientists<br />
<a href="http://www.infoworld.com/article/2616709/application-development/new-julia-language-seeks-to-be-the-c-for-scientists.html">http://www.infoworld.com/article/2616709/application-development/new-julia-language-seeks-to-be-the-c-for-scientists.html</a>
</li>

<li>Julia: A Fast Dynamic Language for Technical Computing<br />
<a href="http://karpinski.org/publications/2012/julia-a-fast-dynamic-language">http://karpinski.org/publications/2012/julia-a-fast-dynamic-language</a>
</li>

<li>The LLVM Compiler Infrastructure<br />
<a href="http://llvm.org/">http://llvm.org/</a>
</li>

<li>Julia: benchmarks<br />
<a href="http://julialang.org/benchmarks/">http://julialang.org/benchmarks/</a>
</li>

<li>Type system<br />
<a href="https://en.wikipedia.org/wiki/Type_system">https://en.wikipedia.org/wiki/Type_system</a>
</li>

<li>Half-precision floating-point format<br />
<a href="https://en.wikipedia.org/wiki/Half-precision_floating-point_format">https://en.wikipedia.org/wiki/Half-precision_floating-point_format</a>
</li>

<li>Dartmouth BASIC<br />
<a href="https://en.wikipedia.org/wiki/Dartmouth_BASIC">https://en.wikipedia.org/wiki/Dartmouth_BASIC</a>
</li>

<li>BASIC 4th Edition<br />
<a href="http://www.bitsavers.org/pdf/dartmouth/BASIC_4th_Edition_Jan68.pdf">http://www.bitsavers.org/pdf/dartmouth/BASIC_4th_Edition_Jan68.pdf</a>
</li>

<li>VECTRAN<br />
<a href="https://encyclopedia2.thefreedictionary.com/VECTRAN">https://encyclopedia2.thefreedictionary.com/VECTRAN</a>
</li>

<li>Comparison of programming languages (array)<br />
<a href="https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(array)">https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(array)</a>
</li>

<li>BASIC at 50<br />
<a href="https://www.dartmouth.edu/basicfifty/commands.html">https://www.dartmouth.edu/basicfifty/commands.html</a>
</li>

<li>BBC Basic - arrays<br />
<a href="http://www.riscos.com/support/developers/bbcbasic/part2/arrays.html">http://www.riscos.com/support/developers/bbcbasic/part2/arrays.html</a>
</li>

<li>Datová struktura<br />
<a href="https://cs.wikipedia.org/wiki/Datov%C3%A1_struktura">https://cs.wikipedia.org/wiki/Datov%C3%A1_struktura</a>
</li>

<li>SIMD instrukce využívané v&nbsp;moderních mikroprocesorech řady x86<br />
<a href="https://www.root.cz/clanky/simd-instrukce-vyuzivane-v-modernich-mikroprocesorech-rady-x86/">https://www.root.cz/clanky/simd-instrukce-vyuzivane-v-modernich-mikroprocesorech-rady-x86/</a>
</li>

<li>SIMD instrukce v&nbsp;moderních mikroprocesorech řady x86 (2.část: SSE)<br />
<a href="https://www.root.cz/clanky/simd-instrukce-v-modernich-mikroprocesorech-rady-x86-2-cast-sse/">https://www.root.cz/clanky/simd-instrukce-v-modernich-mikroprocesorech-rady-x86-2-cast-sse/</a>
</li>

<li>SIMD instrukce v&nbsp;moderních mikroprocesorech řady x86 (3.část: SSE2)<br />
<a href="https://www.root.cz/clanky/simd-instrukce-v-modernich-mikroprocesorech-rady-x86-3-cast-sse2/">https://www.root.cz/clanky/simd-instrukce-v-modernich-mikroprocesorech-rady-x86-3-cast-sse2/</a>
</li>

<li>Inductive type<br />
<a href="https://en.wikipedia.org/wiki/Inductive_type">https://en.wikipedia.org/wiki/Inductive_type</a>
</li>

<li>JuliaMono, a font for programming<br />
<a href="https://github.com/cormullion/juliamono">https://github.com/cormullion/juliamono</a>
</li>

<li>It’s arrays all the way down<br />
<a href="https://xpqz.github.io/learnapl/array.html">https://xpqz.github.io/learnapl/array.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

