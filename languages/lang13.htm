<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<!-- 264e9349 -->
<title>Výuka programování &ndash; nástroje pro ilustraci činnosti mikroprocesoru</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Výuka programování &ndash; nástroje pro ilustraci činnosti mikroprocesoru</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Ve třinácté části seriálu o programovacích jazycích (a dalších prostředcích) určených pro výuku programování se budeme zabývat popisem nástrojů, které mohou pomoci vysvětlit činnost mikroprocesoru. Tyto nástroje jsou většinou založeny na imaginárním mikroprocesoru s jednoduchou a snadno pochopitelnou instrukční sadou.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Výuka programování &ndash; nástroje pro ilustraci činnosti mikroprocesoru</a></p>
<p><a href="#k02">2. &bdquo;Papírové&ldquo; pomůcky vysvětlující činnost počítače</a></p>
<p><a href="#k03">3. Instrukční sada papírového počítače CARDIAC</a></p>
<p><a href="#k04">4. Little Man Computer (LMC) &ndash; imaginární počítač s&nbsp;deseti instrukcemi</a></p>
<p><a href="#k05">5. Instrukční sada počítače LMC</a></p>
<p><a href="#k06">6. Porovnání LMC s&nbsp;počítačem CARDIAC a demonstrační příklad</a></p>
<p><a href="#k07">7. Jednoduché mikropočítače používané mj.&nbsp;i pro výuku</a></p>
<p><a href="#k08">8. Emulátor mikropočítače s&nbsp;mikroprocesorem 6502 naprogramovaný v&nbsp;JavaScriptu</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Výuka programování &ndash; nástroje pro ilustraci činnosti mikroprocesoru</h2>

<p>V&nbsp;předchozích dvanácti částech seriálu o programovacích jazycích
navržených takovým způsobem, aby je bylo možné efektivně použít pro výuku
programování, jsme se seznámili jak s&nbsp;klasickými jazyky používanými na
školách již po relativně dlouhou dobu, tak i s&nbsp;nástroji, které vznikly
teprve nedávno. Mezi dnes již klasické jazyky určené pro výuku programování
patří zejména jazyk <i>Karel</i> (k&nbsp;němuž se ještě jednou vrátíme, protože
se tento jazyk dočkal hned několika pěkných &bdquo;webových&ldquo;
reinkarnací), dále pak programovací jazyk <i>Logo</i>, různé varianty
<i>BASICu</i> (které mnohdy mají s&nbsp;původním BASICem společný už jen název)
a částečně také <i>Squeak</i>. Relativní novinky na tomto poli představují
projekty <i>Scratch</i>, <i>BYOB</i> (jenž je založen na Scratchi),
<i>Panther</i> (taktéž založen na Scratchi) a v&nbsp;neposlední řadě i projekt
<i>Alice</i>, což je poměrně komplexní nástroj vhodný pro různé věkové skupiny,
jehož popisem se budeme zabývat v&nbsp;některé následující části tohoto
seriálu.</p>

<img src="http://i.iinfo.cz/images/123/lang1301.png" width="450" height="288" alt=" " />
<p><i>Obrázek 1: SIMCO je název pro velmi jednoduchý fiktivní počítač určený
pro snadné vysvětlení funkcí procesoru.</i></p>

<p>Všechny výše zmíněné programovací jazyky i další programové nástroje a
aplikace mají i přes množství odlišností jednu vlastnost společnou &ndash;
zavádí totiž dosti vysokou úroveň abstrakce od principu práce samotného
počítače. To samozřejmě není při výuce programování na škodu, spíše je tomu
právě naopak. V&nbsp;některých situacích, zejména na odborných středních a
vysokých školách (ale i v&nbsp;různých zájmových kroužcích), je však nutné
vhodným a především názorným způsobem vysvětlit i princip práce počítače a
zejména pak (mikro)procesoru, který tvoří jeho ústřední část. I pro tento účel
vzniklo poměrně velké množství pomůcek, ať již se jedná o různé typy
&bdquo;papírových počítačů&ldquo;, tak i o simulátory zjednodušených ale i
reálných mikroprocesorů. K&nbsp;dispozici byly a dodnes jsou i velmi jednoduché
mikropočítače s&nbsp;minimem periferních zařízení, které lze pro vysvětlení
činnosti počítače (mikroprocesoru) využít. Mezi tato zařízení lze zahrnout i
populární jednodeskové minipočítače <i>Arduino</i> a <i>Amicus</i>.</p>

<img src="http://i.iinfo.cz/images/349/lang1302.png" width="450" height="272" alt=" " />
<p><i>Obrázek 2: Papírový počítač CARDIAC popsaný v&nbsp;následujících dvou
kapitolách.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. &bdquo;Papírové&ldquo; pomůcky vysvětlující činnost počítače</h2>

<p>Mezi jedny z&nbsp;nejstarších pomůcek určených pro vysvětlení činnosti
mikroprocesoru patří takzvané &bdquo;papírové počítače&ldquo;. Někteří čtenáři
<a href="http://www.root.cz">Roota</a> si určitě pamatují na papírový počítač
nazvaný poněkud honosně <i>Computer Game System</i>, který byl vydaný Mladou
frontou (VTM) v&nbsp;roce 1982 v&nbsp;magazínu &bdquo;Logika
v&nbsp;kostce&ldquo;, nebo na podobnou pomůcku vydanou v&nbsp;roce 1986
časopisem ABC (viz odkazy uvedené na konci této kapitoly). Ovšem papírové
počítače jsou ve skutečnosti mnohem starší. Mezi nejznámější pomůcku tohoto
typu patří <i>CARDIAC</i>, neboli plným názvem <i>CARDboard Illustrative Aid to
Computation</i>. Jedná se o papírovou obdobu procesorové jednotky s&nbsp;jedním
akumulátorem a připojenou pamětí navrženou již v&nbsp;letech 1966 až 1968
<i>Davidem Hagelbargerem</i> a <i>Saulem Fingermanem</i> pro společnost Bell
Telephone Laboratories. Účelem této pomůcky byla především výuka algoritmizace
s&nbsp;využitím jazyka symbolických instrukcí (assembleru), popř.&nbsp;též
přímo strojového jazyka. Překlad z&nbsp;assembleru do strojového jazyka byl
v&nbsp;tomto případě prováděn ručně, jednalo se však o jednoduchou mechanickou
činnost.</p>

<img src="http://i.iinfo.cz/images/571/lang1303.jpg" width="570" height="613" alt=" " />
<p><i>Obrázek 3: Takto vypadá originální papírový počítač CARDIAC.</i></p>

<p>Užitečné odkazy:</p>

<ol>

<li>Papírový počítač CGS - Root.cz<br />
<a href="http://www.root.cz/clanky/papirovy-pocitac-cgs/">http://www.root.cz/clanky/papirovy-pocitac-cgs/</a>
</li>

<li>Computer Game System<br />
<a href="http://mmm.webz.cz/pocitadla/cgs.html">http://mmm.webz.cz/pocitadla/cgs.html</a>
</li>

<li>CARDIAC paper computer emulator<br />
<a href="http://boingboing.net/2009/06/03/cardiac-paper-comput-1.html">http://boingboing.net/2009/06/03/cardiac-paper-comput-1.html</a>
</li>

<li>cardiac<br />
<a href="http://www.porticus.org/bell/belllabs_kits_cardiac.html">http://www.porticus.org/bell/belllabs_kits_cardiac.html</a>
</li>

<li>CARDboard Illustrative Aid to Computation (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CARDboard_Illustrative_Aid_to_Computation">http://en.wikipedia.org/wiki/CARDboard_Illustrative_Aid_to_Computation</a>
</li>

<li>cinc - CARDIAC computer naprogramovaný v&nbsp;Javě<br />
<a href="http://sourceforge.net/projects/cinc/">http://sourceforge.net/projects/cinc/</a>
</li>

<li>CARDIAC computer - recreation<br />
<a href="http://www.kylem.net/pages/projects/cardiac.html">http://www.kylem.net/pages/projects/cardiac.html</a>
</li>

</ol>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instrukční sada papírového počítače CARDIAC</h2>

<p>Papírový počítač <i>CARDIAC</i> pracoval s&nbsp;numerickými číslicemi o
základu 10 a kapacita jeho paměti byla rovna přesně jednomu stu paměťových
buněk, z&nbsp;nichž každá mohla obsahovat celočíselnou hodnotu od -999 do 999.
Většina paměťových buněk se chovala jako běžná paměť RAM s&nbsp;výjimkou první
buňky (adresa=0), jenž vždy obsahovala jedničku a taktéž buňky poslední
(adresa=99), která sloužila pro zapamatování původní adresy programového
čítače. Jednalo se vlastně o jednoúrovňový zásobník, který zde musel být
použit, protože instrukční sada neobsahovala příkaz typu
<strong>RETURN</strong> (namísto toho stačilo provést skok na obsah buňky 99).
Kromě paměti o kapacitě 100 číslic obsahoval procesor tohoto počítače i
akumulátor, u nějž bylo možné testovat, zda obsahuje kladnou či zápornou
hodnotu. Programy se pro tento papírový počítač zapisovaly v&nbsp;jazyku
symbolických instrukcí (assembleru), přičemž instrukční sada byla velmi
jednoduchá, protože obsahovala pouhých deset instrukcí.</p>

<a href="http://i.iinfo.cz/images/409/lang1304.jpg"><img src="http://i.iinfo.cz/images/409/lang1304-prev.jpg" width="370" height="187" alt=" " /></a>
<p><i>Obrázek 4: jcinc je jednoduchý emulátor počítače CARDIAC naprogramovaný
v&nbsp;Javě.</i></p>

<p>Každá instrukce se ručně překládala do strojového kódu, přičemž kód každé
instrukce byl složen z&nbsp;trojice číslic &ndash; první číslice obsahovala
vlastní operační kód instrukce a další dvě číslice obsahovaly adresu operandu,
popř.&nbsp;adresu cíle skoku. Celý instrukční soubor tohoto počítače je pro
ilustraci zapsán v&nbsp;následující tabulce:</p>

<table>
<tr><th>Operační kód</th><th>Zkratka instrukce</th><th>Původní anglický termín</th><th>Význam instrukce</th></tr>
<tr><td>0</td><td>INP</td><td>INPut</td><td>načtení čísla ze vstupní karty a zápis do paměti</td></tr>
<tr><td>1</td><td>CLA</td><td>CLear and Add</td><td>načtení hodnoty z paměti do akumulátoru</td></tr>
<tr><td>2</td><td>ADD</td><td>ADD</td><td>přičtení hodnoty z paměti do akumulátoru</td></tr>
<tr><td>3</td><td>TAC</td><td>Test Accumulator Content</td><td>test, zda akumulátor obsahuje kladné či záporné číslo (při záporném čísle se provede podmíněný skok)</td></tr>
<tr><td>4</td><td>SFT</td><td>ShiFT</td><td>bitový posun doleva či doprava</td></tr>
<tr><td>5</td><td>OUT</td><td>OUTput</td><td>zápis čísla ze zvolené paměťové buňky na výstup</td></tr>
<tr><td>6</td><td>STO</td><td>STOre</td><td>uložení obsahu akumulátoru do operační paměti</td></tr>
<tr><td>7</td><td>SUB</td><td>SUBtract</td><td>odečtení hodnoty načtené z paměti od akumulátoru</td></tr>
<tr><td>8</td><td>JMP</td><td>JuMP</td><td>skok na určenou adresu s uložením původního obsahu programového čítače do buňky 99</td></tr>
<tr><td>9</td><td>HRS</td><td>Halt and ReseT</td><td>skok na zadanou adresu a zastavení programu</td></tr>
</table>

<img src="http://i.iinfo.cz/images/544/lang1305.jpg" width="500" height="363" alt=" " />
<p><i>Obrázek 5: Další, tentokrát vizuálně přesný emulátor počítače
CARDIAC.</i></p>

<p>Jednoduchý program pro součet dvou čísel načtených ze vstupu by mohl vypadat
následovně (převod z&nbsp;assembleru do strojového kódu byl proveden
ručně):</p>

<table>
<tr><th>Adresa</th><th>Operační kód</th><th>Assembler</th></tr>
<tr><td>17</td><td>034</td><td>INP 34 ; načti vstup a ulož ho do buňky 34</td></tr>
<tr><td>18</td><td>035</td><td>INP 35 ; načti vstup a ulož ho do buňky 35</td></tr>
<tr><td>19</td><td>134</td><td>CLA 34 ; vymaž akumulátor a načti do něj obsah buňky 34</td></tr>
<tr><td>20</td><td>235</td><td>ADD 35 ; přičti k akumulátoru obsah buňky 35</td></tr>
<tr><td>21</td><td>636</td><td>STO 36 ; ulož výsledek součtu do buňky 36</td></tr>
<tr><td>22</td><td>536</td><td>OUT 36 ; obsah této buňky (36) vytiskni na výstup</td></tr>
<tr><td>23</td><td>900</td><td>HRS    ; finito</td></tr>
</table>



<p><a name="k04"></a></p>
<h2 id="k04">4. Little Man Computer (LMC) &ndash; imaginární počítač s&nbsp;deseti instrukcemi</h2>

<p>Papírový počítač <i>CARDIAC</i> samozřejmě není jedinou pomůckou užitečnou
při vysvětlování principu činnosti počítače a mikroprocesoru. Další velmi
podobnou pomůckou je <i>Little Man Computer (LMC)</i>, což je velmi jednoduchý
fiktivní počítač s&nbsp;von Neumannovou architekturou, který byl vytvořený
<i>Stuartem Madnickem</i> již v&nbsp;roce 1965, ale používá se při výuce
dodnes. Mezi <i>CARDIACem</i> a <i>LMC</i> můžeme objevit mnoho shodných
vlastností, které se týkají jak architektur obou počítačů, tak i způsobu zápisu
programů v&nbsp;jazyku symbolických instrukcí nebo přímo ve strojovém kódu
(s&nbsp;tím rozdílem, že pro <i>LMC</i> existuje skutečný assembler
s&nbsp;podporou symbolických adres=návěští, takže překlad není nutné provádět
ručně). Fiktivní počítač <i>LMC</i> obsahuje operační paměť o kapacitě 100
buněk (nazývaných původně mailboxy), přičemž každá buňka může obsahovat
trojciferné kladné číslo. Záporná čísla není možné do paměti ukládat; jedinou
výjimkou je instrukce rozdílu (<strong>SUB</strong>), která dokáže do procesoru
uložit příznak záporného výsledku.</p>

<p>Kromě operační paměti obsahuje fiktivní počítač <i>LMC</i> taktéž
akumulátor, vstupní registr <strong>INPUT</strong>, výstupní registr
<strong>OUTPUT</strong> a samozřejmě taktéž programový čítač
<strong>PC</strong>, jehož obsah může nabývat hodnot 00 až 99. Instrukční kód
počítače <i>LMC</i> obsahuje deset instrukcí a jednu pseudoinstrukci
<strong>DAT</strong>, která je použita assemblerem pro symbolické pojmenování
paměťového místa. To znamená, že v&nbsp;programech není nutné používat
absolutní adresy, protože přepočet symbolických názvů (návěští/<i>label</i>) na
adresy provede automaticky assembler.</p>

<p>Užitečné odkazy:</p>

<ol>

<li>Little Man Computer (JavaScript Emulator)<br />
<a href="http://matt.krutar.org/LMC4/">http://matt.krutar.org/LMC4/</a>
</li>

<li>Little Man Computer (emulátor pro Android)<br />
<a href="http://android.pdassi.de/124580/LMC_Emulator.html">http://android.pdassi.de/124580/LMC_Emulator.html</a>
</li>

<li>Little man computer (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Little_Man_Computer">http://en.wikipedia.org/wiki/Little_Man_Computer</a>
</li>

<li>The "Little Man" Computer<br />
<a href="http://elearning.algonquincollege.com/coursemat/dat2343/lectures.f03/12-LMC.htm">http://elearning.algonquincollege.com/coursemat/dat2343/lectures.f03/12-LMC.htm</a>
</li>

</ol>

<a href="http://i.iinfo.cz/images/510/lang1306.png"><img src="http://i.iinfo.cz/images/510/lang1306-prev.png" width="259" height="270" alt=" " /></a>
<p><i>Obrázek 6: Emulátor počítače LMC naprogramovaný
v&nbsp;JavaScriptu.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Instrukční sada počítače LMC</h2>

<p>Podobně jako v&nbsp;případě výše popsaného papírového počítače
<i>CARDIAC</i> si v&nbsp;této kapitole vypíšeme instrukční sadu počítače
<i>LMC</i>. Ta je opět velmi jednoduchá:</p>

<table>
<tr><th>Operační kód</th><th>Zkratka instrukce</th><th>Původní anglický termín</th><th>Význam instrukce</th></tr>
<tr><td>1xx</td><td>ADD</td><td>ADD</td><td>přičtení hodnoty z&nbsp;buňky <strong>xx</strong> k&nbsp;obsahu akumulátoru</td></tr>
<tr><td>2xx</td><td>SUB</td><td>SUBtract</td><td>odečtení hodnoty z&nbsp;buňky <strong>xx</strong> od obsahu akumulátoru</td></tr>
<tr><td>3xx</td><td>STA</td><td>STore Accumulator</td><td>uložení akumulátoru do buňky <strong>xx</strong></td></tr>
<tr><td>5xx</td><td>LDA</td><td>LoaD Accumulator</td><td>načtení hodnoty z&nbsp;buňky <strong>xx</strong> do akumulátoru</td></tr>
<tr><td>6xx</td><td>BRA</td><td>BRAnch</td><td>nepodmíněný skok na adresu <strong>xx</strong></td></tr>
<tr><td>7xx</td><td>BRZ</td><td>BRanch if Zero</td><td>skok na adresu <strong>xx</strong> v&nbsp;případě, že je akumulátor nulový</td></tr>
<tr><td>8xx</td><td>BRP</td><td>BRanch if Positive</td><td>skok na adresu <strong>xx</strong> v&nbsp;případě, že je akumulátor nulový nebo obsahuje kladnou hodnotu (testováno po operaci <strong>SUB</strong>)</td></tr>
<tr><td>901</td><td>INP</td><td>INPut</td><td>zápis hodnoty na vstupu do akumulátoru</td></tr>
<tr><td>902</td><td>OUT</td><td>OUTput</td><td>zápis hodnoty akumulátoru na výstup</td></tr>
<tr><td>000</td><td>HLT</td><td>HaLT</td><td>ukončení programu</td></tr>
</table>



<p><a name="k06"></a></p>
<h2 id="k06">6. Porovnání LMC s&nbsp;počítačem CARDIAC a demonstrační příklad</h2>

<p>Při pohledu na tuto instrukční sadu je patrné, že se instrukce fiktivního
počítače <i>LMC</i> v&nbsp;podstatě ani příliš neliší od instrukcí výše
popsaného počítače <i>CARDIAC</i>. Operační kódy instrukcí i jejich
mnemotechnické zkratky jsou sice odlišné a i instrukce pro vstup a výstup
pracují jinak (zde s&nbsp;obsahem akumulátoru, protože neobsahují adresní
část), ale oba počítače <i>CARDIAC</i> i <i>LMC</i> vlastně modelují činnost
prakticky shodných počítačů s&nbsp;von Neumannovou architekturou a
mikroprocesorem s&nbsp;jediným akumulátorem.</p>

<a href="http://cdn2.staztic.com/screenshots/lmc-emulator-150-1.jpg">http://cdn2.staztic.com/screenshots/lmc-emulator-150-1.jpg</a>
<p><i>Obrázek 7: Emulátor počítače LMC pro systém Android.</i></p>

<p>Podívejme se nyní na jednoduchý program pro součet dvou čísel načtených ze
vstupu (podobný program je umístěný <a
href="http://www.atkinson.yorku.ca/~sychen/research/LMC/LMCMath.html">na této
stránce</a>):</p>

<pre>
INP             ; načtení prvního čísla
STA    FIRST    ; uložení do paměti
INP             ; načtení druhého čísla
STA    SECOND   ; uložení do paměti
LDA    FIRST    ; první načtené číslo do akumulátor
ADD    SECOND   ; provedení součtu
OUT             ; součet je poslán na výstup
HLT             ; konec programu
                ;
FIRST  DAT      ; pojmenovaná paměťová buňka pro první číslo
SECOND DAT      ; pojmenovaná paměťová buňka pro druhé číslo
</pre>

<a href="http://i.iinfo.cz/images/216/pc102-07.jpg"><img src="http://i.iinfo.cz/images/216/pc102-07-prev.jpg" width="370" height="230" alt="pc102_07" /></a>
<p><i>Obrázek 8: Počítač Tesla PMI-80. Vlevo nahoře (zelený soket) můžeme vidět
mikroprocesor MHB 8080A i další podpůrné obvody (včetně pamětí), vpravo je
klávesnice a nad ní (červený pruh) devítimístný sedmisegmentový displej.
Počítač zobrazený na tomto snímku byl upravený &ndash; LED na spodní části
plošného spoje ani dvojice tlačítek "0" a "D" nejsou v&nbsp;originálním PMI-80
použity.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Jednoduché mikropočítače používané mj.&nbsp;i pro výuku</h2>

<p>Kromě &bdquo;papírových počítačů&ldquo; (<i>CARDIAC</i>, <i>Computer Game
System</i>) nebo počítačů emulovaných na jiném typu stroje (<i>Little Man
Computer</i> se na některých typech škol používají i jednoduché mikropočítače
s&nbsp;minimem periferních zařízení, které jsou většinou osazené nějakým
jednoduchým mikroprocesorem. Předností těchto zařízení je především to, že se
jejich funkce dá vysvětlit v&nbsp;několika hodinách a navíc takové
mikropočítače neobsahují žádné &bdquo;magické&ldquo; součásti, jakou je
například BIOS nebo složitý řadič disku či displeje. Jedním z&nbsp;velmi
jednoduchých mikropočítačů používaných především v&nbsp;minulosti
v&nbsp;tuzemsku (ČSSR), je počítač nazvaný <i>PMI-80</i>, jenž byl vyráběný od
roku 1982 v&nbsp;Tesle Piešťany. Jedná se o počítač, který byl určený především
pro výuku programování (konkrétně se jedná o programování v&nbsp;assembleru či
přímo ve strojovém kódu mikroprocesoru <i>Intel 8080</i>), jehož architektura
byla z&nbsp;velké části postavena na (tehdejší) tuzemské součástkové
základně.</p>

<img src="http://i.iinfo.cz/images/275/pc102-08.jpg" width="250" height="244" alt="pc102_08" />
<p><i>Obrázek 9: Detail klávesnice počítače PMI-80.</i></p>

<p>Základem osmibitového počítače <i>PMI-80</i> byl mikroprocesor <i>Intel
8080</i> (který se v&nbsp;ČSSR vyráběl pod označením <i>MHB 8080A</i>)
taktovaný v&nbsp;případě tohoto počítače na 1 MHz, ovšem frekvence se dala
poměrně jednoduše zvýšit: postačilo pouze změnit rutiny pro čtení a zápis dat
na magnetofon. Tento mikroprocesor byl doplněn o operační paměť
s&nbsp;kapacitou 1 KB, paměť ROM taktéž s&nbsp;kapacitou 1 KB a další nezbytné
podpůrné obvody, především čipy <i>8224</i> a <i>8228</i>, ke kterým byl
v&nbsp;počítači <i>PMI-80</i> přidán ještě obvod <i>8255</i> nabízející tři
konfigurovatelné osmibitové vstupně/výstupní brány zajišťující jak řízení
displeje a klávesnice, tak i umožňující připojení dalších periferních zařízení
k&nbsp;tomuto počítači. Jako vnější paměť se používal běžný magnetofon (páskový
či kazetový). Ve školních laboratořích se v&nbsp;pozdějších dobách tento
počítač doplňoval obvodem UART umožňujícím komunikaci s&nbsp;osobním počítačem
PC, takže se jako vnější paměť dal použít i jeho pevný disk (poněkud paradoxní
přitom je, že DSP procesor na disku má mnohem větší výkonnost než celý
<i>PMI-80</i>).</p>

<img src="http://i.iinfo.cz/images/177/pc102-09.jpg" width="450" height="268" alt="pc102_09" />
<p><i>Obrázek 10: Integrované obvody, které tvořily ústřední část počítače
PMI-80: osmibitový mikroprocesor MHB 8080A, podpůrné obvody 8224 a 8228, paměť
ROM, paměť RAM (2&times;1024&times;4 bity) a paralelní vstupně-výstupní brány
realizované obvody 8255. Paměťové čipy typu MHB 2114 měly strukturu
1024&times;4 bity, doba přístupu do paměti dosahovala 450 ns a maximální příkon
byl 500 mW. Tyto čipy měly 10 adresových pinů, 4 vstupně/výstupní piny pro
data, pin pro výběr čipu (!CS) a pin pro řízení čtení/zápisu (!WE), což spolu
s&nbsp;dvěma piny pro napájení (Ucc, GND) znamenalo, že se tento čip umisťoval
do pouzdra DIL s&nbsp;18 nožičkami a přitom nebylo nutné používat
multiplexování adresy.</i></p>

<p><i>PMI-80</i> dále obsahoval jednoduchou klávesnici určenou pro zápis
programů ve strojovém kódu, spouštění těchto programů a dokonce i jejich
krokování s&nbsp;možností výpisu obsahu registrů po každém kroku. Hlavním
výstupním zařízením byla osmice sedmisegmentových displejů složených
z&nbsp;LED, které byly ovládány programově, takže bylo možné se pokusit o výpis
čísel, textů (s&nbsp;problematickými písmeny M, X, V) atd. Jednalo se skutečně
o velmi jednoduchý stroj, v&nbsp;jehož 1 KB paměti ROM byl základní operační
systém, který byl taktéž snadno pochopitelný. Další předností tohoto
technologicky dávno překonaného zařízení byla možnost připojení osciloskopu
k&nbsp;libovolným pinům mikroprocesoru, k&nbsp;jeho podpůrným obvodům či
k&nbsp;paměti, takže se například mohla jednoduše sledovat komunikace po
sběrnici. To je přednost, kterou při použití mikrořadičů částečně ztrácíme,
protože mikrořadiče obsahují veškeré potřebné podpůrné obvody i paměť na
jediném čipu.</p>

<p>Užitečné odkazy:</p>

<ol>

<li>Czechoslovakian Home-Computers<br />
<a href="http://www.homecomputer.de/pages/easteurope_cz.html">http://www.homecomputer.de/pages/easteurope_cz.html</a>
</li>

<li>Minimalism (computing)<br />
<a href="http://en.wikipedia.org/wiki/Minimalism_(computing)">http://en.wikipedia.org/wiki/Minimalism_(computing)</a>
</li>

<li>Tesla PMI-80<br />
<a href="http://osmi.tarbik.com/cssr/pmi80.html">http://osmi.tarbik.com/cssr/pmi80.html</a>
</li>

<li>PMI-80<br />
<a href="http://en.wikipedia.org/wiki/PMI-80">http://en.wikipedia.org/wiki/PMI-80</a>
</li>

<li>PMI-80<br />
<a href="http://www.old-computers.com/MUSEUM/computer.asp?st=1&c=1016">http://www.old-computers.com/MUSEUM/computer.asp?st=1&c=1016</a>
</li>

<li>Root.cz: Československé osmibitové počítače<br />
<a href="http://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace/">http://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace/</a>
</li>

<li>Root.cz: Československé osmibitové počítače 2 - PMD 85<br />
<a href="http://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace-2-ndash-pmd-85/">http://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace-2-ndash-pmd-85/</a>
</li>

<li>Root.cz: Československé osmibitové počítače: emulátory PMD 85<br />
<a href="http://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace-aplikace-a-emulatory-pmd-85/">http://www.root.cz/clanky/ceskoslovenske-osmibitove-pocitace-aplikace-a-emulatory-pmd-85/</a>
</li>

</ol>



<p><a name="k08"></a></p>
<h2 id="k08">8. Amicus a Arduino ve funkci zmodernizované varianty PMI-80</h2>

<p>V&nbsp;současnosti sice taktéž existují podobné specializované počítače
s&nbsp;vlastní klávesnicí a jednoduchým displejem, ovšem pro výuku (zejména
v&nbsp;různých počítačových a elektrotechnických kroužcích) se používají spíše
malé a současně i levné jednodeskové počítače založené na některém moderním
mikrořadiči; především jsou využívané osmibitové mikrořadiče řady <i>PIC16</i>
a <i>PIC18</i>, dále čipy <i>Atmel</i> či mikrořadiče s&nbsp;jádrem <i>ARM</i>.
Oblíbené jsou zejména mikropočítače <i>Arduino</i> (i když instrukční sada
jejich procesorů je relativně složitá, takže se používají zejména pro výuku
Céčka a na &bdquo;bastlení&ldquo; různých přídavných zařízení) a taktéž
mikropočítače <i>Amicus</i> založené na mikrořadičích <i>PIC18</i>, jejichž
instrukční sada je velmi jednoduchá, i když je v&nbsp;některých ohledech
poněkud neobvyklá. Kromě toho lze využít i herní konzoli <i>Uzebox</i>,
s&nbsp;jejímž popisem jsme se již seznámili v&nbsp;paralelně běžícím <a
href="http://www.root.cz/serialy/co-se-deje-v-pocitaci/">seriálu o
architekturách počítačů</a>.</p>

<a href="http://i.iinfo.cz/images/692/pc126-14.png"><img src="http://i.iinfo.cz/images/692/pc126-14-prev.png" width="370" height="205" alt=" " /></a>
<p><i>Obrázek 11: Vývojový kit Amicus s&nbsp;mikrořadičem PIC. Tento vývojový
kit byl inspirován kitem Arduino určeným pro mikrořadiče Atmel AVR.</i></p>

<p>Všechna zmíněná zařízení se na rozdíl od výše popsaného osmibitového
mikropočítače <i>PMI-80</i> programují přímo na osobním počítači, což je
v&nbsp;mnoha ohledech výhodnější, protože uživatelské programy je možné
připravovat v&nbsp;mnohdy velmi sofistikovaných vývojových prostředích,
používat assemblery namísto ručního překladu strojového kódu (i když tomu
samozřejmě pro účely výuky nic nebrání) a taktéž si program odzkoušet
v&nbsp;emulátoru, což alespoň částečně nahrazuje krokování a použití
osciloskopu na reálném HW. Předností je i nízká pořizovací cena a možnost
tvorby reálně použitelných systémů, protože všechny zmíněné jednodeskové
počítače mají dostatečnou kapacitu paměti programu i dostatečnou výpočetní
rychlost pro řízení různých robotů, ovládání plotterů, syntézu hudby atd. Navíc
mikropočítač/herní konzole <i>Uzebox</i> dokáže programově generovat video
signál, což s&nbsp;sebou přináší i další zajímavé oblasti použití.</p>

<a href="http://i.iinfo.cz/images/260/pc137-1.jpg"><img src="http://i.iinfo.cz/images/260/pc137-1-prev.jpg" width="370" height="269" alt=" " /></a>
<p><i>Obrázek 12: Herní konzole Uzebox obsahující osmibitový mikrořadič AVR
řady ATmega, konkrétně typ ATmega644. Na základní desce můžeme vidět dvojici
konektorů určených pro připojení ovladačů SNES, konektor pro výstup
kompozitního videa i patici pro připojení menšího plošného spoje
s&nbsp;vlastním mikrořadičem.</i></p>

<p>Užitečné odkazy:</p>

<ol>

<li>Arduino home page<br />
<a href="http://www.arduino.cc/">http://www.arduino.cc/</a>
</li>

<li>Arduino: vývojový kit pro hrátky s hardware (Root.cz)<br />
<a href="http://www.root.cz/clanky/arduino-vyvojovy-kit-pro-hratky-s-hardware/">http://www.root.cz/clanky/arduino-vyvojovy-kit-pro-hratky-s-hardware/</a>
</li>

<li>Intro to the Arduino - Weekend Project PDFcast<br />
<a href="http://blog.makezine.com/archive/2007/09/intro-to-the-arduino-week.html">http://blog.makezine.com/archive/2007/09/intro-to-the-arduino-week.html</a>
</li>

<li>Arduino Diecimila: Začněte s mikroprocesory<br />
<a href="http://www.techdot.eu/index.php/2008/01/19/arduino-diecimila-zacnete-s-mikroprocesory/">http://www.techdot.eu/index.php/2008/01/19/arduino-diecimila-zacnete-s-mikroprocesory/</a>
</li>

<li>Arduino (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Arduino">http://cs.wikipedia.org/wiki/Arduino</a>
</li>

<li>Arduino (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Arduino">http://en.wikipedia.org/wiki/Arduino</a>
</li>

<li>Amicus home page<br />
<a href="http://www.myamicus.co.uk/">http://www.myamicus.co.uk/</a>
</li>

</ol>



<p><a name="k09"></a></p>
<h2 id="k09">9. Odkazy na Internetu</h2>

<ol>

<li>Little Man Computer (JavaScript Emulator)<br />
<a href="http://matt.krutar.org/LMC4/">http://matt.krutar.org/LMC4/</a>
</li>

<li>Little Man Computer (emulátor pro Android)<br />
<a href="http://android.pdassi.de/124580/LMC_Emulator.html">http://android.pdassi.de/124580/LMC_Emulator.html</a>
</li>

<li>Little man computer (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Little_Man_Computer">http://en.wikipedia.org/wiki/Little_Man_Computer</a>
</li>

<li>The "Little Man" Computer<br />
<a href="http://elearning.algonquincollege.com/coursemat/dat2343/lectures.f03/12-LMC.htm">http://elearning.algonquincollege.com/coursemat/dat2343/lectures.f03/12-LMC.htm</a>
</li>

<li>LC-3 (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/LC-3">http://en.wikipedia.org/wiki/LC-3</a>
</li>

<li>Papírový počítač CGS - Root.cz<br />
<a href="http://www.root.cz/clanky/papirovy-pocitac-cgs/">http://www.root.cz/clanky/papirovy-pocitac-cgs/</a>
</li>

<li>Computer Game System<br />
<a href="http://mmm.webz.cz/pocitadla/cgs.html">http://mmm.webz.cz/pocitadla/cgs.html</a>
</li>

<li>CARDIAC paper computer emulator<br />
<a href="http://boingboing.net/2009/06/03/cardiac-paper-comput-1.html">http://boingboing.net/2009/06/03/cardiac-paper-comput-1.html</a>
</li>

<li>CARDboard Illustrative Aid to Computation (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/CARDboard_Illustrative_Aid_to_Computation">http://en.wikipedia.org/wiki/CARDboard_Illustrative_Aid_to_Computation</a>
</li>

<li>cinc - CARDIAC computer naprogramovaný v&nbsp;Javě<br />
<a href="http://sourceforge.net/projects/cinc/">http://sourceforge.net/projects/cinc/</a>
</li>

<li>cardiac<br />
<a href="http://www.porticus.org/bell/belllabs_kits_cardiac.html">http://www.porticus.org/bell/belllabs_kits_cardiac.html</a>
</li>

<li>CARDIAC computer - recreation<br />
<a href="http://www.kylem.net/pages/projects/cardiac.html">http://www.kylem.net/pages/projects/cardiac.html</a>
</li>

<li>Arduino home page<br />
<a href="http://www.arduino.cc/">http://www.arduino.cc/</a>
</li>

<li>Arduino: vývojový kit pro hrátky s hardware (Root.cz)<br />
<a href="http://www.root.cz/clanky/arduino-vyvojovy-kit-pro-hratky-s-hardware/">http://www.root.cz/clanky/arduino-vyvojovy-kit-pro-hratky-s-hardware/</a>
</li>

<li>Intro to the Arduino - Weekend Project PDFcast<br />
<a href="http://blog.makezine.com/archive/2007/09/intro-to-the-arduino-week.html">http://blog.makezine.com/archive/2007/09/intro-to-the-arduino-week.html</a>
</li>

<li>Arduino Diecimila: Začněte s mikroprocesory<br />
<a href="http://www.techdot.eu/index.php/2008/01/19/arduino-diecimila-zacnete-s-mikroprocesory/">http://www.techdot.eu/index.php/2008/01/19/arduino-diecimila-zacnete-s-mikroprocesory/</a>
</li>

<li>Arduino (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Arduino">http://cs.wikipedia.org/wiki/Arduino</a>
</li>

<li>Arduino (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Arduino">http://en.wikipedia.org/wiki/Arduino</a>
</li>

<li>Amicus home page<br />
<a href="http://www.myamicus.co.uk/">http://www.myamicus.co.uk/</a>
</li>

<li>6502asm.com (emulátor 6502)<br />
<a href="http://6502asm.com/">http://6502asm.com/</a>
</li>

<li>Panther - home page<br />
<a href="http://pantherprogramming.weebly.com/">http://pantherprogramming.weebly.com/</a>
</li>

<li>Panther - downloads<br />
<a href="http://pantherprogramming.weebly.com/download-panther.html">http://pantherprogramming.weebly.com/download-panther.html</a>
</li>

<li>Panther (Scratch Modification) - wiki<br />
<a href="http://wiki.scratch.mit.edu/wiki/Panther_(Scratch_Modification)">http://wiki.scratch.mit.edu/wiki/Panther_(Scratch_Modification)</a>
</li>

<li>Scratch Programming Wiki - Panther<br />
<a href="http://scratch.wikia.com/wiki/Panther">http://scratch.wikia.com/wiki/Panther</a>
</li>

<li>Scratch: oficiální stránka projektu<br />
<a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a>
</li>

<li>Scratch: galerie projektů vytvořených ve Scratchi<br />
<a href="http://scratch.mit.edu/galleries/browse/newest">http://scratch.mit.edu/galleries/browse/newest</a>
</li>

<li>Scratch: nápověda<br />
<a href="file:///usr/share/scratch/Help/en/index.html">file:///usr/share/scratch/Help/en/index.html</a>
</li>

<li>Scratch: obrazovky nápovědy<br />
<a href="file:///usr/share/scratch/Help/en/allscreens.html">file:///usr/share/scratch/Help/en/allscreens.html</a>
</li>

<li>Scratch (Wikipedie CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Scratch">http://cs.wikipedia.org/wiki/Scratch</a>
</li>

<li>Scratch (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Scratch_(programming_language)">http://en.wikipedia.org/wiki/Scratch_(programming_language)</a>
</li>

<li>Mitchel Resnick (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Mitchel_Resnick">http://en.wikipedia.org/wiki/Mitchel_Resnick</a>
</li>

<li>Domácí stránka Mitchela Resnicka<br />
<a href="http://web.media.mit.edu/~mres/">http://web.media.mit.edu/~mres/</a>
</li>

<li>BASIC-256 - BASIC256 - An easy to use BASIC language and IDE<br />
<a href="http://www.basic256.org/">http://www.basic256.org/</a>
</li>

<li>PythonTurtle<br />
<a href="http://pythonturtle.org/">http://pythonturtle.org/</a>
</li>

<li>Turtle graphics for Tk<br />
<a href="http://docs.python.org/library/turtle.html">http://docs.python.org/library/turtle.html</a>
</li>

<li>Scratch Lowers Resistance to Programming<br />
<a href="http://www.wired.com/gadgetlab/2009/03/scratch-lowers/">http://www.wired.com/gadgetlab/2009/03/scratch-lowers/</a>
</li>

<li>Stopařův průvodce jedním převážně neškodným programovacím jazykem<br />
<a href="http://www.squeak.cz/">http://www.squeak.cz/</a>
</li>

<li>CamelCase<br />
<a href="http://en.wikipedia.org/wiki/Camel_case">http://en.wikipedia.org/wiki/Camel_case</a>
</li>

<li>Smalltalk tutorial chapter 5 &ndash; Variables<br />
<a href="http://www.tutorials4u.com/smalltalk/smalltalk-tutorial-05.htm">http://www.tutorials4u.com/smalltalk/smalltalk-tutorial-05.htm</a>
</li>

<li>History around Pascal Casing and Camel Casing<br />
<a href="http://blogs.msdn.com/b/brada/archive/2004/02/03/67024.aspx">http://blogs.msdn.com/b/brada/archive/2004/02/03/67024.aspx</a>
</li>

<li>Xerox Alto<br />
<a href="http://en.wikipedia.org/wiki/Xerox_Alto">http://en.wikipedia.org/wiki/Xerox_Alto</a>
</li>

<li>WIMP (computing)<br />
<a href="http://en.wikipedia.org/wiki/WIMP_(computing)">http://en.wikipedia.org/wiki/WIMP_(computing)</a>
</li>

<li>Graphical user interface<br />
<a href="http://en.wikipedia.org/wiki/GUI">http://en.wikipedia.org/wiki/GUI</a>
</li>

<li>Xerox Star<br />
<a href="http://en.wikipedia.org/wiki/Xerox_Star">http://en.wikipedia.org/wiki/Xerox_Star</a>
</li>

<li>The Xerox Star 8010 "Dandelion"<br />
<a href="http://www.digibarn.com/collections/systems/xerox-8010/index.html">http://www.digibarn.com/collections/systems/xerox-8010/index.html</a>
</li>

<li>Fibonacci number<br />
<a href="http://en.wikipedia.org/wiki/Fibonacci_number">http://en.wikipedia.org/wiki/Fibonacci_number</a>
</li>

<li>Squeak home page<br />
<a href="http://www.squeak.org/">http://www.squeak.org/</a>
</li>

<li>XO: The Children's Machine<br />
<a href="http://wiki.laptop.org/go/The_Children's_Machine">http://wiki.laptop.org/go/The_Children's_Machine</a>
</li>

<li>Squeak na Wikipedii EN<br />
<a href="http://en.wikipedia.org/wiki/Squeak">http://en.wikipedia.org/wiki/Squeak</a>
</li>

<li>Squeak na Wikipedii CZ<br />
<a href="http://cs.wikipedia.org/wiki/Squeak">http://cs.wikipedia.org/wiki/Squeak</a>
</li>

<li>Squeak by Example<br />
<a href="http://squeakbyexample.org/">http://squeakbyexample.org/</a>
</li>

<li>Squeak Land<br />
<a href="http://www.squeakland.org/">http://www.squeakland.org/</a>
</li>

<li>SqueakNotes<br />
<a href="http://squeak.zwiki.org/SqueakNotes">http://squeak.zwiki.org/SqueakNotes</a>
</li>

<li>Squeak FAQ<br />
<a href="http://wiki.squeak.org/squeak/471">http://wiki.squeak.org/squeak/471</a>
</li>

<li>Learning Squeak<br />
<a href="http://c2.com/cgi/wiki?LearningSqueak">http://c2.com/cgi/wiki?LearningSqueak</a>
</li>

<li>Lazarus (Software)<br />
<a href="http://en.wikipedia.org/wiki/Lazarus_%28software%29">http://en.wikipedia.org/wiki/Lazarus_%28software%29</a>
</li>

<li>FreePascal<br />
<a href="http://www.freepascal.org/">http://www.freepascal.org/</a>
</li>

<li>"Why I Love Python" slides<br />
<a href="http://www.mindviewinc.com/downloads/pub/eckel/LovePython.zip">http://www.mindviewinc.com/downloads/pub/eckel/LovePython.zip</a>
</li>

<li>"Why I love Python" (presentation)<br />
<a href="http://www.slideshare.net/didip/why-i-love-python">http://www.slideshare.net/didip/why-i-love-python</a>
</li>

<li>První jazyk: Python<br />
<a href="http://macek.sandbox.cz/texty/prvni-jazyk-python/">http://macek.sandbox.cz/texty/prvni-jazyk-python/</a>
</li>

<li>Programovací jazyk Python<br />
<a href="http://www.py.cz/FrontPage">http://www.py.cz/FrontPage</a>
</li>

<li>Python &ndash; Wikipedia CS<br />
<a href="http://cs.wikipedia.org/wiki/Python">http://cs.wikipedia.org/wiki/Python</a>
</li>

<li>IPython<br />
<a href="http://en.wikipedia.org/wiki/Ipython">http://en.wikipedia.org/wiki/Ipython</a>
</li>

<li>IPython: an interactive computing environment<br />
<a href="http://ipython.scipy.org/moin/">http://ipython.scipy.org/moin/</a>
</li>

<li>Category:Python<br />
<a href="http://rosettacode.org/wiki/Category:Python">http://rosettacode.org/wiki/Category:Python</a>
</li>

<li>Educational programming language<br />
<a href="http://en.wikipedia.org/wiki/Educational_programming_language">http://en.wikipedia.org/wiki/Educational_programming_language</a>
</li>

<li>Seriál Letní škola programovacího jazyka Logo<br />
<a href="http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/">http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/</a>
</li>

<li>Logo Tree Project:<br />
<a href="http://www.elica.net/download/papers/LogoTreeProject.pdf">http://www.elica.net/download/papers/LogoTreeProject.pdf</a></li>

<li>Language Poster (O'Reilly):<br />
<a href="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf">http://www.oreilly.com/news/graphics/prog_lang_poster.pdf</a></li>

<li>Informace o Comenius Logu:<br />
<a href="http://www.comlogo.input.sk/index.html">http://www.comlogo.input.sk/index.html</a></li>

<li>Stránka nabízející stažení Comenius Loga:<br />
<a href="http://www.comlogo.input.sk/nastiahnutie.html">http://www.comlogo.input.sk/nastiahnutie.html</a></li>

<li>Seminární práce o Comenius Logu:<br />
<a href="http://nwit.pedf.cuni.cz/rotal9ap/logo/">http://nwit.pedf.cuni.cz/rotal9ap/logo/</a></li>

<li>Informace o LEGO/Logu:<br />
<a href="http://education.otago.ac.nz/nzlnet/Logo/legologo.html">http://education.otago.ac.nz/nzlnet/Logo/legologo.html</a></li>

<li>Informace o systému Elica:<br />
<a href="http://www.elica.net/site/index.html">http://www.elica.net/site/index.html</a></li>

<li>Informace o systému NetLogo:<br />
<a href="http://ccl.northwestern.edu/netlogo/">http://ccl.northwestern.edu/netlogo/</a></li>

<li>Stažení NetLoga:<br />
<a href="http://ccl.northwestern.edu/netlogo/download.shtml">http://ccl.northwestern.edu/netlogo/download.shtml</a></li>

<li>Uživatelský manuál NetLoga ve formátu PDF:<br />
<a href="http://ccl.northwestern.edu/netlogo/docs/NetLogo%20User%20Manual.pdf">http://ccl.northwestern.edu/netlogo/docs/NetLogo%20User%20Manual.pdf</a></li>

<li>NetLogo FAQ:<br />
<a href="http://ccl.northwestern.edu/netlogo/docs/faq.html">http://ccl.northwestern.edu/netlogo/docs/faq.html</a></li>

<li>Domácí stránka Daniela Azumy (autora implementace Turtle Tracks):<br />
<a href="http://alumnus.caltech.edu/~dazuma/home/">http://alumnus.caltech.edu/~dazuma/home/</a></li>

<li>Informace o <i>aUCBLogu</i>:<br />
<a href="http://www.physik.uni-augsburg.de/~micheler/">http://www.physik.uni-augsburg.de/~micheler/</a></li>

<li>Domácí stránka MSW Loga:<br />
<a href="http://www.softronix.com/logo.html">http://www.softronix.com/logo.html</a></li>

<li>Karel online<br />
<a href="http://karel.oldium.net/">http://karel.oldium.net/</a>
</li>

<li>EDU-SIG: Python in Education<br />
<a href="http://www.python.org/community/sigs/current/edu-sig/">http://www.python.org/community/sigs/current/edu-sig/</a>
</li>

<li>Guido van Robot<br />
<a href="http://en.wikipedia.org/wiki/Guido_van_Robot">http://en.wikipedia.org/wiki/Guido_van_Robot</a>
</li>

<li>The Guido van Robot Programming Language<br />
<a href="http://gvr.sourceforge.net/">http://gvr.sourceforge.net/</a>
</li>

<li>An Introduction to Programming with Karel J. Robot<br />
<a href="http://blog.thingoid.com/2003/10/karel-intro/">http://blog.thingoid.com/2003/10/karel-intro/</a>
</li>

<li>Teaching a young robot new tricks<br />
<a href="http://blog.thingoid.com/2003/11/karel-new-tricks/">http://blog.thingoid.com/2003/11/karel-new-tricks/</a>
</li>

<li>Karel and Company - More Robots<br />
<a href="http://blog.thingoid.com/2003/12/karel-and-company/">http://blog.thingoid.com/2003/12/karel-and-company/</a>
</li>

<li>Karel heads for the stars<br />
<a href="http://blog.thingoid.com/2004/03/karel-star/">http://blog.thingoid.com/2004/03/karel-star/</a>
</li>

<li>Karel programming language documentation<br />
<a href="http://mormegil.wz.cz/prog/karel/prog_doc.htm">http://mormegil.wz.cz/prog/karel/prog_doc.htm</a>
</li>

<li>Karel J. Robot<br />
<a href="http://www.mainlandregional.net/dklipp/Honors%20Computer%20Science%20Java.htm">http://www.mainlandregional.net/dklipp/Honors%20Computer%20Science%20Java.htm</a>
</li>

<li>Karel (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Karel_(programming_language)">http://en.wikipedia.org/wiki/Karel_(programming_language)</a>
</li>

<li>Richard E. Pattis<br />
<a href="http://en.wikipedia.org/wiki/Richard_E._Pattis">http://en.wikipedia.org/wiki/Richard_E._Pattis</a>
</li>

<li>XKarel home page<br />
<a href="http://xkarel.sourceforge.net/eng/">http://xkarel.sourceforge.net/eng/</a>
</li>

<li>XKarel - screenshoty oken<br />
<a href="http://xkarel.sourceforge.net/eng/program.php#Okna">http://xkarel.sourceforge.net/eng/program.php#Okna</a>
</li>

<li>Greenfoot<br />
<a href="http://www.greenfoot.org/about/whatis.html">http://www.greenfoot.org/about/whatis.html</a>
</li>

<li>Computer programming -- Educational programming languages<br />
<a href="http://www.kidslike.info/computer_programming_educational_programming_languages">http://www.kidslike.info/computer_programming_educational_programming_languages</a>
</li>

<li>Making Great Programmers: Why BASIC is Still Relevant<br />
<a href="http://kidbasic.sourceforge.net/en/why.html">http://kidbasic.sourceforge.net/en/why.html</a>
</li>

<li>Gambas Wiki<br />
<a href="http://en.wikibooks.org/wiki/Gambas">http://en.wikibooks.org/wiki/Gambas</a>
</li>

<li>Free tool offers 'easy' coding<br />
<a href="http://news.bbc.co.uk/2/hi/technology/6647011.stm">http://news.bbc.co.uk/2/hi/technology/6647011.stm</a>
</li>

<li>Základy želví grafiky<br />
<a href="http://www.root.cz/clanky/zaklady-zelvi-grafiky/">http://www.root.cz/clanky/zaklady-zelvi-grafiky/</a>
</li>

<li>Bill Kendrick's Web Turtle<br />
<a href="http://www.sonic.net/~nbs/webturtle/">http://www.sonic.net/~nbs/webturtle/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2011</small></p>
</body>
</html>

