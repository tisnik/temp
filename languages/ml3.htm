<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Currying</a></p>
<p><a href="#k02">*** 2. Praktické využití curryingu</a></p>
<p><a href="#k03">*** 3. Generování funkcí pro výpočet n-té mocniny</a></p>
<p><a href="#k04">*** 4. Proměnné a prostředí</a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">*** 19. Literatura</a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Currying</h2>

<pre>
(* Implementace funkce map *)

fun map f [] = []
  | map f (head::tail) = (f head) :: (map f tail);


fun half x = x / 2.0;

map half [1.0,2.0,3.0,4.0,5.0];
</pre>

<pre>
fn b => a + b;
</pre>

<pre>
val a = 10;

val f = fn b => a + b;

f(20);
</pre>

<pre>
val a = 10;

val f = fn b => a + b;

f(20);
</pre>

<pre>
val a = 10;

(fn b => a + b)(20);
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Praktické využití curryingu</h2>

<pre>
fun adder a = fn b => a + b;
</pre>

<pre>
fun adder a b = a + b;
</pre>

<pre>
fun adder a b = a + b;

val inc = adder 1;
val inc2 = adder 2;

inc 10;
inc2 10;
</pre>

<pre>
fun pow(m, n) = if n = 0 then 1
                else m * pow(m, n-1);

</pre>

<pre>
pow(2, 8);
val it = 256: int;
&nbsp;
pow(3, 2);
val it = 9: int;
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Generování funkcí pro výpočet n-té mocniny</h2>

<pre>
fun pow m n = if m = 0 then 1
              else n * pow(m-1) n;
</pre>

<pre>
val pow = fn: int → int → int;
</pre>

<pre>
val square = pow 2;
val cube = pow 3;
</pre>

<pre>
val square = fn: int → int;
val cube = fn: int → int;
</pre>

<pre>
square 10;
cube 10;
</pre>

<pre>
fun pow 0 n = 1
  | pow m n = n * pow(m-1) n;
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Proměnné a prostředí</h2>

<pre>
val x = 1 : int
&nbsp;
fun incr y = x + y;
&nbsp;
incr 1;
&nbsp;
val x = 10;
incr 1;
</pre>

<p>Po spuštění tohoto prográmku by se měly na terminál vypsat tyto řádky:</p>

<pre>
val x = 1: int;
&nbsp;
val incr = fn: int → int;
&nbsp;
val it = 2: int;
&nbsp;
val x = 10: int;
&nbsp;
val it = 2: int;
</pre>

<p>Tyto řádky postupně znamenají:</p>

<table>
<tr><th></th><th></th></tr>
<tr><td></td><td></td></tr>
</table>

<p>Důležité je si uvědomit, že ve funkci <strong>incr</strong> ve skutečnosti nepracujeme přímo s&nbsp;původní proměnnou <strong>x</strong>. Namísto toho je v&nbsp;aktuálním <i>prostředí</i> (<i>environment</i>) vytvořena vazba na původní hodnotu (a typ). Výsledkem toho je fakt, že další změny proměnné <strong>x</strong> příkazem <strong>val</strong> nemají žádný vliv na to, jakou hodnotu vrátí funkce <strong>incr</strong>. Jediný vliv na návratovou hodnotu bude mít hodnota argumentu této funkce v&nbsp;čase jejího volání. Jinými slovy &ndash; tato vlastnost nejenom zabraňuje nepříjemným zmatkům, ale především zajišťuje <i>referenční transparentnost</i> funkcí, což je (nejenom) ve funkcionálním programování velmi důležitá vlastnost.</p>

<p><div class="rs-tip-major">Poznámka: současně nám ovšem tato vlastnost nezabraňuje měnit hodnotu proměnné, <strong>x</strong> je tedy stále měnitelná (<i>mutable</i>).</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>

<p>Všechny výše popsané demonstrační příklady byly uloženy do repositáře
dostupného na adrese <a
href="https://github.com/tisnik/ml-examples/">https://github.com/tisnik/ml-examples/</a>.
V&nbsp;tabulce umístěné pod tímto odstavcem jsou uvedeny odkazy na tyto
příklady:</p>

<table>
<tr><th> #</th><th>Příklad</th><th>Popis příkladu</th><th>Cesta</th></tr>
<tr><td> 1</td><td>01_currying.ml</td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/01_currying.ml">https://github.com/tisnik/ml-examples/tree/master/article_03/01_currying.ml</a></td></tr>
<tr><td> 2</td><td>02_currying2.ml</td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/02_currying2.ml">https://github.com/tisnik/ml-examples/tree/master/article_03/02_currying2.ml</a></td></tr>
<tr><td> 3</td><td>03_currying.ml</td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/03_currying.ml">https://github.com/tisnik/ml-examples/tree/master/article_03/03_currying.ml</a></td></tr>
<tr><td> 4</td><td>04_pow_curry.ml</td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/04_pow_curry.ml">https://github.com/tisnik/ml-examples/tree/master/article_03/04_pow_curry.ml</a></td></tr>
<tr><td> 5</td><td>05_pow_curry2.ml</td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/05_pow_curry2.ml">https://github.com/tisnik/ml-examples/tree/master/article_03/05_pow_curry2.ml</a></td></tr>
<tr><td> 6</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td> 7</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td> 8</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td> 9</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>10</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>11</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>12</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>13</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>14</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>15</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>16</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>17</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>18</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>19</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
<tr><td>20</td><td></td><td></td><td><a href="https://github.com/tisnik/ml-examples/tree/master/article_03/">https://github.com/tisnik/ml-examples/tree/master/article_03/</a></td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Literatura</h2>

<p><div class="rs-tip-major">Poznámka: v&nbsp;této kapitole jsou uvedeny
nejenom knihy o jazyku ML resp.&nbsp;Standard ML, ale i knihy o programovacím
jazyku OCaml, který ze Standard ML ze značné míry vychází.</div></p>

<ol>

<li>ML for the Working Programmer<br />
<a href="https://www.cl.cam.ac.uk/~lp15/MLbook/pub-details.html">https://www.cl.cam.ac.uk/~lp15/MLbook/pub-details.html</a>
</li>

<li>Elements of ML Programming, 2nd Edition (ML97)<br />
<a href="http://infolab.stanford.edu/~ullman/emlp.html">http://infolab.stanford.edu/~ullman/emlp.html</a>
</li>

<li>A tour of Standard ML<br />
<a href="https://saityi.github.io/sml-tour/tour/welcome">https://saityi.github.io/sml-tour/tour/welcome</a>
</li>

<li>The History of Standard ML<br />
<a href="https://smlfamily.github.io/history/SML-history.pdf">https://smlfamily.github.io/history/SML-history.pdf</a>
</li>

<li>The Standard ML Basis Library<br />
<a href="https://smlfamily.github.io/Basis/">https://smlfamily.github.io/Basis/</a>
</li>

<li>Programming in Standard ML<br />
<a href="http://www.cs.cmu.edu/~rwh/isml/book.pdf">http://www.cs.cmu.edu/~rwh/isml/book.pdf</a>
</li>

<li>Programming in Standard ML '97: A Tutorial Introduction<br />
<a href="http://www.lfcs.inf.ed.ac.uk/reports/97/ECS-LFCS-97-364/">http://www.lfcs.inf.ed.ac.uk/reports/97/ECS-LFCS-97-364/</a>
</li>

<li>Programming in Standard ML '97: An On-line Tutorial<br />
<a href="https://homepages.inf.ed.ac.uk/stg/NOTES/">https://homepages.inf.ed.ac.uk/stg/NOTES/</a>
</li>

<li>The OCaml system  release 4.13<br />
<a href="https://ocaml.org/releases/4.13/htmlman/index.html">https://ocaml.org/releases/4.13/htmlman/index.html</a>
</li>

<li>Real World OCaml: Functional programming for the masses<br />
<a href="https://dev.realworldocaml.org/">https://dev.realworldocaml.org/</a>
</li>

<li>OCaml from the Very Beginning<br />
<a href="http://ocaml-book.com/">http://ocaml-book.com/</a>
</li>

<li>OCaml from the Very Beginning: More OCaml : Algorithms, Methods &amp; Diversions<br />
<a href="http://ocaml-book.com/more-ocaml-algorithms-methods-diversions/">http://ocaml-book.com/more-ocaml-algorithms-methods-diversions/</a>
</li>

<li>Unix system programming in OCaml<br />
<a href="http://ocaml.github.io/ocamlunix/">http://ocaml.github.io/ocamlunix/</a>
</li>

<li>OCaml for Scientists<br />
<a href="https://www.ffconsultancy.com/products/ocaml_for_scientists/index.html">https://www.ffconsultancy.com/products/ocaml_for_scientists/index.html</a>
</li>

<li>Using, Understanding, and Unraveling The OCaml Language<br />
<a href="https://caml.inria.fr/pub/docs/u3-ocaml/">https://caml.inria.fr/pub/docs/u3-ocaml/</a>
</li>

<li>Developing Applications With objective Caml<br />
<a href="https://caml.inria.fr/pub/docs/oreilly-book/index.html">https://caml.inria.fr/pub/docs/oreilly-book/index.html</a>
</li>

<li>Introduction to Objective Caml<br />
<a href="http://courses.cms.caltech.edu/cs134/cs134b/book.pdf">http://courses.cms.caltech.edu/cs134/cs134b/book.pdf</a>
</li>

<li>How to Think Like a (Functional) Programmer<br />
<a href="https://greenteapress.com/thinkocaml/index.html">https://greenteapress.com/thinkocaml/index.html</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Standard ML of New Jersey<br />
<a href="https://www.smlnj.org/">https://www.smlnj.org/</a>
</li>

<li>Programming Languages: Standard ML - 1 (a navazující videa)<br />
<a href="https://www.youtube.com/watch?v=2sqjUWGGzTo">https://www.youtube.com/watch?v=2sqjUWGGzTo</a>
</li>

<li>6 Excellent Free Books to Learn Standard ML<br />
<a href="https://www.linuxlinks.com/excellent-free-books-learn-standard-ml/">https://www.linuxlinks.com/excellent-free-books-learn-standard-ml/</a>
</li>

<li>SOSML: The Online Interpreter for Standard ML<br />
<a href="https://sosml.org/">https://sosml.org/</a>
</li>

<li>ML (Computer program language)<br />
<a href="https://www.barnesandnoble.com/b/books/other-programming-languages/ml-computer-program-language/_/N-29Z8q8Zvy7">https://www.barnesandnoble.com/b/books/other-programming-languages/ml-computer-program-language/_/N-29Z8q8Zvy7</a>
</li>

<li>Strong Typing<br />
<a href="https://perl.plover.com/yak/typing/notes.html">https://perl.plover.com/yak/typing/notes.html</a>
</li>

<li>What to know before debating type systems<br />
<a href="http://blogs.perl.org/users/ovid/2010/08/what-to-know-before-debating-type-systems.html">http://blogs.perl.org/users/ovid/2010/08/what-to-know-before-debating-type-systems.html</a>
</li>

<li>Types, and Why You Should Care (Youtube)<br />
<a href="https://www.youtube.com/watch?v=0arFPIQatCU">https://www.youtube.com/watch?v=0arFPIQatCU</a>
</li>

<li>DynamicTyping (Martin Fowler)<br />
<a href="https://www.martinfowler.com/bliki/DynamicTyping.html">https://www.martinfowler.com/bliki/DynamicTyping.html</a>
</li>

<li>DomainSpecificLanguage (Martin Fowler)<br />
<a href="https://www.martinfowler.com/bliki/DomainSpecificLanguage.html">https://www.martinfowler.com/bliki/DomainSpecificLanguage.html</a>
</li>

<li>Language Workbenches: The Killer-App for Domain Specific Languages?<br />
<a href="https://www.martinfowler.com/articles/languageWorkbench.html">https://www.martinfowler.com/articles/languageWorkbench.html</a>
</li>

<li>Effective ML (Youtube)<br />
<a href="https://www.youtube.com/watch?v=-J8YyfrSwTk">https://www.youtube.com/watch?v=-J8YyfrSwTk</a>
</li>

<li>Why OCaml (Youtube)<br />
<a href="https://www.youtube.com/watch?v=v1CmGbOGb2I">https://www.youtube.com/watch?v=v1CmGbOGb2I</a>
</li>

<li>CSE 341: Functions and patterns<br />
<a href="https://courses.cs.washington.edu/courses/cse341/04wi/lectures/03-ml-functions.html">https://courses.cs.washington.edu/courses/cse341/04wi/lectures/03-ml-functions.html</a>
</li>

<li>Comparing Objective Caml and Standard ML<br />
<a href="http://adam.chlipala.net/mlcomp/">http://adam.chlipala.net/mlcomp/</a>
</li>

<li>What are the key differences between Standard ML and OCaml?<br />
<a href="https://www.quora.com/What-are-the-key-differences-between-Standard-ML-and-OCaml?share=1">https://www.quora.com/What-are-the-key-differences-between-Standard-ML-and-OCaml?share=1</a>
</li>

<li>Cheat Sheets (pro OCaml)<br />
<a href="https://www.ocaml.org/docs/cheat_sheets.html">https://www.ocaml.org/docs/cheat_sheets.html</a>
</li>

<li>Syllabus (FAS CS51)<br />
<a href="https://cs51.io/college/syllabus/">https://cs51.io/college/syllabus/</a>
</li>

<li>Abstraction and Design In Computation<br />
<a href="http://book.cs51.io/">http://book.cs51.io/</a>
</li>

<li>Learn X in Y minutes Where X=Standard ML<br />
<a href="https://learnxinyminutes.com/docs/standard-ml/">https://learnxinyminutes.com/docs/standard-ml/</a>
</li>

<li>CSE307 Online - Summer 2018: Principles of Programing Languages course<br />
<a href="https://www3.cs.stonybrook.edu/~pfodor/courses/summer/cse307.html">https://www3.cs.stonybrook.edu/~pfodor/courses/summer/cse307.html</a>
</li>

<li>CSE307 Principles of Programming Languages course: SML part 1<br />
<a href="https://www.youtube.com/watch?v=p1n0_PsM6hw">https://www.youtube.com/watch?v=p1n0_PsM6hw</a>
</li>

<li>CSE 307 &ndash; Principles of Programming Languages &ndash; SML<br />
<a href="https://www3.cs.stonybrook.edu/~pfodor/courses/summer/CSE307/L01_SML.pdf">https://www3.cs.stonybrook.edu/~pfodor/courses/summer/CSE307/L01_SML.pdf</a>
</li>

<li>SML, Some Basic Examples<br />
<a href="https://cs.fit.edu/~ryan/sml/intro.html">https://cs.fit.edu/~ryan/sml/intro.html</a>
</li>

<li>History of programming languages<br />
<a href="https://devskiller.com/history-of-programming-languages/">https://devskiller.com/history-of-programming-languages/</a>
</li>

<li>History of programming languages (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/History_of_programming_languages">https://en.wikipedia.org/wiki/History_of_programming_languages</a>
</li>

<li>Jemný úvod do rozsáhlého světa jazyků LISP a Scheme<br />
<a href="https://www.root.cz/clanky/jemny-uvod-do-rozsahleho-sveta-jazyku-lisp-a-scheme/">https://www.root.cz/clanky/jemny-uvod-do-rozsahleho-sveta-jazyku-lisp-a-scheme/</a>
</li>

<li>The Evolution Of Programming Languages<br />
<a href="https://www.i-programmer.info/news/98-languages/8809-the-evolution-of-programming-languages.html">https://www.i-programmer.info/news/98-languages/8809-the-evolution-of-programming-languages.html</a>
</li>

<li>Evoluce programovacích jazyků<br />
<a href="https://ccrma.stanford.edu/courses/250a-fall-2005/docs/ComputerLanguagesChart.png">https://ccrma.stanford.edu/courses/250a-fall-2005/docs/ComputerLanguagesChart.png</a>
</li>

<li>Poly/ML Homepage<br />
<a href="https://polyml.org/">https://polyml.org/</a>
</li>

<li>PolyConf 16: A brief history of F# / Rachel Reese<br />
<a href="https://www.youtube.com/watch?v=cbDjpi727aY">https://www.youtube.com/watch?v=cbDjpi727aY</a>
</li>

<li>Programovací jazyk Clojure 18: základní techniky optimalizace aplikací<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-clojure-18-zakladni-techniky-optimalizace-aplikaci/">https://www.root.cz/clanky/programovaci-jazyk-clojure-18-zakladni-techniky-optimalizace-aplikaci/</a>
</li>

<li>Moscow ML Language Overview<br />
<a href="https://itu.dk/people/sestoft/mosml/mosmlref.pdf">https://itu.dk/people/sestoft/mosml/mosmlref.pdf</a>
</li>

<li>ForLoops<br />
<a href="http://mlton.org/ForLoops">http://mlton.org/ForLoops</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2022</small></p>
</body>
</html>

