<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title></title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1></h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. MakeCode Arcade: pomůcka pro výuku programování</a></p>
<p><a href="#k02">*** 2. Kouzlo vizuálního programování</a></p>
<p><a href="#k03">*** 3. Projekt Scratch &ndash; &bdquo;programovatelné puzzle&ldquo;</a></p>
<p><a href="#k04">*** 4. </a></p>
<p><a href="#k05">*** 5. </a></p>
<p><a href="#k06">*** 6. </a></p>
<p><a href="#k07">*** 7. </a></p>
<p><a href="#k08">*** 8. </a></p>
<p><a href="#k09">*** 9. </a></p>
<p><a href="#k10">*** 10. </a></p>
<p><a href="#k11">*** 11. </a></p>
<p><a href="#k12">*** 12. </a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. </a></p>
<p><a href="#k19">*** 19. </a></p>
<p><a href="#k20">*** 20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. MakeCode Arcade: pomůcka pro výuku programování</h2>

<p><i>It's a bit like learning natural languages: the earlier the better.<br />
Michael Kölling</i></p>

<p>V&nbsp;předchozích částech dnes již několik let starého seriálu
pojednávajícího o programovacích jazycích vhodných pro výuku programování jsme
se seznámili s&nbsp;několika programovacími jazyky, které se v&nbsp;minulosti i
v&nbsp;současnosti používají jak na základních školách, tak i na školách
středních. <a
href="http://www.root.cz/clanky/programovaci-jazyky-urcene-pro-vyuku-programovani/">V&nbsp;první
části</a> jsme se zmínili o dnes již klasických jazycích z&nbsp;této kategorie.
Jedná se o <i>LOGO</i> a <i>Karel</i>. <a
href="http://www.root.cz/clanky/programovaci-jazyky-urcene-pro-vyuku-programovani-2/">V&nbsp;části
druhé</a> jsme se zaměřili na <i>Pascal</i> (až relativně donedávna se jednalo
o stálici v&nbsp;tuzemském školství) a <i>Python</i>, včetně různých vývojových
nástrojů, které byly pro tyto jazyky zhruba v&nbsp;průběhu předchozích deseti
let navrženy. Malou odbočku jsme udělali směrem k&nbsp;<i>NetLogu</i>, což je
(nejenom) vývojové prostředí, které se i přes svůj název od klasického
<i>Loga</i> v&nbsp;mnoha ohledech odlišuje.</p>

<a href="http://i.iinfo.cz/images/407/llang02-15-3.png"><img src="http://i.iinfo.cz/images/407/llang02-15-3-prev.png" width="266" height="270" alt=" " /></a>
<p><i>Obrázek 1: V&nbsp;předchozích částech seriálu o programovacích jazycích
určených pro výuku programování jsme se zmínili o relativně velkém množství
různých jazyků a vývojových prostředí. Na tomto obrázku je zobrazeno
uživatelské prostředí nástroje NetLogo se spuštěnou simulací.</i></p>

<p>Zmínili jsme se i o některých pokusech o reinkarnaci BASICu. Příkladem může
být projekt <i>SmallBasic</i>, kterému jsme se věnovali v&nbsp;článcích <a
href="https://www.root.cz/clanky/small-basic-moderni-reinkarnace-basicu-urcena-pro-vyuku-programovani/">Small
Basic: moderní reinkarnace BASICu určená pro výuku programování</a> a <a
href="https://www.root.cz/clanky/vestavene-objekty-small-basicu-prace-s-grafikou-casovacem-reakce-na-udalosti/">Vestavěné
objekty Small Basicu: práce s&nbsp;grafikou, časovačem, reakce na události</a>.
Jedna z&nbsp;předností Small Basicu je, že ho lze začít používat ihned a bez
nutnosti instalace, protože se jedná o nástroj dostupný na webu. Na druhou
stranu však lze různá webová pískoviště a webová IDE v&nbsp;současnosti najít
<a
href="https://www.root.cz/clanky/webova-piskoviste-a-integrovana-vyvojova-prostredi/">i
pro mnoho dalších jazyků</a>.</p>

<a href="http://i.iinfo.cz/images/433/llang-03a-3.png"><img src="http://i.iinfo.cz/images/433/llang-03a-3-prev.png" width="348" height="270" alt=" " /></a>
<p><i>Obrázek 2: Další programovací jazyk a jeho vývojové prostředí,
s&nbsp;nímž jsme se již seznámili &ndash; Smalltalk a Squeak.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Kouzlo vizuálního programování</h2>

<p><i>Scratch uses hands-on, active learning; it is visually appealing; it
allows users to express their own creativity and to build on their own
experiences; it gives immediate, understandable feedback; and it allows users
to avoid syntax errors without focusing on minutiae, freeing them to focus on
processes and concepts.<br />
NCWIT study</i></p>

<p>Většina programovacích jazyků resp.&nbsp;možná přesněji řečeno výukových
pomůcek zmíněných <a href="#k01">v&nbsp;předchozí kapitole</a> je sice vhodná
pro výuku programování, ovšem pro děti předškolního věku nebo pro děti na
prvním stupni ZŠ se podle mého názoru příliš nehodí, a to hned z&nbsp;několika
důvodů. Jedním z&nbsp;těchto důvodů je nutnost zápisu algoritmů pomocí více či
méně strukturovaného textu, jehož syntaxe je hlídána buď interpretrem či
překladačem. Jedná se o nejdéle používaný způsob programování, jehož počátky
můžeme hledat v&nbsp;hluboké počítačové minulosti, protože první překladač
pracující se strojovým textem byl vytvořen již v&nbsp;rozmezí let 1951 až 1952
<i>Grace Hopperovou</i> v&nbsp;rámci projektu <i>A-0 (Arithmetic Language
version 0)</i>, který byl později následován známým <i>FORTRANem</i> navrženým
<i>Johnem W. Backusem</i> a jeho vývojovým týmem. Ovšem v&nbsp;průběhu oněch
cca šedesáti let se znovu a znovu objevovaly pokusy o vizuální návrh algoritmů,
tj.&nbsp;o tvorbu programů nikoli zápisem strukturovaného zdrojového textu, ale
návrhem algoritmů pomocí diagramů.</p>

<img src="http://i.iinfo.cz/images/351/lang08-1.png" width="448" height="236" alt="&#160;" />
<p><i>Obrázek 3: Základní informace o projektu Scratch. V&nbsp;tomto dialogu
ovšem chybí důležitá informace o tom, že vedoucím skupiny Lifelong Kindergarten
je Mitchel Resnick (podle příjmení se možná jedná o potomka českých emigrantů).
Použitá licence umožňuje jak šíření programu v&nbsp;binární formě i ve formě
zdrojových kódů, tak i tvorbu odvozených projektů. Příkladem může být například
projekt BYOB, neboli &bdquo;Build Your Own Blocks&ldquo;.</i></p>

<p>Známé jsou například pokusy o &bdquo;překlad&ldquo; klasických vývojových
diagramů, využití kopenogramů (což je resp.&nbsp;byla tuzemská specialita) atd.
V&nbsp;současnosti někteří analytici a vývojáři využívají <i>UML</i> (což je
ovšem jen pomůcka) či <i>BPMN</i> (návrh business procesů, ovšem s&nbsp;vhodně
zvolenými bloky se vlastně jedná o plnohodnotný jazyk). V&nbsp;oblasti software
určeného pro výuku programování se využívá podobný princip, jako v&nbsp;případě
vývojových diagramů &ndash; možnost zápisu algoritmů pomocí bloků
představujících jednotlivé příkazy či volané funkce, které jsou doplněny o
základní strukturované příkazy určené pro tvorbu rozhodovacích podmínek a
programových smyček. Na tomto principu, tj.&nbsp;na vylepšených vývojových
diagramech, je postaven i projekt <i>Scratch</i>, v&nbsp;němž jsou uživatelům
nabídnuty základní stavební <i>bloky</i>, z&nbsp;nichž se program skládá,
přičemž je ponecháno pouze na uživateli, jakým způsobem tyto bloky využije ve
svých programech. Díky způsobu skládání bloků pod sebe (podobně jako u puzzle),
popř.&nbsp;do sebe je zajištěno, že program bude po syntaktické stránce vždy
v&nbsp;pořádku, což je důležité, protože odpadá pro děti nudná oprava překlepů,
hledání chybějících středníků, hlídání párovosti závorek i další činnosti
spojené s&nbsp;prací s&nbsp;běžnými programovacími jazyky.</p>

<img src="http://i.iinfo.cz/images/351/lang08-2.png" width="210" height="153" alt="&#160;" />
<p><i>Obrázek 4: Bloky, z&nbsp;nichž se programy skládají, jsou na základě své
funkce rozděleny do osmi kategorií. Povšimněte si, že prostředí Scratche bylo
téměř kompletně počeštěno; jedna z&nbsp;mála částí ponechaná v&nbsp;angličtině
je nápověda k&nbsp;jednotlivým příkazům (i když i tato část se pravděpodobně
brzy přeloží).</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Projekt Scratch &ndash; &bdquo;programovatelné puzzle&ldquo;</h2>

<p>Pojďme si nyní ve stručnosti říci, jakým způsobem se vlastně programy
ve <i>Scratchi</i> tvoří. Je to ve skutečnosti velmi jednoduché a po krátkém
zaučení i intuitivní &ndash; v&nbsp;levé části okna se postupně vybírají
příkazové bloky, které se přetahují do prostřední části okna, kde se
z&nbsp;těchto bloků může tvořit program či programy. Běžný příkazový blok je
vizuálně představován obdélníkem s&nbsp;několika výčnělky připomínajícími
puzzle. Programové smyčky a podmínky jsou vyobrazeny jako složitější tvary
umožňující vkládání dalších bloků <i>dovnitř</i> svého těla. Pomocí těchto
výčnělků se bloky spojují dohromady tak, aby tvořily sekvenci či dokonce
strukturovaný program. V&nbsp;případě, že je zapotřebí sekvenci příkazů změnit,
je možné bloky od sebe rozdělit, popř.&nbsp;vybraný blok smazat (přes menu
zobrazené po stisku pravého tlačítka myši), zkopírovat (opět přes pravé
tlačítko myši) či přesunout. Společně spojené bloky tvoří program, který je
možné spustit doubleclickem. Na ploše <i>Skripty</i> je možné vytvořit i více
programů, každý je tvořený množinou spojených bloků.</p>

<img src="http://i.iinfo.cz/images/351/lang08-4.png" width="400" height="400" alt="&#160;" />
<p><i>Obrázek 6: Programy se ve Scratchi tvoří přetahováním příkazových bloků
z&nbsp;oblasti umístěné v&nbsp;levé části okna do střední oblasti, zde
nadepsané &bdquo;Skripty&ldquo; (tento screenshot vznikl v&nbsp;původní verzi
Scratche, kterou je možné nainstalovat lokálně. Kromě toho lze pochopitelně
použít i webovou verzi, u níž není vyžadována ani instalace ani
registrace).</i></p>

<p>Vizuální tvorba programů pomocí skládání příkazových bloků tvoří pouze jednu
část přitažlivosti <i>Scratche</i> při výuce programování. Druhou částí je
takzvaná pracovní plocha s&nbsp;volitelným pozadím, po níž se mohou
v&nbsp;závislosti na volaných příkazech pohybovat takzvané <i>sprity</i>, které
navíc mohou při svém pohybu za sebou kreslit křivku (tj.&nbsp;stopu pohybu).
Pod pojmem <i>sprite</i> je ve <i>Scratchi</i> myšlen rastrový obrázek, jenž
může představovat například postavu či jiný pohyblivý nebo i statický předmět
ve hře, zatímco pozadí umístěné na pracovní plochu (taktéž se jedná o rastrový
obrázek) je většinou neměnné a může představovat pozadí hry, místnost, ve které
se odehrává nějaký dialog atd. <i>Scratch</i> díky možnosti prakticky
neomezeného pohybu <i>spritů</i> po pracovní ploše s&nbsp;volitelným kreslením
cesty (stopy pohybu), kterou <i>sprity</i> vykonaly, umně integruje jak
možnosti programovacích jazyků typu <i>Karel</i> či <i>Baltazar</i>
(<i>sprity</i> umístěné a pohybující se po pomyslné šachovnici) a taktéž
programovacího jazyka <i>Logo</i> s&nbsp;neodmyslitelnou želvou, která se může
pohybovat libovolným směrem po ploše.</p>



<p><a name="k04"></a></p>
<h2 id="k04">4. </h2>

<p></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. </h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. </h2>



<p><a name="k07"></a></p>
<h2 id="k07">7. </h2>



<p><a name="k08"></a></p>
<h2 id="k08">8. </h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. </h2>



<p><a name="k10"></a></p>
<h2 id="k10">10. </h2>



<p><a name="k11"></a></p>
<h2 id="k11">11. </h2>



<p><a name="k12"></a></p>
<h2 id="k12">12. </h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. </h2>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Makecode (pro Micro:bit)<br />
<a href="https://makecode.microbit.org/">https://makecode.microbit.org/</a>
</li>

<li>Makecode Arcade<br />
<a href="https://arcade.makecode.com/">https://arcade.makecode.com/</a>
</li>

<li>Micro Bit<br />
<a href="https://en.wikipedia.org/wiki/Micro_Bit">https://en.wikipedia.org/wiki/Micro_Bit</a>
</li>

<li>MakeCode<br />
<a href="https://www.microsoft.com/en-us/makecode">https://www.microsoft.com/en-us/makecode</a>
</li>

<li>Scratch: oficiální stránka projektu<br />
<a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a>
</li>

<li>Scratch: galerie projektů vytvořených ve Scratchi<br />
<a href="http://scratch.mit.edu/galleries/browse/newest">http://scratch.mit.edu/galleries/browse/newest</a>
</li>

<li>Scratch: nápověda (lokální odkaz po instalaci Scratche)<br />
<a href="file:///usr/share/scratch/Help/en/index.html">file:///usr/share/scratch/Help/en/index.html</a>
</li>

<li>Scratch: obrazovky nápovědy (lokální odkaz po instalaci Scratche)<br />
<a href="file:///usr/share/scratch/Help/en/allscreens.html">file:///usr/share/scratch/Help/en/allscreens.html</a>
</li>

<li>Scratch (Wikipedie CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Scratch">http://cs.wikipedia.org/wiki/Scratch</a>
</li>

<li>Scratch (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Scratch_(programming_language)">http://en.wikipedia.org/wiki/Scratch_(programming_language)</a>
</li>

<li>Mitchel Resnick (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Mitchel_Resnick">http://en.wikipedia.org/wiki/Mitchel_Resnick</a>
</li>

<li>Domácí stránka Mitchela Resnicka<br />
<a href="http://web.media.mit.edu/~mres/">http://web.media.mit.edu/~mres/</a>
</li>

<li>Stránka projektu Small Basic<br />
<a href="https://smallbasic-publicwebsite.azurewebsites.net/">https://smallbasic-publicwebsite.azurewebsites.net/</a>
</li>

<li>List of Programs Made with Small Basic<br />
<a href="https://social.technet.microsoft.com/wiki/contents/articles/14013.list-of-programs-made-with-small-basic.aspx">https://social.technet.microsoft.com/wiki/contents/articles/14013.list-of-programs-made-with-small-basic.aspx</a>
</li>

<li>Expert to Expert: The Basics of SmallBasic<br />
<a href="https://channel9.msdn.com/blogs/charles/expert-to-expert-the-basics-of-smallbasic">https://channel9.msdn.com/blogs/charles/expert-to-expert-the-basics-of-smallbasic</a>
</li>

<li>The Developer’s Reference Guide to Small Basic<br />
<a href="https://social.technet.microsoft.com/wiki/contents/articles/16767.the-developers-reference-guide-to-small-basic.aspx">https://social.technet.microsoft.com/wiki/contents/articles/16767.the-developers-reference-guide-to-small-basic.aspx</a>
</li>

<li>Small Basic - Talking to Raspberry Pi<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-talking-to-raspberry-pi/ba-p/337844">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-talking-to-raspberry-pi/ba-p/337844</a>
</li>

<li>Small Basic - Arduino<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-arduino/ba-p/337762">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-arduino/ba-p/337762</a>
</li>

<li>Small Basic + micro:bit<br />
<a href="https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-micro-bit/ba-p/1968424">https://techcommunity.microsoft.com/t5/small-basic-blog/small-basic-micro-bit/ba-p/1968424</a>
</li>

<li>#1 Learn Small Basic Programming - Introduction<br />
<a href="https://www.youtube.com/watch?v=e_BaEPCa8OQ">https://www.youtube.com/watch?v=e_BaEPCa8OQ</a>
</li>

<li>#2 Learn Small Basic Programming - Input, Output &amp; Variables<br />
<a href="https://www.youtube.com/watch?v=VWekYLa33OI">https://www.youtube.com/watch?v=VWekYLa33OI</a>
</li>

<li>#3 Learn Small Basic Programming - String Concatenation<br />
<a href="https://www.youtube.com/watch?v=iWvIaOaT474">https://www.youtube.com/watch?v=iWvIaOaT474</a>
</li>

<li>Small Basic - The Programmer's Guide<br />
<a href="https://www.i-programmer.info/programming/other-languages/5196-small-basic-the-programmers-guide.html">https://www.i-programmer.info/programming/other-languages/5196-small-basic-the-programmers-guide.html</a>
</li>

<li>Rosetta Code: Category:Microsoft Small Basic<br />
<a href="https://rosettacode.org/wiki/Category:Microsoft_Small_Basic">https://rosettacode.org/wiki/Category:Microsoft_Small_Basic</a>
</li>

<li>The Top 5 Online IDEs for In-Browser Development<br />
<a href="https://www.developer.com/cloud/top-online-ide/">https://www.developer.com/cloud/top-online-ide/</a>
</li>

<li>Online IDE (Beta)<br />
<a href="https://www.online-ide.com/">https://www.online-ide.com/</a>
</li>

<li>12 Best Online IDE and Code Editors to Develop Web Applications<br />
<a href="https://geekflare.com/online-code-editors/">https://geekflare.com/online-code-editors/</a>
</li>

<li>Try F#<br />
<a href="https://try.fsharp.org/">https://try.fsharp.org/</a>
</li>

<li>Fable.io<br />
<a href="https://fable.io/repl3/">https://fable.io/repl3/</a>
</li>

<li>FSBolero<br />
<a href="https://tryfsharp.fsbolero.io/">https://tryfsharp.fsbolero.io/</a>
</li>

<li>The Go Playground<br />
<a href="https://go.dev/play/">https://go.dev/play/</a>
</li>

<li>TryAPL Version 3.6.1<br />
<a href="https://tryapl.org/">https://tryapl.org/</a>
</li>

<li>Replit<br />
<a href="https://replit.com/">https://replit.com/</a>
</li>

<li>Ghostwriter<br />
<a href="https://replit.com/site/ghostwriter">https://replit.com/site/ghostwriter</a>
</li>

<li>QBJS<br />
<a href="https://boxgm.itch.io/qbjs">https://boxgm.itch.io/qbjs</a>
</li>

<li>The Rust playground<br />
<a href="https://play.rust-lang.org/">https://play.rust-lang.org/</a>
</li>

<li>Python playground<br />
<a href="https://lwebapp.com/en/python-playground">https://lwebapp.com/en/python-playground</a>
</li>

<li>Quite BASIC<br />
<a href="http://www.quitebasic.com/prj/math/mandelbrot/">http://www.quitebasic.com/prj/math/mandelbrot/</a>
</li>

<li>Notebook interface<br />
<a href="https://en.wikipedia.org/wiki/Notebook_interface">https://en.wikipedia.org/wiki/Notebook_interface</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2023</small></p>
</body>
</html>

