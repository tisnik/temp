<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Scratch - plnohodnotný programovací jazyk nebo jen dětské puzzle? (3. část: Scratch a BYOB)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Scratch - plnohodnotný programovací jazyk nebo jen dětské puzzle? (3. část: Scratch a BYOB)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V desáté části seriálu o programovacích jazycích navržených pro výuku programování nejprve dokončíme popis projektu Scratch. Řekneme si, jak se pracuje s operátory a taktéž i základní informace o programování řízeném událostmi. Poté se zaměříme na popis jednoho rozšíření Scratche: projektu BYOB (Build Your Own Block).</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Operátory a funkce ve Scratchi</a></p>
<p><a href="#k02">2. Událostmi řízené programování</a></p>
<p><a href="#k03">3. Závěrečné zhodnocení předností a záporů projektu Scratch</a></p>
<p><a href="#k04">4. Projekt BYOB &ndash; Build Your Own Block</a></p>
<p><a href="#k05">5. Tvorba nových bloků &ndash; základ při dekompozici programů</a></p>
<p><a href="#k06">6. Příkazové bloky s&nbsp;parametry</a></p>
<p><a href="#k07">7. Demonstrační příklad &ndash; použití bloků s&nbsp;parametry</a></p>
<p><a href="#k08">8. Demonstrační příklad &ndash; použití bloků při tvorbě rekurzivních algoritmů</a></p>
<p><a href="#k09">9. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2>1. Operátory a funkce ve Scratchi</h2>

<p>V&nbsp;předchozích dvou částech seriálu o programovacích jazycích navržených
s&nbsp;ohledem na výuku programování jsme si popsali způsob tvorby aplikací
v&nbsp;projektu <i>Scratch</i>, včetně popisu jednotlivých řídicích bloků,
které jsou mj.&nbsp;použity i pro tvorbu podmínek a programových smyček. Dnes
popis projektu <i>Scratch</i> dokončíme. Nejdříve si řekneme, jak je možné
využívat operátory a funkce zabudované přímo ve <i>Scratchi</i> a ve druhé
kapitole se zaměříme na téma událostmi řízeného programování, které je ve
<i>Scratchi</i> podporováno. Ovšem projekt <i>Scratch</i> má i přes své
nesporné přednosti i několik omezení, které se týkají jak prakticky
neexistujících funkcí pro vstup a výstup dat (například do souborů), tak i
toho, že ve <i>Scratchi</i> není možné tvořit procedury a funkce, tudíž
v&nbsp;něm není snadné dekomponovat složitější programy na programy jednodušší
ani implementovat rekurzivní algoritmy. Toto omezení bylo odstraněno hned
v&nbsp;několika rozšířeních <i>Scratche</i>, kterým se budeme dále věnovat.</p>

<img src="http://i.iinfo.cz/images/694/lang09-8.png" width="235" height="131" alt="&#160;" />
<p><i>Obrázek 1: V&nbsp;této programové smyčce je při vyhodnocování, zda se má
běh smyčky již ukončit, využit relační operátor &bdquo;menší
než&ldquo;.</i></p>

<p>Začněme popisem takzvaných operátorů. Tento název je ve <i>Scratchi</i>
použit pro pojmenování samostatné kategorie příkazových bloků &ndash; jedná se
o bloky vykreslované se světle zelenou barvu pozadí implementující jak skutečné
operátory, tak i funkce. Příkazové bloky ze &bdquo;světlezelené&ldquo;
kategorie je možné rozdělit na bloky implementující základní aritmetické
operace (součet, rozdíl, součin, podíl, zaokrouhlení a dělení modulo), dále na
bloky implementující nějakou matematickou funkci (goniometrické funkce,
logaritmické funkce, výpočet odmocniny...), relační operátory (jsou podporovány
pouze relace &bdquo;menší než&ldquo;, &bdquo;větší než&ldquo; a
&bdquo;rovno&ldquo;), logické operátory (AND, OR, NOT) a na závěr je zde
přítomen blok generátoru náhodných čísel a bloky pro operace s&nbsp;řetězci.
Všechny vyjmenované bloky obsahují jedno nebo dvě okénka, do kterých se buď
zapisuje přímo hodnota operandu, nebo je sem možné přenést jméno proměnné (viz
předchozí část seriálu), popř.&nbsp;i celý blok s&nbsp;jiným operátorem.</p>

<img src="http://i.iinfo.cz/images/694/lang09-13.png" width="336" height="274" alt="&#160;" />
<p><i>Obrázek 2: Použití funkce pro generování náhodných čísel spadajících do
zadaného rozsahu.</i></p>

<p>Tímto poměrně jednoduchým a současně i přehledným způsobem je možné skládat
i složité matematické a logické výrazy, které jsou díky použití bloků vždy
správně &bdquo;uzávorkovány&ldquo; a navíc se nemusí složitě popisovat
asociativita a priorita jednotlivých operátorů (uživatel při tvorbě
složitějších výrazů vlastně sám konstruuje derivační strom, podobně jako je
tomu například v&nbsp;<i>Lispu</i>). Pokud se na řádek obsahující výraz dvakrát
klikne levým tlačítkem myši, pokusí se <i>Scratch</i> celý výraz vyhodnotit a
vypsat výsledek do &bdquo;bubliny&ldquo;, čehož je možné využít při ladění
programů (použijí se aktuální hodnoty proměnných).</p>

<img src="http://i.iinfo.cz/images/492/lang10-1.png" width="539" height="140" alt="&#160;" />
<p><i>Obrázek 3: Ukázka složitější podmínky, v&nbsp;níž jsou použity tři
relační operátory a dva logické operátory AND.</i></p>



<p><a name="k02"></a></p>
<h2>2. Událostmi řízené programování</h2>

<p>Při popisu projektu <i>Scratch</i> nesmíme zapomenout ještě na jeho jednu
velmi důležitou vlastnost. Jedná se o podporu programování řízeného událostmi.
V&nbsp;principu se jedná o to, že program přiřazený ke každému spritu (a taktéž
k&nbsp;pozadí) může běžet nezávisle na ostatních spritech a to dokonce i ve
stejný čas. Díky tomu lze velmi snadno implementovat například několik
pohybujících se objektů ve hře, typicky se může jednat o hráče a několik NPC.
Na druhou stranu je však mnohdy nutné, aby spolu tyto objekty (protože se o nic
jiného, než o objekty nejedná) nějakým způsobem komunikovaly. Tuto komunikaci
je možné alespoň částečně zajistit pomocí proměnných sdílených mezi všemi
sprity, protože již minule jsme si řekli, že u každé proměnné je možné
specifikovat, zda se jedná o soukromou proměnnou vybraného spritu nebo naopak o
proměnnou, k&nbsp;níž mají přístup i ostatní sprity. Komunikace pomocí
proměnných sice umožňuje předávání informací mezi objekty, ovšem pro přesné
načasování a synchronizaci je nutné použít jiný mechanismus. V&nbsp;případě
<i>Scratche</i> se jedná o metodu nazvanou <strong>posílání zpráv</strong>.</p>

<img src="http://i.iinfo.cz/images/492/lang10-2.png" width="284" height="173" alt="&#160;" />
<p><i>Obrázek 4: Velmi jednoduchá reakce na zprávu se jménem
&bdquo;zprava1&ldquo;. Po obdržení a zachycení této zprávy vypíše sprite na dvě
sekundy do &bdquo;bubliny&ldquo; text o obdržení zprávy. Po dvojkliku na spodní
osamocený blok se tato zpráva rozešle všem objektům.</i></p>

<p>Tuto metodu lze ve <i>Scratchi</i> používat velmi jednoduše. Každý sprite
může obsahovat jeden nebo více programů spuštěných ve chvíli, kdy je spritu
(nebo všem spritům) poslána zpráva určená svým jménem. Ihned poté se začne
tento program vykonávat. <i>Scratch</i> samozřejmě taktéž obsahuje příkazový
blok pro poslání zprávy určenému spritu nebo všem spritům (některé na ni nemusí
nijak reagovat) a taktéž blok pro poslání zprávy a čekání na její zpracování
(lze tak rozlišit mezi synchronním a asynchronním voláním). Podobný mechanismus
je využit i při tvorbě programů, které reagují buď na stisk ikony se zelenou
vlajkou (tou lze například současně rozpohybovat všechny sprity), na stisk
vybrané klávesy (včetně kurzorových šipek využitelných ve hře), popř.&nbsp;na
klik myší na vybraný sprite. I když se na první pohled mohou tyto možnosti zdát
nedostatečné, vzniklo již mnoho her, demoprogramů nebo prezentací ukazujících,
že tyto čtyři typy událostí tj.&nbsp;přijetí zprávy, spuštění aplikace, stisk
klávesy a kliknutí myší), dostačují i pro tvorbu složitějších aplikací
s&nbsp;mnoha interagujícími objekty.</p>

<img src="http://i.iinfo.cz/images/492/lang10-3.png" width="200" height="200" alt="&#160;" />
<p><i>Obrázek 5: Reakce spritu na obdržení a zachycení zprávy.</i></p>



<p><a name="k03"></a></p>
<h2>3. Závěrečné zhodnocení předností a záporů projektu Scratch</h2>

<p>Projekt <i>Scratch</i>, jehož popisem jsme se až doposud zabývali, se po
relativně krátké době po svém představení veřejnosti stal velmi populární a to
nejenom mezi učiteli základních škol (v&nbsp;USA a dalších zemích), ale i na
středních školách a na školách vysokých (především na fakultách netechnického
zaměření). Důvodů k&nbsp;této popularitě bylo a je několik, největším však
zůstává možnost vytvoření i poměrně složitého programu bez toho, aby byl
uživatel nucen zdlouhavě studovat syntaxi a sémantiku jazyka, učit se ovládat
vývojové prostředí nebo prostředí interpretru a navíc ještě reagovat na různá
kryptická chybová hlášení (ze syntaxe většiny běžných programovacích jazyků
vyplývá, že například chybějící uzavírací závorka nebo klíčové slovo ukončující
nějaký blok, vede ke vzniku chybového hlášení na jiném místě v&nbsp;programu,
než kde se skutečně chyba nachází). Další předností <i>Scratche</i> je jeho
orientace na tvorbu multimediálních programů a taktéž možnost snadno
prezentovat výsledný projekt na Internetu.</p>

<img src="http://i.iinfo.cz/images/492/lang10-4.png" width="401" height="331" alt="&#160;" />
<p><i>Obrázek 6: V&nbsp;tomto programu je uvnitř programové smyčky na základě
vyhodnocení podmínky (kolize dvou barev) rozhodnuto, zda se má všem dalším
objektům ve scéně poslat zpráva se jménem &bdquo;got-me&ldquo;.</i></p>

<p>Mezi další přednost <i>Scratche</i>, která sice není na první pohled zřejmá,
ale zato se ukázala být poměrně důležitá, patří fakt, že je tento projekt
naprogramován ve <i>Squeaku</i>, což mj.&nbsp;zajišťuje i jeho relativně
snadnou rozšiřitelnost (sami se můžete přesvědčit, že se při instalaci
<i>Scratche</i> nainstaluje binární virtuální stroj <i>Squeaku</i>, v&nbsp;němž
se spouští <strong>Scratch.image</strong>. <i>Scratch</i> má však i několik
nevýhod a omezení, které částečně vyplývají z&nbsp;toho, že jeho tvůrci
nechtěli zbytečně komplikovat jeho uživatelské rozhraní ani počet dostupných
funkcí. Z&nbsp;těchto snah o minimalismus vyplývá mj.&nbsp;i neexistence funkcí
umožňujících práci se soubory, funkcí pro komunikaci přes počítačovou síť atd.
Ovšem mnohem závažnější je nemožnost tvorby vlastních řídicích bloků, které by
nahrazovaly podprogramy/procedury/funkce. Není tedy divu, že &ndash; i díky
tomu, že je <i>Scratch</i> snadno rozšiřitelný ve <i>Squeaku</i> &ndash;
poměrně rychle vzniklo několik rozšíření <i>Scratche</i>. Především se jedná o
projekty <i>BYOB &ndash; Build Your Own Block</i> a <i>Panther</i>.</p>

<img src="http://i.iinfo.cz/images/492/lang10-5.png" width="234" height="170" alt="&#160;" />
<p><i>Obrázek 7: Naprogramovaná reakce na zprávu se jménem
&bdquo;got-me&ldquo;.</i></p>



<p><a name="k04"></a></p>
<h2>4. Projekt BYOB &ndash; Build Your Own Block</h2>

<p>Nejznámějším a nejpoužívanějším rozšířením <i>Scratche</i> je
v&nbsp;současnosti s&nbsp;velkou pravděpodobností projekt <i>BYOB</i>, neboli
<i>Build Your Own Block</i>, jehož hlavními autory jsou <i>Brian Harvey</i> a
<i>Jens Moenig</i> z&nbsp;univerzity v&nbsp;Berkeley (původní projekt
<i>Scratch</i> naproti tomu pochází z&nbsp;neméně slavné <i>Massachussetts
Institute of Technology</i> neboli <i>MIT</i>). Název tohoto projektu do značné
míry napovídá, jaká nová funkcionalita byla do <i>BYOBu</i> přidána &ndash;
jedná se o možnost vytváření vlastních příkazových bloků, což umožňuje
dekompozici programů na menší, jednodušší a snadněji zvládnutelné části a
samozřejmě též implementaci rekurzivních algoritmů. Ovšem ve skutečnosti
projekt <i>BYOB</i> svým uživatelům nabízí i množství dalších funkcí, například
tvorbu anonymních bloků, podporu pro přístup k&nbsp;atributům objektů, dotaz na
typ libovolného objektu v&nbsp;čase běhu programu, vylepšenou práci se seznamy,
funkce vyššího řádu atd.</p>

<img src="http://i.iinfo.cz/images/492/lang10-6.png" width="508" height="355" alt="&#160;" />
<p><i>Obrázek 8: Informace o autorech projektu BYOB i o autorech projektu
Scratch.</i></p>

<p>V&nbsp;některých případech se sice jedná o poměrně složité techniky známé a
používané například ve funkcionálních programovacích jazycích, ovšem základní
rozšíření, které projekt <i>BYOB</i> svým uživatelům nabízí, tj.&nbsp;tvorbu
vlastních příkazových bloků, je možné pochopit a začít využívat poměrně rychle,
a to i v&nbsp;případě podprogramů s&nbsp;parametry. Uživatelské prostředí
projektu <i>BYOB</i> se prakticky neliší od původního <i>Scratche</i>, což je
zajisté výhoda při přechodu uživatelů mezi oběma projekty. Chybějící českou
lokalizaci je možné alespoň částečně nahradit lokalizačním souborem ze
<i>Scratche</i> &ndash; postačuje nakopírovat soubor <strong>cs.po</strong>
z&nbsp;podadresáře <strong>scratch/locale/</strong> do podadresáře
<strong>byob/locale/</strong>. Český překlad samozřejmě nebude dostupný pro
nové bloky, které se v&nbsp;originálním <i>Scratchi</i> nenachází, jejich
překlad je však možné provést na základě šablony uložené v&nbsp;souboru
<strong>byob/locale/BYOB.pot</strong>.</p>

<img src="http://i.iinfo.cz/images/492/lang10-7.png" width="99" height="210" alt="&#160;" />
<p><i>Obrázek 9: Některé nové příkazové bloky, které je možné využívat
v&nbsp;projektu BYOB.</i></p>



<p><a name="k05"></a></p>
<h2>5. Tvorba nových bloků &ndash; základ při dekompozici programů</h2>

<p>Tvorba nových bloků v&nbsp;projektu <i>BYOB</i> je poměrně jednoduchá a
přímočará. V&nbsp;sekci &bdquo;Proměnné&ldquo; se v&nbsp;její dolní části
skrývá tlačítko sloužící pro vytvoření nového bloku &ndash; viz též screenshot
zobrazený na desátém obrázku. Po stisku tohoto tlačítka se zobrazí dialog,
v&nbsp;němž je možné zadat jak jméno nového bloku, tak i sekci, do níž má být
blok uložen. Třetí volbou je typ bloku, prozatím se však budeme zabývat bloky
příkazovými &ndash; <i>command</i>. Blok získá barvu pozadí právě na základě
sekce, do níž je přiřazen (screenshot zobrazený na obrázku číslo 11).</p>

<img src="http://i.iinfo.cz/images/492/lang10-8.png" width="227" height="197" alt="&#160;" />
<p><i>Obrázek 10: V&nbsp;dolní části sekce &bdquo;Proměnné&ldquo; se nachází
nové tlačítko sloužící pro vytvoření nového bloku.</i></p>

<p>Poté je již možné, stále v&nbsp;tomtéž dialogu, zvolit vstupní parametry
bloku (viz též další kapitoly) a následně i vytvořit tělo bloku,
tj.&nbsp;přenést a uspořádat v&nbsp;dialogu další příkazové bloky, které se
mají vykonat. Ihned poté je již možné blok použít v&nbsp;programu.  Blok může
být viditelný buď pro právě aktivní (editovaný) sprite, nebo pro všechny
sprity, které se v&nbsp;projektu nachází. S&nbsp;tím samozřejmě souvisí i
oblast viditelnosti proměnných, ke kterým má blok přístup.</p>

<img src="http://i.iinfo.cz/images/492/lang10-9.png" width="299" height="355" alt="&#160;" />
<p><i>Obrázek 11: Dotaz na jméno nového bloku i na sekci, do níž má být nový
příkazový blok uložen.</i></p>



<p><a name="k06"></a></p>
<h2>6. Příkazové bloky s&nbsp;parametry</h2>

<p>Vytvoření i použití uživatelsky definovaných bloků je sice snadné a
užitečné, ale ve většině případů je nutné do bloku předat i nějaké parametry.
Je zřejmé, že použití globálních proměnných, popř.&nbsp;proměnných platných
pouze pro vybraný sprite, není to nejvhodnější řešení. Ovšem ve skutečnosti
není nutné tuto nedokonalou a v&nbsp;mnoha ohledech dokonce i potenciálně
škodlivou techniku použít, protože pro každý uživatelsky vytvářený blok je
možné zvolit jak počet parametrů, tak i jejich názvy (což asi všichni
očekávají) a taktéž typ. Určení typu parametrů již pravděpodobně není tak
obvyklé, především ne u jazyka určeného především pro výuku programování, ovšem
ve skutečnosti je uvedení typu parametru pouze volitelná informace, která
nemusí být explicitně specifikována, takže se jí začínající
uživatelé-programátoři nemusí hned zpočátku zabývat (na druhou stranu může být
specifikace typu parametru použita pro kontroly prováděné při spuštění programu
nebo při pouhém zkoumání vlastností daného bloku).</p>

<img src="http://i.iinfo.cz/images/492/lang10-10.png" width="386" height="287" alt="&#160;" />
<p><i>Obrázek 12: Ikony se znakem + sloužící pro definici parametrů
bloku.</i></p>

<p>Přidání nového parametru do vytvářeného bloku je velmi jednoduché &ndash;
postačí přesunout kurzor myši nad název bloku, což vede k&nbsp;automatickému
zobrazení dvojice kulatých ikon se symbolem &bdquo;plus&ldquo;. Po stisku ikony
vpravo či vlevo od názvu bloku se zobrazí dialog pro výběr názvu parametru a
jeho typu (pro tento účel je určen rozbalovací seznam skrytý za šipkou mířící
doprava). Výběrem levé nebo pravé ikony &bdquo;plus&ldquo; se navíc určuje, zda
se parametr v&nbsp;ikoně bloku bude zadávat nalevo či napravo od jeho názvu,
což mj.&nbsp;znamená, že je možné velmi snadno vytvořit i nový infixový
operátor s&nbsp;funkcí podobnou již existujícím aritmetickým nebo logickým
operátorům. Jakmile je parametr uživatelského bloku definován, je možné jeho
ikonu zkopírovat (přetažením pomocí myši) přímo do těla bloku. Jméno parametru
se tedy nemusí vypisovat s&nbsp;využitím klávesnice, podobně jako není nutné
vypisovat jméno globální proměnné či proměnné lokální pro daný sprite.</p>

<img src="http://i.iinfo.cz/images/492/lang10-11.png" width="164" height="166" alt="&#160;" />
<p><i>Obrázek 13: Blok s&nbsp;dvojicí parametrů, z&nbsp;nichž první se zapisuje
před název bloku a druhý naopak až za jeho název.</i></p>



<p><a name="k07"></a></p>
<h2>7. Demonstrační příklad &ndash; použití bloků s&nbsp;parametry</h2>

<p>Využití uživatelsky definovaného bloku s&nbsp;parametry si ukážeme na
příkladu, v&nbsp;němž se využívá blok určený pro vykreslení šestiúhelníku
s&nbsp;volitelnou délkou stran. Tento blok je následně volán z&nbsp;programové
smyčky s&nbsp;měnící se hodnotou parametru, což vede k&nbsp;vykreslení spirály
složené ze šestiúhelníků.</p>

<img src="http://i.iinfo.cz/images/492/lang10-12.png" width="189" height="154" alt="&#160;" />
<p><i>Obrázek 14: Uživatelsky definovaný blok sloužící pro vykreslení
šestiúhelníku s&nbsp;volitelnou délkou stran.</i></p>

<img src="http://i.iinfo.cz/images/492/lang10-13.png" width="170" height="223" alt="&#160;" />
<p><i>Obrázek 15: Program, v&nbsp;němž se v&nbsp;programové smyčce volá
uživatelsky definovaný blok &bdquo;sestiuhelnik&ldquo;.</i></p>

<img src="http://i.iinfo.cz/images/492/lang10-14.png" width="309" height="255" alt="&#160;" />
<p><i>Obrázek 16: Výsledek běhu programu, jehož kód byl ukázán na obrázcích 14
a 15.</i></p>



<p><a name="k08"></a></p>
<h2>8. Demonstrační příklad &ndash; použití bloků při tvorbě rekurzivních algoritmů</h2>

<p>Uživatelsky definované bloky lze samozřejmě použít i pro implementaci
rekurzivních algoritmů. Blok je totiž ihned po potvrzení informací na prvním
formuláři umístěn do zvolené skupiny a je ho tak možné přetáhnout do těla toho
samého bloku. Jedním z&nbsp;nejčastěji ukazovaných a implementovaných
rekurzivních algoritmů s&nbsp;grafickým výstupem je algoritmus pro vykreslení
křivky <i>Helge von Kocha</i>, jejímž popisem jsme se již zabývali
v&nbsp;seriálu <a
href="http://www.root.cz/serialy/fraktaly-v-pocitacove-grafice/">Fraktály
v&nbsp;počítačové grafice</a>. Vytváření křivky Helge von Kocha spočívá
v&nbsp;provedení následujících kroků (nejedná se o popis programu, ale
geometrické konstrukce této křivky):</p>

<ol>

<li>Nejprve se zkonstruuje vodorovná úsečka o zadané délce.</li>

<li>Ve druhém kroku se tato úsečka rozdělí na (stejně dlouhé) třetiny.
Prostřední třetina se vyjme a na jejím místě se sestrojí dvě ramena
rovnoramenného trojúhelníku. Vznikne tedy obrazec, který se skládá
z&nbsp;lomené úsečky (polyčáry), jejíž délka je rovna 4/3 délky původní úsečky,
tj.&nbsp;celková délka takto zkonstruované křivky se o třetinu prodlouží.</li>

<li>Na vzniklý obrazec se opakovaně aplikuje pravidlo uvedené v&nbsp;předchozím
bodě, tj.&nbsp;každá úsečka je rozdělena na třetiny, prostřední třetina se
vyjme a nahradí se dvojicí ramen rovnoramenného trojúhelníka.</li>

</ol>

<img src="http://i.iinfo.cz/images/492/lang10-15.png" width="214" height="335" alt="&#160;" />
<p><i>Obrázek 17: Uživatelsky definovaný blok s&nbsp;implementací vykreslení
křivky Helge von Kocha. V&nbsp;parametru size se předává vodorovná délka
obrazce, v&nbsp;parametru limit pak limitní (nejmenší) délka jednotlivých
segmentů křivky.</i></p>

<p>Při implementaci uživatelsky definovaného bloku, jehož úkolem je
s&nbsp;využitím želví grafiky vykreslit Kochovu křivku, se sice budeme řídit
výše uvedenými pravidly pro geometrickou konstrukci křivky, vlastní
implementace však bude dosti odlišná, protože odebírání částí úseček a náhrada
odebraných částí úsečkami novými nejsou operace, které by bylo možné jednoduše
provádět.</p>

<img src="http://i.iinfo.cz/images/492/lang10-16.png" width="249" height="440" alt="&#160;" />
<p><i>Obrázek 18: Blok z&nbsp;obrázku číslo 17 je v&nbsp;tomto programu volán
celkem třikrát pro vykreslení Kochovy křivky s&nbsp;vodorovnou délkou 400
jednotek a rozdílným limitem (ten určuje úroveň rekurzivního zanoření).</i></p>

<p>Zvolíme mnohem elegantnější řešení založené na rekurzi. Základem
vznikajícího uživatelsky definovaného bloku bude vykreslení tvaru podobného
první iteraci Kochovy křivky, tj.&nbsp;čtyř úseček, z&nbsp;nichž dvě krajní
úsečky jsou vodorovné a prostřední úsečky tvoří dvojici ramen rovnostranného
trojúhelníku. Tento tvar je možné vykreslit tak, že se nejprve nakreslí první
vodorovná úsečka, potom se sprite natočí o 60&deg; doleva a vykreslí se druhá
úsečka. Po otočce o 120&deg; doprava lze vykreslit úsečku třetí a po posledním
otočení o 60&deg; doleva je sprite opět orientován vodorovně a může tak
vykreslit poslední část obrazce. Rekurze spočívá v&nbsp;náhradě kreslení úsečky
za volání uživatelského bloku s&nbsp;délkou úsečky zmenšenou na jednu
třetinu.</p>

<img src="http://i.iinfo.cz/images/492/lang10-17.png" width="422" height="316" alt="&#160;" />
<p><i>Obrázek 19: Výsledek běhu programu, jehož kód byl ukázán na obrázcích 17
a 18.</i></p>



<p><a name="k09"></a></p>
<h2>9. Odkazy na Internetu</h2>

<ol>

<li>Scratch: oficiální stránka projektu<br />
<a href="http://scratch.mit.edu/">http://scratch.mit.edu/</a>
</li>

<li>Scratch: galerie projektů vytvořených ve Scratchi<br />
<a href="http://scratch.mit.edu/galleries/browse/newest">http://scratch.mit.edu/galleries/browse/newest</a>
</li>

<li>Scratch: nápověda<br />
<a href="file:///usr/share/scratch/Help/en/index.html">file:///usr/share/scratch/Help/en/index.html</a>
</li>

<li>Scratch: obrazovky nápovědy<br />
<a href="file:///usr/share/scratch/Help/en/allscreens.html">file:///usr/share/scratch/Help/en/allscreens.html</a>
</li>

<li>Scratch (Wikipedie CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Scratch">http://cs.wikipedia.org/wiki/Scratch</a>
</li>

<li>Scratch (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Scratch_(programming_language)">http://en.wikipedia.org/wiki/Scratch_(programming_language)</a>
</li>

<li>Mitchel Resnick (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Mitchel_Resnick">http://en.wikipedia.org/wiki/Mitchel_Resnick</a>
</li>

<li>Domácí stránka Mitchela Resnicka<br />
<a href="http://web.media.mit.edu/~mres/">http://web.media.mit.edu/~mres/</a>
</li>

<li>BASIC-256 - BASIC256 - An easy to use BASIC language and IDE<br />
<a href="http://www.basic256.org/">http://www.basic256.org/</a>
</li>

<li>PythonTurtle<br />
<a href="http://pythonturtle.org/">http://pythonturtle.org/</a>
</li>

<li>Turtle graphics for Tk<br />
<a href="http://docs.python.org/library/turtle.html">http://docs.python.org/library/turtle.html</a>
</li>

<li>Scratch Lowers Resistance to Programming<br />
<a href="http://www.wired.com/gadgetlab/2009/03/scratch-lowers/">http://www.wired.com/gadgetlab/2009/03/scratch-lowers/</a>
</li>

<li>Stopařův průvodce jedním převážně neškodným programovacím jazykem<br />
<a href="http://www.squeak.cz/">http://www.squeak.cz/</a>
</li>

<li>CamelCase<br />
<a href="http://en.wikipedia.org/wiki/Camel_case">http://en.wikipedia.org/wiki/Camel_case</a>
</li>

<li>Smalltalk tutorial chapter 5 &ndash; Variables<br />
<a href="http://www.tutorials4u.com/smalltalk/smalltalk-tutorial-05.htm">http://www.tutorials4u.com/smalltalk/smalltalk-tutorial-05.htm</a>
</li>

<li>History around Pascal Casing and Camel Casing<br />
<a href="http://blogs.msdn.com/b/brada/archive/2004/02/03/67024.aspx">http://blogs.msdn.com/b/brada/archive/2004/02/03/67024.aspx</a>
</li>

<li>Xerox Alto<br />
<a href="http://en.wikipedia.org/wiki/Xerox_Alto">http://en.wikipedia.org/wiki/Xerox_Alto</a>
</li>

<li>WIMP (computing)<br />
<a href="http://en.wikipedia.org/wiki/WIMP_(computing)">http://en.wikipedia.org/wiki/WIMP_(computing)</a>
</li>

<li>Graphical user interface<br />
<a href="http://en.wikipedia.org/wiki/GUI">http://en.wikipedia.org/wiki/GUI</a>
</li>

<li>Xerox Star<br />
<a href="http://en.wikipedia.org/wiki/Xerox_Star">http://en.wikipedia.org/wiki/Xerox_Star</a>
</li>

<li>The Xerox Star 8010 "Dandelion"<br />
<a href="http://www.digibarn.com/collections/systems/xerox-8010/index.html">http://www.digibarn.com/collections/systems/xerox-8010/index.html</a>
</li>

<li>Fibonacci number<br />
<a href="http://en.wikipedia.org/wiki/Fibonacci_number">http://en.wikipedia.org/wiki/Fibonacci_number</a>
</li>

<li>Squeak home page<br />
<a href="http://www.squeak.org/">http://www.squeak.org/</a>
</li>

<li>XO: The Children's Machine<br />
<a href="http://wiki.laptop.org/go/The_Children's_Machine">http://wiki.laptop.org/go/The_Children's_Machine</a>
</li>

<li>Squeak na Wikipedii EN<br />
<a href="http://en.wikipedia.org/wiki/Squeak">http://en.wikipedia.org/wiki/Squeak</a>
</li>

<li>Squeak na Wikipedii CZ<br />
<a href="http://cs.wikipedia.org/wiki/Squeak">http://cs.wikipedia.org/wiki/Squeak</a>
</li>

<li>Squeak by Example<br />
<a href="http://squeakbyexample.org/">http://squeakbyexample.org/</a>
</li>

<li>Squeak Land<br />
<a href="http://www.squeakland.org/">http://www.squeakland.org/</a>
</li>

<li>SqueakNotes<br />
<a href="http://squeak.zwiki.org/SqueakNotes">http://squeak.zwiki.org/SqueakNotes</a>
</li>

<li>Squeak FAQ<br />
<a href="http://wiki.squeak.org/squeak/471">http://wiki.squeak.org/squeak/471</a>
</li>

<li>Learning Squeak<br />
<a href="http://c2.com/cgi/wiki?LearningSqueak">http://c2.com/cgi/wiki?LearningSqueak</a>
</li>

<li>Lazarus (Software)<br />
<a href="http://en.wikipedia.org/wiki/Lazarus_%28software%29">http://en.wikipedia.org/wiki/Lazarus_%28software%29</a>
</li>

<li>FreePascal<br />
<a href="http://www.freepascal.org/">http://www.freepascal.org/</a>
</li>

<li>"Why I Love Python" slides<br />
<a href="http://www.mindviewinc.com/downloads/pub/eckel/LovePython.zip">http://www.mindviewinc.com/downloads/pub/eckel/LovePython.zip</a>
</li>

<li>"Why I love Python" (presentation)<br />
<a href="http://www.slideshare.net/didip/why-i-love-python">http://www.slideshare.net/didip/why-i-love-python</a>
</li>

<li>První jazyk: Python<br />
<a href="http://macek.sandbox.cz/texty/prvni-jazyk-python/">http://macek.sandbox.cz/texty/prvni-jazyk-python/</a>
</li>

<li>Programovací jazyk Python<br />
<a href="http://www.py.cz/FrontPage">http://www.py.cz/FrontPage</a>
</li>

<li>Python &ndash; Wikipedia CS<br />
<a href="http://cs.wikipedia.org/wiki/Python">http://cs.wikipedia.org/wiki/Python</a>
</li>

<li>IPython<br />
<a href="http://en.wikipedia.org/wiki/Ipython">http://en.wikipedia.org/wiki/Ipython</a>
</li>

<li>IPython: an interactive computing environment<br />
<a href="http://ipython.scipy.org/moin/">http://ipython.scipy.org/moin/</a>
</li>

<li>Category:Python<br />
<a href="http://rosettacode.org/wiki/Category:Python">http://rosettacode.org/wiki/Category:Python</a>
</li>

<li>Educational programming language<br />
<a href="http://en.wikipedia.org/wiki/Educational_programming_language">http://en.wikipedia.org/wiki/Educational_programming_language</a>
</li>

<li>Seriál Letní škola programovacího jazyka Logo<br />
<a href="http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/">http://www.root.cz/serialy/letni-skola-programovaciho-jazyka-logo/</a>
</li>

<li>Logo Tree Project:<br />
<a href="http://www.elica.net/download/papers/LogoTreeProject.pdf">http://www.elica.net/download/papers/LogoTreeProject.pdf</a></li>

<li>Language Poster (O'Reilly):<br />
<a href="http://www.oreilly.com/news/graphics/prog_lang_poster.pdf">http://www.oreilly.com/news/graphics/prog_lang_poster.pdf</a></li>

<li>Informace o Comenius Logu:<br />
<a href="http://www.comlogo.input.sk/index.html">http://www.comlogo.input.sk/index.html</a></li>

<li>Stránka nabízející stažení Comenius Loga:<br />
<a href="http://www.comlogo.input.sk/nastiahnutie.html">http://www.comlogo.input.sk/nastiahnutie.html</a></li>

<li>Seminární práce o Comenius Logu:<br />
<a href="http://nwit.pedf.cuni.cz/rotal9ap/logo/">http://nwit.pedf.cuni.cz/rotal9ap/logo/</a></li>

<li>Informace o LEGO/Logu:<br />
<a href="http://education.otago.ac.nz/nzlnet/Logo/legologo.html">http://education.otago.ac.nz/nzlnet/Logo/legologo.html</a></li>

<li>Informace o systému Elica:<br />
<a href="http://www.elica.net/site/index.html">http://www.elica.net/site/index.html</a></li>

<li>Informace o systému NetLogo:<br />
<a href="http://ccl.northwestern.edu/netlogo/">http://ccl.northwestern.edu/netlogo/</a></li>

<li>Stažení NetLoga:<br />
<a href="http://ccl.northwestern.edu/netlogo/download.shtml">http://ccl.northwestern.edu/netlogo/download.shtml</a></li>

<li>Uživatelský manuál NetLoga ve formátu PDF:<br />
<a href="http://ccl.northwestern.edu/netlogo/docs/NetLogo%20User%20Manual.pdf">http://ccl.northwestern.edu/netlogo/docs/NetLogo%20User%20Manual.pdf</a></li>

<li>NetLogo FAQ:<br />
<a href="http://ccl.northwestern.edu/netlogo/docs/faq.html">http://ccl.northwestern.edu/netlogo/docs/faq.html</a></li>

<li>Domácí stránka Daniela Azumy (autora implementace Turtle Tracks):<br />
<a href="http://alumnus.caltech.edu/~dazuma/home/">http://alumnus.caltech.edu/~dazuma/home/</a></li>

<li>Informace o <i>aUCBLogu</i>:<br />
<a href="http://www.physik.uni-augsburg.de/~micheler/">http://www.physik.uni-augsburg.de/~micheler/</a></li>

<li>Domácí stránka MSW Loga:<br />
<a href="http://www.softronix.com/logo.html">http://www.softronix.com/logo.html</a></li>

<li>Karel online<br />
<a href="http://karel.oldium.net/">http://karel.oldium.net/</a>
</li>

<li>EDU-SIG: Python in Education<br />
<a href="http://www.python.org/community/sigs/current/edu-sig/">http://www.python.org/community/sigs/current/edu-sig/</a>
</li>

<li>Guido van Robot<br />
<a href="http://en.wikipedia.org/wiki/Guido_van_Robot">http://en.wikipedia.org/wiki/Guido_van_Robot</a>
</li>

<li>The Guido van Robot Programming Language<br />
<a href="http://gvr.sourceforge.net/">http://gvr.sourceforge.net/</a>
</li>

<li>An Introduction to Programming with Karel J. Robot<br />
<a href="http://blog.thingoid.com/2003/10/karel-intro/">http://blog.thingoid.com/2003/10/karel-intro/</a>
</li>

<li>Teaching a young robot new tricks<br />
<a href="http://blog.thingoid.com/2003/11/karel-new-tricks/">http://blog.thingoid.com/2003/11/karel-new-tricks/</a>
</li>

<li>Karel and Company - More Robots<br />
<a href="http://blog.thingoid.com/2003/12/karel-and-company/">http://blog.thingoid.com/2003/12/karel-and-company/</a>
</li>

<li>Karel heads for the stars<br />
<a href="http://blog.thingoid.com/2004/03/karel-star/">http://blog.thingoid.com/2004/03/karel-star/</a>
</li>

<li>Karel programming language documentation<br />
<a href="http://mormegil.wz.cz/prog/karel/prog_doc.htm">http://mormegil.wz.cz/prog/karel/prog_doc.htm</a>
</li>

<li>Karel J. Robot<br />
<a href="http://www.mainlandregional.net/dklipp/Honors%20Computer%20Science%20Java.htm">http://www.mainlandregional.net/dklipp/Honors%20Computer%20Science%20Java.htm</a>
</li>

<li>Karel (programming language)<br />
<a href="http://en.wikipedia.org/wiki/Karel_(programming_language)">http://en.wikipedia.org/wiki/Karel_(programming_language)</a>
</li>

<li>Richard E. Pattis<br />
<a href="http://en.wikipedia.org/wiki/Richard_E._Pattis">http://en.wikipedia.org/wiki/Richard_E._Pattis</a>
</li>

<li>XKarel home page<br />
<a href="http://xkarel.sourceforge.net/eng/">http://xkarel.sourceforge.net/eng/</a>
</li>

<li>XKarel - screenshoty oken<br />
<a href="http://xkarel.sourceforge.net/eng/program.php#Okna">http://xkarel.sourceforge.net/eng/program.php#Okna</a>
</li>

<li>Greenfoot<br />
<a href="http://www.greenfoot.org/about/whatis.html">http://www.greenfoot.org/about/whatis.html</a>
</li>

<li>Computer programming -- Educational programming languages<br />
<a href="http://www.kidslike.info/computer_programming_educational_programming_languages">http://www.kidslike.info/computer_programming_educational_programming_languages</a>
</li>

<li>Making Great Programmers: Why BASIC is Still Relevant<br />
<a href="http://kidbasic.sourceforge.net/en/why.html">http://kidbasic.sourceforge.net/en/why.html</a>
</li>

<li>Gambas Wiki<br />
<a href="http://en.wikibooks.org/wiki/Gambas">http://en.wikibooks.org/wiki/Gambas</a>
</li>

<li>Free tool offers 'easy' coding<br />
<a href="http://news.bbc.co.uk/2/hi/technology/6647011.stm">http://news.bbc.co.uk/2/hi/technology/6647011.stm</a>
</li>

<li>Základy želví grafiky<br />
<a href="http://www.root.cz/clanky/zaklady-zelvi-grafiky/">http://www.root.cz/clanky/zaklady-zelvi-grafiky/</a>
</li>

<li>Bill Kendrick's Web Turtle<br />
<a href="http://www.sonic.net/~nbs/webturtle/">http://www.sonic.net/~nbs/webturtle/</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2011</small></p>
</body>
</html>

