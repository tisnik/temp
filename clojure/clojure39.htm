<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Novinky v Clojure verze 1.9.0</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Novinky v Clojure verze 1.9.0</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Na konci minulého roku se vývojáři dočkali další verze programovacího jazyka Clojure. Mezi novinky představené ve verzi 1.9.0 patří vylepšené nástroje ovládané z CLI, standardní správce projektů a v neposlední řadě knihovna spec pro popis a validaci datových struktur.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Novinky v&nbsp;Clojure verze 1.9.0</a></p>
<p><a href="#k02">2. Instalace Clojure 1.9.0 bez použití nástroje Leiningen</a></p>
<p><a href="#k03">3. Instalace využívající nový instalační skript</a></p>
<p><a href="#k04">4. První spuštění interaktivního REPLu</a></p>
<p><a href="#k05">5. Instalace Clojure 1.9.0 s&nbsp;použitím nástroje Leiningen</a></p>
<p><a href="#k06">6. Výsledek instalace</a></p>
<p><a href="#k07">7. Spuštění interaktivního REPLu</a></p>
<p><a href="#k08">*** 8. Nový správce projektů</a></p>
<p><a href="#k09">*** 9. Ukázka automatického stažení závislých balíčků</a></p>
<p><a href="#k10">*** 10. Umístění stažených knihoven</a></p>
<p><a href="#k11">*** 11. Projekt závisející na větším množství knihoven</a></p>
<p><a href="#k12">*** 12. Projekt využívající lokální knihovny</a></p>
<p><a href="#k13">*** 13. Nové predikáty v&nbsp;základní knihovně Clojure</a></p>
<p><a href="#k14">*** 14. Otestování nových predikátů</a></p>
<p><a href="#k15">*** 15. Knihovna <strong>clojure.spec</strong></a></p>
<p><a href="#k16">*** 16. Jednoduchá ukázka použití knihovny <strong>clojure.spec</strong></a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Odkazy na předchozí části tohoto seriálu</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Novinky v&nbsp;Clojure verze 1.9.0</h2>

<p>Již <a href="https://clojure.org/news/2017/12/08/clojure19">na začátku
prosince</a> se vývojáři používající programovací jazyk <a
href="https://www.clojure.org/">Clojure</a> dočkali nové verze svého oblíbeného
nástroje. Vyšla totiž <a
href="https://repo1.maven.org/maven2/org/clojure/clojure/1.9.0/">stabilní verze
Clojure 1.9.0</a>, která byla tento měsíc následována alfa verzí <a
href="https://repo1.maven.org/maven2/org/clojure/clojure/1.10.0-alpha4/">1.10.0-alpha4</a>.
V&nbsp;dnešním článku se budeme zabývat novinkami, které byly zařazeny do
stabilní verze 1.9.0. Již na začátku je nutné říct, že většina novinek se
netýká samotného programovacího jazyka, na což jsou ovšem programátoři zvyklí,
protože Lispovské jazyky s&nbsp;minimalistickou syntaxí a současně
s&nbsp;podporou systému maker příliš velké úpravy či vylepšování syntaxe
nepotřebují. Ovšem další části celého ekosystému postaveného okolo Clojure je
samozřejmě možné různým způsobem vylepšovat. Týká se to jak knihoven, tak i
<i>toolingu</i>, tj.&nbsp;různých podpůrných nástrojů používaných při vývoji
aplikací, správě projektů popř.&nbsp;při nasazování aplikací do testovacího či
produkčního prostředí.</p>

<p>Mezi největší novinky Clojure 1.9.0 tak patří zařazení knihovny <a
href="https://clojure.org/about/spec">spec</a> do Clojure a současně úprava
základních knihoven dodávaných s&nbsp;tímto jazykem takovým způsobem, aby tuto
knihovnu podporovaly (<i>spec</i> je sice stále v&nbsp;alfa verzi, ovšem
v&nbsp;Clojure světě alfa již znamená dobrou stabilitu). Knihovnu <i>spec</i>
je možné využít jak pro přesný popis složitých datových struktur (typicky
kombinace slovníků s&nbsp;vektory), tak i pro jejich validaci. Další novinkou,
kterou ve verzi 1.9.0 najdeme, je vylepšená podpora pro použití Clojure
z&nbsp;příkazového řádku a v&nbsp;neposlední řadě taktéž standardní správce
projektů. Ten sice &ndash; alespoň prozatím &ndash; neobsahuje tolik možností
jako oblíbený Leiningen, ovšem pro jednodušší projekty mohou jeho možnosti
vývojářům dostačovat. S&nbsp;některými možnostmi nabízenými tímto správcem se
seznámíme <a href="#k08">v&nbsp;osmé</a> až <a href="#12">dvanácté
kapitole</a>.</p>

<p><ins>Poznámka: pro běh Clojure (libovolné verze) je samozřejmě zapotřebí mít
nainstalováno JRE (<i>Java Runtime Environment</i>), podobně jako pro spuštění
dalších javovských aplikací. Postačuje jak verze 6, tak i novější verze 7 či 8.
Já jsem v&nbsp;dnešním článku vše testoval na verzi 7 i 8, sedmičku na Mintu a
osmičku na Fedoře:</ins></p>

<pre>
java version "1.7.0_79"
OpenJDK Runtime Environment (IcedTea 2.5.5) (7u79-2.5.5-0ubuntu0.14.04.2)
OpenJDK 64-Bit Server VM (build 24.79-b02, mixed mode)
</pre>

<pre>
openjdk version "1.8.0_151"
OpenJDK Runtime Environment (build 1.8.0_151-b12)
OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)
</pre>



<p><a name="k02"></a></p>
<h2 id="k02">2. Instalace Clojure 1.9.0 bez použití nástroje Leiningen</h2>

<p>V&nbsp;této kapitole si ukážeme, jakým způsobem je možné nainstalovat
programovací jazyk Clojure 1.9.0 i se standardními podpůrnými nástroji. Přitom
se zaměříme na situaci, kdy se z&nbsp;různých důvodů vývojář rozhodne, že
<strong>ne</strong>použije nástroj <a
href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure/">Leiningen</a>.
Pro naprostou většinu projektů je sice stále doporučováno Leiningen použít,
ovšem mohou existovat situace, kdy to není možné. V&nbsp;těchto situacích máme
hned několik možností, jak Clojure 1.9.0 nainstalovat.</p>

<p>První volbou, která se nám nabízí (a která není nikde popsána :-), je ruční
instalace. Pokud se tedy rozhodnete si sami řídit všechny kroky instalace,
postačuje si stáhnout soubor nazvaný <strong>clojure-1.9.0-javadoc.jar</strong>
z&nbsp;adresáře <a
href="https://repo1.maven.org/maven2/org/clojure/clojure/1.9.0/">https://repo1.maven.org/maven2/org/clojure/clojure/1.9.0/</a>.
Tento soubor obsahuje jak samotný jazyk Clojure (překladač do bajtkódu JVM,
runtime i vlastní smyčku REPL), tak i základní knihovny a dokonce i jejich
zdrojové kódy. Pro stažení do lokálního adresáře postačí nástroj
<strong>wget</strong> (popř.&nbsp;<strong>curl -O</strong>):</p>

<pre>
$ <strong>wget http://repo1.maven.org/maven2/org/clojure/clojure/1.9.0/clojure-1.9.0.jar</strong>
&nbsp;
Resolving repo1.maven.org (repo1.maven.org)... 151.101.12.209
Connecting to repo1.maven.org (repo1.maven.org)|151.101.12.209|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 3688794 (3,5M) [application/java-archive]
Saving to: ‘clojure-1.9.0.jar’
&nbsp;
100%[======================================================] 3 688 794   1,70MB/s   in 2,1s   
&nbsp;
2018-02-20 21:49:35 (1,70 MB/s) - ‘clojure-1.9.0.jar’ saved [3688794/3688794]
</pre>

<p>Navíc ještě &ndash; což je novinka, která se poprvé objevila právě ve verzi
1.9.0 &ndash; musíte stáhnout knihovnu <strong>spec</strong>:</p>

<pre>
$ <strong>wget https://repo1.maven.org/maven2/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar</strong>
&nbsp;
--2018-02-20 22:01:14--  https://repo1.maven.org/maven2/org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar
Resolving repo1.maven.org (repo1.maven.org)... 151.101.12.209
Connecting to repo1.maven.org (repo1.maven.org)|151.101.12.209|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 591287 (577K) [application/java-archive]
Saving to: ‘spec.alpha-0.1.143.jar’
&nbsp;
100%[======================================================] 591 287      478KB/s   in 1,2s   
&nbsp;
2018-02-20 22:01:16 (478 KB/s) - ‘spec.alpha-0.1.143.jar’ saved [591287/591287]
</pre>

<p>V&nbsp;pracovním adresáři tedy budeme mít dva Java archivy:</p>

<ol>
<li><strong>clojure-1.9.0.jar</strong></li>
<li><strong>spec.alpha-0.1.143.jar</strong></li>
</ol>

<p>Spuštění interaktivní smyčky REPL bude vypadat jinak, než v&nbsp;předchozích
verzích, protože je nutné specifikovat cestu k&nbsp;Java archivu
s&nbsp;knihovnou <strong>spec</strong>:</p>

<pre>
$ <strong>java -cp spec.alpha-0.1.143.jar:clojure-1.9.0.jar clojure.main</strong>
&nbsp;
Clojure 1.9.0
user=&gt; 
</pre>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace využívající nový instalační skript</h2>

<p>Existuje však i mnohem snadnější varianta instalace Clojure verze 1.9.0. Pro
tuto verzi totiž byl připraven instalační skript, který sám stáhne všechny
potřebné archivy a rozbalí je do správných adresářů v&nbsp;systému. Nejprve si
tedy tento skript stáhneme do pracovního adresáře:</p>

<pre>
$ <strong>wget https://download.clojure.org/install/linux-install-1.9.0.326.sh</strong>
&nbsp;
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   765  100   765    0     0   3759      0 --:--:-- --:--:-- --:--:--  3768
</pre>

<p>Následně si skript pro jistotu prohlédněte, abyste zjistili, co přesně dělá
(je to jen zhruba dvacet řádků). Skript totiž budeme spouštět
s&nbsp;rootovskými právy a to z&nbsp;toho důvodu, že se soubory budou
rozbalovat do adresáře <strong>/usr/local</strong>. Po spuštění skriptu
s&nbsp;právy roota se provede automatické stažení potřebných archivů a jejich
rozbalení:</p>

<pre>
$ <strong>sudo bash linux-install-1.9.0.326.sh</strong>
&nbsp;
Downloading and expanding tar
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 17.0M  100 17.0M    0     0  21.7M      0 --:--:-- --:--:-- --:--:-- 21.7M
Installing libs into /usr/local/lib/clojure
Installing clojure and clj into /usr/local/bin
Removing download
Use clj -h for help.
</pre>

<p>Adresář <strong>/usr/local</strong> byl na mém systému prakticky prázdný
(obsahoval jen několik prázdných podadresářů pro manuálové stránky). Po
instalaci Clojure 1.9.0 se jeho obsah změnil následovně:</p>

<pre>
$ <strong>tree /usr/local/</strong>
&nbsp;
/usr/local/
├── bin
│   ├── clj
│   └── clojure
├── etc
├── games
├── include
├── lib
│   └── clojure
│       ├── deps.edn
│       ├── example-deps.edn
│       └── libexec
│           └── clojure-tools-1.9.0.326.jar
├── lib64
├── libexec
├── sbin
├── share
│   ├── applications
│   │   └── mimeinfo.cache
│   ├── info
│   └── man
│       ├── man1
│       ├── man1x
│       ├── man2
│       ├── man2x
│       ├── man3
│       ├── man3x
│       ├── man4
│       ├── man4x
│       ├── man5
│       ├── man5x
│       ├── man6
│       ├── man6x
│       ├── man7
│       ├── man7x
│       ├── man8
│       ├── man8x
│       ├── man9
│       ├── man9x
│       └── mann
└── src
&nbsp;
34 directories, 6 files
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. První spuštění interaktivního REPLu</h2>

<p>Před vlastním spuštěním interaktivní smyčky REPL si doinstalujte balíček
<strong>rlwrap</strong>. Ten sice striktně nepotřebujete, ovšem ovládání REPLu
nebude tak příjemné (klávesové zkratky, historie příkazového řádku atd.):</p>

<pre>
$ <strong>sudo dnf install rlwrap</strong>
</pre>

<p>alternativně:</p>

<pre>
$ <strong>sudo apt-get install rlwrap</strong>
</pre>

<p>Nyní je již možné spustit REPL, a to (opět nově!) příkazem
<strong>clj</strong>. Povšimněte si, že se teprve nyní doinstalují další
závislosti, především pak samotný Clojure:</p>

<pre>
$ <strong>clj</strong>
&nbsp;
Downloading: org/clojure/clojure/1.9.0/clojure-1.9.0.jar from https://repo1.maven.org/maven2/
Downloading: org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar from https://repo1.maven.org/maven2/
Downloading: org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar from https://repo1.maven.org/maven2/
Clojure 1.9.0
user=&gt;
</pre>

<p>REPL ukončíme klasicky:</p>

<pre>
<strong>[Ctrl+D]</strong>
</pre>

<p>Každé další spuštění interpretru již bude rychlejší, protože se samozřejmě
již nebudou žádné další závislosti stahovat. Ostatně si to můžeme
vyzkoušet:</p>

<pre>
$ <strong>clj</strong>
&nbsp;
Clojure 1.9.0
user=&gt;
</pre>

<p>Poznámka: ve skutečnosti je <strong>clj</strong> poměrně mocný nástroj
s&nbsp;mnoha přepínači a příkazy:</p>

<pre>
$ <strong>clj --help</strong>
&nbsp;
Usage: clojure [dep-opt*] [init-opt*] [main-opt] [arg*]
       clj     [dep-opt*] [init-opt*] [main-opt] [arg*]
&nbsp;
The clojure script is a runner for Clojure. clj is a wrapper
for interactive repl use. These scripts ultimately construct and
invoke a command-line of the form:
&nbsp;
java [java-opt*] -cp classpath clojure.main [init-opt*] [main-opt] [arg*]
&nbsp;
The dep-opts are used to build the java-opts and classpath:
 -Jopt          Pass opt through in java_opts, ex: -J-Xmx512m
 -Oalias...     Concatenated jvm option aliases, ex: -O:mem
 -Ralias...     Concatenated resolve-deps aliases, ex: -R:bench:1.9
 -Calias...     Concatenated make-classpath aliases, ex: -C:dev
 -Malias...     Concatenated main option aliases, ex: -M:test
 -Aalias...     Concatenated aliases of any kind, ex: -A:dev:mem
 -Sdeps EDN     Deps data to use as the final deps file
 -Spath         Compute classpath and echo to stdout only
 -Srepro        Use only the local deps.edn (ignore other config files)
 -Sforce        Force recomputation of the classpath (don't use the cache)
 -Spom          Generate (or update existing) pom.xml with deps and paths
 -Stree         Print dependency tree
 -Sresolve-tags Resolve git coordinate tags to shas and update deps.edn
 -Sverbose      Print important path info to console
&nbsp;
init-opt:
 -i, --init path     Load a file or resource
 -e, --eval string   Eval exprs in string; print non-nil values
&nbsp;
main-opt:
 -m, --main ns-name  Call the -main function from namespace w/args
 -r, --repl          Run a repl
 path                Run a script from a file or resource
 -                   Run a script from standard input
 -h, -?, --help      Print this help message and exit
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Instalace Clojure 1.9.0 s&nbsp;použitím nástroje Leiningen</h2>

<p>Alternativně je možné Clojure 1.9.0 nainstalovat s&nbsp;použitím správce
projektů <i>Leiningen</i>. Opět si ukažme, jak to lze provést. Předpokládejme,
že již Leiningen používáte s&nbsp;prakticky libovolnou starší verzí Clojure.
Nejprve vytvoříme nový projekt, a to příkazem:</p>

<pre>
<strong>lein new app clojure9-test</strong>
Generating a project called clojure9-test based on the 'app' template.
</pre>

<p>Po zadání tohoto příkazu by se měl vytvořit adresář obsahující strukturu
nového projektu:</p>

<pre>
.
├── doc
│   └── intro.md
├── LICENSE
├── project.clj
├── README.md
├── resources
├── src
│   └── clojure9_test
│       └── core.clj
└── test
    └── clojure9_test
        └── core_test.clj
&nbsp;
6 directories, 6 files
</pre>

<p>Podívejme se nyní na obsah projektového souboru nazvaného
<strong>project.clj</strong>. Ten může vypadat takto:</p>

<pre>
(defproject clojure9-test "0.1.0-SNAPSHOT"
  :description "Projekt, který zajistí stažení Clojure verze 1.9.0"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "<strong>1.7.0</strong>"]]
  :main ^:skip-aot clojure9-test.core
  :target-path "target/%s"
  :profiles {:uberjar {:aot :all}})
</pre>

<p>Označenou část projektového souboru změníme takovým způsobem, aby se namísto
verze <strong>1.5.0</strong>, <strong>1.6.0</strong>, <strong>1.7.0</strong> či
<strong>1.8.0</strong> používala verze <strong>1.9.0</strong>:</p>

<pre>
(defproject clojure9-test "0.1.0-SNAPSHOT"
  :description "Projekt, který zajistí stažení Clojure verze 1.9.0"
  :url "http://example.com/FIXME"
  :license {:name "Eclipse Public License"
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :dependencies [[org.clojure/clojure "<strong>1.9.0</strong>"]]
  :main ^:skip-aot clojure9-test.core
  :target-path "target/%s"
  :profiles {:uberjar {:aot :all}})
</pre>

<p>Následně stačí uložit novou verzi projektového souboru a na příkazové řádce
zadat příkaz pro stažení všech knihoven a balíčků, na nichž projekt závisí:</p>

<pre>
$ <strong>lein deps</strong>
&nbsp;
Retrieving org/clojure/clojure/1.9.0/clojure-1.9.0.pom from central
Retrieving org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.pom from central
Retrieving org/clojure/pom.contrib/0.2.2/pom.contrib-0.2.2.pom from central
Retrieving org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.pom from central
Retrieving org/clojure/clojure/1.9.0/clojure-1.9.0.jar from central
Retrieving org/clojure/core.specs.alpha/0.1.24/core.specs.alpha-0.1.24.jar from central
Retrieving org/clojure/spec.alpha/0.1.143/spec.alpha-0.1.143.jar from central
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Výsledek instalace</h2>

<p>Z&nbsp;vypsaných zpráv je zřejmé, že skutečně došlo ke stažení nové verze
jazyka Clojure. Standardně se interpretry Clojure ukládají do adresáře
<strong>~/.m2/repository/org/clojure/clojure</strong>, který může obsahovat i
několik verzí interpretu. To je ve skutečnosti celkem běžné, protože mnoho
knihoven má ve svém popisu (projektovém souboru) uvedenou právě nějakou starší
verzi (popravdě, vzhledem k&nbsp;množství knihoven už se dostáváme do
<i>dependency hell</i>). Podívejme se, jak struktura výše zmíněného adresáře
vypadá na počítači, který je aktivně používán pro vývoj v&nbsp;jazyce
Clojure:</p>

<pre>
$ <strong>tree ~/.m2/repository/org/clojure/clojure</strong>
&nbsp;
/home/tester/.m2/repository/org/clojure/clojure
├── 1.2.0
│   ├── clojure-1.2.0.pom
│   ├── clojure-1.2.0.pom.sha1
│   └── _maven.repositories
├── 1.2.1
│   ├── clojure-1.2.1.jar
│   ├── clojure-1.2.1.jar.sha1
│   ├── clojure-1.2.1.pom
│   ├── clojure-1.2.1.pom.sha1
│   └── _maven.repositories
├── 1.3.0
│   ├── clojure-1.3.0.pom
│   ├── clojure-1.3.0.pom.sha1
│   └── _maven.repositories
├── 1.3.0-alpha5
│   ├── clojure-1.3.0-alpha5.pom
│   ├── clojure-1.3.0-alpha5.pom.sha1
│   └── _maven.repositories
├── 1.3.0-alpha6
│   ├── clojure-1.3.0-alpha6.pom
│   ├── clojure-1.3.0-alpha6.pom.sha1
│   └── _maven.repositories
├── 1.4.0
│   ├── clojure-1.4.0.pom
│   ├── clojure-1.4.0.pom.sha1
│   └── _maven.repositories
├── 1.5.1
│   ├── clojure-1.5.1.jar
│   ├── clojure-1.5.1.jar.sha1
│   ├── clojure-1.5.1.pom
│   ├── clojure-1.5.1.pom.sha1
│   └── _maven.repositories
├── 1.6.0
│   ├── clojure-1.6.0.jar
│   ├── clojure-1.6.0.jar.sha1
│   ├── clojure-1.6.0.pom
│   ├── clojure-1.6.0.pom.sha1
│   └── _maven.repositories
├── 1.7.0
│   ├── clojure-1.7.0.jar
│   ├── clojure-1.7.0.jar.sha1
│   ├── clojure-1.7.0.pom
│   ├── clojure-1.7.0.pom.sha1
│   └── _maven.repositories
├── 1.8.0
│   ├── clojure-1.8.0.jar
│   ├── clojure-1.8.0.jar.sha1
│   ├── clojure-1.8.0.pom
│   ├── clojure-1.8.0.pom.sha1
│   └── _maven.repositories
└── 1.9.0
    ├── clojure-1.9.0.jar
    ├── clojure-1.9.0.jar.sha1
    ├── clojure-1.9.0.pom
    ├── clojure-1.9.0.pom.sha1
    └── _maven.repositories
&nbsp;
11 directories, 45 files
</pre>

<p>V&nbsp;případě Clojure verze 1.9.0 vznikl při instalaci adresář
s&nbsp;pěticí souborů, přičemž pro vývoj, ladění i spouštění programů se
používá pouze Java archiv uvedený na prvním místě:</p>

<pre>
$ <strong>ls -l ~/.m2/repository/org/clojure/clojure/1.9.0</strong>
&nbsp;
total 3628
-rw-r--r-- 1 tester tester 3688794 úno 19 21:11 clojure-1.9.0.jar
-rw-r--r-- 1 tester tester      40 úno 19 21:11 clojure-1.9.0.jar.sha1
-rw-r--r-- 1 tester tester   10055 úno 19 21:11 clojure-1.9.0.pom
-rw-r--r-- 1 tester tester      40 úno 19 21:11 clojure-1.9.0.pom.sha1
-rw-r--r-- 1 tester tester     180 úno 19 21:11 _maven.repositories
</pre>

<p>Mezi další nainstalované balíky patří <strong>core.spec.alpha</strong> a
<strong>spec.alpha</strong>:</p>

<pre>
$ <strong>tree ~/.m2/repository/org/clojure/*spec*</strong>
&nbsp;
/home/tester/.m2/repository/org/clojure/core.specs.alpha
└── 0.1.24
    ├── core.specs.alpha-0.1.24.jar
    ├── core.specs.alpha-0.1.24.jar.sha1
    ├── core.specs.alpha-0.1.24.pom
    ├── core.specs.alpha-0.1.24.pom.sha1
    └── _maven.repositories
/home/tester/.m2/repository/org/clojure/spec.alpha
└── 0.1.143
    ├── _maven.repositories
    ├── spec.alpha-0.1.143.jar
    ├── spec.alpha-0.1.143.jar.sha1
    ├── spec.alpha-0.1.143.pom
    └── spec.alpha-0.1.143.pom.sha1
&nbsp;
2 directories, 10 files
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Spuštění interaktivního REPLu</h2>

<p>Spuštění interaktivní smyčky REPL je v&nbsp;případě použití projektu
používajícího nástroj Leiningen velmi snadné. Postačuje pouze v&nbsp;adresáři
s&nbsp;projektem zadat příkaz <strong>lein repl</strong>:</p>

<pre>
$ <strong>lein repl</strong>
&nbsp;
nREPL server started on port 52784 on host 127.0.0.1 - nrepl://127.0.0.1:52784
REPL-y 0.3.5, nREPL 0.2.6
<strong>Clojure 1.9.0</strong>
OpenJDK 64-Bit Server VM 1.7.0_79-b14
    Docs: (doc function-name-here)
          (find-doc "part-of-name-here")
  Source: (source function-name-here)
 Javadoc: (javadoc java-object-or-class-here)
    Exit: Control+D or (exit) or (quit)
 Results: Stored in vars *1, *2, *3, an exception in *e
&nbsp;
clojure9-test.core=&gt;
</pre>

<p>V&nbsp;případě, že se zobrazí odlišná verze Clojure, zkontrolujte, zda
příkaz opravdu zadáváte z&nbsp;adresáře s&nbsp;projektem vytvořeným <a
href="#k05">v&nbsp;páté kapitole</a>.</p>

<p>Tato forma interaktivní smyčky REPL programátorům nabízí mnohem více
možností, než &bdquo;klasická&ldquo; minimalisticky pojatá smyčka REPL, která
je součástí interpretru Clojure. K&nbsp;dispozici je historie příkazů, lze
přistupovat ke speciálním symbolům *1, *e atd. Z&nbsp;tohoto důvodu právě tuto
smyčku použijeme v&nbsp;dalším textu při vysvětlování nových možností Clojure
1.9.0.</p>

<p><ins>Poznámka: samotný projekt je možné bez obav smazat, protože jeho
jedinou úlohou bylo nainstalovat Clojure 1.9.0 do adresáře
<strong>~/.m2</strong> a otestovat REPL.</ins></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Nový správce projektů</h2>



<p><a name="k09"></a></p>
<h2 id="k09">9. Ukázka automatického stažení závislých balíčků</h2>

<pre>
$ <strong>clj</strong>
&nbsp;
Downloading: net/mikera/core.matrix/0.62.0/core.matrix-0.62.0.pom from https://clojars.org/repo/
Downloading: net/mikera/clojure-pom/0.6.0/clojure-pom-0.6.0.pom from https://clojars.org/repo/
Downloading: net/mikera/mikera-pom/0.6.0/mikera-pom-0.6.0.pom from https://repo1.maven.org/maven2/
Downloading: org/sonatype/oss/oss-parent/9/oss-parent-9.pom from https://repo1.maven.org/maven2/
Downloading: org/clojure/tools.macro/0.1.5/tools.macro-0.1.5.pom from https://repo1.maven.org/maven2/
Downloading: net/mikera/core.matrix/0.62.0/core.matrix-0.62.0.jar from https://clojars.org/repo/
Downloading: org/clojure/tools.macro/0.1.5/tools.macro-0.1.5.jar from https://repo1.maven.org/maven2/
Clojure 1.9.0
</pre>

<pre>
(use 'clojure.core.matrix)
(use 'clojure.core.matrix.operators)
nil
user=> WARNING: * already refers to: #'clojure.core/* in namespace: user, being replaced by: #'clojure.core.matrix.operators/*
WARNING: min already refers to: #'clojure.core/min in namespace: user, being replaced by: #'clojure.core.matrix.operators/min
WARNING: - already refers to: #'clojure.core/- in namespace: user, being replaced by: #'clojure.core.matrix.operators/-
WARNING: / already refers to: #'clojure.core// in namespace: user, being replaced by: #'clojure.core.matrix.operators//
WARNING: + already refers to: #'clojure.core/+ in namespace: user, being replaced by: #'clojure.core.matrix.operators/+
WARNING: max already refers to: #'clojure.core/max in namespace: user, being replaced by: #'clojure.core.matrix.operators/max
WARNING: == already refers to: #'clojure.core/== in namespace: user, being replaced by: #'clojure.core.matrix.operators/==

(let [M (matrix [[1 2] [3 4]])
        v (matrix [1 2])]
        (pm M)
        (pm v)
        (pm (* v 2))
        (pm (mul M v))
        (pm (* M M))
        (pm (inner-product M v)))
[[1 2]
 [3 4]]
[1 2]
[2 4]
[[1 4]
 [3 8]]
[[1  4]
 [9 16]]
[5 11]
nil
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Umístění stažených knihoven</h2>

<pre>
$ <strong>tree ~/.m2/repository/net/</strong>
/home/tester/.m2/repository/net/
└── mikera
    ├── clojure-pom
    │   └── 0.6.0
    │       ├── clojure-pom-0.6.0.pom
    │       ├── clojure-pom-0.6.0.pom.sha1
    │       └── _remote.repositories
    ├── core.matrix
    │   └── 0.62.0
    │       ├── core.matrix-0.62.0.jar
    │       ├── core.matrix-0.62.0.jar.sha1
    │       ├── core.matrix-0.62.0.pom
    │       ├── core.matrix-0.62.0.pom.sha1
    │       └── _remote.repositories
    └── mikera-pom
        └── 0.6.0
            ├── mikera-pom-0.6.0.pom
            ├── mikera-pom-0.6.0.pom.sha1
            └── _remote.repositories
&nbsp;
7 directories, 11 files
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Projekt závisející na větším množství knihoven</h2>

<pre>
$ <strong>clj</strong>
Downloading: clj-time/clj-time/0.14.2/clj-time-0.14.2.pom from https://clojars.org/repo/
Downloading: joda-time/joda-time/2.9.7/joda-time-2.9.7.pom from https://repo1.maven.org/maven2/
Downloading: clj-time/clj-time/0.14.2/clj-time-0.14.2.jar from https://clojars.org/repo/
Downloading: joda-time/joda-time/2.9.7/joda-time-2.9.7.jar from https://repo1.maven.org/maven2/
Clojure 1.9.0
</pre>



<p><a name="k12"></a></p>
<h2 id="k12">12. Projekt využívající lokální knihovny</h2>



<p><a name="k13"></a></p>
<h2 id="k13">13. Nové predikáty v&nbsp;základní knihovně Clojure</h2>

<table>
<tr><th>Predikát</th><th>Význam</th></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
<tr><td></td><td></td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Otestování nových predikátů</h2>

<pre>
clojure9-test.core=&gt; <strong>(boolean? nil)</strong>
false
clojure9-test.core=&gt; <strong>(boolean? true)</strong>
true
clojure9-test.core=&gt; <strong>(boolean? false)</strong>
true
clojure9-test.core=&gt; <strong>(boolean? "Hello")</strong>
false
clojure9-test.core=&gt; <strong>(boolean? :else)</strong>
false
</pre>

<pre>
clojure9-test.core=&gt; <strong>(int? 0)</strong>
true
clojure9-test.core=&gt; <strong>(int? 42)</strong>
true
clojure9-test.core=&gt; <strong>(int? -42)</strong>
true
clojure9-test.core=&gt; <strong>(int? 0.5)</strong>
false
clojure9-test.core=&gt; <strong>(int? 1/2)</strong>
false
</pre>

<pre>
clojure9-test.core=&gt; <strong>(pos-int? 0)</strong>
false
clojure9-test.core=&gt; <strong>(pos-int? 42)</strong>
true
clojure9-test.core=&gt; <strong>(pos-int? -42)</strong>
false
</pre>

<pre>
clojure9-test.core=&gt; <strong>(neg-int? 0)</strong>
false
clojure9-test.core=&gt; <strong>(neg-int? 42)</strong>
false
clojure9-test.core=&gt; <strong>(neg-int? -42)</strong>
true
</pre>

<pre>
clojure9-test.core=&gt; <strong>(nat-int? 0)</strong>
true
clojure9-test.core=&gt; <strong>(nat-int? 42)</strong>
true
clojure9-test.core=&gt; <strong>(nat-int? -42)</strong>
false
</pre>

<pre>
clojure9-test.core=&gt; <strong>(double? 0)</strong>
false
clojure9-test.core=&gt; <strong>(double? 0.)</strong>
true
clojure9-test.core=&gt; <strong>(double? 1/2)</strong>
false
clojure9-test.core=&gt; <strong>(double? 1e10)</strong>
true
</pre>

<pre>
clojure9-test.core=&gt; <strong>(indexed? [1 2 3])</strong>
true
clojure9-test.core=&gt; <strong>(indexed? '(1 2 3))</strong>
false
clojure9-test.core=&gt; <strong>(indexed? {1 "jedna" 2 "dve" 3 "tri"})</strong>
false
clojure9-test.core=&gt; <strong>(indexed? #{1 2 3})</strong>
false
clojure9-test.core=&gt; <strong>(indexed? nil)</strong>
false
</pre>

<pre>
clojure9-test.core=&gt; <strong>(map inc [1 2 3])</strong>
(2 3 4)
clojure9-test.core=&gt; <strong>(indexed? (map inc [1 2 3]))</strong>
false
</pre>

<pre>
clojure9-test.core=&gt; <strong>(seqable? 0)</strong>
false
clojure9-test.core=&gt; <strong>(seqable? true)</strong>
false
clojure9-test.core=&gt; <strong>(seqable? false)</strong>
false
clojure9-test.core=&gt; <strong>(seqable? "string")</strong>
true
clojure9-test.core=&gt; <strong>(seqable? nil)</strong>
true
clojure9-test.core=&gt; <strong>(seqable? [1 2 3])</strong>
true
clojure9-test.core=&gt; <strong>(seqable? '(1 2 3))</strong>
true
clojure9-test.core=&gt; <strong>(seqable? {1 "jedna" 2 "dva" 3 "tri"})</strong>
true
clojure9-test.core=&gt; <strong>(seqable? #{1 2 3})</strong>
true
clojure9-test.core=&gt; <strong>(seqable? (map inc [1 2 3]))</strong>
true
</pre>

<pre>
clojure9-test.core=&gt; <strong>(any? nil)</strong>
true
clojure9-test.core=&gt; <strong>(any? true)</strong>
true
clojure9-test.core=&gt; <strong>(any? [1 2 3])</strong>
true
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Knihovna <strong>clojure.spec</strong></h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Jednoduchá ukázka použití knihovny <strong>clojure.spec</strong></h2>

<pre>
clojure9-test.core=&gt; <strong>(require '[clojure.spec.alpha :as spec])</strong>
nil
</pre>

<pre>
clojure9-test.core=&gt; <strong>(spec/def ::even? (spec/and integer? even?))</strong>
:clojure9-test.core/even?
clojure9-test.core=&gt; <strong>(spec/def ::odd? (spec/and integer? even?))</strong>
:clojure9-test.core/odd?
</pre>

<pre>
clojure9-test.core=&gt; <strong>(spec/conform ::even? 0)</strong>
0
clojure9-test.core=&gt; <strong>(spec/conform ::even? 1)</strong>
:clojure.spec.alpha/invalid
clojure9-test.core=&gt; <strong>(spec/conform ::even? 2)</strong>
2
</pre>

<pre>
clojure9-test.core=&gt; <strong>(spec/explain even? 1)</strong>
val: 1 fails predicate: :clojure.spec.alpha/unknown
nil
</pre>

<pre>
clojure9-test.core=&gt; <strong>(spec/def ::not-zero? (spec/or :positive-part pos-int? :negative-part neg-int?))</strong>
:clojure9-test.core/not-zero?
</pre>

<pre>
clojure9-test.core=&gt; <strong>(spec/conform ::not-zero? 0)</strong>
:clojure.spec.alpha/invalid
clojure9-test.core=&gt; <strong>(spec/conform ::not-zero? 1)</strong>
[:positive-part 1]
clojure9-test.core=&gt; <strong>(spec/conform ::not-zero? -2)</strong>
[:negative-part -2]
</pre>

<pre>
clojure9-test.core=&gt; <strong>(spec/conform ::not-zero? 0)</strong>
:clojure.spec.alpha/invalid
clojure9-test.core=&gt; <strong>(spec/explain ::not-zero? 0)</strong>
val: 0 fails spec: :clojure9-test.core/not-zero? at: [:positive-part] predicate: pos-int?
val: 0 fails spec: :clojure9-test.core/not-zero? at: [:negative-part] predicate: neg-int?
nil
</pre>



<p><a name="k18"></a></p>
<h2 id="k18">18. Repositář s&nbsp;demonstračními příklady</h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na předchozí části tohoto seriálu</h2>

<ol>

<li>Clojure  1: Úvod<br />
<a href="http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm/">http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm/</a>
</li>

<li>Clojure  2: Symboly, kolekce atd.<br />
<a href="http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm-2-cast/">http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm-2-cast/</a>
</li>

<li>Clojure  3: Funkcionální programování<br />
<a href="http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm-3-cast-funkcionalni-programovani/">http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm-3-cast-funkcionalni-programovani/</a>
</li>

<li>Clojure  4: Kolekce, sekvence a lazy sekvence<br />
<a href="http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm-4-cast-kolekce-sekvence-a-lazy-sekvence/">http://www.root.cz/clanky/clojure-aneb-jazyk-umoznujici-tvorbu-bezpecnych-vicevlaknovych-aplikaci-pro-jvm-4-cast-kolekce-sekvence-a-lazy-sekvence/</a>
</li>

<li>Clojure  5: Sekvence, lazy sekvence a paralelní programy<br />
<a href="http://www.root.cz/clanky/clojure-a-bezpecne-aplikace-pro-jvm-sekvence-lazy-sekvence-a-paralelni-programy/">http://www.root.cz/clanky/clojure-a-bezpecne-aplikace-pro-jvm-sekvence-lazy-sekvence-a-paralelni-programy/</a>
</li>

<li>Clojure  6: Podpora pro paralelní programování<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-6-futures-nejsou-jen-financni-derivaty/">http://www.root.cz/clanky/programovaci-jazyk-clojure-6-futures-nejsou-jen-financni-derivaty/</a>
</li>

<li>Clojure  7: Další funkce pro paralelní programování<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-7-dalsi-podpurne-prostredky-pro-paralelni-programovani/">http://www.root.cz/clanky/programovaci-jazyk-clojure-7-dalsi-podpurne-prostredky-pro-paralelni-programovani/</a>
</li>

<li>Clojure  8: Identity, stavy, neměnné hodnoty a reference<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-8-identity-stavy-nemenne-hodnoty-a-referencni-typy/">http://www.root.cz/clanky/programovaci-jazyk-clojure-8-identity-stavy-nemenne-hodnoty-a-referencni-typy/</a>
</li>

<li>Clojure  9: Validátory, pozorovatelé a kooperace s Javou<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-9-validatory-pozorovatele-a-kooperace-mezi-clojure-a-javou/">http://www.root.cz/clanky/programovaci-jazyk-clojure-9-validatory-pozorovatele-a-kooperace-mezi-clojure-a-javou/</a>
</li>

<li>Clojure 10: Kooperace mezi Clojure a Javou<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-10-kooperace-mezi-clojure-a-javou-pokracovani/">http://www.root.cz/clanky/programovaci-jazyk-clojure-10-kooperace-mezi-clojure-a-javou-pokracovani/</a>
</li>

<li>Clojure 11: Generátorová notace seznamu/list comprehension<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-11-generatorova-notace-seznamu-list-comprehension/">http://www.root.cz/clanky/programovaci-jazyk-clojure-11-generatorova-notace-seznamu-list-comprehension/</a>
</li>

<li>Clojure 12: Překlad programů z Clojure do bajtkódu JVM I:<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-12-preklad-programu-z-clojure-do-bajtkodu-jvm/">http://www.root.cz/clanky/programovaci-jazyk-clojure-12-preklad-programu-z-clojure-do-bajtkodu-jvm/</a>
</li>

<li>Clojure 13: Překlad programů z Clojure do bajtkódu JVM II:<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-13-preklad-programu-z-clojure-do-bajtkodu-jvm-pokracovani/">http://www.root.cz/clanky/programovaci-jazyk-clojure-13-preklad-programu-z-clojure-do-bajtkodu-jvm-pokracovani/</a>
</li>

<li>Clojure 14: Základy práce se systémem maker<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-14-zaklady-prace-se-systemem-maker/">http://www.root.cz/clanky/programovaci-jazyk-clojure-14-zaklady-prace-se-systemem-maker/</a>
</li>

<li>Clojure 15: Tvorba uživatelských maker<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-15-tvorba-uzivatelskych-maker/">http://www.root.cz/clanky/programovaci-jazyk-clojure-15-tvorba-uzivatelskych-maker/</a>
</li>

<li>Clojure 16: Složitější uživatelská makra<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-16-slozitejsi-uzivatelska-makra/">http://www.root.cz/clanky/programovaci-jazyk-clojure-16-slozitejsi-uzivatelska-makra/</a>
</li>

<li>Clojure 17: Využití standardních maker v praxi<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-17-vyuziti-standardnich-maker-v-praxi/">http://www.root.cz/clanky/programovaci-jazyk-clojure-17-vyuziti-standardnich-maker-v-praxi/</a>
</li>

<li>Clojure 18: Základní techniky optimalizace aplikací<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-18-zakladni-techniky-optimalizace-aplikaci/">http://www.root.cz/clanky/programovaci-jazyk-clojure-18-zakladni-techniky-optimalizace-aplikaci/</a>
</li>

<li>Clojure 19: Vývojová prostředí pro Clojure<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-19-vyvojova-prostredi-pro-clojure/">http://www.root.cz/clanky/programovaci-jazyk-clojure-19-vyvojova-prostredi-pro-clojure/</a>
</li>

<li>Clojure 20: Vývojová prostředí pro Clojure (Vimu s REPL)<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-20-vyvojova-prostredi-pro-clojure-integrace-vimu-s-repl/">http://www.root.cz/clanky/programovaci-jazyk-clojure-20-vyvojova-prostredi-pro-clojure-integrace-vimu-s-repl/</a>
</li>

<li>Clojure 21: ClojureScript aneb překlad Clojure do JS<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-21-clojurescript-aneb-preklad-clojure-do-javascriptu/">http://www.root.cz/clanky/programovaci-jazyk-clojure-21-clojurescript-aneb-preklad-clojure-do-javascriptu/</a>
</li>

<li>Leiningen: nástroj pro správu projektů napsaných v Clojure<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure/</a>
</li>

<li>Leiningen: nástroj pro správu projektů napsaných v Clojure (2)<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-2/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-2/</a>
</li>

<li>Leiningen: nástroj pro správu projektů napsaných v Clojure (3)<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-3/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-3/</a>
</li>

<li>Leiningen: nástroj pro správu projektů napsaných v Clojure (4)<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-4/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-4/</a>
</li>

<li>Leiningen: nástroj pro správu projektů napsaných v Clojure (5)<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-5/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-5/</a>
</li>

<li>Leiningen: nástroj pro správu projektů napsaných v Clojure (6)<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-6/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-6/</a>
</li>

<li>Programovací jazyk Clojure a databáze (1.část)<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-a-databaze-1-cast/">http://www.root.cz/clanky/programovaci-jazyk-clojure-a-databaze-1-cast/</a>
</li>

<li>Pluginy pro Leiningen<br />
<a href="http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-pluginy-pro-leiningen/">http://www.root.cz/clanky/leiningen-nastroj-pro-spravu-projektu-napsanych-v-clojure-pluginy-pro-leiningen/</a>
</li>

<li>Programovací jazyk Clojure a knihovny pro práci s vektory a maticemi<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-a-knihovny-pro-praci-s-vektory-a-maticemi/">http://www.root.cz/clanky/programovaci-jazyk-clojure-a-knihovny-pro-praci-s-vektory-a-maticemi/</a>
</li>

<li>Programovací jazyk Clojure a knihovny pro práci s vektory a maticemi (2)<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-a-knihovny-pro-praci-s-vektory-a-maticemi-2/">http://www.root.cz/clanky/programovaci-jazyk-clojure-a-knihovny-pro-praci-s-vektory-a-maticemi-2/</a>
</li>

<li>Programovací jazyk Clojure: syntéza procedurálních textur s využitím knihovny Clisk<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-synteza-proceduralnich-textur-s-vyuzitim-knihovny-clisk/">http://www.root.cz/clanky/programovaci-jazyk-clojure-synteza-proceduralnich-textur-s-vyuzitim-knihovny-clisk/</a>
</li>

<li>Programovací jazyk Clojure: syntéza procedurálních textur s využitím knihovny Clisk (2)<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-synteza-proceduralnich-textur-s-vyuzitim-knihovny-clisk-2/">http://www.root.cz/clanky/programovaci-jazyk-clojure-synteza-proceduralnich-textur-s-vyuzitim-knihovny-clisk-2/</a>
</li>

<li>Seesaw: knihovna pro snadnou tvorbu GUI v jazyce Clojure<br />
<a href="http://www.root.cz/clanky/seesaw-knihovna-pro-snadnou-tvorbu-gui-v-jazyce-clojure/">http://www.root.cz/clanky/seesaw-knihovna-pro-snadnou-tvorbu-gui-v-jazyce-clojure/</a>
</li>

<li>Seesaw: knihovna pro snadnou tvorbu GUI v jazyce Clojure (2)<br />
<a href="http://www.root.cz/clanky/seesaw-knihovna-pro-snadnou-tvorbu-gui-v-jazyce-clojure-2/">http://www.root.cz/clanky/seesaw-knihovna-pro-snadnou-tvorbu-gui-v-jazyce-clojure-2/</a>
</li>

<li>Seesaw: knihovna pro snadnou tvorbu GUI v jazyce Clojure (3)<br />
<a href="http://www.root.cz/clanky/seesaw-knihovna-pro-snadnou-tvorbu-gui-v-jazyce-clojure-3/">http://www.root.cz/clanky/seesaw-knihovna-pro-snadnou-tvorbu-gui-v-jazyce-clojure-3/</a>
</li>

<li>Programovací jazyk Clojure a práce s Gitem<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-a-prace-s-gitem/">http://www.root.cz/clanky/programovaci-jazyk-clojure-a-prace-s-gitem/</a>
</li>

<li>Programovací jazyk Clojure: syntéza procedurálních textur s využitím knihovny Clisk (dokončení)<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-synteza-proceduralnich-textur-s-vyuzitim-knihovny-clisk-dokonceni/">http://www.root.cz/clanky/programovaci-jazyk-clojure-synteza-proceduralnich-textur-s-vyuzitim-knihovny-clisk-dokonceni/</a>
</li>

<li>Programovací jazyk Clojure a práce s Gitem (2)<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-a-prace-s-gitem-2/">http://www.root.cz/clanky/programovaci-jazyk-clojure-a-prace-s-gitem-2/</a>
</li>

<li>Programovací jazyk Clojure – triky při práci s řetězci<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-triky-pri-praci-s-retezci/">http://www.root.cz/clanky/programovaci-jazyk-clojure-triky-pri-praci-s-retezci/</a>
</li>

<li>Programovací jazyk Clojure – triky při práci s kolekcemi<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-triky-pri-praci-s-kolekcemi/">http://www.root.cz/clanky/programovaci-jazyk-clojure-triky-pri-praci-s-kolekcemi/</a>
</li>

<li>Programovací jazyk Clojure – práce s mapami a množinami<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-prace-s-mapami-a-mnozinami/">http://www.root.cz/clanky/programovaci-jazyk-clojure-prace-s-mapami-a-mnozinami/</a>
</li>

<li>Programovací jazyk Clojure – základy zpracování XML<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-zaklady-zpracovani-xml/">http://www.root.cz/clanky/programovaci-jazyk-clojure-zaklady-zpracovani-xml/</a>
</li>

<li>Programovací jazyk Clojure – testování s využitím knihovny Expectations<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-testovani-s-vyuzitim-knihovny-expectations/">http://www.root.cz/clanky/programovaci-jazyk-clojure-testovani-s-vyuzitim-knihovny-expectations/</a>
</li>

<li>Programovací jazyk Clojure – některé užitečné triky použitelné (nejenom) v&nbsp;testech<br />
<a href="http://www.root.cz/clanky/programovaci-jazyk-clojure-nektere-uzitecne-triky-pouzitelne-nejenom-v-testech/">http://www.root.cz/clanky/programovaci-jazyk-clojure-nektere-uzitecne-triky-pouzitelne-nejenom-v-testech/</a>
</li>

<li>Enlive – výkonný šablonovací systém pro jazyk Clojure<br/>
<a href="http://www.root.cz/clanky/enlive-vykonny-sablonovaci-system-pro-jazyk-clojure/">http://www.root.cz/clanky/enlive-vykonny-sablonovaci-system-pro-jazyk-clojure/</a>
</li>

<li>Nástroj Leiningen a programovací jazyk Clojure: tvorba vlastních knihoven pro veřejný repositář Clojars<br />
<a href="http://www.root.cz/clanky/nastroj-leiningen-a-programovaci-jazyk-clojure-tvorba-vlastnich-knihoven-pro-verejny-repositar-clojars/">http://www.root.cz/clanky/nastroj-leiningen-a-programovaci-jazyk-clojure-tvorba-vlastnich-knihoven-pro-verejny-repositar-clojars/</a>
</li>

<li>Novinky v Clojure verze 1.8.0<br />
<a href="http://www.root.cz/clanky/novinky-v-clojure-verze-1-8-0/">http://www.root.cz/clanky/novinky-v-clojure-verze-1-8-0/</a>
</li>

<li>Asynchronní programování v&nbsp;Clojure s&nbsp;využitím knihovny core.async<br />
<a href="http://www.root.cz/clanky/asynchronni-programovani-v-clojure-s-vyuzitim-knihovny-core-async/">http://www.root.cz/clanky/asynchronni-programovani-v-clojure-s-vyuzitim-knihovny-core-async/</a>
</li>

<li>Asynchronní programování v&nbsp;Clojure s&nbsp;využitím knihovny core.async (pokračování)<br />
<a href="http://www.root.cz/clanky/asynchronni-programovani-v-clojure-s-vyuzitim-knihovny-core-async-pokracovani/">http://www.root.cz/clanky/asynchronni-programovani-v-clojure-s-vyuzitim-knihovny-core-async-pokracovani/</a>
</li>

<li>Asynchronní programování v Clojure s využitím knihovny core.async (dokončení)<br />
<a href="http://www.root.cz/clanky/asynchronni-programovani-v-clojure-s-vyuzitim-knihovny-core-async-dokonceni/">http://www.root.cz/clanky/asynchronni-programovani-v-clojure-s-vyuzitim-knihovny-core-async-dokonceni/</a>
</li>

<li>Vytváříme IRC bota v programovacím jazyce Clojure<br />
<a href="http://www.root.cz/clanky/vytvarime-irc-bota-v-programovacim-jazyce-clojure/">http://www.root.cz/clanky/vytvarime-irc-bota-v-programovacim-jazyce-clojure/</a>
</li>

<li>Gorilla REPL: interaktivní prostředí pro programovací jazyk Clojure<br />
<a href="https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/">https://www.root.cz/clanky/gorilla-repl-interaktivni-prostredi-pro-programovaci-jazyk-clojure/</a>
</li>

<li>Multimetody v Clojure aneb polymorfismus bez použití OOP<br />
<a href="https://www.root.cz/clanky/multimetody-v-clojure-aneb-polymorfismus-bez-pouziti-oop/">https://www.root.cz/clanky/multimetody-v-clojure-aneb-polymorfismus-bez-pouziti-oop/</a>
</li>

<li>Práce s externími Java archivy v programovacím jazyku Clojure<br />
<a href="https://www.root.cz/clanky/prace-s-externimi-java-archivy-v-programovacim-jazyku-clojure/">https://www.root.cz/clanky/prace-s-externimi-java-archivy-v-programovacim-jazyku-clojure/</a>
</li>

<li>Pixie: lehký skriptovací jazyk s „kouzelnými“ schopnostmi<br />
<a href="https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/">https://www.root.cz/clanky/pixie-lehky-skriptovaci-jazyk-s-kouzelnymi-schopnostmi/</a>
</li>

<li>Programovací jazyk Pixie: funkce ze základní knihovny a použití FFI<br />
<a href="https://www.root.cz/clanky/programovaci-jazyk-pixie-funkce-ze-zakladni-knihovny-a-pouziti-ffi/">https://www.root.cz/clanky/programovaci-jazyk-pixie-funkce-ze-zakladni-knihovny-a-pouziti-ffi/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Zip archiv s&nbsp;Clojure 1.9.0<br />
<a href="http://repo1.maven.org/maven2/org/clojure/clojure/1.9.0/clojure-1.9.0.zip">http://repo1.maven.org/maven2/org/clojure/clojure/1.9.0/clojure-1.9.0.zip</a>
</li>

<li>Clojure 1.9 is now available<br />
<a href="https://clojure.org/news/2017/12/08/clojure19">https://clojure.org/news/2017/12/08/clojure19</a>
</li>

<li>Deps and CLI Guide<br />
<a href="https://clojure.org/guides/deps_and_cli">https://clojure.org/guides/deps_and_cli</a>
</li>

<li>Changes to Clojure in Version 1.9<br />
<a href="https://github.com/clojure/clojure/blob/master/changes.md">https://github.com/clojure/clojure/blob/master/changes.md</a>
</li>

<li>clojure.spec - Rationale and Overview<br />
<a href="https://clojure.org/about/spec">https://clojure.org/about/spec</a>
</li>

<li>Zip archiv s&nbsp;Clojure 1.8.0<br />
<a href="http://repo1.maven.org/maven2/org/clojure/clojure/1.8.0/clojure-1.8.0.zip">http://repo1.maven.org/maven2/org/clojure/clojure/1.8.0/clojure-1.8.0.zip</a>
</li>

<li>Clojure 1.8 is now available<br />
<a href="http://clojure.org/news/2016/01/19/clojure18">http://clojure.org/news/2016/01/19/clojure18</a>
</li>

<li>Socket Server REPL<br />
<a href="http://dev.clojure.org/display/design/Socket+Server+REPL">http://dev.clojure.org/display/design/Socket+Server+REPL</a>
</li>

<li>CLJ-1671: Clojure socket server<br />
<a href="http://dev.clojure.org/jira/browse/CLJ-1671">http://dev.clojure.org/jira/browse/CLJ-1671</a>
</li>

<li>CLJ-1449: Add clojure.string functions for portability to ClojureScript<br />
<a href="http://dev.clojure.org/jira/browse/CLJ-1449">http://dev.clojure.org/jira/browse/CLJ-1449</a>
</li>

<li>Launching a Socket Server<br />
<a href="http://clojure.org/reference/repl_and_main#_launching_a_socket_server">http://clojure.org/reference/repl_and_main#_launching_a_socket_server</a>
</li>

<li>API for clojure.string<br />
<a href="http://clojure.github.io/clojure/branch-master/clojure.string-api.html">http://clojure.github.io/clojure/branch-master/clojure.string-api.html</a>
</li>

<li>Clojars:<br />
<a href="https://clojars.org/">https://clojars.org/</a>
</li>

<li>Seznam knihoven na Clojars:<br />
<a href="https://clojars.org/projects">https://clojars.org/projects</a>
</li>

<li>Clojure Cookbook: Templating HTML with Enlive<br />
<a href="https://github.com/clojure-cookbook/clojure-cookbook/blob/master/07_webapps/7-11_enlive.asciidoc">https://github.com/clojure-cookbook/clojure-cookbook/blob/master/07_webapps/7-11_enlive.asciidoc</a>
</li>

<li>An Introduction to Enlive<br />
<a href="https://github.com/swannodette/enlive-tutorial/">https://github.com/swannodette/enlive-tutorial/</a>
</li>

<li>Enlive na GitHubu<br />
<a href="https://github.com/cgrand/enlive">https://github.com/cgrand/enlive</a>
</li>

<li>Expectations: příklady atd.<br />
<a href="http://jayfields.com/expectations/">http://jayfields.com/expectations/</a>
</li>

<li>Expectations na GitHubu<br />
<a href="https://github.com/jaycfields/expectations">https://github.com/jaycfields/expectations</a>
</li>

<li>Lein-expectations na GitHubu<br />
<a href="https://github.com/gar3thjon3s/lein-expectations">https://github.com/gar3thjon3s/lein-expectations</a>
</li>

<li>Testing Clojure With Expectations<br />
<a href="https://semaphoreci.com/blog/2014/09/23/testing-clojure-with-expectations.html">https://semaphoreci.com/blog/2014/09/23/testing-clojure-with-expectations.html</a>
</li>

<li>Clojure testing TDD/BDD libraries: clojure.test vs Midje vs Expectations vs Speclj<br />
<a href="https://www.reddit.com/r/Clojure/comments/1viilt/clojure_testing_tddbdd_libraries_clojuretest_vs/">https://www.reddit.com/r/Clojure/comments/1viilt/clojure_testing_tddbdd_libraries_clojuretest_vs/</a>
</li>

<li>Testing: One assertion per test<br />
<a href="http://blog.jayfields.com/2007/06/testing-one-assertion-per-test.html">http://blog.jayfields.com/2007/06/testing-one-assertion-per-test.html</a>
</li>

<li>Rewriting Your Test Suite in Clojure in 24 hours<br />
<a href="http://blog.circleci.com/rewriting-your-test-suite-in-clojure-in-24-hours/">http://blog.circleci.com/rewriting-your-test-suite-in-clojure-in-24-hours/</a>
</li>

<li>Clojure doc: zipper<br />
<a href="http://clojuredocs.org/clojure.zip/zipper">http://clojuredocs.org/clojure.zip/zipper</a>
</li>

<li>Clojure doc: parse<br />
<a href="http://clojuredocs.org/clojure.xml/parse">http://clojuredocs.org/clojure.xml/parse</a>
</li>

<li>Clojure doc: xml-zip<br />
<a href="http://clojuredocs.org/clojure.zip/xml-zip">http://clojuredocs.org/clojure.zip/xml-zip</a>
</li>

<li>Clojure doc: xml-seq<br />
<a href="http://clojuredocs.org/clojure.core/xml-seq">http://clojuredocs.org/clojure.core/xml-seq</a>
</li>

<li>Parsing XML in Clojure<br />
<a href="https://github.com/clojuredocs/guides">https://github.com/clojuredocs/guides</a>
</li>

<li>Clojure Zipper Over Nested Vector<br />
<a href="https://vitalyper.wordpress.com/2010/11/23/clojure-zipper-over-nested-vector/">https://vitalyper.wordpress.com/2010/11/23/clojure-zipper-over-nested-vector/</a>
</li>

<li>Understanding Clojure's PersistentVector implementation<br />
<a href="http://blog.higher-order.net/2009/02/01/understanding-clojures-persistentvector-implementation">http://blog.higher-order.net/2009/02/01/understanding-clojures-persistentvector-implementation</a>
</li>

<li>Understanding Clojure's PersistentHashMap (deftwice...)<br />
<a href="http://blog.higher-order.net/2009/09/08/understanding-clojures-persistenthashmap-deftwice.html">http://blog.higher-order.net/2009/09/08/understanding-clojures-persistenthashmap-deftwice.html</a>
</li>

<li>Assoc and Clojure's PersistentHashMap: part ii<br />
<a href="http://blog.higher-order.net/2010/08/16/assoc-and-clojures-persistenthashmap-part-ii.html">http://blog.higher-order.net/2010/08/16/assoc-and-clojures-persistenthashmap-part-ii.html</a>
</li>

<li>Ideal Hashtrees (paper)<br />
<a href="http://lampwww.epfl.ch/papers/idealhashtrees.pdf">http://lampwww.epfl.ch/papers/idealhashtrees.pdf</a>
</li>

<li>Clojure home page<br />
<a href="http://clojure.org/">http://clojure.org/</a>
</li>

<li>Clojure (downloads)<br />
<a href="http://clojure.org/downloads">http://clojure.org/downloads</a>
</li>

<li>Clojure Sequences<br />
<a href="http://clojure.org/sequences">http://clojure.org/sequences</a>
</li>

<li>Clojure Data Structures<br />
<a href="http://clojure.org/data_structures">http://clojure.org/data_structures</a>
</li>

<li>The Structure and Interpretation of Computer Programs: 2.2.1  Representing Sequences<br />
<a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-15.html#%_sec_2.2.1">http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-15.html#%_sec_2.2.1</a>
</li>

<li>The Structure and Interpretation of Computer Programs: 3.3.1  Mutable List Structure<br />
<a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_sec_3.3.1">http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-22.html#%_sec_3.3.1</a>
</li>

<li>Clojure - Functional Programming for the JVM<br />
<a href="http://java.ociweb.com/mark/clojure/article.html">http://java.ociweb.com/mark/clojure/article.html</a>
</li>

<li>Clojure quick reference<br />
<a href="http://faustus.webatu.com/clj-quick-ref.html">http://faustus.webatu.com/clj-quick-ref.html</a>
</li>

<li>4Clojure<br />
<a href="http://www.4clojure.com/">http://www.4clojure.com/</a>
</li>

<li>ClojureDoc (rozcestník s&nbsp;dokumentací jazyka Clojure)<br />
<a href="http://clojuredocs.org/">http://clojuredocs.org/</a>
</li>

<li>Clojure (na Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Clojure">http://en.wikipedia.org/wiki/Clojure</a>
</li>

<li>Clojure (na Wikipedia CS)<br />
<a href="http://cs.wikipedia.org/wiki/Clojure">http://cs.wikipedia.org/wiki/Clojure</a>
</li>

<li>SICP (The Structure and Interpretation of Computer Programs)<br />
<a href="http://mitpress.mit.edu/sicp/">http://mitpress.mit.edu/sicp/</a>
</li>

<li>Pure function<br />
<a href="http://en.wikipedia.org/wiki/Pure_function">http://en.wikipedia.org/wiki/Pure_function</a>
</li>

<li>Funkcionální programování<br />
<a href="http://cs.wikipedia.org/wiki/Funkcionální_programování">http://cs.wikipedia.org/wiki/Funkcionální_programování</a>
</li>

<li>Čistě funkcionální (datové struktury, jazyky, programování)<br />
<a href="http://cs.wikipedia.org/wiki/Čistě_funkcionální">http://cs.wikipedia.org/wiki/Čistě_funkcionální</a>
</li>

<li>Clojure Macro Tutorial (Part I, Getting the Compiler to Write Your Code For You)<br />
<a href="http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-i-getting.html">http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-i-getting.html</a>
</li>

<li>Clojure Macro Tutorial (Part II: The Compiler Strikes Back)<br />
<a href="http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-compiler.html">http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-compiler.html</a>
</li>

<li>Clojure Macro Tutorial (Part III: Syntax Quote)<br />
<a href="http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-syntax.html">http://www.learningclojure.com/2010/09/clojure-macro-tutorial-part-ii-syntax.html</a>
</li>

<li>Tech behind Tech: Clojure Macros Simplified<br />
<a href="http://techbehindtech.com/2010/09/28/clojure-macros-simplified/">http://techbehindtech.com/2010/09/28/clojure-macros-simplified/</a>
</li>

<li>Fatvat - Exploring functional programming: Clojure Macros<br />
<a href="http://www.fatvat.co.uk/2009/02/clojure-macros.html">http://www.fatvat.co.uk/2009/02/clojure-macros.html</a>
</li>

<li>Eulerovo číslo<br />
<a href="http://cs.wikipedia.org/wiki/Eulerovo_číslo">http://cs.wikipedia.org/wiki/Eulerovo_číslo</a>
</li>

<li>List comprehension<br />
<a href="http://en.wikipedia.org/wiki/List_comprehension">http://en.wikipedia.org/wiki/List_comprehension</a>
</li>

<li>List Comprehensions in Clojure<br />
<a href="http://asymmetrical-view.com/2008/11/18/list-comprehensions-in-clojure.html">http://asymmetrical-view.com/2008/11/18/list-comprehensions-in-clojure.html</a>
</li>

<li>Clojure Programming Concepts: List Comprehension<br />
<a href="http://en.wikibooks.org/wiki/Clojure_Programming/Concepts#List_Comprehension">http://en.wikibooks.org/wiki/Clojure_Programming/Concepts#List_Comprehension</a>
</li>

<li>Clojure core API: for macro<br />
<a href="http://clojure.github.com/clojure/clojure.core-api.html#clojure.core/for">http://clojure.github.com/clojure/clojure.core-api.html#clojure.core/for</a>
</li>

<li>cirrus machina - The Clojure for macro<br />
<a href="http://www.cirrusmachina.com/blog/comment/the-clojure-for-macro/">http://www.cirrusmachina.com/blog/comment/the-clojure-for-macro/</a>
</li>

<li>Riastradh's Lisp Style Rules<br />
<a href="http://mumble.net/~campbell/scheme/style.txt">http://mumble.net/~campbell/scheme/style.txt</a>
</li>

<li>Dynamic Languages Strike Back<br />
<a href="http://steve-yegge.blogspot.cz/2008/05/dynamic-languages-strike-back.html">http://steve-yegge.blogspot.cz/2008/05/dynamic-languages-strike-back.html</a>
</li>

<li>Scripting: Higher Level Programming for the 21st Century<br />
<a href="http://www.tcl.tk/doc/scripting.html">http://www.tcl.tk/doc/scripting.html</a>
</li>

<li>Java Virtual Machine Support for Non-Java Languages<br />
<a href="http://docs.oracle.com/javase/7/docs/technotes/guides/vm/multiple-language-support.html">http://docs.oracle.com/javase/7/docs/technotes/guides/vm/multiple-language-support.html</a>
</li>

<li>Třída java.lang.String<br />
<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html">http://docs.oracle.com/javase/7/docs/api/java/lang/String.html</a>
</li>

<li>Třída java.lang.StringBuffer<br />
<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html">http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html</a>
</li>

<li>Třída java.lang.StringBuilder<br />
<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html">http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html</a>
</li>

<li>StringBuffer versus String<br />
<a href="http://www.javaworld.com/article/2076072/build-ci-sdlc/stringbuffer-versus-string.html">http://www.javaworld.com/article/2076072/build-ci-sdlc/stringbuffer-versus-string.html</a>
</li>

<li>Threading macro (dokumentace k&nbsp;jazyku Clojure)<br />
<a href="https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/-&gt;">https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/-&gt;</a>
</li>

<li>Understanding the Clojure -&gt; macro<br />
<a href="http://blog.fogus.me/2009/09/04/understanding-the-clojure-macro/">http://blog.fogus.me/2009/09/04/understanding-the-clojure-macro/</a>
</li>

<li>clojure.inspector<br />
<a href="http://clojure.github.io/clojure/clojure.inspector-api.html">http://clojure.github.io/clojure/clojure.inspector-api.html</a>
</li>

<li>The Clojure Toolbox<br />
<a href="http://www.clojure-toolbox.com/">http://www.clojure-toolbox.com/</a>
</li>

<li>Unit Testing in Clojure<br />
<a href="http://nakkaya.com/2009/11/18/unit-testing-in-clojure/">http://nakkaya.com/2009/11/18/unit-testing-in-clojure/</a>
</li>

<li>Testing in Clojure (Part-1: Unit testing)<br />
<a href="http://blog.knoldus.com/2014/03/22/testing-in-clojure-part-1-unit-testing/">http://blog.knoldus.com/2014/03/22/testing-in-clojure-part-1-unit-testing/</a>
</li>

<li>API for clojure.test - Clojure v1.6 (stable)<br />
<a href="https://clojure.github.io/clojure/clojure.test-api.html">https://clojure.github.io/clojure/clojure.test-api.html</a>
</li>

<li>Leiningen: úvodní stránka<br />
<a href="http://leiningen.org/">http://leiningen.org/</a>
</li>

<li>Leiningen: Git repository<br />
<a href="https://github.com/technomancy/leiningen">https://github.com/technomancy/leiningen</a>
</li>

<li>leiningen-win-installer<br />
<a href="http://leiningen-win-installer.djpowell.net/">http://leiningen-win-installer.djpowell.net/</a>
</li>

<li>Clojure.org: Vars and the Global Environment<br />
<a href="http://clojure.org/Vars">http://clojure.org/Vars</a>
</li>

<li>Clojure.org: Refs and Transactions<br />
<a href="http://clojure.org/Refs">http://clojure.org/Refs</a>
</li>

<li>Clojure.org: Atoms<br />
<a href="http://clojure.org/Atoms">http://clojure.org/Atoms</a>
</li>

<li>Clojure.org: Agents as Asynchronous Actions<br />
<a href="http://clojure.org/agents">http://clojure.org/agents</a>
</li>

<li>Transient Data Structures
<a href="http://clojure.org/transients">http://clojure.org/transients</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2018</small></p>
</body>
</html>

