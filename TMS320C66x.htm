<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Digitální signálové procesory TMS320C66x: výpočetní výkon na prvním místě</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Digitální signálové procesory TMS320C66x: výpočetní výkon na prvním místě</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Mezi nejvýkonnější digitální signálové procesory patří čipy řady TMS320C66x (zkráceně C66x), konkrétně pak obvody C6678 vybavené osmi DSP jádry, které společně dosahují výpočetního výkonu až 358 GMAC nebo 179 GFLOPS. Dnes se seznámíme se základními vlastnostmi těchto procesorů.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Digitální signálové procesory TMS320C66x: výpočetní výkon na prvním místě</a></p>
<p><a href="#k02">2. Základní parametry čipů řady TMS320C66x</a></p>
<p><a href="#k03">3. Interní architektura čipů C6678</a></p>
<p><a href="#k04">4. Přepínač TeraNet</a></p>
<p><a href="#k05">5. Paměťový subsystém řady TMS320C66x</a></p>
<p><a href="#k06">6. Multicore Navigator</a></p>
<p><a href="#k07">7. Jádra C66x a jejich podpůrné moduly</a></p>
<p><a href="#k08">8. Funkční jednotky</a></p>
<p><a href="#k09">9. Pracovní registry, řídicí registry a akumulátory</a></p>
<p><a href="#k10">10. Kooperace mezi jednotkami (datapath) A a B</a></p>
<p><a href="#k11">11. Vektorové (SIMD) operace</a></p>
<p><a href="#k12">12. Násobičky v&nbsp;jednotkách .M1 a .M2</a></p>
<p><a href="#k13">13. Výkonové rozdíly mezi jádry TMS320C674x a TMS320C66x</a></p>
<p><a href="#k14">14. Operace s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou</a></p>
<p><a href="#k15">*** 15. Instrukční sada jader TMS320C66x</a></p>
<p><a href="#k16">16. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Digitální signálové procesory TMS320C66x: výpočetní výkon na prvním místě</h2>

<p>S&nbsp;dnes již velmi rozsáhlou rodinou digitálních signálových procesorů TI
TMS320C6x jsme se již <a
href="https://www.root.cz/serialy/co-se-deje-v-pocitaci/">v&nbsp;tomto
seriálu</a> setkali, a to dokonce několikrát. Připomeňme si, že v&nbsp;této
rodině nalezneme čipy určené pro různé aplikační oblasti. Základní rozdělení
můžeme provést na čipy, které dokážou primárně zpracovávat celočíselná data
popř.&nbsp;data s&nbsp;pevnou řádovou čárkou (<i>FX &ndash; fixed point</i>), a
na čipy, které naopak zpracovávají hodnoty s&nbsp;plovoucí řádovou čárkou
(<i>FP &ndash; floating point</i>); samozřejmě existují i kombinace,
tj.&nbsp;čipy určené pro FX i FP operace. O jaké typy DSP se jedná, se dá
poměrně jednoduše zjistit pohledem na číslo, které se nachází na devátém místě
označení čipu. V&nbsp;následující tabulce jsou vypsáni hlavní zástupci celé
rodiny TMS320C6x:</p>

<table>
<tr><th>Označení</th><th>Zkráceno</th><th>Fixed point</th><th>Floating point</th><th>Poznámka</th></tr>
<tr><td>TMS320C62x</td><td>C62</td><td>&#x2713;</td><td>&times;</td><td>základní model, z&nbsp;něhož se postupně vyvinuly další řady</td></tr>
<tr><td>TMS320C67x</td><td>C67</td><td>&times; </td><td>&#x2713;</td><td>na úrovni zdrojového kódu kompatibilní s&nbsp;prvním čipem</td></tr>
<tr><td>TMS320C64x</td><td>C64</td><td>&#x2713;</td><td>&times;</td><td>na úrovni zdrojového kódu kompatibilní s&nbsp;prvním čipem</td></tr>
<tr><td>TMS320C67x+</td><td>C67+</td><td>&times; </td><td>&#x2713;</td><td>vylepšení čipu TMS320C67x</td></tr>
<tr><td>TMS320C64x+</td><td>C64x+</td><td>&#x2713;</td><td>&times;</td><td>vylepšení čipu TMS320C64x</td></tr>
<tr><td>TMS320C674x</td><td>C674</td><td>&#x2713;</td><td>&#x2713;</td><td>vznikl sloučením vlastností TMS320C64x+ a TMS320C67x+</td></tr>
<tr><td>TMS320C66x</td><td>C66<td></td>&#x2713;</td><td>&#x2713;</td><td>nová řada založená na TMS320C674x</td></tr>
</table>

<a href="https://www.root.cz/obrazek/276374/"><img src="https://i.iinfo.cz/images/457/tms320-2-2-prev.png" class="image-276374" alt="&#160;" width="370" height="162" /></a>
<p><i>Obrázek 1: Dispatcher použitý v&nbsp;klasických skalárních i
superskalárních procesorech.</i></p>

<p>Už v&nbsp;základním modelu TMS320C62x se objevilo použití architektury VLIW
s&nbsp;instrukčními slovy širokými 256 bitů, přičemž každé instrukční slovo
bylo rozděleno do bitových polí představujících konkrétní instrukce určené pro
vybraný funkční blok procesorového jádra. Kvůli paralelnímu běhu výpočtů bylo
jádro rozděleno na dvě části nazvaná datapath <strong>A</strong> a datapath
<strong>B</strong>; každá z&nbsp;těchto částí měla vlastní sadu registrů a
vlastní čtveřici výkonných jednotek. Teoreticky tak bylo možné v&nbsp;jednom
instrukčním slovu řídit všech osm jednotek současně.</p>

<a href="https://www.root.cz/obrazek/276375/"><img src="https://i.iinfo.cz/images/457/tms320-2-3-prev.png" class="image-276375" alt="&#160;" width="370" height="154" /></a>
<p><i>Obrázek 2: VLIW s&nbsp;instrukcemi rozdělenými do bitových polí. Právě
takto jsou instrukce skládány i v&nbsp;čipech TMS320C6xxx.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Základní parametry čipů řady TMS320C66x</h2>

<p>V&nbsp;současnosti patří čipy řady TMS320C66x (dále budeme používat pouze
zkrácené označení C66) mezi jedny z&nbsp;nejvýkonnějších DSP vůbec, což je také
patrné při pohledu na &bdquo;portfolio&ldquo; společnosti Texas Instruments,
které je dnes nabízeno:</p>

<a href="http://www.ti.com/lsds/media/images/processors/22801-dsp-scalability.png">http://www.ti.com/lsds/media/images/processors/22801-dsp-scalability.png</a>
<p><i>Obrázek 3: Nabídka DSP společnosti Texas Instruments.</i></p>

<p>Nejvýkonnější jsou DSP TMS320C6678 neboli jen C6678, u nichž je špičkového
výpočetního výkonu dosaženo jak relativně vysokou taktovací frekvencí
dosahující až 1,4 GHz, tak i použitím rychlých násobiček a především díky tomu,
že se na čipu nachází celkem osm samostatně pracujících jader nazývaných <i>C66
Core Pac</i>. Na výběr jsou však i méně výkonné čipy C66 s&nbsp;jedním, dvěma
či čtyřmi jádry.</p>

<p>Každé z&nbsp;až osmi jader má samo o sobě úctyhodný výpočetní výkon. Dále
uvedené hodnoty platí pro hodinovou frekvenci 1,4 GHz:</p>

<table>
<tr><th>Operace typu</th><th>Maximální výkon</th><th>Poznámka</th></tr>
<tr><td>Fixed point</td><td>44,8 GMAC</td><td>Giga Multiply-ACcumulate operations per second</td></tr>
<tr><td>Floating point</td><td>22,4 GFLOPS</td><td>Giga Floating Point Operations Per Second</td></tr>
</table>

<p>Teoretický maximální výkon celého čipu s&nbsp;osmi jádry C66 Core Pac
s&nbsp;hodinovou frekvencí 1,4 GHz:</p>

<table>
<tr><th>Operace typu</th><th>Maximální výkon</th><th>Poznámka</th></tr>
<tr><td>Fixed point</td><td>358 GMAC</td><td>Giga Multiply-ACcumulate operations per second</td></tr>
<tr><td>Floating point</td><td>179 GFLOPS</td><td>Giga Floating Point Operations Per Second</td></tr>
</table>

<p>Poznámka: tohoto výkonu lze skutečně dosáhnout, protože VLIW architektura i
dále popsaný TeraNet umožňuje jádra &bdquo;zásobovat&ldquo; daty dostatečně
rychle.</p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Interní architektura čipů C6678</h2>

<p>Interní architektura čipů C6678, tedy prozatím nejvýkonnějších DSP této řady
s&nbsp;osmi jádry, je naznačena na čtvrtém obrázku. Povšimněte si, že každý
<i>Core Pac</i> je založen na DSP jádru C66, které je vybaveno vlastní cache
první i druhé úrovně, přičemž cache druhé úrovně (větší kapacita, nižší
rychlost) je společná pro instrukce i pro data zatímco cache první úrovně
(menší kapacita, vyšší rychlost) je rozdělena na datovou cache (<i>D-cache</i>)
a instrukční/programovou cache (<i>I-cache</i>). Jednotlivá jádra mohou přes
přepínač nazvaný <i>TeraNet</i> komunikovat jak s&nbsp;hlavní pamětí, tak i
s&nbsp;dalšími moduly, mezi něž patří mj.&nbsp;i přepínač pro Ethernet
(samozřejmě gigabitový) a sběrnice PCI Express, kterou jsme si již v&nbsp;tomto
seriálu <a
href="https://www.root.cz/clanky/interni-sbernice-pci-express/">stručně
popsali</a>. Ani na dalších I/O modulech se nešetřilo, protože kromě GPIO zde
nalezneme i sériové sběrnice I<sup>2</sup>C, SPI, sériový port UART, TSIP
(<i>Telecom Serial Interface Port</i>) atd.  Nesmíme zapomenout na
<i>HyperLink</i>, který je určen mj.&nbsp;i pro rychlou komunikaci
s&nbsp;FPGA</p>

*** image ***
<p><i>Obrázek 4: Interní architektura čipů C6678 s&nbsp;osmi jádry C66 Core
Pac.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Přepínač TeraNet</h2>

<p>Přepínač <i>TeraNet</i> umožňuje nakonfigurovat propojení typu &bdquo;každý
s&nbsp;každým&ldquo; a je ve skutečnosti rozdělen na dvě části. První
z&nbsp;nich slouží pro přenos dat, druhá pro konfiguraci jednotlivých zařízení
(modulů). Při přenosech dat jsou uzly rozděleny podle své role na uzly typu
<i>master</i> a uzly typu <i>slave</i>. Rozdíl mezi typy uzlů je jednoduchý
&ndash; uzly typu master dokážou celou komunikaci iniciovat, umí určit, zda se
má provádět čtení či zápis dat atd. zatímco uzly slave vystupují pasivně a
pouze přijímají či posílají požadovaná data. Prakticky všechny výše zmíněné
uzly připojené na TeraNet (CorePac, gigabitový Ethernet, PCI Express) mohou
vystupovat v&nbsp;roli mastera, výjimku tvoří uzly se sériovými sběrnicemi
I<sup>2</sup>C, SPI, sériovým portem UART apod.</p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Paměťový subsystém řady TMS320C66x</h2>

<p>Paměťový subsystém digitálních signálových procesorů C66 je poměrně
komplikovaný, což vyplývá z&nbsp;nutnosti zajistit všem osmi jádrům instrukce i
data v&nbsp;požadované rychlosti a s&nbsp;malou latencí. Jak již víme
z&nbsp;předchozí kapitoly, jsou ke každému jádru přidány paměti cache, přičemž
L2 cache má kapacitu 512 kB a L1 cache kapacitu 64 kB rozdělenou na 32 kB pro
data a 32 kB pro instrukce (program). Navíc je na čipu umístěna i paměť nazvaná
<i>Multicore Shared Memory (MSM)</i>, která je, jak ostatně přímo plyne
z&nbsp;jejího názvu, sdílená mezi všemi jádry. Tato paměť má kapacitu 4 MB
(4096 kB) a pro její realizaci je použita SRAM (stejně jako pro L1 a L2 cache),
která je sice dražší než DRAM, ovšem umožňuje rychlejší přístup k&nbsp;uloženým
datům. MSM je možné nakonfigurovat tak, aby pracovala jako sdílená cache třetí
úrovně. K&nbsp;čipu je samozřejmě možné připojit i klasickou SDRAM
(resp.&nbsp;přesněji řečeno <a
href="https://en.wikipedia.org/wiki/DDR3_SDRAM">DDR3 SDRAM</a>). O řízení
přístupu všech jader k&nbsp;MSM i SDRAM se stará řadič <i>Multicore Shared
Memory Controller (MSMC)</i>. Adresovatelná kapacita paměti je 8GB.</p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Multicore Navigator</h2>

<p>Součástí čipů C6678 je i takzvaný <i>Multicore Navigator</i>, který dokáže
zařídit komunikaci mezi jednotlivými moduly přes fronty (<i>queue</i>), kterých
může existovat až 8192. Pokud je fronta nakonfigurována, je tok dat řízen i
prováděn (na HW úrovni) Multicore Navigatorem a není tedy zapotřebí neustále
programově měnit konfiguraci propojení přes TeraNet.</p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Jádra C66x a jejich podpůrné moduly</h2>

<p>Každý Core Pac se skládá z&nbsp;několika modulů:</p>

<ol>
<li>Vlastního jádra C66</li>
<li>Řadičem přístupu do paměti programu (Program Memory Controller, PMC)</li>
<li>Řadičem přístupu do paměti dat (Data Memory Controller, DMC)</li>
<li>Řadičem přístupu do L2 cache (Unified Memory Controller, UMC)</li>
<li>Řadičem přístupu do obecné paměti a do MSM</li>
<li>Rozhraním pro &bdquo;boot&ldquo; jádra</li>
</ol>

<p>Jádro C66 je rozděleno na:</p>

<ol>
<li>Část pro načtení instrukce, její dekódování, dispatch atd.</li>
<li>Sadu pracovních registrů datapathu A (viz <a href="#k09">devátou</a> kapitolu)</li>
<li>Sadu pracovních registrů datapathu B (viz <a href="#k09">devátou</a> kapitolu)</li>
<li>Čtyři výkonné jednotky datapathu A (viz <a href="#k08">osmou</a> kapitolu)</li>
<li>Čtyři výkonné jednotky datapathu B (viz <a href="#k08">osmou</a> kapitolu)</li>
<li>Řídicí registry</li>
<li>Řadič přerušení</li>
<li>Řadič výjimek</li>
</ol>

*** image ***
<p><i>Obrázek 5: Načtení, dekódování a dispatch instrukce v&nbsp;jednom jádru
C66x.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Funkční jednotky</h2>

<p>Každé jádro C66 tvořící ústřední část modulu Core Pac je rozděleno, jak je
to ostatně u všech digitálních signálových procesorů C6000 obvyklé, na dvě
části pojmenované datapath <strong>A</strong> a datapath <strong>B</strong>.
Každá z&nbsp;těchto částí obsahuje sadu pracovních registrů (konkrétně je
v&nbsp;každé sadě umístěno třicet dva 32bitových registrů, celkem tedy 64
32bitových registrů) a čtyři výkonné jednotky pojmenované
(<strong>.L1</strong>, <strong>.S1</strong>, <strong>.M1</strong>,
<strong>.D1</strong> pro část <strong>A</strong> a <strong>.L2</strong>,
<strong>.S2</strong>, <strong>.M2</strong>, <strong>.D2</strong> pro část
<strong>B</strong>):</p>

<pre>
+-----------------+-----------------+
|   Registry Ax   |   Registry Bx   |
+-----------------+-----------------+
   ⇅   ⇅   ⇅   ⇅     ⇅   ⇅   ⇅   ⇅
 +---+---+---+---+ +---+---+---+---+
 |.L1|.S1|.M1|.D1| |.D2|.M2|.S2|.L2|
 +---+---+---+---+ +---+---+---+---+
</pre>

<p>Základní funkci různých typů jednotek shrnuje následující tabulka:</p>

<table>
<tr><th>Jednotka</th><th>Funkce</th></tr>
<tr><td>.Lx</td><td>ALU pro operandy šířky 32 bitů, 40 bitů či 64 bitů</td></tr>
<tr><td>.Sx</td><td>32bitová ALU + shiftery pro operandy šířky 32 bitů či 40 bitů, skoky</td></tr>
<tr><td>.Mx</td><td>násobička popsaná níže, která též provádí MAC operace atd.</td></tr>
<tr><td>.Dx</td><td>jednodušší ALU (součet, rozdíl), datové přenosy, výpočty adres (offsety) apod.</td></tr>
</table>

<p>Poznámka: oproti původním jádrům TMS320C674x jsou jádra TMS320C66x vylepšena
o přímou podporu pro 64bitové operandy, což se dotknulo především jednotek .Lx
a .Sx. (zkráceně je možné říci, že se všechny interní cesty a sběrnice
rozšířily na dvojnásobnou šířku). Rozšířeny byly i možnosti násobiček, jimž je
kvůli jejich stěžejnímu významu věnována <a href="#k12">samostatná
kapitola</a>. </p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Pracovní registry, řídicí registry a akumulátory</h2>

<p>Jak jsme si již ve stručnosti řekli v&nbsp;předchozí kapitole, najdeme
v&nbsp;každém jádru C66 celkem 64 pracovních registrů, z&nbsp;nichž každý má
šířku 32 bitů. Tyto registry jsou rozděleny na dvě poloviny podle toho, ke
které datapath patří:</p>

<table>
<tr><th>Datapath</th><th>Registry</th></tr>
<tr><td>A</td><td>A0 .. A31</td></tr>
<tr><td>B</td><td>B0 .. B31</td></tr>
</table>

<p>Pokud se používají operandy o šířce 40 bitů či 64 bitů, je nutné použít
registrový pár (dvojici sousedních pracovních registrů), přičemž v&nbsp;případě
operandů s&nbsp;šířkou 40 bitů má u druhého registru význam jen spodních osm
bitů. Některé operace podporují i operandy o šířce 128 bitů, v&nbsp;tomto
případě se používají čtyři sousední registry.</p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Kooperace mezi jednotkami (datapath) A a B</h2>

<p>Každá z&nbsp;jednotek v&nbsp;části A může pro svůj vstupní operand (či
operandy) použít libovolný registr A0 až A31; to samé samozřejmě platí pro část
B a registry B0 až B31. Mohlo by se tedy zdát, že každá část je zcela
samostatná a oddělená od části druhé; ve skutečnosti je však v&nbsp;reálných
aplikacích nutné, aby bylo možné data mezi oběma částmi přenášet. To pro adresy
zabezpečují jednotky <strong>.D1</strong> a <strong>.D2</strong>, které pomocí
volitelného přepínače dokážou uložit výsledná data do vybraného registru
z&nbsp;druhé jednotky (za to ovšem zaplatíme pozdržením přenosu o jeden
hodinový cyklus). Navíc je možné vždy u vybrané jednotky <strong>.Lx</strong>,
<strong>.Sx</strong> či <strong>.Mx</strong> zvolit, že druhý operand bude
vybrán z&nbsp;opačné části. To zajišťují dva jednosměrné komunikační kanály
nazvané <i>crosspath(s)</i> a označované 1X a 2X (ovšem je nutné si uvědomit,
že takto lze zvolit &bdquo;cizí&ldquo; operand jen u jediné jednotky, navíc se
vždy může přenést obsah jednoho registru, nikoli registrového páru).
Zjednodušeně lze tok dat od vstupních operandů k&nbsp;operandům výstupním
naznačit takto (už je asi zřejmé, proč mám u části B jednotky uvedeny
v&nbsp;opačném pořadí):</p>

<pre>
+------------------+------------------+
|   Registry Ax    |    Registry Bx   |
|                2x|1x                |
+------------------+------------------+
 (1x)(1x)(1x)            (2x)(2x)(2x)
   ↓   ↓   ↓   ↓       ↓   ↓   ↓   ↓
 +---+---+---+---+   +---+---+---+---+
 |.L1|.S1|.M1|.D1|   |.D2|.M2|.S2|.L2|
 +---+---+---+---+   +---+---+---+---+
   ↓   ↓   ↓   ↓ ↘   ↙ ↓   ↓   ↓   ↓
+------------------+------------------+
|   Registry Ax    |    Registry Bx   |
+------------------+------------------+
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vektorové (SIMD) operace</h2>

<p>I když registry mají šířku &bdquo;pouze&ldquo; 32 bitů, je ve skutečnosti
možné na jádrech C66x provádět některé operce i s&nbsp;delšími operandy.
Maximální délku mají 128bitové vektory, které jsou rozděleny na 32bitové,
16bitové či osmibitové části. Příkladem může být instrukce QMPY32 určená pro
vynásobení čtyř dvojic operandů, přičemž každý operand má šířku 32 bitů.
Naproti tomu méně výkonná ale stále používaná jádra C64x+ a C674 sice taktéž
podporují SIMD operace, ale pouze s&nbsp;maximálně 32bitovými vektory, přičemž
každý vektor může obsahovat jediný 32bitový prvek, dva 16bitové prvky nebo
čtyři prvky osmibitové.</p>

<table>
<tr><th>Operace</th><th>TMS320C674x</th><th>TMS320C66x</th></tr>
<tr><td>SIMD</td><td>32 bitů (2&times;16, 4&times;8)</td><td>128 bitů (4&times;32, 4&times;16, 4&times;8)</td></tr>
</table>

<a href="http://i.iinfo.cz/images/311/pc158-7.png"><img src="http://i.iinfo.cz/images/311/pc158-7-prev.png" width="205" height="270" alt="&#160;" /></a>
<p><i>Obrázek 7: Schéma systému patřícího do kategorie SIMD.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Násobičky v&nbsp;jednotkách .M1 a .M2</h2>

<p>Násobičky tvoří ústřední část prakticky každého digitálního signálového
procesoru, takže se jim věnujme podrobněji. U jader C66x jsou rychlé násobičky
součásí jednotek/bloků <strong>.Mx</strong>. Označení &bdquo;rychlé&ldquo; je
zde skutečně na místě, protože v&nbsp;jednom hodinovém cyklu dokáže každá
násobička provést jeden z&nbsp;následujících kroků:</p>

<ul>
<li>Čtyři násobení (nebo MAC) 32&times;32 bitů</li>
<li>Šestnáct násobení (nebo MAC) 16&times;16 bitů</li>
<li>Čtyři násobení 16&times;32 bitů</li>
<li>Čtyři operace MAC na operandy 8&times;8 bitů</li>
<li>Čtyři operace MAC na operandy 16&times;16 bitů</li>
</ul>

<p>To však není zdaleka vše, protože v&nbsp;některých aplikacích (FFT, modemy)
se provádí násobení komplexních čísel. Proto každá jednotka
<strong>.Mx</strong> dokáže v&nbsp;každém hodinovém cyklu provést vynásobení
komplexních čísel 16&times;16 bitů nebo 32&times;32 bitů se zaokrouhlením
výsledků. Další podporovanou operací jednotek <strong>.Mx</strong> je násobení
vektorů (se dvěma prvky) či matic (o rozměrech 2&times;2 prvky).</p>

<p>Poznámka: nezapomeňme, že výše provedené operace se danou rychlostí provádí
v&nbsp;jediné jednotce <strong>.Mx</strong>, přičemž v&nbsp;každém jádru jsou
dvě tyto jednotky a celkem je k&nbsp;dispozici osm paralelně pracujících
jader.</p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Výkonové rozdíly mezi jádry TMS320C674x a TMS320C66x</h2>

<p>Pokud jste se podívali na <a
href="http://www.ti.com/lsds/media/images/processors/22801-dsp-scalability.png">obrázek
odkazovaný</a> ve třetí kapitole, pravděpodobně jste si všimli, že TI
v&nbsp;současnosti kromě výkonných jader TMS320C66x/C66x nabízí i DSP postavené
na TMS320C674x/C674x (z&nbsp;označení plyne, že se jedná o kombinaci
TMS320C64x+ a TMS320C67x+). Vzhledem k&nbsp;tomu, že C66x je představováno jako
&bdquo;high performance DSP&ldquo; zatímco C674x jako &bdquo;low-power&ldquo;,
nabízí se otázka, zda jsou čipy C66x skutečně tak výkonné nebo zda se jedná o
kosmetické rozdíly. Pro porovnání se tedy podívejme na následující tabulku,
v&nbsp;níž jsou porovnány typické DSP operace, tj.&nbsp;násobení následované
součtem (akumulací) a základní operací s&nbsp;FP operandy. Hodnoty
v&nbsp;tabulce ukazují, kolik těchto operací může proběhnou současně <i>na
jediném jádru</i>:</p>

<table>
<tr><th>Operace</th><th>TMS320C674x</th><th>TMS320C66x</th></tr>
<tr><td>MAC 16&times;16 bitů, FX</td><td>8&times;</td><td>32&times;</td></tr>
<tr><td>MAC 32&times;32 bitů, FX</td><td>2&times;</td><td>8&times;</td></tr>
<tr><td>MAC FP, float/single</td><td>2&times;</td><td>8&times;</td></tr>
<tr><td>SIMD</td><td>32 bitů (2&times;16, 4&times;8)</td><td>128 bitů (4&times;32, 4&times;16, 4&times;8)</td></tr>
</table>



<p><a name="k14"></a></p>
<h2 id="k14">14. Operace s&nbsp;hodnotami s&nbsp;plovoucí řádovou čárkou</h2>

<p>Kromě celočíselných operací a operací nad hodnotami reprezentovanými ve
Q-formátu podporují jádra C66x i výpočty nad hodnotami s&nbsp;plovoucí řádovou
čárkou (<i>floating point</i>, <i>FP</i>). Zajímavé je, že sada pracovních
registrů zůstává zachována, nenajdeme zde tedy striktní rozdělení na registry
celočíselné a registry určené pro FP operace. Pokud se používá formát
<i>single/float</i> (podle normy IEEE 754), je pro uložení operandu použit
jeden registr, zatímco v&nbsp;případě formátu <i>double</i> je nutné použít dva
sousední registry. I FP operace jsou rozděleny do jednotek; takže například
instrukci <strong>FADDDP/FADDSP</strong> (součet pro typ double/single) je
možné provést v&nbsp;jednotkách <strong>.Lx</strong> či <strong>.Sx</strong>
zatímco instrukce <strong>FMPYDP</strong> (rychlé násobení dvou hodnot typu
double) je určena pro jednotku <strong>.M1</strong> či pro jednotku
<strong>.M2</strong>.</p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Instrukční sada jader TMS320C66x</h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. Odkazy na Internetu</h2>

<ol>

<li>DSP for Cortex-M<br />
<a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">https://developer.arm.com/technologies/dsp/dsp-for-cortex-m</a>
</li>

<li>Cortex-M processors in DSP applications? Why not?!<br />
<a href="https://community.arm.com/processors/b/blog/posts/cortex-m-processors-in-dsp-applications-why-not">https://community.arm.com/processors/b/blog/posts/cortex-m-processors-in-dsp-applications-why-not</a>
</li>

<li>White Paper - DSP capabilities of Cortex-M4 and Cortex-M7<br />
<a href="https://community.arm.com/processors/b/blog/posts/white-paper-dsp-capabilities-of-cortex-m4-and-cortex-m7">https://community.arm.com/processors/b/blog/posts/white-paper-dsp-capabilities-of-cortex-m4-and-cortex-m7</a>
</li>

<li>Q (number format)<br />
<a href="https://en.wikipedia.org/wiki/Q_%28number_format%29">https://en.wikipedia.org/wiki/Q_%28number_format%29</a>
</li>

<li>TriCore Architecture &amp; Core<br />
<a href="http://www.infineon.com/cms/en/product/microcontroller/32-bit-tricore-tm-microcontroller/tricore-tm-architecture-and-core/channel.html?channel=ff80808112ab681d0112ab6b73d40837">http://www.infineon.com/cms/en/product/microcontroller/32-bit-tricore-tm-microcontroller/tricore-tm-architecture-and-core/channel.html?channel=ff80808112ab681d0112ab6b73d40837</a>
</li>

<li>TriCoreTM V1.6 Instruction Set: 32-bit Unified Processor Core<br />
<a href="http://www.infineon.com/dgdl/tc_v131_instructionset_v138.pdf?fileId=db3a304412b407950112b409b6dd0352">http://www.infineon.com/dgdl/tc_v131_instructionset_v138.pdf?fileId=db3a304412b407950112b409b6dd0352</a>
</li>

<li>TriCore v2.2 C Compiler, Assembler, Linker Reference Manual<br />
<a href="http://tasking.com/support/tricore/tc_reference_guide_v2.2.pdf">http://tasking.com/support/tricore/tc_reference_guide_v2.2.pdf</a>
</li>

<li>Infineon TriCore (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Infineon_TriCore">https://en.wikipedia.org/wiki/Infineon_TriCore</a>
</li>

<li>C166®S V2 Architecture &amp; Core<br />
<a href="http://www.infineon.com/cms/en/product/microcontroller/16-bit-c166-microcontroller/c166-s-v2-architecture-and-core/channel.html?channel=db3a304312bef5660112c3011c7d01ae">http://www.infineon.com/cms/en/product/microcontroller/16-bit-c166-microcontroller/c166-s-v2-architecture-and-core/channel.html?channel=db3a304312bef5660112c3011c7d01ae</a>
</li>

<li>Memory segmentation<br />
<a href="https://en.wikipedia.org/wiki/Memory_segmentation">https://en.wikipedia.org/wiki/Memory_segmentation</a>
</li>

<li>Bus mastering<br />
<a href="https://en.wikipedia.org/wiki/Bus_mastering">https://en.wikipedia.org/wiki/Bus_mastering</a>
</li>

<li>ST10 16-bit MCUs<br />
<a href="http://www.st.com/en/microcontrollers/st10-16-bit-mcus.html?querycriteria=productId=LN1111">http://www.st.com/en/microcontrollers/st10-16-bit-mcus.html?querycriteria=productId=LN1111</a>
</li>

<li>XC800 family<br />
<a href="https://en.wikipedia.org/wiki/XC800_family">https://en.wikipedia.org/wiki/XC800_family</a>
</li>

<li>C166 (stránky společnosti Infineon)<br />
<a href="https://www.infineon.com/cms/en/product/microcontroller/16-bit-c166-microcontroller/channel.html?channel=ff80808112ab681d0112ab6b2eaf0759#ispnTab3">https://www.infineon.com/cms/en/product/microcontroller/16-bit-c166-microcontroller/channel.html?channel=ff80808112ab681d0112ab6b2eaf0759#ispnTab3</a>
</li>

<li>C166 Family<br />
<a href="https://en.wikipedia.org/wiki/C166_family">https://en.wikipedia.org/wiki/C166_family</a>
</li>

<li>Permanent Magnet Synchronous Motor<br />
<a href="https://en.wikipedia.org/wiki/Synchronous_motor#Permanent_magnet_motors">https://en.wikipedia.org/wiki/Synchronous_motor#Permanent_magnet_motors</a>
</li>

<li>Implementing field oriented control of a brushless DC motor<br />
<a href="http://www.eetimes.com/document.asp?doc_id=1279321">http://www.eetimes.com/document.asp?doc_id=1279321</a>
</li>

<li>Vector control (motor)<br />
<a href="https://en.wikipedia.org/wiki/Vector_control_(motor)">https://en.wikipedia.org/wiki/Vector_control_(motor)</a>
</li>

<li>Motorola DSP56k<br />
<a href="https://www.rockbox.org/wiki/MotorolaDSP56k">https://www.rockbox.org/wiki/MotorolaDSP56k</a>
</li>

<li>Motorola 56000 (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Motorola_56000">http://en.wikipedia.org/wiki/Motorola_56000</a>
</li>

<li>Using the Motorola DSP56002EVM for Amateur Radio DSP Projects<br />
<a href="http://www.johanforrer.net/EVM/article.html">http://www.johanforrer.net/EVM/article.html</a>
</li>

<li>The Atari Falcon030 "Personal Integrated Media System"<br />
<a href="http://www.atarimuseum.com/computers/16bits/falcon030.html">http://www.atarimuseum.com/computers/16bits/falcon030.html</a>
</li>

<li>Turtle Beach Corporation (stránky společnosti)<br />
<a href="http://www.turtlebeach.com/">http://www.turtlebeach.com/</a>
</li>

<li>Turtle Beach Corporation (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Turtle_Beach_Corporation">https://en.wikipedia.org/wiki/Turtle_Beach_Corporation</a>
</li>

<li>Atari Falcon 030 DSP 3D engine test<br />
<a href="http://www.digiti.info/video/WHQwMjNRaExfLWs=/atari_falcon_030_dsp_3d_engine_test">http://www.digiti.info/video/WHQwMjNRaExfLWs=/atari_falcon_030_dsp_3d_engine_test</a>
</li>

<li>Atari Falcon030 (německy)<br />
<a href="http://www.maedicke.de/atari/hardware/falcon.htm">http://www.maedicke.de/atari/hardware/falcon.htm</a>
</li>

<li>Old-computers.com: Atari Falcon030<br />
<a href="http://www.old-computers.com/museum/computer.asp?c=125&st=1">http://www.old-computers.com/museum/computer.asp?c=125&st=1</a>
</li>

<li>Atari Falcon030 (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Atari_Falcon">http://en.wikipedia.org/wiki/Atari_Falcon</a>
</li>

<li>Past and current projects (including Falcon stuff)<br />
<a href="http://os.inf.tu-dresden.de/~nf2/projects/projects.html">http://os.inf.tu-dresden.de/~nf2/projects/projects.html</a>
</li>

<li>Atari Falcon 030: The Case For The Defence<br />
<a href="http://www.soundonsound.com/sos/1994_articles/sep94/atarifalcon.html">http://www.soundonsound.com/sos/1994_articles/sep94/atarifalcon.html</a>
</li>

<li>DaVinci processor family<br />
<a href="http://www.ti.com/general/docs/datasheetdiagram.tsp?genericPartNumber=TMS320DM365&diagramId=64193">http://www.ti.com/general/docs/datasheetdiagram.tsp?genericPartNumber=TMS320DM365&diagramId=64193</a>
</li>

<li>Texas Instruments DaVinci<br />
<a href="https://en.wikipedia.org/wiki/Texas_Instruments_DaVinci">https://en.wikipedia.org/wiki/Texas_Instruments_DaVinci</a>
</li>

<li>TMS320DM6446 (DaVinci)<br />
<a href="http://www.ti.com/product/tms320dm6446">http://www.ti.com/product/tms320dm6446</a>
</li>

<li>Digital Media Video Processors (TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/media_processors/davinci/products.page#">http://www.ti.com/lsds/ti/processors/dsp/media_processors/davinci/products.page#</a>
</li>

<li>TI Wiki<br />
<a href="http://processors.wiki.ti.com/index.php/Main_Page">http://processors.wiki.ti.com/index.php/Main_Page</a>
</li>

<li>C5000 ultra-low-power DSP<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/c5000_dsp/overview.page">http://www.ti.com/lsds/ti/processors/dsp/c5000_dsp/overview.page</a>
</li>

<li>OMAP (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/OMAP">https://en.wikipedia.org/wiki/OMAP</a>
</li>

<li>OMAP - TI Wiki<br />
<a href="http://processors.wiki.ti.com/index.php/OMAP">http://processors.wiki.ti.com/index.php/OMAP</a>
</li>

<li>Why OMAP can't compete in smartphones<br />
<a href="http://www.eetimes.com/author.asp?section_id=40&doc_id=1286602">http://www.eetimes.com/author.asp?section_id=40&doc_id=1286602</a>
</li>

<li>Applications Processors – The Heart of the Smartphone<br />
<a href="http://www.engineering.com/ElectronicsDesign/ElectronicsDesignArticles/ArticleID/5791/Applications-Processors-The-Heart-of-the-Smartphone.aspx">http://www.engineering.com/ElectronicsDesign/ElectronicsDesignArticles/ArticleID/5791/Applications-Processors-The-Heart-of-the-Smartphone.aspx</a>
</li>

<li>TI cuts 1,700 jobs in OMAP shift<br />
<a href="http://www.eetimes.com/document.asp?doc_id=1262782">http://www.eetimes.com/document.asp?doc_id=1262782</a>
</li>

<li>VLIW: Very Long Instruction Word: Texas Instruments TMS320C6x<br />
<a href="http://www.ecs.umass.edu/ece/koren/architecture/VLIW/2/ti1.html">http://www.ecs.umass.edu/ece/koren/architecture/VLIW/2/ti1.html</a>
</li>

<li>An Introduction To Very-Long Instruction Word (VLIW) Computer Architecture<br />
Philips Semiconductors
</li>

<li>VLIW Architectures for DSP: A Two-Part Lecture (PDF, slajdy)<br />
<a href="http://www.bdti.com/MyBDTI/pubs/vliw_icspat99.pdf">http://www.bdti.com/MyBDTI/pubs/vliw_icspat99.pdf</a>
</li>

<li>Very long instruction word (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Very_long_instruction_word">https://en.wikipedia.org/wiki/Very_long_instruction_word</a>
</li>

<li>A VLIW Approach to Architecture, Compilers and Tools<br />
<a href="http://www.vliw.org/book/">http://www.vliw.org/book/</a>
</li>

<li>VEX Toolchain (VEX = VLIW Example)<br />
<a href="http://www.hpl.hp.com/downloads/vex/">http://www.hpl.hp.com/downloads/vex/</a>
</li>

<li>Elbrus (computer)<br />
<a href="https://en.wikipedia.org/wiki/Elbrus_%28computer%29">https://en.wikipedia.org/wiki/Elbrus_%28computer%29</a>
</li>

<li>Super Harvard Architecture Single-Chip Computer<br />
<a href="https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer">https://en.wikipedia.org/wiki/Super_Harvard_Architecture_Single-Chip_Computer</a>
</li>

<li>Digital Signal Processors (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/overview.page">http://www.ti.com/lsds/ti/processors/dsp/overview.page</a>
</li>

<li>C674x Low Power DSP (stránky TI)<br />
<a href="http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page">http://www.ti.com/lsds/ti/processors/dsp/c6000_dsp/c674x/overview.page</a>
</li>

<li>TMS320C30 (stránky TI)<br />
<a href="http://www.ti.com/product/tms320c30">http://www.ti.com/product/tms320c30</a>
</li>

<li>TMS320C6722B<br />
<a href="http://www.ti.com/product/tms320c6722b/description">http://www.ti.com/product/tms320c6722b/description</a>
</li>

<li>Introduction to DSP<br />
<a href="http://www.ti.com/lit/wp/spry281/spry281.pdf">http://www.ti.com/lit/wp/spry281/spry281.pdf</a>
</li>

<li>The Evolution of TMS (Family of DSPs)<br />
<a href="http://www.slideshare.net/moto_modx/theevo1">http://www.slideshare.net/moto_modx/theevo1</a>
</li>

<li>Datasheet k TMS32010<br />
<a href="http://www.datasheetarchive.com/dlmain/49326c32a52050140abffe6f0ac4894aa09889/M/TMS32010">http://www.datasheetarchive.com/dlmain/49326c32a52050140abffe6f0ac4894aa09889/M/TMS32010</a>
</li>

<li>1979: Single Chip Digital Signal Processor Introduced<br />
<a href="http://www.computerhistory.org/siliconengine/single-chip-digital-signal-processor-introduced/">http://www.computerhistory.org/siliconengine/single-chip-digital-signal-processor-introduced/</a>
</li>

<li>The TMS32010. The DSP chip that changed the destiny of a semiconductor giant<br />
<a href="http://www.tihaa.org/historian/TMS32010-12.pdf">http://www.tihaa.org/historian/TMS32010-12.pdf</a>
</li>

<li>Texas Instruments TMS320 (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Texas_Instruments_TMS320">https://en.wikipedia.org/wiki/Texas_Instruments_TMS320</a>
</li>

<li>Great Microprocessors of the Past and Present: Part IX: Signetics 8x300, Early cambrian DSP ancestor (1978):<br />
<a href="http://www.cpushack.com/CPU/cpu2.html#Sec2Part9">http://www.cpushack.com/CPU/cpu2.html#Sec2Part9</a>
</li>

<li>Great Microprocessors of the Past and Present (V 13.4.0)<br />
<a href="http://jbayko.sasktelwebsite.net/cpu.html">http://jbayko.sasktelwebsite.net/cpu.html</a>
</li>

<li>Introduction to DSP - DSP processors:<br />
<a href="http://www.bores.com/courses/intro/chips/index.htm">http://www.bores.com/courses/intro/chips/index.htm</a>
</li>

<li>The Scientist and Engineer's Guide to Digital Signal Processing:<br />
<a href="http://www.dspguide.com/">http://www.dspguide.com/</a>
</li>

<li>Digital signal processor (Wikipedia EN)<br />
<a href="http://en.wikipedia.org/wiki/Digital_signal_processor">http://en.wikipedia.org/wiki/Digital_signal_processor</a>
</li>

<li>Digitální signálový procesor (Wikipedia CZ)<br />
<a href="http://cs.wikipedia.org/wiki/Digitální_signálový_procesor">http://cs.wikipedia.org/wiki/Digitální_signálový_procesor</a>
</li>

<li>Digital Signal Processing FAQs<br />
<a href="http://dspguru.com/dsp/faqs">http://dspguru.com/dsp/faqs</a>
</li>

<li>Reprezentace numerických hodnot ve formátech FX a FP<br />
<a href="http://www.root.cz/clanky/fixed-point-arithmetic/">http://www.root.cz/clanky/fixed-point-arithmetic/</a>
</li>

<li>IEEE 754 a její příbuzenstvo: FP formáty<br />
<a href="http://www.root.cz/clanky/norma-ieee-754-a-pribuzni-formaty-plovouci-radove-tecky/">http://www.root.cz/clanky/norma-ieee-754-a-pribuzni-formaty-plovouci-radove-tecky/</a>
</li>

<li>Čtyři základní způsoby uložení čísel pomocí FX formátů<br />
<a href="http://www.root.cz/clanky/binarni-reprezentace-numerickych-hodnot-v-fx-formatu/">http://www.root.cz/clanky/binarni-reprezentace-numerickych-hodnot-v-fx-formatu/</a>
</li>

<li>Základní aritmetické operace prováděné v FX formátu<br />
<a href="http://www.root.cz/clanky/zakladni-aritmeticke-operace-provadene-ve-formatu-fx/">http://www.root.cz/clanky/zakladni-aritmeticke-operace-provadene-ve-formatu-fx/</a>
</li>

<li>Aritmetické operace s hodnotami uloženými ve formátu FP<br />
<a href="http://www.root.cz/clanky/aritmeticke-operace-s-hodnotami-ve-formatu-plovouci-radove-carky/">http://www.root.cz/clanky/aritmeticke-operace-s-hodnotami-ve-formatu-plovouci-radove-carky/</a>
</li>

<li>FIR Filter FAQ<br />
<a href="http://dspguru.com/dsp/faqs/fir">http://dspguru.com/dsp/faqs/fir</a>
</li>

<li>Finite impulse response (Wikipedia)<br />
<a href="http://en.wikipedia.org/wiki/Finite_impulse_response">http://en.wikipedia.org/wiki/Finite_impulse_response</a>
</li>

<li>DSPRelated<br />
<a href="http://www.dsprelated.com/">http://www.dsprelated.com/</a>
</li>

<li>Addressing mode (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Addressing_mode">https://en.wikipedia.org/wiki/Addressing_mode</a>
</li>

<li>Orthogonal instruction set<br />
<a href="https://en.wikipedia.org/wiki/Orthogonal_instruction_set">https://en.wikipedia.org/wiki/Orthogonal_instruction_set</a>
</li>

<li>TI 16-bit and 32-bit microcontrollers<br />
<a href="http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page">http://www.ti.com/lsds/ti/microcontrollers_16-bit_32-bit/overview.page</a>
</li>

<li>TMS 32010 Assembly Language Programmer's Guide (kniha na Amazonu)<br />
<a href="https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423">https://www.amazon.com/32010-Assembly-Language-Programmers-Guide/dp/0904047423</a>
</li>

<li>COSC2425: PC Architecture and Machine Language, PC Assembly Language<br />
<a href="http://www.austincc.edu/rblack/courses/COSC2425/index.html">http://www.austincc.edu/rblack/courses/COSC2425/index.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

