<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Hexadecimální prohlížeče a editory s textovým uživatelským rozhraním</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Hexadecimální prohlížeče a editory s textovým uživatelským rozhraním</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>V dnešním článku si popíšeme některé užitečné nástroje určené pro prohlížení a případnou editaci binárních souborů. Významné (a nezastupitelné) místo mezi těmito nástroji náleží takzvaným <i>hexadecimálním prohlížečům</i> a <i>hexadecimálním editorům</i>.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Hexadecimální prohlížeče a editory s&nbsp;textovým uživatelským rozhraním</a></p>
<p><a href="#k02">2. Operace, které jsou podporované většinou hexadecimálních editorů</a></p>
<p><a href="#k03">3. Krátká exkurze do minulosti</a></p>
<p><a href="#k04">4. Hexadecimální prohlížeče dostupné pro Linux</a></p>
<p><a href="#k05">5. Nástroj <strong>od</strong></a></p>
<p><a href="#k06">6. Nástroj <strong>hexdump</strong></a></p>
<p><a href="#k07">7. Filtr <strong>xxd</strong> určený pro převod mezi binárním souborem a zvolenou číselnou reprezentací</a></p>
<p><a href="#k08">8. Prohlížeč binárních souborů zabudovaný do Midnight Commanderu</a></p>
<p><a href="#k09">9. Nástroj pro porovnání dvou binárních souborů &ndash; <strong>hexdiff</strong></a></p>
<p><a href="#k10">10. Hexadecimální editory dostupné pro Linux</a></p>
<p><a href="#k11">11. Hexadecimální editor nazvaný <strong>bvi</strong></a></p>
<p><a href="#k12">12. Nástroj <strong>hexer</strong></a></p>
<p><a href="#k13">13. Nástroj <strong>hexedit</strong></a></p>
<p><a href="#k14">14. Podobné jméno i funkce nabízené nástrojem <strong>hexeditor</strong></a></p>
<p><a href="#k15">15. Hexadecimální editor pojmenovaný <strong>dhex</strong></a></p>
<p><a href="#k16">16. Pokročilejší hexadecimální editory</a></p>
<p><a href="#k17">17. Druhé krátké ohlédnutí do minulosti &ndash; pokročilý hexadecimální editor <strong>HIEW</strong></a></p>
<p><a href="#k18">18. Hexadecimální editor <strong>HT</strong> (<strong>HTE</strong>)</a></p>
<p><a href="#k19">19. Linuxový hexadecimální editor <strong>Beye/Biew</strong></a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Hexadecimální prohlížeče a editory s&nbsp;textovým uživatelským rozhraním</h2>

<p>V&nbsp;tomto článku si popíšeme některé zajímavé hexadecimální prohlížeče a
editory dostupné pro Linux. Přitom se zaměříme na ty aplikace, které používají
buď pouhý textový výstup (filtry) či celoobrazovkové textové uživatelské
rozhraní (TUI). Co si však pod pojmenováním &bdquo;hexadecimální
prohlížeč&ldquo; nebo &bdquo;hexadecimální editor&ldquo; máme představit? Jedná
se o aplikace, které vstupní binární soubor (tj.&nbsp;soubor, který může mít
libovolný obsah, jenž není nijak interpretován) zobrazí typickým způsobem ve
formě hexadecimálních hodnot (tj.&nbsp;číselných hodnot využívajících při
zobrazení šestnáctkovou soustavu) umístěných do sloupců (viz též první
obrázek). Ve skutečnosti je však možné mnoho těchto prohlížečů a editorů
nakonfigurovat takovým způsobem, že se namísto hexadeciálních hodnot používají
hodnoty reprezentované v&nbsp;osmičkové soustavě, v&nbsp;soustavě dvojkové či
dokonce v&nbsp;desítkové soustavě (což ovšem v&nbsp;naprosté většině případů
není moc praktické).</p>

<img src="https://i.iinfo.cz/images/166/hexa1-1.png" class="image-311432" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 1: Pohled na typický hexadecimální editor spuštěný na terminálu
s&nbsp;osmdesáti sloupci a dvaceti pěti textovými řádky. Plocha terminálu je
rozdělena do čtyř oblastí &ndash; sloupec adres, sloupec s&nbsp;hexadecimálními
hodnotami, sloupec s&nbsp;textovou reprezentací bajtů a konečně na stavový a
příkazový řádek (v&nbsp;některých případech obsahují hexadecimální editory i
řádek s&nbsp;menu).</i></p>

<div class="rs-tip-minor"><p>Ve stručnosti &ndash; alespoň jeden hexadecimální
prohlížeč (pravděpodobně <strong>hexdump</strong>) a editor (možná
<strong>bvi</strong>, <strong>dhex</strong> nebo <strong>ht</strong>?) by se
měl stát součástí &bdquo;toolboxu&ldquo; každého vývojáře, i když se
s&nbsp;poměrně velkou pravděpodobností nebude jednat o dennodenně používanou
utilitu.</p></div>



<p><a name="k02"></a></p>
<h2 id="k02">2. Operace, které jsou podporované většinou hexadecimálních editorů</h2>

<p>Jaké operace vlastně můžeme od hexa prohlížečů a hexa editorů očekávat?
Především by mělo být možné zobrazit obsah vybraného (binárního) souboru ve
formě sekvence bajtů či širších slov, přičemž číselná hodnota každého bajtu či
slova může být zobrazena v&nbsp;binární, osmičkové či šestnáctkové
(hexadecimální) soustavě. Na většině dnes používaných architektur se ponejvíce
používá šestnáctková soustava, a to mj.&nbsp;i z&nbsp;toho důvodu, že tyto
architektury zpracovávají slova rozdělená do bajtů a hodnotu každého bajtu je
možné v&nbsp;šestnáctkové soustavě zobrazit pouhými dvěma číslicemi a navíc je
po krátkém tréninku možné jednoduše při přečtení šestnáctkové číslice zjistit
nastavení jednotlivých bitů. Hexadecimální editory také mnohdy nedokážou do
souborů přidat či z&nbsp;nich ubírat bajty; tj.&nbsp;povolují jen přepis. Toto
omezení však má svůj důvod &ndash; pokud se nemění délka editovaného souboru,
je snadné do paměti načítat jen menší bloky a tudíž zpracovat soubor
mnohonásobně větší, než je kapacita operační paměti. A protože i k&nbsp;celým
souborovým systémům lze v&nbsp;Linuxu přistupovat jako k&nbsp;souborům
(/dev/sdXY apod.), automaticky to znamená možnost přímé práce s&nbsp;celými
souborovými systémy, s&nbsp;uloženými obrazy virtuálních strojů atd.</p>

<a href="https://www.root.cz/obrazek/311433/"><img src="https://i.iinfo.cz/images/166/hexa1-2-prev.png" class="image-311433" alt="&#160;" width="370" height="157" /></a>
<p><i>Obrázek 2: Kombinace hexadecimálního editoru s&nbsp;disassemblerem a
dalšími specializovanými nástroji určenými pro ladění a úpravu nativních
programů pro osmibitové mikropočítače Atari. Podobné nástroje však existují i
pro další platformy, včetně starších herních konzolí (NES, SNES, ...).</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Krátká exkurze do minulosti</h2>

<p>Hexadecimální prohlížeče a hexadecimální editory za sebou mají poměrně
dlouhý vývoj, ostatně jejich vznik je možné datovat ještě do dob, kdy
neexistovaly ani dnes již zcela běžné textové editory. Jeden z&nbsp;prvních
programů tohoto typu se jmenoval <strong>SUPERZAP</strong> a používat se mohl
na mainframech řady IBM OS/360 (existují i jeho verze pro další mainframy řady
370, 390 atd.). Podobné nástroje se později používaly i na domácích
osmibitových mikropočítačích, a to mnohdy i ve chvíli, kdy by se dnes
s&nbsp;velkou pravděpodobností využila jiná vhodnější aplikace, například
assembler, disassembler, textový editor či grafický (bitmapový) editor. Ovšem
kdo by čekal několik minut na nahrání grafického editoru z&nbsp;kazety, když si
mohl postavičku do hry nakreslit na čtverečkovaný papír a potom napsat do
hexadecimálního editoru? :-)</p>

<img src="https://i.iinfo.cz/images/166/hexa1-3.png" class="image-311434" alt="&#160;" width="336" height="240" />
<p><i>Obrázek 3: Mnohé hexadecimální editory dokázaly přistupovat přímo na
sektory diskety a později i pevného disku. Vžil se pro ně název
&bdquo;diskeditory&ldquo; (a ne vždy sloužily ke zcela legálním
činnostem).</i></p>

<p>S&nbsp;rozšířením IBM PC a operačního systému DOS samozřejmě vznikly hexa
editory i pro tyto stroje. Většina klasických hexadecimálních editorů stále
využívá textový režim. Vzhledem k&nbsp;tomu, že standardní textový režim
(realizovaný přímo hardwarovými prostředky) dokázal na osobních mikropočítačích
IBM PC zobrazit 80 znaků na textovém řádku, byla obrazovka těchto editorů
rozdělena na tři části, které tvořily: sloupec s&nbsp;adresou (pořadím bajtu
v&nbsp;souboru, tj.&nbsp;vlastně offsetem), 48 sloupců se šestnácti
hexadecimálními hodnotami a konečně šestnáct znaků s&nbsp;ASCII hodnotami
editovaných bajtů &ndash; podobný formát je ostatně dodržen dodnes, jak bude
patrné ze screenshotů uvedených v&nbsp;navazujících kapitolách.</p>

<img src="https://i.iinfo.cz/images/166/hexa1-4.png" class="image-311435" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 4: Prohlížeč binárních souborů implementovaný ve Volkov
Commanderu (DOS/Windows). Ze screenshotu je patrné &bdquo;klasické&ldquo;
rozdělení okna na tři sloupce: adresy, hodnoty bajtů a jednotlivé znaky
odpovídající pozicím bajtů. Toto rozdělení není typické pouze pro Volkov
Commander, ale najdeme ho i v&nbsp;mnoha dalších nástrojích.</i></p>

<p>Samozřejmě nesmíme zapomenout ani do osobní mikropočítače Amiga a Atari ST,
na nichž se tyto nástroje už začaly kombinovat s&nbsp;disassemblery a
jednoduššími řádkovými assemblery. I zde docházelo ke slučování klasických
hexadecimálních editorů s&nbsp;editory sektorů disket a disků.</p>

<img src="https://i.iinfo.cz/images/166/hexa1-5.png" class="image-311436" alt="&#160;" width="480" height="248" />
<p><i>Obrázek 5: Hexadecimální editor spuštěný ve Workbenchi (Amiga).</i></p>

<img src="https://i.iinfo.cz/images/166/hexa1-6.png" class="image-311437" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 6: Velmi užitečná vlastnost některých hexadecimálních prohlížečů
a editorů: možnost volby kódování znaků (kupodivu jen poměrně malé množství
hexadecimálních editorů podporuje například UTF-8 či UTF-16).</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Hexadecimální prohlížeče dostupné pro Linux</h2>

<p>V&nbsp;následujících pěti kapitolách se seznámíme s&nbsp;nástroji určenými
pro prohlížení obsahu binárních souborů. První dva nástroje nazvané
<strong>od</strong> a <strong>hexdump</strong> (zkráceně <strong>hd</strong>)
pracují jako relativně jednoduché jednosměrné filtry, ovšem další nástroj
pojmenovaný <strong>xxd</strong> již může být použit pro obousměrný převod
(filtraci), tj.&nbsp;jak pro transformaci původního binárního souboru do
čitelného tvaru (většinou s&nbsp;využitím šestnáctkové soustavy), tak i pro
zpětný převod. Díky tomu je možné <strong>xxd</strong> použít například ve
funkci pluginu do běžných textových editorů. Další nástroj pojmenovaný
<strong>hexdiff</strong> dokáže porovnat obsah dvou binárních souborů a
poslední zmíněný nástroj <strong>mcview</strong> je, na rozdíl od předchozí
čtveřice, aplikací s&nbsp;interaktivním ovládáním a plnohodnotným textovým
uživatelským prostředím.</p>

<img src="https://i.iinfo.cz/images/166/hexa1-7.png" class="image-311438" alt="&#160;" width="336" height="240" /></p>
<p><i>Obrázek 7: Další diskeditor dostupný pro osmibitové mikropočítače
Atari.</i></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Nástroj <strong>od</strong></h2>

<p>První utilita, kterou si dnes ve stručnosti představíme, se jmenuje
<strong>od</strong>, což je zkratka vytvořená ze sousloví &bdquo;octal
dump&ldquo;. Již fakt, že jméno této utility má pouhá dvě písmena, napovídá, že
se jedná o nástroj pocházející již z&nbsp;prvních verzí Unixu. Původní varianty
utility <strong>od</strong> vypisovaly obsah zvoleného souboru (alternativně
standardního vstupu či zvoleného zařízení) s&nbsp;využitím osmičkové soustavy,
ovšem GNU verze <strong>od</strong> nabízí uživatelům mnohem víc možností, a to
včetně včetně použití hexadecimální soustavy (ostatně i proto o této utilitě
dnes píšeme), zformátování sousedních čtyř bajtů do čísla typu
<i>single/float</i>, dtto pro osm bajtů a čísla typu <i>double</i> apod.</p>

<img src="https://i.iinfo.cz/images/2/hexa2-2.png" class="image-311440" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 8: Výchozí způsob zobrazení používaný nástrojem
<strong>od</strong> se již mnoho desetiletí nezměnil.</i></p>

<p>Podívejme se na několik možností použití. Vždy budeme pracovat
s&nbsp;binárním spustitelným souborem určeným pro 32bitovou architekturu ARM.
Tento soubor vznikl překladem a slinkováním následujícího kódu naprogramovaného
v&nbsp;assembleru:</p>

<pre>
# Syscall Linuxoveho jadra
sys_exit=1
&nbsp;
.section .text
        .global _start       @ tento symbol ma byt dostupny i z linkeru
&nbsp;
_start:
        mov   r7,$sys_exit   @ cislo sycallu pro funkci "exit"
        mov   r0,#0          @ exit code = 0
        svc   0              @ volani Linuxoveho kernelu
</pre>

<p>Výsledný binární soubor má délku 312 bajtů.</p>

<img src="https://i.iinfo.cz/images/2/hexa2-3.png" class="image-311441" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 9: Přepnutí na zobrazení obsahu souboru pomocí šestnáctkové
soustavy.</i></p>

<p>Výpis obsahu binárního souboru v&nbsp;osmičkové soustavě s&nbsp;použitím
výchozího nastavení (povšimněte si oddělení hvězdičkou po 256 bajtech, což je
historicky daná hodnota odpovídající jedné stránce paměti a/nebo jednomu
sektoru):</p>

<pre>
<strong>od a.out</strong>
&nbsp;
0000000 042577 043114 000401 000001 000000 000000 000000 000000
0000020 000002 000050 000001 000000 100124 000000 000064 000000
0000040 000230 000000 001000 002400 000064 000040 000001 000050
0000060 000004 000003 000001 000000 000000 000000 100000 000000
0000100 100000 000000 000140 000000 000140 000000 000005 000000
0000120 100000 000000 070001 161640 000000 161640 000000 167400
0000140 011501 000000 060400 060545 064542 000400 000011 000000
0000160 000406 000410 027000 064163 072163 072162 061141 027000
0000200 062564 072170 027000 051101 027115 072141 071164 061151
0000220 072165 071545 000000 000000 000000 000000 000000 000000
0000240 000000 000000 000000 000000 000000 000000 000000 000000
*
0000300 000013 000000 000001 000000 000006 000000 100124 000000
0000320 000124 000000 000014 000000 000000 000000 000000 000000
0000340 000004 000000 000000 000000 000021 000000 000003 070000
0000360 000000 000000 000000 000000 000140 000000 000024 000000
0000400 000000 000000 000000 000000 000001 000000 000000 000000
0000420 000001 000000 000003 000000 000000 000000 000000 000000
0000440 000164 000000 000041 000000 000000 000000 000000 000000
0000460 000001 000000 000000 000000
0000470
</pre>

<p>Přepnutí do šestnáctkové soustavy, ovšem se sdružením bajtů do 16bitových
slov:</p>

<pre>
<strong>od -h a.out</strong>
&nbsp;
0000000 457f 464c 0101 0001 0000 0000 0000 0000
0000020 0002 0028 0001 0000 8054 0000 0034 0000
0000040 0098 0000 0200 0500 0034 0020 0001 0028
0000060 0004 0003 0001 0000 0000 0000 8000 0000
0000100 8000 0000 0060 0000 0060 0000 0005 0000
0000120 8000 0000 7001 e3a0 0000 e3a0 0000 ef00
0000140 1341 0000 6100 6165 6962 0100 0009 0000
0000160 0106 0108 2e00 6873 7473 7472 6261 2e00
0000200 6574 7478 2e00 5241 2e4d 7461 7274 6269
0000220 7475 7365 0000 0000 0000 0000 0000 0000
0000240 0000 0000 0000 0000 0000 0000 0000 0000
*
0000300 000b 0000 0001 0000 0006 0000 8054 0000
0000320 0054 0000 000c 0000 0000 0000 0000 0000
0000340 0004 0000 0000 0000 0011 0000 0003 7000
0000360 0000 0000 0000 0000 0060 0000 0014 0000
0000400 0000 0000 0000 0000 0001 0000 0000 0000
0000420 0001 0000 0003 0000 0000 0000 0000 0000
0000440 0074 0000 0021 0000 0000 0000 0000 0000
0000460 0001 0000 0000 0000
0000470
</pre>

<p>Explicitní žádost, aby hodnoty bajtů nebyly spojovány do větších slov:</p>

<pre>
<strong>od -t x1 a.out</strong>
&nbsp;
0000000 7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00
0000020 02 00 28 00 01 00 00 00 54 80 00 00 34 00 00 00
0000040 98 00 00 00 00 02 00 05 34 00 20 00 01 00 28 00
0000060 04 00 03 00 01 00 00 00 00 00 00 00 00 80 00 00
0000100 00 80 00 00 60 00 00 00 60 00 00 00 05 00 00 00
0000120 00 80 00 00 01 70 a0 e3 00 00 a0 e3 00 00 00 ef
0000140 41 13 00 00 00 61 65 61 62 69 00 01 09 00 00 00
0000160 06 01 08 01 00 2e 73 68 73 74 72 74 61 62 00 2e
0000200 74 65 78 74 00 2e 41 52 4d 2e 61 74 74 72 69 62
0000220 75 74 65 73 00 00 00 00 00 00 00 00 00 00 00 00
0000240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
*
0000300 0b 00 00 00 01 00 00 00 06 00 00 00 54 80 00 00
0000320 54 00 00 00 0c 00 00 00 00 00 00 00 00 00 00 00
0000340 04 00 00 00 00 00 00 00 11 00 00 00 03 00 00 70
0000360 00 00 00 00 00 00 00 00 60 00 00 00 14 00 00 00
0000400 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
0000420 01 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00
0000440 74 00 00 00 21 00 00 00 00 00 00 00 00 00 00 00
0000460 01 00 00 00 00 00 00 00
0000470
</pre>

<p>Zákaz výpisu oddělovací hvězdičky:</p>

<pre>
<strong>od -v -t x1 a.out</strong>
&nbsp;
0000000 7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00
0000020 02 00 28 00 01 00 00 00 54 80 00 00 34 00 00 00
0000040 98 00 00 00 00 02 00 05 34 00 20 00 01 00 28 00
0000060 04 00 03 00 01 00 00 00 00 00 00 00 00 80 00 00
0000100 00 80 00 00 60 00 00 00 60 00 00 00 05 00 00 00
0000120 00 80 00 00 01 70 a0 e3 00 00 a0 e3 00 00 00 ef
0000140 41 13 00 00 00 61 65 61 62 69 00 01 09 00 00 00
0000160 06 01 08 01 00 2e 73 68 73 74 72 74 61 62 00 2e
0000200 74 65 78 74 00 2e 41 52 4d 2e 61 74 74 72 69 62
0000220 75 74 65 73 00 00 00 00 00 00 00 00 00 00 00 00
0000240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000300 0b 00 00 00 01 00 00 00 06 00 00 00 54 80 00 00
0000320 54 00 00 00 0c 00 00 00 00 00 00 00 00 00 00 00
0000340 04 00 00 00 00 00 00 00 11 00 00 00 03 00 00 70
0000360 00 00 00 00 00 00 00 00 60 00 00 00 14 00 00 00
0000400 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00
0000420 01 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00
0000440 74 00 00 00 21 00 00 00 00 00 00 00 00 00 00 00
0000460 01 00 00 00 00 00 00 00
0000470
</pre>

<p>Výpis 128 bajtů od offsetu 64 (počet bajtů i offset se zadává
desítkově):</p>

<pre>
<strong>od -j 64 -N 128 -v -t x1 a.out</strong>
&nbsp;
0000100 00 80 00 00 60 00 00 00 60 00 00 00 05 00 00 00
0000120 00 80 00 00 01 70 a0 e3 00 00 a0 e3 00 00 00 ef
0000140 41 13 00 00 00 61 65 61 62 69 00 01 09 00 00 00
0000160 06 01 08 01 00 2e 73 68 73 74 72 74 61 62 00 2e
0000200 74 65 78 74 00 2e 41 52 4d 2e 61 74 74 72 69 62
0000220 75 74 65 73 00 00 00 00 00 00 00 00 00 00 00 00
0000240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000300
</pre>

<p>Výpis 128 bajtů od offsetu 64 (počet bajtů i offset se zadává
v&nbsp;šestnáctkové soustavě):</p>

<pre>
<strong>od -j 0x40 -N 0x80 -v -t x1 a.out</strong>
&nbsp;
0000100 00 80 00 00 60 00 00 00 60 00 00 00 05 00 00 00
0000120 00 80 00 00 01 70 a0 e3 00 00 a0 e3 00 00 00 ef
0000140 41 13 00 00 00 61 65 61 62 69 00 01 09 00 00 00
0000160 06 01 08 01 00 2e 73 68 73 74 72 74 61 62 00 2e
0000200 74 65 78 74 00 2e 41 52 4d 2e 61 74 74 72 69 62
0000220 75 74 65 73 00 00 00 00 00 00 00 00 00 00 00 00
0000240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
0000300
</pre>

<p>Každé čtyři bajty jsou považovány za číslo ve formátu <i>single/float</i>
podle IEEE 754. Zde se sice jedná o zcela nesmyslný výstup, ovšem při načítán
binárních souborů s&nbsp;poli se může hodit:</p>

<pre>
<strong>od -t f4 a.out</strong>
&nbsp;
0000000       13073.374      9.2196e-41               0               0
0000020    3.673423e-39           1e-45      4.6035e-41         7.3e-44
0000040        2.13e-43   6.0188984e-36    2.938809e-39    3.673421e-39
0000060     2.75512e-40           1e-45               0      4.5918e-41
0000100      4.5918e-41        1.35e-43        1.35e-43           7e-45
0000120      4.5918e-41  -5.9190996e+21   -5.902958e+21  -3.9614081e+28
0000140       6.907e-42   2.6445587e+20   2.3585495e-38         1.3e-44
0000160    2.497999e-38   4.5935344e+24    7.683702e+31    2.919121e-11
0000200    7.871993e+31   2.0742511e+11   7.1362664e+31  1.07658465e+21
0000220   1.8179291e+31               0               0               0
0000240               0               0               0               0
*
0000300         1.5e-44           1e-45           8e-45      4.6035e-41
0000320        1.18e-43         1.7e-44               0               0
0000340           6e-45               0         2.4e-44   1.5845638e+29
0000360               0               0        1.35e-43         2.8e-44
0000400               0               0           1e-45               0
0000420           1e-45           4e-45               0               0
0000440        1.63e-43         4.6e-44               0               0
0000460           1e-45               0
0000470
</pre>

<p>Následující příklad vypíše část sektoru ze zvoleného blokového zařízení,
dejte si ovšem pozor, že <strong>od</strong> bude poctivě
&bdquo;seekovat&ldquo; na zadaný offset:</p>

<pre>
<strong>sudo od -j 100000000 -N 256 -v -t x1 /dev/sda1</strong>
&nbsp;
...
...
...
</pre>

<img src="https://i.iinfo.cz/images/2/hexa2-4.png" class="image-311442" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 10: Alternativní způsob, kdy se kromě kódů znaků zobrazí i jejich
jméno v&nbsp;ASCII.</i></p>



<p><a name="k06"></a></p>
<h2 id="k06">6. Nástroj <strong>hexdump</strong></h2>

<p>Druhá utilitka, kterou si dnes popíšeme, se jmenuje
<strong>hexdump</strong>, zkráceně též <strong>hd</strong> (druhé zmíněné jméno
tvoří symbolický odkaz na binární spustitelný soubor <strong>hexdump</strong>).
Podobně jako u výše popsaného nástroje <strong>od</strong> je i jméno
<strong>hexdump</strong> poněkud matoucí, protože <strong>hexdump</strong>
dokáže vypsat obsah vybraného binárního souboru jak s&nbsp;využitím
šestnáctkové soustavy, tak i s&nbsp;využitím soustavy desítkové a osmičkové.
Kromě toho dokáže <strong>hexdump</strong> zobrazit obsah souboru
s&nbsp;využitím &bdquo;kanonického zobrazení&ldquo;, což u hexadecimálních
prohlížečů a editorů znamená s&nbsp;použitím tří sloupců: adres (offsetů),
obsahu šestnácti bajtů a znaků reprezentovaných těmito bajty. Specifikovat je
možné jak počáteční adresu (offset od začátku souboru), tak i počet vypsaných
bajtů, podobně jako ve výše zmíněné utilitě <strong>od</strong>. Pokud navíc
nějaký formát výstupu používáte častěji, lze ho uložit do souboru a ten potom
použít pro formátování.</p>


<img src="https://i.iinfo.cz/images/2/hexa2-5.png" class="image-311443" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 11: Výpis obsahu souboru v&nbsp;šestnáctkovém režimu, ovšem se
sdružením bajtů do dvojic.</i></p>

<p>Opět si ukažme několik příkladů použití utility
<strong>hexdump</strong>:</p>

<p>Pokud se použije příkaz <strong>hd</strong>, je implicitně povolen
&bdquo;kanonický formát&ldquo;:</p>

<pre>
<strong>hd a.out</strong>
&nbsp;
00000000  7f 45 4c 46 01 01 01 00  00 00 00 00 00 00 00 00  |.ELF............|
00000010  02 00 28 00 01 00 00 00  54 80 00 00 34 00 00 00  |..(.....T...4...|
00000020  98 00 00 00 00 02 00 05  34 00 20 00 01 00 28 00  |........4. ...(.|
00000030  04 00 03 00 01 00 00 00  00 00 00 00 00 80 00 00  |................|
00000040  00 80 00 00 60 00 00 00  60 00 00 00 05 00 00 00  |....`...`.......|
00000050  00 80 00 00 01 70 a0 e3  00 00 a0 e3 00 00 00 ef  |.....p..........|
00000060  41 13 00 00 00 61 65 61  62 69 00 01 09 00 00 00  |A....aeabi......|
00000070  06 01 08 01 00 2e 73 68  73 74 72 74 61 62 00 2e  |......shstrtab..|
00000080  74 65 78 74 00 2e 41 52  4d 2e 61 74 74 72 69 62  |text..ARM.attrib|
00000090  75 74 65 73 00 00 00 00  00 00 00 00 00 00 00 00  |utes............|
000000a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
000000c0  0b 00 00 00 01 00 00 00  06 00 00 00 54 80 00 00  |............T...|
000000d0  54 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00  |T...............|
000000e0  04 00 00 00 00 00 00 00  11 00 00 00 03 00 00 70  |...............p|
000000f0  00 00 00 00 00 00 00 00  60 00 00 00 14 00 00 00  |........`.......|
00000100  00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00  |................|
00000110  01 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|
00000120  74 00 00 00 21 00 00 00  00 00 00 00 00 00 00 00  |t...!...........|
00000130  01 00 00 00 00 00 00 00                           |........|
00000138
</pre>

<p>Standardní formát použitý při volbě příkazu <strong>hexdump</strong> a
nikoli <strong>hd</strong>:</p>

<pre>
<strong>hexdump a.out</strong>
&nbsp;
0000000   17791   17996   00257   00001   00000   00000   00000   00000
0000010   00002   00040   00001   00000   32852   00000   00052   00000
0000020   00152   00000   00512   01280   00052   00032   00001   00040
0000030   00004   00003   00001   00000   00000   00000   32768   00000
0000040   32768   00000   00096   00000   00096   00000   00005   00000
0000050   32768   00000   28673   58272   00000   58272   00000   61184
0000060   04929   00000   24832   24933   26978   00256   00009   00000
0000070   00262   00264   11776   26739   29811   29810   25185   11776
0000080   25972   29816   11776   21057   11853   29793   29300   25193
0000090   29813   29541   00000   00000   00000   00000   00000   00000
00000a0   00000   00000   00000   00000   00000   00000   00000   00000
*
00000c0   00011   00000   00001   00000   00006   00000   32852   00000
00000d0   00084   00000   00012   00000   00000   00000   00000   00000
00000e0   00004   00000   00000   00000   00017   00000   00003   28672
00000f0   00000   00000   00000   00000   00096   00000   00020   00000
0000100   00000   00000   00000   00000   00001   00000   00000   00000
0000110   00001   00000   00003   00000   00000   00000   00000   00000
0000120   00116   00000   00033   00000   00000   00000   00000   00000
0000130   00001   00000   00000   00000                                
0000138
</pre>

<p>Při použití <strong>hexdump</strong> musíme kanonický formát povolit volbou
<strong>-C</strong>:</p>

<pre>
<strong>hexdump -C a.out</strong>
&nbsp;
00000000  7f 45 4c 46 01 01 01 00  00 00 00 00 00 00 00 00  |.ELF............|
00000010  02 00 28 00 01 00 00 00  54 80 00 00 34 00 00 00  |..(.....T...4...|
00000020  98 00 00 00 00 02 00 05  34 00 20 00 01 00 28 00  |........4. ...(.|
00000030  04 00 03 00 01 00 00 00  00 00 00 00 00 80 00 00  |................|
00000040  00 80 00 00 60 00 00 00  60 00 00 00 05 00 00 00  |....`...`.......|
00000050  00 80 00 00 01 70 a0 e3  00 00 a0 e3 00 00 00 ef  |.....p..........|
00000060  41 13 00 00 00 61 65 61  62 69 00 01 09 00 00 00  |A....aeabi......|
00000070  06 01 08 01 00 2e 73 68  73 74 72 74 61 62 00 2e  |......shstrtab..|
00000080  74 65 78 74 00 2e 41 52  4d 2e 61 74 74 72 69 62  |text..ARM.attrib|
00000090  75 74 65 73 00 00 00 00  00 00 00 00 00 00 00 00  |utes............|
000000a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
000000c0  0b 00 00 00 01 00 00 00  06 00 00 00 54 80 00 00  |............T...|
000000d0  54 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00  |T...............|
000000e0  04 00 00 00 00 00 00 00  11 00 00 00 03 00 00 70  |...............p|
000000f0  00 00 00 00 00 00 00 00  60 00 00 00 14 00 00 00  |........`.......|
00000100  00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00  |................|
00000110  01 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|
00000120  74 00 00 00 21 00 00 00  00 00 00 00 00 00 00 00  |t...!...........|
00000130  01 00 00 00 00 00 00 00                           |........|
00000138
</pre>

<p>Zákaz použití oddělovací hvězdičky:</p>

<pre>
<strong>hd -v a.out</strong>
&nbsp;
00000000  7f 45 4c 46 01 01 01 00  00 00 00 00 00 00 00 00  |.ELF............|
00000010  02 00 28 00 01 00 00 00  54 80 00 00 34 00 00 00  |..(.....T...4...|
00000020  98 00 00 00 00 02 00 05  34 00 20 00 01 00 28 00  |........4. ...(.|
00000030  04 00 03 00 01 00 00 00  00 00 00 00 00 80 00 00  |................|
00000040  00 80 00 00 60 00 00 00  60 00 00 00 05 00 00 00  |....`...`.......|
00000050  00 80 00 00 01 70 a0 e3  00 00 a0 e3 00 00 00 ef  |.....p..........|
00000060  41 13 00 00 00 61 65 61  62 69 00 01 09 00 00 00  |A....aeabi......|
00000070  06 01 08 01 00 2e 73 68  73 74 72 74 61 62 00 2e  |......shstrtab..|
00000080  74 65 78 74 00 2e 41 52  4d 2e 61 74 74 72 69 62  |text..ARM.attrib|
00000090  75 74 65 73 00 00 00 00  00 00 00 00 00 00 00 00  |utes............|
000000a0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000000b0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
000000c0  0b 00 00 00 01 00 00 00  06 00 00 00 54 80 00 00  |............T...|
000000d0  54 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00  |T...............|
000000e0  04 00 00 00 00 00 00 00  11 00 00 00 03 00 00 70  |...............p|
000000f0  00 00 00 00 00 00 00 00  60 00 00 00 14 00 00 00  |........`.......|
00000100  00 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00  |................|
00000110  01 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|
00000120  74 00 00 00 21 00 00 00  00 00 00 00 00 00 00 00  |t...!...........|
00000130  01 00 00 00 00 00 00 00                           |........|
00000138
</pre>

<p>Použití osmičkové soustavy:</p>

<pre>
<strong>hexdump -b a.out</strong>
&nbsp;
0000000 177 105 114 106 001 001 001 000 000 000 000 000 000 000 000 000
0000010 002 000 050 000 001 000 000 000 124 200 000 000 064 000 000 000
0000020 230 000 000 000 000 002 000 005 064 000 040 000 001 000 050 000
0000030 004 000 003 000 001 000 000 000 000 000 000 000 000 200 000 000
0000040 000 200 000 000 140 000 000 000 140 000 000 000 005 000 000 000
0000050 000 200 000 000 001 160 240 343 000 000 240 343 000 000 000 357
0000060 101 023 000 000 000 141 145 141 142 151 000 001 011 000 000 000
0000070 006 001 010 001 000 056 163 150 163 164 162 164 141 142 000 056
0000080 164 145 170 164 000 056 101 122 115 056 141 164 164 162 151 142
0000090 165 164 145 163 000 000 000 000 000 000 000 000 000 000 000 000
00000a0 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000 000
*
00000c0 013 000 000 000 001 000 000 000 006 000 000 000 124 200 000 000
00000d0 124 000 000 000 014 000 000 000 000 000 000 000 000 000 000 000
00000e0 004 000 000 000 000 000 000 000 021 000 000 000 003 000 000 160
00000f0 000 000 000 000 000 000 000 000 140 000 000 000 024 000 000 000
0000100 000 000 000 000 000 000 000 000 001 000 000 000 000 000 000 000
0000110 001 000 000 000 003 000 000 000 000 000 000 000 000 000 000 000
0000120 164 000 000 000 041 000 000 000 000 000 000 000 000 000 000 000
0000130 001 000 000 000 000 000 000 000                                
0000138
</pre>

<p>Výpis znaků popř.&nbsp;jejich symbolických jmen v&nbsp;ASCII:</p>

<pre>
<strong>hexdump -c a.out</strong>
&nbsp;
0000000 177   E   L   F 001 001 001  \0  \0  \0  \0  \0  \0  \0  \0  \0
0000010 002  \0   (  \0 001  \0  \0  \0   T 200  \0  \0   4  \0  \0  \0
0000020 230  \0  \0  \0  \0 002  \0 005   4  \0      \0 001  \0   (  \0
0000030 004  \0 003  \0 001  \0  \0  \0  \0  \0  \0  \0  \0 200  \0  \0
0000040  \0 200  \0  \0   `  \0  \0  \0   `  \0  \0  \0 005  \0  \0  \0
0000050  \0 200  \0  \0 001   p       ă  \0  \0       ă  \0  \0  \0   ď
0000060   A 023  \0  \0  \0   a   e   a   b   i  \0 001  \t  \0  \0  \0
0000070 006 001  \b 001  \0   .   s   h   s   t   r   t   a   b  \0   .
0000080   t   e   x   t  \0   .   A   R   M   .   a   t   t   r   i   b
0000090   u   t   e   s  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
00000a0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
*
00000c0  \v  \0  \0  \0 001  \0  \0  \0 006  \0  \0  \0   T 200  \0  \0
00000d0   T  \0  \0  \0  \f  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
00000e0 004  \0  \0  \0  \0  \0  \0  \0 021  \0  \0  \0 003  \0  \0   p
00000f0  \0  \0  \0  \0  \0  \0  \0  \0   `  \0  \0  \0 024  \0  \0  \0
0000100  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0000110 001  \0  \0  \0 003  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0000120   t  \0  \0  \0   !  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0000130 001  \0  \0  \0  \0  \0  \0  \0                                
0000138
</pre>

<img src="https://i.iinfo.cz/images/2/hexa2-6.png" class="image-311444" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 12: Výpis obsahu souboru s&nbsp;využitím osmičkové
soustavy.</i></p>

<img src="https://i.iinfo.cz/images/654/hexa2-1.png" class="image-311445" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 13: &bdquo;Kanonický&ldquo; režim výstupu, který je použit i
v&nbsp;prakticky všech ostatních dnes popisovaných nástrojích.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Filtr <strong>xxd</strong> určený pro převod mezi binárním souborem a zvolenou číselnou reprezentací</h2>

<p>Ani další nástroj, o němž se v&nbsp;dnešním článku zmíníme, nepatří mezi
běžné hexadecimální editory, vlastně se nejedná ani o plnohodnotný prohlížeč.
Tímto nástrojem je filtr nazvaný <strong>xxd</strong>. Slovo
&bdquo;filtr&ldquo; jsem na tomto místě použil záměrně, neboť
<strong>xxd</strong> slouží k&nbsp;převodu binárního souboru na textový soubor,
v&nbsp;němž jsou původní data uložena do třech sloupců: adresy, číselných
hodnot jednotlivých bajtů či slov a řetězcové podoby těchto bajtů. Co činí
<strong>xxd</strong> užitečným je možnost zpětného převodu takto zformátovaného
textového souboru zpět do binární podoby (přičemž se v&nbsp;úvahu bere jen
prostřední sloupec s&nbsp;číselnými hodnotami bajtů).</p>

<img src="https://i.iinfo.cz/images/512/hexa3-1.png" class="image-311446" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 14: Nápověda k&nbsp;filtru <strong>xxd</strong>.</i></p>

<p>Díky této vlastnosti je možné jakýkoli binární soubor převést do textové
podoby, změnit tento soubor v&nbsp;libovolném oblíbeném textovém editoru a
následně provést zpětný převod. Aby toho nebylo málo, je možné použít několik
voleb ovlivňujících tvar textového souboru: změnit lze číselnou soustavu,
sdružování bajtů do slov atd. Perlička na závěr: <strong>xxd</strong> je jedním
z&nbsp;mála programů rozpoznávajících kromě ASCII kódování i EBCDIC (jednou
jsem tuto vlastnost dokonce využil pro export dat z&nbsp;mainframu do PC
:-).</p>

<p>Na dalších screenshotech je ukázáno, jaký vliv mají různé volby na způsob
zobrazení binárního souboru:</p>

<img src="https://i.iinfo.cz/images/512/hexa3-2.png" class="image-311447" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 15: Volbou <strong>-g1</strong> je možné <strong>xxd</strong>
donutit ke způsobu zobrazení známého z&nbsp;ostatních hexadecimálních
editorů.</i></p>

<img src="https://i.iinfo.cz/images/512/hexa3-3.png" class="image-311448" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 16: Volba <strong>-g2</strong> je vhodná v&nbsp;případě, že jsou
v&nbsp;binárním souboru uložena 16bitová data.</i></p>

<img src="https://i.iinfo.cz/images/512/hexa3-4.png" class="image-311449" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 17: Sdružování bajtů do čtyřbajtových (32bitových) slov.</i></p>

<img src="https://i.iinfo.cz/images/512/hexa3-5.png" class="image-311450" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 18: Zajímavá může být i kombinace voleb <strong>-g1 -b</strong>,
kdy se namísto šestnáctkové soustavy použije soustava dvojková. Je tak
například možné hledat obrázky a sprity v&nbsp;maskách ROM starých her.</i></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Prohlížeč binárních souborů zabudovaný do Midnight Commanderu</h2>

<p>Prohlížeč binárních souborů mohou používat i uživatelé stále velmi
oblíbeného <i>Midnight Commanderu</i>. Tento prohlížeč, který se implicitně
spouští klávesovou zkratkou <strong>F3</strong> (popř.&nbsp;z&nbsp;příkazového
řádku pomocí <strong>mcview</strong>, což je symbolický odkaz na
<strong>mc</strong>), je možné využít ve třech režimech: buď je obsah zvoleného
souboru zobrazen jako text přímo načtený ze souboru a nijak dál nezpracovaný
(<i>raw</i>), popř.&nbsp;prohlížeč zavolá externí nástroj pro filtraci
vstupního souboru na text (příkladem je zobrazení HTML, konfiguruje se
v&nbsp;souboru <strong>mc.ext</strong>), nebo se prohlížeč přepne do téměř
klasického pohledu používaného i mnohými dalšími hexadecimálníni prohlížeči a
hexadecimálními editory.</p>

<img src="https://i.iinfo.cz/images/384/hexa4-1.png" class="image-311452" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 19: Hexadecimální prohlížeč, který je součástí souborového
manažeru Midnight Commander.</i></p>

<p>Za zmínku stojí dvě zajímavé vlastnosti. První vlastností je velmi dobrá
podpora pro hledání řetězců či sekvence bajtů (viz též příslušný obrázek).
Další užitečná vlastnost spočívá v&nbsp;možnosti volby kódování znaků (opět
zobrazeno na screenshotu), protože například při opravě databázových souborů či
uložených stavů her je nutné zvolit stejné kódování, jaké je interně použito
v&nbsp;dané aplikaci (a ne vždy se jedná o UTF-8, dokonce bych řekl, že toto
kódování je u binárních souborů stále spíše dosti výjimečné).</p>

<img src="https://i.iinfo.cz/images/384/hexa4-2.png" class="image-311453" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 20: Možnosti prohledávání nabízené interním hexadecimálním
prohlížečem Midnight Commanderu.</i></p>

<p>V&nbsp;následující tabulce jsou zobrazeny nejdůležitější klávesové zkratky
tohoto prohlížeče, a to včetně poněkud skryté zkratky pro volbu kódování (tato
zkratka totiž není mapována na funkční klávesy <strong>F1</strong> až
<strong>F10</strong>):</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>F2</td><td>přepnutí režimu odřádkování při zobrazení textu</td></tr>
<tr><td>F4</td><td>přepnutí mezi textovým a hexa režimem</td></tr>
<tr><td>F8</td><td>přepnutí mezi &bdquo;raw&ldquo; režimem (zobrazení obsahu souboru) a filtrovaným vstupem</td></tr>
<tr><td>F9</td><td>přepnutí mezi interpretací některých znaků speciálním způsobem (příkladem jsou man stránky, obrázek 23)</td></tr>
<tr><td>Alt+E</td><td>přepnutí znakové sady</td></tr>
<tr><td>Alt+R</td><td>zobrazení pravítka nahoře/dole/nikde</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>F5</td><td>přechod na řádek</td></tr>
<tr><td>F6</td><td>vyhledávání s&nbsp;využitím regulárních výrazů</td></tr>
<tr><td>/</td><td>vyhledávání s&nbsp;využitím regulárních výrazů</td></tr>
<tr><td>?</td><td>vyhledávání, ale opačným směrem</td></tr>
<tr><td>F7</td><td>vyhledávání (včetně možnosti práce s&nbsp;hexa kódy)</td></tr>
</table>

<img src="https://i.iinfo.cz/images/384/hexa4-3.png" class="image-311454" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 21: Velmi důležitá funkce interního hexadecimálního prohlížeče
&ndash; volba kódování znaků.</i></p>

<img src="https://i.iinfo.cz/images/384/hexa4-4.png" class="image-311455" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 22: Nyní se obsah binárního souboru zobrazuje s&nbsp;použitím
azbuky (pravý sloupec se znaky).</i></p>

<img src="https://i.iinfo.cz/images/384/hexa4-5.png" class="image-311456" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 23: Zobrazení manuálové stránky se zapnutou volbou
&bdquo;Format&ldquo; [F9].</i></p>

<img src="https://i.iinfo.cz/images/384/hexa4-6.png" class="image-311457" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 24: Zobrazení manuálové stránky s&nbsp;vypnutou volbou
&bdquo;Format&ldquo; [F9].</i></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Nástroj pro porovnání dvou binárních souborů &ndash; <strong>hexdiff</strong></h2>

<p>Utilitka nazvaná přímočaře <strong>hexdiff</strong> již svým názvem
napovídá, k&nbsp;čemu je určena &ndash; k&nbsp;porovnání dvou (typicky
binárních) souborů. Oproti známé utilitě <strong>diff</strong> se však
v&nbsp;případě <strong>hexdiffu</strong> zobrazí interaktivní prostředí
využívající celou plochu terminálu, v&nbsp;němž se obsah obou porovnávaných
souborů zobrazí podobně, jako v&nbsp;běžných hexadecimálních prohlížečích a
editorech, což je ostatně patrné i z&nbsp;následujícího screenshotu:</p>

<img src="https://i.iinfo.cz/images/330/hexa5-1.png" class="image-311458" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 25: Porovnání dvou spustitelných souborů určených pro Linux
běžící na 32bitové architektuře ARM. Oba soubory mohly vzniknout překladem
stejného zdrojového kódu, ovšem s&nbsp;jinými volbami.</i></p>

<p>Pomocí klávesy <strong>n</strong> je možné se přesunout na další nalezenou
změnu, což je velmi užitečné, především při hledání rozdílů mezi velkými
soubory. Poněkud netypickým příkladem použití může být oprava struktury FAT na
paměťové kartě (samotná FAT existuje ve dvou kopiích), protože tento souborový
systém se bohužel stále používá (fotoaparáty atd.), i když je
z&nbsp;technologického hlediska pro paměťové karty zcela nevhodný.</p>

<p>Klávesové zkratky této utility:</p>

<table>
<tr><th>Zkratka</th><th>Význam</th></tr>
<tr><td>0 $</td><td>přesun kurzoru na začátek/konec řádku</td></tr>
<tr><td>u d</td><td>přesun pohledu nahoru/dolů o jeden řádek</td></tr>
<tr><td>j k</td><td>dtto (pozor &ndash; přesně opačně než ve Vimu!)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>n</td><td>přesun na další nalezenou změnu (nejužitečnější příkaz)</td></tr>
<tr><td>i</td><td>zobrazení informací o inode prvního souboru</td></tr>
<tr><td>I</td><td>zobrazení informací o inode obou souborů</td></tr>
<tr><td>TAB</td><td>přepnutí mezi soubory (vlastně jen zobrazení změn ve druhém souboru)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>H</td><td>přepnutí zobrazení offsetů (první sloupec) mezi hexadecimální a desítkovou soustavou</td></tr>
<tr><td>g</td><td>umožní zadání offsetu (adresy, od které se prohlíží)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>x q</td><td>ukončení prohlížeče</td></tr>
</table>

<img src="https://i.iinfo.cz/images/330/hexa5-2.png" class="image-311459" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 26: Po stisku klávesové zkratky <strong>I</strong> (velké I) se
zobrazí informace o inodech obou porovnávaných souborů.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Hexadecimální editory dostupné pro Linux</h2>

<p>V&nbsp;navazujících kapitolách si popíšeme vybrané hexadecimální editory
dostupné pro Linux. Zaměříme se přitom na ty nástroje, které pro komunikaci
s&nbsp;uživatelem používají textové uživatelské rozhraní. Všechny dále zmíněné
hexadecimální editory dokážou správně pracovat při jakékoli (rozumné) velikosti
terminálu, i když screenshoty byly kvůli možnosti porovnání se staršími
programy určenými pro textový režim IBM PC pořízeny na terminálu s&nbsp;pouhými
dvaceti pěti textovými řádky a osmdesáti znaky na řádek. Většina editorů
využívá &bdquo;klasické&ldquo; rozložení obrazovky na tři sloupce (adresy,
hexa/deci/binární data, znaky), ovšem jejich ovládání se odlišuje &ndash; u
některých nástrojů najdeme emulaci klávesových zkratek editoru Vi, u dalších
pak spíše návaznost na Emacs či na velmi populární DOSovský hexadecimální
editor HIEW.</p>

<img src="https://i.iinfo.cz/images/330/hexa5-3.png" class="image-311460" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 27: Hexadecimální editor <strong>bvi</strong>: důležitá sekce
nápovědy, ve které se popisuje rozdíl mezi textovým editorem Vi a binárním
editorem Bvi.</i></p>

<p>U většiny hexadecimálních editorů s&nbsp;textovým uživatelským rozhraním se
setkáme s&nbsp;velmi důležitou vlastností &ndash; tyto editory se nesnaží
načíst celý editovaný soubor (či dokonce celý souborový systém), ale pracují
vždy pouze s&nbsp;vybraným blokem, což může být řádově několik (desítek)
sektorů. Díky této vlastnosti je možné efektivně pracovat i se soubory, které
jsou mnohonásobně větší, než je volná kapacita operační paměti. U běžných
textových editorů je implementace této vlastnosti mnohem složitější, neboť se
při editaci mění (a to prakticky neustále) délka souboru.</p>

<img src="https://i.iinfo.cz/images/330/hexa5-4.png" class="image-311461" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 28: Důležitá vlastnost většiny běžných hexadecimálních editorů
&ndash; i při editaci obrovského souboru (zde konkrétně videa) nebo dokonce
souborového systému se do paměti načítá jen krátký blok, nikoli celý
soubor/systém.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Hexadecimální editor nazvaný <strong>bvi</strong></h2>

<p>Prvním plnohodnotným hexadecimálním editorem, který si dnes popíšeme, je
nástroj nazvaný <strong>bvi</strong>. Jméno této aplikace je odvozeno od
dvojice slov &bdquo;binary&ldquo; a &bdquo;vi&ldquo;, což již naznačuje, že se
jedná o nástroj, jehož ovládání bude do značné míry podobné ovládání textových
editorů <strong>Vi</strong> a <strong>Vim</strong>. Skutečně je tomu tak,
samozřejmě s&nbsp;tím rozdílem, že <strong>bvi</strong> používá stejný způsob
zobrazení jako mnohé další hexadecimální editory, což je ostatně patrné i při
pohledu na screenshoty zobrazené v&nbsp;této kapitole.</p>

<img src="https://i.iinfo.cz/images/623/hexa6-1.png" class="image-311462" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 29: Hexadecimální editor <strong>bvi</strong>: textové
uživatelské rozhraní binárního editoru Bvi.</i></p>

<p>Dalším rozdílem mezi <strong>Vi</strong> a <strong>Bvi</strong> je změněné
chování některých operací, což je ale pochopitelné, neboť binární soubory jsou
zpracovávány jako jeden dlouhý blok bajtů a nikoli jako sekvence textových
řádků. Zajímavé ovšem je, že <strong>bvi</strong> je možné volbou
&bdquo;memmove&ldquo; přepnout do režimu, v&nbsp;němž je možné jednotlivé bajty
přidávat či naopak umazávat (což je operace, která je v&nbsp;některých dalších
hexadecimálních editorech nedostupná a v&nbsp;mnoha případech vlastně i
nesmyslná).</p>

<img src="https://i.iinfo.cz/images/623/hexa6-2.png" class="image-311463" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 30: Hexadecimální editor <strong>bvi</strong>: výpis všech
parametrů editoru, které je možné kdykoli změnit.</i></p>

<p>V&nbsp;následující tabulce naleznete základní příkazy editoru
<strong>bvi</strong>, které se skutečně příliš neliší od originálního
<strong>vi</strong>:</p>

<table>
<tr><th> #</th><th>Příkaz</th><th>Význam</th></tr>
<tr><td> 1</td><td>r</td><td>přepis bajtu (režim <i>replace</i>)</td></tr>
<tr><td> 2</td><td>R</td><td>přepis většího množství bajtů (režim <i>replace</i>)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 3</td><td>i</td><td>vkládání bajtů (režim <i>insert</i>), musí se povolit pomocí <strong>memmove</strong></td></tr>
<tr><td> 4</td><td>x</td><td>smazání bajtu, musí se povolit pomocí <strong>memmove</strong></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 5</td><td>/</td><td>vyhledávání (směrem dopředu)</td></tr>
<tr><td> 6</td><td>?</td><td>vyhledávání (směrem dozadu)</td></tr>
<tr><td> 7</td><td>n</td><td>posun kurzoru na následující výskyt hledaného řetězce/hodnoty</td></tr>
<tr><td> 8</td><td>N</td><td>posun kurzoru na předchozí výskyt hledaného řetězce/hodnoty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 9</td><td>.</td><td>opakování posledního příkazu (ideální v&nbsp;kombinaci s&nbsp;<strong>r</strong>)</td></tr>
<tr><td>10</td><td>u</td><td>undo (poslední změna)</td></tr>
<tr><td>11</td><td>TAB</td><td>přesun mezi hexa hodnotami a znaky (druhý a třetí sloupec)</td></tr>
</table>

<img src="https://i.iinfo.cz/images/623/hexa6-3.png" class="image-311464" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 31: Hexadecimální editor <strong>bvi</strong>: vlastní editace
binárního souboru.</i></p>

<p>Druhá tabulka obsahuje příkazy pro pohyb v&nbsp;souboru:</p>

<table>
<tr><th> #</th><th>Příkaz</th><th>Význam</th></tr>
<tr><td> 1</td><td>h j k l</td><td>posun kurzoru po jednotlivých znacích či bajtech</td></tr>
<tr><td> 2</td><td>^ $</td><td>posun kurzoru na začátek/konec řádku</td></tr>
<tr><td> 3</td><td>w</td><td>posun kurzoru na další slovo (platí pro pravý sloupec)</td></tr>
<tr><td> 4</td><td>e</td><td>posun kurzoru na konec slova (platí pro pravý sloupec, pokud je kurzor na slovu)</td></tr>
<tr><td> 5</td><td>b</td><td>posun kurzoru na začátek slova (platí pro pravý sloupec)</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 6</td><td>Ctrl+B</td><td>scrollování směrem nahoru o celou obrazovku</td></tr>
<tr><td> 7</td><td>Ctrl+F</td><td>scrollování směrem nahoru o celou obrazovku</td></tr>
<tr><td> 8</td><td>Ctrl+U</td><td>scrollování směrem nahoru o polovinu obrazovky</td></tr>
<tr><td> 9</td><td>Ctrl+D</td><td>scrollování směrem nahoru o polovinu obrazovky</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>10</td><td>H</td><td>přesun na první řádek na obrazovce</td></tr>
<tr><td>11</td><td>L</td><td>přesun na poslední řádek na obrazovce</td></tr>
<tr><td>12</td><td>M</td><td>přesun na prostřední řádek</td></tr>
</table>

<img src="https://i.iinfo.cz/images/623/hexa6-4.png" class="image-311465" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 32: Hexadecimální editor <strong>bvi</strong>: režim přepisu
znaků.</i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Nástroj <strong>hexer</strong></h2>

<p>Další hexadecimální editor dostupný pro operační systém Linux se nazývá
příznačně <strong>hexer</strong>. Tato aplikace je opět určena pro spuštění
v&nbsp;terminálu (konzoli) a způsob jejího ovládání je velmi podobný <a
href="#11">výše popsanému</a> nástroji <strong>bvi</strong>. Je tomu tak
z&nbsp;toho důvodu, že jak <strong>hexer</strong> tak i <strong>bvi</strong>
používají klávesové zkratky (příkazy) odvozené od zkratek využívaných
v&nbsp;textovém editoru <i>vi</i> i v&nbsp;jeho následovnících (pozor ovšem na
to, že existuje stejnojmenný hexadecimální editor vybavený grafickým
uživatelským rozhraním, který se však ovládá poněkud odlišně). Oba zmíněné
hexadecimální editory, tj.&nbsp;jak <strong>bvi</strong>, tak i
<strong>hexer</strong>, taktéž zobrazují obsah editovaného binárního souboru
podobným způsobem, což je ostatně velmi dobře patrné při pohledu na
screenshoty, které můžete najít pod tímto odstavcem.</p>

<img src="https://i.iinfo.cz/images/286/hexa7-1.png" class="image-311466" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 33: Manuálová stránka k&nbsp;nástroji <strong>hexer</strong>.</i></p>

<p>Mezi důležité vlastnosti editoru <strong>hexer</strong> (které nejsou patrné
na první pohled) patří podpora většího množství bufferů, mezi nimiž je možné se
přepínat. Zajímavé přitom je, že i některé na první pohled vyspělejší hexa
editory tuto možnost postrádají. Dále je možné používat operaci typu
<strong>undo</strong> se zvoleným počtem zapamatovaných minulých stavů. Další
velmi užitečnou vlastností je podpora pro takzvané binární regulární výrazy,
které jsou obdobou běžných regulárních výrazů, ovšem s&nbsp;tím rozšířením, že
je do nich možné zapisovat i číselné kódy bajtů s&nbsp;využitím různých
číselných základů (osmičková soustava, šestnáctková soustava), tyto kódy se
v&nbsp;případě potřeby zapisují i ve formě &bdquo;řetězců&ldquo; stylem
&bdquo;\xxff fe*&ldquo; atd.</p>

<img src="https://i.iinfo.cz/images/286/hexa7-2.png" class="image-311467" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 34: Takto vypadá uživatelské prostředí nástroje <strong>hexer</strong>.</i></p>

<p>V&nbsp;předchozím textu jsme si řekli, že aplikace <strong>hexer</strong>
používá podobné příkazy jako známý textový editor <i>vi</i> či <i>Vim</i>.
V&nbsp;následující tabulce jsou vybrané příkazy vypsány, takže je velmi snadné
porovnat, do jaké míry je <strong>hexer</strong> z&nbsp;hlediska ovládání
editoru <i>vi</i> podobný či naopak rozdílný:</p>

<table>
<tr><th> #</th><th>Příkaz</th><th>Význam</th></tr>
<tr><td> 1</td><td>h j k l</td><td>posun kurzoru po jednotlivých znacích či bajtech</td></tr>
<tr><td> 2</td><td>w</td><td>posun kurzoru na další slovo (platí pro pravý sloupec)</td></tr>
<tr><td> 3</td><td>e</td><td>posun kurzoru na konec slova (platí pro pravý sloupec)</td></tr>
<tr><td> 4</td><td>b</td><td>posun kurzoru na začátek slova (platí pro pravý sloupec)</td></tr>
<tr><td> 5</td><td>n</td><td>posun kurzoru na následující výskyt hledaného řetězce/hodnoty</td></tr>
<tr><td> 6</td><td>N</td><td>posun kurzoru na předchozí výskyt hledaného řetězce/hodnoty</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>r</td><td>přepis bajtu (režim <i>replace</i>)</td></tr>
<tr><td> 8</td><td>R</td><td>přepis většího množství bajtů (režim <i>replace</i>)</td></tr>
<tr><td> 9</td><td>i</td><td>vkládání bajtů (režim <i>insert</i>)</td></tr>
<tr><td>10</td><td>v</td><td>vizuální režim (výběr bloku)</td></tr>
<tr><td>11</td><td>x</td><td>smazání bajtu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>12</td><td>/</td><td>vyhledávání (směrem dopředu)</td></tr>
<tr><td>13</td><td>?</td><td>vyhledávání (směrem dozadu)</td></tr>
<tr><td>14</td><td>.</td><td>opakování posledního příkazu</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>15</td><td>y</td><td>yank (odpovídá příkazu <i>copy</i>)</td></tr>
<tr><td>16</td><td>p</td><td>paste</td></tr>
</table>

<img src="https://i.iinfo.cz/images/286/hexa7-3.png" class="image-311468" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 35: Hexer podporuje i vizuální bloky, podobně jako textový editor Vim.</i></p>

<p>Velmi užitečné je, že před většinu příkazů je možné v&nbsp;případě potřeby
zapsat počet opakování, opět podobně jako v&nbsp;textovém editoru <i>vi</i>. To
je významný posun oproti &bdquo;obyčejným&ldquo; hexadecimálním editorům.</p>

<img src="https://i.iinfo.cz/images/286/hexa7-4.png" class="image-311469" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 36: Vyhledávání řetězce či sekvence bajtů s&nbsp;využitím příkazu
/ (search).</i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Nástroj <strong>hexedit</strong></h2>

<p>Další hexadecimální editor, který je možné provozovat v&nbsp;terminálu na
Linuxu, se jmenuje <strong>hexedit</strong>. Tento editor vždy zpracovává pouze
aktuálně vybranou část souboru, tj.&nbsp;nesnaží se načíst celý editovaný
soubor do paměti. Dále je možné <strong>hexedit</strong> spustit v&nbsp;režimu,
v&nbsp;němž se na obrazovce vždy zobrazí ta část souboru, která odpovídá celému
sektoru (počáteční adresy budou dělitelné 512 atd.). Obě tyto vlastnosti lze
velmi dobře zkombinovat ve chvíli, kdy se tímto nástrojem edituje souborový
systém dostupný například přes <strong>/dev/sdb1</strong> atd. (samozřejmě to
závisí na konfiguraci vašeho počítače). Dále <strong>hexedit</strong> podporuje
editaci jak ve sloupci s&nbsp;hexadecimálními hodnotami, tak i ve sloupci se
znaky. Přepnutí mezi těmito sloupci zajišťuje klávesa <strong>TAB</strong>, což
je v&nbsp;těchto nástrojích sice nepsaný, ale o to více dodržovaný
standard.</p>

<img src="https://i.iinfo.cz/images/570/hexa8-1.png" class="image-311470" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 37: Textové uživatelské rozhraní nástroje
<strong>hexedit</strong> při editaci binárního spustitelného souboru pro
ARMovskou architekturu.</i></p>

<p>I další vlastnost je velmi užitečná. Hexedit totiž umožňuje vybrat určitou
část editovaného souboru a tuto část přenést jinam či ji vyplnit (<i>fill</i>)
zvoleným vzorkem. Jakým způsobem se tato operace provádí je naznačeno na
dalších třech screenshotech. Doplňme jen, že výběr bloku se provádí klávesovou
zkratkou <strong>Ctrl+mezera</strong> převzatou z&nbsp;Emacsu. Po výběru bloku
se pomocí <strong>Esc+I</strong> či <strong>Alt-I</strong> provede jeho
vyplnění zvoleným vzorkem, pomocí <strong>Esc+W</strong> či
<strong>Alt-W</strong> kopie (<i>copy</i>) a klávesovou zkratkou
<strong>Ctrl-Y</strong> přesun obsahu bloku na jiné místo v&nbsp;souboru
(<i>paste</i>).</p>

<img src="https://i.iinfo.cz/images/570/hexa8-2.png" class="image-311471" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 38: Interaktivní výběr bloku.</i></p>

<img src="https://i.iinfo.cz/images/570/hexa8-3.png" class="image-311472" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 39: Užitečná funkce pro vyplnění vybraného bloku.</i></p>

<img src="https://i.iinfo.cz/images/570/hexa8-4.png" class="image-311473" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 40: Výsledek vyplnění bloku konstantou.</i></p>

<p>Tento editor je možné alespoň do jisté míry ovládat i funkčními
klávesami:</p>

<table>
<tr><th>Klávesa</th><th>Význam</th></tr>
<tr><td>F1</td><td>zobrazení nápovědy</td></tr>
<tr><td>F2</td><td>uložení změn</td></tr>
<tr><td>F3</td><td>otevření jiného souboru</td></tr>
<tr><td>F4</td><td>skok na zvolenou adresu</td></tr>
<tr><td>F5</td><td>přechod na předchozí stránku</td></tr>
<tr><td>F6</td><td>přechod na další stránku</td></tr>
<tr><td>F7</td><td>kopie vybraného bloku (<i>copy</i>)</td></tr>
<tr><td>F8</td><td>vložení vybraného bloku (<i>paste</i>)</td></tr>
<tr><td>F9</td><td>začátek výběru bloku</td></tr>
<tr><td>F10</td><td>ukončení aplikace</td></tr>
</table>

<img src="https://i.iinfo.cz/images/570/hexa8-5.png" class="image-311474" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 41: Režim zobrazení po jednotlivých sektorech.</i></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Podobné jméno i funkce nabízené nástrojem <strong>hexeditor</strong></h2>

<p>Po popisu utility pojmenované <strong>hexedit</strong> si ve stručnosti
popíšeme další nástroj, který je nazvaný velmi podobně &ndash;
<strong>hexeditor</strong>. Tento nástroj pro zobrazení textového uživatelského
rozhraní využívá knihovnu <i>ncurses</i>, což mj.&nbsp;znamená podporu
zobrazení barevného textu a pozadí v&nbsp;terminálu (to lze sice zařídit i bez
<i>ncurses</i>, ale většina aplikací tuto knihovnu používá). Zajímavé je, že
<strong>hexeditor</strong> podporuje i takzvaný &bdquo;bufferovaný režim&ldquo;
v&nbsp;němž je celý editovaný soubor načtený do operační paměti. Díky tomu jsou
podporovány i operace pro mazání bajtů či naopak pro jejich přidávání. Vzhledem
k&nbsp;tomu, že tento režim není možné použít například při přístupu
k&nbsp;blokovým zařízením, je nutné ho explicitně zapnout přepínačem
<strong>-b</strong> či <strong>--buffer</strong>.</p>

<img src="https://i.iinfo.cz/images/570/hexa8-6.png" class="image-311475" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 42: Textové uživatelské rozhraní nástroje
<strong>hexeditor</strong>.</i></p>

<p>Pro ovládání tohoto editoru se používají klávesové zkratky, které se do
značné míry podobají zkratkám textového editoru <strong>Pico</strong> a od něj
odvozeného editoru <strong>Nano</strong> (přesněji GNU Nano). To je samozřejmě
výhodné pro uživatele těchto editorů (které se stávají standardní součástí
desktopových instalací Linuxu), naopak pro ostatní uživatele jsou tyto
klávesové zkratky spíš matoucí.</p>

<img src="https://i.iinfo.cz/images/570/hexa8-7.png" class="image-311476" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 43: Stránka s&nbsp;vestavěnou nápovědou.</i></p>

<img src="https://i.iinfo.cz/images/570/hexa8-8.png" class="image-311477" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 44: Dialog pro zadání adresy, od níž se má zobrazit obsah
souboru.</i></p>

<img src="https://i.iinfo.cz/images/570/hexa8-9.png" class="image-311478" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 45: Jednoduchá kalkulačka.</i></p>

<img src="https://i.iinfo.cz/images/570/hexa8-10.png" class="image-311479" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 46: Obrazovka s&nbsp;výběrem souboru, jehož obsah se má
zobrazit.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Hexadecimální editor pojmenovaný <strong>dhex</strong></h2>

<p>Další hexadecimální editor, který se jmenuje <strong>dhex</strong>, je
některými svými vlastnosti podobný dále zmíněnému DOSovému hexadecimálnímu
editoru <strong>HIEW</strong>. <strong>dhex</strong> totiž využívá terminál
(konzoli) a mnohé jeho funkce jsou namapovány na funkční klávesy F1 až F10.
Vzhledem k&nbsp;tomu, že na různých emulátorech terminálu se mohou tyto klávesy
chovat odlišným způsobem (posílají jiné sekvence znaků apod.), zobrazí
<strong>dhex</strong> při svém prvním spuštění konfigurační dialog, ve kterém
uživatel jednotlivé klávesy stlačí a <strong>dhex</strong> se je tak jednoduše
&bdquo;naučí&ldquo;.</p>

<img src="https://i.iinfo.cz/images/597/hexa9-1.png" class="image-311480" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 47: Hexadecimální editor <strong>dhex</strong>: integrovaná
nápověda (vypisovaná na standardní výstup).</i></p>

<p>Kromě režimu prohlížení a editace najdeme v&nbsp;tomto hexadecimálním
editoru i užitečnou kalkulačku, která kromě běžných aritmetických operací
používá i bitové posuny a taktéž bitové operace AND, OR, XOR. Změnu barevné
palety <strong>dhexu</strong> je možné provést ruční editací jeho
konfiguračního souboru, který je kupodivu textový a nikoli binární :-).</p>

<img src="https://i.iinfo.cz/images/597/hexa9-2.png" class="image-311481" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 48: Hexadecimální editor <strong>dhex</strong>: při prvním
spuštění je možné tento nástroj nakonfigurovat, zejména si zvolit mapování
funkčních kláves.</i></p>

<img src="https://i.iinfo.cz/images/597/hexa9-3.png" class="image-311482" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 49: Hexadecimální editor <strong>dhex</strong>: základní způsob
zobrazení nabízený tímto nástrojem.</i></p>

<img src="https://i.iinfo.cz/images/597/hexa9-4.png" class="image-311483" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 50: Hexadecimální editor <strong>dhex</strong>: ruční úpravou
konfiguračního souboru jsem dosáhl změny barvy pruhu s&nbsp;funkcemi
tlačítek.</i></p>

<img src="https://i.iinfo.cz/images/597/hexa9-5.png" class="image-311484" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 51: Hexadecimální editor <strong>dhex</strong>: užitečná binární
a hexa kalkulačka, která nabízí i bitové operace a posuny.</i></p>

<img src="https://i.iinfo.cz/images/597/hexa9-6.png" class="image-311485" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 52: Hexadecimální editor <strong>dhex</strong>: průběh vlastní
editace binárního souboru.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Pokročilejší hexadecimální editory</h2>

<p>Hexadecimální prohlížeče a hexadecimální editory se v&nbsp;některých
případech transformovaly na komplexnější nástroje nazývané <i>monitory</i> (ty
sice byly navrženy především pro modifikaci obsahu operační paměti, ovšem
taktéž umožňovaly načítání a ukládání souborů, takže rozdíly ve skutečnosti
nejsou tak velké).  Jednou z&nbsp;funkcí odlišujících hexadecimální editor od
monitoru je většinou existence disassembleru a možnost spouštění nativních
(samozřejmě binárních) programů od určité adresy. Jak však bude patrné
z&nbsp;dalšího textu, dnes jsou možnosti některých hexadecimálních editorů tak
rozsáhlé, že se rozdíly částečně smazávají. A je nutné poznamenat, že
hexadecimální monitor kombinovaný s&nbsp;disassemblerem popř.&nbsp;dokonce
s&nbsp;jednoduchým assemblerem je velmi mocným nástrojem.</p>

<img src="https://i.iinfo.cz/images/16/hexaa-1.png" class="image-311486" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 53: Kontextová nápověda k&nbsp;editoru HIEW.</i></p>

<p>Pokročilejší hexadecimální editory, s&nbsp;nimiž se seznámíme
v&nbsp;navazujících kapitolách, se většinou snaží na editovaný binární soubor
pohlížet sofistikovaněji než na pouhou sekvenci nic neznamenajících bajtů.
Proto podporují režim disassembleru (dnes většinou dokonce pro větší množství
architektur, mnohdy i se snahou správně rozpoznat cíle skoků), některé hexa
editory správně interpretují hlavičky spustitelných souborů pro různé operační
systémy (DOS, Windows, Linux, ...), dokonce se setkáme s&nbsp;hexadecimálními
editory s&nbsp;disassemblingem Javovských tříd atd. (kupodivu však nikoli
s&nbsp;možností disassemblingu bajtkódu Pythonu či jazyka Lua). Opět se jedná o
operace, které sice v&nbsp;naprosté většině případů nevyužijeme každý den,
ovšem občas mohou být nedocenitelné.</p>

<img src="https://i.iinfo.cz/images/16/hexaa-2.png" class="image-311487" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 54: HIEW pracující v&nbsp;režimu zobrazení textu bez zapnutého
word-wrappingu. Zobrazen je elektronický manuál dodávaný k&nbsp;tomuto
editoru.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Druhé krátké ohlédnutí do minulosti &ndash; pokročilý hexadecimální editor <strong>HIEW</strong></h2>

<p>Než se začneme zabývat popisem pokročilejších hexadecimálních editorů pro
Linux, seznámíme se s&nbsp;dnes již klasickým (a stále vyvíjeným)
hexadecimálním editorem nazvaným <strong>HIEW</strong> (<i>Hacker's View</i>).
Ostatně mnoho Linuxových hexadecimálních editorů do značné míry kopíruje
textové uživatelské rozhraní HIEWu. Tento editor je dnes nabízen pro Microsoft
Windows, ovšem jeho první verze vznikly pro domácí mikropočítače IBM PC a
systém DOS. <strong>HIEW</strong> se soubory dokázal pracovat ve čtyřech
režimech.</p>

<img src="https://i.iinfo.cz/images/16/hexaa-3.png" class="image-311488" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 55: HIEW pracující v&nbsp;režimu zobrazení textu se zapnutým
word-wrappingem. Toto je dosti neobvyklý režim, který prakticky u žádného
dalšího hexadecimálního editoru nenalezneme.</i></p>

<p>Jednalo se o textový režim bez zalamování řádků, textový režim se
zalamováním řádků, hexadecimální režim a konečně režim dissasembleru,
v&nbsp;němž se jednotlivé bajty v&nbsp;souboru interpretovaly jako instrukce
procesoru <i>80x86</i>. <strong>HIEW</strong> bylo možné použít mnoha různými
způsoby: pro úpravu vlastních binárních souborů, crackování programů (například
náhradou některých skoků instrukcemi NOP), úpravu souborů s&nbsp;uloženými
stavy různých her (v&nbsp;mém případě například pro zvýšení počtu kreditů
v&nbsp;Duně II) či pro opravu poškozených binárních souborů, například po pádu
databázových aplikací.</p>

<img src="https://i.iinfo.cz/images/16/hexaa-4.png" class="image-311489" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 56: HIEW pracující v&nbsp;režimu disassembleru, zde konkrétně se
jedná o disassembler 16bitového režimu mikroprocesorů řady 80x86.</i></p>

<p>Vzhledem k&nbsp;omezení systému DOS však nebylo možné <strong>HIEW</strong>
použít pro přímý přístup k&nbsp;obsahu zvoleného zařízení, tj.&nbsp;většinou
diskety či pevného disku. V&nbsp;případě nutnosti ručních oprav souborového
systému, zkoumání disket chráněných proti kopírování (resp.&nbsp;přesněji
řečeno ne chráněných, ale upravených tak, aby se kopie lišila od originálu)
apod. tedy bylo nutné použít specializované nástroje typu <i>Diskedit</i>,
které &ndash; což asi není žádné velké překvapení &ndash; taktéž obsahovaly
hexadecimální editor.</p>

<img src="https://i.iinfo.cz/images/16/hexaa-5.png" class="image-311490" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 57: HIEW pracující v&nbsp;hexa režimu. Můžeme zde opět, podobně
jako u prohlížeče Volkov Commanderu, vidět &bdquo;klasické&ldquo; rozdělení
okna na tři sloupce: adresy, hodnoty bajtů a jednotlivé znaky.</i></p>

<p>Toto omezení u Linuxových editorů vlastně odpadá, protože s&nbsp;příslušným
oprávněním je možné přistupovat přímo na zvolené zařízení přes jeho ovladač.
Ovšem je nutné použít takový editor, který se nesnaží o načtení obsahu celého
souboru/speciálního souboru do operační paměti.</p>

<img src="https://i.iinfo.cz/images/16/hexaa-6.png" class="image-311491" alt="&#160;" width="640" height="400" />
<p><i>Obrázek 58: Výběr souboru pro editaci hexadecimálním editorem
HIEW.</i></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Hexadecimální editor <strong>HT</strong> (<strong>HTE</strong>)</h2>

<p>Předposledním hexadecimálním editorem zmíněným v&nbsp;tomto článku je
<strong>HT</strong> popř.&nbsp;<strong>HTE</strong> (druhé jméno je používáno
při pojmenování balíčku, protože jméno &bdquo;ht&ldquo; je již obsazeno). Tento
nástroj je možné použít jak ve funkci klasického hexadecimálního editoru, tak i
jako interaktivně ovládaný disassembler s&nbsp;analyzátorem strojového kódu či
jako disassembler pro soubory <strong>.class</strong> určené pro <a
href="https://www.root.cz/clanky/pohled-pod-kapotu-jvm-1-cast-prohlizeni-a-modifikace-bajtkodu/">zpracování
virtuálním strojem Javy</a>. Kromě toho tato utilita umožňuje otevřít větší
množství oken a pracovat tak současně na několika souvisejících blocích
binárního souboru či souborů.</p>

<img src="https://i.iinfo.cz/images/543/hexab-1.png" class="image-311990" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 59: Uživatelské rozhraní editoru <strong>HT</strong>
s&nbsp;informacemi o autorech i o konfiguračním souboru.</i></p>

<p>Pro ovládání se používají <a
href="http://hte.sourceforge.net/readme.html">klávesové zkratky</a>, které
připomínají původní DOSovské editory odpovídající specifikaci <a
href="https://en.wikipedia.org/wiki/IBM_Common_User_Access">CUA</a>. Ostatně i
celé textové uživatelské rozhraní obsahující mj.&nbsp;i interaktivní nápovědu,
připomíná DOSovská IDE.</p>

<img src="https://i.iinfo.cz/images/543/hexab-2.png" class="image-311991" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 60: Základní pohled na editovaný soubor &ndash; hexadecimální
prohlížeč.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-3.png" class="image-311992" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 61: Přepínač režimů zobrazení.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-4.png" class="image-311993" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 62: Zobrazení hlavičky souborů <strong>.class</strong> určených
pro JVM.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-5.png" class="image-311994" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 63: Disassembler souborů <strong>.class</strong> určených pro
JVM.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-6.png" class="image-311995" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 64: Disassembler souborů <strong>.class</strong> určených pro
JVM.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-7.png" class="image-311996" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 65: Disassembler nativních spustitelných souborů.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-8.png" class="image-311997" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 66: Dialog pro vyhledávání v&nbsp;binárních souborech.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-9.png" class="image-311998" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 67: Disassembler nativních spustitelných souborů pro platformu
x86-64.</i></p>



<p><a name="k19"></a></p>
<h2 id="k19">19. Linuxový hexadecimální editor <strong>Beye/Biew</strong></h2>

<p>Posledním hexadecimálním editorem, s&nbsp;nímž se v&nbsp;dnešním článku
seznámíme, je nástroj nazvaný <strong>Biew</strong> nebo též
<strong>Beye</strong>. Původní jméno <strong>Biew</strong> naznačovalo, že se
jeho autor snažil vytvořit editor, který by se svými vlastnostmi přibližoval
výše popsanému etalonu <strong>HIEW</strong>. To se skutečně povedlo, protože
dnes umí <strong>Beye/Biew</strong> zobrazovat editovaný binární soubor ve
všech standardních režimech, dokáže zobrazit hlavičky souborů (ELF, COFF, staré
dobré MZ z&nbsp;DOSu, ME atd.) a dokonce obsahuje i disassemblery pro některé
standardní architektury (i386, x86-64, 32bitový ARM, PPC64, dokonce i AVR) a
taktéž disassembler pro <a
href="https://www.root.cz/clanky/pohled-pod-kapotu-jvm-1-cast-prohlizeni-a-modifikace-bajtkodu/">soubory
<strong>.class</strong> určené pro JVM</a>.</p>

<img src="https://i.iinfo.cz/images/543/hexab-10.png" class="image-311999" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 68: Informace o hlavičce spustitelného binárního souboru.</i></p>

<p>Zdálo by se tedy, že Biew/Beye je nejdokonalejším nástrojem; proč je tedy
popsán až na konci? Jediným problémem je, že se tato utilita již aktivně
nevyvíjí, což by až tak nevadilo (uživatelé těchto nástrojů nemusí být každý
den na technology edge), ale některé distribuce již balíček s&nbsp;touto
utilitou neobsahují, takže se musí provést lokální překlad.</p>

<img src="https://i.iinfo.cz/images/543/hexab-11.png" class="image-312000" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 69: Dialog o hexadecimálním editoru Beye/Biew ukazuje, že tento
nástroj již není příliš aktivně vyvíjen.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-12.png" class="image-312001" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 70: Původní i noví spoluautoři editoru Beye/Biew.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-13.png" class="image-312002" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 71: Přepínání režimů zobrazení obsahu binárního souboru.</i></p>

<img src="https://i.iinfo.cz/images/543/hexab-14.png" class="image-312003" alt="&#160;" width="804" height="504" />
<p><i>Obrázek 72: Disassembler pro 32bitové mikroprocesory ARM pracuje korektně
i na architektuře x86-64.</i></p>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>Bless Hex Editor<br />
<a href="http://home.gna.org/bless/">http://home.gna.org/bless/</a>
</li>

<li>hexer (man page)<br />
<a href="http://manpages.ubuntu.com/manpages/natty/man1/hexer.1.html">http://manpages.ubuntu.com/manpages/natty/man1/hexer.1.html</a>
</li>

<li>GHex - a hex editor for GNOME<br />
<a href="https://wiki.gnome.org/Apps/Ghex">https://wiki.gnome.org/Apps/Ghex</a>
</li>

<li>GHex na GitHubu<br />
<a href="https://github.com/GNOME/ghex">https://github.com/GNOME/ghex</a>
</li>

<li>Ghex<br />
<a href="http://directory.fsf.org/wiki/Ghex">http://directory.fsf.org/wiki/Ghex</a>
</li>

<li>Okteta<br />
<a href="https://utils.kde.org/projects/okteta/">https://utils.kde.org/projects/okteta/</a>
</li>

<li>Okteta - Hex Editor<br />
<a href="https://www.kde.org/applications/utilities/okteta/">https://www.kde.org/applications/utilities/okteta/</a>
</li>

<li>Okteta (KDE UserBase Wiki)<br />
<a href="https://userbase.kde.org/Okteta">https://userbase.kde.org/Okteta</a>
</li>

<li>Hex Editors for Lin/unix<br />
<a href="http://blog.sourcepole.com/2006/09/07/hex-editors/">http://blog.sourcepole.com/2006/09/07/hex-editors/</a>
</li>

<li>Beye (home page)<br />
<a href="https://sourceforge.net/p/beye/wiki/Home/">https://sourceforge.net/p/beye/wiki/Home/</a>
</li>

<li>Beye (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Beye">https://en.wikipedia.org/wiki/Beye</a>
</li>

<li>HT Editor<br />
<a href="http://hte.sourceforge.net/">http://hte.sourceforge.net/</a>
</li>

<li>dhex (home page)<br />
<a href="http://freecode.com/projects/dhex">http://freecode.com/projects/dhex</a>
</li>

<li>Hex editor (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Hex_editor">https://en.wikipedia.org/wiki/Hex_editor</a>
</li>

<li>Comparison of hex editors (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Comparison_of_hex_editors">https://en.wikipedia.org/wiki/Comparison_of_hex_editors</a>
</li>

<li>bvi Home Page<br />
<a href="http://bvi.sourceforge.net/">http://bvi.sourceforge.net/</a>
</li>

<li>bvi (Wikipedia)<br />
<a href="https://en.wikipedia.org/wiki/Bvi">https://en.wikipedia.org/wiki/Bvi</a>
</li>

<li>xxd (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=xxd</a>
</li>

<li>vim (man page)<br />
<a href="http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim">http://www.linux-tutorial.info/modules.php?name=ManPage&sec=1&manpage=vim</a>
</li>

<li>Hexadecimální editor (Wikipedia)<br />
<a href="https://cs.wikipedia.org/wiki/Hexadecim%C3%A1ln%C3%AD_editor">https://cs.wikipedia.org/wiki/Hexadecim%C3%A1ln%C3%AD_editor</a>
</li>

<li>od (man page)<br />
<a href="https://linux.die.net/man/1/od">https://linux.die.net/man/1/od</a>
</li>

<li>hexdump (man page)<br />
<a href="https://linux.die.net/man/1/hexdump">https://linux.die.net/man/1/hexdump</a>
</li>

<li>bvi (man page)<br />
<a href="https://linux.die.net/man/1/bvi">https://linux.die.net/man/1/bvi</a>
</li>

<li>hexedit (man page)<br />
<a href="https://linux.die.net/man/1/hexedit">https://linux.die.net/man/1/hexedit</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2017</small></p>
</body>
</html>

