<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">1. Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</a></p>
<p><a href="#k02">2. Přístup z&nbsp;lokální JConsole na službu běžící na lokálním JVM</a></p>
<p><a href="#k03">3. Přístup z&nbsp;lokální JConsole na vzdálený počítač</a></p>
<p><a href="#k04">*** 4. Jednoduché zabezpečení přístupu přes <strong>jmxremote.password</strong></a></p>
<p><a href="#k05">*** 5. Omezení přístupu definované v&nbsp;souboru <strong>jmxremote.access</strong></a></p>
<p><a href="#k06">*** 6. Použití SSL v&nbsp;reálném provozu</a></p>
<p><a href="#k07">*** 7. Metriky, které je vhodné sledovat</a></p>
<p><a href="#k08">*** 8. Metriky samotného brokera</a></p>
<p><a href="#k09">*** 9. Metriky vztažené k&nbsp;producentům</a></p>
<p><a href="#k10">*** 10. Metriky vztažené ke konzumentům</a></p>
<p><a href="#k11">*** 11. Metriky ZooKeepera</a></p>
<p><a href="#k12">*** 12. Metriky virtuálního stroje Javy</a></p>
<p><a href="#k13">*** 13. </a></p>
<p><a href="#k14">*** 14. </a></p>
<p><a href="#k15">*** 15. </a></p>
<p><a href="#k16">*** 16. </a></p>
<p><a href="#k17">*** 17. </a></p>
<p><a href="#k18">*** 18. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k19">19. Odkazy na relevantní články na Rootu</a></p>
<p><a href="#k20">20. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</h2>

<p>Na <a
href="https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/">úvodní
článek</a>, v&nbsp;němž jsme si popsali základní technologie, které lze využít
pro sledování činnosti systému Apache Kafka, dnes navážeme. Již víme, že jak
Kafka brokeři, tak i ZooKeeper nabízí své metriky přes rozhraní nazvané
<i>JMX</i> neboli <i>Java Management Extensions</i>. Takové metriky lze přes
JMX zpracovávat několika nástroji, mezi než patří i standardní nástroj nazvaný
<strong>jconsole</strong>, který je dodávaný společně s&nbsp;JDK (ovšem nikoli
se samotným JRE, tedy s&nbsp;běhovým prostředím Javy). Existuje ovšem i
knihovna nazvaná <i>JMX Exporter</i>, která dokáže tyto metriky zpřístupnit i
ve formátu kompatibilním s&nbsp;<i>Prometheem</i> a nepřímo tak i
s&nbsp;<i>Grafanou</i>, tedy s&nbsp;technologiemi, jež se v&nbsp;současnosti
velmi často používají v&nbsp;praxi, například pro monitoring mikroslužeb,
databází, message brokerů atd.</p>

*** image ***
<p><i>Obrázek 1: ZooKeeper i Apache Kafka běžící lokálně lze sledovat právě
přes nástroj <strong>jconsole</strong>.</i></p>

<p><div class="rs-tip-major">Poznámka: několik úvodních kapitol je sice
věnováno problematice přístupu k&nbsp;metrikám reprezentovaným s&nbsp;využitím
<i>MBeans</i> a dostupných přes JMX, ovšem popis samotných metrik je již
nezávislý na tom, zda je pro přístup k&nbsp;nim použit JMX či kombinace
Prometheus+Grafana.</div></p>

*** image ***
<p><i>Obrázek 2: Příklad &bdquo;dashboardu&ldquo; vytvořeného pro účely
sledování Apache Kafky. Důležitými metrikami jsou frekvence příchozích zpráv i
celkový &bdquo;lag&ldquo;, tedy zpoždění konzumentů zpráv oproti
producentům.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Přístup z&nbsp;lokální JConsole na službu běžící na lokálním JVM</h2>

<p>Minule jsme si ukázali, jakým způsobem je možné se připojit nástrojem
<strong>jconsole</strong> k&nbsp;vybranému lokálnímu virtuálnímu stroji Java,
na němž běží sledovaná aplikace nabízející své metriky přes JMX:</p>

<a href="https://www.root.cz/obrazek/451044/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-1-prev.png" class="image-451044" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 3: Po spuštění <strong>jconsole</strong> se zobrazí všechny
nalezené aplikace běžící nad JVM. Vybereme aplikaci
<strong>Main</strong>.</i></p>

<a href="https://www.root.cz/obrazek/451045/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-2-prev.png" class="image-451045" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 4: Povolíme připojení bez SSL.</i></p>

<a href="https://www.root.cz/obrazek/451046/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-3-prev.png" class="image-451046" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 5: Zobrazí se základní informace o sledované aplikace (obsazení
paměti apod.).</i></p>

<a href="https://www.root.cz/obrazek/451047/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-4-prev.png" class="image-451047" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 6: Na listu <strong>MBeans</strong> se kromě standardních MBeans
objeví i jmenný prostor &bdquo;cz.root.app&ldquo;.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Přístup z&nbsp;lokální JConsole na vzdálený počítač</h2>

<p>Nyní si ukážeme, jak lze nakonfigurovat vzdálené připojení. Princip je
jednoduchý &ndash; použijeme lokální instalaci nástroje
<strong>jconsole</strong> a připojíme se s&nbsp;ní k&nbsp;virtuálnímu stroji
Javy, který ovšem běží vzdáleně (na jiném počítači). Nejprve si připravíme náš
testovací příklad na vzdáleném počítači (může jít samozřejmě o virtuální
počítač, pokud správně nastavíte mapování portů). Připojíme se k&nbsp;tomuto
počítači, získáme <a
href="https://github.com/tisnik/presentations/tree/master/mbeans/example3">zdrojové
kódy příkladu</a> a přeložíme ho:</p>

<pre>
$ <strong>javac Main.java </strong>
</pre>

<p>Spuštění ovšem bude vypadat odlišně, protože budeme muset povolit vzdálený
přístup k&nbsp;JMX a taktéž budeme muset nastavit port, na němž bude JXM
dostupné:</p>

<pre>
$ <strong>java -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=1099 Main</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: port samozřejmě může být libovolný,
ovšem typicky větší než 1024.</div></p>

<p>Nyní na lokálním počítači spustíme <strong>jconsoli</strong>:</p>

<pre>
$ <strong>export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dsun.java2d.xrender=true"</strong>
$ <strong>jconsole</strong>
</pre>

<p>Samotné připojení ovšem vypadá odlišně, protože je nutné (logicky) ručně
specifikovat jméno vzdáleného počítače i port, na kterém je JMX dostupné:</p>

*** image ***
<p><i>Obrázek 7: Specifikace jména či IP adresy vzdáleného počítače a portu, na
kterém je JMX dostupné.</i></p>

*** image ***
<p><i>Obrázek 8: Připojování ke vzdálené JVM, resp.&nbsp;k&nbsp;aplikaci, které
v&nbsp;rámci této JVM běží.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Jednoduché zabezpečení přístupu přes <strong>jmxremote.password</strong></h2>

<p>Řešení ukázané <a href="#k03">v&nbsp;předchozí kapitole</a> je vhodné pouze pro ty případy, kdy je nutné sledovat Kafku běžící například v&nbsp;testovacím prostředí. Problém tohoto řešení spočívá v&nbsp;tom, že kdokoli, kdo &bdquo;odhadne&ldquo; port používaný JMX, se může vzdáleně připojit a sledovat metriky, popř.&nbsp;volat metody dostupné přes MBeans. Ukažme si proto alespoň minimální způsoby zabezpečení. První z&nbsp;nich spočívá v&nbsp;tom, že se </p>

$ java Main

$ export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dsun.java2d.xrender=true"

/usr/lib/jvm/java/jre/lib/management

$ java -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=jmxremote.password -Dcom.sun.management.jmxremote.port=1099 Main
<pre>
# ----------------------------------------------------------------------
#           Template for jmxremote.password
#
# o Copy this template to jmxremote.password
# o Set the user/password entries in jmxremote.password
# o Change the permission of jmxremote.password to read-only
#   by the owner.
#
# See below for the location of jmxremote.password file.
# ----------------------------------------------------------------------
&nbsp;
##############################################################
#        Password File for Remote JMX Monitoring
##############################################################
#
# Password file for Remote JMX API access to monitoring.  This
# file defines the different roles and their passwords.  The access
# control file (jmxremote.access by default) defines the allowed
# access for each role.  To be functional, a role must have an entry
# in both the password and the access files.
#
# Default location of this file is $JRE/lib/management/jmxremote.password
# You can specify an alternate location by specifying a property in 
# the management config file $JRE/lib/management/management.properties
# or by specifying a system property (See that file for details).
&nbsp;
&nbsp;
##############################################################
#    File permissions of the jmxremote.password file
##############################################################
#      Since there are cleartext passwords stored in this file,
#      this file must be readable by ONLY the owner,
#      otherwise the program will exit with an error. 
#
# The file format for password and access files is syntactically the same
# as the Properties file format.  The syntax is described in the Javadoc
# for java.util.Properties.load.
# Typical password file has multiple  lines, where each line is blank,
# a comment (like this one), or a password entry.
#
#
# A password entry consists of a role name and an associated
# password.  The role name is any string that does not itself contain
# spaces or tabs.  The password is again any string that does not
# contain spaces or tabs.  Note that passwords appear in the clear in
# this file, so it is a good idea not to use valuable passwords.
#
# A given role should have at most one entry in this file.  If a role
# has no entry, it has no access.
# If multiple entries are found for the same role name, then the last one
# is used.
#
# In a typical installation, this file can be read by anybody on the
# local machine, and possibly by people on other machines.
# For # security, you should either restrict the access to this file,
# or specify another, less accessible file in the management config file
# as described above.
#
# Following are two commented-out entries.  The "measureRole" role has
# password "QED".  The "controlRole" role has password "R&amp;D".
#
<strong>monitorRole  nbusr123</strong>
<strong>controlRole  nbusr789</strong>
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Omezení přístupu definované v&nbsp;souboru <strong>jmxremote.access</strong></h2>



<p><a name="k06"></a></p>
<h2 id="k06">6. Použití SSL v&nbsp;reálném provozu</strong></h2>




$ java Main

$ export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dsun.java2d.xrender=true"

/usr/lib/jvm/java/jre/lib/management

$ java -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.password.file=jmxremote.password -Dcom.sun.management.jmxremote.port=1099 Main



<p><a name="k07"></a></p>
<h2 id="k07">7. Metriky, které je vhodné sledovat</h2>

<p>Apache Kafka, resp.&nbsp;přesněji řečeno její jednotlivé části
(<i>ZooKeeper</i> a jednotliví brokeři) vytváří a &bdquo;vystavují&ldquo;
poměrně velké množství metrik. Ty je možné rozdělit do čtyř skupin:</p>

<ol>
<li>Metriky samotného brokera</li>
<li>Metriky vztažené k&nbsp;producentům</li>
<li>Metriky vztažené ke konzumentům</li>
<li>Metriky ZooKeepera (což je samostatný proces)</li>
</ol>



<p><a name="k08"></a></p>
<h2 id="k08">8. Metriky samotného brokera</h2>

UnderReplicatedPartitions	kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions
IsrShrinksPerSec/IsrExpandsPerSec	kafka.server:type=ReplicaManager,name=IsrShrinksPerSec kafka.server:type=ReplicaManager,name=IsrExpandsPerSec
ActiveControllerCount	kafka.controller:type=KafkaController,name=ActiveControllerCount
OfflinePartitionsCount	kafka.controller:type=KafkaController,name=OfflinePartitionsCount
LeaderElectionRateAndTimeMs	kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs
UncleanLeaderElectionsPerSec	kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec
TotalTimeMs	kafka.network:type=RequestMetrics,name=TotalTimeMs,request={Produce|FetchConsumer|FetchFollower}
PurgatorySize	kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation={Produce|Fetch}
BytesInPerSec/BytesOutPerSec	kafka.server:type=BrokerTopicMetrics,name={BytesInPerSec|BytesOutPerSec}
RequestsPerSecond	kafka.network:type=RequestMetrics,name=RequestsPerSec,request={Produce|FetchConsumer|FetchFollower},version={0|1|2|3|…

Page cache reads ratio	Ratio of reads from page cache vs reads from disk
Disk usage	Disk space currently consumed vs. available
CPU usage	CPU use
Network bytes sent/received	Network traffic in/out



<p><a name="k09"></a></p>
<h2 id="k09">9. Metriky vztažené k&nbsp;producentům</h2>

compression-rate-avg	kafka.producer:type=producer-metrics,client-id=([-.w]+)
response-rate	kafka.producer:type=producer-metrics,client-id=([-.w]+)
request-rate	kafka.producer:type=producer-metrics,client-id=([-.w]+)
request-latency-avg	kafka.producer:type=producer-metrics,client-id=([-.w]+)
outgoing-byte-rate	kafka.producer:type=producer-metrics,client-id=([-.w]+)
io-wait-time-ns-avg	kafka.producer:type=producer-metrics,client-id=([-.w]+)
batch-size-avg	kafka.producer:type=producer-metrics,client-id=([-.w]+)



<p><a name="k10"></a></p>
<h2 id="k10">10. Metriky vztažené ke konzumentům</h2>

records-lag	kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+),partition=([-.w]+)
records-lag-max	kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+),partition=([-.w]+)
kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+)
bytes-consumed-rate	kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+)
kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+)
records-consumed-rate	kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+)
kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+)
fetch-rate	kafka.consumer:type=consumer-fetch-manager-metrics,client_id=([-.w]+)



<p><a name="k11"></a></p>
<h2 id="k11">11. Metriky ZooKeepera</h2>

outstanding_requests	Number of requests queued
avg_latency	Amount of time it takes to respond to a client request (in ms)
num_alive_connections	Number of clients connected to ZooKeeper
followers	Number of active followers
pending_syncs	Number of pending syncs from followers	Other
open_file_descriptor_count	Number of file descriptors in use



<p><a name="k12"></a></p>
<h2 id="k12">12. Metriky virtuálního stroje Javy</h2>

CollectionCount	java.lang:type=GarbageCollector,name=G1 (Young|Old) Generation
CollectionTime	java.lang:type=GarbageCollector,name=G1 (Young|Old) Generation



<p><a name="k13"></a></p>
<h2 id="k13">13. </h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. </h2>



<p><a name="k15"></a></p>
<h2 id="k15">15. </h2>



<p><a name="k16"></a></p>
<h2 id="k16">16. </h2>



<p><a name="k17"></a></p>
<h2 id="k17">17. </h2>



<p><a name="k18"></a></p>
<h2 id="k18">18. </h2>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na relevantní články na Rootu</h2>

<ol>

<li>Použití nástroje Apache Kafka v&nbsp;aplikacích založených na mikroslužbách<br />
<a href="https://www.root.cz/clanky/pouziti-nastroje-apache-kafka-v-aplikacich-zalozenych-na-mikrosluzbach/">https://www.root.cz/clanky/pouziti-nastroje-apache-kafka-v-aplikacich-zalozenych-na-mikrosluzbach/</a>
</li>

<li>Apache Kafka: distribuovaná streamovací platforma<br />
<a href="https://www.root.cz/clanky/apache-kafka-distribuovana-streamovaci-platforma/">https://www.root.cz/clanky/apache-kafka-distribuovana-streamovaci-platforma/</a>
</li>

<li>Pokročilý streaming založený na Apache Kafce, jazyku Clojure a knihovně Jackdaw<br />
<a href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw/">https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw/</a>
</li>

<li>Pokročilý streaming založený na Apache Kafce, jazyku Clojure a knihovně Jackdaw (2. část)<br />
<a href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw-2-cast/">https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw-2-cast/</a>
</li>

<li>Pokročilý streaming založený na projektu Apache Kafka, jazyku Clojure a knihovně Jackdaw (streamy a kolony)<br />
<a href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-projektu-apache-kafka-jazyku-clojure-a-knihovne-jackdaw-streamy-a-kolony/">https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-projektu-apache-kafka-jazyku-clojure-a-knihovne-jackdaw-streamy-a-kolony/</a>
</li>

<li>Vývoj služeb postavených na systému Apache Kafka v&nbsp;jazyku Go<br />
<a href="https://www.root.cz/clanky/vyvoj-sluzeb-postavenych-na-systemu-apache-kafka-v-jazyku-go/">https://www.root.cz/clanky/vyvoj-sluzeb-postavenych-na-systemu-apache-kafka-v-jazyku-go/</a>
</li>

<li>Práce s&nbsp; Kafkou z&nbsp;příkazové řádky: nástroje Kafkacat a Kcli<br />
<a href="https://www.root.cz/clanky/prace-s-kafkou-z-prikazove-radky-nastroje-kafkacat-a-kcli/">https://www.root.cz/clanky/prace-s-kafkou-z-prikazove-radky-nastroje-kafkacat-a-kcli/</a>
</li>

<li>Apache ActiveMQ – další systém implementující message brokera<br />
<a href="https://www.root.cz/clanky/apache-activemq-dalsi-system-implementujici-message-brokera/#k12">https://www.root.cz/clanky/apache-activemq-dalsi-system-implementujici-message-brokera/#k12</a>
</li>

<li>Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea<br />
<a href="https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/">https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/</a>
</li>

</ol>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na Internetu</h2>

<ol>

<li>The Java™ Tutorials &ndash; Introducing MBeans<br />
<a href="https://docs.oracle.com/javase/tutorial/jmx/mbeans/index.html">https://docs.oracle.com/javase/tutorial/jmx/mbeans/index.html</a>
</li>

<li>Standard MBeans<br />
<a href="https://docs.oracle.com/javase/tutorial/jmx/mbeans/standard.html">https://docs.oracle.com/javase/tutorial/jmx/mbeans/standard.html</a>
</li>

<li>JMX Exporter<br />
<a href="https://github.com/prometheus/jmx_exporter">https://github.com/prometheus/jmx_exporter</a>
</li>

<li>Monitor Apache Kafka with Prometheus and Grafana<br />
<a href="https://computingforgeeks.com/monitor-apache-kafka-with-prometheus-and-grafana/">https://computingforgeeks.com/monitor-apache-kafka-with-prometheus-and-grafana/</a>
</li>

<li>Kafka Monitoring Using Prometheus<br />
<a href="https://www.metricfire.com/blog/kafka-monitoring-using-prometheus/">https://www.metricfire.com/blog/kafka-monitoring-using-prometheus/</a>
</li>

<li>Collecting Kafka Performance Metrics with OpenTelemetry<br />
<a href="https://www.splunk.com/en_us/blog/devops/monitoring-kafka-performance-metrics-with-splunk-infrastructure-monitoring.html">https://www.splunk.com/en_us/blog/devops/monitoring-kafka-performance-metrics-with-splunk-infrastructure-monitoring.html</a>
</li>

<li>Monitoring Kafka performance metrics<br />
<a href="https://www.datadoghq.com/blog/monitoring-kafka-performance-metrics/">https://www.datadoghq.com/blog/monitoring-kafka-performance-metrics/</a>
</li>

<li>Kcli: is a kafka read only command line browser.<br />
<a href="https://github.com/cswank/kcli">https://github.com/cswank/kcli</a>
</li>

<li>Kcli: a kafka command line browser<br />
<a href="https://go.libhunt.com/kcli-alternatives">https://go.libhunt.com/kcli-alternatives</a>
</li>

<li>Awesome Go<br />
<a href="https://github.com/avelino/awesome-go">https://github.com/avelino/awesome-go</a>
</li>

<li>Real-Time Payments with Clojure and Apache Kafka (podcast)<br />
<a href="https://www.evidentsystems.com/news/confluent-podcast-about-apache-kafka/">https://www.evidentsystems.com/news/confluent-podcast-about-apache-kafka/</a>
</li>

<li>Microservices: The Rise Of Kafka<br />
<a href="https://movio.co/blog/microservices-rise-kafka/">https://movio.co/blog/microservices-rise-kafka/</a>
</li>

<li>Building a Microservices Ecosystem with Kafka Streams and KSQL<br />
<a href="https://www.confluent.io/blog/building-a-microservices-ecosystem-with-kafka-streams-and-ksql/">https://www.confluent.io/blog/building-a-microservices-ecosystem-with-kafka-streams-and-ksql/</a>
</li>

<li>An introduction to Apache Kafka and microservices communication<br />
<a href="https://medium.com/@ulymarins/an-introduction-to-apache-kafka-and-microservices-communication-bf0a0966d63">https://medium.com/@ulymarins/an-introduction-to-apache-kafka-and-microservices-communication-bf0a0966d63</a>
</li>

<li>kappa-architecture.com<br />
<a href="http://milinda.pathirage.org/kappa-architecture.com/">http://milinda.pathirage.org/kappa-architecture.com/</a>
</li>

<li>Questioning the Lambda Architecture<br />
<a href="https://www.oreilly.com/ideas/questioning-the-lambda-architecture">https://www.oreilly.com/ideas/questioning-the-lambda-architecture</a>
</li>

<li>Lambda architecture<br />
<a href="https://en.wikipedia.org/wiki/Lambda_architecture">https://en.wikipedia.org/wiki/Lambda_architecture</a>
</li>

<li>Kafka &ndash; ecosystem (Wiki)<br />
<a href="https://cwiki.apache.org/confluence/display/KAFKA/Ecosystem">https://cwiki.apache.org/confluence/display/KAFKA/Ecosystem</a>
</li>

<li>The Kafka Ecosystem - Kafka Core, Kafka Streams, Kafka Connect, Kafka REST Proxy, and the Schema Registry<br />
<a href="http://cloudurable.com/blog/kafka-ecosystem/index.html">http://cloudurable.com/blog/kafka-ecosystem/index.html</a>
</li>

<li>A Kafka Operator for Kubernetes<br />
<a href="https://github.com/krallistic/kafka-operator">https://github.com/krallistic/kafka-operator</a>
</li>

<li>Kafka Streams<br />
<a href="https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Streams">https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Streams</a>
</li>

<li>Kafka Streams<br />
<a href="http://kafka.apache.org/documentation/streams/">http://kafka.apache.org/documentation/streams/</a>
</li>

<li>Kafka Streams (FAQ)<br />
<a href="https://cwiki.apache.org/confluence/display/KAFKA/FAQ#FAQ-Streams">https://cwiki.apache.org/confluence/display/KAFKA/FAQ#FAQ-Streams</a>
</li>

<li>Event stream processing<br />
<a href="https://en.wikipedia.org/wiki/Event_stream_processing">https://en.wikipedia.org/wiki/Event_stream_processing</a>
</li>

<li>Part 1: Apache Kafka for beginners - What is Apache Kafka?<br />
<a href="https://www.cloudkarafka.com/blog/2016-11-30-part1-kafka-for-beginners-what-is-apache-kafka.html">https://www.cloudkarafka.com/blog/2016-11-30-part1-kafka-for-beginners-what-is-apache-kafka.html</a>
</li>

<li>What are some alternatives to Apache Kafka?<br />
<a href="https://www.quora.com/What-are-some-alternatives-to-Apache-Kafka">https://www.quora.com/What-are-some-alternatives-to-Apache-Kafka</a>
</li>

<li>What is the best alternative to Kafka?<br />
<a href="https://www.slant.co/options/961/alternatives/~kafka-alternatives">https://www.slant.co/options/961/alternatives/~kafka-alternatives</a>
</li>

<li>A super quick comparison between Kafka and Message Queues<br />
<a href="https://hackernoon.com/a-super-quick-comparison-between-kafka-and-message-queues-e69742d855a8?gi=e965191e72d0">https://hackernoon.com/a-super-quick-comparison-between-kafka-and-message-queues-e69742d855a8?gi=e965191e72d0</a>
</li>

<li>Kafka Queuing: Kafka as a Messaging System<br />
<a href="https://dzone.com/articles/kafka-queuing-kafka-as-a-messaging-system">https://dzone.com/articles/kafka-queuing-kafka-as-a-messaging-system</a>
</li>

<li>Apache Kafka Logs: A Comprehensive Guide<br />
<a href="https://hevodata.com/learn/apache-kafka-logs-a-comprehensive-guide/">https://hevodata.com/learn/apache-kafka-logs-a-comprehensive-guide/</a>
</li>

<li>Microservices – Not a free lunch!<br />
<a href="http://highscalability.com/blog/2014/4/8/microservices-not-a-free-lunch.html">http://highscalability.com/blog/2014/4/8/microservices-not-a-free-lunch.html</a>
</li>

<li>Microservices, Monoliths, and NoOps<br />
<a href="http://blog.arungupta.me/microservices-monoliths-noops/">http://blog.arungupta.me/microservices-monoliths-noops/</a>
</li>

<li>Microservice Design Patterns<br />
<a href="http://blog.arungupta.me/microservice-design-patterns/">http://blog.arungupta.me/microservice-design-patterns/</a>
</li>

<li>REST vs Messaging for Microservices – Which One is Best?<br />
<a href="https://solace.com/blog/experience-awesomeness-event-driven-microservices/">https://solace.com/blog/experience-awesomeness-event-driven-microservices/</a>
</li>

<li>Kappa Architecture Our Experience<br />
<a href="https://events.static.linux­found.org/sites/events/fi­les/slides/ASPgems%20-%20Kappa%20Architecture.pdf">https://events.static.linux­found.org/sites/events/fi­les/slides/ASPgems%20-%20Kappa%20Architecture.pdf</a>
</li>

<li>Apache Kafka Streams and Tables, the stream-table duality<br />
<a href="https://towardsdatascience.com/apache-kafka-streams-and-tables-the-stream-table-duality-ee904251a7e?gi=f22a29cd1854">https://towardsdatascience.com/apache-kafka-streams-and-tables-the-stream-table-duality-ee904251a7e?gi=f22a29cd1854</a>
</li>

<li>Alertmanager<br />
<a href="https://prometheus.io/docs/alerting/alertmanager/">https://prometheus.io/docs/alerting/alertmanager/</a>
</li>

<li>Grafana support for Prometheus<br />
<a href="https://prometheus.io/docs/visualization/grafana/">https://prometheus.io/docs/visualization/grafana/</a>
</li>

<li>Prometheus: from metrics to insight<br />
<a href="https://prometheus.io/">https://prometheus.io/</a>
</li>

<li>Java Management Extensions (JMX)<br />
<a href="https://en.wikipedia.org/wiki/Java_Management_Extensions">https://en.wikipedia.org/wiki/Java_Management_Extensions</a>
</li>

<li>JConsole<br />
<a href="https://en.wikipedia.org/wiki/JConsole">https://en.wikipedia.org/wiki/JConsole</a>
</li>

<li>Using JConsole<br />
<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/management/jconsole.html">https://docs.oracle.com/javase/8/docs/technotes/guides/management/jconsole.html</a>
</li>

<li>Overview of Java SE Monitoring and Management<br />
<a href="https://docs.oracle.com/en/java/javase/15/management/overview-java-se-monitoring-and-management.html">https://docs.oracle.com/en/java/javase/15/management/overview-java-se-monitoring-and-management.html</a>
</li>

<li>Using jconsole (JMX) with SSL encryption<br />
<a href="https://docs.datastax.com/en/cassandra-oss/3.x/cassandra/configuration/secureJconsoleSSL.html">https://docs.datastax.com/en/cassandra-oss/3.x/cassandra/configuration/secureJconsoleSSL.html</a>
</li>

<li>Step by step instructions for securing JMX authentication for nodetool utility, OpsCenter and JConsole<br />
<a href="https://support.datastax.com/hc/en-us/articles/204226179-Step-by-step-instructions-for-securing-JMX-authentication-for-nodetool-utility-OpsCenter-and-JConsole">https://support.datastax.com/hc/en-us/articles/204226179-Step-by-step-instructions-for-securing-JMX-authentication-for-nodetool-utility-OpsCenter-and-JConsole</a>
</li>

<li>Enabling remote JMX with password authentication only<br />
<a href="https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwd.html">https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwd.html</a>
</li>

<li>Enabling remote JMX with password authentication and SSL<br />
<a href="https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwdssl.html">https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwdssl.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

