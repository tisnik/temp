<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p>Na úvodní článek, v&nbsp;němž jsme si popsali základní technologie, které lze využít pro sledování činnosti systému Apache Kafka, dnes navážeme. Popíšeme si, které metriky je vhodné sledovat. Taktéž se zmíníme o tzv. four-letter words ZooKeepera.</p>



<h2>Obsah</h2>

<p><a href="#k01">1. Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</a></p>
<p><a href="#k02">2. Přístup z&nbsp;lokální JConsole na službu běžící na lokálním JVM</a></p>
<p><a href="#k03">3. Přístup z&nbsp;lokální JConsole na vzdálený počítač</a></p>
<p><a href="#k04">4. Jednoduché zabezpečení přístupu přes <strong>jmxremote.password</strong></a></p>
<p><a href="#k05">5. Omezení přístupu definované v&nbsp;souboru <strong>jmxremote.access</strong></a></p>
<p><a href="#k06">6. Chování <strong>jconsole</strong> pro uživatele s&nbsp;rolemi <strong>readonly</strong> a <strong>readwrite</strong></a></p>
<p><a href="#k07">7. Použití SSL v&nbsp;reálném provozu</a></p>
<p><a href="#k08">8. Metriky, které je vhodné sledovat</a></p>
<p><a href="#k09">9. Metriky samotného brokera</a></p>
<p><a href="#k10">10. Metriky vztažené k&nbsp;producentům</a></p>
<p><a href="#k11">11. Vytvoření jednoduchého producenta zpráv naprogramovaného v&nbsp;JVM jazyce</a></p>
<p><a href="#k12">12. Metriky vztažené ke konzumentům</a></p>
<p><a href="#k13">13. Vytvoření jednoduchého konzumenta zpráv naprogramovaného v&nbsp;JVM jazyce</a></p>
<p><a href="#k14">14. Metriky virtuálního stroje Javy</a></p>
<p><a href="#k15">15. Metriky ZooKeepera</a></p>
<p><a href="#k16">16. Povolení &bdquo;four-letter words&ldquo; ZooKeepera</a></p>
<p><a href="#k17">17. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k18">18. Odkazy na relevantní články na Rootu</a></p>
<p><a href="#k19">19. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea (dokončení)</h2>

<p>Na <a
href="https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/">úvodní
článek</a>, v&nbsp;němž jsme si popsali základní technologie, které lze využít
pro sledování činnosti systému Apache Kafka, dnes navážeme. Již víme, že jak
Kafka brokeři, tak i ZooKeeper nabízí své metriky přes rozhraní nazvané
<i>JMX</i> neboli <i>Java Management Extensions</i>. Takové metriky lze přes
JMX zpracovávat několika nástroji, mezi než patří i standardní nástroj nazvaný
<strong>jconsole</strong>, který je dodávaný společně s&nbsp;JDK (ovšem nikoli
se samotným JRE, tedy s&nbsp;běhovým prostředím Javy). Existuje ovšem i
knihovna nazvaná <i>JMX Exporter</i>, která dokáže tyto metriky zpřístupnit i
ve formátu kompatibilním s&nbsp;<i>Prometheem</i> a nepřímo tak i
s&nbsp;<i>Grafanou</i>, tedy s&nbsp;technologiemi, jež se v&nbsp;současnosti
velmi často používají v&nbsp;praxi, například pro monitoring mikroslužeb,
databází, message brokerů atd. (stručně řečeno &ndash; metriky budou dostupné
přes běžné HTTP se všemi výhodami, které to přináší).</p>

<a href="https://www.root.cz/obrazek/451423/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-1-prev.png" class="image-451423" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 1: ZooKeeper i Apache Kafka běžící lokálně lze sledovat právě
přes nástroj <strong>jconsole</strong>.</i></p>

<p><div class="rs-tip-major">Poznámka: několik úvodních kapitol je sice
věnováno problematice přístupu k&nbsp;metrikám reprezentovaným s&nbsp;využitím
<i>MBeans</i> a dostupných přes JMX, ovšem popis samotných metrik je již
nezávislý na tom, zda je pro přístup k&nbsp;nim použit JMX či kombinace
Prometheus+Grafana.</div></p>

<a href="https://www.root.cz/obrazek/451424/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-2-prev.png" class="image-451424" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="370" height="168" /></a>
<p><i>Obrázek 2: Příklad &bdquo;dashboardu&ldquo; vytvořeného pro účely
sledování Apache Kafky v&nbsp;Grafaně. Důležitými metrikami jsou frekvence
příchozích zpráv i celkový &bdquo;lag&ldquo;, tedy zpoždění konzumentů zpráv
oproti producentům.</i></p>



<p><a name="k02"></a></p>
<h2 id="k02">2. Přístup z&nbsp;lokální JConsole na službu běžící na lokálním JVM</h2>

<p>Minule jsme si ukázali, jakým způsobem je možné se připojit nástrojem
<strong>jconsole</strong> k&nbsp;vybranému lokálnímu virtuálnímu stroji Java,
na němž běží sledovaná aplikace nabízející své metriky přes JMX. Celý postup si
připomeneme na několika screenshotech, v&nbsp;němž je sledován běžící
demonstrační příklad:</p>

<a href="https://www.root.cz/obrazek/451044/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-1-prev.png" class="image-451044" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 3: Po spuštění nástroje <strong>jconsole</strong> se zobrazí
všechny nalezené aplikace běžící nad JVM. Vybereme aplikaci
<strong>Main</strong>.</i></p>

<a href="https://www.root.cz/obrazek/451045/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-2-prev.png" class="image-451045" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 4: Povolíme připojení bez SSL (ostatně jedná se o lokální
JVM).</i></p>

<a href="https://www.root.cz/obrazek/451046/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-3-prev.png" class="image-451046" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 5: Následně se zobrazí základní informace o sledované aplikaci
(obsazení paměti apod.).</i></p>

<a href="https://www.root.cz/obrazek/451047/"><img src="https://i.iinfo.cz/images/592/kafka-jmx-4-prev.png" class="image-451047" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 6: Na listu <strong>MBeans</strong> se kromě standardních MBeans
objeví i jmenný prostor pojmenovaný &bdquo;cz.root.app&ldquo;.</i></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Přístup z&nbsp;lokální JConsole na vzdálený počítač</h2>

<p>Nyní si ukážeme, jak lze nakonfigurovat vzdálené připojení. Princip je
jednoduchý &ndash; použijeme lokální instalaci nástroje
<strong>jconsole</strong> (je součástí JDK) a připojíme se s&nbsp;ní
k&nbsp;virtuálnímu stroji Javy, který ovšem běží vzdáleně (na jiném počítači).
Nejprve si připravíme náš testovací příklad na vzdáleném počítači (může jít
samozřejmě o virtuální počítač, pokud ovšem správně nastavíte mapování portů).
Připojíme se k&nbsp;tomuto počítači, získáme (stáhneme) <a
href="https://github.com/tisnik/presentations/tree/master/mbeans/example3">zdrojové
kódy příkladu</a> a přeložíme ho:</p>

<pre>
$ <strong>javac Main.java </strong>
</pre>

<p>Spuštění ovšem bude vypadat odlišně, protože budeme muset povolit vzdálený
přístup k&nbsp;JMX a taktéž budeme muset nastavit port, na němž bude JXM
dostupné. Vybereme port 1099, ovšem pochopitelně je možné v&nbsp;případě
potřeby zvolit i jiný port:</p>

<pre>
$ <strong>java -Dcom.sun.management.jmxremote.authenticate=false \
       -Dcom.sun.management.jmxremote.ssl=false \
       -Dcom.sun.management.jmxremote.port=<u>1099</u> \
       Main</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: port samozřejmě může být libovolný,
ovšem typicky větší než 1024 (menší čísla portů vyžadují rootovská
oprávnění).</div></p>

<p>Nyní na lokálním počítači spustíme nástroj <strong>jconsole</strong>:</p>

<pre>
$ <strong>export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dsun.java2d.xrender=true"</strong>
$ <strong>jconsole</strong>
</pre>

<p>Samotné připojení ovšem vypadá odlišně, protože je nutné (logicky) ručně
specifikovat jméno vzdáleného počítače i port, na kterém je JMX dostupné:</p>

<a href="https://www.root.cz/obrazek/451425/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-3-prev.png" class="image-451425" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 7: Specifikace jména či IP adresy vzdáleného počítače a portu, na
kterém je JMX dostupné (seznam lokálních JVM tedy v&nbsp;tomto případě
ignorujeme).</i></p>

<a href="https://www.root.cz/obrazek/451426/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-4-prev.png" class="image-451426" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 8: Připojování ke vzdálené JVM, resp.&nbsp;k&nbsp;aplikaci, které
v&nbsp;rámci této JVM běží.</i></p>



<p><a name="k04"></a></p>
<h2 id="k04">4. Jednoduché zabezpečení přístupu přes <strong>jmxremote.password</strong></h2>

<p>Řešení ukázané <a href="#k03">v&nbsp;předchozí kapitole</a> je vhodné využít
pouze v&nbsp;těch případech, kdy je nutné sledovat Kafku běžící například
v&nbsp;testovacím prostředí. Problém tohoto řešení spočívá v&nbsp;tom, že
kdokoli, kdo &bdquo;odhadne&ldquo; port používaný JMX, se může vzdáleně
připojit a sledovat metriky, popř.&nbsp;volat metody dostupné přes MBeans.
Ukažme si proto alespoň minimální způsoby zabezpečení. První z&nbsp;nich
spočívá v&nbsp;tom, že se vytvoří soubor pojmenovaný (typicky)
<strong>jmxremote.password</strong>, který bude obsahovat dvojice jméno+heslo,
a to v&nbsp;čitelné podobě (!). Tento soubor, resp.&nbsp;přesněji řečeno jeho
ukázková varianta, je součástí instalace JRE. Například na mém systému je tento
soubor umístěn v&nbsp;adresáři
<strong>/usr/lib/jvm/java/jre/lib/management</strong> (ovšem tato cesta může
být na jiných systémech odlišná, ostatně i zde je složena ze symlinků
nastavovaných pomocí <strong>alternatives</strong>):</p>

<pre>
$ <strong>ls -l /usr/lib/jvm/java/jre/lib/management</strong>
total 28
-rw-r--r--. 1 root root  3998 Nov  1  2018 jmxremote.access
-r--r--r--. 1 root root  2856 Nov  1  2018 <strong>jmxremote.password.template</strong>
-rw-r--r--. 1 root root 14630 Nov  1  2018 management.properties
-r--r--r--. 1 root root  3376 Nov  1  2018 snmp.acl.template
</pre>

<p>Soubor <strong>jmxremote.password.template</strong> zkopírujte pod jménem
<strong>jmxremote.password</strong> do adresáře s&nbsp;demonstračním příkladem.
V&nbsp;dalším kroku nastavíme práva souboru na <strong>u+r</strong> tedy
<strong>-r--------</strong> (žádná jiná &ndash; je to kontrolováno při
inicializaci JMX!). Na konec souboru lze přidat uživatelská jména a hesla:</p>

<pre>
# ----------------------------------------------------------------------
#           Template for jmxremote.password
#
# o Copy this template to jmxremote.password
# o Set the user/password entries in jmxremote.password
# o Change the permission of jmxremote.password to read-only
#   by the owner.
#
# See below for the location of jmxremote.password file.
# ----------------------------------------------------------------------
&nbsp;
##############################################################
#        Password File for Remote JMX Monitoring
##############################################################
#
# Password file for Remote JMX API access to monitoring.  This
# file defines the different roles and their passwords.  The access
# control file (jmxremote.access by default) defines the allowed
# access for each role.  To be functional, a role must have an entry
# in both the password and the access files.
#
# Default location of this file is $JRE/lib/management/jmxremote.password
# You can specify an alternate location by specifying a property in 
# the management config file $JRE/lib/management/management.properties
# or by specifying a system property (See that file for details).
&nbsp;
&nbsp;
##############################################################
#    File permissions of the jmxremote.password file
##############################################################
#      Since there are cleartext passwords stored in this file,
#      this file must be readable by ONLY the owner,
#      otherwise the program will exit with an error. 
#
# The file format for password and access files is syntactically the same
# as the Properties file format.  The syntax is described in the Javadoc
# for java.util.Properties.load.
# Typical password file has multiple  lines, where each line is blank,
# a comment (like this one), or a password entry.
#
#
# A password entry consists of a role name and an associated
# password.  The role name is any string that does not itself contain
# spaces or tabs.  The password is again any string that does not
# contain spaces or tabs.  Note that passwords appear in the clear in
# this file, so it is a good idea not to use valuable passwords.
#
# A given role should have at most one entry in this file.  If a role
# has no entry, it has no access.
# If multiple entries are found for the same role name, then the last one
# is used.
#
# In a typical installation, this file can be read by anybody on the
# local machine, and possibly by people on other machines.
# For # security, you should either restrict the access to this file,
# or specify another, less accessible file in the management config file
# as described above.
#
# Following are two commented-out entries.  The "measureRole" role has
# password "QED".  The "controlRole" role has password "R&amp;D".
#
<strong>monitorRole  nbusr123</strong>
<strong>controlRole  nbusr789</strong>
</pre>

<p>Příklad se posléze spustí s&nbsp;těmito volbami:</p>

<pre>
$ <strong>java -Dcom.sun.management.jmxremote.authenticate=true \
       -Dcom.sun.management.jmxremote.ssl=false \
       -Dcom.sun.management.jmxremote.password.file=<u>jmxremote.password</u> \
       -Dcom.sun.management.jmxremote.port=1099 \
       Main</strong>
</pre>

<p>Do připojovacího dialogu je nyní nutné jméno i heslo zapsat:</p>

<a href="https://www.root.cz/obrazek/451427/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-5-prev.png" class="image-451427" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 9: Zadání jména a hesla při připojování ke vzdálené JVM.</i></p>

<a href="https://www.root.cz/obrazek/451428/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-6-prev.png" class="image-451428" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 10: Stav po přihlášení ke vzdálené JVM.</i></p>

<p><div class="rs-tip-major">Poznámka: v&nbsp;žádném případě se nejedná o
ideální řešení a použití souboru s&nbsp;čitelnými hesly znamená, že není
doporučováno zadávat skutečná uživatelská jména a hesla, přesněji řečeno takové
kombinace, které jsou použity i jinde.</div></p>



<p><a name="k05"></a></p>
<h2 id="k05">5. Omezení přístupu definované v&nbsp;souboru <strong>jmxremote.access</strong></h2>

<p>Dalším důležitým souborem, který naleznete v&nbsp;adresáři
<strong>/usr/lib/jvm/java/jre/lib/management</strong>, je soubor nazvaný
<strong>jmxremote.access</strong>:</p>

<pre>
$ <strong>ls -l /usr/lib/jvm/java/jre/lib/management</strong>
total 28
-rw-r--r--. 1 root root  3998 Nov  1  2018 <strong>jmxremote.access</strong>
-r--r--r--. 1 root root  2856 Nov  1  2018 jmxremote.password.template
-rw-r--r--. 1 root root 14630 Nov  1  2018 management.properties
-r--r--r--. 1 root root  3376 Nov  1  2018 snmp.acl.template
</pre>

<p>V&nbsp;tomto souboru jsou pro jednotlivé uživatele definovány přístupové
role, které jsou pouze dvě: <strong>readonly</strong> a
<strong>readwrite</strong>. Ukázková varianta tohoto souboru vypadá takto:</p>

<pre>
######################################################################
#     Default Access Control File for Remote JMX(TM) Monitoring
######################################################################
#
# Access control file for Remote JMX API access to monitoring.
# This file defines the allowed access for different roles.  The
# password file (jmxremote.password by default) defines the roles and their
# passwords.  To be functional, a role must have an entry in
# both the password and the access files.
#
# The default location of this file is $JRE/lib/management/jmxremote.access
# You can specify an alternate location by specifying a property in 
# the management config file $JRE/lib/management/management.properties
# (See that file for details)
#
# The file format for password and access files is syntactically the same
# as the Properties file format.  The syntax is described in the Javadoc
# for java.util.Properties.load.
# A typical access file has multiple lines, where each line is blank,
# a comment (like this one), or an access control entry.
#
# An access control entry consists of a role name, and an
# associated access level.  The role name is any string that does not
# itself contain spaces or tabs.  It corresponds to an entry in the
# password file (jmxremote.password).  The access level is one of the
# following:
#       "readonly" grants access to read attributes of MBeans.
#                   For monitoring, this means that a remote client in this
#                   role can read measurements but cannot perform any action
#                   that changes the environment of the running program.
#       "readwrite" grants access to read and write attributes of MBeans,
#                   to invoke operations on them, and optionally
#                   to create or remove them. This access should be granted
#                   only to trusted clients, since they can potentially
#                   interfere with the smooth operation of a running program.
#
# The "readwrite" access level can optionally be followed by the "create" and/or
# "unregister" keywords.  The "unregister" keyword grants access to unregister
# (delete) MBeans.  The "create" keyword grants access to create MBeans of a
# particular class or of any class matching a particular pattern.  Access
# should only be granted to create MBeans of known and trusted classes.
#
# For example, the following entry would grant readwrite access
# to "controlRole", as well as access to create MBeans of the class
# javax.management.monitor.CounterMonitor and to unregister any MBean:
#  controlRole readwrite \
#              create javax.management.monitor.CounterMonitorMBean \
#              unregister
# or equivalently:
#  controlRole readwrite unregister create javax.management.monitor.CounterMBean
#
# The following entry would grant readwrite access as well as access to create
# MBeans of any class in the packages javax.management.monitor and
# javax.management.timer:
#  controlRole readwrite \
#              create javax.management.monitor.*,javax.management.timer.* \
#              unregister
#
# The \ character is defined in the Properties file syntax to allow continuation
# lines as shown here.  A * in a class pattern matches a sequence of characters
# other than dot (.), so javax.management.monitor.* matches
# javax.management.monitor.CounterMonitor but not
# javax.management.monitor.foo.Bar.
#
# A given role should have at most one entry in this file.  If a role
# has no entry, it has no access.
# If multiple entries are found for the same role name, then the last
# access entry is used.
#
#
# Default access control entries:
# o The "monitorRole" role has readonly access.  
# o The "controlRole" role has readwrite access and can create the standard
#   Timer and Monitor MBeans defined by the JMX API.
&nbsp;
monitorRole   readonly
controlRole   readwrite \
              create javax.management.monitor.*,javax.management.timer.* \
              unregister
</pre>

<p>Tento soubor si opět můžete zkopírovat do adresáře s&nbsp;demonstračním
příkladem a specifikovat ho při spuštění:</p>

<pre>
$ <strong>java -Dcom.sun.management.jmxremote.authenticate=true
       -Dcom.sun.management.jmxremote.ssl=false
       -Dcom.sun.management.jmxremote.password.file=<u>jmxremote.password</u>
       -Dcom.sun.management.jmxremote.access.file=<u>jmxremote.access</u>
       -Dcom.sun.management.jmxremote.port=1099
       Main</strong>
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Chování <strong>jconsole</strong> pro uživatele s&nbsp;rolemi <strong>readonly</strong> a <strong>readwrite</strong></h2>

<p>Vzhledem k&nbsp;tomu, že v&nbsp;souboru s&nbsp;hesly již máme specifikována
dvě jména:</p>

<pre>
<strong>monitorRole  nbusr123</strong>
<strong>controlRole  nbusr789</strong>
</pre>

<p>... s&nbsp;příslušnými rolemi nastavenými v&nbsp;souboru
<strong>jmxremote.access</strong>:</p>

<pre>
<strong>monitorRole   readonly</strong>
<strong>controlRole   readwrite</strong>
</pre>

<p>... si můžeme odzkoušet chování v&nbsp;<strong>jconsoli</strong> po
přihlášení těchto uživatelů.</p>

<p>Nejprve pro uživatele s&nbsp;rolí <strong>readonly</strong>:</p>

<a href="https://www.root.cz/obrazek/451429/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-7-prev.png" class="image-451429" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 11: Přihlášení uživatele s&nbsp;rolí
<strong>readonly</strong>.</i></p>

<a href="https://www.root.cz/obrazek/451430/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-8-prev.png" class="image-451430" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 12: Všechny atributy dostupné přes MBeans jsou čitelné.</i></p>

<a href="https://www.root.cz/obrazek/451431/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-9-prev.png" class="image-451431" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 13: Dostupná (resp.&nbsp;přesněji řečeno viditelná) je i metoda
definovaná v&nbsp;MBeanu.</i></p>

<a href="https://www.root.cz/obrazek/451432/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-10-prev.png" class="image-451432" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 14: Ovšem ve skutečnosti ji nemůžeme zavolat, což přesně odpovídá
vybrané roli.</i></p>

<p>Následně provedeme tytéž operace, ovšem pro uživatele s&nbsp;rolí
<strong>readwrite</strong>:</p>

<a href="https://www.root.cz/obrazek/451433/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-11-prev.png" class="image-451433" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 15: Přihlášení uživatele s&nbsp;rolí
<strong>readwrite</strong>.</i></p>

<a href="https://www.root.cz/obrazek/451434/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-12-prev.png" class="image-451434" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 16: Dostupná (resp.&nbsp;viditelná) je i metoda definovaná
v&nbsp;MBeanu.</i></p>

<a href="https://www.root.cz/obrazek/451435/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-13-prev.png" class="image-451435" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 17: Tuto metodu lze nyní bez problémů zavolat, což opět přesně
odpovídá zvolené roli.</i></p>



<p><a name="k07"></a></p>
<h2 id="k07">7. Použití SSL v&nbsp;reálném provozu</h2>

<p>V&nbsp;reálném provozu je navíc nutné zajistit, aby se jméno a heslo
přenášelo přes zabezpečený komunikační kanál. Ten zajišťuje <i>SSL</i>
(<i>Secure Sockets Layer</i>). Nejprve je nutné nástrojem
<strong>keytool</strong> s&nbsp;přepínačem <strong>-genkeypair</strong> (ten je
dodáván společně s&nbsp;JDK) vygenerovat dvojici klíčů. Následně si vyžádat
certifikát od některé důvěryhodné certifikační autority. Tento certifikát se
naimportuje, a to opět nástrojem <strong>keytool</strong> (přepínač
<strong>--import</strong>). Cesty k&nbsp;souboru s&nbsp;klíči a certifikátem se
použijí při spuštění aplikace (volby javax.new.ssl....).</p>

<p><div class="rs-tip-major">Poznámka: využít lze i soubor s&nbsp;klíči
dostupný v&nbsp;celém systému (typicky uložen
v&nbsp;<strong>/etc</strong>).</div></p>

<p>Vlastní spuštění sledované aplikace, která má přes JMX poskytovat metriky,
nyní proběhne takto:</p>

<pre>
$ <strong>java -Dcom.sun.management.jmxremote.authenticate=true\
       -Dcom.sun.management.jmxremote.ssl=true \
       -Dcom.sun.management.jmxremote.password.file=jmxremote.password \
       -Dcom.sun.management.jmxremote.port=1099 \
       -Dcom.sun.management.jmxremote.ssl.need.client.auth=true \
       -Djavax.net.ssl.keyStore=/home/<u>${USER}</u>/.keystore 
       -Djavax.net.ssl.keyStorePassword=<u>${PASSWORD}</u>
       -Djava.security.manager 
       -Djava.security.policy=jmx.policy 
       Main</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: pochopitelně vše bude funkční jen za
předpokladu, že uživatel má v&nbsp;systému dostupnou svoji část
klíče.</div></p>



<p><a name="k08"></a></p>
<h2 id="k08">8. Metriky, které je vhodné sledovat</h2>

<p>Již minule jsme si ve stručnosti řekli, že Apache Kafka, resp.&nbsp;přesněji
řečeno její jednotlivé části (tedy typicky <i>ZooKeeper</i> a jednotliví
brokeři) vytváří a &bdquo;vystavují&ldquo; poměrně velké množství metrik. Ty je
možné rozdělit do čtyř skupin:</p>

<ol>
<li>Metriky samotného brokera</li>
<li>Metriky vztažené k&nbsp;producentům</li>
<li>Metriky vztažené ke konzumentům</li>
<li>Metriky ZooKeepera (což je samostatný proces)</li>
</ol>

<p>Jednotlivé důležité metriky budou zmíněny v&nbsp;navazujících
kapitolách.</p>

<a href="https://www.root.cz/obrazek/451436/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-14-prev.png" class="image-451436" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 18: MBeans poskytované Kafka brokerem.</i></p>

<p><div class="rs-tip-major">Praktická poznámka: pokud kliknete na nějaký
číselný atribut, dokáže <strong>jconsole</strong> zobrazit graf s&nbsp;vývojem
hodnoty tohoto atributu v&nbsp;čase. Nejedná se sice o nahrazení Grafany, ovšem
i tak je to velmi praktická výpomoc.</div></p>



<p><a name="k09"></a></p>
<h2 id="k09">9. Metriky samotného brokera</h2>

<p>Důležité metriky, které se vztahují přímo k&nbsp;činnosti brokeru (každý
běží ve vlastní JVM), jsou vypsány v&nbsp;následující tabulce:</p>

<table>
<tr><th> #</th><th>Jméno metriky</th><th>Označení MBeanu</th><th>Stručný popis metriky</th></tr>
<tr><td> 1</td><td>UnderReplicatedPartitions</td><td>kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions</td><td>zvyšuje se nad nulu, pokud není nějaký broker dostupný (ideálně se zde očekává nulová hodnota)</td></tr>
<tr><td> 2</td><td>IsrShrinksPerSec</td><td>kafka.server:type=ReplicaManager,name=IsrShrinksPerSec</td><td>změna v&nbsp;počtu replik, které jsou synchronizovány, nutno sledovat společně s IsrExpandsPerSec</td></tr>
<tr><td> 3</td><td>IsrExpandsPerSec</td><td>kafka.server:type=ReplicaManager,name=IsrExpandsPerSec</td><td>tato hodnota typicky následuje (s&nbsp;časovým zpožděním) předchozí hodnotu. Nutno sledovat rozdíly, tj.&nbsp;stav, kdy se počet replik opět nezvýší na původní hodnotu.</td></tr>
<tr><td> 4</td><td>ActiveControllerCount</td><td>kafka.controller:type=KafkaController,name=ActiveControllerCount</td><td>počet aktivních controllerů (což je typicky první uzel, který je spuštěn). Pouze jediný broker by měl mít hodnotu nastavenou na 1, ostatní na nulu (jiné hodnoty značí možné problémy se ZooKeeperem).</td></tr>
<tr><td> 5</td><td>OfflinePartitionsCount</td><td>kafka.controller:type=KafkaController,name=OfflinePartitionsCount</td><td>počet oddílů bez leadera. Nenulová hodnota značí potenciální problém.</td></tr>
<tr><td> 6</td><td>LeaderElectionRateAndTimeMs</td><td>kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs</td><td>čas, který byl stráven změnou leadera v případě, že předchozí leader je z nějakého důvodu nedostupný. Typické hodnoty jsou v řádu milisekund.</td></tr>
<tr><td> 7</td><td>TotalTimeMs</td><td>kafka.network:type=RequestMetrics,name=TotalTimeMs</td><td>čtyři metriky s&nbsp;časy, které byly stráveny čekáním požadavků ve frontě, v&nbsp;leaderu, čekáním na další požadavek atd. Většinou nemá smysl sledovat absolutní hodnoty, ale spíše velikosti změn.</td></tr>
<tr><td> 8</td><td>PurgatorySize</td><td>kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize</td><td>čas strávený vyřízením požadavku. Jedná se o dvě metriky: jedna pro čekající požadavky (nejsou k&nbsp;dispozici data), druhá pro požadavky čekající na <strong>ack</strong></td></tr>
<tr><td> 9</td><td>BytesInPerSec</td><td>kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec</td><td>tato metrika sleduje síťové přenosy, konkrétně počet bajtů přijatých za sekundu (síť může být úzkým hrdlem, ovšem méně často, než diskové operace)</td></tr>
<tr><td>10</td><td>BytesOutPerSec</td><td>kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec</td><td>tato metrika taktéž sleduje síťové přenosy, konkrétně počet bajtů odeslaných za sekundu</td></tr>
<tr><td>10</td><td>RequestsPerSecond</td><td>kafka.network:type=RequestMetrics,name=RequestsPerSec</td><td>počet požadavků od producentů a konzumentů. Vysoké hodnoty (nebo jejich změna) může znamenat připojení špatně naprogramovaného klienta.</td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: poslední metriku lze
&bdquo;zlepšit&ldquo; tím, že se povolí blokové operace jak na producentech,
tak i na konzumentech (samozřejmě jen tam, kde to má smysl).</div></p>

<a href="https://www.root.cz/obrazek/451437/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-15-prev.png" class="image-451437" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 19: MBeans dostupné v&nbsp;prostoru <strong>kafka.server</strong>.</i></p>

<a href="https://www.root.cz/obrazek/451438/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-16-prev.png" class="image-451438" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 20: MBeans dostupné v&nbsp;prostoru <strong>kafka.controller</strong>.</i></p>

<a href="https://www.root.cz/obrazek/451439/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-17-prev.png" class="image-451439" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 21: MBeans dostupné v&nbsp;prostoru <strong>kafka.network</strong>.</i></p>



<p><a name="k10"></a></p>
<h2 id="k10">10. Metriky vztažené k&nbsp;producentům</h2>

<p>Každý producent zpráv, který je naprogramován v&nbsp;Javě, Scale, Clojure
atd. (tedy v&nbsp;jazyku běžícím nad JVM) a který komunikuje s&nbsp;Apache
Kafkou, nabízí následující důležité metriky, které lze přes JMX sledovat:</p>

<table>
<tr><th>#</th><th>Jméno metriky</th><th>Označení MBeanu</th><th>Stručný popis metriky</th></tr>
<tr><td>1</td><td>compression-rate-avg</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>míra komprimace zpráv posílaných producentem</td></tr>
<tr><td>2</td><td>response-rate</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>rychlost odpovědí od brokera, ke kterému je producent připojen (ovlivněno volbou <strong>request.required.acks</strong>, měla by být víceméně stabilní)</td></tr>
<tr><td>3</td><td>request-rate</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>rychlost požadavků producenta, lze omezit pomocí technologie <i>rate-limit</i></td></tr>
<tr><td>4</td><td>request-latency-avg</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>časové zpoždění mezi posláním zprávy a odpovědí brokeru (měla by být stabilní)</td></tr>
<tr><td>5</td><td>outgoing-byte-rate</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>měří míru využití sítě, resp.&nbsp;rychlost přenosu dat</td></tr>
<tr><td>6</td><td>io-wait-time-ns-avg</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>čekání způsobené tím, že producent posílá více zpráv, než broker dokáže zpracovat (hodnota by měla být co nejnižší)</td></tr>
<tr><td>7</td><td>batch-size-avg</td><td>kafka.producer:type=producer-metrics,client-id=([-.w]+)</td><td>velikost bloku, který se posílá (16 kB je výchozí hodnota), pokud producent čeká na brokera</td></tr>
</table>

<a href="https://www.root.cz/obrazek/451440/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-18-prev.png" class="image-451440" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 22: Sledování metrik producenta zpráv.</i></p>

<a href="https://www.root.cz/obrazek/451441/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-19-prev.png" class="image-451441" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 23: Graf zobrazený u vybrané metriky.</i></p>



<p><a name="k11"></a></p>
<h2 id="k11">11. Vytvoření jednoduchého producenta zpráv naprogramovaného v&nbsp;JVM jazyce</h2>

<p>Metriky související s&nbsp;producenty zpráv jsou (pochopitelně) nabízeny
těmi producenty, které jsou naprogramovány v&nbsp;nějakém jazyce, který
generuje bajtkód zpracovávaný virtuálním strojem Javy. Pro zajímavost si tedy
vytvoříme producenta nikoli přímo v&nbsp;Javě (takový producent je použitý
v&nbsp;každém tutoriálu), ale v&nbsp;jazyce Clojure. Využijeme přitom
informace, které jsou zmíněny v&nbsp;článku <a
href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-projektu-apache-kafka-jazyku-clojure-a-knihovne-jackdaw-streamy-a-kolony/">Pokročilý
streaming založený na projektu Apache Kafka, jazyku Clojure a knihovně Jackdaw
(streamy a kolony)</a>.</p>

<p>Do projektového souboru se doplní závislost na knihovně
<strong>jackdaw</strong>:</p>

<pre>
(defproject <strong>produce-messages-1</strong> "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "EPL-2.0 OR GPL-2.0-or-later WITH Classpath-exception-2.0"
            :url "https://www.eclipse.org/legal/epl-2.0/"}
  :dependencies [[org.clojure/clojure "1.10.1"]
                 <strong>[fundingcircle/jackdaw "0.7.6"]</strong>]
  :main ^:skip-aot produce-messages-4.core
  :target-path "target/%s"
  :profiles {:uberjar {:aot :all
                       :jvm-opts ["-Dclojure.compiler.direct-linking=true"]}})
</pre>

<p>Samotný producent zpráv generuje 1000 zpráv s&nbsp;frekvencí přibližně jedna
zpráva za sekundu:</p>

<pre>
(ns <strong>produce-messages-4.core</strong>
  (:require [jackdaw.client :as jc]
            [clojure.pprint :as pp]))
&nbsp;
(def <strong>producer-config</strong>
  {"bootstrap.servers" "localhost:9092"
   "key.serializer" "org.apache.kafka.common.serialization.StringSerializer"
   "value.serializer" "org.apache.kafka.common.serialization.StringSerializer"
   "acks" "all"
   "client.id" "foo"})
&nbsp;
(defn <strong>-main</strong>
  [&amp; args]
  (with-open [producer (<strong>jc/producer producer-config</strong>)]
    (doseq [i (range 1 1000)]
      (Thread/sleep 1000)
      (let [key (str i)
            value (str "Message #" i)]
        (println "Publishing message with key '" key "' and value '" value "'")
        (let [record-metadata (<strong>jc/produce! producer {:topic-name "test3"} key value)</strong>]
          (pp/pprint @record-metadata)))
      )))
</pre>

<p>Tento projekt naleznete na adrese <a
href="https://github.com/tisnik/message-queues-examples/tree/master/kafka/clojure/produce-messages-4">https://github.com/tisnik/message-queues-examples/tree/master/kafka/clojure/produce-messages-4</a>.</p>

<p><div class="rs-tip-major">Poznámka: i když se jedná o klienta
naprogramovaného v&nbsp;Clojure a používajícího specializovanou knihovnu,
interně je využit standardní konektor k&nbsp;Apache Kafce.</div></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Metriky vztažené ke konzumentům</h2>

<p>Další důležité metriky, o nichž se v&nbsp;dnešním článku zmíníme, jsou
metriky vztažené ke konzumentům. Opět platí, že tyto metriky jsou dostupné ve
chvíli, kdy je klient naprogramován v&nbsp;Javě nebo v&nbsp;jiném jazyku, který
produkuje bajtkód zpracovávaný virtuálním strojem Javy:</p>

<table>
<tr><th>#</th><th>Jméno metriky</th><th>Označení MBeanu</th><th>Stručný popis metriky</th></tr>
<tr><td>1</td><td>records-lag</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+),partition=([-.w]+)</td><td>jedna z&nbsp;nejdůležitějších metrik vůbec &ndash; ukazuje, jak opožděn je konzument zpráv oproti nejnovější zprávě v&nbsp;tématu</td></tr>
<tr><td>2</td><td>records-lag-max</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+),partition=([-.w]+)</td><td>největší hodnota získaná předchozí metrikou za dobu života konzumenta</td></tr>
<tr><td>3</td><td>&nbsp;</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+)</td><td>dtto, ovšem neomezeno na klienta a téma</td></tr>
<tr><td>4</td><td>bytes-consumed-rate</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+)</td><td>rychlost přenosu dat ke konzumentovi (měří tedy rychlost přenosu po síti)</td></tr>
<tr><td>5</td><td>&nbsp;</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+)</td><td>dtto, opět bez omezení</td></tr>
<tr><td>6</td><td>records-consumed-rate</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+),topic=([-.w]+)</td><td>opět měření rychlosti konzumace zpráv, ovšem měřeno v&nbsp;počtu zpráv (ty nemusí mít konstantní velikost)</td></tr>
<tr><td>7</td><td>&nbsp;</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client-id=([-.w]+)</td><td>dtto, opět bez omezení</td></tr>
<tr><td>8</td><td>fetch-rate</td><td>kafka.consumer:type=consumer-fetch-manager-metrics,client_id=([-.w]+)</td><td>rychlost konzumace zpráv, pokud se blíží k&nbsp;nule, může to znamenat problémy na straně konzumenta (například pomalá databáze atd.)</td></tr>
</table>

<a href="https://www.root.cz/obrazek/451442/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-20-prev.png" class="image-451442" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 24: Sledování metrik konzumenta zpráv.</i></p>

<a href="https://www.root.cz/obrazek/451443/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-21-prev.png" class="image-451443" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 25: Graf zobrazený u vybrané metriky.</i></p>

 

<p><a name="k13"></a></p>
<h2 id="k13">13. Vytvoření jednoduchého konzumenta zpráv naprogramovaného v&nbsp;JVM jazyce</h2>

<p>Opět si ukážeme jednoduchého konzumenta zpráv, kterého lze spustit a
sledovat jeho metriky s&nbsp;využitím MBeans a technologie JMX. Zdrojový kód
tohoto demonstračního příkladu, který je naprogramován v&nbsp;Clojure, je
dostupný na adrese <a
href="https://github.com/tisnik/message-queues-examples/tree/master/kafka/clojure/consume-messages-3">https://github.com/tisnik/message-queues-examples/tree/master/kafka/clojure/consume-messages-3</a>.
Po vytvoření Clojure projektu se do projektového souboru
<strong>project.clj</strong> přidala knihovna <strong>jackdaw</strong>:</p>

<pre>
(defproject <strong>consume-messages-2</strong> "0.1.0-SNAPSHOT"
  :description "FIXME: write description"
  :url "http://example.com/FIXME"
  :license {:name "EPL-2.0 OR GPL-2.0-or-later WITH Classpath-exception-2.0"
            :url "https://www.eclipse.org/legal/epl-2.0/"}
  :dependencies [[org.clojure/clojure "1.10.1"]
                 <strong>[fundingcircle/jackdaw "0.7.6"]</strong>]
  :main ^:skip-aot consume-messages-3.core
  :target-path "target/%s"
  :profiles {:uberjar {:aot :all
                       :jvm-opts ["-Dclojure.compiler.direct-linking=true"]}})
</pre>

<p>Samotný konzument zpracovává zprávy v&nbsp;nekonečné smyčce, takže po
zpracování celého tématu čeká na příchod nových zpráv:</p>

<pre>
(ns <strong>consume-messages-3.core</strong>
  (:require [jackdaw.client :as jc]
            [jackdaw.client.log :as jl]
            [clojure.pprint :as pp]))
&nbsp;
(def <strong>consumer-config</strong>
  {"bootstrap.servers" "localhost:9092"
   "key.deserializer" "org.apache.kafka.common.serialization.StringDeserializer"
   "value.deserializer" "org.apache.kafka.common.serialization.StringDeserializer"
   "auto.offset.reset" "earliest"
   "group.id"  "group-A"})
&nbsp;
(defn <strong>-main</strong>
  [&amp; args]
  (with-open [consumer (-&gt; (<strong>jc/consumer consumer-config</strong>)
                           (https://github.com/tisnik/message-queues-examples/tree/master/kafka/clojure/consume-messages-3))]
    (doseq [{:keys [key value partition timestamp offset]} (<strong>jl/log consumer 10</strong>)]
      (println "key: " key)
      (println "value: " value)
      (println "partition: " partition)
      (println "timestamp: " timestamp)
      (println "offset: " offset))))
</pre>

<a href="https://www.root.cz/obrazek/451444/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-22-prev.png" class="image-451444" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 26: Sledování vybraných metrik tohoto konzumenta zpráv.</i></p>



<p><a name="k14"></a></p>
<h2 id="k14">14. Metriky virtuálního stroje Javy</h2>

<p>V&nbsp;některých situacích může být důležité sledovat i vybrané metriky
poskytované samotným virtuálním strojem Javy (JVM). Kritickým místem bývá
správce paměti, který sice běží na pozadí (v&nbsp;samostatných vláknech), ovšem
při &bdquo;úklidu&ldquo; Old Generation budou ostatní vlákna brokera či
ZooKeepera na určitý okamžik pozastaveny. Kafka používá správce paměti G1,
takže se vyplatí sledovat tyto metriky:</p>

<table>
<tr><th>#</th><th>Jméno metriky</th><th>Označení MBeanu</th><th>Stručný popis metriky</th></tr>
<tr><td>1</td><td>CollectionCount</td><td>java.lang:type=GarbageCollector,name=G1 Young Generation</td><td>celkový počet úklidů Young generation (bývá velký, ovšem čas úklidu malý)</td></tr>
<tr><td>2</td><td>CollectionTime </td><td>java.lang:type=GarbageCollector,name=G1 Young Generation</td><td>celkový čas strávený úklidem Young generation</td></tr>
<tr><td>3</td><td>CollectionCount</td><td>java.lang:type=GarbageCollector,name=G1 Old Generation</td><td>celkový počet úklidů Old generation (bývá malý, ovšem čas úklidu delší)</td></tr>
<tr><td>4</td><td>CollectionTime </td><td>java.lang:type=GarbageCollector,name=G1 Old Generation</td><td>celkový čas strávený úklidem Old generation</td></tr>
</table>
 
<p><div class="rs-tip-major">Poznámka: základní informace o správě paměti
v&nbsp;JVM jsme si vysvětlili v&nbsp;článcích <a
href="https://www.root.cz/clanky/monitorovani-procesu-a-sprava-pameti-v-jdk-6-a-jdk-7-2/">Monitorování
procesů a správa paměti v JDK 6 a JDK 7 (2)</a> a <a
href="https://www.root.cz/clanky/monitorovani-procesu-a-sprava-pameti-v-jdk-6-a-jdk-7-4/">Monitorování
procesů a správa paměti v JDK 6 a JDK 7 (4)</a>.</div></p>
 
<a href="https://www.root.cz/obrazek/451445/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-23-prev.png" class="image-451445" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 27: Sledování metrik správce paměti Kafka brokeru.</i></p>
 
<a href="https://www.root.cz/obrazek/451446/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-24-prev.png" class="image-451446" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 28: Sledování metrik správce paměti Kafka brokeru.</i></p>



<p><a name="k15"></a></p>
<h2 id="k15">15. Metriky ZooKeepera</h2>

<p>Většina metrik ZooKeepera je dostupná přes takzvané &bdquo;four-letter
words&ldquo; zmíněné <a href="#k14">v&nbsp;navazující kapitole</a>. Sledovat je
vhodné zejména následující metriky:</p>

<table>
<tr><th>#</th><th>Jméno metriky</th><th>Stručný popis metriky</th></tr>
<tr><td>1</td><td>outstanding_requests</td><td>počet požadavků, které nebyly vyřízeny (mělo by se blížit k&nbsp;nule)</td></tr>
<tr><td>2</td><td>avg_latency</td><td>čas (vyjádřený v&nbsp;milisekundách) na vyřízení požadavku ZooKeeperem</td></tr>
<tr><td>3</td><td>num_alive_connections</td><td>počet klientů, kteří jsou v&nbsp;daný okamžik k&nbsp;ZooKeeperu přihlášeni</td></tr>
<tr><td>4</td><td>followers</td><td>počet aktivních followerů (bez leadera)</td></tr>
<tr><td>5</td><td>pending_syncs</td><td>ZooKeeper musí ukládat transakční logy na disk, zde je zobrazen počet čekajících zápisů (čím menší, tím lépe)</td></tr>
<tr><td>6</td><td>open_file_descriptor_count</td><td>počet otevřených souborů se stavovými informacemi (musí být menší, než povolený počet deskriptorů nastavený v&nbsp;systému)</td></tr>
</table>

<a href="https://www.root.cz/obrazek/451447/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-25-prev.png" class="image-451477" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="324" height="270" /></a>
<p><i>Obrázek 29: Metriky ZooKeepera.</i></p>



<p><a name="k16"></a></p>
<h2 id="k16">16. Povolení &bdquo;four-letter words&ldquo; ZooKeepera</h2>

<p><a href="#k15">V&nbsp;předchozí kapitole</a> jsme se zmínili o tzv.
&bdquo;four-letter words&ldquo;. Jedná se o příkazy (každý se skládá ze čtyř
písmen &ndash; odtud jejich název), které je možné ZooKeeperu posílat přes
<strong>telnet</strong> či <strong>nc</strong> a získávat tak další informace.
Ovšem jednotlivé příkazy je nejprve zapotřebí povolit, a to buď specifikací
jednotlivých příkazů, nebo lze využít žolíkového znaku *:</p>

<pre>
$ <strong>export KAFKA_OPTS="-Dzookeeper.4lw.commands.whitelist=*"</strong>
$ <strong>./zookeeper.sh</strong>
</pre>

<p>Po tomto spuštění ZooKeepera se můžeme k&nbsp;jeho instanci připojit
<strong>telnet</strong>em:</p>

<pre>
$ <strong>telnet localhost 2181</strong>
&nbsp;
Trying ::1...
Connected to localhost.
Escape character is '^]'.
</pre>

<p>Dostupné jsou příkazy popsané <a
href="https://zookeeper.apache.org/doc/r3.1.2/zookeeperAdmin.html#sc_zkCommands">zde</a>.
Zajímat nás bude příkaz <strong>mntr</strong>. Ten vypíše základní metriky
ZooKeepera a ukončí připojení:</p>

<pre>
<strong>mntr</strong>
&nbsp;
zk_version      3.5.6-c11b7e26bc554b8523dc929761dd28808913f091, built on 10/08/2019 20:18 GMT
zk_avg_latency  0
zk_max_latency  0
zk_min_latency  0
zk_packets_received     1
zk_packets_sent 0
zk_num_alive_connections        1
zk_outstanding_requests 0
zk_server_state standalone
zk_znode_count  5
zk_watch_count  0
zk_ephemerals_count     0
zk_approximate_data_size        44
zk_open_file_descriptor_count   125
zk_max_file_descriptor_count    4096
&nbsp;
Connection closed by foreign host.
</pre>

<a href="https://www.root.cz/obrazek/451448/"><img src="https://i.iinfo.cz/images/433/kafka-jmx-2-26-prev.png" class="image-451448" alt="&#160;" title="Autor: tisnik, podle licence: &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/legalcode.cs&quot;&gt;CC-BY&lt;/a&gt;" width="370" height="143" /></a>
<p><i>Obrázek 30: Další ukázka &bdquo;dashboardu&ldquo; zobrazujícího vybrané
metriky Apache Kafky.</i></p>



<p><a name="k17"></a></p>
<h2 id="k17">17. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové soubory naprogramované v&nbsp;Javě a použité <a
href="https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/">v&nbsp;předchozím</a>
i v&nbsp;dnešním článku byly uloženy do Git repositáře, který je dostupný na
adrese <a
href="https://github.com/tisnik/presentations/">https://github.com/tisnik/presentations/</a>.
V&nbsp;případě, že nebudete chtít klonovat celý repositář, můžete namísto toho
použít odkazy na jednotlivé soubory, které naleznete v&nbsp;následující
tabulce:</p>

<table>
<tr><th> #</th><th>Příklad/soubor</th><th>Stručný popis</th><th>Cesta</th></tr>
<tr><td> 1</td><td>example1/StatusMBean.java</td><td>rozhraní s&nbsp;popisem MBeans</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example1/StatusMBean.java">https://github.com/tisnik/presentations/blob/master/mbeans/example1/StatusMBean.java</a></td></tr>
<tr><td> 2</td><td>example1/Status.java</td><td>implementace rozhraní <strong>StatusMBean</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example1/Status.java">https://github.com/tisnik/presentations/blob/master/mbeans/example1/Status.java</a></td></tr>
<tr><td> 3</td><td>example1/Main.java</td><td>kód prvního demonstračního příkladu s&nbsp;inicializací JMX</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example1/Main.java">https://github.com/tisnik/presentations/blob/master/mbeans/example1/Main.java</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 4</td><td>example2/StatusMBean.java</td><td>rozhraní s&nbsp;popisem MBeans</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example2/StatusMBean.java">https://github.com/tisnik/presentations/blob/master/mbeans/example2/StatusMBean.java</a></td></tr>
<tr><td> 5</td><td>example2/Status.java</td><td>implementace rozhraní <strong>StatusMBean</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example2/Status.java">https://github.com/tisnik/presentations/blob/master/mbeans/example2/Status.java</a></td></tr>
<tr><td> 6</td><td>example2/Main.java</td><td>kód druhého demonstračního příkladu s&nbsp;inicializací JMX</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example2/Main.java">https://github.com/tisnik/presentations/blob/master/mbeans/example2/Main.java</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td> 7</td><td>example3/StatusMBean.java</td><td>rozhraní s&nbsp;popisem MBeans</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example3/StatusMBean.java">https://github.com/tisnik/presentations/blob/master/mbeans/example3/StatusMBean.java</a></td></tr>
<tr><td> 8</td><td>example3/Status.java</td><td>implementace rozhraní <strong>StatusMBean</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example3/Status.java">https://github.com/tisnik/presentations/blob/master/mbeans/example3/Status.java</a></td></tr>
<tr><td> 9</td><td>example3/Main.java</td><td>kód třetího demonstračního příkladu s&nbsp;inicializací JMX</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example3/Main.java">https://github.com/tisnik/presentations/blob/master/mbeans/example3/Main.java</a></td></tr>
<tr><td>10</td><td>example3/config.yaml</td><td>prázdný konfigurační soubor používaný knihovnou JMX exporter</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example3/">https://github.com/tisnik/presentations/blob/master/mbeans/example3/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>11</td><td>example4/StatusMBean.java</td><td>rozhraní s&nbsp;popisem MBeans</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example4/StatusMBean.java">https://github.com/tisnik/presentations/blob/master/mbeans/example4/StatusMBean.java</a></td></tr>
<tr><td>12</td><td>example4/Status.java</td><td>implementace rozhraní <strong>StatusMBean</strong></td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example4/Status.java">https://github.com/tisnik/presentations/blob/master/mbeans/example4/Status.java</a></td></tr>
<tr><td>13</td><td>example4/Main.java</td><td>kód čtvrtého demonstračního příkladu s&nbsp;inicializací JMX</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example4/Main.java">https://github.com/tisnik/presentations/blob/master/mbeans/example4/Main.java</a></td></tr>
<tr><td>14</td><td>example4/config.yaml</td><td>prázdný konfigurační soubor používaný knihovnou JMX exporter</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example4/">https://github.com/tisnik/presentations/blob/master/mbeans/example4/</a></td></tr>
<tr><td>15</td><td>example4/jmxremote.password</td><td>soubor s&nbsp;hesly uloženými v&nbsp;plaintextu</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example4jmxremote.password/">https://github.com/tisnik/presentations/blob/master/mbeans/example4/jmxremote.password</a></td></tr>
<tr><td>16</td><td>example4/jmxremote.access</td><td>soubor s&nbsp;mapováním uživatele na role</td><td><a href="https://github.com/tisnik/presentations/blob/master/mbeans/example4/jmxremote.access">https://github.com/tisnik/presentations/blob/master/mbeans/example4/jmxremote.access</a></td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: výše uvedené zdrojové kódy jsou zpětně
kompatibilní až minimálně do verze Java 7.</div></p>



<p><a name="k18"></a></p>
<h2 id="k18">18. Odkazy na relevantní články na Rootu</h2>

<ol>

<li>Použití nástroje Apache Kafka v&nbsp;aplikacích založených na mikroslužbách<br />
<a href="https://www.root.cz/clanky/pouziti-nastroje-apache-kafka-v-aplikacich-zalozenych-na-mikrosluzbach/">https://www.root.cz/clanky/pouziti-nastroje-apache-kafka-v-aplikacich-zalozenych-na-mikrosluzbach/</a>
</li>

<li>Apache Kafka: distribuovaná streamovací platforma<br />
<a href="https://www.root.cz/clanky/apache-kafka-distribuovana-streamovaci-platforma/">https://www.root.cz/clanky/apache-kafka-distribuovana-streamovaci-platforma/</a>
</li>

<li>Pokročilý streaming založený na Apache Kafce, jazyku Clojure a knihovně Jackdaw<br />
<a href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw/">https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw/</a>
</li>

<li>Pokročilý streaming založený na Apache Kafce, jazyku Clojure a knihovně Jackdaw (2. část)<br />
<a href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw-2-cast/">https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-apache-kafce-jazyku-clojure-a-knihovne-jackdaw-2-cast/</a>
</li>

<li>Pokročilý streaming založený na projektu Apache Kafka, jazyku Clojure a knihovně Jackdaw (streamy a kolony)<br />
<a href="https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-projektu-apache-kafka-jazyku-clojure-a-knihovne-jackdaw-streamy-a-kolony/">https://www.root.cz/clanky/pokrocily-streaming-zalozeny-na-projektu-apache-kafka-jazyku-clojure-a-knihovne-jackdaw-streamy-a-kolony/</a>
</li>

<li>Vývoj služeb postavených na systému Apache Kafka v&nbsp;jazyku Go<br />
<a href="https://www.root.cz/clanky/vyvoj-sluzeb-postavenych-na-systemu-apache-kafka-v-jazyku-go/">https://www.root.cz/clanky/vyvoj-sluzeb-postavenych-na-systemu-apache-kafka-v-jazyku-go/</a>
</li>

<li>Práce s&nbsp; Kafkou z&nbsp;příkazové řádky: nástroje Kafkacat a Kcli<br />
<a href="https://www.root.cz/clanky/prace-s-kafkou-z-prikazove-radky-nastroje-kafkacat-a-kcli/">https://www.root.cz/clanky/prace-s-kafkou-z-prikazove-radky-nastroje-kafkacat-a-kcli/</a>
</li>

<li>Apache ActiveMQ – další systém implementující message brokera<br />
<a href="https://www.root.cz/clanky/apache-activemq-dalsi-system-implementujici-message-brokera/#k12">https://www.root.cz/clanky/apache-activemq-dalsi-system-implementujici-message-brokera/#k12</a>
</li>

<li>Sledování činnosti systému Apache Kafka přes JMX i metriky Promethea<br />
<a href="https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/">https://www.root.cz/clanky/sledovani-cinnosti-systemu-apache-kafka-pres-jmx-i-metriky-promethea/</a>
</li>

</ol>



<p><a name="k19"></a></p>
<h2 id="k19">19. Odkazy na Internetu</h2>

<ol>

<li>The Java™ Tutorials &ndash; Introducing MBeans<br />
<a href="https://docs.oracle.com/javase/tutorial/jmx/mbeans/index.html">https://docs.oracle.com/javase/tutorial/jmx/mbeans/index.html</a>
</li>

<li>Standard MBeans<br />
<a href="https://docs.oracle.com/javase/tutorial/jmx/mbeans/standard.html">https://docs.oracle.com/javase/tutorial/jmx/mbeans/standard.html</a>
</li>

<li>JMX Exporter<br />
<a href="https://github.com/prometheus/jmx_exporter">https://github.com/prometheus/jmx_exporter</a>
</li>

<li>Monitor Apache Kafka with Prometheus and Grafana<br />
<a href="https://computingforgeeks.com/monitor-apache-kafka-with-prometheus-and-grafana/">https://computingforgeeks.com/monitor-apache-kafka-with-prometheus-and-grafana/</a>
</li>

<li>Kafka Monitoring Using Prometheus<br />
<a href="https://www.metricfire.com/blog/kafka-monitoring-using-prometheus/">https://www.metricfire.com/blog/kafka-monitoring-using-prometheus/</a>
</li>

<li>Collecting Kafka Performance Metrics with OpenTelemetry<br />
<a href="https://www.splunk.com/en_us/blog/devops/monitoring-kafka-performance-metrics-with-splunk-infrastructure-monitoring.html">https://www.splunk.com/en_us/blog/devops/monitoring-kafka-performance-metrics-with-splunk-infrastructure-monitoring.html</a>
</li>

<li>Monitoring Kafka performance metrics<br />
<a href="https://www.datadoghq.com/blog/monitoring-kafka-performance-metrics/">https://www.datadoghq.com/blog/monitoring-kafka-performance-metrics/</a>
</li>

<li>Kcli: is a kafka read only command line browser.<br />
<a href="https://github.com/cswank/kcli">https://github.com/cswank/kcli</a>
</li>

<li>Kcli: a kafka command line browser<br />
<a href="https://go.libhunt.com/kcli-alternatives">https://go.libhunt.com/kcli-alternatives</a>
</li>

<li>Awesome Go<br />
<a href="https://github.com/avelino/awesome-go">https://github.com/avelino/awesome-go</a>
</li>

<li>Real-Time Payments with Clojure and Apache Kafka (podcast)<br />
<a href="https://www.evidentsystems.com/news/confluent-podcast-about-apache-kafka/">https://www.evidentsystems.com/news/confluent-podcast-about-apache-kafka/</a>
</li>

<li>Microservices: The Rise Of Kafka<br />
<a href="https://movio.co/blog/microservices-rise-kafka/">https://movio.co/blog/microservices-rise-kafka/</a>
</li>

<li>Building a Microservices Ecosystem with Kafka Streams and KSQL<br />
<a href="https://www.confluent.io/blog/building-a-microservices-ecosystem-with-kafka-streams-and-ksql/">https://www.confluent.io/blog/building-a-microservices-ecosystem-with-kafka-streams-and-ksql/</a>
</li>

<li>An introduction to Apache Kafka and microservices communication<br />
<a href="https://medium.com/@ulymarins/an-introduction-to-apache-kafka-and-microservices-communication-bf0a0966d63">https://medium.com/@ulymarins/an-introduction-to-apache-kafka-and-microservices-communication-bf0a0966d63</a>
</li>

<li>kappa-architecture.com<br />
<a href="http://milinda.pathirage.org/kappa-architecture.com/">http://milinda.pathirage.org/kappa-architecture.com/</a>
</li>

<li>Questioning the Lambda Architecture<br />
<a href="https://www.oreilly.com/ideas/questioning-the-lambda-architecture">https://www.oreilly.com/ideas/questioning-the-lambda-architecture</a>
</li>

<li>Lambda architecture<br />
<a href="https://en.wikipedia.org/wiki/Lambda_architecture">https://en.wikipedia.org/wiki/Lambda_architecture</a>
</li>

<li>Kafka &ndash; ecosystem (Wiki)<br />
<a href="https://cwiki.apache.org/confluence/display/KAFKA/Ecosystem">https://cwiki.apache.org/confluence/display/KAFKA/Ecosystem</a>
</li>

<li>The Kafka Ecosystem - Kafka Core, Kafka Streams, Kafka Connect, Kafka REST Proxy, and the Schema Registry<br />
<a href="http://cloudurable.com/blog/kafka-ecosystem/index.html">http://cloudurable.com/blog/kafka-ecosystem/index.html</a>
</li>

<li>A Kafka Operator for Kubernetes<br />
<a href="https://github.com/krallistic/kafka-operator">https://github.com/krallistic/kafka-operator</a>
</li>

<li>Kafka Streams<br />
<a href="https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Streams">https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Streams</a>
</li>

<li>Kafka Streams<br />
<a href="http://kafka.apache.org/documentation/streams/">http://kafka.apache.org/documentation/streams/</a>
</li>

<li>Kafka Streams (FAQ)<br />
<a href="https://cwiki.apache.org/confluence/display/KAFKA/FAQ#FAQ-Streams">https://cwiki.apache.org/confluence/display/KAFKA/FAQ#FAQ-Streams</a>
</li>

<li>Event stream processing<br />
<a href="https://en.wikipedia.org/wiki/Event_stream_processing">https://en.wikipedia.org/wiki/Event_stream_processing</a>
</li>

<li>Part 1: Apache Kafka for beginners - What is Apache Kafka?<br />
<a href="https://www.cloudkarafka.com/blog/2016-11-30-part1-kafka-for-beginners-what-is-apache-kafka.html">https://www.cloudkarafka.com/blog/2016-11-30-part1-kafka-for-beginners-what-is-apache-kafka.html</a>
</li>

<li>What are some alternatives to Apache Kafka?<br />
<a href="https://www.quora.com/What-are-some-alternatives-to-Apache-Kafka">https://www.quora.com/What-are-some-alternatives-to-Apache-Kafka</a>
</li>

<li>What is the best alternative to Kafka?<br />
<a href="https://www.slant.co/options/961/alternatives/~kafka-alternatives">https://www.slant.co/options/961/alternatives/~kafka-alternatives</a>
</li>

<li>A super quick comparison between Kafka and Message Queues<br />
<a href="https://hackernoon.com/a-super-quick-comparison-between-kafka-and-message-queues-e69742d855a8?gi=e965191e72d0">https://hackernoon.com/a-super-quick-comparison-between-kafka-and-message-queues-e69742d855a8?gi=e965191e72d0</a>
</li>

<li>Kafka Queuing: Kafka as a Messaging System<br />
<a href="https://dzone.com/articles/kafka-queuing-kafka-as-a-messaging-system">https://dzone.com/articles/kafka-queuing-kafka-as-a-messaging-system</a>
</li>

<li>Apache Kafka Logs: A Comprehensive Guide<br />
<a href="https://hevodata.com/learn/apache-kafka-logs-a-comprehensive-guide/">https://hevodata.com/learn/apache-kafka-logs-a-comprehensive-guide/</a>
</li>

<li>Microservices – Not a free lunch!<br />
<a href="http://highscalability.com/blog/2014/4/8/microservices-not-a-free-lunch.html">http://highscalability.com/blog/2014/4/8/microservices-not-a-free-lunch.html</a>
</li>

<li>Microservices, Monoliths, and NoOps<br />
<a href="http://blog.arungupta.me/microservices-monoliths-noops/">http://blog.arungupta.me/microservices-monoliths-noops/</a>
</li>

<li>Microservice Design Patterns<br />
<a href="http://blog.arungupta.me/microservice-design-patterns/">http://blog.arungupta.me/microservice-design-patterns/</a>
</li>

<li>REST vs Messaging for Microservices – Which One is Best?<br />
<a href="https://solace.com/blog/experience-awesomeness-event-driven-microservices/">https://solace.com/blog/experience-awesomeness-event-driven-microservices/</a>
</li>

<li>Kappa Architecture Our Experience<br />
<a href="https://events.static.linux­found.org/sites/events/fi­les/slides/ASPgems%20-%20Kappa%20Architecture.pdf">https://events.static.linux­found.org/sites/events/fi­les/slides/ASPgems%20-%20Kappa%20Architecture.pdf</a>
</li>

<li>Apache Kafka Streams and Tables, the stream-table duality<br />
<a href="https://towardsdatascience.com/apache-kafka-streams-and-tables-the-stream-table-duality-ee904251a7e?gi=f22a29cd1854">https://towardsdatascience.com/apache-kafka-streams-and-tables-the-stream-table-duality-ee904251a7e?gi=f22a29cd1854</a>
</li>

<li>Alertmanager<br />
<a href="https://prometheus.io/docs/alerting/alertmanager/">https://prometheus.io/docs/alerting/alertmanager/</a>
</li>

<li>Grafana support for Prometheus<br />
<a href="https://prometheus.io/docs/visualization/grafana/">https://prometheus.io/docs/visualization/grafana/</a>
</li>

<li>Prometheus: from metrics to insight<br />
<a href="https://prometheus.io/">https://prometheus.io/</a>
</li>

<li>Java Management Extensions (JMX)<br />
<a href="https://en.wikipedia.org/wiki/Java_Management_Extensions">https://en.wikipedia.org/wiki/Java_Management_Extensions</a>
</li>

<li>JConsole<br />
<a href="https://en.wikipedia.org/wiki/JConsole">https://en.wikipedia.org/wiki/JConsole</a>
</li>

<li>Using JConsole<br />
<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/management/jconsole.html">https://docs.oracle.com/javase/8/docs/technotes/guides/management/jconsole.html</a>
</li>

<li>Overview of Java SE Monitoring and Management<br />
<a href="https://docs.oracle.com/en/java/javase/15/management/overview-java-se-monitoring-and-management.html">https://docs.oracle.com/en/java/javase/15/management/overview-java-se-monitoring-and-management.html</a>
</li>

<li>Using jconsole (JMX) with SSL encryption<br />
<a href="https://docs.datastax.com/en/cassandra-oss/3.x/cassandra/configuration/secureJconsoleSSL.html">https://docs.datastax.com/en/cassandra-oss/3.x/cassandra/configuration/secureJconsoleSSL.html</a>
</li>

<li>Step by step instructions for securing JMX authentication for nodetool utility, OpsCenter and JConsole<br />
<a href="https://support.datastax.com/hc/en-us/articles/204226179-Step-by-step-instructions-for-securing-JMX-authentication-for-nodetool-utility-OpsCenter-and-JConsole">https://support.datastax.com/hc/en-us/articles/204226179-Step-by-step-instructions-for-securing-JMX-authentication-for-nodetool-utility-OpsCenter-and-JConsole</a>
</li>

<li>Enabling remote JMX with password authentication only<br />
<a href="https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwd.html">https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwd.html</a>
</li>

<li>Enabling remote JMX with password authentication and SSL<br />
<a href="https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwdssl.html">https://docs.oracle.com/javadb/10.10.1.2/adminguide/radminjmxenablepwdssl.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2021</small></p>
</body>
</html>

