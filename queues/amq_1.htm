<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>Apache ActiveMQ - další systém implementující message brokera</title>
<meta name="Author" content="Pavel Tisnovsky" />
<meta name="Generator" content="vim" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<style type="text/css">
         body {color:#000000; background:#ffffff;}
         h1  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#c00000; text-align:center; padding-left:1em}
         h2  {font-family: arial, helvetica, sans-serif; color:#ffffff; background-color:#0000c0; padding-left:1em; text-align:left}
         h3  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#c0c0c0; padding-left:1em; text-align:left}
         h4  {font-family: arial, helvetica, sans-serif; color:#000000; background-color:#e0e0e0; padding-left:1em; text-align:left}
         a   {font-family: arial, helvetica, sans-serif;}
         li  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ol  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         ul  {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify; width:450px;}
         p   {font-family: arial, helvetica, sans-serif; color:#000000; text-align:justify;}
         pre {background:#e0e0e0}
</style>
</head>

<body>

<h1>Apache ActiveMQ - další systém implementující message brokera</h1>

<h3>Pavel Tišnovský</h3>

<p></p>

<h1>Úvodník</h1>

<p></p>



<h2>Obsah</h2>

<p><a href="#k01">*** 1. Apache ActiveMQ - další systém implementující message brokera</a></p>
<p><a href="#k02">*** 2. Protokoly podporované systémem Apache ActiveMQ</a></p>
<p><a href="#k03">*** 3. Instalace Apache ActiveMQ</a></p>
<p><a href="#k04">*** 4. Základní příkazy podporované nástrojem <strong>activemq</strong></a></p>
<p><a href="#k05">*** 5. Použití nástroje <strong>activemq</strong> pro poslání popř.&nbsp;pro přijetí zprávy</a></p>
<p><a href="#k06">*** 6. Komunikační protokol STOMP a knihovna <strong>stomp.py</strong></a></p>
<p><a href="#k07">*** 7. Jednoduchý producent zpráv naprogramovaný v&nbsp;Pythonu</a></p>
<p><a href="#k08">*** 8. Konzument zpráv naprogramovaný taktéž v&nbsp;Pythonu</a></p>
<p><a href="#k09">*** 9. Využití komunikační strategie PUSH-PULL s&nbsp;frontami zpráv</a></p>
<p><a href="#k10">*** 10. Sledování stavu Apache ActiveMQ z&nbsp;konzole</a></p>
<p><a href="#k11">*** 11. Webové rozhraní Apache ActiveMQ</a></p>
<p><a href="#k12">*** 12. Přístup k&nbsp;nastavení a stavu Apache ActiveMQ s&nbsp;využitím nástroje <strong>jconsole</strong></a></p>
<p><a href="#k13">*** 13. Přístup ke frontám</a></p>
<p><a href="#k14">*** 14. Ukázka komunikace s&nbsp;Apache ActiveMQ s&nbsp;využitím telnetu přes protokol STOMP</a></p>
<p><a href="#k15">*** 15. Připojení a poslání zprávy do fronty</a></p>
<p><a href="#k16">*** 16. Další příkazy podporované protokolem STOMP</a></p>
<p><a href="#k17">*** 17. Od Apache ActiveMQ k&nbsp;Red Hat AMQ</a></p>
<p><a href="#k18">*** 18. Součásti (komponenty) systému Red Hat AMQ</a></p>
<p><a href="#k19">*** 19. Repositář s&nbsp;demonstračními příklady</a></p>
<p><a href="#k20">*** 20. Odkazy na předchozí části seriálu</a></p>
<p><a href="#k21">*** 21. Odkazy na Internetu</a></p>



<p><a name="k01"></a></p>
<h2 id="k01">1. Apache ActiveMQ - další systém implementující message brokera</h2>



<p><a name="k02"></a></p>
<h2 id="k02">2. Protokoly podporované systémem Apache ActiveMQ</h2>

<p></p>

<table>
<tr><th>Zkratka</th><td>Protokol</td></tr>
<tr><td>AMQP 1.0</td><td>Advanced Message Queuing Protocol</td></tr>
<tr><td>Stomp</td><td>Streaming Text Oriented Messaging Protocol</td></tr>
<tr><td>MQTT</td><td>MQTT is a machine-to-machine connectivity protocol</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>OpenWire</td><td></td></tr>
<tr><td>REST</td><td>Representational state transfer</td></tr>
<tr><td>RSS a Atom</td><td></td></tr>
<tr><td>WSIF</td><td>Web Services Invocation Framework</td></tr>
<tr><td>WS Notification</td><td></td></tr>
<tr><td>XMPP</td><td>Extensible Messaging and Presence Protocol</td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>AUTO</td><td></td></tr>
</table>

<p><div class="rs-tip-major">Poznámka: AUTO není vlastní protokol, protože se
jedná o konfigurační volbu, při níž je aktuálně použitý protokol zdetekován
automaticky. Pouze první tři protokoly řádky tabulky obsahují skutečné
protokoly určené pro message brokery, ostatní protokoly jsou jen odvozené
popř.&nbsp;se jedná o napojení na odlišnou technologii (příkladej je RSS a
XMPP).</div></p>

<p>V&nbsp;enterprise sféře je pravděpodobně nejpoužívanějším protokolem pro
message brokery protokol AMQP (<i>Advanced Message Queuing Protocol</i>),
s&nbsp;nímž jsme se již částečně setkali při popisu systému RabbitMQ. Ovšem
zatímco Rabbit podporuje verze 0.9.1, 0.9 a 0.8, je tomu v&nbsp;případě Apache
MQ jinak, protože je podporován novější protokol verze 1.0 (ten se od
předchozích variant liší svou sémantikou i vlastní binárním formátem). Jedná se
o binární protokol, v&nbsp;němž je velká váha kladena nejen na precizní
specifikaci formátu dat, ale i na popis sémantiky operací prováděných službami,
které AMQP implementují (či možná lépe řečeno akceptují).</p>

<p>Dalším důležitým protokolem, který lze použít pro komunikaci s&nbsp;Apache
MQ, je protokol nazvaný <a href="http://stomp.github.io/">STOMP</a> neboli
<i>Streaming Text Oriented Messaging Protocol</i>. Jedná se o relativně
jednoduchý protokol založený &ndash; jak jeho název napovídá &ndash; na
příkazech posílaných v&nbsp;textovém formátu se syntaxí, která se podobá
protokolu HTTP. Předností STOMPu je snadná implementace klientů a
v&nbsp;případě potřeby (ladění, simulace útoků atd.) je dokonce možné namísto
dedikovaného klienta použít běžný <a
href="https://linux.die.net/man/1/telnet">telnet</a>, což si ostatně ukážeme <a
href="#k14">ve čtrnácté kapitole</a>. Ve výchozím nastavení existuje omezení
maximální délky zprávy na 10 MB, ovšem tuto hodnotu je možné v&nbsp;případě
potřeby změnit.</p>

<p>Třetím užitečným protokolem, o němž se ve stručnosti zmíníme a který je
systémem Apache ActiveMQ podporován, je protokol nazvaný <a
href="http://mqtt.org/">MQTT</a>, který je mj.&nbsp;určený pro dnes populární
IoT, tj.&nbsp;obecně pro zařízení s&nbsp;relativně malým výkonem
popř.&nbsp;omezenými systémovými zdroji (a většinou i omezenou odolností proti
útokům :).</p>

<p><div class="rs-tip-major">Poznámka: dnešní demonstrační příklady budou
založeny na protokolu STOMP, který sice nemusí být nejrychlejší (je textový a
vyžaduje parsing na straně klienta), ovšem jeho použití a odladění celého
systému je nejjednodušší.</div></p>



<p><a name="k03"></a></p>
<h2 id="k03">3. Instalace Apache ActiveMQ</h2>

<p>Systém Apache ActiveMQ je z&nbsp;větší části naprogramován v&nbsp;Javě a
vyžaduje, aby na systému byla nainstalována JRE (<i>Java Runtime
Environment</i>) Javy 8 (což by na většině současných systémů nemělo být
problematické zajistit). Instalace je ve skutečnosti velmi snadná a spočívá se
stažení a rozbalení jednoho tarballu. Poslední stabilní verze Apache ActiveMQ
je 5.18 a stáhneme ji buď běžným webovým prohlížečem nebo přímo
z&nbsp;příkazové řádky tímto příkazem:</p>

<pre>
$ <strong>wget -O apache-activemq-5.15.8-bin.tar.gz "http://www.apache.org/dyn/closer.cgi?filename=/activemq/5.15.8/apache-activemq-5.15.8-bin.tar.gz&amp;action=download"</strong>
</pre>

<p><div class="rs-tip-major">Poznámka: celou URL je skutečně nutné zapsat do
uvozovek, aby nebyl znak &amp; interpretován shellem (spuštění příkazu na
pozadí).</div></p>

<p>Dále musíme získaný tarball, jehož velikost přesahuje 50 MB, rozbalit
příkazem:</p>

<pre>
$ <strong>tar xvfz apache-activemq-5.15.8-bin.tar.gz</strong>
...
...
...
</pre>

<p>Nyní si otestujeme, zda je možné spustit základní nástroj
<strong>activemq</strong>, který je umístěný v&nbsp;podadresáři
<strong>bin</strong>:</p>

<pre>
$ <strong>cd apache-activemq-5.15.8/bin/</strong>
</pre>

<p>Zkusíme si zobrazit nápovědu se základními podporovanými příkazy:</p>

<pre>
$ <strong>./activemq help</strong>
&nbsp;
Usage: Main [--extdir &lt;dir&gt;] [task] [task-options] [task data]
&nbsp;
Tasks:
    browse                   - Display selected messages in a specified destination.
    bstat                    - Performs a predefined query that displays useful statistics regarding the specified broker
    consumer                 - Receives messages from the broker
    create                   - Creates a runnable broker instance in the specified path.
    decrypt                  - Decrypts given text
    dstat                    - Performs a predefined query that displays useful tabular statistics regarding the specified destination type
    encrypt                  - Encrypts given text
    export                   - Exports a stopped brokers data files to an archive file
    list                     - Lists all available brokers in the specified JMX context
    producer                 - Sends messages to the broker
    purge                    - Delete selected destination's messages that matches the message selector
    query                    - Display selected broker component's attributes and statistics.
    start                    - Creates and starts a broker using a configuration file, or a broker URI.
    stop                     - Stops a running broker specified by the broker name.
&nbsp;
Task Options (Options specific to each task):
    --extdir &lt;dir&gt;  - Add the jar files in the directory to the classpath.
    --version       - Display the version information.
    -h,-?,--help    - Display this help information. To display task specific help, use Main [task] -h,-?,--help
&nbsp;
Task Data:
    - Information needed by each specific task.
&nbsp;
JMX system property options:
    -Dactivemq.jmx.url=&lt;jmx service uri&gt; (default is: 'service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi')
    -Dactivemq.jmx.user=&lt;user name&gt;
    -Dactivemq.jmx.password=&lt;password&gt;
</pre>



<p><a name="k04"></a></p>
<h2 id="k04">4. Základní příkazy podporované nástrojem <strong>activemq</strong></h2>

<p></p>

<pre>
$ <strong>./activemq start</strong>
</pre>

<p></p>

<pre>
$ <strong>./activemq stop</strong>
</pre>

<pre>
$ <strong>./activemq list</strong>
&nbsp;
Connecting to pid: 19789
brokerName = localhost
</pre>

<pre>
$ <strong>./activemq list</strong>
&nbsp;
INFO: Broker not available at: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
</pre>



<p><a name="k05"></a></p>
<h2 id="k05">5. Použití nástroje <strong>activemq</strong> pro poslání popř.&nbsp;pro přijetí zprávy</h2>

queue://TEST

<pre>
$ <strong>./activemq producer --message "Hello world" --messageCount 1</strong>
</pre>

<pre>
$ <strong>./activemq producer --payloadUrl https://www.root.cz --messageCount 1</strong>
</pre>

<pre>
$ <strong>./activemq consumer --transacted true</strong>
&nbsp;
...
...
...
 INFO | consumer-1 Received Hello
 INFO | consumer-1 Committing transaction: 99
 INFO | consumer-1 Consumed: 1000 messages
 INFO | consumer-1 Consumer thread finished
</pre>



<p><a name="k06"></a></p>
<h2 id="k06">6. Komunikační protokol STOMP a knihovna <strong>stomp.py</strong></h2>

<pre>
$ <strong>pip3 install --user stomp-py</strong>
&nbsp;
Collecting stomp-py
  Downloading https://files.pythonhosted.org/packages/80/c8/d13f0058ede2d83e54028cbad98a5886aaf2501017ddf4231ec1deff81b3/stomp.py-4.1.15-py2.py3-none-any.whl
Installing collected packages: stomp-py
Successfully installed stomp-py
</pre>



<p><a name="k07"></a></p>
<h2 id="k07">7. Jednoduchý producent zpráv naprogramovaný v&nbsp;Pythonu</h2>

<pre>
#!/usr/bin/env python
&nbsp;
import time
import stomp
&nbsp;
&nbsp;
destination1 = "/topic/event"
destination2 = "/topic/event2"
&nbsp;
MESSAGES = 10
&nbsp;
conn = stomp.Connection(host_and_ports=[("localhost", 61613)])
conn.start()
conn.connect(login="admin", passcode="admin")
&nbsp;
&nbsp;
for i in range(0, MESSAGES):
    message = "Hello world #{i}!".format(i=i)
    conn.send(destination1, message, persistent='true')
    conn.send(destination2, message, persistent='true')
&nbsp;
&nbsp;
conn.disconnect()
</pre>



<p><a name="k08"></a></p>
<h2 id="k08">8. Konzument zpráv naprogramovaný taktéž v&nbsp;Pythonu</h2>

<pre>
#!/usr/bin/env python
&nbsp;
import time
import stomp
&nbsp;
&nbsp;
class SimpleListener(object):
&nbsp;
    def <strong>__init__</strong>(self, conn):
        self.conn = conn
&nbsp;
    def <strong>on_message</strong>(self, headers, message):
        print("Received message: {m}".format(m=message))
&nbsp;
    def <strong>on_error</strong>(self, headers, message):
        print("Received an error {e}".format(e=message))
&nbsp;
&nbsp;
destination = "/topic/event"
&nbsp;
conn = stomp.Connection(host_and_ports=[("localhost", 61613)])
conn.set_listener('', SimpleListener(conn))
conn.start()
&nbsp;
conn.connect(login="admin", passcode="admin")
conn.subscribe(id='simple_listener', destination=destination, ack='auto')
&nbsp;
print("Waiting for messages...")
&nbsp;
while True:
    time.sleep(10)
</pre>



<p><a name="k09"></a></p>
<h2 id="k09">9. Využití komunikační strategie PUSH-PULL s&nbsp;frontami zpráv</h2>

<pre>
#!/usr/bin/env python
  
import time
import stomp
&nbsp;
&nbsp;
destination1 = "/queue/test"
destination2 = "/queue/test2"
&nbsp;
MESSAGES = 10
&nbsp;
conn = stomp.Connection(host_and_ports=[("localhost", 61613)])
conn.start()
conn.connect(login="admin", passcode="admin")
&nbsp;
&nbsp;
for i in range(0, MESSAGES):
    message = "Hello world #{i}!".format(i=i)
    conn.send(destination1, message, persistent='true')
    conn.send(destination2, message, persistent='true')
&nbsp;
&nbsp;
conn.disconnect()
</pre>

<pre>
#!/usr/bin/env python
  
import time
import stomp
&nbsp;
&nbsp;
class SimpleListener(object):
&nbsp;
    def <strong>__init__</strong>(self, conn):
        self.conn = conn
&nbsp;
    def <strong>on_message</strong>(self, headers, message):
        print("Received message: {m}".format(m=message))
&nbsp;
    def <strong>on_error</strong>(self, headers, message):
        print("Received an error {e}".format(e=message))
&nbsp;
&nbsp;
destination = "/queue/test"
&nbsp;
conn = stomp.Connection(host_and_ports=[("localhost", 61613)])
conn.set_listener('', SimpleListener(conn))
conn.start()
&nbsp;
conn.connect(login="admin", passcode="admin")
conn.subscribe(id='simple_listener', destination=destination, ack='auto')
&nbsp;
print("Waiting for messages...")
&nbsp;
while True:
    time.sleep(10)
</pre>



<p><a name="k10"></a></p>
<h2 id="k10">10. Sledování stavu Apache ActiveMQ z&nbsp;konzole</h2>

informace o brokerovi

<pre>
$ <strong>./activemq bstat</strong>
&nbsp;
ACTIVEMQ_HOME: /home/tester/apache-activemq-5.15.8
ACTIVEMQ_BASE: /home/tester/apache-activemq-5.15.8
ACTIVEMQ_CONF: /home/tester/apache-activemq-5.15.8/conf
ACTIVEMQ_DATA: /home/tester/apache-activemq-5.15.8/data
useJmxServiceUrl Found JMS Url: service:jmx:rmi://127.0.0.1/stub/rO0ABXN9AAAAAQAlamF2YXgubWFuYWdlbWVudC5yZW1vdGUucm1pLlJNSVNlcnZlcnhyABdqYXZhLmxhbmcucmVmbGVjdC5Qcm94eeEn2iDMEEPLAgABTAABaHQAJUxqYXZhL2xhbmcvcmVmbGVjdC9JbnZvY2F0aW9uSGFuZGxlcjt4cHNyAC1qYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN0SW52b2NhdGlvbkhhbmRsZXIAAAAAAAAAAgIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHc0AAtVbmljYXN0UmVmMgAACTEyNy4wLjAuMQAAiFeZdArPzVDT1a21HUEAAAFoyGEyGYABAHg=
Connecting to pid: 9667
BrokerName = localhost
TotalEnqueueCount = 1350
TotalDequeueCount = 1090
TotalMessageCount = 21
TotalConsumerCount = 0
Uptime = 3 hours 9 minutes


Name = test2
destinationName = test2
destinationType = Queue
EnqueueCount = 20
DequeueCount = 0
ConsumerCount = 0
DispatchCount = 0

connectorName = openwire

connectorName = stomp

Name = test
destinationName = test
destinationType = Queue
EnqueueCount = 21
DequeueCount = 20
ConsumerCount = 0
DispatchCount = 22

Name = event2
destinationName = event2
destinationType = Topic
EnqueueCount = 80
DequeueCount = 20
ConsumerCount = 0
DispatchCount = 20

destinationName = ActiveMQ.Advisory.TempQueue_ActiveMQ.Advisory.TempTopic
destinationType = Topic

connectorName = ws

Name = TEST
destinationName = TEST
destinationType = Queue
EnqueueCount = 1010
DequeueCount = 1010
ConsumerCount = 0
DispatchCount = 1010

Name = KahaDBPersistenceAdapter[/home/tester/apache-activemq-5.15.8/data/kahadb,Index:/home/tester/apache-activemq-5.15.8/data/kahadb]

connectorName = amqp


Name = event
destinationName = event
destinationType = Topic
EnqueueCount = 94
DequeueCount = 40
ConsumerCount = 0
DispatchCount = 40

connectorName = mqtt

</pre>

destinace

<pre>
$ <strong>./activemq dstat</strong>
&nbsp;
ACTIVEMQ_HOME: /home/tester/apache-activemq-5.15.8
ACTIVEMQ_BASE: /home/tester/apache-activemq-5.15.8
ACTIVEMQ_CONF: /home/tester/apache-activemq-5.15.8/conf
ACTIVEMQ_DATA: /home/tester/apache-activemq-5.15.8/data
useJmxServiceUrl Found JMS Url: service:jmx:rmi://127.0.0.1/stub/rO0ABXN9AAAAAQAlamF2YXgubWFuYWdlbWVudC5yZW1vdGUucm1pLlJNSVNlcnZlcnhyABdqYXZhLmxhbmcucmVmbGVjdC5Qcm94eeEn2iDMEEPLAgABTAABaHQAJUxqYXZhL2xhbmcvcmVmbGVjdC9JbnZvY2F0aW9uSGFuZGxlcjt4cHNyAC1qYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN0SW52b2NhdGlvbkhhbmRsZXIAAAAAAAAAAgIAAHhyABxqYXZhLnJtaS5zZXJ2ZXIuUmVtb3RlT2JqZWN002G0kQxhMx4DAAB4cHc0AAtVbmljYXN0UmVmMgAACTEyNy4wLjAuMQAAiFeZdArPzVDT1a21HUEAAAFoyGEyGYABAHg=
Connecting to pid: 9667
Name                                                Queue Size  Producer #  Consumer #   Enqueue #   Dequeue #   Forward #    Memory %
ActiveMQ.Advisory.Connection                                 0           0           0          85           0           0           0
ActiveMQ.Advisory.Consumer.Queue.TEST                        0           0           0           4           0           0           0
ActiveMQ.Advisory.Consumer.Queue.test                        0           0           0          10           0           0           0
ActiveMQ.Advisory.Consumer.Topic.event                       0           0           0          10           0           0           0
ActiveMQ.Advisory.Consumer.Topic.event2                      0           0           0           6           0           0           0
ActiveMQ.Advisory.MasterBroker                               0           0           0           1           0           0           0
ActiveMQ.Advisory.Producer.Queue.TEST                        0           0           0           4           0           0           0
ActiveMQ.Advisory.Queue                                      0           0           0           3           0           0           0
ActiveMQ.Advisory.Topic                                      0           0           0           2           0           0           0
TEST                                                         0           0           0        1010        1010           0           0
event                                                        0           0           0          94          40           0           0
event2                                                       0           0           0          80          20           0           0
test                                                         1           0           0          21          20           0           0
test2                                                       20           0           0          20           0           0           0
</pre>



<p><a name="k11"></a></p>
<h2 id="k11">11. Webové rozhraní Apache ActiveMQ</h2>

http://localhost:8161/admin

admin admin

*** image ***
<p><i>Obrázek 1: </i></p>

*** image ***
<p><i>Obrázek 2: </i></p>

*** image ***
<p><i>Obrázek 3: </i></p>



<p><a name="k12"></a></p>
<h2 id="k12">12. Přístup k&nbsp;nastavení a stavu Apache ActiveMQ s&nbsp;využitím nástroje <strong>jconsole</strong></h2>

*** image ***
<p><i>Obrázek 1: </i></p>

*** image ***
<p><i>Obrázek 1: </i></p>

*** image ***
<p><i>Obrázek 1: </i></p>



<p><a name="k13"></a></p>
<h2 id="k13">13. Přístup ke frontám</h2>



<p><a name="k14"></a></p>
<h2 id="k14">14. Ukázka komunikace s&nbsp;Apache ActiveMQ s&nbsp;využitím telnetu</h2>

<pre>
</pre>



<p><a name="k15"></a></p>
<h2 id="k15">15. Připojení a poslání zprávy do fronty</h2>

<p><div class="rs-tip-major">Poznámka: ve výpisech bude tučně označený text
zapisovaný uživatelem, zatímco běžným fontem je zapsán výstup, který získáme na
terminálu.</div></p>

<pre>
$ <strong>telnet localhost 61613</strong>
&nbsp;
Trying ::1...
Connected to localhost.
Escape character is '^]'.
</pre>

<pre>
<strong>CONNECT</strong>
<strong>login: admin</strong>
<strong>password: admin</strong>
&nbsp;
<strong>^@</strong>
CONNECTED
server:ActiveMQ/5.15.8
heart-beat:0,0
session:ID:localhost.localdomain-43853-1549550040544-3:40
version:1.0
</pre>

<pre>
<strong>SEND</strong>
<strong>destination:/queue/test</strong>
<strong>receipt:</strong>
&nbsp;
<strong>Hello from Telnet!</strong>
<strong>^@</strong>
RECEIPT
receipt-id:
</pre>



<p><a name="k16"></a></p>
<h2 id="k16">16. Další příkazy podporované protokolem STOMP</h2>

<table>
<tr><th>Příkaz</th><th>Typ rámce</th><th>Stručný popis</th></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
<tr><td></td><td></td><td></td></tr>
</table>



<p><a name="k17"></a></p>
<h2 id="k17">17. Od Apache ActiveMQ k&nbsp;Red Hat AMQ</h2>

admin/admin




Broad Platform and Language Support
AMQ works with multiple languages and operating systems, so your diverse application components can
communicate. AMQ supports C++, Java, JavaScript, Python, Ruby, and .NET applications, as well as
Linux, Windows, and JVM-based environments

Protokoly
AMQP 1.0 MQTT STOMP


Centralized Management
With AMQ, you can administer all AMQ components from a single management interface. You can use
JMX or the REST interface to manage servers programatically.

Kompatibilita



Central broker
vice zdroju zprav
broker
prijemci zprav

Adresovani
point to point
  producer-broker (s jednou frontou)-konzumenti
  producer-broker (s vice frontami)-konzumenti
pub-sub
  producer-broker (s vice frontami)-konzumenti
kombinace

Persistence zprav
  Zurnal
  Databaze
  



<p><a name="k18"></a></p>
<h2 id="k18">18. Součásti (komponenty) systému Red Hat AMQ</h2>

AMQ Broker
vice protokolu
perzistence zprav
podpora front
HA a clustering
load balancing
podpora nekolika protokolu
podpora pro autentizaci klientu
postaveny na ActiveMQ Artemis


AMQ Interconnect
distribuce zprav
routing zprav mezi koncovymi uzly (client, broker, servicy)
scalability
podpora pro redundantni cesty

AMQ Clients
 API pro posilani a prijem zprav
 multiplatformni
 vice rozhrani: JMS, C++, JavaScript, Ruby, Python, .NET

AMQ Console
 pro administrati brokeru, routeru, front

<table>
<tr><th>Komponenta</th><th>Jazyk</th><th>Platforma</th><th>Protokol(y)</th></tr>
<tr><td>AMQ Broker</td><td>&times;</td><td>JVM</td><td>AMQP 1.0, MQTT, OpenWire, STOMP, Artemis Core Protocol, HornetQ Core Protocol</td></tr>
<tr><td>AMQ Interconnect</td><td>&times;</td><td>Linux</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ C++</td><td>C++ </td><td>Linux, Windows</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ JavaScript</td><td>JavaScript</td><td>Node.js, browsery</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ JMS</td><td>Java </td><td>JVM</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ .NET</td><td>C# </td><td>.NET</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ Python</td><td>Python </td><td>Linux</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ Ruby</td><td>Ruby </td><td>Linux</td><td>AMQP 1.0</td></tr>
<tr><td>AMQ Core Protocol JMS</td><td>Java</td><td>JVM</td><td>Core Protocol</td></tr>
<tr><td>AMQ OpenWire JMS</td><td>Java</td><td>JVM</td><td>OpenWire</td></tr>
</table>



<p><a name="k19"></a></p>
<h2 id="k19">19. Repositář s&nbsp;demonstračními příklady</h2>

<p>Zdrojové kódy všech dnes popsaných demonstračních příkladů naprogramovaných
v&nbsp;Pythonu byly uloženy do Git repositáře, který je dostupný na adrese <a
href="https://github.com/tisnik/message-queues-examples">https://github.com/tisnik/message-queues-examples</a>
(stále na GitHubu :-). V&nbsp;případě, že nebudete chtít klonovat celý
repositář (ten je ovšem &ndash; alespoň prozatím &ndash; velmi malý, dnes má
doslova několik kilobajtů), můžete namísto toho použít odkazy na jednotlivé
příklady, které naleznete v&nbsp;následující tabulce.</p>

<table>
<tr><th>Příklad</th><th>Skript/kód</th><th>Popis</th><th>Cesta</th></tr>
<tr><td>1</td><td></td><td></td><td><a href="https://github.com/tisnik/message-queues-examples/blob/master/">https://github.com/tisnik/message-queues-examples/blob/master/</a></td></tr>
<tr><td>1</td><td></td><td></td><td><a href="https://github.com/tisnik/message-queues-examples/blob/master/">https://github.com/tisnik/message-queues-examples/blob/master/</a></td></tr>
<tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>
<tr><td>2</td><td></td><td></td><td><a href="https://github.com/tisnik/message-queues-examples/blob/master/">https://github.com/tisnik/message-queues-examples/blob/master/</a></td></tr>
<tr><td>2</td><td></td><td></td><td><a href="https://github.com/tisnik/message-queues-examples/blob/master/">https://github.com/tisnik/message-queues-examples/blob/master/</a></td></tr>
</table>



<p><a name="k20"></a></p>
<h2 id="k20">20. Odkazy na předchozí části seriálu</h2>

<p>V&nbsp;této kapitole jsou uvedeny odkazy na všech devět předchozích částí
seriálu, v&nbsp;němž se zabýváme různými způsoby implementace front zpráv a
k&nbsp;nim přidružených technologií:</p>



<p><a name="k21"></a></p>
<h2 id="k21">21. Odkazy na Internetu</h2>

<ol>

<li>Apache ActiveMQ<br />
<a href="http://activemq.apache.org/">http://activemq.apache.org/</a>
</li>

<li>Apache ActiveMQ Artemis<br />
<a href="https://activemq.apache.org/artemis/">https://activemq.apache.org/artemis/</a>
</li>

<li>Apache ActiveMQ Artemis User Manual<br />
<a href="https://activemq.apache.org/artemis/docs/latest/index.html">https://activemq.apache.org/artemis/docs/latest/index.html</a>
</li>

<li>Command Line Tools (Apache ActiveMQ)<br />
<a href="https://activemq.apache.org/activemq-command-line-tools-reference.html">https://activemq.apache.org/activemq-command-line-tools-reference.html</a>
</li>

<li>stomp.py 4.1.21 na PyPi<br />
<a href="https://pypi.org/project/stomp.py/">https://pypi.org/project/stomp.py/</a>
</li>

<li>Stomp Tutorial<br />
<a href="https://access.redhat.com/documentation/en-US/Fuse_Message_Broker/5.5/html/Connectivity_Guide/files/FMBConnectivityStompTelnet.html">https://access.redhat.com/documentation/en-US/Fuse_Message_Broker/5.5/html/Connectivity_Guide/files/FMBConnectivityStompTelnet.html</a>
</li>

<li>Apache Camel<br />
<a href="https://camel.apache.org/">https://camel.apache.org/</a>
</li>

<li>Red Hat Fuse<br />
<a href="https://developers.redhat.com/products/fuse/overview/">https://developers.redhat.com/products/fuse/overview/</a>
</li>

<li>Confusion between ActiveMQ and ActiveMQ-Artemis?<br />
<a href="https://serverfault.com/questions/873533/confusion-between-activemq-and-activemq-artemis">https://serverfault.com/questions/873533/confusion-between-activemq-and-activemq-artemis</a>
</li>

<li>Staré stránky projektu HornetQ<br />
<a href="http://hornetq.jboss.org/">http://hornetq.jboss.org/</a>
</li>

<li>Snapshot JeroMQ verze 0.4.4<br />
<a href="https://oss.sonatype.org/content/repositories/snapshots/org/zeromq/jeromq/0.4.4-SNAPSHOT/">https://oss.sonatype.org/content/repositories/snapshots/org/zeromq/jeromq/0.4.4-SNAPSHOT/</a>
</li>

Difference between ActiveMQ vs Apache ActiveMQ Artemis
http://activemq.2283324.n4.nabble.com/Difference-between-ActiveMQ-vs-Apache-ActiveMQ-Artemis-td4703828.html

<li>Repositář knihovny JeroMQ<br />
<a href="https://github.com/zeromq/jeromq/">https://github.com/zeromq/jeromq/</a>
</li>

<li>ØMQ &ndash; Distributed Messaging <br />
<a href="http://zeromq.org/">http://zeromq.org/</a>
</li>

<li>ØMQ Community<br />
<a href="http://zeromq.org/community">http://zeromq.org/community</a>
</li>

<li>Get The Software<br />
<a href="http://zeromq.org/intro:get-the-software">http://zeromq.org/intro:get-the-software</a>
</li>

<li>PyZMQ Documentation<br />
<a href="https://pyzmq.readthedocs.io/en/latest/">https://pyzmq.readthedocs.io/en/latest/</a>
</li>

<li>Module: zmq.decorators<br />
<a href="https://pyzmq.readthedocs.io/en/latest/api/zmq.decorators.html">https://pyzmq.readthedocs.io/en/latest/api/zmq.decorators.html</a>
</li>

<li>ZeroMQ is the answer, by Ian Barber<br />
<a href="https://vimeo.com/20605470">https://vimeo.com/20605470</a>
</li>

<li>ZeroMQ RFC<br />
<a href="https://rfc.zeromq.org/">https://rfc.zeromq.org/</a>
</li>

<li>ZeroMQ and Clojure, a brief introduction<br />
<a href="https://antoniogarrote.wordpress.com/2010/09/08/zeromq-and-clojure-a-brief-introduction/">https://antoniogarrote.wordpress.com/2010/09/08/zeromq-and-clojure-a-brief-introduction/</a>
</li>

<li>zeromq/czmq<br />
<a href="https://github.com/zeromq/czmq">https://github.com/zeromq/czmq</a>
</li>

<li>golang wrapper for CZMQ<br />
<a href="https://github.com/zeromq/goczmq">https://github.com/zeromq/goczmq</a>
</li>

<li>ZeroMQ version reporting in Python<br />
<a href="http://zguide.zeromq.org/py:version">http://zguide.zeromq.org/py:version</a>
</li>

<li>A Go interface to ZeroMQ version 4<br />
<a href="https://github.com/pebbe/zmq4">https://github.com/pebbe/zmq4</a>
</li>

<li>Broker vs. Brokerless<br />
<a href="http://zeromq.org/whitepapers:brokerless">http://zeromq.org/whitepapers:brokerless</a>
</li>

<li>Learning ØMQ with pyzmq<br />
<a href="https://learning-0mq-with-pyzmq.readthedocs.io/en/latest/">https://learning-0mq-with-pyzmq.readthedocs.io/en/latest/</a>
</li>

<li>Céčková funkce <strong>zmq_ctx_new</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-ctx-new">http://api.zeromq.org/4-2:zmq-ctx-new</a>
</li>

<li>Céčková funkce <strong>zmq_ctx_destroy</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-ctx-destroy">http://api.zeromq.org/4-2:zmq-ctx-destroy</a>
</li>

<li>Céčková funkce <strong>zmq_bind</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-bind">http://api.zeromq.org/4-2:zmq-bind</a>
</li>

<li>Céčková funkce <strong>zmq_unbind</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-unbind">http://api.zeromq.org/4-2:zmq-unbind</a>
</li>

<li>Céčková C funkce <strong>zmq_connect</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-connect">http://api.zeromq.org/4-2:zmq-connect</a>
</li>

<li>Céčková C funkce <strong>zmq_disconnect</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-disconnect">http://api.zeromq.org/4-2:zmq-disconnect</a>
</li>

<li>Céčková C funkce <strong>zmq_send</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-send">http://api.zeromq.org/4-2:zmq-send</a>
</li>

<li>Céčková C funkce <strong>zmq_recv</strong><br />
<a href="http://api.zeromq.org/4-2:zmq-recv">http://api.zeromq.org/4-2:zmq-recv</a>
</li>

<li>Třída <strong>Context</strong> (Python)<br />
<a href="https://pyzmq.readthedocs.io/en/latest/api/zmq.html#context">https://pyzmq.readthedocs.io/en/latest/api/zmq.html#context</a>
</li>

<li>Třída <strong>Socket</strong> (Python)<br />
<a href="https://pyzmq.readthedocs.io/en/latest/api/zmq.html#socket">https://pyzmq.readthedocs.io/en/latest/api/zmq.html#socket</a>
</li>

<li>Python binding<br />
<a href="http://zeromq.org/bindings:python">http://zeromq.org/bindings:python</a>
</li>

<li>Why should I have written ZeroMQ in C, not C++ (part I)<br />
<a href="http://250bpm.com/blog:4">http://250bpm.com/blog:4</a>
</li>

<li>Why should I have written ZeroMQ in C, not C++ (part II) <br />
<a href="http://250bpm.com/blog:8">http://250bpm.com/blog:8</a>
</li>

<li>About Nanomsg<br />
<a href="https://nanomsg.org/">https://nanomsg.org/</a>
</li>

<li>Advanced Message Queuing Protocol<br />
<a href="https://www.amqp.org/">https://www.amqp.org/</a>
</li>

<li>Advanced Message Queuing Protocol na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol">https://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol</a>
</li>

<li>Dokumentace k&nbsp;příkazu <strong>rabbitmqctl</strong><br />
<a href="https://www.rabbitmq.com/rabbitmqctl.8.html">https://www.rabbitmq.com/rabbitmqctl.8.html</a>
</li>

<li>RabbitMQ<br />
<a href="https://www.rabbitmq.com/">https://www.rabbitmq.com/</a>
</li>

<li>RabbitMQ Tutorials<br />
<a href="https://www.rabbitmq.com/getstarted.html">https://www.rabbitmq.com/getstarted.html</a>
</li>

<li>RabbitMQ: Clients and Developer Tools<br />
<a href="https://www.rabbitmq.com/devtools.html">https://www.rabbitmq.com/devtools.html</a>
</li>

<li>RabbitMQ na Wikipedii<br />
<a href="https://en.wikipedia.org/wiki/RabbitMQ">https://en.wikipedia.org/wiki/RabbitMQ</a>
</li>

<li>Streaming Text Oriented Messaging Protocol<br />
<a href="https://en.wikipedia.org/wiki/Streaming_Text_Oriented_Messaging_Protocol">https://en.wikipedia.org/wiki/Streaming_Text_Oriented_Messaging_Protocol</a>
</li>

<li>Message Queuing Telemetry Transport<br />
<a href="https://en.wikipedia.org/wiki/MQTT">https://en.wikipedia.org/wiki/MQTT</a>
</li>

<li>Erlang<br />
<a href="http://www.erlang.org/">http://www.erlang.org/</a>
</li>

<li>pika 0.12.0 na PyPi<br />
<a href="https://pypi.org/project/pika/">https://pypi.org/project/pika/</a>
</li>

<li>Introduction to Pika<br />
<a href="https://pika.readthedocs.io/en/stable/">https://pika.readthedocs.io/en/stable/</a>
</li>

<li>Langohr: An idiomatic Clojure client for RabbitMQ that embraces the AMQP 0.9.1 model<br />
<a href="http://clojurerabbitmq.info/">http://clojurerabbitmq.info/</a>
</li>

<li>AMQP 0-9-1 Model Explained<br />
<a href="http://www.rabbitmq.com/tutorials/amqp-concepts.html">http://www.rabbitmq.com/tutorials/amqp-concepts.html</a>
</li>

<li>Part 1: RabbitMQ for beginners - What is RabbitMQ?<br />
<a href="https://www.cloudamqp.com/blog/2015-05-18-part1-rabbitmq-for-beginners-what-is-rabbitmq.html">https://www.cloudamqp.com/blog/2015-05-18-part1-rabbitmq-for-beginners-what-is-rabbitmq.html</a>
</li>

<li>Downloading and Installing RabbitMQ<br />
<a href="https://www.rabbitmq.com/download.html">https://www.rabbitmq.com/download.html</a>
</li>

<li>celery na PyPi<br />
<a href="https://pypi.org/project/celery/">https://pypi.org/project/celery/</a>
</li>

<li>Databáze Redis (nejenom) pro vývojáře používající Python <br />
<a href="https://www.root.cz/clanky/databaze-redis-nejenom-pro-vyvojare-pouzivajici-python/">https://www.root.cz/clanky/databaze-redis-nejenom-pro-vyvojare-pouzivajici-python/</a>
</li>

<li>Databáze Redis (nejenom) pro vývojáře používající Python (dokončení)<br />
<a href="https://www.root.cz/clanky/databaze-redis-nejenom-pro-vyvojare-pouzivajici-python-dokonceni/">https://www.root.cz/clanky/databaze-redis-nejenom-pro-vyvojare-pouzivajici-python-dokonceni/</a>
</li>

<li>Redis Queue (RQ)<br />
<a href="https://www.fullstackpython.com/redis-queue-rq.html">https://www.fullstackpython.com/redis-queue-rq.html</a>
</li>

<li>Python Celery &amp; RabbitMQ Tutorial<br />
<a href="https://tests4geeks.com/python-celery-rabbitmq-tutorial/">https://tests4geeks.com/python-celery-rabbitmq-tutorial/</a>
</li>

<li>Flower: Real-time Celery web-monitor<br />
<a href="http://docs.celeryproject.org/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor">http://docs.celeryproject.org/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor</a>
</li>

<li>Asynchronous Tasks With Django and Celery<br />
<a href="https://realpython.com/asynchronous-tasks-with-django-and-celery/">https://realpython.com/asynchronous-tasks-with-django-and-celery/</a>
</li>

<li>First Steps with Celery<br />
<a href="http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html">http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html</a>
</li>

<li>node-celery<br />
<a href="https://github.com/mher/node-celery">https://github.com/mher/node-celery</a>
</li>

<li>Full Stack Python: web development<br />
<a href="https://www.fullstackpython.com/web-development.html">https://www.fullstackpython.com/web-development.html</a>
</li>

<li>Introducing RQ<br />
<a href="https://nvie.com/posts/introducing-rq/">https://nvie.com/posts/introducing-rq/</a>
</li>

<li>Asynchronous Tasks with Flask and Redis Queue<br />
<a href="https://testdriven.io/asynchronous-tasks-with-flask-and-redis-queue">https://testdriven.io/asynchronous-tasks-with-flask-and-redis-queue</a>
</li>

<li>rq-dashboard<br />
<a href="https://github.com/eoranged/rq-dashboard">https://github.com/eoranged/rq-dashboard</a>
</li>

<li>Stránky projektu Redis<br />
<a href="https://redis.io/">https://redis.io/</a>
</li>

<li>Introduction to Redis<br />
<a href="https://redis.io/topics/introduction">https://redis.io/topics/introduction</a>
</li>

<li>Try Redis<br />
<a href="http://try.redis.io/">http://try.redis.io/</a>
</li>

<li>Redis tutorial, April 2010 (starší, ale pěkně udělaný)<br />
<a href="https://static.simonwillison.net/static/2010/redis-tutorial/">https://static.simonwillison.net/static/2010/redis-tutorial/</a>
</li>

<li>Python Redis<br />
<a href="https://redislabs.com/lp/python-redis/">https://redislabs.com/lp/python-redis/</a>
</li>

<li>Redis: key-value databáze v paměti i na disku<br />
<a href="https://www.zdrojak.cz/clanky/redis-key-value-databaze-v-pameti-i-na-disku/">https://www.zdrojak.cz/clanky/redis-key-value-databaze-v-pameti-i-na-disku/</a>
</li>

<li>Praktický úvod do Redis (1): vaše distribuovaná NoSQL cache<br />
<a href="http://www.cloudsvet.cz/?p=253">http://www.cloudsvet.cz/?p=253</a>
</li>

<li>Praktický úvod do Redis (2): transakce<br />
<a href="http://www.cloudsvet.cz/?p=256">http://www.cloudsvet.cz/?p=256</a>
</li>

<li>Praktický úvod do Redis (3): cluster<br />
<a href="http://www.cloudsvet.cz/?p=258">http://www.cloudsvet.cz/?p=258</a>
</li>

<li>Connection pool<br />
<a href="https://en.wikipedia.org/wiki/Connection_pool">https://en.wikipedia.org/wiki/Connection_pool</a>
</li>

<li>Instant Redis Sentinel Setup<br />
<a href="https://github.com/ServiceStack/redis-config">https://github.com/ServiceStack/redis-config</a>
</li>

<li>How to install REDIS in LInux<br />
<a href="https://linuxtechlab.com/how-install-redis-server-linux/">https://linuxtechlab.com/how-install-redis-server-linux/</a>
</li>

<li>Redis RDB Dump File Format<br />
<a href="https://github.com/sripathikrishnan/redis-rdb-tools/wiki/Redis-RDB-Dump-File-Format">https://github.com/sripathikrishnan/redis-rdb-tools/wiki/Redis-RDB-Dump-File-Format</a>
</li>

<li>Lempel–Ziv–Welch<br />
<a href="https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch">https://en.wikipedia.org/wiki/Lempel%E2%80%93Ziv%E2%80%93Welch</a>
</li>

<li>Redis Persistence<br />
<a href="https://redis.io/topics/persistence">https://redis.io/topics/persistence</a>
</li>

<li>Redis persistence demystified<br />
<a href="http://oldblog.antirez.com/post/redis-persistence-demystified.html">http://oldblog.antirez.com/post/redis-persistence-demystified.html</a>
</li>

<li>Redis reliable queues with Lua scripting<br />
<a href="http://oldblog.antirez.com/post/250">http://oldblog.antirez.com/post/250</a>
</li>

<li>Ost (knihovna)<br />
<a href="https://github.com/soveran/ost">https://github.com/soveran/ost</a>
</li>

<li>NoSQL<br />
<a href="https://en.wikipedia.org/wiki/NoSQL">https://en.wikipedia.org/wiki/NoSQL</a>
</li>

<li>Shard (database architecture)<br />
<a href="https://en.wikipedia.org/wiki/Shard_%28database_architecture%29">https://en.wikipedia.org/wiki/Shard_%28database_architecture%29</a>
</li>

<li>What is sharding and why is it important?<br />
<a href="https://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important">https://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important</a>
</li>

<li>What Is Sharding?<br />
<a href="https://btcmanager.com/what-sharding/">https://btcmanager.com/what-sharding/</a>
</li>

<li>Redis clients<br />
<a href="https://redis.io/clients">https://redis.io/clients</a>
</li>

<li>Category:Lua-scriptable software<br />
<a href="https://en.wikipedia.org/wiki/Category:Lua-scriptable_software">https://en.wikipedia.org/wiki/Category:Lua-scriptable_software</a>
</li>

<li>Seriál Programovací jazyk Lua<br />
<a href="https://www.root.cz/serialy/programovaci-jazyk-lua/">https://www.root.cz/serialy/programovaci-jazyk-lua/</a>
</li>

<li>Redis memory usage<br />
<a href="http://nosql.mypopescu.com/post/1010844204/redis-memory-usage">http://nosql.mypopescu.com/post/1010844204/redis-memory-usage</a>
</li>

<li>Ukázka konfigurace Redisu pro lokální testování<br />
<a href="https://github.com/tisnik/presentations/blob/master/redis/redis.conf">https://github.com/tisnik/presentations/blob/master/redis/redis.conf</a>
</li>

<li>Resque<br />
<a href="https://github.com/resque/resque">https://github.com/resque/resque</a>
</li>

<li>Nested transaction<br />
<a href="https://en.wikipedia.org/wiki/Nested_transaction">https://en.wikipedia.org/wiki/Nested_transaction</a>
</li>

<li>Publish–subscribe pattern<br />
<a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern">https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern</a>
</li>

<li>Messaging pattern<br />
<a href="https://en.wikipedia.org/wiki/Messaging_pattern">https://en.wikipedia.org/wiki/Messaging_pattern</a>
</li>

<li>Using pipelining to speedup Redis queries<br />
<a href="https://redis.io/topics/pipelining">https://redis.io/topics/pipelining</a>
</li>

<li>Pub/Sub<br />
<a href="https://redis.io/topics/pubsub">https://redis.io/topics/pubsub</a>
</li>

<li>ZeroMQ distributed messaging<br />
<a href="http://zeromq.org/">http://zeromq.org/</a>
</li>

<li>ZeroMQ: Modern &amp; Fast Networking Stack<br />
<a href="https://www.igvita.com/2010/09/03/zeromq-modern-fast-networking-stack/">https://www.igvita.com/2010/09/03/zeromq-modern-fast-networking-stack/</a>
</li>

<li>Publish/Subscribe paradigm: Why must message classes not know about their subscribers?<br />
<a href="https://stackoverflow.com/questions/2908872/publish-subscribe-paradigm-why-must-message-classes-not-know-about-their-subscr">https://stackoverflow.com/questions/2908872/publish-subscribe-paradigm-why-must-message-classes-not-know-about-their-subscr</a>
</li>

<li>Python &amp; Redis PUB/SUB<br />
<a href="https://medium.com/@johngrant/python-redis-pub-sub-6e26b483b3f7">https://medium.com/@johngrant/python-redis-pub-sub-6e26b483b3f7</a>
</li>

<li>Message broker<br />
<a href="https://en.wikipedia.org/wiki/Message_broker">https://en.wikipedia.org/wiki/Message_broker</a>
</li>

<li>RESP Arrays<br />
<a href="https://redis.io/topics/protocol#array-reply">https://redis.io/topics/protocol#array-reply</a>
</li>

<li>Redis Protocol specification<br />
<a href="https://redis.io/topics/protocol">https://redis.io/topics/protocol</a>
</li>

<li>Redis Pub/Sub: Intro Guide<br />
<a href="https://www.redisgreen.net/blog/pubsub-intro/">https://www.redisgreen.net/blog/pubsub-intro/</a>
</li>

<li>Redis Pub/Sub: Howto Guide<br />
<a href="https://www.redisgreen.net/blog/pubsub-howto/">https://www.redisgreen.net/blog/pubsub-howto/</a>
</li>

<li>Comparing Publish-Subscribe Messaging and Message Queuing<br />
<a href="https://dzone.com/articles/comparing-publish-subscribe-messaging-and-message">https://dzone.com/articles/comparing-publish-subscribe-messaging-and-message</a>
</li>

<li>Apache Kafka<br />
<a href="https://kafka.apache.org/">https://kafka.apache.org/</a>
</li>

<li>Iron<br />
<a href="http://www.iron.io/mq">http://www.iron.io/mq</a>
</li>

<li>kue (založeno na Redisu, určeno pro node.js)<br />
<a href="https://github.com/Automattic/kue">https://github.com/Automattic/kue</a>
</li>

<li>Cloud Pub/Sub<br />
<a href="https://cloud.google.com/pubsub/">https://cloud.google.com/pubsub/</a>
</li>

<li>Introduction to Redis Streams<br />
<a href="https://redis.io/topics/streams-intro">https://redis.io/topics/streams-intro</a>
</li>

<li>glob (programming)<br />
<a href="https://en.wikipedia.org/wiki/Glob_(programming)">https://en.wikipedia.org/wiki/Glob_(programming)</a>
</li>

<li>Why and how Pricing Assistant migrated from Celery to RQ - Paris.py<br />
<a href="https://www.slideshare.net/sylvinus/why-and-how-pricing-assistant-migrated-from-celery-to-rq-parispy-2">https://www.slideshare.net/sylvinus/why-and-how-pricing-assistant-migrated-from-celery-to-rq-parispy-2</a>
</li>

<li>Enqueueing internals<br />
<a href="http://python-rq.org/contrib/">http://python-rq.org/contrib/</a>
</li>

<li>queue — A synchronized queue class<br />
<a href="https://docs.python.org/3/library/queue.html">https://docs.python.org/3/library/queue.html</a>
</li>

<li>Queues<br />
<a href="http://queues.io/">http://queues.io/</a>
</li>

<li>Windows Subsystem for Linux Documentation<br />
<a href="https://docs.microsoft.com/en-us/windows/wsl/about">https://docs.microsoft.com/en-us/windows/wsl/about</a>
</li>

<li>RestMQ<br />
<a href="http://restmq.com/">http://restmq.com/</a>
</li>

<li>ActiveMQ<br />
<a href="http://activemq.apache.org/">http://activemq.apache.org/</a>
</li>

<li>Amazon MQ<br />
<a href="https://aws.amazon.com/amazon-mq/">https://aws.amazon.com/amazon-mq/</a>
</li>

<li>Amazon Simple Queue Service<br />
<a href="https://aws.amazon.com/sqs/">https://aws.amazon.com/sqs/</a>
</li>

<li>Celery: Distributed Task Queue<br />
<a href="http://www.celeryproject.org/">http://www.celeryproject.org/</a>
</li>

<li>Disque, an in-memory, distributed job queue<br />
<a href="https://github.com/antirez/disque">https://github.com/antirez/disque</a>
</li>

<li>rq-dashboard<br />
<a href="https://github.com/eoranged/rq-dashboard">https://github.com/eoranged/rq-dashboard</a>
</li>

<li>Projekt RQ na PyPi<br />
<a href="https://pypi.org/project/rq/">https://pypi.org/project/rq/</a>
</li>

<li>rq-dashboard 0.3.12<br />
<a href="https://pypi.org/project/rq-dashboard/">https://pypi.org/project/rq-dashboard/</a>
</li>

<li>Job queue<br />
<a href="https://en.wikipedia.org/wiki/Job_queue">https://en.wikipedia.org/wiki/Job_queue</a>
</li>

<li>Why we moved from Celery to RQ<br />
<a href="https://frappe.io/blog/technology/why-we-moved-from-celery-to-rq">https://frappe.io/blog/technology/why-we-moved-from-celery-to-rq</a>
</li>

<li>Running multiple workers using Celery<br />
<a href="https://serverfault.com/questions/655387/running-multiple-workers-using-celery">https://serverfault.com/questions/655387/running-multiple-workers-using-celery</a>
</li>

<li>celery — Distributed processing<br />
<a href="http://docs.celeryproject.org/en/latest/reference/celery.html">http://docs.celeryproject.org/en/latest/reference/celery.html</a>
</li>

<li>Chains<br />
<a href="https://celery.readthedocs.io/en/latest/userguide/canvas.html#chains">https://celery.readthedocs.io/en/latest/userguide/canvas.html#chains</a>
</li>

<li>Routing<br />
<a href="http://docs.celeryproject.org/en/latest/userguide/routing.html#automatic-routing">http://docs.celeryproject.org/en/latest/userguide/routing.html#automatic-routing</a>
</li>

<li>Celery Distributed Task Queue in Go<br />
<a href="https://github.com/gocelery/gocelery/">https://github.com/gocelery/gocelery/</a>
</li>

<li>Python Decorators<br />
<a href="https://wiki.python.org/moin/PythonDecorators">https://wiki.python.org/moin/PythonDecorators</a>
</li>

<li>Periodic Tasks<br />
<a href="http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html">http://docs.celeryproject.org/en/latest/userguide/periodic-tasks.html</a>
</li>

<li>celery.schedules<br />
<a href="http://docs.celeryproject.org/en/latest/reference/celery.schedules.html#celery.schedules.crontab">http://docs.celeryproject.org/en/latest/reference/celery.schedules.html#celery.schedules.crontab</a>
</li>

<li>Pros and cons to use Celery vs. RQ<br />
<a href="https://stackoverflow.com/questions/13440875/pros-and-cons-to-use-celery-vs-rq">https://stackoverflow.com/questions/13440875/pros-and-cons-to-use-celery-vs-rq</a>
</li>

<li>Priority queue<br />
<a href="https://en.wikipedia.org/wiki/Priority_queue">https://en.wikipedia.org/wiki/Priority_queue</a>
</li>

<li>Jupyter<br />
<a href="https://jupyter.org/">https://jupyter.org/</a>
</li>

<li>How IPython and Jupyter Notebook work<br />
<a href="https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html">https://jupyter.readthedocs.io/en/latest/architecture/how_jupyter_ipython_work.html</a>
</li>

<li>Context Managers<br />
<a href="http://book.pythontips.com/en/latest/context_managers.html">http://book.pythontips.com/en/latest/context_managers.html</a>
</li>

</ol>



<p></p><p></p>
<p><small>Autor: <a href="http://www.fit.vutbr.cz/~tisnovpa">Pavel Tišnovský</a> &nbsp; 2019</small></p>
</body>
</html>

